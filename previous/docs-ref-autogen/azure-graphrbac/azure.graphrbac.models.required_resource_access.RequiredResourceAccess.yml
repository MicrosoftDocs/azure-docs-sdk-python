### YamlMime:PythonClass
uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess
name: RequiredResourceAccess
fullName: azure.graphrbac.models.required_resource_access.RequiredResourceAccess
module: azure.graphrbac.models.required_resource_access
inheritances:
- msrest.serialization.Model
summary: 'Specifies the set of OAuth 2.0 permission scopes and app roles under the

  specified resource that an application requires access to. The specified

  OAuth 2.0 permission scopes may be requested by client applications

  (through the requiredResourceAccess collection) when calling a resource

  application. The requiredResourceAccess property of the Application entity

  is a collection of RequiredResourceAccess.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: RequiredResourceAccess(**kwargs)
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are

      deserialized this collection'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: resource_access
    description: 'Required. The list of OAuth2.0 permission scopes

      and app roles that the application requires from the specified resource.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.graphrbac.models.ResourceAccess>]
  - name: resource_app_id
    description: 'The unique identifier for the resource that the

      application requires access to. This should be equal to the appId declared

      on the target resource application.'
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.required_resource_access.RequiredResourceAccess.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
