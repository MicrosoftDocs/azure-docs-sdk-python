### YamlMime:PythonClass
uid: azure.graphrbac.models.service_principal.ServicePrincipal
name: ServicePrincipal
fullName: azure.graphrbac.models.service_principal.ServicePrincipal
module: azure.graphrbac.models.service_principal
inheritances:
- azure.graphrbac.models.directory_object.DirectoryObject
summary: 'Active Directory service principal information.


  Variables are only populated by the server, and will be ignored when

  sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: ServicePrincipal(**kwargs)
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are

      deserialized this collection'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: object_type
    description: Required. Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: account_enabled
    description: 'whether or not the service principal account is

      enabled'
    isRequired: true
    types:
    - <xref:bool>
  - name: alternative_names
    description: alternative names
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: app_id
    description: The application ID.
    isRequired: true
    types:
    - <xref:str>
  - name: app_role_assignment_required
    description: 'Specifies whether an

      AppRoleAssignment to a user or group is required before Azure AD will

      issue a user or access token to the application.'
    isRequired: true
    types:
    - <xref:bool>
  - name: app_roles
    description: 'The collection of application roles that an application

      may declare. These roles can be assigned to users, groups or service

      principals.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.graphrbac.models.AppRole>]
  - name: display_name
    description: The display name of the service principal.
    isRequired: true
    types:
    - <xref:str>
  - name: error_url
    description: 'A URL provided by the author of the associated

      application to report errors when using the application.'
    isRequired: true
    types:
    - <xref:str>
  - name: homepage
    description: The URL to the homepage of the associated application.
    isRequired: true
    types:
    - <xref:str>
  - name: key_credentials
    description: 'The collection of key credentials associated with

      the service principal.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.graphrbac.models.KeyCredential>]
  - name: logout_url
    description: 'A URL provided by the author of the associated

      application to logout'
    isRequired: true
    types:
    - <xref:str>
  - name: password_credentials
    description: 'The collection of password credentials

      associated with the service principal.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.graphrbac.models.PasswordCredential>]
  - name: preferred_token_signing_key_thumbprint
    description: 'The thumbprint of preferred

      certificate to sign the token'
    isRequired: true
    types:
    - <xref:str>
  - name: publisher_name
    description: The publisher's name of the associated application
    isRequired: true
    types:
    - <xref:str>
  - name: reply_urls
    description: 'The URLs that user tokens are sent to for sign in with

      the associated application.  The redirect URIs that the oAuth 2.0

      authorization code and access tokens are sent to for the associated

      application.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: saml_metadata_url
    description: 'The URL to the SAML metadata of the associated

      application'
    isRequired: true
    types:
    - <xref:str>
  - name: service_principal_names
    description: A collection of service principal names.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: service_principal_type
    description: the type of the service principal
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: 'Optional list of tags that you can apply to your service

      principals. Not nullable.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
variables:
- description: The object ID.
  name: object_id
  types:
  - <xref:str>
- description: 'The time at which the directory object was

    deleted.'
  name: deletion_timestamp
  types:
  - <xref:datetime>
- description: 'The display name exposed by the associated

    application.'
  name: app_display_name
  types:
  - <xref:str>
- name: app_owner_tenant_id
  types:
  - <xref:str>
- description: 'The OAuth 2.0 permissions exposed by the

    associated application.'
  name: oauth2_permissions
  types:
  - <xref:list>[<xref:azure.graphrbac.models.OAuth2Permission>]
methods:
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.service_principal.ServicePrincipal.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
