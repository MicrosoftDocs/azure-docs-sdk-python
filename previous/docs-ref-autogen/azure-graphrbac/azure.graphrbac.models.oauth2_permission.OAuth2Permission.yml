### YamlMime:PythonClass
uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission
name: OAuth2Permission
fullName: azure.graphrbac.models.oauth2_permission.OAuth2Permission
module: azure.graphrbac.models.oauth2_permission
inheritances:
- msrest.serialization.Model
summary: 'Represents an OAuth 2.0 delegated permission scope. The specified OAuth
  2.0

  delegated permission scopes may be requested by client applications

  (through the requiredResourceAccess collection on the Application object)

  when calling a resource application. The oauth2Permissions property of the

  ServicePrincipal entity and of the Application entity is a collection of

  OAuth2Permission.'
constructor:
  syntax: OAuth2Permission(**kwargs)
  parameters:
  - name: admin_consent_description
    description: 'Permission help text that appears in the

      admin consent and app assignment experiences.'
    isRequired: true
    types:
    - <xref:str>
  - name: admin_consent_display_name
    description: 'Display name for the permission that

      appears in the admin consent and app assignment experiences.'
    isRequired: true
    types:
    - <xref:str>
  - name: id
    description: 'Unique scope permission identifier inside the oauth2Permissions

      collection.'
    isRequired: true
    types:
    - <xref:str>
  - name: is_enabled
    description: 'When creating or updating a permission, this property

      must be set to true (which is the default). To delete a permission, this

      property must first be set to false. At that point, in a subsequent call,

      the permission may be removed.'
    isRequired: true
    types:
    - <xref:bool>
  - name: type
    description: 'Specifies whether this scope permission can be consented to

      by an end user, or whether it is a tenant-wide permission that must be

      consented to by a Company Administrator. Possible values are "User" or

      "Admin".'
    isRequired: true
    types:
    - <xref:str>
  - name: user_consent_description
    description: 'Permission help text that appears in the

      end user consent experience.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_consent_display_name
    description: 'Display name for the permission that

      appears in the end user consent experience.'
    isRequired: true
    types:
    - <xref:str>
  - name: value
    description: 'The value of the scope claim that the resource application

      should expect in the OAuth 2.0 access token.'
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.oauth2_permission.OAuth2Permission.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
