### YamlMime:PythonClass
uid: azure.graphrbac.models.user.User
name: User
fullName: azure.graphrbac.models.user.User
module: azure.graphrbac.models.user
inheritances:
- azure.graphrbac.models.directory_object.DirectoryObject
summary: 'Active Directory user information.


  Variables are only populated by the server, and will be ignored when

  sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: User(**kwargs)
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are

      deserialized this collection'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: object_type
    description: Required. Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: immutable_id
    description: 'This must be specified if you are using a federated

      domain for the user''s userPrincipalName (UPN) property when creating a new

      user account. It is used to associate an on-premises Active Directory user

      account with their Azure AD user object.'
    isRequired: true
    types:
    - <xref:str>
  - name: usage_location
    description: 'A two letter country code (ISO standard 3166).

      Required for users that will be assigned licenses due to legal requirement

      to check for availability of services in countries. Examples include:

      "US", "JP", and "GB".'
    isRequired: true
    types:
    - <xref:str>
  - name: given_name
    description: The given name for the user.
    isRequired: true
    types:
    - <xref:str>
  - name: surname
    description: The user's surname (family name or last name).
    isRequired: true
    types:
    - <xref:str>
  - name: user_type
    description: 'A string value that can be used to classify user types

      in your directory, such as ''Member'' and ''Guest''. Possible values include:

      ''Member'', ''Guest'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.graphrbac.models.UserType>
  - name: account_enabled
    description: Whether the account is enabled.
    isRequired: true
    types:
    - <xref:bool>
  - name: display_name
    description: The display name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: user_principal_name
    description: The principal name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: mail_nickname
    description: The mail alias for the user.
    isRequired: true
    types:
    - <xref:str>
  - name: mail
    description: The primary email address of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: sign_in_names
    description: The sign-in names of the user.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.graphrbac.models.SignInName>]
variables:
- description: The object ID.
  name: object_id
  types:
  - <xref:str>
- description: 'The time at which the directory object was

    deleted.'
  name: deletion_timestamp
  types:
  - <xref:datetime>
methods:
- uid: azure.graphrbac.models.user.User.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.user.User.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.user.User.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.graphrbac.models.user.User.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.graphrbac.models.user.User.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.graphrbac.models.user.User.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.graphrbac.models.user.User.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
