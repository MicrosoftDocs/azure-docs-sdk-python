### YamlMime:PythonClass
uid: azure.mgmt.videoanalyzer.models.PipelineTopologyUpdate
name: PipelineTopologyUpdate
fullName: azure.mgmt.videoanalyzer.models.PipelineTopologyUpdate
module: azure.mgmt.videoanalyzer.models
inheritances:
- azure.mgmt.videoanalyzer.models._models_py3.ProxyResource
summary: "Pipeline topology describes the processing steps to be applied when processing\
  \ content for a particular outcome. The topology should be defined according to\
  \ the scenario to be achieved and can be reused across many pipeline instances which\
  \ share the same processing characteristics. For instance, a pipeline topology which\
  \ captures content from a RTSP camera and archives the content can be reused across\
  \ many different cameras, as long as the same processing is to be applied across\
  \ all the cameras. Individual instance properties can be defined through the use\
  \ of user-defined parameters, which allow for a topology to be parameterized. This\
  \ allows  individual pipelines refer to different values, such as individual cameras'\
  \ RTSP endpoints and credentials. Overall a topology is composed of the following:\n\
  \n* Parameters: list of user defined parameters that can be references across the\
  \ topology nodes. \n\n* Sources: list of one or more data sources nodes such as\
  \ an RTSP source which allows for content to be ingested from cameras. \n\n* Processors:\
  \ list of nodes which perform data analysis or transformations. \n\n* Sinks: list\
  \ of one or more data sinks which allow for data to be stored or exported to other\
  \ destinations. \n\n     Variables are only populated by the server, and will be\
  \ ignored when sending a request.\n\n     ivar id:\n        Fully qualified resource\
  \ ID for the resource. Ex -\n        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\n\
  \n     vartype id:\n        str\n\n     ivar name:\n        The name of the resource.\n\
  \n     vartype name:\n        str\n\n     ivar type:\n        The type of the resource.\
  \ E.g. \"Microsoft.Compute/virtualMachines\" or\n        \"Microsoft.Storage/storageAccounts\"\
  .\n\n     vartype type:\n        str\n\n     ivar system_data:\n        Azure Resource\
  \ Manager metadata containing createdBy and modifiedBy\n        information.\n\n\
  \     vartype system_data:\n        ~video_analyzer.models.SystemData\n\n     param\
  \ kind:\n        Topology kind. Possible values include: \"Live\", \"Batch\".\n\n\
  \     type kind:\n        str or ~video_analyzer.models.Kind\n\n     param sku:\n\
  \        Describes the properties of a SKU.\n\n     type sku:\n        ~video_analyzer.models.Sku\n\
  \n     param description:\n        An optional description of the pipeline topology.\
  \ It is recommended that\n        the expected use of the topology to be described\
  \ here.\n\n     type description:\n        str\n\n     param parameters:\n     \
  \   List of the topology parameter declarations. Parameters declared here can be\n\
  \        referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\"\
  \ string pattern.\n        Parameters can have optional default values and can later\
  \ be defined in individual instances of\n        the pipeline.\n\n     type parameters:\n\
  \        list[~video_analyzer.models.ParameterDeclaration]\n\n     param sources:\n\
  \        List of the topology source nodes. Source nodes enable external data to\
  \ be\n        ingested by the pipeline.\n\n     type sources:\n        list[~video_analyzer.models.SourceNodeBase]\n\
  \n     param processors:\n        List of the topology processor nodes. Processor\
  \ nodes enable pipeline data\n        to be analyzed, processed or transformed.\n\
  \n     type processors:\n        list[~video_analyzer.models.ProcessorNodeBase]\n\
  \n     param sinks:\n        List of the topology sink nodes. Sink nodes allow pipeline\
  \ data to be stored or\n        exported.\n\n     type sinks:\n        list[~video_analyzer.models.SinkNodeBase]"
constructor:
  syntax: 'PipelineTopologyUpdate(*, kind: str | Kind | None = None, sku: Sku | None
    = None, description: str | None = None, parameters: List[ParameterDeclaration]
    | None = None, sources: List[SourceNodeBase] | None = None, processors: List[ProcessorNodeBase]
    | None = None, sinks: List[SinkNodeBase] | None = None, **kwargs)'
  keywordOnlyParameters:
  - name: kind
    isRequired: true
  - name: sku
    isRequired: true
  - name: description
    isRequired: true
  - name: parameters
    isRequired: true
  - name: sources
    isRequired: true
  - name: processors
    isRequired: true
  - name: sinks
    isRequired: true
