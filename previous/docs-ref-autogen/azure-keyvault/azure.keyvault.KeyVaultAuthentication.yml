### YamlMime:PythonClass
uid: azure.keyvault.KeyVaultAuthentication
name: KeyVaultAuthentication
fullName: azure.keyvault.KeyVaultAuthentication
module: azure.keyvault
inheritances:
- msrest.authentication.OAuthTokenAuthentication
summary: "Authentication class to be used as credentials for the KeyVaultClient.\n\
  :Example Usage:\n\n   def auth_callack(server, resource, scope):\n      self.data_creds\
  \ = self.data_creds or ServicePrincipalCredentials(client_id=self.config.client_id,\n\
  \         secret=self.config.client_secret,\n         tenant=self.config.tenant_id,\n\
  \         resource=resource)\n\n      token = self.data_creds.token\n      return\
  \ token['token_type'], token['access_token']\n\n   self.keyvault_data_client = KeyVaultClient(KeyVaultAuthentication(auth_callack))"
constructor:
  syntax: KeyVaultAuthentication(authorization_callback=None, credentials=None)
methods:
- uid: azure.keyvault.KeyVaultAuthentication.refresh_session
  name: refresh_session
  summary: 'Return updated session if token has expired, attempts to

    refresh using refresh token.'
  signature: refresh_session()
  return:
    types:
    - <xref:requests.Session.>
- uid: azure.keyvault.KeyVaultAuthentication.signed_session
  name: signed_session
  summary: 'Create requests session with any required auth headers applied.


    If a session object is provided, configure it directly. Otherwise,

    create a new session and return it.'
  signature: signed_session(session=None)
  parameters:
  - name: session
    description: The session to configure for authentication
    isRequired: true
    defaultValue: None
    types:
    - <xref:requests.Session>
  return:
    types:
    - <xref:requests.Session>
