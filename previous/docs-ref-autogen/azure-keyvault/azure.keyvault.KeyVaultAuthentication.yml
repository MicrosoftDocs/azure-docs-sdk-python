### YamlMime:PythonClass
uid: azure.keyvault.KeyVaultAuthentication
name: KeyVaultAuthentication
fullName: azure.keyvault.KeyVaultAuthentication
module: azure.keyvault
inheritances:
- msrest.authentication.OAuthTokenAuthentication
summary: "Authentication class to be used as credentials for the KeyVaultClient.\n\
  :Example Usage:\n\n   def auth_callack(server, resource, scope):\n      self.data_creds\
  \ = self.data_creds or ServicePrincipalCredentials(client_id=self.config.client_id,\n\
  \         secret=self.config.client_secret,\n         tenant=self.config.tenant_id,\n\
  \         resource=resource)\n\n      token = self.data_creds.token\n      return\
  \ token['token_type'], token['access_token']\n\n   self.keyvault_data_client = KeyVaultClient(KeyVaultAuthentication(auth_callack))\n\
  \nCreates a new KeyVaultAuthentication instance used for authentication in the KeyVaultClient\n\
  :param authorization_callback: A callback used to provide authentication credentials\
  \ to the key vault data service.\nThis callback should take three str arguments:\
  \ authorization uri, resource, and scope, and return\na tuple of (token type, access\
  \ token).\n:param credentials:: Credentials needed for the client to connect to\
  \ Azure.\n:type credentials: :mod:>>`<<A msrestazure Credentials\n\n   object<msrestazure.azure_active_directory>`"
constructor:
  syntax: KeyVaultAuthentication(authorization_callback=None, credentials=None)
  parameters:
  - name: authorization_callback
    defaultValue: None
  - name: credentials
    defaultValue: None
methods:
- uid: azure.keyvault.KeyVaultAuthentication.construct_auth
  name: construct_auth
  summary: Format token header.
  signature: construct_auth() -> str
  return:
    types:
    - <xref:str>
- uid: azure.keyvault.KeyVaultAuthentication.refresh_session
  name: refresh_session
  summary: 'Return updated session if token has expired, attempts to

    refresh using refresh token.'
  signature: refresh_session()
  return:
    types:
    - <xref:requests.Session.>
- uid: azure.keyvault.KeyVaultAuthentication.set_token
  name: set_token
  summary: 'Should be used to define the self.token attribute.


    In this implementation, does nothing since the token is statically provided

    at creation.'
  signature: set_token() -> None
- uid: azure.keyvault.KeyVaultAuthentication.signed_session
  name: signed_session
  signature: signed_session(session=None)
  parameters:
  - name: session
    defaultValue: None
attributes:
- uid: azure.keyvault.KeyVaultAuthentication.header
  name: header
  signature: header = 'Authorization'
