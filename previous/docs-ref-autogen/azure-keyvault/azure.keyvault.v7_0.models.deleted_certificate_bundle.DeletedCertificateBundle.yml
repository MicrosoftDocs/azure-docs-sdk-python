### YamlMime:PythonClass
uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle
name: DeletedCertificateBundle
fullName: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle
module: azure.keyvault.v7_0.models.deleted_certificate_bundle
inheritances:
- azure.keyvault.v7_0.models.certificate_bundle.CertificateBundle
summary: 'A Deleted Certificate consisting of its previous id, attributes and its

  tags, as well as information on when it will be purged.


  Variables are only populated by the server, and will be ignored when

  sending a request.'
constructor:
  syntax: DeletedCertificateBundle(**kwargs)
  parameters:
  - name: cer
    description: CER contents of x509 certificate.
    isRequired: true
    types:
    - <xref:bytearray>
  - name: content_type
    description: The content type of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: attributes
    description: The certificate attributes.
    isRequired: true
    types:
    - <xref:azure.keyvault.v7_0.models.CertificateAttributes>
  - name: tags
    description: Application specific metadata in the form of key-value pairs
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: recovery_id
    description: 'The url of the recovery object, used to identify and

      recover the deleted certificate.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: The certificate id.
  name: id
  types:
  - <xref:str>
- description: The key id.
  name: kid
  types:
  - <xref:str>
- description: The secret id.
  name: sid
  types:
  - <xref:str>
- description: Thumbprint of the certificate.
  name: x509_thumbprint
  types:
  - <xref:bytes>
- description: The management policy.
  name: policy
  types:
  - <xref:azure.keyvault.v7_0.models.CertificatePolicy>
- description: 'The time when the certificate is scheduled to

    be purged, in UTC'
  name: scheduled_purge_date
  types:
  - <xref:datetime>
- description: The time when the certificate was deleted, in UTC
  name: deleted_date
  types:
  - <xref:datetime>
methods:
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.keyvault.v7_0.models.deleted_certificate_bundle.DeletedCertificateBundle.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
