### YamlMime:PythonClass
uid: azure.keyvault.HttpBearerChallenge
name: HttpBearerChallenge
fullName: azure.keyvault.HttpBearerChallenge
module: azure.keyvault
inheritances:
- builtins.object
constructor:
  syntax: HttpBearerChallenge(request_uri, challenge)
methods:
- uid: azure.keyvault.HttpBearerChallenge.get_authorization_server
  name: get_authorization_server
  summary: Returns the URI for the authorization server if present, otherwise empty
    string.
  signature: get_authorization_server()
- uid: azure.keyvault.HttpBearerChallenge.get_resource
  name: get_resource
  summary: Returns the resource if present, otherwise empty string.
  signature: get_resource()
- uid: azure.keyvault.HttpBearerChallenge.get_scope
  name: get_scope
  summary: Returns the scope if present, otherwise empty string.
  signature: get_scope()
- uid: azure.keyvault.HttpBearerChallenge.get_value
  name: get_value
  signature: get_value(key)
  parameters:
  - name: key
    isRequired: true
- uid: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  name: is_bearer_challenge
  summary: 'Tests whether an authentication header is a Bearer challenge.

    :param authentication_header: the authentication header to test

    rtype: bool'
  signature: is_bearer_challenge(authentication_header)
  parameters:
  - name: authentication_header
    isRequired: true
