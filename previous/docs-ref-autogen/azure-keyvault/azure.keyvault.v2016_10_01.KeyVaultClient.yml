### YamlMime:PythonClass
uid: azure.keyvault.v2016_10_01.KeyVaultClient
name: KeyVaultClient
fullName: azure.keyvault.v2016_10_01.KeyVaultClient
module: azure.keyvault.v2016_10_01
inheritances:
- msrest.service_client.SDKClient
summary: The key vault client performs cryptographic key operations and vault operations
  against the Key Vault service.
constructor:
  syntax: KeyVaultClient(credentials)
  parameters:
  - name: credentials
    description: Credentials needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:msrestazure.azure_active_directory>
variables:
- description: Configuration for client.
  name: config
  types:
  - <xref:azure.keyvault.key_vault_client.KeyVaultClientConfiguration>
methods:
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.backup_key
  name: backup_key
  summary: 'Requests that a backup of the specified key be downloaded to the

    client.


    The Key Backup operation exports a key from Azure Key Vault in a

    protected form. Note that this operation does NOT return key material

    in a form that can be used outside the Azure Key Vault system, the

    returned key material is either protected to a Azure Key Vault HSM or

    to Azure Key Vault itself. The intent of this operation is to allow a

    client to GENERATE a key in one Azure Key Vault instance, BACKUP the

    key, and then RESTORE it into another Azure Key Vault instance. The

    BACKUP operation may be used to export, in protected form, any key type

    from Azure Key Vault. Individual versions of a key cannot be backed up.

    BACKUP / RESTORE can be performed within geographical boundaries only;

    meaning that a BACKUP from one geographical area cannot be restored to

    another geographical area. For example, a backup from the US

    geographical area cannot be restored in an EU geographical area. This

    operation requires the key/backup permission.'
  signature: backup_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: BackupKeyResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.BackupKeyResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.backup_secret
  name: backup_secret
  summary: 'Backs up the specified secret.


    Requests that a backup of the specified secret be downloaded to the

    client. All versions of the secret will be downloaded. This operation

    requires the secrets/backup permission.'
  signature: backup_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: BackupSecretResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.BackupSecretResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.close
  name: close
  summary: Close the client if keep_alive is True.
  signature: close() -> None
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.create_certificate
  name: create_certificate
  summary: 'Creates a new certificate.


    If this is the first version, the certificate resource is created. This

    operation requires the certificates/create permission.'
  signature: create_certificate(vault_base_url, certificate_name, certificate_policy=None,
    certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_policy
    description: The management policy for the certificate.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
  - name: certificate_attributes
    description: 'The attributes of the certificate

      (optional).'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateOperation or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateOperation>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.create_key
  name: create_key
  summary: 'Creates a new key, stores it, then returns key parameters and

    attributes to the client.


    The create key operation can be used to create any key type in Azure

    Key Vault. If the named key already exists, Azure Key Vault creates a

    new version of the key. It requires the keys/create permission.'
  signature: create_key(vault_base_url, key_name, kty, key_size=None, key_ops=None,
    key_attributes=None, tags=None, curve=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: 'The name for the new key. The system will generate

      the version name for the new key.'
    isRequired: true
    types:
    - <xref:str>
  - name: kty
    description: 'The type of key to create. For valid values, see

      JsonWebKeyType. Possible values include: ''EC'', ''EC-HSM'', ''RSA'',

      ''RSA-HSM'', ''oct'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyType>
  - name: key_size
    description: 'The key size in bits. For example: 2048, 3072, or

      4096 for RSA.'
    defaultValue: None
    types:
    - <xref:int>
  - name: key_ops
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyOperation>]
  - name: key_attributes
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: curve
    description: 'Elliptic curve name. For valid values, see

      JsonWebKeyCurveName. Possible values include: ''P-256'', ''P-384'',

      ''P-521'', ''SECP256K1'''
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyCurveName>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.decrypt
  name: decrypt
  summary: 'Decrypts a single block of encrypted data.


    The DECRYPT operation decrypts a well-formed block of ciphertext using

    the target encryption key and specified algorithm. This operation is

    the reverse of the ENCRYPT operation; only a single block of data may

    be decrypted, the size of this block is dependent on the target key and

    the algorithm to be used. The DECRYPT operation applies to asymmetric

    and symmetric keys stored in Azure Key Vault since it uses the private

    portion of the key. This operation requires the keys/decrypt

    permission.'
  signature: decrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'algorithm identifier. Possible values include:

      ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm>
  - name: value
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyOperationResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyOperationResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_certificate
  name: delete_certificate
  summary: 'Deletes a certificate from a specified key vault.


    Deletes all versions of a certificate object along with its associated

    policy. Delete certificate cannot be used to remove individual versions

    of a certificate object. This operation requires the

    certificates/delete permission.'
  signature: delete_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedCertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedCertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_certificate_contacts
  name: delete_certificate_contacts
  summary: 'Deletes the certificate contacts for a specified key vault.


    Deletes the certificate contacts for a specified key vault certificate.

    This operation requires the certificates/managecontacts permission.'
  signature: delete_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Contacts or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.Contacts>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_certificate_issuer
  name: delete_certificate_issuer
  summary: 'Deletes the specified certificate issuer.


    The DeleteCertificateIssuer operation permanently removes the specified

    certificate issuer from the vault. This operation requires the

    certificates/manageissuers/deleteissuers permission.'
  signature: delete_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: issuer_name
    description: The name of the issuer.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: IssuerBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_certificate_operation
  name: delete_certificate_operation
  summary: 'Deletes the creation operation for a specific certificate.


    Deletes the creation operation for a specified certificate that is in

    the process of being created. The certificate is no longer created.

    This operation requires the certificates/update permission.'
  signature: delete_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateOperation or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateOperation>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_key
  name: delete_key
  summary: 'Deletes a key of any type from storage in Azure Key Vault.


    The delete key operation cannot be used to remove individual versions

    of a key. This operation removes the cryptographic material associated

    with the key, which means the key is not usable for Sign/Verify,

    Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the

    keys/delete permission.'
  signature: delete_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedKeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedKeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_sas_definition
  name: delete_sas_definition
  summary: 'Deletes a SAS definition from a specified storage account. This

    operation requires the storage/deletesas permission.'
  signature: delete_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: sas_definition_name
    description: The name of the SAS definition.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SasDefinitionBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_secret
  name: delete_secret
  summary: 'Deletes a secret from a specified key vault.


    The DELETE operation applies to any secret stored in Azure Key Vault.

    DELETE cannot be applied to an individual version of a secret. This

    operation requires the secrets/delete permission.'
  signature: delete_secret(vault_base_url, secret_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedSecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedSecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.delete_storage_account
  name: delete_storage_account
  summary: 'Deletes a storage account. This operation requires the storage/delete

    permission.'
  signature: delete_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: StorageBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.encrypt
  name: encrypt
  summary: 'Encrypts an arbitrary sequence of bytes using an encryption key that is

    stored in a key vault.


    The ENCRYPT operation encrypts an arbitrary sequence of bytes using an

    encryption key that is stored in Azure Key Vault. Note that the ENCRYPT

    operation only supports a single block of data, the size of which is

    dependent on the target key and the encryption algorithm to be used.

    The ENCRYPT operation is only strictly necessary for symmetric keys

    stored in Azure Key Vault since protection with an asymmetric key can

    be performed using public portion of the key. This operation is

    supported for asymmetric keys as a convenience for callers that have a

    key-reference but do not have access to the public key material. This

    operation requires the keys/encypt permission.'
  signature: encrypt(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'algorithm identifier. Possible values include:

      ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm>
  - name: value
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyOperationResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyOperationResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate
  name: get_certificate
  summary: 'Gets information about a certificate.


    Gets information about a specific certificate. This operation requires

    the certificates/get permission.'
  signature: get_certificate(vault_base_url, certificate_name, certificate_version,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: 'The name of the certificate in the given

      vault.'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_version
    description: The version of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_contacts
  name: get_certificate_contacts
  summary: 'Lists the certificate contacts for a specified key vault.


    The GetCertificateContacts operation returns the set of certificate

    contact resources in the specified key vault. This operation requires

    the certificates/managecontacts permission.'
  signature: get_certificate_contacts(vault_base_url, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Contacts or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.Contacts>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_issuer
  name: get_certificate_issuer
  summary: 'Lists the specified certificate issuer.


    The GetCertificateIssuer operation returns the specified certificate

    issuer resources in the specified key vault. This operation requires

    the certificates/manageissuers/getissuers permission.'
  signature: get_certificate_issuer(vault_base_url, issuer_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: issuer_name
    description: The name of the issuer.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: IssuerBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_issuers
  name: get_certificate_issuers
  summary: 'List certificate issuers for a specified key vault.


    The GetCertificateIssuers operation returns the set of certificate

    issuer resources in the specified key vault. This operation requires

    the certificates/manageissuers/getissuers permission.'
  signature: get_certificate_issuers(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CertificateIssuerItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateIssuerItemPaged>[<xref:azure.keyvault.v2016_10_01.models.CertificateIssuerItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_operation
  name: get_certificate_operation
  summary: 'Gets the creation operation of a certificate.


    Gets the creation operation associated with a specified certificate.

    This operation requires the certificates/get permission.'
  signature: get_certificate_operation(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateOperation or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateOperation>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_policy
  name: get_certificate_policy
  summary: 'Lists the policy for a certificate.


    The GetCertificatePolicy operation returns the specified certificate

    policy resources in the specified key vault. This operation requires

    the certificates/get permission.'
  signature: get_certificate_policy(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: 'The name of the certificate in a given key

      vault.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificatePolicy or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificate_versions
  name: get_certificate_versions
  summary: 'List the versions of a certificate.


    The GetCertificateVersions operation returns the versions of a

    certificate in the specified key vault. This operation requires the

    certificates/list permission.'
  signature: get_certificate_versions(vault_base_url, certificate_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CertificateItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateItemPaged>[<xref:azure.keyvault.v2016_10_01.models.CertificateItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_certificates
  name: get_certificates
  summary: 'List certificates in a specified key vault.


    The GetCertificates operation returns the set of certificates resources

    in the specified key vault. This operation requires the

    certificates/list permission.'
  signature: get_certificates(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CertificateItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateItemPaged>[<xref:azure.keyvault.v2016_10_01.models.CertificateItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_certificate
  name: get_deleted_certificate
  summary: 'Retrieves information about the specified deleted certificate.


    The GetDeletedCertificate operation retrieves the deleted certificate

    information plus its attributes, such as retention interval, scheduled

    permanent deletion and the current deletion recovery level. This

    operation requires the certificates/get permission.'
  signature: get_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedCertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedCertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_certificates
  name: get_deleted_certificates
  summary: 'Lists the deleted certificates in the specified vault currently

    available for recovery.


    The GetDeletedCertificates operation retrieves the certificates in the

    current vault which are in a deleted state and ready for recovery or

    purging. This operation includes deletion-specific information. This

    operation requires the certificates/get/list permission. This operation

    can only be enabled on soft-delete enabled vaults.'
  signature: get_deleted_certificates(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of DeletedCertificateItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedCertificateItemPaged>[<xref:azure.keyvault.v2016_10_01.models.DeletedCertificateItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_key
  name: get_deleted_key
  summary: 'Gets the public part of a deleted key.


    The Get Deleted Key operation is applicable for soft-delete enabled

    vaults. While the operation can be invoked on any vault, it will return

    an error if invoked on a non soft-delete enabled vault. This operation

    requires the keys/get permission. .'
  signature: get_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedKeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedKeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_keys
  name: get_deleted_keys
  summary: 'Lists the deleted keys in the specified vault.


    Retrieves a list of the keys in the Key Vault as JSON Web Key

    structures that contain the public part of a deleted key. This

    operation includes deletion-specific information. The Get Deleted Keys

    operation is applicable for vaults enabled for soft-delete. While the

    operation can be invoked on any vault, it will return an error if

    invoked on a non soft-delete enabled vault. This operation requires the

    keys/list permission.'
  signature: get_deleted_keys(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of DeletedKeyItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedKeyItemPaged>[<xref:azure.keyvault.v2016_10_01.models.DeletedKeyItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_secret
  name: get_deleted_secret
  summary: 'Gets the specified deleted secret.


    The Get Deleted Secret operation returns the specified deleted secret

    along with its attributes. This operation requires the secrets/get

    permission.'
  signature: get_deleted_secret(vault_base_url, secret_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: DeletedSecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedSecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_deleted_secrets
  name: get_deleted_secrets
  summary: 'Lists deleted secrets for the specified vault.


    The Get Deleted Secrets operation returns the secrets that have been

    deleted for a vault enabled for soft-delete. This operation requires

    the secrets/list permission.'
  signature: get_deleted_secrets(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of DeletedSecretItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.DeletedSecretItemPaged>[<xref:azure.keyvault.v2016_10_01.models.DeletedSecretItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_key
  name: get_key
  summary: 'Gets the public part of a stored key.


    The get key operation is applicable to all key types. If the requested

    key is symmetric, then no key material is released in the response.

    This operation requires the keys/get permission.'
  signature: get_key(vault_base_url, key_name, key_version, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key to get.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: 'Adding the version parameter retrieves a specific

      version of a key.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_key_versions
  name: get_key_versions
  summary: 'Retrieves a list of individual key versions with the same key name.


    The full key identifier, attributes, and tags are provided in the

    response. This operation requires the keys/list permission.'
  signature: get_key_versions(vault_base_url, key_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of KeyItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyItemPaged>[<xref:azure.keyvault.v2016_10_01.models.KeyItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_keys
  name: get_keys
  summary: 'List keys in the specified vault.


    Retrieves a list of the keys in the Key Vault as JSON Web Key

    structures that contain the public part of a stored key. The LIST

    operation is applicable to all key types, however only the base key

    identifier, attributes, and tags are provided in the response.

    Individual versions of a key are not listed in the response. This

    operation requires the keys/list permission.'
  signature: get_keys(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of KeyItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyItemPaged>[<xref:azure.keyvault.v2016_10_01.models.KeyItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_sas_definition
  name: get_sas_definition
  summary: 'Gets information about a SAS definition for the specified storage

    account. This operation requires the storage/getsas permission.'
  signature: get_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: sas_definition_name
    description: The name of the SAS definition.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SasDefinitionBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_sas_definitions
  name: get_sas_definitions
  summary: 'List storage SAS definitions for the given storage account. This

    operation requires the storage/listsas permission.'
  signature: get_sas_definitions(vault_base_url, storage_account_name, maxresults=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of SasDefinitionItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionItemPaged>[<xref:azure.keyvault.v2016_10_01.models.SasDefinitionItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_secret
  name: get_secret
  summary: 'Get a specified secret from a given key vault.


    The GET operation is applicable to any secret stored in Azure Key

    Vault. This operation requires the secrets/get permission.'
  signature: get_secret(vault_base_url, secret_name, secret_version, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: secret_version
    description: The version of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_secret_versions
  name: get_secret_versions
  summary: 'List all versions of the specified secret.


    The full secret identifier and attributes are provided in the response.

    No values are returned for the secrets. This operations requires the

    secrets/list permission.'
  signature: get_secret_versions(vault_base_url, secret_name, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified, the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of SecretItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretItemPaged>[<xref:azure.keyvault.v2016_10_01.models.SecretItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_secrets
  name: get_secrets
  summary: 'List secrets in a specified key vault.


    The Get Secrets operation is applicable to the entire vault. However,

    only the base secret identifier and its attributes are provided in the

    response. Individual secret versions are not listed in the response.

    This operation requires the secrets/list permission.'
  signature: get_secrets(vault_base_url, maxresults=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified, the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of SecretItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretItemPaged>[<xref:azure.keyvault.v2016_10_01.models.SecretItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_storage_account
  name: get_storage_account
  summary: 'Gets information about a specified storage account. This operation

    requires the storage/get permission.'
  signature: get_storage_account(vault_base_url, storage_account_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: StorageBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.get_storage_accounts
  name: get_storage_accounts
  summary: 'List storage accounts managed by the specified key vault. This

    operation requires the storage/list permission.'
  signature: get_storage_accounts(vault_base_url, maxresults=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: maxresults
    description: 'Maximum number of results to return in a page. If

      not specified the service will return up to 25 results.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of StorageAccountItem
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageAccountItemPaged>[<xref:azure.keyvault.v2016_10_01.models.StorageAccountItem>]
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.import_certificate
  name: import_certificate
  summary: 'Imports a certificate into a specified key vault.


    Imports an existing valid certificate, containing a private key, into

    Azure Key Vault. The certificate to be imported can be in either PFX or

    PEM format. If the certificate is in PEM format the PEM file must

    contain the key as well as x509 certificates. This operation requires

    the certificates/import permission.'
  signature: import_certificate(vault_base_url, certificate_name, base64_encoded_certificate,
    password=None, certificate_policy=None, certificate_attributes=None, tags=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: base64_encoded_certificate
    description: 'Base64 encoded representation of

      the certificate object to import. This certificate needs to contain

      the private key.'
    isRequired: true
    types:
    - <xref:str>
  - name: password
    description: 'If the private key in base64EncodedCertificate is

      encrypted, the password used for encryption.'
    defaultValue: None
    types:
    - <xref:str>
  - name: certificate_policy
    description: The management policy for the certificate.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
  - name: certificate_attributes
    description: 'The attributes of the certificate

      (optional).'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.import_key
  name: import_key
  summary: 'Imports an externally created key, stores it, and returns key

    parameters and attributes to the client.


    The import key operation may be used to import any key type into an

    Azure Key Vault. If the named key already exists, Azure Key Vault

    creates a new version of the key. This operation requires the

    keys/import permission.'
  signature: import_key(vault_base_url, key_name, key, hsm=None, key_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: Name for the imported key.
    isRequired: true
    types:
    - <xref:str>
  - name: key
    description: The Json web key
    isRequired: true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKey>
  - name: hsm
    description: Whether to import as a hardware key (HSM) or software key.
    defaultValue: None
    types:
    - <xref:bool>
  - name: key_attributes
    description: The key management attributes.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.merge_certificate
  name: merge_certificate
  summary: 'Merges a certificate or a certificate chain with a key pair existing on

    the server.


    The MergeCertificate operation performs the merging of a certificate or

    certificate chain with a key pair currently available in the service.

    This operation requires the certificates/create permission.'
  signature: merge_certificate(vault_base_url, certificate_name, x509_certificates,
    certificate_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: x509_certificates
    description: 'The certificate or the certificate chain to

      merge.'
    isRequired: true
    types:
    - <xref:list>[<xref:bytearray>]
  - name: certificate_attributes
    description: 'The attributes of the certificate

      (optional).'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.purge_deleted_certificate
  name: purge_deleted_certificate
  summary: 'Permanently deletes the specified deleted certificate.


    The PurgeDeletedCertificate operation performs an irreversible deletion

    of the specified certificate, without possibility for recovery. The

    operation is not available if the recovery level does not specify

    ''Purgeable''. This operation requires the certificate/purge permission.'
  signature: purge_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.purge_deleted_key
  name: purge_deleted_key
  summary: 'Permanently deletes the specified key.


    The Purge Deleted Key operation is applicable for soft-delete enabled

    vaults. While the operation can be invoked on any vault, it will return

    an error if invoked on a non soft-delete enabled vault. This operation

    requires the keys/purge permission.'
  signature: purge_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.purge_deleted_secret
  name: purge_deleted_secret
  summary: 'Permanently deletes the specified secret.


    The purge deleted secret operation removes the secret permanently,

    without the possibility of recovery. This operation can only be enabled

    on a soft-delete enabled vault. This operation requires the

    secrets/purge permission.'
  signature: purge_deleted_secret(vault_base_url, secret_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.recover_deleted_certificate
  name: recover_deleted_certificate
  summary: 'Recovers the deleted certificate back to its current version under

    /certificates.


    The RecoverDeletedCertificate operation performs the reversal of the

    Delete operation. The operation is applicable in vaults enabled for

    soft-delete, and must be issued during the retention interval

    (available in the deleted certificate''s attributes). This operation

    requires the certificates/recover permission.'
  signature: recover_deleted_certificate(vault_base_url, certificate_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the deleted certificate
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.recover_deleted_key
  name: recover_deleted_key
  summary: 'Recovers the deleted key to its latest version.


    The Recover Deleted Key operation is applicable for deleted keys in

    soft-delete enabled vaults. It recovers the deleted key back to its

    latest version under /keys. An attempt to recover an non-deleted key

    will return an error. Consider this the inverse of the delete operation

    on soft-delete enabled vaults. This operation requires the keys/recover

    permission.'
  signature: recover_deleted_key(vault_base_url, key_name, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the deleted key.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.recover_deleted_secret
  name: recover_deleted_secret
  summary: 'Recovers the deleted secret to the latest version.


    Recovers the deleted secret in the specified vault. This operation can

    only be performed on a soft-delete enabled vault. This operation

    requires the secrets/recover permission.'
  signature: recover_deleted_secret(vault_base_url, secret_name, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the deleted secret.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.regenerate_storage_account_key
  name: regenerate_storage_account_key
  summary: 'Regenerates the specified key value for the given storage account. This

    operation requires the storage/regeneratekey permission.'
  signature: regenerate_storage_account_key(vault_base_url, storage_account_name,
    key_name, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The storage account key name.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: StorageBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.restore_key
  name: restore_key
  summary: 'Restores a backed up key to a vault.


    Imports a previously backed up key into Azure Key Vault, restoring the

    key, its key identifier, attributes and access control policies. The

    RESTORE operation may be used to import a previously backed up key.

    Individual versions of a key cannot be restored. The key is restored in

    its entirety with the same key name as it had when it was backed up. If

    the key name is not available in the target Key Vault, the RESTORE

    operation will be rejected. While the key name is retained during

    restore, the final key identifier will change if the key is restored to

    a different vault. Restore will restore all versions and preserve

    version identifiers. The RESTORE operation is subject to security

    constraints: The target Key Vault must be owned by the same Microsoft

    Azure Subscription as the source Key Vault The user must have RESTORE

    permission in the target Key Vault. This operation requires the

    keys/restore permission.'
  signature: restore_key(vault_base_url, key_bundle_backup, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_bundle_backup
    description: 'The backup blob associated with a key

      bundle.'
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.restore_secret
  name: restore_secret
  summary: 'Restores a backed up secret to a vault.


    Restores a backed up secret, and all its versions, to a vault. This

    operation requires the secrets/restore permission.'
  signature: restore_secret(vault_base_url, secret_bundle_backup, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_bundle_backup
    description: 'The backup blob associated with a secret

      bundle.'
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.set_certificate_contacts
  name: set_certificate_contacts
  summary: 'Sets the certificate contacts for the specified key vault.


    Sets the certificate contacts for the specified key vault. This

    operation requires the certificates/managecontacts permission.'
  signature: set_certificate_contacts(vault_base_url, contact_list=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: contact_list
    description: The contact list for the vault certificates.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.keyvault.v2016_10_01.models.Contact>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Contacts or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.Contacts>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.set_certificate_issuer
  name: set_certificate_issuer
  summary: 'Sets the specified certificate issuer.


    The SetCertificateIssuer operation adds or updates the specified

    certificate issuer. This operation requires the certificates/setissuers

    permission.'
  signature: set_certificate_issuer(vault_base_url, issuer_name, provider, credentials=None,
    organization_details=None, attributes=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: issuer_name
    description: The name of the issuer.
    isRequired: true
    types:
    - <xref:str>
  - name: provider
    description: The issuer provider.
    isRequired: true
    types:
    - <xref:str>
  - name: credentials
    description: The credentials to be used for the issuer.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerCredentials>
  - name: organization_details
    description: 'Details of the organization as provided

      to the issuer.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.OrganizationDetails>
  - name: attributes
    description: Attributes of the issuer object.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerAttributes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: IssuerBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.set_sas_definition
  name: set_sas_definition
  summary: 'Creates or updates a new SAS definition for the specified storage

    account. This operation requires the storage/setsas permission.'
  signature: set_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters, sas_definition_attributes=None, tags=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: sas_definition_name
    description: The name of the SAS definition.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Sas definition creation metadata in the form of

      key-value pairs.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sas_definition_attributes
    description: 'The attributes of the SAS

      definition.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SasDefinitionBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.set_secret
  name: set_secret
  summary: 'Sets a secret in a specified key vault.


    The SET operation adds a secret to the Azure Key Vault. If the named

    secret already exists, Azure Key Vault creates a new version of that

    secret. This operation requires the secrets/set permission.'
  signature: set_secret(vault_base_url, secret_name, value, tags=None, content_type=None,
    secret_attributes=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: value
    description: The value of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: content_type
    description: Type of the secret value such as a password.
    defaultValue: None
    types:
    - <xref:str>
  - name: secret_attributes
    description: The secret management attributes.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretAttributes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.set_storage_account
  name: set_storage_account
  summary: 'Creates or updates a new storage account. This operation requires the

    storage/set permission.'
  signature: set_storage_account(vault_base_url, storage_account_name, resource_id,
    active_key_name, auto_regenerate_key, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_id
    description: Storage account resource id.
    isRequired: true
    types:
    - <xref:str>
  - name: active_key_name
    description: Current active storage account key name.
    isRequired: true
    types:
    - <xref:str>
  - name: auto_regenerate_key
    description: 'whether keyvault should manage the storage

      account for the user.'
    isRequired: true
    types:
    - <xref:bool>
  - name: regeneration_period
    description: 'The key regeneration time duration

      specified in ISO-8601 format.'
    defaultValue: None
    types:
    - <xref:str>
  - name: storage_account_attributes
    description: 'The attributes of the storage

      account.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageAccountAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: StorageBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.sign
  name: sign
  summary: 'Creates a signature from a digest using the specified key.


    The SIGN operation is applicable to asymmetric and symmetric keys

    stored in Azure Key Vault since this operation uses the private portion

    of the key. This operation requires the keys/sign permission.'
  signature: sign(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'The signing/verification algorithm identifier. For

      more information on possible algorithm types, see

      JsonWebKeySignatureAlgorithm. Possible values include: ''PS256'',

      ''PS384'', ''PS512'', ''RS256'', ''RS384'', ''RS512'', ''RSNULL'', ''ES256'',

      ''ES384'', ''ES512'', ''ECDSA256'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeySignatureAlgorithm>
  - name: value
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyOperationResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyOperationResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.unwrap_key
  name: unwrap_key
  summary: 'Unwraps a symmetric key using the specified key that was initially used

    for wrapping that key.


    The UNWRAP operation supports decryption of a symmetric key using the

    target key encryption key. This operation is the reverse of the WRAP

    operation. The UNWRAP operation applies to asymmetric and symmetric

    keys stored in Azure Key Vault since it uses the private portion of the

    key. This operation requires the keys/unwrapKey permission.'
  signature: unwrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'algorithm identifier. Possible values include:

      ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm>
  - name: value
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyOperationResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyOperationResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_certificate
  name: update_certificate
  summary: 'Updates the specified attributes associated with the given certificate.


    The UpdateCertificate operation applies the specified update on the

    given certificate; the only elements updated are the certificate''s

    attributes. This operation requires the certificates/update permission.'
  signature: update_certificate(vault_base_url, certificate_name, certificate_version,
    certificate_policy=None, certificate_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: 'The name of the certificate in the given key

      vault.'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_version
    description: The version of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_policy
    description: The management policy for the certificate.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
  - name: certificate_attributes
    description: 'The attributes of the certificate

      (optional).'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_certificate_issuer
  name: update_certificate_issuer
  summary: 'Updates the specified certificate issuer.


    The UpdateCertificateIssuer operation performs an update on the

    specified certificate issuer entity. This operation requires the

    certificates/setissuers permission.'
  signature: update_certificate_issuer(vault_base_url, issuer_name, provider=None,
    credentials=None, organization_details=None, attributes=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: issuer_name
    description: The name of the issuer.
    isRequired: true
    types:
    - <xref:str>
  - name: provider
    description: The issuer provider.
    defaultValue: None
    types:
    - <xref:str>
  - name: credentials
    description: The credentials to be used for the issuer.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerCredentials>
  - name: organization_details
    description: 'Details of the organization as provided

      to the issuer.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.OrganizationDetails>
  - name: attributes
    description: Attributes of the issuer object.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerAttributes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: IssuerBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.IssuerBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_certificate_operation
  name: update_certificate_operation
  summary: 'Updates a certificate operation.


    Updates a certificate creation operation that is already in progress.

    This operation requires the certificates/update permission.'
  signature: update_certificate_operation(vault_base_url, certificate_name, cancellation_requested,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cancellation_requested
    description: 'Indicates if cancellation was requested

      on the certificate operation.'
    isRequired: true
    types:
    - <xref:bool>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificateOperation or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificateOperation>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_certificate_policy
  name: update_certificate_policy
  summary: 'Updates the policy for a certificate.


    Set specified members in the certificate policy. Leave others as null.

    This operation requires the certificates/update permission.'
  signature: update_certificate_policy(vault_base_url, certificate_name, certificate_policy,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: 'The name of the certificate in the given

      vault.'
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_policy
    description: The policy for the certificate.
    isRequired: true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CertificatePolicy or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.CertificatePolicy>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_key
  name: update_key
  summary: 'The update key operation changes specified attributes of a stored key

    and can be applied to any key type and key version stored in Azure Key

    Vault.


    In order to perform this operation, the key must already exist in the

    Key Vault. Note: The cryptographic material of a key itself cannot be

    changed. This operation requires the keys/update permission.'
  signature: update_key(vault_base_url, key_name, key_version, key_ops=None, key_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of key to update.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key to update.
    isRequired: true
    types:
    - <xref:str>
  - name: key_ops
    description: 'Json web key operations. For more information on

      possible key operations, see JsonWebKeyOperation.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyOperation>]
  - name: key_attributes
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_sas_definition
  name: update_sas_definition
  summary: 'Updates the specified attributes associated with the given SAS

    definition. This operation requires the storage/setsas permission.'
  signature: update_sas_definition(vault_base_url, storage_account_name, sas_definition_name,
    parameters=None, sas_definition_attributes=None, tags=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: sas_definition_name
    description: The name of the SAS definition.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Sas definition update metadata in the form of

      key-value pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sas_definition_attributes
    description: 'The attributes of the SAS

      definition.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SasDefinitionBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SasDefinitionBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_secret
  name: update_secret
  summary: 'Updates the attributes associated with a specified secret in a given

    key vault.


    The UPDATE operation changes specified attributes of an existing stored

    secret. Attributes that are not specified in the request are left

    unchanged. The value of a secret itself cannot be changed. This

    operation requires the secrets/set permission.'
  signature: update_secret(vault_base_url, secret_name, secret_version, content_type=None,
    secret_attributes=None, tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: secret_name
    description: The name of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: secret_version
    description: The version of the secret.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: Type of the secret value such as a password.
    defaultValue: None
    types:
    - <xref:str>
  - name: secret_attributes
    description: The secret management attributes.
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: SecretBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.SecretBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.update_storage_account
  name: update_storage_account
  summary: 'Updates the specified attributes associated with the given storage

    account. This operation requires the storage/set/update permission.'
  signature: update_storage_account(vault_base_url, storage_account_name, active_key_name=None,
    auto_regenerate_key=None, regeneration_period=None, storage_account_attributes=None,
    tags=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_name
    description: The name of the storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: active_key_name
    description: The current active storage account key name.
    defaultValue: None
    types:
    - <xref:str>
  - name: auto_regenerate_key
    description: 'whether keyvault should manage the storage

      account for the user.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: regeneration_period
    description: 'The key regeneration time duration

      specified in ISO-8601 format.'
    defaultValue: None
    types:
    - <xref:str>
  - name: storage_account_attributes
    description: 'The attributes of the storage

      account.'
    defaultValue: None
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageAccountAttributes>
  - name: tags
    description: 'Application specific metadata in the form of key-value

      pairs.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: StorageBundle or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.StorageBundle>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.verify
  name: verify
  summary: 'Verifies a signature using a specified key.


    The VERIFY operation is applicable to symmetric keys stored in Azure

    Key Vault. VERIFY is not strictly necessary for asymmetric keys stored

    in Azure Key Vault since signature verification can be performed using

    the public portion of the key but this operation is supported as a

    convenience for callers that only have a key-reference and not the

    public portion of the key. This operation requires the keys/verify

    permission.'
  signature: verify(vault_base_url, key_name, key_version, algorithm, digest, signature,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'The signing/verification algorithm. For more

      information on possible algorithm types, see

      JsonWebKeySignatureAlgorithm. Possible values include: ''PS256'',

      ''PS384'', ''PS512'', ''RS256'', ''RS384'', ''RS512'', ''RSNULL'', ''ES256'',

      ''ES384'', ''ES512'', ''ECDSA256'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeySignatureAlgorithm>
  - name: digest
    description: The digest used for signing.
    isRequired: true
    types:
    - <xref:bytes>
  - name: signature
    description: The signature to be verified.
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyVerifyResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyVerifyResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
- uid: azure.keyvault.v2016_10_01.KeyVaultClient.wrap_key
  name: wrap_key
  summary: 'Wraps a symmetric key using a specified key.


    The WRAP operation supports encryption of a symmetric key using a key

    encryption key that has previously been stored in an Azure Key Vault.

    The WRAP operation is only strictly necessary for symmetric keys stored

    in Azure Key Vault since protection with an asymmetric key can be

    performed using the public portion of the key. This operation is

    supported for asymmetric keys as a convenience for callers that have a

    key-reference but do not have access to the public key material. This

    operation requires the keys/wrapKey permission.'
  signature: wrap_key(vault_base_url, key_name, key_version, algorithm, value, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: vault_base_url
    description: 'The vault name, for example

      [https://myvault.vault.azure.net](https://myvault.vault.azure.net).'
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: key_version
    description: The version of the key.
    isRequired: true
    types:
    - <xref:str>
  - name: algorithm
    description: 'algorithm identifier. Possible values include:

      ''RSA-OAEP'', ''RSA-OAEP-256'', ''RSA1_5'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.v2016_10_01.models.JsonWebKeyEncryptionAlgorithm>
  - name: value
    isRequired: true
    types:
    - <xref:bytes>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: KeyOperationResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.keyvault.v2016_10_01.models.KeyOperationResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.keyvault.v2016_10_01.models.KeyVaultErrorException
