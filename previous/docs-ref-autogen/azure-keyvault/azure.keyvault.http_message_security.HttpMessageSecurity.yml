### YamlMime:PythonClass
uid: azure.keyvault.http_message_security.HttpMessageSecurity
name: HttpMessageSecurity
fullName: azure.keyvault.http_message_security.HttpMessageSecurity
module: azure.keyvault.http_message_security
inheritances:
- builtins.object
summary: 'Used for message authorization, encryption and decrtyption.


  This class is intended for internal use only.  Details are subject to non-compatible
  changes, consumers of the

  azure-keyvault module should not take dependencies on this class or its current
  implementation.'
constructor:
  syntax: HttpMessageSecurity(client_security_token=None, client_signature_key=None,
    client_encryption_key=None, server_signature_key=None, server_encryption_key=None)
methods:
- uid: azure.keyvault.http_message_security.HttpMessageSecurity.protect_request
  name: protect_request
  summary: 'Adds authorization header, and encrypts and signs the request if supported
    on the specific request.

    :param request: unprotected request to apply security protocol

    :return: protected request with appropriate security protocal applied'
  signature: protect_request(request)
  parameters:
  - name: request
    isRequired: true
- uid: azure.keyvault.http_message_security.HttpMessageSecurity.supports_protection
  name: supports_protection
  summary: 'Determines if the the current HttpMessageSecurity object supports the
    message protection protocol.

    :return: True if the current object supports protection, otherwise False'
  signature: supports_protection()
- uid: azure.keyvault.http_message_security.HttpMessageSecurity.unprotect_response
  name: unprotect_response
  summary: 'Removes protection from the specified response

    :param request: response from the key vault service

    :return: unprotected response with any security protocal encryption removed'
  signature: unprotect_response(response, **kwargs)
  parameters:
  - name: response
    isRequired: true
