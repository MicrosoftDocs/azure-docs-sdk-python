### YamlMime:PythonClass
uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource
name: AzureEventHubsDataFeedSource
fullName: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource
module: azure.ai.metricsadvisor.models
summary: AzureEventHubsDataFeedSource.
constructor:
  syntax: 'AzureEventHubsDataFeedSource(consumer_group: str, **kwargs: Any)'
  parameters:
  - name: consumer_group
    description: Required. The consumer group to be used in this data feed.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: credential_id
    description: The datasource credential id.
    types:
    - <xref:str>
  - name: connection_string
    description: The connection string of this Azure Event Hubs.
    types:
    - <xref:str>
variables:
- description: 'Required. data source type.Constant filled by server.  Possible values

    include: "AzureApplicationInsights", "AzureBlob", "AzureCosmosDB", "AzureDataExplorer",

    "AzureDataLakeStorageGen2", "AzureEventHubs", "AzureLogAnalytics", "AzureTable",
    "InfluxDB",

    "MongoDB", "MySql", "PostgreSql", "SqlServer".'
  name: data_source_type
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DatasourceType>
- description: 'authentication type for corresponding data source. Possible values

    include: "Basic", "ManagedIdentity", "AzureSQLConnectionString", "DataLakeGen2SharedKey",

    "ServicePrincipal", "ServicePrincipalInKV". Default is "Basic".'
  name: authentication_type
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DatasourceAuthenticationType>
methods:
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
- uid: azure.ai.metricsadvisor.models.AzureEventHubsDataFeedSource.values
  name: values
  signature: values() -> an object providing a view on D's values
