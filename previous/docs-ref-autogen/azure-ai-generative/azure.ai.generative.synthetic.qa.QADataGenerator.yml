### YamlMime:PythonClass
uid: azure.ai.generative.synthetic.qa.QADataGenerator
name: QADataGenerator
fullName: azure.ai.generative.synthetic.qa.QADataGenerator
module: azure.ai.generative.synthetic.qa
inheritances:
- builtins.object
summary: 'Class for generating Question-Answer data from text.


  Initialize QADataGenerator using Azure OpenAI details.'
constructor:
  syntax: 'QADataGenerator(model_config: Dict)'
  parameters:
  - name: model_config
    isRequired: true
methods:
- uid: azure.ai.generative.synthetic.qa.QADataGenerator.export_to_file
  name: export_to_file
  summary: 'Writes results from QA gen to a jsonl file for Promptflow batch run results
    is either a list of questions

    and answers or list of list of questions and answers grouped by their chunk e.g.
    [("How are you?",

    "I am good.")] or [ [("How are you?", "I am good.")], [("What can I do?", "Tell
    me a joke.")].'
  signature: 'export_to_file(output_path: str, qa_type: QAType, results: List | List[List],
    output_format: OutputStructure = OutputStructure.PROMPTFLOW, field_mapping: Dict[str,
    str] | None = None)'
  parameters:
  - name: output_path
    description: The path to the output file.
    isRequired: true
    types:
    - <xref:str>
  - name: qa_type
    description: The type of QA data.
    isRequired: true
    types:
    - <xref:azure.ai.generative.synthetic.qa.QAType>
  - name: results
    description: The results of the QA generation.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:typing.List>, <xref:typing.List>[<xref:typing.List>]]
  - name: output_format
    description: The output structure format.
    isRequired: true
    types:
    - <xref:azure.ai.generative.synthetic.qa.OutputStructure>, <xref:optional>
  - name: field_mapping
    description: The field mapping for the output structure.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]], <xref:optional>
- uid: azure.ai.generative.synthetic.qa.QADataGenerator.generate
  name: generate
  signature: 'generate(text: str, qa_type: QAType, num_questions: int | None = None)
    -> Dict'
- uid: azure.ai.generative.synthetic.qa.QADataGenerator.generate_async
  name: generate_async
  signature: 'generate_async(text: str, qa_type: QAType, num_questions: int | None
    = None) -> Dict'
