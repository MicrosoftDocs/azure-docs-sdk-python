### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.synapse.operations.Operations.check_name_availability
  - azure.mgmt.synapse.operations.Operations.get_azure_async_header_result
  - azure.mgmt.synapse.operations.Operations.get_location_header_result
  - azure.mgmt.synapse.operations.Operations.list
  - azure.mgmt.synapse.operations.Operations.models
  class: azure.mgmt.synapse.operations.Operations
  fullName: azure.mgmt.synapse.operations.Operations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: Operations
  summary: 'Operations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: Operations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2019-06-01-preview".'
      id: api_version
  type: class
  uid: azure.mgmt.synapse.operations.Operations
- class: azure.mgmt.synapse.operations.Operations
  exceptions:
  - type: azure.mgmt.synapse.models.ErrorContractException
  fullName: azure.mgmt.synapse.operations.Operations.check_name_availability
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: check_name_availability(name=None, type=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: check_name_availability
  summary: 'Check name availability.


    Check whether a workspace name is available.'
  syntax:
    content: check_name_availability(name=None, type=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: None
      description: Workspace name
      id: name
      type:
      - str
    - defaultValue: None
      description: 'Type: workspace'
      id: type
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'CheckNameAvailabilityResponse or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.synapse.models.CheckNameAvailabilityResponse
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.synapse.operations.Operations.check_name_availability
- class: azure.mgmt.synapse.operations.Operations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.synapse.operations.Operations.get_azure_async_header_result
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: get_azure_async_header_result(resource_group_name, workspace_name, operation_id,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_azure_async_header_result
  summary: 'Get operation status.


    Get the status of an operation.'
  syntax:
    content: get_azure_async_header_result(resource_group_name, workspace_name, operation_id,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the workspace
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Operation ID
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: object or ClientRawResponse if raw=true
      type:
      - object
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.synapse.operations.Operations.get_azure_async_header_result
- class: azure.mgmt.synapse.operations.Operations
  exceptions:
  - type: azure.mgmt.synapse.models.ErrorContractException
  fullName: azure.mgmt.synapse.operations.Operations.get_location_header_result
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: get_location_header_result(resource_group_name, workspace_name, operation_id,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_location_header_result
  summary: 'Get operation result.


    Get the result of an operation.'
  syntax:
    content: get_location_header_result(resource_group_name, workspace_name, operation_id,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the workspace
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Operation ID
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.synapse.operations.Operations.get_location_header_result
- class: azure.mgmt.synapse.operations.Operations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.synapse.operations.Operations.list
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: list(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: 'All operations.


    Get all available operations.'
  syntax:
    content: list(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.mgmt.synapse.models.AvailableRpOperation]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.synapse.operations.Operations.list
- class: azure.mgmt.synapse.operations.Operations
  fullName: azure.mgmt.synapse.operations.Operations.models
  langs:
  - python
  module: azure.mgmt.synapse.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.synapse.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\synapse\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.synapse.operations.Operations.models
references:
- fullName: azure.mgmt.synapse.operations.Operations.check_name_availability
  isExternal: false
  name: check_name_availability(name=None, type=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.synapse.operations.Operations
  uid: azure.mgmt.synapse.operations.Operations.check_name_availability
- fullName: azure.mgmt.synapse.operations.Operations.get_azure_async_header_result
  isExternal: false
  name: get_azure_async_header_result(resource_group_name, workspace_name, operation_id,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.synapse.operations.Operations
  uid: azure.mgmt.synapse.operations.Operations.get_azure_async_header_result
- fullName: azure.mgmt.synapse.operations.Operations.get_location_header_result
  isExternal: false
  name: get_location_header_result(resource_group_name, workspace_name, operation_id,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.synapse.operations.Operations
  uid: azure.mgmt.synapse.operations.Operations.get_location_header_result
- fullName: azure.mgmt.synapse.operations.Operations.list
  isExternal: false
  name: list(custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.synapse.operations.Operations
  uid: azure.mgmt.synapse.operations.Operations.list
- fullName: azure.mgmt.synapse.operations.Operations.models
  isExternal: false
  name: models
  parent: azure.mgmt.synapse.operations.Operations
  uid: azure.mgmt.synapse.operations.Operations.models
- fullName: list[azure.mgmt.synapse.models.AvailableRpOperation]
  name: list[AvailableRpOperation]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.synapse.models.AvailableRpOperation
    name: AvailableRpOperation
    uid: azure.mgmt.synapse.models.AvailableRpOperation
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.synapse.models.AvailableRpOperation]
