### YamlMime:PythonClass
uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations
name: ReportOperations
fullName: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations
module: azure.mgmt.appcomplianceautomation.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.appcomplianceautomation.aio.AppComplianceAutomationMgmtClient>'s\n\
  >\n> <xref:report> attribute.\n>"
constructor:
  syntax: ReportOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation

    report.'
  signature: 'async begin_create_or_update(report_name: str, properties: _models.ReportResource,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.ReportResource]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: 'Parameters for the create or update operation. Is either a ReportResource

      type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.ReportResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ReportResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.appcomplianceautomation.models.ReportResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_delete
  name: begin_delete
  summary: Delete an AppComplianceAutomation report.
  signature: 'async begin_delete(report_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_fix
  name: begin_fix
  summary: 'Fix the AppComplianceAutomation report error. e.g: App Compliance Automation
    Tool service

    unregistered, automation removed.'
  signature: 'async begin_fix(report_name: str, **kwargs: Any) -> AsyncLROPoller[ReportFixResult]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of AsyncLROPoller that returns either ReportFixResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.appcomplianceautomation.models.ReportFixResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_sync_cert_record
  name: begin_sync_cert_record
  summary: Synchronize attestation record from app compliance.
  signature: 'async begin_sync_cert_record(report_name: str, body: _models.SyncCertRecordRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.SyncCertRecordResponse]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: 'Parameters for synchronize certification record operation. Is either
      a

      SyncCertRecordRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.SyncCertRecordRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either SyncCertRecordResponse
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.appcomplianceautomation.models.SyncCertRecordResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_update
  name: begin_update
  summary: Update an exiting AppComplianceAutomation report.
  signature: 'async begin_update(report_name: str, properties: _models.ReportResourcePatch,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.ReportResource]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: 'Parameters for the create or update operation. Is either a

      ReportResourcePatch type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.ReportResourcePatch>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ReportResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.appcomplianceautomation.models.ReportResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.begin_verify
  name: begin_verify
  summary: Verify the AppComplianceAutomation report health status.
  signature: 'async begin_verify(report_name: str, **kwargs: Any) -> AsyncLROPoller[ReportVerificationResult]'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of AsyncLROPoller that returns either ReportVerificationResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.appcomplianceautomation.models.ReportVerificationResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.get
  name: get
  summary: Get the AppComplianceAutomation report and its properties.
  signature: 'async get(report_name: str, **kwargs: Any) -> ReportResource'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ReportResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.ReportResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.get_scoping_questions
  name: get_scoping_questions
  summary: 'Fix the AppComplianceAutomation report error. e.g: App Compliance Automation
    Tool service

    unregistered, automation removed.'
  signature: 'async get_scoping_questions(report_name: str, **kwargs: Any) -> ScopingQuestions'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ScopingQuestions or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.ScopingQuestions>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.list
  name: list
  summary: Get the AppComplianceAutomation report list for the tenant.
  signature: 'list(skip_token: str | None = None, top: int | None = None, select:
    str | None = None, filter: str | None = None, orderby: str | None = None, offer_guid:
    str | None = None, report_creator_tenant_id: str | None = None, **kwargs: Any)
    -> AsyncIterable[ReportResource]'
  parameters:
  - name: skip_token
    description: Skip over when retrieving results. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of elements to return when retrieving results. Default value
      is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: select
    description: 'OData Select statement. Limits the properties on each entry to just
      those

      requested, e.g. ?$select=reportName,id. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: orderby
    description: OData order by query option. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: offer_guid
    description: The offerGuid which mapping to the reports. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: report_creator_tenant_id
    description: The tenant id of the report creator. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either ReportResource or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.appcomplianceautomation.models.ReportResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.nested_resource_check_name_availability
  name: nested_resource_check_name_availability
  summary: 'Checks the report''s nested resource name availability, e.g: Webhooks,
    Evidences, Snapshots.'
  signature: 'async nested_resource_check_name_availability(report_name: str, body:
    _models.CheckNameAvailabilityRequest, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.CheckNameAvailabilityResponse'
  parameters:
  - name: report_name
    description: Report Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: 'NameAvailabilityRequest object. Is either a CheckNameAvailabilityRequest
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.CheckNameAvailabilityRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckNameAvailabilityResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcomplianceautomation.models.CheckNameAvailabilityResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.appcomplianceautomation.aio.operations.ReportOperations.models
  name: models
  signature: models = <module 'azure.mgmt.appcomplianceautomation.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.10\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv60\\Lib\\site-packages\\azure\\mgmt\\appcomplianceautomation\\models\\__init__.py'>
