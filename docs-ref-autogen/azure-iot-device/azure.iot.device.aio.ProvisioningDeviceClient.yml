### YamlMime:PythonClass
uid: azure.iot.device.aio.ProvisioningDeviceClient
name: ProvisioningDeviceClient
fullName: azure.iot.device.aio.ProvisioningDeviceClient
module: azure.iot.device.aio
inheritances:
- azure.iot.device.provisioning.abstract_provisioning_device_client.AbstractProvisioningDeviceClient
summary: 'Client which can be used to run the registration of a device with provisioning
  service

  using Symmetric Key or X509 authentication.'
constructor:
  syntax: ProvisioningDeviceClient(pipeline)
methods:
- uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
  name: create_from_symmetric_key
  summary: 'Create a client which can be used to run the registration of a device
    with provisioning service

    using Symmetric Key authentication.'
  signature: create_from_symmetric_key(provisioning_host, registration_id, id_scope,
    symmetric_key, **kwargs)
  parameters:
  - name: provisioning_host
    description: 'Host running the Device Provisioning Service.

      Can be found in the Azure portal in the Overview tab as the string Global device
      endpoint.'
    isRequired: true
    types:
    - <xref:str>
  - name: registration_id
    description: 'The registration ID used to uniquely identify a device in the

      Device Provisioning Service. The registration ID is alphanumeric, lowercase
      string

      and may contain hyphens.'
    isRequired: true
    types:
    - <xref:str>
  - name: id_scope
    description: 'The ID scope used to uniquely identify the specific provisioning

      service the device will register through. The ID scope is assigned to a

      Device Provisioning Service when it is created by the user and is generated
      by the

      service and is immutable, guaranteeing uniqueness.'
    isRequired: true
    types:
    - <xref:str>
  - name: symmetric_key
    description: 'The key which will be used to create the shared access signature

      token to authenticate the device with the Device Provisioning Service. By default,

      the Device Provisioning Service creates new symmetric keys with a default length
      of

      32 bytes when new enrollments are saved with the Auto-generate keys option enabled.

      Users can provide their own symmetric keys for enrollments by disabling this
      option

      within 16 bytes and 64 bytes and in valid Base64 format.'
    isRequired: true
    types:
    - <xref:str>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: keepalive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A ProvisioningDeviceClient instance which can register via Symmetric
      Key.
- uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
  name: create_from_x509_certificate
  summary: 'Create a client which can be used to run the registration of a device
    with

    provisioning service using X509 certificate authentication.'
  signature: create_from_x509_certificate(provisioning_host, registration_id, id_scope,
    x509, **kwargs)
  parameters:
  - name: provisioning_host
    description: 'Host running the Device Provisioning Service. Can be found in

      the Azure portal in the Overview tab as the string Global device endpoint.'
    isRequired: true
    types:
    - <xref:str>
  - name: registration_id
    description: 'The registration ID used to uniquely identify a device in the

      Device Provisioning Service. The registration ID is alphanumeric, lowercase
      string

      and may contain hyphens.'
    isRequired: true
    types:
    - <xref:str>
  - name: id_scope
    description: 'The ID scope is used to uniquely identify the specific

      provisioning service the device will register through. The ID scope is assigned
      to a

      Device Provisioning Service when it is created by the user and is generated
      by the

      service and is immutable, guaranteeing uniqueness.'
    isRequired: true
    types:
    - <xref:str>
  - name: x509
    description: 'The x509 certificate, To use the certificate the enrollment object
      needs to

      contain cert (either the root certificate or one of the intermediate CA certificates).

      If the cert comes from a CER file, it needs to be base64 encoded.'
    isRequired: true
    types:
    - <xref:azure.iot.device.X509>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: keepalive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A ProvisioningDeviceClient which can register via X509 client certificates.
- uid: azure.iot.device.aio.ProvisioningDeviceClient.register
  name: register
  summary: 'Register the device with the provisioning service.


    Before returning the client will also disconnect from the provisioning service.

    If a registration attempt is made while a previous registration is in progress
    it may

    throw an error.


    Once the device is successfully registered, the client will no longer be operable.'
  signature: register()
  return:
    description: RegistrationResult indicating the result of the registration.
    types:
    - <xref:azure.iot.device.RegistrationResult>
