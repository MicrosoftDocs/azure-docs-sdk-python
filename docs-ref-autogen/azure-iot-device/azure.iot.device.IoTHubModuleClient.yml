### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.IoTHubModuleClient.connect
  - azure.iot.device.IoTHubModuleClient.create_from_connection_string
  - azure.iot.device.IoTHubModuleClient.create_from_edge_environment
  - azure.iot.device.IoTHubModuleClient.create_from_x509_certificate
  - azure.iot.device.IoTHubModuleClient.disconnect
  - azure.iot.device.IoTHubModuleClient.get_twin
  - azure.iot.device.IoTHubModuleClient.invoke_method
  - azure.iot.device.IoTHubModuleClient.patch_twin_reported_properties
  - azure.iot.device.IoTHubModuleClient.receive_message_on_input
  - azure.iot.device.IoTHubModuleClient.receive_method_request
  - azure.iot.device.IoTHubModuleClient.receive_twin_desired_properties_patch
  - azure.iot.device.IoTHubModuleClient.send_message
  - azure.iot.device.IoTHubModuleClient.send_message_to_output
  - azure.iot.device.IoTHubModuleClient.send_method_response
  class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
    type: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
    type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  langs:
  - python
  module: azure.iot.device
  name: IoTHubModuleClient
  summary: 'A synchronous module client that connects to an Azure IoT Hub or Azure
    IoT Edge instance.


    Intended for usage with Python 2.7 or compatibility scenarios for Python 3.5.3+.'
  syntax:
    content: IoTHubModuleClient(mqtt_pipeline, http_pipeline)
  type: class
  uid: azure.iot.device.IoTHubModuleClient
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.connect
  langs:
  - python
  module: azure.iot.device
  name: connect()
  namewithoutparameters: connect
  summary: 'Connects the client to an Azure IoT Hub or Azure IoT Edge Hub instance.


    The destination is chosen based on the credentials passed via the auth_provider
    parameter

    that was provided when this object was initialized.


    This is a synchronous call, meaning that this function will not return until the
    connection

    to the service has been completely established.'
  syntax:
    content: connect()
    parameters: []
  type: method
  uid: azure.iot.device.IoTHubModuleClient.connect
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.create_from_connection_string
  langs:
  - python
  module: azure.iot.device
  name: create_from_connection_string(connection_string, **kwargs)
  namewithoutparameters: create_from_connection_string
  summary: Instantiate the client from a IoTHub device or module connection string.
  syntax:
    content: create_from_connection_string(connection_string, **kwargs)
    parameters:
    - description: The connection string for the IoTHub you wish to connect to.
      id: connection_string
      isRequired: true
      type:
      - str
    - description: 'Configuration Option. The trusted certificate chain.

        Necessary when using connecting to an endpoint which has a non-standard root
        of trust,

        such as a protocol gateway.'
      id: server_verification_cert
      isRequired: true
      type:
      - str
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      isRequired: true
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      isRequired: true
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      isRequired: true
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      isRequired: true
      type:
      - azure.iot.device.ProxyOptions
    - description: 'The time to live (in seconds) for the created SasToken used for

        authentication. Default is 3600 seconds (1 hour)'
      id: sastoken_ttl
      isRequired: true
      type:
      - int
    return:
      description: An instance of an IoTHub client that uses a connection string for
        authentication.
  type: method
  uid: azure.iot.device.IoTHubModuleClient.create_from_connection_string
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.create_from_edge_environment
  langs:
  - python
  module: azure.iot.device
  name: create_from_edge_environment(**kwargs)
  namewithoutparameters: create_from_edge_environment
  summary: 'Instantiate the client from the IoT Edge environment.


    This method can only be run from inside an IoT Edge container, or in a debugging

    environment configured for Edge development (e.g. Visual Studio, Visual Studio
    Code)'
  syntax:
    content: create_from_edge_environment(**kwargs)
    parameters:
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      isRequired: true
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      isRequired: true
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      isRequired: true
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      isRequired: true
      type:
      - azure.iot.device.ProxyOptions
    - description: 'The time to live (in seconds) for the created SasToken used for

        authentication. Default is 3600 seconds (1 hour)'
      id: sastoken_ttl
      isRequired: true
      type:
      - int
    return:
      description: 'An instance of an IoTHub client that uses the IoT Edge environment
        for

        authentication.'
  type: method
  uid: azure.iot.device.IoTHubModuleClient.create_from_edge_environment
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.create_from_x509_certificate
  langs:
  - python
  module: azure.iot.device
  name: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
  namewithoutparameters: create_from_x509_certificate
  summary: Instantiate a client which using X509 certificate authentication.
  syntax:
    content: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
    parameters:
    - description: 'Host running the IotHub.

        Can be found in the Azure portal in the Overview tab as the string hostname.'
      id: hostname
      isRequired: true
      type:
      - str
    - description: 'The complete x509 certificate object.

        To use the certificate the enrollment object needs to contain cert

        (either the root certificate or one of the intermediate CA certificates).

        If the cert comes from a CER file, it needs to be base64 encoded.'
      id: x509
      isRequired: true
      type:
      - azure.iot.device.X509
    - description: The ID used to uniquely identify a device in the IoTHub
      id: device_id
      isRequired: true
      type:
      - str
    - description: The ID used to uniquely identify a module on a device on the IoTHub.
      id: module_id
      isRequired: true
      type:
      - str
    - description: 'Configuration Option. The trusted certificate chain.

        Necessary when using connecting to an endpoint which has a non-standard root
        of trust,

        such as a protocol gateway.'
      id: server_verification_cert
      isRequired: true
      type:
      - str
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      isRequired: true
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      isRequired: true
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      isRequired: true
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      isRequired: true
      type:
      - azure.iot.device.ProxyOptions
    return:
      description: An instance of an IoTHub client that uses an X509 certificate for
        authentication.
  type: method
  uid: azure.iot.device.IoTHubModuleClient.create_from_x509_certificate
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.disconnect
  langs:
  - python
  module: azure.iot.device
  name: disconnect()
  namewithoutparameters: disconnect
  summary: 'Disconnect the client from the Azure IoT Hub or Azure IoT Edge Hub instance.


    This is a synchronous call, meaning that this function will not return until the
    connection

    to the service has been completely closed.'
  syntax:
    content: disconnect()
    parameters: []
  type: method
  uid: azure.iot.device.IoTHubModuleClient.disconnect
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.get_twin
  langs:
  - python
  module: azure.iot.device
  name: get_twin()
  namewithoutparameters: get_twin
  summary: 'Gets the device or module twin from the Azure IoT Hub or Azure IoT Edge
    Hub service.


    This is a synchronous call, meaning that this function will not return until the
    twin

    has been retrieved from the service.'
  syntax:
    content: get_twin()
    parameters: []
    return:
      description: Complete Twin as a JSON dict
      type:
      - dict
  type: method
  uid: azure.iot.device.IoTHubModuleClient.get_twin
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.invoke_method
  langs:
  - python
  module: azure.iot.device
  name: invoke_method(method_params, device_id, module_id=None)
  namewithoutparameters: invoke_method
  summary: Invoke a method from your client onto a device or module client, and receive
    the response to the method call.
  syntax:
    content: invoke_method(method_params, device_id, module_id=None)
    parameters:
    - description: Should contain a method_name, payload, connect_timeout_in_seconds,
        response_timeout_in_seconds.
      id: method_params
      isRequired: true
      type:
      - dict
    - description: Device ID of the target device where the method will be invoked.
      id: device_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Module ID of the target module where the method will be invoked.
        (Optional)
      id: module_id
      type:
      - str
    return:
      description: method_result should contain a status, and a payload
      type:
      - dict
  type: method
  uid: azure.iot.device.IoTHubModuleClient.invoke_method
- class: azure.iot.device.IoTHubModuleClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.IoTHubModuleClient.patch_twin_reported_properties
  langs:
  - python
  module: azure.iot.device
  name: patch_twin_reported_properties(reported_properties_patch)
  namewithoutparameters: patch_twin_reported_properties
  summary: 'Update reported properties with the Azure IoT Hub or Azure IoT Edge Hub
    service.


    This is a synchronous call, meaning that this function will not return until the
    patch

    has been sent to the service and acknowledged.


    If the service returns an error on the patch operation, this function will raise
    the

    appropriate error.'
  syntax:
    content: patch_twin_reported_properties(reported_properties_patch)
    parameters:
    - description: Twin Reported Properties patch as a JSON dict
      id: reported_properties_patch
      isRequired: true
      type:
      - dict
  type: method
  uid: azure.iot.device.IoTHubModuleClient.patch_twin_reported_properties
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.receive_message_on_input
  langs:
  - python
  module: azure.iot.device
  name: receive_message_on_input(input_name, block=True, timeout=None)
  namewithoutparameters: receive_message_on_input
  summary: Receive an input message that has been sent from another Module to a specific
    input.
  syntax:
    content: receive_message_on_input(input_name, block=True, timeout=None)
    parameters:
    - description: The input name to receive a message on.
      id: input_name
      isRequired: true
      type:
      - str
    - defaultValue: 'True'
      description: Indicates if the operation should block until a message is received.
      id: block
      type:
      - bool
    - defaultValue: None
      description: Optionally provide a number of seconds until blocking times out.
      id: timeout
      type:
      - int
    return:
      description: 'Message that was sent to the specified input, or None if

        no method request has been received by the end of the blocking period.'
  type: method
  uid: azure.iot.device.IoTHubModuleClient.receive_message_on_input
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.receive_method_request
  langs:
  - python
  module: azure.iot.device
  name: receive_method_request(method_name=None, block=True, timeout=None)
  namewithoutparameters: receive_method_request
  summary: Receive a method request via the Azure IoT Hub or Azure IoT Edge Hub.
  syntax:
    content: receive_method_request(method_name=None, block=True, timeout=None)
    parameters:
    - defaultValue: None
      description: 'Optionally provide the name of the method to receive requests
        for.

        If this parameter is not given, all methods not already being specifically
        targeted by

        a different request to receive_method will be received.'
      id: method_name
      type:
      - str
    - defaultValue: 'True'
      description: Indicates if the operation should block until a request is received.
      id: block
      type:
      - bool
    - defaultValue: None
      description: Optionally provide a number of seconds until blocking times out.
      id: timeout
      type:
      - int
    return:
      description: 'MethodRequest object representing the received method request,
        or None if

        no method request has been received by the end of the blocking period.'
  type: method
  uid: azure.iot.device.IoTHubModuleClient.receive_method_request
- class: azure.iot.device.IoTHubModuleClient
  fullName: azure.iot.device.IoTHubModuleClient.receive_twin_desired_properties_patch
  langs:
  - python
  module: azure.iot.device
  name: receive_twin_desired_properties_patch(block=True, timeout=None)
  namewithoutparameters: receive_twin_desired_properties_patch
  summary: "Receive a desired property patch via the Azure IoT Hub or Azure IoT Edge\
    \ Hub.\n\nThis is a synchronous call, which means the following:\n1. If block=True,\
    \ this function will block until one of the following happens:\n\n\n   * a desired\
    \ proprety patch is received from the Azure IoT Hub or Azure IoT Edge Hub. \n\n\
    \   * the timeout period, if provided, elapses.  If a timeout happens, this function\
    \ will raise a InboxEmpty exception \n\n\n2. If block=False, this function will\
    \ return any desired property patches which may have been received by the pipeline,\
    \ but not yet returned to the application.  If no desired property patches have\
    \ been received by the pipeline, this function will raise an InboxEmpty exception"
  syntax:
    content: receive_twin_desired_properties_patch(block=True, timeout=None)
    parameters:
    - defaultValue: 'True'
      description: Indicates if the operation should block until a request is received.
      id: block
      type:
      - bool
    - defaultValue: None
      description: Optionally provide a number of seconds until blocking times out.
      id: timeout
      type:
      - int
    return:
      description: 'Twin Desired Properties patch as a JSON dict, or None if no patch
        has been

        received by the end of the blocking period'
      type:
      - dict
      - None
  type: method
  uid: azure.iot.device.IoTHubModuleClient.receive_twin_desired_properties_patch
- class: azure.iot.device.IoTHubModuleClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.IoTHubModuleClient.send_message
  langs:
  - python
  module: azure.iot.device
  name: send_message(message)
  namewithoutparameters: send_message
  summary: 'Sends a message to the default events endpoint on the Azure IoT Hub or
    Azure IoT Edge Hub instance.


    This is a synchronous event, meaning that this function will not return until
    the event

    has been sent to the service and the service has acknowledged receipt of the event.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_message(message)
    parameters:
    - description: 'The actual message to send. Anything passed that is not an instance
        of the

        Message class will be converted to Message object.'
      id: message
      isRequired: true
      type:
      - azure.iot.device.Message
      - str
  type: method
  uid: azure.iot.device.IoTHubModuleClient.send_message
- class: azure.iot.device.IoTHubModuleClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.IoTHubModuleClient.send_message_to_output
  langs:
  - python
  module: azure.iot.device
  name: send_message_to_output(message, output_name)
  namewithoutparameters: send_message_to_output
  summary: 'Sends an event/message to the given module output.


    These are outgoing events and are meant to be "output events".


    This is a synchronous event, meaning that this function will not return until
    the event

    has been sent to the service and the service has acknowledged receipt of the event.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_message_to_output(message, output_name)
    parameters:
    - description: 'Message to send to the given output. Anything passed that is not
        an instance of the

        Message class will be converted to Message object.'
      id: message
      isRequired: true
      type:
      - azure.iot.device.Message
      - str
    - description: Name of the output to send the event to.
      id: output_name
      isRequired: true
      type:
      - str
  type: method
  uid: azure.iot.device.IoTHubModuleClient.send_message_to_output
- class: azure.iot.device.IoTHubModuleClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.IoTHubModuleClient.send_method_response
  langs:
  - python
  module: azure.iot.device
  name: send_method_response(method_response)
  namewithoutparameters: send_method_response
  summary: 'Send a response to a method request via the Azure IoT Hub or Azure IoT
    Edge Hub.


    This is a synchronous event, meaning that this function will not return until
    the event

    has been sent to the service and the service has acknowledged receipt of the event.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_method_response(method_response)
    parameters:
    - description: The MethodResponse to send.
      id: method_response
      isRequired: true
      type:
      - azure.iot.device.MethodResponse
  type: method
  uid: azure.iot.device.IoTHubModuleClient.send_method_response
references:
- fullName: azure.iot.device.IoTHubModuleClient.connect
  isExternal: false
  name: connect()
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.connect
- fullName: azure.iot.device.IoTHubModuleClient.create_from_connection_string
  isExternal: false
  name: create_from_connection_string(connection_string, **kwargs)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.create_from_connection_string
- fullName: azure.iot.device.IoTHubModuleClient.create_from_edge_environment
  isExternal: false
  name: create_from_edge_environment(**kwargs)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.create_from_edge_environment
- fullName: azure.iot.device.IoTHubModuleClient.create_from_x509_certificate
  isExternal: false
  name: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.create_from_x509_certificate
- fullName: azure.iot.device.IoTHubModuleClient.disconnect
  isExternal: false
  name: disconnect()
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.disconnect
- fullName: azure.iot.device.IoTHubModuleClient.get_twin
  isExternal: false
  name: get_twin()
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.get_twin
- fullName: azure.iot.device.IoTHubModuleClient.invoke_method
  isExternal: false
  name: invoke_method(method_params, device_id, module_id=None)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.invoke_method
- fullName: azure.iot.device.IoTHubModuleClient.patch_twin_reported_properties
  isExternal: false
  name: patch_twin_reported_properties(reported_properties_patch)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.patch_twin_reported_properties
- fullName: azure.iot.device.IoTHubModuleClient.receive_message_on_input
  isExternal: false
  name: receive_message_on_input(input_name, block=True, timeout=None)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.receive_message_on_input
- fullName: azure.iot.device.IoTHubModuleClient.receive_method_request
  isExternal: false
  name: receive_method_request(method_name=None, block=True, timeout=None)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.receive_method_request
- fullName: azure.iot.device.IoTHubModuleClient.receive_twin_desired_properties_patch
  isExternal: false
  name: receive_twin_desired_properties_patch(block=True, timeout=None)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.receive_twin_desired_properties_patch
- fullName: azure.iot.device.IoTHubModuleClient.send_message
  isExternal: false
  name: send_message(message)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.send_message
- fullName: azure.iot.device.IoTHubModuleClient.send_message_to_output
  isExternal: false
  name: send_message_to_output(message, output_name)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.send_message_to_output
- fullName: azure.iot.device.IoTHubModuleClient.send_method_response
  isExternal: false
  name: send_method_response(method_response)
  parent: azure.iot.device.IoTHubModuleClient
  uid: azure.iot.device.IoTHubModuleClient.send_method_response
- fullName: list(str)
  name: list(str)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: list(str)
