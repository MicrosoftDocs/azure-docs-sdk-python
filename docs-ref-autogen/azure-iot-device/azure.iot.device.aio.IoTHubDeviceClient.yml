### YamlMime:PythonClass
uid: azure.iot.device.aio.IoTHubDeviceClient
name: IoTHubDeviceClient
fullName: azure.iot.device.aio.IoTHubDeviceClient
module: azure.iot.device.aio
inheritances:
- azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
- azure.iot.device.iothub.abstract_clients.AbstractIoTHubDeviceClient
summary: 'An asynchronous device client that connects to an Azure IoT Hub instance.


  Initializer for a IoTHubDeviceClient.


  This initializer should not be called directly.

  Instead, use one of the ''>>create_from_<<'' classmethods to instantiate'
constructor:
  syntax: IoTHubDeviceClient(mqtt_pipeline, http_pipeline)
  parameters:
  - name: mqtt_pipeline
    description: The pipeline used to connect to the IoTHub endpoint.
    isRequired: true
    types:
    - <xref:azure.iot.device.iothub.pipeline.MQTTPipeline>
  - name: http_pipeline
    isRequired: true
methods:
- uid: azure.iot.device.aio.IoTHubDeviceClient.connect
  name: connect
  summary: 'Connects the client to an Azure IoT Hub or Azure IoT Edge Hub instance.


    The destination is chosen based on the credentials passed via the auth_provider
    parameter

    that was provided when this object was initialized.'
  signature: async connect()
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a establishing a

      connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: if the connection times out.
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.create_from_connection_string
  name: create_from_connection_string
  summary: Instantiate the client from a IoTHub device or module connection string.
  signature: create_from_connection_string(connection_string, **kwargs)
  parameters:
  - name: connection_string
    description: The connection string for the IoTHub you wish to connect to.
    isRequired: true
    types:
    - <xref:str>
  - name: server_verification_cert
    description: 'Configuration Option. The trusted certificate chain.

      Necessary when using connecting to an endpoint which has a non-standard root
      of trust,

      such as a protocol gateway.'
    isRequired: true
    types:
    - <xref:str>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: product_info
    description: 'Configuration Option. Default is empty string. The string contains

      arbitrary product info which is appended to the user agent string.'
    isRequired: true
    types:
    - <xref:str>
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: sastoken_ttl
    description: 'The time to live (in seconds) for the created SasToken used for

      authentication. Default is 3600 seconds (1 hour).'
    isRequired: true
    types:
    - <xref:int>
  - name: keep_alive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  - name: auto_connect
    description: 'Automatically connect the client to IoTHub when a method is

      invoked which requires a connection to be established. (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry
    description: 'Attempt to re-establish a dropped connection (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry_interval
    description: 'Interval, in seconds, between attempts to

      re-establish a dropped connection (Default: 10)'
    isRequired: true
    types:
    - <xref:int>
  - name: ensure_desired_properties
    description: 'Ensure the most recent desired properties patch has

      been received upon re-connections (Default:True)'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of an IoTHub client that uses a connection string for
      authentication.
  exceptions:
  - type: ValueError if given an invalid connection_string.
  - type: TypeError if given an unsupported parameter.
- uid: azure.iot.device.aio.IoTHubDeviceClient.create_from_sastoken
  name: create_from_sastoken
  summary: Instantiate the client from a pre-created SAS Token string
  signature: create_from_sastoken(sastoken, **kwargs)
  parameters:
  - name: sastoken
    description: The SAS Token string
    isRequired: true
    types:
    - <xref:str>
  - name: server_verification_cert
    description: 'Configuration Option. The trusted certificate chain.

      Necessary when using connecting to an endpoint which has a non-standard root
      of trust,

      such as a protocol gateway.'
    isRequired: true
    types:
    - <xref:str>
  - name: gateway_hostname
    description: 'Configuration Option. The gateway hostname for the gateway

      device.'
    isRequired: true
    types:
    - <xref:str>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: product_info
    description: 'Configuration Option. Default is empty string. The string contains

      arbitrary product info which is appended to the user agent string.'
    isRequired: true
    types:
    - <xref:str>
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: keep_alive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  - name: auto_connect
    description: 'Automatically connect the client to IoTHub when a method is

      invoked which requires a connection to be established. (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry
    description: 'Attempt to re-establish a dropped connection (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry_interval
    description: 'Interval, in seconds, between attempts to

      re-establish a dropped connection (Default: 10)'
    isRequired: true
    types:
    - <xref:int>
  - name: ensure_desired_properties
    description: 'Ensure the most recent desired properties patch has

      been received upon re-connections (Default:True)'
    isRequired: true
    types:
    - <xref:bool>
  exceptions:
  - type: TypeError if given an unsupported parameter.
  - type: ValueError if the sastoken parameter is invalid.
- uid: azure.iot.device.aio.IoTHubDeviceClient.create_from_symmetric_key
  name: create_from_symmetric_key
  summary: Instantiate a client using symmetric key authentication.
  signature: create_from_symmetric_key(symmetric_key, hostname, device_id, **kwargs)
  parameters:
  - name: symmetric_key
    description: The symmetric key.
    isRequired: true
  - name: hostname
    description: 'Host running the IotHub.

      Can be found in the Azure portal in the Overview tab as the string hostname.'
    isRequired: true
    types:
    - <xref:str>
  - name: device_id
    description: The device ID
    isRequired: true
  - name: server_verification_cert
    description: 'Configuration Option. The trusted certificate chain.

      Necessary when using connecting to an endpoint which has a non-standard root
      of trust,

      such as a protocol gateway.'
    isRequired: true
    types:
    - <xref:str>
  - name: gateway_hostname
    description: 'Configuration Option. The gateway hostname for the gateway

      device.'
    isRequired: true
    types:
    - <xref:str>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: product_info
    description: 'Configuration Option. Default is empty string. The string contains

      arbitrary product info which is appended to the user agent string.'
    isRequired: true
    types:
    - <xref:str>
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: sastoken_ttl
    description: 'The time to live (in seconds) for the created SasToken used for

      authentication. Default is 3600 seconds (1 hour)'
    isRequired: true
    types:
    - <xref:int>
  - name: keep_alive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  - name: auto_connect
    description: 'Automatically connect the client to IoTHub when a method is

      invoked which requires a connection to be established. (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry
    description: 'Attempt to re-establish a dropped connection (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry_interval
    description: 'Interval, in seconds, between attempts to

      re-establish a dropped connection (Default: 10)'
    isRequired: true
    types:
    - <xref:int>
  - name: ensure_desired_properties
    description: 'Ensure the most recent desired properties patch has

      been received upon re-connections (Default:True)'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of an IoTHub client that uses a symmetric key for authentication.
  exceptions:
  - type: TypeError if given an unsupported parameter.
  - type: ValueError if the provided parameters are invalid.
- uid: azure.iot.device.aio.IoTHubDeviceClient.create_from_x509_certificate
  name: create_from_x509_certificate
  summary: Instantiate a client using X509 certificate authentication.
  signature: create_from_x509_certificate(x509, hostname, device_id, **kwargs)
  parameters:
  - name: hostname
    description: 'Host running the IotHub.

      Can be found in the Azure portal in the Overview tab as the string hostname.'
    isRequired: true
    types:
    - <xref:str>
  - name: x509
    description: 'The complete x509 certificate object.

      To use the certificate the enrollment object needs to contain cert

      (either the root certificate or one of the intermediate CA certificates).

      If the cert comes from a CER file, it needs to be base64 encoded.'
    isRequired: true
    types:
    - <xref:azure.iot.device.X509>
  - name: device_id
    description: The ID used to uniquely identify a device in the IoTHub
    isRequired: true
    types:
    - <xref:str>
  - name: server_verification_cert
    description: 'Configuration Option. The trusted certificate chain.

      Necessary when using connecting to an endpoint which has a non-standard root
      of trust,

      such as a protocol gateway.'
    isRequired: true
    types:
    - <xref:str>
  - name: gateway_hostname
    description: 'Configuration Option. The gateway hostname for the gateway

      device.'
    isRequired: true
    types:
    - <xref:str>
  - name: websockets
    description: 'Configuration Option. Default is False. Set to true if using MQTT

      over websockets.'
    isRequired: true
    types:
    - <xref:bool>
  - name: cipher
    description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string in

      "OpenSSL cipher list format" or as a list of cipher suite strings.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>(<xref:str>)
  - name: product_info
    description: 'Configuration Option. Default is empty string. The string contains

      arbitrary product info which is appended to the user agent string.'
    isRequired: true
    types:
    - <xref:str>
  - name: proxy_options
    description: Options for sending traffic through proxy servers.
    isRequired: true
    types:
    - <xref:azure.iot.device.ProxyOptions>
  - name: keep_alive
    description: 'Maximum period in seconds between communications with the

      broker. If no other messages are being exchanged, this controls the

      rate at which the client will send ping messages to the broker.

      If not provided default value of 60 secs will be used.'
    isRequired: true
    types:
    - <xref:int>
  - name: auto_connect
    description: 'Automatically connect the client to IoTHub when a method is

      invoked which requires a connection to be established. (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry
    description: 'Attempt to re-establish a dropped connection (Default: True)'
    isRequired: true
    types:
    - <xref:bool>
  - name: connection_retry_interval
    description: 'Interval, in seconds, between attempts to

      re-establish a dropped connection (Default: 10)'
    isRequired: true
    types:
    - <xref:int>
  - name: ensure_desired_properties
    description: 'Ensure the most recent desired properties patch has

      been received upon re-connections (Default:True)'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of an IoTHub client that uses an X509 certificate for
      authentication.
  exceptions:
  - type: TypeError if given an unsupported parameter.
- uid: azure.iot.device.aio.IoTHubDeviceClient.disconnect
  name: disconnect
  summary: 'Disconnect the client from the Azure IoT Hub or Azure IoT Edge Hub instance.


    It is recommended that you make sure to call this coroutine when you are completely
    done

    with the your client instance.'
  signature: async disconnect()
  exceptions:
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.get_storage_info_for_blob
  name: get_storage_info_for_blob
  summary: Sends a POST request over HTTP to an IoTHub endpoint that will return information
    for uploading via the Azure Storage Account linked to the IoTHub your device is
    connected to.
  signature: async get_storage_info_for_blob(blob_name)
  parameters:
  - name: blob_name
    description: The name in string format of the blob that will be uploaded using
      the storage API. This name will be used to generate the proper credentials for
      Storage, and needs to match what will be used with the Azure Storage SDK to
      perform the blob upload.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'A JSON-like (dictionary) object from IoT Hub that will contain relevant
      information including: correlationId, hostName, containerName, blobName, sasToken.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.get_twin
  name: get_twin
  summary: Gets the device or module twin from the Azure IoT Hub or Azure IoT Edge
    Hub service.
  signature: async get_twin()
  return:
    description: Complete Twin as a JSON dict
    types:
    - <xref:dict>
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a establishing a

      connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: 'if connection attempt

      times out'
  - type: azure.iot.device.exceptions.NoConnectionError
    description: 'if the client is not

      connected (and there is no auto-connect enabled)'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.notify_blob_upload_status
  name: notify_blob_upload_status
  summary: When the upload is complete, the device sends a POST request to the IoT
    Hub endpoint with information on the status of an upload to blob attempt. This
    is used by IoT Hub to notify listening clients.
  signature: async notify_blob_upload_status(correlation_id, is_success, status_code,
    status_description)
  parameters:
  - name: correlation_id
    description: Provided by IoT Hub on get_storage_info_for_blob request.
    isRequired: true
    types:
    - <xref:str>
  - name: is_success
    description: A boolean that indicates whether the file was uploaded successfully.
    isRequired: true
    types:
    - <xref:bool>
  - name: status_code
    description: A numeric status code that is the status for the upload of the file
      to storage.
    isRequired: true
    types:
    - <xref:int>
  - name: status_description
    description: A description that corresponds to the status_code.
    isRequired: true
    types:
    - <xref:str>
- uid: azure.iot.device.aio.IoTHubDeviceClient.patch_twin_reported_properties
  name: patch_twin_reported_properties
  summary: 'Update reported properties with the Azure IoT Hub or Azure IoT Edge Hub
    service.


    If the service returns an error on the patch operation, this function will raise
    the

    appropriate error.'
  signature: async patch_twin_reported_properties(reported_properties_patch)
  parameters:
  - name: reported_properties_patch
    description: Twin Reported Properties patch as a JSON dict
    isRequired: true
    types:
    - <xref:dict>
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a establishing a

      connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: 'if connection attempt

      times out'
  - type: azure.iot.device.exceptions.NoConnectionError
    description: 'if the client is not

      connected (and there is no auto-connect enabled)'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.receive_message
  name: receive_message
  summary: 'Receive a message that has been sent from the Azure IoT Hub.


    If no message is yet available, will wait until an item is available.


    *Deprecated since version 2.3.0:* We recommend that you use the .on_message_received
    property to set a handler instead'
  signature: receive_message()
  return:
    description: Message that was sent from the Azure IoT Hub.
    types:
    - <xref:azure.iot.device.Message>
- uid: azure.iot.device.aio.IoTHubDeviceClient.receive_method_request
  name: receive_method_request
  summary: 'Receive a method request via the Azure IoT Hub or Azure IoT Edge Hub.


    If no method request is yet available, will wait until it is available.


    *Deprecated since version 2.3.0:* We recommend that you use the .on_method_request_received
    property to set a handler instead'
  signature: receive_method_request(method_name=None)
  parameters:
  - name: method_name
    description: 'Optionally provide the name of the method to receive requests for.

      If this parameter is not given, all methods not already being specifically targeted
      by

      a different call to receive_method will be received.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: MethodRequest object representing the received method request.
    types:
    - <xref:azure.iot.device.MethodRequest>
- uid: azure.iot.device.aio.IoTHubDeviceClient.receive_twin_desired_properties_patch
  name: receive_twin_desired_properties_patch
  summary: 'Receive a desired property patch via the Azure IoT Hub or Azure IoT Edge
    Hub.


    If no method request is yet available, will wait until it is available.


    *Deprecated since version 2.3.0:* We recommend that you use the .on_twin_desired_properties_patch_received
    property to set a handler instead'
  signature: receive_twin_desired_properties_patch()
  return:
    description: Twin Desired Properties patch as a JSON dict
    types:
    - <xref:dict>
- uid: azure.iot.device.aio.IoTHubDeviceClient.send_message
  name: send_message
  summary: 'Sends a message to the default events endpoint on the Azure IoT Hub or
    Azure IoT Edge Hub instance.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  signature: async send_message(message)
  parameters:
  - name: message
    description: 'The actual message to send. Anything passed that is not an instance
      of the

      Message class will be converted to Message object.'
    isRequired: true
    types:
    - <xref:azure.iot.device.Message>
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a establishing a

      connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: 'if connection attempt

      times out'
  - type: azure.iot.device.exceptions.NoConnectionError
    description: 'if the client is not

      connected (and there is no auto-connect enabled)'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
  - type: ValueError if the message fails size validation.
- uid: azure.iot.device.aio.IoTHubDeviceClient.send_method_response
  name: send_method_response
  summary: 'Send a response to a method request via the Azure IoT Hub or Azure IoT
    Edge Hub.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  signature: async send_method_response(method_response)
  parameters:
  - name: method_response
    description: The MethodResponse to send
    isRequired: true
    types:
    - <xref:azure.iot.device.MethodResponse>
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a establishing a

      connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: 'if connection attempt

      times out'
  - type: azure.iot.device.exceptions.NoConnectionError
    description: 'if the client is not

      connected (and there is no auto-connect enabled)'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.shutdown
  name: shutdown
  summary: 'Shut down the client for graceful exit.


    Once this method is called, any attempts at further client calls will result in
    a

    ClientError being raised'
  signature: async shutdown()
  exceptions:
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.update_sastoken
  name: update_sastoken
  summary: 'Update the client''s SAS Token used for authentication, then reauthorizes
    the connection.


    This API can only be used if the client was initially created with a SAS Token.'
  signature: async update_sastoken(sastoken)
  parameters:
  - name: sastoken
    description: The new SAS Token string for the client to use
    isRequired: true
    types:
    - <xref:str>
  exceptions:
  - type: ValueError if the sastoken parameter is invalid
  - type: azure.iot.device.exceptions.CredentialError
    description: 'if credentials are invalid

      and a connection cannot be re-established.'
  - type: azure.iot.device.exceptions.ConnectionFailedError
    description: 'if a re-establishing

      the connection results in failure.'
  - type: azure.iot.device.exceptions.ConnectionDroppedError
    description: 'if connection is lost

      during execution.'
  - type: azure.iot.device.exceptions.OperationTimeout
    description: 'if the reauthorization

      attempt times out.'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if the client was not initially

      created with a SAS token.'
  - type: azure.iot.device.exceptions.ClientError
    description: 'if there is an unexpected failure

      during execution.'
attributes:
- uid: azure.iot.device.aio.IoTHubDeviceClient.connected
  name: connected
  summary: Read-only property to indicate if the transport is connected or not.
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_background_exception
  name: on_background_exception
  summary: 'The handler function or coroutine will be called when a background exception
    occurs.


    The function or coroutine definition should take one positional argument (the
    exception

    object)'
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_connection_state_change
  name: on_connection_state_change
  summary: 'The handler function or coroutine that will be called when the connection
    state changes.


    The function or coroutine definition should take no positional arguments.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_message_received
  name: on_message_received
  summary: 'The handler function or coroutine that will be called when a message is
    received.


    The function or coroutine definition should take one positional argument (the

    <xref:azure.iot.device.Message> object)'
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_method_request_received
  name: on_method_request_received
  summary: 'The handler function or coroutine that will be called when a method request
    is received.


    Remember to acknowledge the method request in your function or coroutine via use
    of the

    client''s .send_method_response() method.


    The function or coroutine definition should take one positional argument (the

    <xref:azure.iot.device.MethodRequest> object)'
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_new_sastoken_required
  name: on_new_sastoken_required
  summary: 'The handler function or coroutine that will be called when the client
    requires a new

    SAS token. This will happen approximately 2 minutes before the SAS Token expires.

    On Windows platforms, if the lifespan exceeds approximately 49 days, a new token
    will

    be required after those 49 days regardless of how long the SAS lifespan is.


    Note that this handler is ONLY necessary when using a client created via the

    .create_from_sastoken() method.


    The new token can be provided in your function or coroutine via use of the client''s

    .update_sastoken() method.


    The function or coroutine definition should take no positional arguments.'
- uid: azure.iot.device.aio.IoTHubDeviceClient.on_twin_desired_properties_patch_received
  name: on_twin_desired_properties_patch_received
  summary: 'The handler function or coroutine that will be called when a twin desired
    properties

    patch is received.


    The function or coroutine definition should take one positional argument (the
    twin patch

    in the form of a JSON dictionary object)'
