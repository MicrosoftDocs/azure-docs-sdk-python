### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet
  fullName: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.mixedreality.models
  name: ResourceModelWithAllowedPropertySet
  summary: 'The resource model definition containing the full set of allowed properties

    for a resource. Except properties bag, there cannot be a top level property

    outside of this set.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'ResourceModelWithAllowedPropertySet(*, location: str = None, managed_by:
      str = None, kind: str = None, tags=None, identity=None, sku=None, plan=None,
      **kwargs) -> None'
    parameters:
    - description: The geo-location where the resource lives
      id: location
      type:
      - str
    - description: 'The  fully qualified resource ID of the resource that

        manages this resource. Indicates if this resource is managed by another

        azure resource. If this is present, complete mode deployment will not

        delete the resource if it is removed from the template since it is managed

        by another resource.'
      id: managed_by
      type:
      - str
    - description: 'Metadata used by portal/tooling/etc to render different UX

        experiences for resources of the same type; e.g. ApiApps are a kind of

        Microsoft.Web/sites type.  If supported, the resource provider must

        validate and persist this value.'
      id: kind
      type:
      - str
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: ''
      id: identity
      type:
      - azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetIdentity
    - description: ''
      id: sku
      type:
      - azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetSku
    - description: ''
      id: plan
      type:
      - azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetPlan
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      id: id
      type:
      - str
    - description: The name of the resource
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex-

        Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts..'
      id: type
      type:
      - str
    - description: 'The etag field is *not* required. If it is provided in the

        response body, it must also be provided as a header per the normal etag

        convention.  Entity tags are used for comparing two or more entities from

        the same requested resource. HTTP/1.1 uses entity tags in the etag

        (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26),

        and If-Range (section 14.27) header fields.'
      id: etag
      type:
      - str
  type: class
  uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
