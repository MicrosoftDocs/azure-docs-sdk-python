### YamlMime:PythonClass
uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations
name: CertificatesOperations
fullName: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations
module: azure.mgmt.iothub.v2019_07_01_preview.aio.operations
inheritances:
- builtins.object
summary: 'CertificatesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: CertificatesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.create_or_update
  name: create_or_update
  summary: 'Upload the certificate to the IoT hub.


    Adds new or replaces existing certificate.'
  signature: 'create_or_update(resource_group_name: str, resource_name: str, certificate_name:
    str, certificate_description: azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateBodyDescription,
    if_match: Optional[str] = None, **kwargs: Any) -> azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateDescription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_description
    description: The certificate body.
    isRequired: true
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateBodyDescription>
  - name: if_match
    description: 'ETag of the Certificate. Do not specify for creating a brand new
      certificate.

      Required to update an existing certificate.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CertificateDescription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateDescription>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.delete
  name: delete
  summary: 'Delete an X509 certificate.


    Deletes an existing X509 certificate or does nothing if it does not exist.'
  signature: 'delete(resource_group_name: str, resource_name: str, certificate_name:
    str, if_match: str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: ETag of the Certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.generate_verification_code
  name: generate_verification_code
  summary: 'Generate verification code for proof of possession flow.


    Generates verification code for proof of possession flow. The verification code
    will be used to

    generate a leaf certificate.'
  signature: 'generate_verification_code(resource_group_name: str, resource_name:
    str, certificate_name: str, if_match: str, **kwargs: Any) -> azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateWithNonceDescription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: ETag of the Certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CertificateWithNonceDescription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateWithNonceDescription>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.get
  name: get
  summary: 'Get the certificate.


    Returns the certificate.'
  signature: 'get(resource_group_name: str, resource_name: str, certificate_name:
    str, **kwargs: Any) -> azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateDescription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CertificateDescription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateDescription>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.list_by_iot_hub
  name: list_by_iot_hub
  summary: 'Get the certificate list.


    Returns the list of certificates.'
  signature: 'list_by_iot_hub(resource_group_name: str, resource_name: str, **kwargs:
    Any) -> azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateListDescription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CertificateListDescription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateListDescription>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.verify
  name: verify
  summary: 'Verify certificate''s private key possession.


    Verifies the certificate''s private key possession by providing the leaf cert
    issued by the

    verifying pre uploaded certificate.'
  signature: 'verify(resource_group_name: str, resource_name: str, certificate_name:
    str, if_match: str, certificate_verification_body: azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateVerificationDescription,
    **kwargs: Any) -> azure.mgmt.iothub.v2019_07_01_preview.models._models_py3.CertificateDescription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the IoT hub.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: ETag of the Certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_verification_body
    description: The name of the certificate.
    isRequired: true
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateVerificationDescription>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CertificateDescription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.iothub.v2019_07_01_preview.models.CertificateDescription>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.iothub.v2019_07_01_preview.aio.operations.CertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.iothub.v2019_07_01_preview.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\iothub\\v2019_07_01_preview\\models\\__init__.py'>
