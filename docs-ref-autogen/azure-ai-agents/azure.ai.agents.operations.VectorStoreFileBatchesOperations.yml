### YamlMime:PythonClass
uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations
name: VectorStoreFileBatchesOperations
fullName: azure.ai.agents.operations.VectorStoreFileBatchesOperations
module: azure.ai.agents.operations
constructor:
  syntax: VectorStoreFileBatchesOperations(*args, **kwargs)
methods:
- uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations.cancel
  name: cancel
  summary: 'Cancel a vector store file batch. This attempts to cancel the processing
    of files in this batch

    as soon as possible.'
  signature: 'cancel(vector_store_id: str, batch_id: str, **kwargs: Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.agents.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations.create
  name: create
  summary: Create a vector store file batch.
  signature: 'create(vector_store_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, file_ids: ~typing.List[str]
    | None = None, data_sources: ~typing.List[~azure.ai.agents.models._models.VectorStoreDataSource]
    | None = None, chunking_strategy: ~azure.ai.agents.models._models.VectorStoreChunkingStrategyRequest
    | None = None, **kwargs: ~typing.Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_ids
    description: List of file identifiers. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: data_sources
    description: List of Azure assets. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.agents.models.VectorStoreDataSource>]
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.agents.models.VectorStoreChunkingStrategyRequest>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.agents.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations.create_and_poll
  name: create_and_poll
  summary: Create a vector store file batch and poll.
  signature: 'create_and_poll(vector_store_id: str, body: JSON, *, content_type: str
    = ''application/json'', polling_interval: float = 1, timeout: float | None = None,
    **kwargs: Any) -> _models.VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: The file batch configuration serialized to JSON or binary object.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_ids
    description: List of file identifiers.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: data_sources
    description: List of Azure assets. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.client.models.VectorStoreDataSource>]
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.agents.models.VectorStoreChunkingStrategyRequest>
  - name: content_type
    description: Body parameter content-type. Defaults to "application/json".
    defaultValue: application/json
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Time to wait before polling for the status of the vector store.
      Default value

      is 1.'
    defaultValue: '1'
    types:
    - <xref:float>
  - name: timeout
    description: Time to wait before polling for the status of the vector store.
    defaultValue: None
    types:
    - <xref:float>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.agents.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  - type: TimeoutError
    description: If the operation times out while polling for status.
- uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations.get
  name: get
  summary: Retrieve a vector store file batch.
  signature: 'get(vector_store_id: str, batch_id: str, **kwargs: Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.agents.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.operations.VectorStoreFileBatchesOperations.list_files
  name: list_files
  summary: Returns a list of vector store files in a batch.
  signature: 'list_files(vector_store_id: str, batch_id: str, *, filter: str | VectorStoreFileStatusFilter
    | None = None, limit: int | None = None, order: str | ListSortOrder | None = None,
    before: str | None = None, **kwargs: Any) -> ItemPaged[VectorStoreFile]'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: 'Filter by file status. Known values are: "in_progress", "completed",
      "failed",

      and "cancelled". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.agents.models.VectorStoreFileStatusFilter>
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.agents.models.ListSortOrder>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of VectorStoreFile
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.agents.models.VectorStoreFile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
