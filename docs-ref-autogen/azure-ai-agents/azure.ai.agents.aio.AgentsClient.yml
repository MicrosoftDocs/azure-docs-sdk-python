### YamlMime:PythonClass
uid: azure.ai.agents.aio.AgentsClient
name: AgentsClient
fullName: azure.ai.agents.aio.AgentsClient
module: azure.ai.agents.aio
summary: AgentsClient provides a high-level, user-friendly interface for managing
  and interacting with AI agents in Azure AI Agents service.
constructor:
  syntax: 'AgentsClient(endpoint: str, credential: AsyncTokenCredential, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: 'Project endpoint in the form of:

      [https:/](https:/)/<aiservices-id>.services.ai.azure.com/api/projects/<project-name>.
      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential used to authenticate requests to the service. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials.TokenCredential>
methods:
- uid: azure.ai.agents.aio.AgentsClient.close
  name: close
  signature: async close() -> None
- uid: azure.ai.agents.aio.AgentsClient.create_agent
  name: create_agent
  summary: Creates a new agent with various configurations, delegating to the generated
    operations.
  signature: 'async create_agent(*, model: str, content_type: str = ''application/json'',
    name: str | None = None, description: str | None = None, instructions: str | None
    = None, tools: List[_models.ToolDefinition] | None = None, tool_resources: _models.ToolResources
    | None = None, temperature: float | None = None, top_p: float | None = None, response_format:
    ''_types.AgentsResponseFormatOption'' | None = None, metadata: Dict[str, str]
    | None = None, **kwargs: Any) -> _models.Agent'
  parameters:
  - name: body
    description: A complete agent configuration as JSON or binary stream. Required
      if *model* is not provided.
    types:
    - <xref:typing.Union>[<xref:JSON>, <xref:typing.IO>[<xref:bytes>]]
  keywordOnlyParameters:
  - name: model
    description: 'The deployment name or ID of the Azure AI model that the agent will
      use.

      Required if *body* is not provided.'
    defaultValue: <object object at 0x000001E445C03730>
    types:
    - <xref:str>
  - name: name
    description: A human-readable name for the agent that helps identify its purpose
      or role.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: description
    description: A detailed description explaining the agent's intended purpose and
      capabilities.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: instructions
    description: System-level instructions that define the agent's behavior and personality.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: tools
    description: A list of tool definitions that specify the capabilities available
      to the agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:azure.ai.agents.models.ToolDefinition>]]
  - name: tool_resources
    description: Resources required by the agent's tools, such as file IDs or vector
      store IDs.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:azure.ai.agents.models.ToolResources>]
  - name: toolset
    description: 'A pre-configured collection of tools and resources that provides
      a convenient way

      to package tool definitions and their associated resources together.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:_models.AsyncToolSet>]
  - name: temperature
    description: Controls response randomness (0-2). Higher values produce more creative
      responses.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: top_p
    description: Nucleus sampling parameter controlling response diversity by probability
      mass.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: response_format
    description: 'Specifies the format for the responses, particularly for tool calls.

      Can be a string, response format mode, or structured response format object
      that defines how

      the agent should structure its outputs.'
    defaultValue: None
  - name: metadata
    description: Custom key-value pairs for storing additional information about the
      agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
  - name: content_type
    description: The MIME type of the request body when using body parameter.
    defaultValue: application/json
    types:
    - <xref:str>
  return:
    description: A newly created agent object with the specified configuration.
    types:
    - <xref:azure.ai.agents.models.Agent>
  exceptions:
  - type: HttpResponseError for HTTP errors during agent creation.
- uid: azure.ai.agents.aio.AgentsClient.create_thread_and_process_run
  name: create_thread_and_process_run
  summary: 'Creates a new agent thread and run in one call, then polls until the run
    enters a terminal

    state, executing any required tool calls via the provided ToolSet.'
  signature: 'async create_thread_and_process_run(*, agent_id: str = <object object>,
    thread: ~azure.ai.agents.models._models.AgentThreadCreationOptions | None = None,
    model: str | None = None, instructions: str | None = None, toolset: ~azure.ai.agents.models._patch.AsyncToolSet
    | None = None, temperature: float | None = None, top_p: float | None = None, max_prompt_tokens:
    int | None = None, max_completion_tokens: int | None = None, truncation_strategy:
    ~azure.ai.agents.models._models.TruncationObject | None = None, tool_choice: str
    | ~azure.ai.agents.models._enums.AgentsToolChoiceOptionMode | ~azure.ai.agents.models._models.AgentsNamedToolChoice
    | None = None, response_format: str | ~azure.ai.agents.models._enums.AgentsResponseFormatMode
    | ~azure.ai.agents.models._models.AgentsResponseFormat | ~azure.ai.agents.models._models.ResponseFormatJsonSchemaType
    | None = None, parallel_tool_calls: bool | None = None, metadata: ~typing.Dict[str,
    str] | None = None, polling_interval: int = 1, **kwargs: ~typing.Any) -> ThreadRun'
  keywordOnlyParameters:
  - name: agent_id
    description: The unique identifier of the agent to run. Required if *body* is
      unset.
    defaultValue: <object object at 0x000001E445C03730>
  - name: thread
    description: Options for creating the new thread (initial messages, metadata,
      tool resources).
    defaultValue: None
  - name: model
    description: Optional override of the model deployment name to use for this run.
    defaultValue: None
  - name: instructions
    description: Optional override of the system instructions for this run.
    defaultValue: None
  - name: toolset
    description: 'A ToolSet instance containing both *.definitions* and *.resources*
      for tools.

      If provided, its definitions/resources are used; otherwise no tools are passed.'
    defaultValue: None
  - name: temperature
    description: Sampling temperature for the model (0.0-2.0), higher is more random.
    defaultValue: None
  - name: top_p
    description: Nucleus sampling value (0.0-1.0), alternative to temperature.
    defaultValue: None
  - name: max_prompt_tokens
    description: Maximum total prompt tokens across turns; run ends "incomplete" if
      exceeded.
    defaultValue: None
  - name: max_completion_tokens
    description: Maximum total completion tokens across turns; run ends "incomplete"
      if exceeded.
    defaultValue: None
  - name: truncation_strategy
    description: Strategy for dropping old messages when context window overflows.
    defaultValue: None
  - name: tool_choice
    description: Controls which tool (if any) the model is allowed to call.
    defaultValue: None
  - name: response_format
    description: 'Specifies the format for the responses, particularly for tool calls.

      Can be a string, response format mode, or structured response format object
      that defines how

      the agent should structure its outputs.'
    defaultValue: None
  - name: parallel_tool_calls
    description: If True, allows tool calls to be executed in parallel.
    defaultValue: None
  - name: metadata
    description: Optional metadata (up to 16 key/value pairs) to attach to the run.
    defaultValue: None
  - name: polling_interval
    description: Seconds to wait between polling attempts for run status. Default
      is 1.
    defaultValue: '1'
  return:
    description: The final ThreadRun object, in a terminal state (succeeded, failed,
      or cancelled).
    types:
    - <xref:azure.ai.agents.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: If the underlying REST call to create the thread+run or to poll fails.
- uid: azure.ai.agents.aio.AgentsClient.create_thread_and_run
  name: create_thread_and_run
  summary: Creates a new agent thread and immediately starts a run using the specified
    parameters.
  signature: 'async create_thread_and_run(*, agent_id: str, content_type: str = ''application/json'',
    thread: _models.AgentThreadCreationOptions | None = None, model: str | None =
    None, instructions: str | None = None, tools: List[_models.ToolDefinition] | None
    = None, tool_resources: _models.ToolResources | None = None, temperature: float
    | None = None, top_p: float | None = None, max_prompt_tokens: int | None = None,
    max_completion_tokens: int | None = None, truncation_strategy: _models.TruncationObject
    | None = None, tool_choice: ''_types.AgentsToolChoiceOption'' | None = None, response_format:
    ''_types.AgentsResponseFormatOption'' | None = None, parallel_tool_calls: bool
    | None = None, metadata: Dict[str, str] | None = None, **kwargs: Any) -> _models.ThreadRun'
  parameters:
  - name: body
    description: 'Either a JSON payload (dict) or a binary stream (IO[bytes]). Use
      JSON overload for

      dict bodies and binary overload for IO[bytes].'
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: agent_id
    description: 'The ID of the agent for which the thread should be created.

      Required when not using the JSON/body overload.'
    defaultValue: <object object at 0x000001E445C03730>
  - name: thread
    description: 'The details used to create the new thread. If none provided, an
      empty thread is

      created.'
    defaultValue: None
  - name: model
    description: Override the model the agent uses for this run.
    defaultValue: None
  - name: instructions
    description: Override the system instructions for this run.
    defaultValue: None
  - name: tools
    description: Override the list of enabled tools for this run.
    defaultValue: None
  - name: tool_resources
    description: Override the tools the agent can use for this run.
    defaultValue: None
  - name: temperature
    description: Sampling temperature between 0 and 2. Higher = more random.
    defaultValue: None
  - name: top_p
    description: Nucleus sampling parameter between 0 and 1.
    defaultValue: None
  - name: max_prompt_tokens
    description: Max prompt tokens to use across the run.
    defaultValue: None
  - name: max_completion_tokens
    description: Max completion tokens to use across the run.
    defaultValue: None
  - name: truncation_strategy
    description: Strategy for dropping old messages as context grows.
    defaultValue: None
  - name: tool_choice
    description: Controls which tool the model will call.
    defaultValue: None
  - name: response_format
    description: 'Specifies the format for the responses, particularly for tool calls.

      Can be a string, response format mode, or structured response format object
      that defines how

      the agent should structure its outputs.'
    defaultValue: None
  - name: parallel_tool_calls
    description: If True, tools will be invoked in parallel.
    defaultValue: None
  - name: metadata
    description: Up to 16 key/value pairs for structured metadata on the run.
    defaultValue: None
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping.
    types:
    - <xref:azure.ai.agents.models.ThreadRun>
  exceptions:
  - type: ValueError
    description: If the combination of arguments is invalid.
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.aio.AgentsClient.delete_agent
  name: delete_agent
  summary: Deletes an agent.
  signature: 'async delete_agent(agent_id: str, **kwargs: Any) -> None'
  parameters:
  - name: agent_id
    description: Identifier of the agent. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.aio.AgentsClient.enable_auto_function_calls
  name: enable_auto_function_calls
  summary: 'Enables tool calls to be executed automatically during runs.create_and_process
    or runs.stream.

    If this is not set, functions must be called manually.

    If automatic function calls fail, the agents will receive error messages allowing
    it to retry with another

    function call or figure out the answer with its knowledge.'
  signature: 'enable_auto_function_calls(tools: Set[Callable[[...], Any]] | AsyncFunctionTool
    | AsyncToolSet, max_retry: int = 10) -> None'
  parameters:
  - name: tools
    description: A function tool, toolset, or a set of callable functions.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:typing.Set>[<xref:typing.Callable>[..., <xref:typing.Any>]],
      <xref:_models.AsyncFunctionTool>, <xref:_models.AsyncToolSet>]
  - name: max_retry
    description: Maximum number of errors allowed and retry per run or stream. Default
      value is 10.
    defaultValue: '10'
    types:
    - <xref:int>
- uid: azure.ai.agents.aio.AgentsClient.get_agent
  name: get_agent
  summary: Retrieves an existing agent.
  signature: 'async get_agent(agent_id: str, **kwargs: Any) -> Agent'
  parameters:
  - name: agent_id
    description: Identifier of the agent. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Agent. The Agent is compatible with MutableMapping
    types:
    - <xref:azure.ai.agents.models.Agent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.aio.AgentsClient.list_agents
  name: list_agents
  summary: Gets a list of agents that were previously created.
  signature: 'list_agents(*, limit: int | None = None, order: str | ListSortOrder
    | None = None, before: str | None = None, **kwargs: Any) -> AsyncIterable[Agent]'
  keywordOnlyParameters:
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.agents.models.ListSortOrder>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of Agent
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.ai.agents.models.Agent>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.agents.aio.AgentsClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
- uid: azure.ai.agents.aio.AgentsClient.update_agent
  name: update_agent
  summary: Modifies an existing agent.
  signature: 'async update_agent(agent_id: str, *, content_type: str = ''application/json'',
    model: str | None = None, name: str | None = None, description: str | None = None,
    instructions: str | None = None, tools: List[_models.ToolDefinition] | None =
    None, tool_resources: _models.ToolResources | None = None, temperature: float
    | None = None, top_p: float | None = None, response_format: ''_types.AgentsResponseFormatOption''
    | None = None, metadata: Dict[str, str] | None = None, **kwargs: Any) -> _models.Agent'
  parameters:
  - name: agent_id
    description: The ID of the agent to modify. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: model
    description: The ID of the model to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: name
    description: The modified name for the agent to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: description
    description: The modified description for the agent to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The modified system instructions for the new agent to use. Default
      value

      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tools
    description: 'The modified collection of tools to enable for the agent. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.agents.models.ToolDefinition>]
  - name: tool_resources
    description: 'A set of resources that are used by the agent''s tools. The resources

      are specific to the type of tool. For example,

      the `code_interpreter` tool requires a list of file IDs, while the `file_search`
      tool

      requires a list of vector store IDs. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.agents.models.ToolResources>
  - name: toolset
    description: 'The Collection of tools and resources (alternative to *tools* and
      *tool_resources*

      that provides a convenient way to package them together). Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.agents.models.AsyncToolSet>
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output more random,

      while lower values like 0.2 will make it more focused and deterministic. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model considers the results of the tokens with top_p probability mass.

      So 0.1 means only the tokens comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: response_format
    description: 'Specifies the format for the responses, particularly for tool calls.

      Can be a string, response format mode, or structured response format object
      that defines how

      the agent should structure its outputs.'
    defaultValue: None
  - name: content_type
    description: 'Body Parameter content-type. Content type parameter for JSON body.

      Default value is "application/json".'
    defaultValue: application/json
    types:
    - <xref:str>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: agent. The agent is compatible with MutableMapping
    types:
    - <xref:azure.ai.agents.models.agent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
