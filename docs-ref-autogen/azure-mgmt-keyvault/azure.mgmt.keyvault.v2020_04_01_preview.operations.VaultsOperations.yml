### YamlMime:PythonClass
uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations
name: VaultsOperations
fullName: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations
module: azure.mgmt.keyvault.v2020_04_01_preview.operations
inheritances:
- builtins.object
summary: 'VaultsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: VaultsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update a key vault in the specified subscription.
  signature: 'begin_create_or_update(resource_group_name: str, vault_name: str, parameters:
    "_models.VaultCreateOrUpdateParameters", **kwargs: Any) -> LROPoller[''_models.Vault'']'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the server belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: vault_name
    description: Name of the vault.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters to create or update the vault.
    isRequired: true
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultCreateOrUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either Vault or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.keyvault.v2020_04_01_preview.models.Vault>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.begin_purge_deleted
  name: begin_purge_deleted
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key
    vault.
  signature: 'begin_purge_deleted(vault_name: str, location: str, **kwargs: Any) ->
    LROPoller[None]'
  parameters:
  - name: vault_name
    description: The name of the soft-deleted vault.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The location of the soft-deleted vault.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.check_name_availability
  name: check_name_availability
  summary: Checks that the vault name is valid and is not already in use.
  signature: 'check_name_availability(vault_name: "_models.VaultCheckNameAvailabilityParameters",
    **kwargs: Any) -> _models.CheckNameAvailabilityResult'
  parameters:
  - name: vault_name
    description: The name of the vault.
    isRequired: true
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultCheckNameAvailabilityParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CheckNameAvailabilityResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.CheckNameAvailabilityResult>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.delete
  name: delete
  summary: Deletes the specified Azure key vault.
  signature: 'delete(resource_group_name: str, vault_name: str, **kwargs: Any) ->
    None'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the vault belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: vault_name
    description: The name of the vault to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.get
  name: get
  summary: Gets the specified Azure key vault.
  signature: 'get(resource_group_name: str, vault_name: str, **kwargs: Any) -> _models.Vault'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the vault belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: vault_name
    description: The name of the vault.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Vault, or the result of cls(response)
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.Vault>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.get_deleted
  name: get_deleted
  summary: Gets the deleted Azure key vault.
  signature: 'get_deleted(vault_name: str, location: str, **kwargs: Any) -> _models.DeletedVault'
  parameters:
  - name: vault_name
    description: The name of the vault.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The location of the deleted vault.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeletedVault, or the result of cls(response)
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.DeletedVault>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.list
  name: list
  summary: The List operation gets information about the vaults associated with the
    subscription.
  signature: 'list(top: Optional[int] = None, **kwargs: Any) -> Iterable[''_models.ResourceListResult'']'
  parameters:
  - name: top
    description: Maximum number of results to return.
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either ResourceListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.keyvault.v2020_04_01_preview.models.ResourceListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'The List operation gets information about the vaults associated with the
    subscription and

    within the specified resource group.'
  signature: 'list_by_resource_group(resource_group_name: str, top: Optional[int]
    = None, **kwargs: Any) -> Iterable[''_models.VaultListResult'']'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the vault belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: Maximum number of results to return.
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either VaultListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.list_by_subscription
  name: list_by_subscription
  summary: The List operation gets information about the vaults associated with the
    subscription.
  signature: 'list_by_subscription(top: Optional[int] = None, **kwargs: Any) -> Iterable[''_models.VaultListResult'']'
  parameters:
  - name: top
    description: Maximum number of results to return.
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either VaultListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.list_deleted
  name: list_deleted
  summary: Gets information about the deleted vaults in a subscription.
  signature: 'list_deleted(**kwargs: Any) -> Iterable[''_models.DeletedVaultListResult'']'
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DeletedVaultListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.keyvault.v2020_04_01_preview.models.DeletedVaultListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.update
  name: update
  summary: Update a key vault in the specified subscription.
  signature: 'update(resource_group_name: str, vault_name: str, parameters: "_models.VaultPatchParameters",
    **kwargs: Any) -> _models.Vault'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the server belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: vault_name
    description: Name of the vault.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters to patch the vault.
    isRequired: true
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultPatchParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Vault, or the result of cls(response)
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.Vault>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.update_access_policy
  name: update_access_policy
  summary: Update access policies in a key vault in the specified subscription.
  signature: 'update_access_policy(resource_group_name: str, vault_name: str, operation_kind:
    Union[str, "_models.AccessPolicyUpdateKind"], parameters: "_models.VaultAccessPolicyParameters",
    **kwargs: Any) -> _models.VaultAccessPolicyParameters'
  parameters:
  - name: resource_group_name
    description: The name of the Resource Group to which the vault belongs.
    isRequired: true
    types:
    - <xref:str>
  - name: vault_name
    description: Name of the vault.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_kind
    description: Name of the operation.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.AccessPolicyUpdateKind>
  - name: parameters
    description: Access policy to merge into the vault.
    isRequired: true
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultAccessPolicyParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: VaultAccessPolicyParameters, or the result of cls(response)
    types:
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.VaultAccessPolicyParameters>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.keyvault.v2020_04_01_preview.operations.VaultsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.keyvault.v2020_04_01_preview.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\keyvault\\v2020_04_01_preview\\models\\__init__.py'>
