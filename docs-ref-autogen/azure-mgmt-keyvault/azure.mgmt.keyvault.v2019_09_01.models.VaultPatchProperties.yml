### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.keyvault.v2019_09_01.models.VaultPatchProperties
  fullName: azure.mgmt.keyvault.v2019_09_01.models.VaultPatchProperties
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.models
  name: VaultPatchProperties
  summary: Properties of the vault.
  syntax:
    content: 'VaultPatchProperties(*, tenant_id: str = None, sku=None, access_policies=None,
      enabled_for_deployment: bool = None, enabled_for_disk_encryption: bool = None,
      enabled_for_template_deployment: bool = None, enable_soft_delete: bool = None,
      enable_rbac_authorization: bool = None, soft_delete_retention_in_days: int =
      None, create_mode=None, enable_purge_protection: bool = None, network_acls=None,
      **kwargs) -> None'
    parameters:
    - description: 'The Azure Active Directory tenant ID that should be used

        for authenticating requests to the key vault.'
      id: tenant_id
      type:
      - str
    - description: SKU details
      id: sku
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.Sku
    - description: 'An array of 0 to 16 identities that have access to

        the key vault. All identities in the array must use the same tenant ID as

        the key vault''s tenant ID.'
      id: access_policies
      type:
      - list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
    - description: 'Property to specify whether Azure Virtual

        Machines are permitted to retrieve certificates stored as secrets from the

        key vault.'
      id: enabled_for_deployment
      type:
      - bool
    - description: 'Property to specify whether Azure Disk

        Encryption is permitted to retrieve secrets from the vault and unwrap

        keys.'
      id: enabled_for_disk_encryption
      type:
      - bool
    - description: 'Property to specify whether Azure

        Resource Manager is permitted to retrieve secrets from the key vault.'
      id: enabled_for_template_deployment
      type:
      - bool
    - description: 'Property to specify whether the ''soft delete''

        functionality is enabled for this key vault. Once set to true, it cannot

        be reverted to false.'
      id: enable_soft_delete
      type:
      - bool
    - description: 'Property that controls how data actions

        are authorized. When true, the key vault will use Role Based Access

        Control (RBAC) for authorization of data actions, and the access policies

        specified in vault properties will be  ignored (warning: this is a preview

        feature). When false, the key vault will use the access policies specified

        in vault properties, and any policy stored on Azure Resource Manager will

        be ignored. If null or not specified, the value of this property will not

        change.'
      id: enable_rbac_authorization
      type:
      - bool
    - description: 'softDelete data retention days. It

        accepts >=7 and <=90.'
      id: soft_delete_retention_in_days
      type:
      - int
    - description: 'The vault''s create mode to indicate whether the vault

        need to be recovered or not. Possible values include: ''recover'', ''default'''
      id: create_mode
      type:
      - str
      - azure.mgmt.keyvault.v2019_09_01.models.CreateMode
    - description: 'Property specifying whether protection

        against purge is enabled for this vault. Setting this property to true

        activates protection against purge for this vault and its content - only

        the Key Vault service may initiate a hard, irrecoverable deletion. The

        setting is effective only if soft delete is also enabled. Enabling this

        functionality is irreversible - that is, the property does not accept

        false as its value.'
      id: enable_purge_protection
      type:
      - bool
    - description: 'A collection of rules governing the accessibility of

        the vault from specific network locations.'
      id: network_acls
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.NetworkRuleSet
  type: class
  uid: azure.mgmt.keyvault.v2019_09_01.models.VaultPatchProperties
references:
- fullName: list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
  name: list[AccessPolicyEntry]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry
    name: AccessPolicyEntry
    uid: azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
