### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.check_name_availability
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.create_or_update
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.delete
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get_deleted
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_resource_group
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_subscription
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_deleted
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.purge_deleted
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update_access_policy
  - azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.models
  class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: VaultsOperations
  summary: 'VaultsOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: VaultsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The filter to apply on the operation. Constant value: "resourceType
        eq ''Microsoft.KeyVault/vaults''".'
      id: filter
  type: class
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: check_name_availability(name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: check_name_availability
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: check_name_availability(name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The vault name.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CheckNameAvailabilityResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.CheckNameAvailabilityResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.check_name_availability
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: create_or_update(resource_group_name, vault_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: create_or_update(resource_group_name, vault_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the server belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault
      id: vault_name
      isRequired: true
      type:
      - str
    - description: Parameters to create or update the vault
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultCreateOrUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Vault or

        ClientRawResponse<Vault> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.keyvault.v2019_09_01.models.Vault]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.keyvault.v2019_09_01.models.Vault]]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.create_or_update
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.delete
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: delete(resource_group_name, vault_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: Deletes the specified Azure key vault.
  syntax:
    content: delete(resource_group_name, vault_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the vault belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the vault to delete
      id: vault_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.delete
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: get(resource_group_name, vault_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Gets the specified Azure key vault.
  syntax:
    content: get(resource_group_name, vault_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the vault belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Vault or ClientRawResponse if raw=true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.Vault
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: get_deleted(vault_name, location, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deleted
  summary: Gets the deleted Azure key vault.
  syntax:
    content: get_deleted(vault_name, location, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: The location of the deleted vault.
      id: location
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeletedVault or ClientRawResponse if raw=true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.DeletedVault
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get_deleted
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: list(top=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: 'The List operation gets information about the vaults associated with

    the subscription.'
  syntax:
    content: list(top=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: Maximum number of results to return.
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Resource
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.ResourcePaged[azure.mgmt.keyvault.v2019_09_01.models.Resource]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: list_by_resource_group(resource_group_name, top=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_by_resource_group
  summary: 'The List operation gets information about the vaults associated with

    the subscription and within the specified resource group.'
  syntax:
    content: list_by_resource_group(resource_group_name, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the vault belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Maximum number of results to return.
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Vault
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultPaged[azure.mgmt.keyvault.v2019_09_01.models.Vault]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_resource_group
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_subscription
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: list_by_subscription(top=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_by_subscription
  summary: 'The List operation gets information about the vaults associated with

    the subscription.'
  syntax:
    content: list_by_subscription(top=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: Maximum number of results to return.
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Vault
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultPaged[azure.mgmt.keyvault.v2019_09_01.models.Vault]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_subscription
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: list_deleted(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_deleted
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: list_deleted(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeletedVault
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.DeletedVaultPaged[azure.mgmt.keyvault.v2019_09_01.models.DeletedVault]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_deleted
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.purge_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: purge_deleted(vault_name, location, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: purge_deleted
  summary: 'Permanently deletes the specified vault. aka Purges the deleted Azure

    key vault.'
  syntax:
    content: purge_deleted(vault_name, location, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: The name of the soft-deleted vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: The location of the soft-deleted vault.
      id: location
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.purge_deleted
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: update(resource_group_name, vault_name, tags=None, properties=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: Update a key vault in the specified subscription.
  syntax:
    content: update(resource_group_name, vault_name, tags=None, properties=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the server belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault
      id: vault_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The tags that will be assigned to the key vault.
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: Properties of the vault
      id: properties
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultPatchProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Vault or ClientRawResponse if raw=true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.Vault
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update_access_policy
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: update_access_policy(resource_group_name, vault_name, operation_kind, properties,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: update_access_policy
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: update_access_policy(resource_group_name, vault_name, operation_kind,
      properties, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the Resource Group to which

        the vault belongs.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault
      id: vault_name
      isRequired: true
      type:
      - str
    - description: 'Name of the operation. Possible values include:

        ''add'', ''replace'', ''remove'''
      id: operation_kind
      isRequired: true
      type:
      - str
      - azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyUpdateKind
    - description: Properties of the access policy
      id: properties
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultAccessPolicyProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: VaultAccessPolicyParameters or ClientRawResponse if raw=true
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.VaultAccessPolicyParameters
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update_access_policy
- class: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.models
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.keyvault.v2019_09_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\keyvault\\v2019_09_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.models
references:
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.check_name_availability
  isExternal: false
  name: check_name_availability(name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.check_name_availability
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, vault_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.create_or_update
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.delete
  isExternal: false
  name: delete(resource_group_name, vault_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.delete
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get
  isExternal: false
  name: get(resource_group_name, vault_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get_deleted
  isExternal: false
  name: get_deleted(vault_name, location, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.get_deleted
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list
  isExternal: false
  name: list(top=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, top=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_resource_group
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_subscription
  isExternal: false
  name: list_by_subscription(top=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_by_subscription
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_deleted
  isExternal: false
  name: list_deleted(custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.list_deleted
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.purge_deleted
  isExternal: false
  name: purge_deleted(vault_name, location, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.purge_deleted
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update
  isExternal: false
  name: update(resource_group_name, vault_name, tags=None, properties=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update_access_policy
  isExternal: false
  name: update_access_policy(resource_group_name, vault_name, operation_kind, properties,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.update_access_policy
- fullName: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2019_09_01.operations.VaultsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.keyvault.v2019_09_01.models.Vault]
  name: AzureOperationPoller[Vault]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.Vault
    name: Vault
    uid: azure.mgmt.keyvault.v2019_09_01.models.Vault
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.keyvault.v2019_09_01.models.Vault]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.keyvault.v2019_09_01.models.Vault]]
  name: AzureOperationPoller[ClientRawResponse[Vault]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.Vault
    name: Vault
    uid: azure.mgmt.keyvault.v2019_09_01.models.Vault
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.keyvault.v2019_09_01.models.Vault]]
- fullName: azure.mgmt.keyvault.v2019_09_01.models.ResourcePaged[azure.mgmt.keyvault.v2019_09_01.models.Resource]
  name: ResourcePaged[Resource]
  spec.python:
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.ResourcePaged
    name: ResourcePaged
    uid: azure.mgmt.keyvault.v2019_09_01.models.ResourcePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.Resource
    name: Resource
    uid: azure.mgmt.keyvault.v2019_09_01.models.Resource
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.keyvault.v2019_09_01.models.ResourcePaged[azure.mgmt.keyvault.v2019_09_01.models.Resource]
- fullName: azure.mgmt.keyvault.v2019_09_01.models.VaultPaged[azure.mgmt.keyvault.v2019_09_01.models.Vault]
  name: VaultPaged[Vault]
  spec.python:
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.VaultPaged
    name: VaultPaged
    uid: azure.mgmt.keyvault.v2019_09_01.models.VaultPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.Vault
    name: Vault
    uid: azure.mgmt.keyvault.v2019_09_01.models.Vault
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.keyvault.v2019_09_01.models.VaultPaged[azure.mgmt.keyvault.v2019_09_01.models.Vault]
- fullName: azure.mgmt.keyvault.v2019_09_01.models.DeletedVaultPaged[azure.mgmt.keyvault.v2019_09_01.models.DeletedVault]
  name: DeletedVaultPaged[DeletedVault]
  spec.python:
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.DeletedVaultPaged
    name: DeletedVaultPaged
    uid: azure.mgmt.keyvault.v2019_09_01.models.DeletedVaultPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.DeletedVault
    name: DeletedVault
    uid: azure.mgmt.keyvault.v2019_09_01.models.DeletedVault
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.keyvault.v2019_09_01.models.DeletedVaultPaged[azure.mgmt.keyvault.v2019_09_01.models.DeletedVault]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
