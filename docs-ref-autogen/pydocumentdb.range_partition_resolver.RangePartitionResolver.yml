### YamlMime:UniversalReference
api_name: []
items:
- children:
  - pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForCreate
  - pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForRead
  class: pydocumentdb.range_partition_resolver.RangePartitionResolver
  fullName: pydocumentdb.range_partition_resolver.RangePartitionResolver
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: pydocumentdb.range_partition_resolver
  name: RangePartitionResolver
  source:
    id: RangePartitionResolver
    path: pydocumentdb\range_partition_resolver.py
    remote:
      branch: master
      path: pydocumentdb\range_partition_resolver.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 27
  summary: 'RangePartitionResolver implements partitioning based on the ranges, allowing
    you to

    distribute requests and data across a number of partitions.



    '
  syntax:
    content: RangePartitionResolver(partition_key_extractor, partition_map)
  type: class
  uid: pydocumentdb.range_partition_resolver.RangePartitionResolver
- class: pydocumentdb.range_partition_resolver.RangePartitionResolver
  fullName: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForCreate
  langs:
  - python
  module: pydocumentdb.range_partition_resolver
  name: ResolveForCreate
  source:
    id: ResolveForCreate
    path: pydocumentdb\range_partition_resolver.py
    remote:
      branch: master
      path: pydocumentdb\range_partition_resolver.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 46
  summary: 'Resolves the collection for creating the document based on the partition
    key.

    '
  syntax:
    content: ResolveForCreate(document)
    parameters:
    - description: 'The document to be created.

        '
      id: document
      type:
      - dict
    return:
      description: 'Collection Self link or Name based link which should handle the
        Create operation.

        '
      type:
      - str
  type: method
  uid: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForCreate
- class: pydocumentdb.range_partition_resolver.RangePartitionResolver
  fullName: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForRead
  langs:
  - python
  module: pydocumentdb.range_partition_resolver
  name: ResolveForRead
  source:
    id: ResolveForRead
    path: pydocumentdb\range_partition_resolver.py
    remote:
      branch: master
      path: pydocumentdb\range_partition_resolver.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 68
  summary: 'Resolves the collection for reading/querying the documents based on the
    partition key.

    '
  syntax:
    content: ResolveForRead(partition_key)
    parameters:
    - description: 'The document to be read/queried.

        '
      id: document
      type:
      - dict
    return:
      description: 'Collection Self link(s) or Name based link(s) which should handle
        the Read operation.

        '
      type:
      - list
  type: method
  uid: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForRead
references:
- fullName: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForCreate
  isExternal: false
  name: ResolveForCreate
  parent: pydocumentdb.range_partition_resolver.RangePartitionResolver
  uid: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForCreate
- fullName: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForRead
  isExternal: false
  name: ResolveForRead
  parent: pydocumentdb.range_partition_resolver.RangePartitionResolver
  uid: pydocumentdb.range_partition_resolver.RangePartitionResolver.ResolveForRead
