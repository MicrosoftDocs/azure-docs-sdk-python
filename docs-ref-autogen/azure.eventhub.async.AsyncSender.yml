### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.async.AsyncSender.send
  class: azure.eventhub.async.AsyncSender
  fullName: azure.eventhub.async.AsyncSender
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub.Sender
  langs:
  - python
  module: azure.eventhub.async
  name: AsyncSender
  source:
    id: AsyncSender
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 185
  summary: 'Implements the async API of a Sender.


    '
  syntax:
    content: AsyncSender(client, target, partition=None, loop=None)
  type: class
  uid: azure.eventhub.async.AsyncSender
- class: azure.eventhub.async.AsyncSender
  fullName: azure.eventhub.async.AsyncSender.send
  langs:
  - python
  module: azure.eventhub.async
  name: send
  source:
    id: send
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 212
  summary: "Sends an event data and asynchronously waits until\nacknowledgement is\
    \ received or operation times out.\n:param event_data: The event to be sent.\n\
    :type event_data: ~azure.eventhub.EventData\n:raises: ~azure.eventhub.EventHubError\
    \ if the message fails to\n\n\n   send.\n"
  syntax:
    content: send(event_data)
    parameters:
    - id: event_data
  type: method
  uid: azure.eventhub.async.AsyncSender.send
references:
- fullName: azure.eventhub.async.AsyncSender.send
  isExternal: false
  name: send
  parent: azure.eventhub.async.AsyncSender
  uid: azure.eventhub.async.AsyncSender.send
