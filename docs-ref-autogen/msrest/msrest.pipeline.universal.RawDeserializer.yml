### YamlMime:PythonClass
uid: msrest.pipeline.universal.RawDeserializer
name: RawDeserializer
fullName: msrest.pipeline.universal.RawDeserializer
module: msrest.pipeline.universal
inheritances:
- msrest.pipeline.SansIOHTTPPolicy
constructor:
  syntax: RawDeserializer()
methods:
- uid: msrest.pipeline.universal.RawDeserializer.deserialize_from_http_generics
  name: deserialize_from_http_generics
  summary: 'Deserialize from HTTP response.


    Use bytes and headers to NOT use any requests/aiohttp or whatever

    specific implementation.

    Headers will tested for "content-type"'
  signature: 'deserialize_from_http_generics(body_bytes: AnyStr | IO | None, headers:
    Mapping) -> Any'
  parameters:
  - name: body_bytes
    isRequired: true
  - name: headers
    isRequired: true
- uid: msrest.pipeline.universal.RawDeserializer.deserialize_from_text
  name: deserialize_from_text
  summary: 'Decode data according to content-type.


    Accept a stream of data as well, but will be load at once in memory for now.


    If no content-type, will return the string version (not bytes, not stream)'
  signature: 'deserialize_from_text(data: AnyStr | IO | None, content_type: str |
    None = None) -> Any'
  parameters:
  - name: data
    description: Input, could be bytes or stream (will be decoded with UTF8) or text
    isRequired: true
    types:
    - <xref:msrest.pipeline.universal.str>
    - <xref:msrest.pipeline.universal.bytes>
    - <xref:msrest.pipeline.universal.IO>
  - name: content_type
    description: The content type.
    defaultValue: None
    types:
    - <xref:msrest.pipeline.universal.str>
- uid: msrest.pipeline.universal.RawDeserializer.on_response
  name: on_response
  summary: 'Extract data from the body of a REST response object.


    This will load the entire payload in memory.


    Will follow Content-Type to parse.

    We assume everything is UTF8 (BOM acceptable).'
  signature: 'on_response(request: Request, response: Response, **kwargs: Any) ->
    None'
  parameters:
  - name: raw_data
    description: Data to be processed.
    isRequired: true
  - name: content_type
    description: How to parse if raw_data is a string/bytes.
    isRequired: true
  - name: request
    isRequired: true
  - name: response
    isRequired: true
  exceptions:
  - type: JSONDecodeError
    description: If JSON is requested and parsing is impossible.
  - type: UnicodeDecodeError
    description: If bytes is not UTF8
  - type: xml.etree.ElementTree.ParseError
    description: If bytes is not valid XML
attributes:
- uid: msrest.pipeline.universal.RawDeserializer.CONTEXT_NAME
  name: CONTEXT_NAME
  signature: CONTEXT_NAME = 'deserialized_data'
- uid: msrest.pipeline.universal.RawDeserializer.JSON_REGEXP
  name: JSON_REGEXP
  signature: JSON_REGEXP = re.compile('^(application|text)/([a-z+.]+\\+)?json$')
