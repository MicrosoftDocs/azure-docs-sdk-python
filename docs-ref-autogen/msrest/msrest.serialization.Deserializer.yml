### YamlMime:PythonClass
uid: msrest.serialization.Deserializer
name: Deserializer
fullName: msrest.serialization.Deserializer
module: msrest.serialization
inheritances:
- builtins.object
summary: Response object model deserializer.
constructor:
  syntax: Deserializer(classes=None)
  parameters:
  - name: classes
    description: Class type dictionary for deserializing complex types.
    isRequired: true
    types:
    - <xref:dict>
variables:
- description: Ordered list of extractors to be used by this deserializer.
  name: key_extractors
  types:
  - <xref:list>
methods:
- uid: msrest.serialization.Deserializer.deserialize_base64
  name: deserialize_base64
  summary: Deserialize base64 encoded string into string.
  signature: deserialize_base64(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:bytearray>
  exceptions:
  - type: TypeError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_basic
  name: deserialize_basic
  summary: 'Deserialize baisc builtin data type from string.

    Will attempt to convert to str, int, float and bool.

    This function will also accept ''1'', ''0'', ''true'' and ''false'' as

    valid bool values.'
  signature: deserialize_basic(attr, data_type)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  - name: data_type
    description: deserialization data type.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:str>, <xref:int>, <xref:float>
    - <xref:bool>
  exceptions:
  - type: TypeError if string format is not valid.
- uid: msrest.serialization.Deserializer.deserialize_bytearray
  name: deserialize_bytearray
  summary: Deserialize string into bytearray.
  signature: deserialize_bytearray(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:bytearray>
  exceptions:
  - type: TypeError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_data
  name: deserialize_data
  summary: Process data for deserialization according to data type.
  signature: deserialize_data(data, data_type)
  parameters:
  - name: data
    description: The response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  - name: data_type
    description: The type to deserialize to.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Deserialized object.
  exceptions:
  - type: DeserializationError if deserialization fails.
- uid: msrest.serialization.Deserializer.deserialize_date
  name: deserialize_date
  summary: Deserialize ISO-8601 formatted string into Date object.
  signature: deserialize_date(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:Date>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_decimal
  name: deserialize_decimal
  summary: Deserialize string into Decimal object.
  signature: deserialize_decimal(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:Decimal>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_dict
  name: deserialize_dict
  summary: Deserialize a dictionary.
  signature: deserialize_dict(attr, dict_type)
  parameters:
  - name: attr
    description: 'Dictionary to be deserialized. Also accepts

      a list of key, value pairs.'
    isRequired: true
    types:
    - <xref:dict/list>
  - name: dict_type
    description: The object type of the items in the dictionary.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:dict>
- uid: msrest.serialization.Deserializer.deserialize_duration
  name: deserialize_duration
  summary: Deserialize ISO-8601 formatted string into TimeDelta object.
  signature: deserialize_duration(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:TimeDelta>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_enum
  name: deserialize_enum
  summary: 'Deserialize string into enum object.


    If the string is not a valid enum value it will be returned as-is

    and a warning will be logged.'
  signature: deserialize_enum(data, enum_obj)
  parameters:
  - name: data
    description: 'Response string to be deserialized. If this value is

      None or invalid it will be returned as-is.'
    isRequired: true
    types:
    - <xref:str>
  - name: enum_obj
    description: Enum object to deserialize to.
    isRequired: true
    types:
    - <xref:Enum>
  return:
    types:
    - <xref:Enum>
- uid: msrest.serialization.Deserializer.deserialize_iso
  name: deserialize_iso
  summary: Deserialize ISO-8601 formatted string into Datetime object.
  signature: deserialize_iso(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:Datetime>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_iter
  name: deserialize_iter
  summary: Deserialize an iterable.
  signature: deserialize_iter(attr, iter_type)
  parameters:
  - name: attr
    description: Iterable to be deserialized.
    isRequired: true
    types:
    - <xref:list>
  - name: iter_type
    description: The type of object in the iterable.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:list>
- uid: msrest.serialization.Deserializer.deserialize_long
  name: deserialize_long
  summary: Deserialize string into long (Py2) or int (Py3).
  signature: deserialize_long(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:long>
    - <xref:int>
  exceptions:
  - type: ValueError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_object
  name: deserialize_object
  summary: 'Deserialize a generic object.

    This will be handled as a dictionary.'
  signature: deserialize_object(attr, **kwargs)
  parameters:
  - name: attr
    description: Dictionary to be deserialized.
    isRequired: true
    types:
    - <xref:dict>
  return:
    types:
    - <xref:dict>
  exceptions:
  - type: TypeError if non-builtin datatype encountered.
- uid: msrest.serialization.Deserializer.deserialize_rfc
  name: deserialize_rfc
  summary: Deserialize RFC-1123 formatted string into Datetime object.
  signature: deserialize_rfc(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:Datetime>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_time
  name: deserialize_time
  summary: Deserialize ISO-8601 formatted string into time object.
  signature: deserialize_time(attr)
  parameters:
  - name: attr
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:datetime.time>
  exceptions:
  - type: DeserializationError if string format invalid.
- uid: msrest.serialization.Deserializer.deserialize_unicode
  name: deserialize_unicode
  summary: 'Preserve unicode objects in Python 2, otherwise return data

    as a string.'
  signature: deserialize_unicode(data)
  parameters:
  - name: data
    description: response string to be deserialized.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:str>
    - <xref:unicode>
- uid: msrest.serialization.Deserializer.deserialize_unix
  name: deserialize_unix
  summary: 'Serialize Datetime object into IntTime format.

    This is represented as seconds.'
  signature: deserialize_unix(attr)
  parameters:
  - name: attr
    description: Object to be serialized.
    isRequired: true
    types:
    - <xref:int>
  return:
    types:
    - <xref:Datetime>
  exceptions:
  - type: DeserializationError if format invalid
- uid: msrest.serialization.Deserializer.failsafe_deserialize
  name: failsafe_deserialize
  summary: 'Ignores any errors encountered in deserialization,

    and falls back to not deserializing the object. Recommended

    for use in error deserialization, as we want to return the

    HttpResponseError to users, and not have them deal with

    a deserialization error.'
  signature: failsafe_deserialize(target_obj, data, content_type=None)
  parameters:
  - name: target_obj
    description: The target object type to deserialize to.
    isRequired: true
    types:
    - <xref:str>
  - name: data
    description: The response data to deseralize.
    isRequired: true
    types:
    - <xref:str/dict>
  - name: content_type
    description: Swagger "produces" if available.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
attributes:
- uid: msrest.serialization.Deserializer.basic_types
  name: basic_types
  signature: 'basic_types = {<class ''str''>: ''str'', <class ''int''>: ''int'', <class
    ''bool''>: ''bool'', <class ''float''>: ''float''}'
- uid: msrest.serialization.Deserializer.valid_date
  name: valid_date
  signature: valid_date = re.compile('\\d{4}[-]\\d{2}[-]\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.?\\d*Z?[-+]?[\\d{2}]?:?[\\d{2}]?')
