### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msrest.universal_http.AsyncClientResponse.stream_download
  class: msrest.universal_http.AsyncClientResponse
  fullName: msrest.universal_http.AsyncClientResponse
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.universal_http.HTTPClientResponse
  langs:
  - python
  module: msrest.universal_http
  name: AsyncClientResponse
  syntax:
    content: AsyncClientResponse(request, internal_response)
  type: class
  uid: msrest.universal_http.AsyncClientResponse
- class: msrest.universal_http.AsyncClientResponse
  fullName: msrest.universal_http.AsyncClientResponse.stream_download
  langs:
  - python
  module: msrest.universal_http
  name: 'stream_download(chunk_size: typing.Union[int, NoneType] = None, callback:
    typing.Union[typing.Callable, NoneType] = None) -> typing.AsyncIterator[bytes]'
  namewithoutparameters: stream_download
  summary: 'Generator for streaming request body data.


    Should be implemented by sub-classes if streaming download

    is supported.'
  syntax:
    content: 'stream_download(chunk_size: typing.Union[int, NoneType] = None, callback:
      typing.Union[typing.Callable, NoneType] = None) -> typing.AsyncIterator[bytes]'
    parameters:
    - description: Custom callback for monitoring progress.
      id: callback
      isRequired: true
    - description: ''
      id: chunk_size
      isRequired: true
      type:
      - int
  type: method
  uid: msrest.universal_http.AsyncClientResponse.stream_download
references:
- fullName: msrest.universal_http.AsyncClientResponse.stream_download
  isExternal: false
  name: 'stream_download(chunk_size: typing.Union[int, NoneType] = None, callback:
    typing.Union[typing.Callable, NoneType] = None) -> typing.AsyncIterator[bytes]'
  parent: msrest.universal_http.AsyncClientResponse
  uid: msrest.universal_http.AsyncClientResponse.stream_download
