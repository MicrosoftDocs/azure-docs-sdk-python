### YamlMime:PythonClass
uid: msrest.universal_http.aiohttp.AioHttpClientResponse
name: AioHttpClientResponse
fullName: msrest.universal_http.aiohttp.AioHttpClientResponse
module: msrest.universal_http.aiohttp
inheritances:
- msrest.universal_http.async_abc.AsyncClientResponse
constructor:
  syntax: 'AioHttpClientResponse(request: ClientRequest, aiohttp_response: ClientResponse)'
  parameters:
  - name: request
  - name: aiohttp_response
methods:
- uid: msrest.universal_http.aiohttp.AioHttpClientResponse.body
  name: body
  summary: Return the whole body as bytes in memory.
  signature: body() -> bytes
- uid: msrest.universal_http.aiohttp.AioHttpClientResponse.load_body
  name: load_body
  summary: Load in memory the body, so it could be accessible from sync methods.
  signature: async load_body() -> None
- uid: msrest.universal_http.aiohttp.AioHttpClientResponse.raise_for_status
  name: raise_for_status
  summary: Raise for status. Should be overridden, but basic implementation provided.
  signature: raise_for_status()
- uid: msrest.universal_http.aiohttp.AioHttpClientResponse.stream_download
  name: stream_download
  summary: Generator for streaming request body data.
  signature: 'stream_download(chunk_size: int | None = None, callback: Callable |
    None = None) -> AsyncIterator[bytes]'
  parameters:
  - name: chunk_size
    defaultValue: None
  - name: callback
    defaultValue: None
