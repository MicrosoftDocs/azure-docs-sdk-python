### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msrest.authentication.ApiKeyCredentials.signed_session
  class: msrest.authentication.ApiKeyCredentials
  fullName: msrest.authentication.ApiKeyCredentials
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.authentication.Authentication
  langs:
  - python
  module: msrest.authentication
  name: ApiKeyCredentials
  summary: 'Represent the ApiKey feature of Swagger.


    Dict should be dict[str,str] to be accepted by requests.'
  syntax:
    content: ApiKeyCredentials(in_headers=None, in_query=None)
    parameters:
    - description: Headers part of the ApiKey
      id: in_headers
      type:
      - dict[str,str]
    - description: ApiKey in the query as parameters
      id: in_query
      type:
      - dict[str,str]
  type: class
  uid: msrest.authentication.ApiKeyCredentials
- class: msrest.authentication.ApiKeyCredentials
  fullName: msrest.authentication.ApiKeyCredentials.signed_session
  langs:
  - python
  module: msrest.authentication
  name: signed_session(session=None)
  namewithoutparameters: signed_session
  summary: 'Create requests session with ApiKey.


    If a session object is provided, configure it directly. Otherwise,

    create a new session and return it.'
  syntax:
    content: signed_session(session=None)
    parameters:
    - defaultValue: None
      description: The session to configure for authentication
      id: session
      type:
      - requests.Session
    return:
      type:
      - requests.Session
  type: method
  uid: msrest.authentication.ApiKeyCredentials.signed_session
references:
- fullName: msrest.authentication.ApiKeyCredentials.signed_session
  isExternal: false
  name: signed_session(session=None)
  parent: msrest.authentication.ApiKeyCredentials
  uid: msrest.authentication.ApiKeyCredentials.signed_session
- fullName: dict[str,str]
  name: dict[str,str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,str
    name: str,str
    uid: str,str
  - fullName: ']'
    name: ']'
  uid: dict[str,str]
