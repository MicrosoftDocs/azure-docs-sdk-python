### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msrest.pipeline.async_abc.AsyncHTTPPolicy.send
  class: msrest.pipeline.async_abc.AsyncHTTPPolicy
  fullName: msrest.pipeline.async_abc.AsyncHTTPPolicy
  inheritance:
  - inheritance:
    - type: builtins.object
    type: abc.ABC
  - inheritance:
    - type: builtins.object
    type: typing.Generic
  langs:
  - python
  module: msrest.pipeline.async_abc
  name: AsyncHTTPPolicy
  summary: An http policy ABC.
  syntax:
    content: AsyncHTTPPolicy() -> None
  type: class
  uid: msrest.pipeline.async_abc.AsyncHTTPPolicy
- class: msrest.pipeline.async_abc.AsyncHTTPPolicy
  fullName: msrest.pipeline.async_abc.AsyncHTTPPolicy.send
  langs:
  - python
  module: msrest.pipeline.async_abc
  name: 'send(request: msrest.pipeline.Request, **kwargs: typing.Any) -> msrest.pipeline.Response[HTTPRequestType,
    AsyncHTTPResponseType]'
  namewithoutparameters: send
  summary: 'Mutate the request.


    Context content is dependent of the HTTPSender.'
  syntax:
    content: 'send(request: msrest.pipeline.Request, **kwargs: typing.Any) -> msrest.pipeline.Response[HTTPRequestType,
      AsyncHTTPResponseType]'
  type: method
  uid: msrest.pipeline.async_abc.AsyncHTTPPolicy.send
references:
- fullName: msrest.pipeline.async_abc.AsyncHTTPPolicy.send
  isExternal: false
  name: 'send(request: msrest.pipeline.Request, **kwargs: typing.Any) -> msrest.pipeline.Response[HTTPRequestType,
    AsyncHTTPResponseType]'
  parent: msrest.pipeline.async_abc.AsyncHTTPPolicy
  uid: msrest.pipeline.async_abc.AsyncHTTPPolicy.send
