### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update_authorization_rule
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete_authorization_rule
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get_authorization_rule
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_authorization_rules
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_by_namespace
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_keys
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.regenerate_keys
  - azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.models
  class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: TopicsOperations
  summary: TopicsOperations operations.
  syntax:
    content: TopicsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API version. Constant value: "2017-04-01".'
      id: api_version
  type: class
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: create_or_update(resource_group_name, namespace_name, topic_name, parameters,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_or_update
  summary: Creates a topic in the specified namespace.
  syntax:
    content: create_or_update(resource_group_name, namespace_name, topic_name, parameters,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to create a topic resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.servicebus.models.SBTopic
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SBTopic or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.SBTopic
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update_authorization_rule
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: create_or_update_authorization_rule(resource_group_name, namespace_name, topic_name,
    authorization_rule_name, rights, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_or_update_authorization_rule
  summary: Creates an authorization rule for the specified topic.
  syntax:
    content: create_or_update_authorization_rule(resource_group_name, namespace_name,
      topic_name, authorization_rule_name, rights, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: The rights associated with the rule.
      id: rights
      isRequired: true
      type:
      - list[str
      - azure.mgmt.servicebus.models.AccessRights]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SBAuthorizationRule or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.SBAuthorizationRule
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update_authorization_rule
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: delete(resource_group_name, namespace_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete
  summary: Deletes a topic from the specified namespace and resource group.
  syntax:
    content: delete(resource_group_name, namespace_name, topic_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete_authorization_rule
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: delete_authorization_rule(resource_group_name, namespace_name, topic_name,
    authorization_rule_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_authorization_rule
  summary: Deletes a topic authorization rule.
  syntax:
    content: delete_authorization_rule(resource_group_name, namespace_name, topic_name,
      authorization_rule_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete_authorization_rule
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: get(resource_group_name, namespace_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: Returns a description for the specified topic.
  syntax:
    content: get(resource_group_name, namespace_name, topic_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SBTopic or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.SBTopic
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get_authorization_rule
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: get_authorization_rule(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_authorization_rule
  summary: Returns the specified authorization rule.
  syntax:
    content: get_authorization_rule(resource_group_name, namespace_name, topic_name,
      authorization_rule_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SBAuthorizationRule or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.SBAuthorizationRule
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get_authorization_rule
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_authorization_rules
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: list_authorization_rules(resource_group_name, namespace_name, topic_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_authorization_rules
  summary: Gets authorization rules for a topic.
  syntax:
    content: list_authorization_rules(resource_group_name, namespace_name, topic_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SBAuthorizationRule
      type:
      - azure.mgmt.servicebus.models.SBAuthorizationRulePaged[azure.mgmt.servicebus.models.SBAuthorizationRule]
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_authorization_rules
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_by_namespace
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: list_by_namespace(resource_group_name, namespace_name, skip=None, top=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_by_namespace
  summary: Gets all the topics in a namespace.
  syntax:
    content: list_by_namespace(resource_group_name, namespace_name, skip=None, top=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Skip is only used if a previous operation returned a

        partial result. If a previous response contains a nextLink element,

        the value of the nextLink element will include a skip parameter that

        specifies a starting point to use for subsequent calls.'
      id: skip
      type:
      - int
    - defaultValue: None
      description: 'May be used to limit the number of results to the most

        recent N usageDetails.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SBTopic
      type:
      - azure.mgmt.servicebus.models.SBTopicPaged[azure.mgmt.servicebus.models.SBTopic]
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_by_namespace
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_keys
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: list_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_keys
  summary: Gets the primary and secondary connection strings for the topic.
  syntax:
    content: list_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: AccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.AccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_keys
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  exceptions:
  - type: azure.mgmt.servicebus.models.ErrorResponseException
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.regenerate_keys
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: regenerate_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    key_type, key=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: regenerate_keys
  summary: Regenerates primary or secondary connection strings for the topic.
  syntax:
    content: regenerate_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
      key_type, key=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Name of the Resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The topic name.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: 'The access key to regenerate. Possible values

        include: ''PrimaryKey'', ''SecondaryKey'''
      id: key_type
      isRequired: true
      type:
      - str
      - azure.mgmt.servicebus.models.KeyType
    - defaultValue: None
      description: 'Optional, if the key value provided, is reset for KeyType

        value or autogenerate Key value set for keyType'
      id: key
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: AccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicebus.models.AccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.regenerate_keys
- class: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.models
  langs:
  - python
  module: azure.mgmt.servicebus.operations.topics_operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.servicebus.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\servicebus\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.models
references:
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, namespace_name, topic_name, parameters,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update_authorization_rule
  isExternal: false
  name: create_or_update_authorization_rule(resource_group_name, namespace_name, topic_name,
    authorization_rule_name, rights, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.create_or_update_authorization_rule
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete
  isExternal: false
  name: delete(resource_group_name, namespace_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete_authorization_rule
  isExternal: false
  name: delete_authorization_rule(resource_group_name, namespace_name, topic_name,
    authorization_rule_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.delete_authorization_rule
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get
  isExternal: false
  name: get(resource_group_name, namespace_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get_authorization_rule
  isExternal: false
  name: get_authorization_rule(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.get_authorization_rule
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_authorization_rules
  isExternal: false
  name: list_authorization_rules(resource_group_name, namespace_name, topic_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_authorization_rules
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_by_namespace
  isExternal: false
  name: list_by_namespace(resource_group_name, namespace_name, skip=None, top=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_by_namespace
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_keys
  isExternal: false
  name: list_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.list_keys
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.regenerate_keys
  isExternal: false
  name: regenerate_keys(resource_group_name, namespace_name, topic_name, authorization_rule_name,
    key_type, key=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.regenerate_keys
- fullName: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations
  uid: azure.mgmt.servicebus.operations.topics_operations.TopicsOperations.models
- fullName: list[str
  name: list[str
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  uid: list[str
- fullName: azure.mgmt.servicebus.models.AccessRights]
  name: AccessRights]
  spec.python:
  - fullName: azure.mgmt.servicebus.models.AccessRights
    name: AccessRights
    uid: azure.mgmt.servicebus.models.AccessRights
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.servicebus.models.AccessRights]
- fullName: azure.mgmt.servicebus.models.SBAuthorizationRulePaged[azure.mgmt.servicebus.models.SBAuthorizationRule]
  name: SBAuthorizationRulePaged[SBAuthorizationRule]
  spec.python:
  - fullName: azure.mgmt.servicebus.models.SBAuthorizationRulePaged
    name: SBAuthorizationRulePaged
    uid: azure.mgmt.servicebus.models.SBAuthorizationRulePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicebus.models.SBAuthorizationRule
    name: SBAuthorizationRule
    uid: azure.mgmt.servicebus.models.SBAuthorizationRule
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.servicebus.models.SBAuthorizationRulePaged[azure.mgmt.servicebus.models.SBAuthorizationRule]
- fullName: azure.mgmt.servicebus.models.SBTopicPaged[azure.mgmt.servicebus.models.SBTopic]
  name: SBTopicPaged[SBTopic]
  spec.python:
  - fullName: azure.mgmt.servicebus.models.SBTopicPaged
    name: SBTopicPaged
    uid: azure.mgmt.servicebus.models.SBTopicPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicebus.models.SBTopic
    name: SBTopic
    uid: azure.mgmt.servicebus.models.SBTopic
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.servicebus.models.SBTopicPaged[azure.mgmt.servicebus.models.SBTopic]
