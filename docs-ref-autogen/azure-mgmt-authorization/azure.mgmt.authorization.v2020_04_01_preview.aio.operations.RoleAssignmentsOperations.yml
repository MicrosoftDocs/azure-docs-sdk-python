### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations
name: RoleAssignmentsOperations
fullName: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations
module: azure.mgmt.authorization.v2020_04_01_preview.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.authorization.v2020_04_01_preview.aio.AuthorizationManagementClient>'s\n\
  >\n> <xref:role_assignments> attribute.\n>"
constructor:
  syntax: RoleAssignmentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.create
  name: create
  summary: Create a role assignment.
  signature: 'async create(scope: str, role_assignment_name: str, parameters: _models.RoleAssignmentCreateParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.RoleAssignment'
  parameters:
  - name: scope
    description: 'The scope of the role assignment to create. The scope can be any
      REST resource

      instance. For example, use ''/subscriptions/{subscription-id}/'' for a subscription,

      ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'' for
      a resource group,

      and

      ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}''

      for a resource. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: role_assignment_name
    description: 'A GUID for the role assignment to create. The name must be unique

      and different for each role assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for the role assignment. Is either a

      RoleAssignmentCreateParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignmentCreateParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.create_by_id
  name: create_by_id
  summary: Creates a role assignment by ID.
  signature: 'async create_by_id(role_id: str, parameters: _models.RoleAssignmentCreateParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.RoleAssignment'
  parameters:
  - name: role_id
    description: The ID of the role assignment to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for the role assignment. Is either a

      RoleAssignmentCreateParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignmentCreateParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.delete
  name: delete
  summary: Delete a role assignment.
  signature: 'async delete(scope: str, role_assignment_name: str, tenant_id: str |
    None = None, **kwargs: Any) -> RoleAssignment | None'
  parameters:
  - name: scope
    description: The scope of the role assignment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_assignment_name
    description: The name of the role assignment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or None or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.delete_by_id
  name: delete_by_id
  summary: Delete a role assignment.
  signature: 'async delete_by_id(role_id: str, tenant_id: str | None = None, **kwargs:
    Any) -> RoleAssignment | None'
  parameters:
  - name: role_id
    description: The ID of the role assignment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or None or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.get
  name: get
  summary: Get the specified role assignment.
  signature: 'async get(scope: str, role_assignment_name: str, tenant_id: str | None
    = None, **kwargs: Any) -> RoleAssignment'
  parameters:
  - name: scope
    description: The scope of the role assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_assignment_name
    description: The name of the role assignment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.get_by_id
  name: get_by_id
  summary: Gets a role assignment by ID.
  signature: 'async get_by_id(role_id: str, tenant_id: str | None = None, **kwargs:
    Any) -> RoleAssignment'
  parameters:
  - name: role_id
    description: The ID of the role assignment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.list
  name: list
  summary: Gets all role assignments for the subscription.
  signature: 'list(filter: str | None = None, tenant_id: str | None = None, **kwargs:
    Any) -> AsyncIterable[RoleAssignment]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all role

      assignments at or above the scope. Use $filter=principalId eq {id} to return
      all role

      assignments at, above or below the scope for the specified principal. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.list_for_resource
  name: list_for_resource
  summary: List role assignments for a resource.
  signature: 'list_for_resource(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    str | None = None, tenant_id: str | None = None, **kwargs: Any) -> AsyncIterable[RoleAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to get role assignments for. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all role

      assignments at or above the scope. Use $filter=principalId eq {id} to return
      all role

      assignments at, above or below the scope for the specified principal. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: List role assignments for a resource group.
  signature: 'list_for_resource_group(resource_group_name: str, filter: str | None
    = None, tenant_id: str | None = None, **kwargs: Any) -> AsyncIterable[RoleAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all role

      assignments at or above the scope. Use $filter=principalId eq {id} to return
      all role

      assignments at, above or below the scope for the specified principal. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.list_for_scope
  name: list_for_scope
  summary: Gets role assignments for a scope.
  signature: 'list_for_scope(scope: str, filter: str | None = None, tenant_id: str
    | None = None, **kwargs: Any) -> AsyncIterable[RoleAssignment]'
  parameters:
  - name: scope
    description: The scope of the role assignments. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all role

      assignments at or above the scope. Use $filter=principalId eq {id} to return
      all role

      assignments at, above or below the scope for the specified principal. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: Tenant ID for cross-tenant request. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2020_04_01_preview.aio.operations.RoleAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2020_04_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\authorization\\v2020_04_01_preview\\models\\__init__.py'>
