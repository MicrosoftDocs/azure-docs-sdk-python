### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations
name: RoleManagementPoliciesOperations
fullName: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations
module: azure.mgmt.authorization.v2020_10_01.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.authorization.v2020_10_01.AuthorizationManagementClient>'s\n\
  >\n> <xref:role_management_policies> attribute.\n>"
constructor:
  syntax: RoleManagementPoliciesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations.delete
  name: delete
  summary: Delete a role management policy.
  signature: 'delete(scope: str, role_management_policy_name: str, **kwargs: Any)
    -> None'
  parameters:
  - name: scope
    description: The scope of the role management policy to upsert. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: 'The name (guid) of the role management policy to upsert.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations.get
  name: get
  summary: Get the specified role management policy for a resource scope.
  signature: 'get(scope: str, role_management_policy_name: str, **kwargs: Any) ->
    RoleManagementPolicy'
  parameters:
  - name: scope
    description: The scope of the role management policy. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: 'The name (guid) of the role management policy to get.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicy or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01.models.RoleManagementPolicy>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations.list_for_scope
  name: list_for_scope
  summary: Gets role management policies for a resource scope.
  signature: 'list_for_scope(scope: str, **kwargs: Any) -> Iterable[RoleManagementPolicy]'
  parameters:
  - name: scope
    description: The scope of the role management policy. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either RoleManagementPolicy or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.authorization.v2020_10_01.models.RoleManagementPolicy>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations.update
  name: update
  summary: Update a role management policy.
  signature: 'update(scope: str, role_management_policy_name: str, parameters: _models.RoleManagementPolicy,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.RoleManagementPolicy'
  parameters:
  - name: scope
    description: The scope of the role management policy to upsert. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: 'The name (guid) of the role management policy to upsert.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for the role management policy. Is either a RoleManagementPolicy

      type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01.models.RoleManagementPolicy>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicy or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01.models.RoleManagementPolicy>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2020_10_01.operations.RoleManagementPoliciesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2020_10_01.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\authorization\\v2020_10_01\\models\\__init__.py'>
