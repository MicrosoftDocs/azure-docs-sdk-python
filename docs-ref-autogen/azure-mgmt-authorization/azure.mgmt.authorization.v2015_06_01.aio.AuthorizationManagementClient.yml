### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2015_06_01.aio.AuthorizationManagementClient
name: AuthorizationManagementClient
fullName: azure.mgmt.authorization.v2015_06_01.aio.AuthorizationManagementClient
module: azure.mgmt.authorization.v2015_06_01.aio
inheritances:
- builtins.object
summary: 'Role based access control provides you a way to apply granular level policy
  administration down

  to individual resources or resource groups. These operations enable you to manage
  role

  definitions and role assignments. A role definition describes the set of actions
  that can be

  performed on resources. A role assignment grants access to Azure Active Directory
  users.'
constructor:
  syntax: 'AuthorizationManagementClient(credential: AsyncTokenCredential, subscription_id:
    str, base_url: str = ''https://management.azure.com'', **kwargs: Any)'
  parameters:
  - name: credential
    description: Credential needed for the client to connect to Azure. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: subscription_id
    description: The ID of the target subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: base_url
    description: Service URL. Default value is "[https://management.azure.com](https://management.azure.com)".
    defaultValue: https://management.azure.com
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version. Default value is "2015-06-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
variables:
- description: ClassicAdministratorsOperations operations
  name: classic_administrators
  types:
  - <xref:azure.mgmt.authorization.v2015_06_01.aio.operations.ClassicAdministratorsOperations>
methods:
- uid: azure.mgmt.authorization.v2015_06_01.aio.AuthorizationManagementClient.close
  name: close
  signature: async close() -> None
