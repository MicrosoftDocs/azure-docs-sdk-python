### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations
name: RoleManagementPoliciesOperations
fullName: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations
module: azure.mgmt.authorization.v2020_10_01_preview.aio.operations
inheritances:
- builtins.object
summary: 'RoleManagementPoliciesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RoleManagementPoliciesOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations.delete
  name: delete
  summary: Delete a role management policy.
  signature: 'delete(scope: str, role_management_policy_name: str, **kwargs: Any)
    -> None'
  parameters:
  - name: scope
    description: The scope of the role management policy to upsert.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: The name (guid) of the role management policy to upsert.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations.get
  name: get
  summary: Get the specified role management policy for a resource scope.
  signature: 'get(scope: str, role_management_policy_name: str, **kwargs: Any) ->
    azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicy'
  parameters:
  - name: scope
    description: The scope of the role management policy.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: The name (guid) of the role management policy to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicy, or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicy>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations.list_for_scope
  name: list_for_scope
  summary: Gets role management policies for a resource scope.
  signature: 'list_for_scope(scope: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicyListResult]'
  parameters:
  - name: scope
    description: The scope of the role management policy.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleManagementPolicyListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicyListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations.update
  name: update
  summary: Update a role management policy.
  signature: 'update(scope: str, role_management_policy_name: str, parameters: azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicy,
    **kwargs: Any) -> azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicy'
  parameters:
  - name: scope
    description: The scope of the role management policy to upsert.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_name
    description: The name (guid) of the role management policy to upsert.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for the role management policy.
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicy>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicy, or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicy>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPoliciesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2020_10_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\authorization\\v2020_10_01_preview\\models\\__init__.py'>
