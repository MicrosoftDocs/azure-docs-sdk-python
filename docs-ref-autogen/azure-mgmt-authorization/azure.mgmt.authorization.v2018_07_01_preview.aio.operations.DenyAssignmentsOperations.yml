### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations
name: DenyAssignmentsOperations
fullName: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations
module: azure.mgmt.authorization.v2018_07_01_preview.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.authorization.v2018_07_01_preview.aio.AuthorizationManagementClient>'s\n\
  >\n> <xref:deny_assignments> attribute.\n>"
constructor:
  syntax: DenyAssignmentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.get
  name: get
  summary: Get the specified deny assignment.
  signature: 'async get(scope: str, deny_assignment_id: str, **kwargs: Any) -> DenyAssignment'
  parameters:
  - name: scope
    description: The scope of the deny assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deny_assignment_id
    description: The ID of the deny assignment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DenyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.get_by_id
  name: get_by_id
  summary: Gets a deny assignment by ID.
  signature: 'async get_by_id(deny_assignment_id: str, **kwargs: Any) -> DenyAssignment'
  parameters:
  - name: deny_assignment_id
    description: 'The fully qualified deny assignment ID. For example, use the format,

      /subscriptions/{guid}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}
      for

      subscription level deny assignments, or

      /providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for tenant
      level deny

      assignments. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DenyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.list
  name: list
  summary: Gets all deny assignments for the subscription.
  signature: 'list(filter: str | None = None, **kwargs: Any) -> AsyncIterable[DenyAssignment]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all deny

      assignments at or above the scope. Use $filter=denyAssignmentName eq ''{name}''
      to search deny

      assignments by name at specified scope. Use $filter=principalId eq ''{id}''
      to return all deny

      assignments at, above and below the scope for the specified principal. Use

      $filter=gdprExportPrincipalId eq ''{id}'' to return all deny assignments at,
      above and below the

      scope for the specified principal. This filter is different from the principalId
      filter as it

      returns not only those deny assignments that contain the specified principal
      is the Principals

      list but also those deny assignments that contain the specified principal is
      the

      ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used,
      only the deny

      assignment name and description properties are returned. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DenyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.list_for_resource
  name: list_for_resource
  summary: Gets deny assignments for a resource.
  signature: 'list_for_resource(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    str | None = None, **kwargs: Any) -> AsyncIterable[DenyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to get deny assignments for. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all deny

      assignments at or above the scope. Use $filter=denyAssignmentName eq ''{name}''
      to search deny

      assignments by name at specified scope. Use $filter=principalId eq ''{id}''
      to return all deny

      assignments at, above and below the scope for the specified principal. Use

      $filter=gdprExportPrincipalId eq ''{id}'' to return all deny assignments at,
      above and below the

      scope for the specified principal. This filter is different from the principalId
      filter as it

      returns not only those deny assignments that contain the specified principal
      is the Principals

      list but also those deny assignments that contain the specified principal is
      the

      ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used,
      only the deny

      assignment name and description properties are returned. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DenyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: Gets deny assignments for a resource group.
  signature: 'list_for_resource_group(resource_group_name: str, filter: str | None
    = None, **kwargs: Any) -> AsyncIterable[DenyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all deny

      assignments at or above the scope. Use $filter=denyAssignmentName eq ''{name}''
      to search deny

      assignments by name at specified scope. Use $filter=principalId eq ''{id}''
      to return all deny

      assignments at, above and below the scope for the specified principal. Use

      $filter=gdprExportPrincipalId eq ''{id}'' to return all deny assignments at,
      above and below the

      scope for the specified principal. This filter is different from the principalId
      filter as it

      returns not only those deny assignments that contain the specified principal
      is the Principals

      list but also those deny assignments that contain the specified principal is
      the

      ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used,
      only the deny

      assignment name and description properties are returned. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DenyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.list_for_scope
  name: list_for_scope
  summary: Gets deny assignments for a scope.
  signature: 'list_for_scope(scope: str, filter: str | None = None, **kwargs: Any)
    -> AsyncIterable[DenyAssignment]'
  parameters:
  - name: scope
    description: The scope of the deny assignments. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use $filter=atScope() to return
      all deny

      assignments at or above the scope. Use $filter=denyAssignmentName eq ''{name}''
      to search deny

      assignments by name at specified scope. Use $filter=principalId eq ''{id}''
      to return all deny

      assignments at, above and below the scope for the specified principal. Use

      $filter=gdprExportPrincipalId eq ''{id}'' to return all deny assignments at,
      above and below the

      scope for the specified principal. This filter is different from the principalId
      filter as it

      returns not only those deny assignments that contain the specified principal
      is the Principals

      list but also those deny assignments that contain the specified principal is
      the

      ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used,
      only the deny

      assignment name and description properties are returned. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DenyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2018_07_01_preview.models.DenyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2018_07_01_preview.aio.operations.DenyAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2018_07_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\authorization\\v2018_07_01_preview\\models\\__init__.py'>
