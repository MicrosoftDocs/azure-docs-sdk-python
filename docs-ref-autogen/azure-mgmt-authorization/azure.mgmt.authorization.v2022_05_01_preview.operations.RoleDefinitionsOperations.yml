### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations
name: RoleDefinitionsOperations
fullName: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations
module: azure.mgmt.authorization.v2022_05_01_preview.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.authorization.v2022_05_01_preview.AuthorizationManagementClient>'s\n\
  >\n> <xref:role_definitions> attribute.\n>"
constructor:
  syntax: RoleDefinitionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.create_or_update
  name: create_or_update
  summary: Creates or updates a role definition.
  signature: 'create_or_update(scope: str, role_definition_id: str, role_definition:
    _models.RoleDefinition, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.RoleDefinition'
  parameters:
  - name: scope
    description: 'The scope of the operation or resource. Valid scopes are: subscription
      (format:

      ''/subscriptions/{subscriptionId}''), resource group (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource
      (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: role_definition_id
    description: The ID of the role definition. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_definition
    description: 'The values for the role definition. Is either a RoleDefinition type
      or

      a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.delete
  name: delete
  summary: Deletes a role definition.
  signature: 'delete(scope: str, role_definition_id: str, **kwargs: Any) -> RoleDefinition
    | None'
  parameters:
  - name: scope
    description: 'The scope of the operation or resource. Valid scopes are: subscription
      (format:

      ''/subscriptions/{subscriptionId}''), resource group (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource
      (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: role_definition_id
    description: The ID of the role definition to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleDefinition or None or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.get
  name: get
  summary: Get role definition by ID (GUID).
  signature: 'get(scope: str, role_definition_id: str, **kwargs: Any) -> RoleDefinition'
  parameters:
  - name: scope
    description: 'The scope of the operation or resource. Valid scopes are: subscription
      (format:

      ''/subscriptions/{subscriptionId}''), resource group (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource
      (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: role_definition_id
    description: The ID of the role definition. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.get_by_id
  name: get_by_id
  summary: Gets a role definition by ID.
  signature: 'get_by_id(role_id: str, **kwargs: Any) -> RoleDefinition'
  parameters:
  - name: role_id
    description: 'The fully qualified role definition ID. Use the format,

      /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
      for

      subscription level role definitions, or

      /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant
      level role

      definitions. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.list
  name: list
  summary: Get all role definitions that are applicable at scope and above.
  signature: 'list(scope: str, filter: str | None = None, **kwargs: Any) -> Iterable[RoleDefinition]'
  parameters:
  - name: scope
    description: 'The scope of the operation or resource. Valid scopes are: subscription
      (format:

      ''/subscriptions/{subscriptionId}''), resource group (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource
      (format:

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Use atScopeAndBelow filter
      to search below

      the given scope as well. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.authorization.v2022_05_01_preview.models.RoleDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2022_05_01_preview.operations.RoleDefinitionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2022_05_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\authorization\\v2022_05_01_preview\\models\\__init__.py'>
