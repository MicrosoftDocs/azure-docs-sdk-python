### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2018_01_01_preview.aio.AuthorizationManagementClient
name: AuthorizationManagementClient
fullName: azure.mgmt.authorization.v2018_01_01_preview.aio.AuthorizationManagementClient
module: azure.mgmt.authorization.v2018_01_01_preview.aio
inheritances:
- builtins.object
summary: Role based access control provides you a way to apply granular level policy
  administration down to individual resources or resource groups. These calls handle
  provider operations.
constructor:
  syntax: 'AuthorizationManagementClient(credential: AsyncTokenCredential, subscription_id:
    str, base_url: Optional[str] = None, **kwargs: Any) -> None'
  parameters:
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: subscription_id
    description: The ID of the target subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: base_url
    description: Service URL
    isRequired: true
    types:
    - <xref:str>
variables:
- description: ProviderOperationsMetadataOperations operations
  name: provider_operations_metadata
  types:
  - <xref:azure.mgmt.authorization.v2018_01_01_preview.aio.operations.ProviderOperationsMetadataOperations>
- description: RoleAssignmentsOperations operations
  name: role_assignments
  types:
  - <xref:azure.mgmt.authorization.v2018_01_01_preview.aio.operations.RoleAssignmentsOperations>
- description: PermissionsOperations operations
  name: permissions
  types:
  - <xref:azure.mgmt.authorization.v2018_01_01_preview.aio.operations.PermissionsOperations>
- description: RoleDefinitionsOperations operations
  name: role_definitions
  types:
  - <xref:azure.mgmt.authorization.v2018_01_01_preview.aio.operations.RoleDefinitionsOperations>
methods:
- uid: azure.mgmt.authorization.v2018_01_01_preview.aio.AuthorizationManagementClient.close
  name: close
  signature: close() -> None
