### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations
name: RoleManagementPolicyAssignmentsOperations
fullName: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations
module: azure.mgmt.authorization.v2020_10_01_preview.aio.operations
inheritances:
- builtins.object
summary: 'RoleManagementPolicyAssignmentsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RoleManagementPolicyAssignmentsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations.create
  name: create
  summary: Create a role management policy assignment.
  signature: 'create(scope: str, role_management_policy_assignment_name: str, parameters:
    azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicyAssignment,
    **kwargs: Any) -> azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the role management policy assignment to upsert.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to upsert.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for the role management policy assignment.
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicyAssignment>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations.delete
  name: delete
  summary: Delete a role management policy assignment.
  signature: 'delete(scope: str, role_management_policy_assignment_name: str, **kwargs:
    Any) -> None'
  parameters:
  - name: scope
    description: The scope of the role management policy assignment to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to delete.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations.get
  name: get
  summary: Get the specified role management policy assignment for a resource scope.
  signature: 'get(scope: str, role_management_policy_assignment_name: str, **kwargs:
    Any) -> azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the role management policy.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to get.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleManagementPolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations.list_for_scope
  name: list_for_scope
  summary: Gets role management assignment policies for a resource scope.
  signature: 'list_for_scope(scope: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.authorization.v2020_10_01_preview.models._models_py3.RoleManagementPolicyAssignmentListResult]'
  parameters:
  - name: scope
    description: The scope of the role management policy.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RoleManagementPolicyAssignmentListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.authorization.v2020_10_01_preview.models.RoleManagementPolicyAssignmentListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.v2020_10_01_preview.aio.operations.RoleManagementPolicyAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.v2020_10_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\authorization\\v2020_10_01_preview\\models\\__init__.py'>
