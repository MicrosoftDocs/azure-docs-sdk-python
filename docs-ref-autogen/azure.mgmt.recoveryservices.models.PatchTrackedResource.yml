### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.recoveryservices.models.PatchTrackedResource
  fullName: azure.mgmt.recoveryservices.models.PatchTrackedResource
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.recoveryservices.models.resource_py3.Resource
  langs:
  - python
  module: azure.mgmt.recoveryservices.models
  name: PatchTrackedResource
  source:
    id: PatchTrackedResource
    path: azure-mgmt-recoveryservices\azure\mgmt\recoveryservices\models\patch_tracked_resource_py3.py
    remote:
      branch: master
      path: azure-mgmt-recoveryservices\azure\mgmt\recoveryservices\models\patch_tracked_resource_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Tracked resource with location.


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: 'PatchTrackedResource(*, e_tag: str = None, location: str = None, tags=None,
      **kwargs) -> None'
    parameters:
    - description: 'Optional ETag.

        '
      id: e_tag
      type:
      - str
    - description: 'Resource location.

        '
      id: location
      type:
      - str
    - description: 'Resource tags.

        '
      id: tags
      type:
      - dict[str, str]
    variables:
    - description: 'Resource Id represents the complete path to the resource.

        '
      id: id
      type:
      - str
    - description: 'Resource name associated with the resource.

        '
      id: name
      type:
      - str
    - description: 'Resource type represents the complete path of the form

        Namespace/ResourceType/ResourceType/...

        '
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.recoveryservices.models.PatchTrackedResource
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
