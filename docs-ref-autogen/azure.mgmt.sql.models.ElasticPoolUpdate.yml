### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.sql.models.ElasticPoolUpdate
  fullName: azure.mgmt.sql.models.ElasticPoolUpdate
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.sql.models
  name: ElasticPoolUpdate
  source:
    id: ElasticPoolUpdate
    path: azure-mgmt-sql\azure\mgmt\sql\models\elastic_pool_update_py3.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\models\elastic_pool_update_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'An elastic pool update.

    '
  syntax:
    content: 'ElasticPoolUpdate(*, sku=None, max_size_bytes: int = None, per_database_settings=None,
      zone_redundant: bool = None, license_type=None, tags=None, **kwargs) -> None'
    parameters:
    - description: ''
      id: sku
      type:
      - azure.mgmt.sql.models.Sku
    - description: 'The storage limit for the database elastic pool in

        bytes.

        '
      id: max_size_bytes
      type:
      - long
    - description: 'The per database settings for the elastic

        pool.

        '
      id: per_database_settings
      type:
      - azure.mgmt.sql.models.ElasticPoolPerDatabaseSettings
    - description: 'Whether or not this elastic pool is zone redundant,

        which means the replicas of this elastic pool will be spread across

        multiple availability zones.

        '
      id: zone_redundant
      type:
      - bool
    - description: 'The license type to apply for this elastic pool.

        Possible values include: ''LicenseIncluded'', ''BasePrice''

        '
      id: license_type
      type:
      - str
      - azure.mgmt.sql.models.ElasticPoolLicenseType
    - description: 'Resource tags.

        '
      id: tags
      type:
      - dict[str, str]
  type: class
  uid: azure.mgmt.sql.models.ElasticPoolUpdate
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
