### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations
name: PartnerTopicEventSubscriptionsOperations
fullName: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations
module: azure.mgmt.eventgrid.aio.operations
inheritances:
- builtins.object
summary: 'PartnerTopicEventSubscriptionsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: PartnerTopicEventSubscriptionsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update an event subscription of a partner topic.


    Asynchronously creates or updates an event subscription of a partner topic with
    the specified

    parameters. Existing event subscriptions will be updated with this API.'
  signature: 'async begin_create_or_update(resource_group_name: str, partner_topic_name:
    str, event_subscription_name: str, event_subscription_info: EventSubscription,
    **kwargs: Any) -> AsyncLROPoller[EventSubscription]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 100 characters in length and use alphanumeric
      letters

      only.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_info
    description: 'Event subscription properties containing the destination and

      filter information.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either EventSubscription
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.begin_delete
  name: begin_delete
  summary: 'Delete an event subscription of a partner topic.


    Delete an existing event subscription of a partner topic.'
  signature: 'async begin_delete(resource_group_name: str, partner_topic_name: str,
    event_subscription_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 100 characters in length and use alphanumeric
      letters

      only.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.begin_update
  name: begin_update
  summary: 'Update event subscription of a partner topic.


    Update an existing event subscription of a partner topic.'
  signature: 'async begin_update(resource_group_name: str, partner_topic_name: str,
    event_subscription_name: str, event_subscription_update_parameters: EventSubscriptionUpdateParameters,
    **kwargs: Any) -> AsyncLROPoller[EventSubscription]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 100 characters in length and use alphanumeric
      letters

      only.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_update_parameters
    description: Updated event subscription information.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionUpdateParameters>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either EventSubscription
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.get
  name: get
  summary: 'Get an event subscription of a partner topic.


    Get properties of an event subscription of a partner topic.'
  signature: 'async get(resource_group_name: str, partner_topic_name: str, event_subscription_name:
    str, **kwargs: Any) -> EventSubscription'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be found. Event subscription

      names must be between 3 and 100 characters in length and use alphanumeric letters
      only.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EventSubscription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.get_delivery_attributes
  name: get_delivery_attributes
  summary: 'Get delivery attributes for an event subscription of a partner topic.


    Get all delivery attributes for an event subscription of a partner topic.'
  signature: 'async get_delivery_attributes(resource_group_name: str, partner_topic_name:
    str, event_subscription_name: str, **kwargs: Any) -> DeliveryAttributeListResult'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 100 characters in length and use alphanumeric
      letters

      only.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeliveryAttributeListResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.DeliveryAttributeListResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.get_full_url
  name: get_full_url
  summary: 'Get full URL of an event subscription of a partner topic.


    Get the full endpoint URL for an event subscription of a partner topic.'
  signature: 'async get_full_url(resource_group_name: str, partner_topic_name: str,
    event_subscription_name: str, **kwargs: Any) -> EventSubscriptionFullUrl'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 100 characters in length and use alphanumeric
      letters

      only.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EventSubscriptionFullUrl, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionFullUrl>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.list_by_partner_topic
  name: list_by_partner_topic
  summary: 'List event subscriptions of a partner topic.


    List event subscriptions that belong to a specific partner topic.'
  signature: 'list_by_partner_topic(resource_group_name: str, partner_topic_name:
    str, filter: str | None = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: partner_topic_name
    description: Name of the partner topic.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventgrid.aio.operations.PartnerTopicEventSubscriptionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
