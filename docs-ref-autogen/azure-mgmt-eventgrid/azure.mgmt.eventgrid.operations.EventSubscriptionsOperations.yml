### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations
name: EventSubscriptionsOperations
fullName: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations
module: azure.mgmt.eventgrid.operations
inheritances:
- builtins.object
summary: 'EventSubscriptionsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: EventSubscriptionsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update an event subscription.


    Asynchronously creates a new event subscription or updates an existing event subscription
    based

    on the specified scope.'
  signature: 'begin_create_or_update(scope: str, event_subscription_name: str, event_subscription_info:
    EventSubscription, **kwargs: Any) -> LROPoller[EventSubscription]'
  parameters:
  - name: scope
    description: 'The identifier of the resource to which the event subscription needs
      to be

      created or updated. The scope can be a subscription, or a resource group, or
      a top level

      resource belonging to a resource provider namespace, or an EventGrid topic.
      For example, use

      ''/subscriptions/{subscriptionId}/'' for a subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription. Event subscription names must

      be between 3 and 64 characters in length and should use alphanumeric letters
      only.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_info
    description: 'Event subscription properties containing the destination and

      filter information.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either EventSubscription or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.begin_delete
  name: begin_delete
  summary: 'Delete an event subscription.


    Delete an existing event subscription.'
  signature: 'begin_delete(scope: str, event_subscription_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: scope
    description: 'The scope of the event subscription. The scope can be a subscription,
      or a

      resource group, or a top level resource belonging to a resource provider namespace,
      or an

      EventGrid topic. For example, use ''/subscriptions/{subscriptionId}/'' for a
      subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.begin_update
  name: begin_update
  summary: 'Update an event subscription.


    Asynchronously updates an existing event subscription.'
  signature: 'begin_update(scope: str, event_subscription_name: str, event_subscription_update_parameters:
    EventSubscriptionUpdateParameters, **kwargs: Any) -> LROPoller[EventSubscription]'
  parameters:
  - name: scope
    description: 'The scope of existing event subscription. The scope can be a subscription,
      or a

      resource group, or a top level resource belonging to a resource provider namespace,
      or an

      EventGrid topic. For example, use ''/subscriptions/{subscriptionId}/'' for a
      subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription to be updated.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_update_parameters
    description: Updated event subscription information.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionUpdateParameters>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either EventSubscription or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.get
  name: get
  summary: 'Get an event subscription.


    Get properties of an event subscription.'
  signature: 'get(scope: str, event_subscription_name: str, **kwargs: Any) -> EventSubscription'
  parameters:
  - name: scope
    description: 'The scope of the event subscription. The scope can be a subscription,
      or a

      resource group, or a top level resource belonging to a resource provider namespace,
      or an

      EventGrid topic. For example, use ''/subscriptions/{subscriptionId}/'' for a
      subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EventSubscription, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.get_delivery_attributes
  name: get_delivery_attributes
  summary: 'Get delivery attributes for an event subscription.


    Get all delivery attributes for an event subscription.'
  signature: 'get_delivery_attributes(scope: str, event_subscription_name: str, **kwargs:
    Any) -> DeliveryAttributeListResult'
  parameters:
  - name: scope
    description: 'The scope of the event subscription. The scope can be a subscription,
      or a

      resource group, or a top level resource belonging to a resource provider namespace,
      or an

      EventGrid topic. For example, use ''/subscriptions/{subscriptionId}/'' for a
      subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeliveryAttributeListResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.DeliveryAttributeListResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.get_full_url
  name: get_full_url
  summary: 'Get full URL of an event subscription.


    Get the full endpoint URL for an event subscription.'
  signature: 'get_full_url(scope: str, event_subscription_name: str, **kwargs: Any)
    -> EventSubscriptionFullUrl'
  parameters:
  - name: scope
    description: 'The scope of the event subscription. The scope can be a subscription,
      or a

      resource group, or a top level resource belonging to a resource provider namespace,
      or an

      EventGrid topic. For example, use ''/subscriptions/{subscriptionId}/'' for a
      subscription,

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' for a
      resource group, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}''

      for a resource, and

      ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}''

      for an EventGrid topic.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EventSubscriptionFullUrl, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionFullUrl>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_by_domain_topic
  name: list_by_domain_topic
  summary: 'List all event subscriptions for a specific domain topic.


    List all event subscriptions that have been created for a specific domain topic.'
  signature: 'list_by_domain_topic(resource_group_name: str, domain_name: str, topic_name:
    str, filter: str | None = None, top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_by_resource
  name: list_by_resource
  summary: 'List all event subscriptions.


    List all event subscriptions that have been created for a specific resource.'
  signature: 'list_by_resource(resource_group_name: str, provider_namespace: str,
    resource_type_name: str, resource_name: str, filter: str | None = None, top: int
    | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: provider_namespace
    description: Namespace of the provider of the topic.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type_name
    description: Name of the resource type.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: Name of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_global_by_resource_group
  name: list_global_by_resource_group
  summary: 'List all global event subscriptions under an Azure subscription and resource
    group.


    List all global event subscriptions under a specific Azure subscription and resource
    group.'
  signature: 'list_global_by_resource_group(resource_group_name: str, filter: str
    | None = None, top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_global_by_resource_group_for_topic_type
  name: list_global_by_resource_group_for_topic_type
  summary: 'List all global event subscriptions under a resource group for a topic
    type.


    List all global event subscriptions under a resource group for a specific topic
    type.'
  signature: 'list_global_by_resource_group_for_topic_type(resource_group_name: str,
    topic_type_name: str, filter: str | None = None, top: int | None = None, **kwargs:
    Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_type_name
    description: Name of the topic type.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_global_by_subscription
  name: list_global_by_subscription
  summary: 'Get an aggregated list of all global event subscriptions under an Azure
    subscription.


    List all aggregated global event subscriptions under a specific Azure subscription.'
  signature: 'list_global_by_subscription(filter: str | None = None, top: int | None
    = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_global_by_subscription_for_topic_type
  name: list_global_by_subscription_for_topic_type
  summary: 'List all global event subscriptions for a topic type.


    List all global event subscriptions under an Azure subscription for a topic type.'
  signature: 'list_global_by_subscription_for_topic_type(topic_type_name: str, filter:
    str | None = None, top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: topic_type_name
    description: Name of the topic type.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_regional_by_resource_group
  name: list_regional_by_resource_group
  summary: 'List all regional event subscriptions under an Azure subscription and
    resource group.


    List all event subscriptions from the given location under a specific Azure subscription
    and

    resource group.'
  signature: 'list_regional_by_resource_group(resource_group_name: str, location:
    str, filter: str | None = None, top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: Name of the location.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_regional_by_resource_group_for_topic_type
  name: list_regional_by_resource_group_for_topic_type
  summary: 'List all regional event subscriptions under an Azure subscription and
    resource group for a

    topic type.


    List all event subscriptions from the given location under a specific Azure subscription
    and

    resource group and topic type.'
  signature: 'list_regional_by_resource_group_for_topic_type(resource_group_name:
    str, location: str, topic_type_name: str, filter: str | None = None, top: int
    | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: Name of the location.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_type_name
    description: Name of the topic type.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_regional_by_subscription
  name: list_regional_by_subscription
  summary: 'List all regional event subscriptions under an Azure subscription.


    List all event subscriptions from the given location under a specific Azure subscription.'
  signature: 'list_regional_by_subscription(location: str, filter: str | None = None,
    top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: location
    description: Name of the location.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.list_regional_by_subscription_for_topic_type
  name: list_regional_by_subscription_for_topic_type
  summary: 'List all regional event subscriptions under an Azure subscription for
    a topic type.


    List all event subscriptions from the given location under a specific Azure subscription
    and

    topic type.'
  signature: 'list_regional_by_subscription_for_topic_type(location: str, topic_type_name:
    str, filter: str | None = None, top: int | None = None, **kwargs: Any) -> Iterable[EventSubscriptionsListResult]'
  parameters:
  - name: location
    description: Name of the location.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_type_name
    description: Name of the topic type.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either EventSubscriptionsListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscriptionsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventgrid.operations.EventSubscriptionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
