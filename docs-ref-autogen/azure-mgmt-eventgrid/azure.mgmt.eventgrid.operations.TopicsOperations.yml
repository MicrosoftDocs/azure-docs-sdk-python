### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.eventgrid.operations.TopicsOperations.create_or_update
  - azure.mgmt.eventgrid.operations.TopicsOperations.delete
  - azure.mgmt.eventgrid.operations.TopicsOperations.get
  - azure.mgmt.eventgrid.operations.TopicsOperations.list_by_resource_group
  - azure.mgmt.eventgrid.operations.TopicsOperations.list_by_subscription
  - azure.mgmt.eventgrid.operations.TopicsOperations.list_event_types
  - azure.mgmt.eventgrid.operations.TopicsOperations.list_shared_access_keys
  - azure.mgmt.eventgrid.operations.TopicsOperations.regenerate_key
  - azure.mgmt.eventgrid.operations.TopicsOperations.update
  - azure.mgmt.eventgrid.operations.TopicsOperations.models
  class: azure.mgmt.eventgrid.operations.TopicsOperations
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: TopicsOperations
  summary: TopicsOperations operations.
  syntax:
    content: TopicsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Version of the API to be used with the client request. Constant
        value: "2019-06-01".'
      id: api_version
  type: class
  uid: azure.mgmt.eventgrid.operations.TopicsOperations
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: create_or_update(resource_group_name, topic_name, topic_info, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Create a topic.


    Asynchronously creates a new topic with the specified parameters.'
  syntax:
    content: create_or_update(resource_group_name, topic_name, topic_info, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: Topic information.
      id: topic_info
      isRequired: true
      type:
      - azure.mgmt.eventgrid.models.Topic
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Topic or

        ClientRawResponse<Topic> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.eventgrid.models.Topic]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.eventgrid.models.Topic]]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.create_or_update
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.delete
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: delete(resource_group_name, topic_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete
  summary: 'Delete a topic.


    Delete existing topic.'
  syntax:
    content: delete(resource_group_name, topic_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.delete
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.get
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: get(resource_group_name, topic_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Get a topic.


    Get properties of a topic.'
  syntax:
    content: get(resource_group_name, topic_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Topic or ClientRawResponse if raw=true
      type:
      - azure.mgmt.eventgrid.models.Topic
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.get
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_by_resource_group
  summary: 'List topics under a resource group.


    List all the topics under a resource group.'
  syntax:
    content: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The query used to filter the search results using OData

        syntax. Filtering is permitted on the ''name'' property only and with

        limited number of OData operations. These operations are: the

        ''contains'' function as well as the following logical operations: not,

        and, or, eq (for equal), and ne (for not equal). No arithmetic

        operations are supported. The following is a valid filter example:

        $filter=contains(namE, ''PATTERN'') and name ne ''PATTERN-1''. The

        following is not a valid filter example: $filter=location eq ''westus''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to return per page for the list

        operation. Valid range for top parameter is 1 to 100. If not

        specified, the default number of results to be returned is 20 items

        per page.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Topic
      type:
      - azure.mgmt.eventgrid.models.TopicPaged[azure.mgmt.eventgrid.models.Topic]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_resource_group
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_subscription
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: list_by_subscription(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list_by_subscription
  summary: 'List topics under an Azure subscription.


    List all the topics under an Azure subscription.'
  syntax:
    content: list_by_subscription(filter=None, top=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: None
      description: 'The query used to filter the search results using OData

        syntax. Filtering is permitted on the ''name'' property only and with

        limited number of OData operations. These operations are: the

        ''contains'' function as well as the following logical operations: not,

        and, or, eq (for equal), and ne (for not equal). No arithmetic

        operations are supported. The following is a valid filter example:

        $filter=contains(namE, ''PATTERN'') and name ne ''PATTERN-1''. The

        following is not a valid filter example: $filter=location eq ''westus''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to return per page for the list

        operation. Valid range for top parameter is 1 to 100. If not

        specified, the default number of results to be returned is 20 items

        per page.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Topic
      type:
      - azure.mgmt.eventgrid.models.TopicPaged[azure.mgmt.eventgrid.models.Topic]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_subscription
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_event_types
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: list_event_types(resource_group_name, provider_namespace, resource_type_name,
    resource_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_event_types
  summary: 'List topic event types.


    List event types for a topic.'
  syntax:
    content: list_event_types(resource_group_name, provider_namespace, resource_type_name,
      resource_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Namespace of the provider of the topic.
      id: provider_namespace
      isRequired: true
      type:
      - str
    - description: Name of the topic type.
      id: resource_type_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: resource_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of EventType
      type:
      - azure.mgmt.eventgrid.models.EventTypePaged[azure.mgmt.eventgrid.models.EventType]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_event_types
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_shared_access_keys
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: list_shared_access_keys(resource_group_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_shared_access_keys
  summary: 'List keys for a topic.


    List the two keys used to publish to a topic.'
  syntax:
    content: list_shared_access_keys(resource_group_name, topic_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: TopicSharedAccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.eventgrid.models.TopicSharedAccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_shared_access_keys
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.regenerate_key
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: regenerate_key(resource_group_name, topic_name, key_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: regenerate_key
  summary: 'Regenerate key for a topic.


    Regenerate a shared access key for a topic.'
  syntax:
    content: regenerate_key(resource_group_name, topic_name, key_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: Key name to regenerate key1 or key2
      id: key_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: TopicSharedAccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.eventgrid.models.TopicSharedAccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.regenerate_key
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.update
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: update(resource_group_name, topic_name, tags=None, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: update
  summary: 'Update a topic.


    Asynchronously updates a topic with the specified parameters.'
  syntax:
    content: update(resource_group_name, topic_name, tags=None, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Tags of the resource
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Topic or

        ClientRawResponse<Topic> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.eventgrid.models.Topic]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.eventgrid.models.Topic]]
  type: method
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.update
- class: azure.mgmt.eventgrid.operations.TopicsOperations
  fullName: azure.mgmt.eventgrid.operations.TopicsOperations.models
  langs:
  - python
  module: azure.mgmt.eventgrid.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.eventgrid.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.models
references:
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, topic_name, topic_info, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.create_or_update
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.delete
  isExternal: false
  name: delete(resource_group_name, topic_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.delete
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.get
  isExternal: false
  name: get(resource_group_name, topic_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.get
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_resource_group
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_subscription
  isExternal: false
  name: list_by_subscription(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_by_subscription
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_event_types
  isExternal: false
  name: list_event_types(resource_group_name, provider_namespace, resource_type_name,
    resource_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_event_types
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.list_shared_access_keys
  isExternal: false
  name: list_shared_access_keys(resource_group_name, topic_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.list_shared_access_keys
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.regenerate_key
  isExternal: false
  name: regenerate_key(resource_group_name, topic_name, key_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.regenerate_key
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.update
  isExternal: false
  name: update(resource_group_name, topic_name, tags=None, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.update
- fullName: azure.mgmt.eventgrid.operations.TopicsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.eventgrid.operations.TopicsOperations
  uid: azure.mgmt.eventgrid.operations.TopicsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.eventgrid.models.Topic]
  name: AzureOperationPoller[Topic]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventgrid.models.Topic
    name: Topic
    uid: azure.mgmt.eventgrid.models.Topic
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.eventgrid.models.Topic]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.eventgrid.models.Topic]]
  name: AzureOperationPoller[ClientRawResponse[Topic]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventgrid.models.Topic
    name: Topic
    uid: azure.mgmt.eventgrid.models.Topic
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.eventgrid.models.Topic]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.eventgrid.models.TopicPaged[azure.mgmt.eventgrid.models.Topic]
  name: TopicPaged[Topic]
  spec.python:
  - fullName: azure.mgmt.eventgrid.models.TopicPaged
    name: TopicPaged
    uid: azure.mgmt.eventgrid.models.TopicPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventgrid.models.Topic
    name: Topic
    uid: azure.mgmt.eventgrid.models.Topic
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.eventgrid.models.TopicPaged[azure.mgmt.eventgrid.models.Topic]
- fullName: azure.mgmt.eventgrid.models.EventTypePaged[azure.mgmt.eventgrid.models.EventType]
  name: EventTypePaged[EventType]
  spec.python:
  - fullName: azure.mgmt.eventgrid.models.EventTypePaged
    name: EventTypePaged
    uid: azure.mgmt.eventgrid.models.EventTypePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventgrid.models.EventType
    name: EventType
    uid: azure.mgmt.eventgrid.models.EventType
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.eventgrid.models.EventTypePaged[azure.mgmt.eventgrid.models.EventType]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
