### YamlMime:PythonClass
uid: azure.eventgrid.aio.EventGridPublisherClient
name: EventGridPublisherClient
fullName: azure.eventgrid.aio.EventGridPublisherClient
module: azure.eventgrid.aio
summary: 'EventGridPublisherClient.


  Sends events to a basic topic, basic domain, or a namespace topic

  specified during the client initialization.


  A single instance or a list of dictionaries, CloudEvents or EventGridEvents are
  accepted.

  If a list is provided, the list must contain only one type of event.

  If dictionaries are provided and sending to a namespace topic,

  the dictionary must follow the CloudEvent schema.'
constructor:
  syntax: 'EventGridPublisherClient(endpoint: str, credential: AzureKeyCredential
    | AzureSasCredential | AsyncTokenCredential, *, namespace_topic: str | None =
    None, api_version: str | None = None, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'The host name of the namespace, e.g.

      namespaceName1.westus-1.eventgrid.azure.net. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential used to authenticate requests to the service. Is either
      a

      AzureKeyCredential type or a AsyncTokenCredential type. Required.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: namespace_topic
    description: 'The name of the topic to publish events to. Required for Event Grid
      Namespaces.

      Default value is None, which is used for Event Grid Basic.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:None>
  - name: api_version
    description: 'The API version to use for this operation. Default value for Event
      Grid Namespace

      is "2024-06-01", default value for Event Grid Basic is "2018-01-01".

      Note that overriding this default value may result in unsupported behavior.'
    defaultValue: None
    types:
    - <xref:str>
methods:
- uid: azure.eventgrid.aio.EventGridPublisherClient.close
  name: close
  signature: async close() -> None
- uid: azure.eventgrid.aio.EventGridPublisherClient.send
  name: send
  summary: Send events to the Event Grid Service.
  signature: 'async send(events: CloudEvent | List[CloudEvent] | Dict[str, Any] |
    List[Dict[str, Any]] | CNCFCloudEvent | List[CNCFCloudEvent] | EventGridEvent
    | List[EventGridEvent], *, channel_name: str | None = None, content_type: str
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: events
    description: 'The event(s) to send. If sending to an Event Grid Namespace, the
      dict, list of dicts,

      or event(s) should be in the format of a CloudEvent.'
    isRequired: true
    types:
    - <xref:CloudEvent>
    - <xref:typing.List>[<xref:CloudEvent>]
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
    - <xref:typing.List>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
    - <xref:CNCFCloudEvent>
    - <xref:typing.List>[<xref:CNCFCloudEvent>]
    - <xref:azure.eventgrid.EventGridEvent>
    - <xref:typing.List>[<xref:azure.eventgrid.EventGridEvent>]
  keywordOnlyParameters:
  - name: channel_name
    description: The name of the channel to send the event to. Event Grid Basic Resource
      only.
    defaultValue: None
    types:
    - <xref:str>
    - <xref:None>
  - name: content_type
    description: 'The content type of the event. If not specified, the default value
      is

      "application/cloudevents+json; charset=utf-8".'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.eventgrid.aio.EventGridPublisherClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
