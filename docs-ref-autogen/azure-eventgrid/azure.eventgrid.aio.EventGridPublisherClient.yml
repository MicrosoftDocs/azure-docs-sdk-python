### YamlMime:PythonClass
uid: azure.eventgrid.aio.EventGridPublisherClient
name: EventGridPublisherClient
fullName: azure.eventgrid.aio.EventGridPublisherClient
module: azure.eventgrid.aio
inheritances:
- builtins.object
summary: 'Asynchronous EventGridPublisherClient publishes events to an EventGrid topic
  or domain.

  It can be used to publish either an EventGridEvent, a CloudEvent or a Custom Schema.'
constructor:
  syntax: 'EventGridPublisherClient(endpoint: str, credential: AsyncTokenCredential
    | AzureKeyCredential | AzureSasCredential, *, api_version: str | None = None,
    **kwargs: Any)'
  parameters:
  - name: endpoint
    description: The topic endpoint to send the events to.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credential object used for authentication which implements

      SAS key authentication or SAS token authentication or an AsyncTokenCredential.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.AzureSasCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version.  Will default to the most recent Api Version. Note
      that overriding this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.eventgrid.aio.EventGridPublisherClient.close
  name: close
  summary: Close the <xref:azure.eventgrid.aio.EventGridPublisherClient> session.
  signature: async close() -> None
- uid: azure.eventgrid.aio.EventGridPublisherClient.send
  name: send
  summary: 'Sends events to a topic or a domain specified during the client initialization.


    A single instance or a list of dictionaries, CloudEvents or EventGridEvents are
    accepted.


    Dict representation of respective serialized models is accepted as CloudEvent(s)
    or

    EventGridEvent(s) apart from the strongly typed objects.


    When publishing a Custom Schema Event(s), dict-like representation is accepted.

    Either a single dictionary or a list of dictionaries can be passed.


    **WARNING**: When sending a list of multiple events at one time, iterating over
    and sending each event

    will not result in optimal performance. For best performance, it is highly recommended
    to send

    a list of events.'
  signature: 'async send(events: CloudEvent | EventGridEvent | Dict | CNCFCloudEvent
    | List[CloudEvent] | List[EventGridEvent] | List[Dict] | List[CNCFCloudEvent],
    *, channel_name: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: events
    description: A single instance or a list of dictionaries/CloudEvent/EventGridEvent
      to be sent.
    isRequired: true
    types:
    - <xref:azure.core.messaging.CloudEvent>
    - <xref:azure.eventgrid.EventGridEvent>
    - <xref:dict>
    - <xref:typing.List>[<xref:azure.core.messaging.CloudEvent>]
    - <xref:typing.List>[<xref:azure.eventgrid.EventGridEvent>]
    - <xref:typing.List>[<xref:dict>]
  keywordOnlyParameters:
  - name: content_type
    description: 'The type of content to be used to send the events.

      Has default value "application/json; charset=utf-8" for EventGridEvents,

      with "cloudevents-batch+json" for CloudEvents'
    types:
    - <xref:str>
  - name: channel_name
    description: Optional. Used to specify the name of event channel when publishing
      to partner
    types:
    - <xref:None namespaces with partner topic. For more details, visit <xref:https://docs.microsoft.com/azure/event-grid/partner-events-overview>>
  return:
    types:
    - <xref:None>
