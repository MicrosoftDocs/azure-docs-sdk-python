### YamlMime:PythonClass
uid: azure.eventgrid.EventGridConsumerClient
name: EventGridConsumerClient
fullName: azure.eventgrid.EventGridConsumerClient
module: azure.eventgrid
summary: 'EventGridConsumerClient.


  Consumes and manages events from a namespace topic

  and event subscription specified during the client initialization.'
constructor:
  syntax: 'EventGridConsumerClient(endpoint: str, credential: AzureKeyCredential |
    TokenCredential, *, namespace_topic: str, subscription: str, api_version: str
    | None = None, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'The host name of the namespace, e.g.

      namespaceName1.westus-1.eventgrid.azure.net. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential used to authenticate requests to the service. Is either
      a

      AzureKeyCredential type or a TokenCredential type. Required.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  keywordOnlyParameters:
  - name: namespace_topic
    description: The name of the topic to consume events from. Required.
    types:
    - <xref:str>
  - name: subscription
    description: The name of the subscription to consume events from. Required.
    types:
    - <xref:str>
  - name: api_version
    description: 'The API version to use for this operation. Default value is "2024-06-01".

      Note that overriding this default value may result in unsupported behavior.'
    defaultValue: None
    types:
    - <xref:str>
methods:
- uid: azure.eventgrid.EventGridConsumerClient.acknowledge
  name: acknowledge
  summary: 'Acknowledge a batch of Cloud Events. The response will include the set
    of successfully

    acknowledged lock tokens, along with other failed lock tokens with their corresponding
    error

    information. Successfully acknowledged events will no longer be available to be
    received by any

    consumer.'
  signature: 'acknowledge(*, lock_tokens: List[str], **kwargs: Any) -> AcknowledgeResult'
  keywordOnlyParameters:
  - name: lock_tokens
    description: Array of lock tokens of Cloud Events. Required.
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: AcknowledgeResult. The AcknowledgeResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.AcknowledgeResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.EventGridConsumerClient.close
  name: close
  signature: close() -> None
- uid: azure.eventgrid.EventGridConsumerClient.receive
  name: receive
  summary: Receive Batch of Cloud Events from the Event Subscription.
  signature: 'receive(*, max_events: int | None = None, max_wait_time: int | None
    = None, **kwargs: Any) -> List[ReceiveDetails]'
  keywordOnlyParameters:
  - name: max_events
    description: 'Max Events count to be received. Minimum value is 1, while maximum
      value

      is 100 events. The default is None, meaning it will receive one event if available.'
    defaultValue: None
    types:
    - <xref:int>
  - name: max_wait_time
    description: 'Max wait time value for receive operation in Seconds. It is the
      time in

      seconds that the server approximately waits for the availability of an event
      and responds to

      the request. If an event is available, the broker responds immediately to the
      client. Minimum

      value is 10 seconds, while maximum value is 120 seconds. The default value is
      None, meaning it

      will wait for 60 seconds.'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: ReceiveDetails list of received events and their broker properties.
    types:
    - <xref:list>[<xref:azure.eventgrid.models.ReceiveDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.EventGridConsumerClient.reject
  name: reject
  summary: 'Reject a batch of Cloud Events. The response will include the set of successfully
    rejected lock

    tokens, along with other failed lock tokens with their corresponding error information.

    Successfully rejected events will be dead-lettered and can no longer be received
    by a consumer.'
  signature: 'reject(*, lock_tokens: List[str], **kwargs: Any) -> RejectResult'
  keywordOnlyParameters:
  - name: lock_tokens
    description: Array of lock tokens of Cloud Events. Required.
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: RejectResult. The RejectResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.RejectResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.EventGridConsumerClient.release
  name: release
  summary: 'Release a batch of Cloud Events. The response will include the set of
    successfully released

    lock tokens, along with other failed lock tokens with their corresponding error
    information.

    Successfully released events can be received by consumers.'
  signature: 'release(*, lock_tokens: List[str], release_delay: int | ReleaseDelay
    | None = None, **kwargs: Any) -> ReleaseResult'
  keywordOnlyParameters:
  - name: lock_tokens
    description: Array of lock tokens of Cloud Events. Required.
    types:
    - <xref:typing.List>[<xref:str>]
  - name: release_delay
    description: 'Release cloud events with the specified delay in seconds.

      Known values are: 0, 10, 60, 600, and 3600. Default value is None, indicating
      no delay.'
    defaultValue: None
    types:
    - <xref:int>
    - <xref:azure.eventgrid.models.ReleaseDelay>
  return:
    description: ReleaseResult. The ReleaseResult is compatible with MutableMapping
    types:
    - <xref:azure.eventgrid.models.ReleaseResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.EventGridConsumerClient.renew_locks
  name: renew_locks
  summary: 'Renew locks for a batch of Cloud Events. The response will include the
    set of successfully

    renewed lock tokens, along with other failed lock tokens with their corresponding
    error

    information. Successfully renewed locks will ensure that the associated event
    is only available

    to the consumer that holds the renewed lock.'
  signature: 'renew_locks(*, lock_tokens: List[str], **kwargs: Any) -> RenewLocksResult'
  keywordOnlyParameters:
  - name: lock_tokens
    description: Array of lock tokens of Cloud Events. Required.
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: 'RenewLocksResult. The RenewLocksResult is compatible with

      MutableMapping'
    types:
    - <xref:azure.eventgrid.models.RenewLocksResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.eventgrid.EventGridConsumerClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
