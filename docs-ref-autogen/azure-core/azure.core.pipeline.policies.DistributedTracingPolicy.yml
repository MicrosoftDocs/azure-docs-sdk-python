### YamlMime:PythonClass
uid: azure.core.pipeline.policies.DistributedTracingPolicy
name: DistributedTracingPolicy
fullName: azure.core.pipeline.policies.DistributedTracingPolicy
module: azure.core.pipeline.policies
inheritances:
- azure.core.pipeline.policies._base.SansIOHTTPPolicy
summary: The policy to create spans for Azure calls.
constructor:
  syntax: DistributedTracingPolicy(**kwargs)
  parameters:
  - name: network_span_namer
    description: A callable to customize the span name
  - name: tracing_attributes
    description: Attributes to set on all created spans
methods:
- uid: azure.core.pipeline.policies.DistributedTracingPolicy.end_span
  name: end_span
  summary: Ends the span that is tracing the network and updates its status.
  signature: end_span(request, response=None, exc_info=None)
  parameters:
  - name: request
    isRequired: true
  - name: response
    defaultValue: None
  - name: exc_info
    defaultValue: None
- uid: azure.core.pipeline.policies.DistributedTracingPolicy.on_exception
  name: on_exception
  summary: 'Is executed if an exception is raised while executing the next policy.


    Developer can optionally implement this method to return True

    if the exception has been handled and should not be forwarded to the caller.


    This method is executed inside the exception handler.'
  signature: on_exception(request)
  parameters:
  - name: request
    description: The Pipeline request object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  return:
    description: False by default, override with True to stop the exception.
    types:
    - <xref:bool>
  examples:
  - "<!--[!code-python[Main](les\\test_example_sansio.py )]-->\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\100\\\\azure-core-1.18.0\\\
    \\samples\\\\test_example_sansio.py\", \"xml:space\": \"preserve\", \"force\"\
    : false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
    linenos\": false} -->\n\n````python\n\n   try:\n       response = policy.on_request(request)\n\
    \   except Exception:\n       if not policy.on_exception(request):\n         \
    \  raise\n\n   # or use\n   exc_type, exc_value, exc_traceback = sys.exc_info()\n\
    \n   ````\n"
- uid: azure.core.pipeline.policies.DistributedTracingPolicy.on_request
  name: on_request
  summary: Is executed before sending the request from next policy.
  signature: on_request(request)
  parameters:
  - name: request
    description: Request to be modified before sent from next policy.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
- uid: azure.core.pipeline.policies.DistributedTracingPolicy.on_response
  name: on_response
  summary: Is executed after the request comes back from the policy.
  signature: on_response(request, response)
  parameters:
  - name: request
    description: Request to be modified after returning from the policy.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  - name: response
    description: Pipeline response object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
attributes:
- uid: azure.core.pipeline.policies.DistributedTracingPolicy.TRACING_CONTEXT
  name: TRACING_CONTEXT
  signature: TRACING_CONTEXT = 'TRACING_CONTEXT'
