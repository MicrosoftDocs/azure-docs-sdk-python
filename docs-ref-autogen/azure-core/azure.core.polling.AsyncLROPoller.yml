### YamlMime:PythonClass
uid: azure.core.polling.AsyncLROPoller
name: AsyncLROPoller
fullName: azure.core.polling.AsyncLROPoller
module: azure.core.polling
inheritances:
- typing.Generic
- collections.abc.Awaitable
summary: Async poller for long running operations.
constructor:
  syntax: 'AsyncLROPoller(client: Any, initial_response: Any, deserialization_callback:
    Callable[[Any], PollingReturnType_co], polling_method: AsyncPollingMethod[PollingReturnType_co])'
  parameters:
  - name: client
    description: A pipeline service client
    isRequired: true
    types:
    - <xref:azure.core.PipelineClient>
  - name: initial_response
    description: The initial call response
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  - name: deserialization_callback
    description: 'A callback that takes a Response and return a deserialized object.

      If a subclass of Model is given, this passes "deserialize" as callback.'
    isRequired: true
    types:
    - <xref:callable>
    - <xref:msrest.serialization.Model>
  - name: polling_method
    description: The polling strategy to adopt
    isRequired: true
    types:
    - <xref:azure.core.polling.AsyncPollingMethod>
methods:
- uid: azure.core.polling.AsyncLROPoller.continuation_token
  name: continuation_token
  summary: Return a continuation token that allows to restart the poller later.
  signature: continuation_token() -> str
  return:
    description: An opaque continuation token
    types:
    - <xref:str>
- uid: azure.core.polling.AsyncLROPoller.done
  name: done
  summary: Check status of the long running operation.
  signature: done() -> bool
  return:
    description: '''True'' if the process has completed, else ''False''.'
    types:
    - <xref:bool>
- uid: azure.core.polling.AsyncLROPoller.from_continuation_token
  name: from_continuation_token
  signature: 'from_continuation_token(polling_method: AsyncPollingMethod[PollingReturnType_co],
    continuation_token: str, **kwargs) -> AsyncLROPoller[PollingReturnType_co]'
  parameters:
  - name: polling_method
    isRequired: true
  - name: continuation_token
    isRequired: true
- uid: azure.core.polling.AsyncLROPoller.polling_method
  name: polling_method
  summary: Return the polling method associated to this poller.
  signature: polling_method() -> AsyncPollingMethod[PollingReturnType_co]
  return:
    description: The polling method associated to this poller.
    types:
    - <xref:azure.core.polling.AsyncPollingMethod>
- uid: azure.core.polling.AsyncLROPoller.result
  name: result
  summary: Return the result of the long running operation.
  signature: async result() -> PollingReturnType_co
  return:
    description: The deserialized resource of the long running operation, if one is
      available.
    types:
    - <xref:any>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: Server problem with the query.
- uid: azure.core.polling.AsyncLROPoller.status
  name: status
  summary: Returns the current status string.
  signature: status() -> str
  return:
    description: The current status string
    types:
    - <xref:str>
- uid: azure.core.polling.AsyncLROPoller.wait
  name: wait
  summary: Wait on the long running operation.
  signature: async wait() -> None
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: Server problem with the query.
