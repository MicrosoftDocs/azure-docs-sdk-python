### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.polling.AsyncLROPoller.continuation_token
  - azure.core.polling.AsyncLROPoller.done
  - azure.core.polling.AsyncLROPoller.from_continuation_token
  - azure.core.polling.AsyncLROPoller.polling_method
  - azure.core.polling.AsyncLROPoller.result
  - azure.core.polling.AsyncLROPoller.status
  - azure.core.polling.AsyncLROPoller.wait
  class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller
  inheritance:
  - inheritance:
    - type: builtins.object
    type: typing.Generic
  - inheritance:
    - type: builtins.object
    type: collections.abc.Awaitable
  langs:
  - python
  module: azure.core.polling
  name: AsyncLROPoller
  summary: Async poller for long running operations.
  syntax:
    content: 'AsyncLROPoller(client: typing.Any, initial_response: typing.Any, deserialization_callback:
      typing.Callable, polling_method: azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType])'
    parameters:
    - description: A pipeline service client
      id: client
      type:
      - azure.core.PipelineClient
    - description: The initial call response
      id: initial_response
      type:
      - azure.core.pipeline.PipelineResponse
    - description: 'A callback that takes a Response and return a deserialized object.

        If a subclass of Model is given, this passes "deserialize" as callback.'
      id: deserialization_callback
      type:
      - callable
      - msrest.serialization.Model
    - description: The polling strategy to adopt
      id: polling_method
      type:
      - azure.core.polling.AsyncPollingMethod
  type: class
  uid: azure.core.polling.AsyncLROPoller
- class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller.continuation_token
  langs:
  - python
  module: azure.core.polling
  name: continuation_token() -> str
  namewithoutparameters: continuation_token
  summary: Return a continuation token that allows to restart the poller later.
  syntax:
    content: continuation_token() -> str
    return:
      description: An opaque continuation token
      type:
      - str
  type: method
  uid: azure.core.polling.AsyncLROPoller.continuation_token
- class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller.done
  langs:
  - python
  module: azure.core.polling
  name: done() -> bool
  namewithoutparameters: done
  summary: Check status of the long running operation.
  syntax:
    content: done() -> bool
    return:
      description: '''True'' if the process has completed, else ''False''.'
      type:
      - bool
  type: method
  uid: azure.core.polling.AsyncLROPoller.done
- class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller.from_continuation_token
  langs:
  - python
  module: azure.core.polling
  name: 'from_continuation_token(polling_method: azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType],
    continuation_token: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[PollingReturnType]'
  namewithoutparameters: from_continuation_token
  syntax:
    content: 'from_continuation_token(polling_method: azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType],
      continuation_token: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[PollingReturnType]'
  type: method
  uid: azure.core.polling.AsyncLROPoller.from_continuation_token
- class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller.polling_method
  langs:
  - python
  module: azure.core.polling
  name: polling_method() -> azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType]
  namewithoutparameters: polling_method
  summary: Return the polling method associated to this poller.
  syntax:
    content: polling_method() -> azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType]
  type: method
  uid: azure.core.polling.AsyncLROPoller.polling_method
- class: azure.core.polling.AsyncLROPoller
  exceptions:
  - description: Server problem with the query.
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.core.polling.AsyncLROPoller.result
  langs:
  - python
  module: azure.core.polling
  name: result() -> PollingReturnType
  namewithoutparameters: result
  summary: Return the result of the long running operation.
  syntax:
    content: result() -> PollingReturnType
    return:
      description: The deserialized resource of the long running operation, if one
        is available.
  type: method
  uid: azure.core.polling.AsyncLROPoller.result
- class: azure.core.polling.AsyncLROPoller
  fullName: azure.core.polling.AsyncLROPoller.status
  langs:
  - python
  module: azure.core.polling
  name: status() -> str
  namewithoutparameters: status
  summary: Returns the current status string.
  syntax:
    content: status() -> str
    return:
      description: The current status string
      type:
      - str
  type: method
  uid: azure.core.polling.AsyncLROPoller.status
- class: azure.core.polling.AsyncLROPoller
  exceptions:
  - description: Server problem with the query.
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.core.polling.AsyncLROPoller.wait
  langs:
  - python
  module: azure.core.polling
  name: wait() -> None
  namewithoutparameters: wait
  summary: Wait on the long running operation.
  syntax:
    content: wait() -> None
  type: method
  uid: azure.core.polling.AsyncLROPoller.wait
references:
- fullName: azure.core.polling.AsyncLROPoller.continuation_token
  isExternal: false
  name: continuation_token() -> str
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.continuation_token
- fullName: azure.core.polling.AsyncLROPoller.done
  isExternal: false
  name: done() -> bool
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.done
- fullName: azure.core.polling.AsyncLROPoller.from_continuation_token
  isExternal: false
  name: 'from_continuation_token(polling_method: azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType],
    continuation_token: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[PollingReturnType]'
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.from_continuation_token
- fullName: azure.core.polling.AsyncLROPoller.polling_method
  isExternal: false
  name: polling_method() -> azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType]
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.polling_method
- fullName: azure.core.polling.AsyncLROPoller.result
  isExternal: false
  name: result() -> PollingReturnType
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.result
- fullName: azure.core.polling.AsyncLROPoller.status
  isExternal: false
  name: status() -> str
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.status
- fullName: azure.core.polling.AsyncLROPoller.wait
  isExternal: false
  name: wait() -> None
  parent: azure.core.polling.AsyncLROPoller
  uid: azure.core.polling.AsyncLROPoller.wait
