### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.transport.AsyncioRequestsTransport.send
  - azure.core.pipeline.transport.AsyncioRequestsTransport.sleep
  class: azure.core.pipeline.transport.AsyncioRequestsTransport
  example:
  - "Asynchronous transport with asyncio.<!--[!code-python[Main](les\\test_example_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\102\\\\azure-core-1.7.0\\\\samples\\\\test_example_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline.transport\
    \ import AsyncioRequestsTransport\n\n   async with AsyncPipeline(AsyncioRequestsTransport(),\
    \ policies=policies) as pipeline:\n       response = await pipeline.run(request)\n\
    \n   ````\n"
  fullName: azure.core.pipeline.transport.AsyncioRequestsTransport
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - inheritance:
          - inheritance:
            - type: builtins.object
            type: abc.ABC
          type: contextlib.AbstractContextManager
        - inheritance:
          - type: builtins.object
          type: abc.ABC
        - inheritance:
          - type: builtins.object
          type: typing.Generic
        type: azure.core.pipeline.transport._base.HttpTransport
      type: azure.core.pipeline.transport._requests_basic.RequestsTransport
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: azure.core.pipeline.transport._base_async.AbstractAsyncContextManager
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      - inheritance:
        - type: builtins.object
        type: typing.Generic
      type: azure.core.pipeline.transport._base_async.AsyncHttpTransport
    type: azure.core.pipeline.transport._base_requests_async.RequestsAsyncTransportBase
  langs:
  - python
  module: azure.core.pipeline.transport
  name: AsyncioRequestsTransport
  summary: 'Identical implementation as the synchronous RequestsTransport wrapped
    in a class with

    asynchronous methods. Uses the built-in asyncio event loop.'
  syntax:
    content: AsyncioRequestsTransport(**kwargs)
  type: class
  uid: azure.core.pipeline.transport.AsyncioRequestsTransport
- class: azure.core.pipeline.transport.AsyncioRequestsTransport
  fullName: azure.core.pipeline.transport.AsyncioRequestsTransport.send
  langs:
  - python
  module: azure.core.pipeline.transport
  name: 'send(request: azure.core.pipeline.transport._base.HttpRequest, **kwargs:
    typing.Any) -> azure.core.pipeline.transport._base_async.AsyncHttpResponse'
  namewithoutparameters: send
  summary: Send the request using this HTTP sender.
  syntax:
    content: 'send(request: azure.core.pipeline.transport._base.HttpRequest, **kwargs:
      typing.Any) -> azure.core.pipeline.transport._base_async.AsyncHttpResponse'
    parameters:
    - description: The HttpRequest
      id: request
      isRequired: true
      type:
      - azure.core.pipeline.transport.HttpRequest
    - description: 'will override the driver session and use yours.

        Should NOT be done unless really required. Anything else is sent straight
        to requests.'
      id: session
      isRequired: true
      type:
      - requests.Session
    - description: will define the proxy to use. Proxy is a dict (protocol, url)
      id: proxies
      isRequired: true
      type:
      - dict
    return:
      description: The AsyncHttpResponse
      type:
      - azure.core.pipeline.transport.AsyncHttpResponse
  type: method
  uid: azure.core.pipeline.transport.AsyncioRequestsTransport.send
- class: azure.core.pipeline.transport.AsyncioRequestsTransport
  fullName: azure.core.pipeline.transport.AsyncioRequestsTransport.sleep
  langs:
  - python
  module: azure.core.pipeline.transport
  name: sleep(duration)
  namewithoutparameters: sleep
  syntax:
    content: sleep(duration)
    parameters:
    - id: duration
      isRequired: true
  type: method
  uid: azure.core.pipeline.transport.AsyncioRequestsTransport.sleep
references:
- fullName: azure.core.pipeline.transport.AsyncioRequestsTransport.send
  isExternal: false
  name: 'send(request: azure.core.pipeline.transport._base.HttpRequest, **kwargs:
    typing.Any) -> azure.core.pipeline.transport._base_async.AsyncHttpResponse'
  parent: azure.core.pipeline.transport.AsyncioRequestsTransport
  uid: azure.core.pipeline.transport.AsyncioRequestsTransport.send
- fullName: azure.core.pipeline.transport.AsyncioRequestsTransport.sleep
  isExternal: false
  name: sleep(duration)
  parent: azure.core.pipeline.transport.AsyncioRequestsTransport
  uid: azure.core.pipeline.transport.AsyncioRequestsTransport.sleep
