### YamlMime:PythonClass
uid: azure.core.pipeline.AsyncPipeline
name: AsyncPipeline
fullName: azure.core.pipeline.AsyncPipeline
module: azure.core.pipeline
inheritances:
- azure.core.pipeline._base_async.AbstractAsyncContextManager
- typing.Generic
summary: 'Async pipeline implementation.


  This is implemented as a context manager, that will activate the context

  of the HTTP sender.'
constructor:
  syntax: 'AsyncPipeline(transport, policies: Optional[List[Union[azure.core.pipeline.policies._base_async.AsyncHTTPPolicy,
    azure.core.pipeline.policies._base.SansIOHTTPPolicy]]] = None)'
  parameters:
  - name: transport
    description: The async Http Transport instance.
    isRequired: true
  - name: policies
    description: List of configured policies.
    isRequired: true
    types:
    - <xref:list>
examples:
- "Builds the async pipeline for asynchronous transport.<!--[!code-python[Main](les\\\
  test_example_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
  \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\
  \\s\\\\dist_temp\\\\100\\\\azure-core-1.18.0\\\\samples\\\\test_example_async.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.pipeline\
  \ import AsyncPipeline\n   from azure.core.pipeline.policies import AsyncRedirectPolicy,\
  \ UserAgentPolicy\n   from azure.core.pipeline.transport import AioHttpTransport,\
  \ HttpRequest\n\n   # example: create request and policies\n   request = HttpRequest(\"\
  GET\", \"https://bing.com\")\n   policies = [\n       UserAgentPolicy(\"myuseragent\"\
  ),\n       AsyncRedirectPolicy()\n   ]\n\n   # run the pipeline\n   async with AsyncPipeline(transport=AioHttpTransport(),\
  \ policies=policies) as pipeline:\n       response = await pipeline.run(request)\n\
  \n   ````\n"
methods:
- uid: azure.core.pipeline.AsyncPipeline.run
  name: run
  summary: Runs the HTTP Request through the chained policies.
  signature: 'run(request: HTTPRequestType, **kwargs: Any)'
  parameters:
  - name: request
    description: The HTTP request object.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
  return:
    description: The PipelineResponse object.
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
