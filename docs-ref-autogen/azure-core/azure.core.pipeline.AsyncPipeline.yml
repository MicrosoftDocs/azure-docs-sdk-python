### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.AsyncPipeline.run
  class: azure.core.pipeline.AsyncPipeline
  example:
  - "Builds the async pipeline for asynchronous transport.<!--[!code-python[Main](les\\\
    test_example_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\102\\\\azure-core-1.8.1\\\\samples\\\\test_example_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline\
    \ import AsyncPipeline\n   from azure.core.pipeline.policies import AsyncRedirectPolicy,\
    \ UserAgentPolicy\n   from azure.core.pipeline.transport import AioHttpTransport,\
    \ HttpRequest\n\n   # example: create request and policies\n   request = HttpRequest(\"\
    GET\", \"https://bing.com\")\n   policies = [\n       UserAgentPolicy(\"myuseragent\"\
    ),\n       AsyncRedirectPolicy()\n   ]\n\n   # run the pipeline\n   async with\
    \ AsyncPipeline(transport=AioHttpTransport(), policies=policies) as pipeline:\n\
    \       response = await pipeline.run(request)\n\n   ````\n"
  fullName: azure.core.pipeline.AsyncPipeline
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.core.pipeline._base_async.AbstractAsyncContextManager
  - inheritance:
    - type: builtins.object
    type: typing.Generic
  langs:
  - python
  module: azure.core.pipeline
  name: AsyncPipeline
  summary: 'Async pipeline implementation.


    This is implemented as a context manager, that will activate the context

    of the HTTP sender.'
  syntax:
    content: 'AsyncPipeline(transport, policies: typing.List[typing.Union[azure.core.pipeline.policies._base_async.AsyncHTTPPolicy,
      azure.core.pipeline.policies._base.SansIOHTTPPolicy]] = None) -> None'
    parameters:
    - description: The async Http Transport instance.
      id: transport
    - description: List of configured policies.
      id: policies
      type:
      - list
  type: class
  uid: azure.core.pipeline.AsyncPipeline
- class: azure.core.pipeline.AsyncPipeline
  fullName: azure.core.pipeline.AsyncPipeline.run
  langs:
  - python
  module: azure.core.pipeline
  name: 'run(request: HTTPRequestType, **kwargs: typing.Any)'
  namewithoutparameters: run
  summary: Runs the HTTP Request through the chained policies.
  syntax:
    content: 'run(request: HTTPRequestType, **kwargs: typing.Any)'
    parameters:
    - description: The HTTP request object.
      id: request
      isRequired: true
      type:
      - azure.core.pipeline.transport.HttpRequest
    return:
      description: The PipelineResponse object.
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.AsyncPipeline.run
references:
- fullName: azure.core.pipeline.AsyncPipeline.run
  isExternal: false
  name: 'run(request: HTTPRequestType, **kwargs: typing.Any)'
  parent: azure.core.pipeline.AsyncPipeline
  uid: azure.core.pipeline.AsyncPipeline.run
