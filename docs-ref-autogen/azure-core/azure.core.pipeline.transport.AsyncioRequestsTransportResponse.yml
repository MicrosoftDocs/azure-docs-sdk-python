### YamlMime:PythonClass
uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse
name: AsyncioRequestsTransportResponse
fullName: azure.core.pipeline.transport.AsyncioRequestsTransportResponse
module: azure.core.pipeline.transport
inheritances:
- azure.core.pipeline.transport._base_async.AsyncHttpResponse
- azure.core.pipeline.transport._requests_basic.RequestsTransportResponse
summary: Asynchronous streaming of data from the response.
constructor:
  syntax: AsyncioRequestsTransportResponse(request, requests_response, block_size=None)
  parameters:
  - name: request
    isRequired: true
  - name: requests_response
    isRequired: true
  - name: block_size
    defaultValue: None
methods:
- uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse.body
  name: body
  signature: body()
- uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse.parts
  name: parts
  summary: Assuming the content-type is multipart/mixed, will return the parts as
    an async iterator.
  signature: parts() -> AsyncIterator[AsyncHttpResponse]
  return:
    description: An async iterator of the parts
    types:
    - <xref:typing.AsyncIterator>
  exceptions:
  - type: ValueError
    description: If the content is not multipart/mixed
- uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse.raise_for_status
  name: raise_for_status
  summary: 'Raises an HttpResponseError if the response has an error status code.

    If response is good, does nothing.'
  signature: raise_for_status() -> None
- uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse.stream_download
  name: stream_download
  summary: Generator for streaming request body data.
  signature: stream_download(pipeline, **kwargs) -> AsyncIterator[bytes]
  parameters:
  - name: pipeline
    description: The pipeline object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.AsyncPipeline>
  return:
    description: An async iterator of bytes chunks
    types:
    - <xref:typing.AsyncIterator>[<xref:bytes>]
- uid: azure.core.pipeline.transport.AsyncioRequestsTransportResponse.text
  name: text
  summary: 'Return the whole body as a string.


    If encoding is not provided, mostly rely on requests auto-detection, except

    for BOM, that requests ignores. If we see a UTF8 BOM, we assumes UTF8 unlike requests.'
  signature: 'text(encoding: str | None = None) -> str'
  parameters:
  - name: encoding
    description: The encoding to apply.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The body as text.
    types:
    - <xref:str>
