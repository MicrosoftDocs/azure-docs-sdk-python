### YamlMime:PythonClass
uid: azure.core.rest.AsyncHttpResponse
name: AsyncHttpResponse
fullName: azure.core.rest.AsyncHttpResponse
module: azure.core.rest
inheritances:
- azure.core.rest._rest_py3._HttpResponseBase
summary: 'Abstract base class for Async HTTP responses.


  Use this abstract base class to create your own transport responses.


  Responses implementing this ABC are returned from your async client''s *send_request*

  method if you pass in an <xref:azure.core.rest.HttpRequest>



  ```


  >>> from azure.core.rest import HttpRequest

  >>> request = HttpRequest(''GET'', ''http://www.example.com'')

  <HttpRequest [GET], url: ''http://www.example.com''>

  >>> response = await client.send_request(request)

  <AsyncHttpResponse: 200 OK>

  ```'
constructor:
  syntax: AsyncHttpResponse()
methods:
- uid: azure.core.rest.AsyncHttpResponse.close
  name: close
  signature: close() -> None
- uid: azure.core.rest.AsyncHttpResponse.iter_bytes
  name: iter_bytes
  summary: Asynchronously iterates over the response's bytes. Will decompress in the
    process.
  signature: 'iter_bytes(**kwargs: Any) -> AsyncIterator[bytes]'
  return:
    description: An async iterator of bytes from the response
    types:
    - <xref:AsyncIterator>[<xref:bytes>]
- uid: azure.core.rest.AsyncHttpResponse.iter_raw
  name: iter_raw
  summary: Asynchronously iterates over the response's bytes. Will not decompress
    in the process.
  signature: 'iter_raw(**kwargs: Any) -> AsyncIterator[bytes]'
  return:
    description: An async iterator of bytes from the response
    types:
    - <xref:AsyncIterator>[<xref:bytes>]
- uid: azure.core.rest.AsyncHttpResponse.read
  name: read
  summary: Read the response's bytes into memory.
  signature: read() -> bytes
  return:
    description: The response's bytes
    types:
    - <xref:bytes>
