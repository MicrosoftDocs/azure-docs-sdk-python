### YamlMime:PythonClass
uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy
name: AsyncBearerTokenCredentialPolicy
fullName: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy
module: azure.core.pipeline.policies
inheritances:
- azure.core.pipeline.policies._base_async.AsyncHTTPPolicy
summary: Adds a bearer token Authorization header to requests.
constructor:
  syntax: 'AsyncBearerTokenCredentialPolicy(credential: AsyncTokenCredential, *scopes:
    str, **kwargs: Any)'
  parameters:
  - name: credential
    description: The credential.
    isRequired: true
    types:
    - <xref:azure.core.credentials.TokenCredential>
  - name: scopes
    description: Lets you specify the type of access needed.
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.authorize_request
  name: authorize_request
  summary: 'Acquire a token from the credential and authorize the request with it.


    Keyword arguments are passed to the credential''s get_token method. The token
    will be cached and used to

    authorize future requests.'
  signature: 'async authorize_request(request: PipelineRequest, *scopes: str, **kwargs:
    Any) -> None'
  parameters:
  - name: request
    description: the request
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  - name: scopes
    description: required scopes of authentication
    isRequired: true
    types:
    - <xref:str>
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.on_challenge
  name: on_challenge
  summary: 'Authorize request according to an authentication challenge


    This method is called when the resource provider responds 401 with a WWW-Authenticate
    header.'
  signature: 'async on_challenge(request: PipelineRequest, response: PipelineResponse)
    -> bool'
  parameters:
  - name: request
    description: the request which elicited an authentication challenge
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  - name: response
    description: the resource provider's response
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  return:
    description: a bool indicating whether the policy should send the request
    types:
    - <xref:bool>
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.on_exception
  name: on_exception
  summary: 'Executed when an exception is raised while executing the next policy.


    This method is executed inside the exception handler.'
  signature: 'on_exception(request: PipelineRequest) -> None'
  parameters:
  - name: request
    description: The Pipeline request object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.on_request
  name: on_request
  summary: Adds a bearer token Authorization header to request and sends request to
    next policy.
  signature: 'async on_request(request: PipelineRequest) -> None'
  parameters:
  - name: request
    description: The pipeline request object to be modified.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  exceptions:
  - type: azure.core.exceptions.ServiceRequestError
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.on_response
  name: on_response
  summary: Executed after the request comes back from the next policy.
  signature: 'on_response(request: PipelineRequest, response: PipelineResponse) ->
    Awaitable[None] | None'
  parameters:
  - name: request
    description: Request to be modified after returning from the policy.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  - name: response
    description: Pipeline response object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
- uid: azure.core.pipeline.policies.AsyncBearerTokenCredentialPolicy.send
  name: send
  summary: Authorize request with a bearer token and send it to the next policy
  signature: 'async send(request: PipelineRequest) -> PipelineResponse'
  parameters:
  - name: request
    description: The pipeline request object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  return:
    description: The pipeline response object
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
