### YamlMime:PythonClass
uid: azure.core.pipeline.transport.HttpResponse
name: HttpResponse
fullName: azure.core.pipeline.transport.HttpResponse
module: azure.core.pipeline.transport
inheritances:
- azure.core.pipeline.transport._base._HttpResponseBase
constructor:
  syntax: 'HttpResponse(request: HttpRequest, internal_response: Any, block_size:
    int | None = None)'
  parameters:
  - name: request
    isRequired: true
  - name: internal_response
    isRequired: true
  - name: block_size
    defaultValue: None
methods:
- uid: azure.core.pipeline.transport.HttpResponse.body
  name: body
  summary: 'Return the whole body as bytes in memory.


    Sync implementer should load the body in memory if they can.

    Async implementer should rely on async load_body to have been called first.'
  signature: body() -> bytes
  return:
    description: The whole body as bytes in memory.
    types:
    - <xref:bytes>
- uid: azure.core.pipeline.transport.HttpResponse.parts
  name: parts
  summary: Assuming the content-type is multipart/mixed, will return the parts as
    an iterator.
  signature: parts() -> Iterator[HttpResponse]
  return:
    description: The iterator of HttpResponse if request was multipart/mixed
    types:
    - <xref:iterator>[<xref:azure.core.pipeline.transport.HttpResponse>]
  exceptions:
  - type: ValueError
    description: If the content is not multipart/mixed
- uid: azure.core.pipeline.transport.HttpResponse.raise_for_status
  name: raise_for_status
  summary: 'Raises an HttpResponseError if the response has an error status code.

    If response is good, does nothing.'
  signature: raise_for_status() -> None
- uid: azure.core.pipeline.transport.HttpResponse.stream_download
  name: stream_download
  summary: 'Generator for streaming request body data.


    Should be implemented by sub-classes if streaming download

    is supported.'
  signature: 'stream_download(pipeline: Pipeline[HttpRequest, ''HttpResponse''], **kwargs:
    Any) -> Iterator[bytes]'
  parameters:
  - name: pipeline
    description: The pipeline object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.Pipeline>
  return:
    description: The generator of bytes connected to the socket
    types:
    - <xref:iterator>[<xref:bytes>]
- uid: azure.core.pipeline.transport.HttpResponse.text
  name: text
  summary: Return the whole body as a string.
  signature: 'text(encoding: str | None = None) -> str'
  parameters:
  - name: encoding
    description: 'The encoding to apply. If None, use "utf-8" with BOM parsing (utf-8-sig).

      Implementation can be smarter if they want (using headers or chardet).'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The whole body as a string.
    types:
    - <xref:str>
  seeAlsoContent: '  ~body()

    '
