### YamlMime:PythonClass
uid: azure.core.pipeline.transport.AsyncHttpResponse
name: AsyncHttpResponse
fullName: azure.core.pipeline.transport.AsyncHttpResponse
module: azure.core.pipeline.transport
inheritances:
- azure.core.pipeline.transport._base._HttpResponseBase
summary: 'An AsyncHttpResponse ABC.


  Allows for the asynchronous streaming of data from the response.'
constructor:
  syntax: AsyncHttpResponse(request, internal_response, block_size=None)
methods:
- uid: azure.core.pipeline.transport.AsyncHttpResponse.parts
  name: parts
  summary: Assuming the content-type is multipart/mixed, will return the parts as
    an async iterator.
  signature: parts() -> collections.abc.AsyncIterator
  return:
    types:
    - <xref:AsyncIterator>
  exceptions:
  - description: If the content is not multipart/mixed
    type: ValueError
- uid: azure.core.pipeline.transport.AsyncHttpResponse.stream_download
  name: stream_download
  summary: 'Generator for streaming response body data.


    Should be implemented by sub-classes if streaming download

    is supported. Will return an asynchronous generator.'
  signature: stream_download(pipeline, **kwargs) -> AsyncIterator[bytes]
  parameters:
  - name: pipeline
    description: The pipeline object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.Pipeline>
  - name: decompress
    description: 'If True which is default, will attempt to decode the body based

      on the *content-encoding* header.'
    types:
    - <xref:bool>
