### YamlMime:PythonClass
uid: azure.core.pipeline.transport.HttpTransport
name: HttpTransport
fullName: azure.core.pipeline.transport.HttpTransport
module: azure.core.pipeline.transport
inheritances:
- contextlib.AbstractContextManager
- abc.ABC
- typing.Generic
summary: An http sender ABC.
constructor:
  syntax: HttpTransport()
methods:
- uid: azure.core.pipeline.transport.HttpTransport.close
  name: close
  summary: Close the session if it is not externally owned.
  signature: abstract close()
- uid: azure.core.pipeline.transport.HttpTransport.open
  name: open
  summary: Assign new session if one does not already exist.
  signature: abstract open()
- uid: azure.core.pipeline.transport.HttpTransport.send
  name: send
  summary: Send the request using this HTTP sender.
  signature: 'abstract send(request: HTTPRequestType, **kwargs) -> HTTPResponseType'
  parameters:
  - name: request
    description: The pipeline request object
    isRequired: true
    types:
    - <xref:azure.core.transport.HTTPRequest>
  return:
    description: The pipeline response object.
    types:
    - <xref:azure.core.pipeline.transport.HttpResponse>
- uid: azure.core.pipeline.transport.HttpTransport.sleep
  name: sleep
  summary: 'Sleep for the specified duration.


    You should always ask the transport to sleep, and not call directly

    the stdlib. This is mostly important in async, as the transport

    may not use asyncio but other implementations like trio and they have their own

    way to sleep, but to keep design

    consistent, it''s cleaner to always ask the transport to sleep and let the transport

    implementor decide how to do it.'
  signature: 'sleep(duration: float) -> None'
  parameters:
  - name: duration
    description: The number of seconds to sleep.
    isRequired: true
    types:
    - <xref:float>
