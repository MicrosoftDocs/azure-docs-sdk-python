### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.policies.AsyncRetryPolicy.send
  - azure.core.pipeline.policies.AsyncRetryPolicy.sleep
  class: azure.core.pipeline.policies.AsyncRetryPolicy
  example:
  - "Configuring an async retry policy.<!--[!code-python[Main](les\\test_example_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\102\\\\azure-core-1.7.0\\\\samples\\\\test_example_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline.policies\
    \ import AsyncRetryPolicy\n\n   retry_policy = AsyncRetryPolicy()\n\n   # Total\
    \ number of retries to allow. Takes precedence over other counts.\n   # Default\
    \ value is 10.\n   retry_policy.total_retries = 5\n\n   # How many connection-related\
    \ errors to retry on.\n   # These are errors raised before the request is sent\
    \ to the remote server,\n   # which we assume has not triggered the server to\
    \ process the request. Default value is 3\n   retry_policy.connect_retries = 2\n\
    \n   # How many times to retry on read errors.\n   # These errors are raised after\
    \ the request was sent to the server, so the\n   # request may have side-effects.\
    \ Default value is 3.\n   retry_policy.read_retries = 4\n\n   # How many times\
    \ to retry on bad status codes. Default value is 3.\n   retry_policy.status_retries\
    \ = 3\n\n   # A backoff factor to apply between attempts after the second try\n\
    \   # (most errors are resolved immediately by a second try without a delay).\n\
    \   # Retry policy will sleep for:\n   #    {backoff factor} * (2 ** ({number\
    \ of total retries} - 1))\n   # seconds. If the backoff_factor is 0.1, then the\
    \ retry will sleep\n   # for [0.0s, 0.2s, 0.4s, ...] between retries.\n   # The\
    \ default value is 0.8.\n   retry_policy.backoff_factor = 0.5\n\n   # The maximum\
    \ back off time. Default value is 120 seconds (2 minutes).\n   retry_policy.backoff_max\
    \ = 120\n\n   # Alternatively you can disable redirects entirely\n   retry_policy\
    \ = AsyncRetryPolicy.no_retries()\n\n   # All of these settings can also be configured\
    \ per operation.\n   policies.append(retry_policy)\n   async with AsyncPipelineClient(base_url=url,\
    \ policies=policies) as client:\n       response = await client._pipeline.run(\n\
    \           request,\n           retry_total=10,\n           retry_connect=1,\n\
    \           retry_read=1,\n           retry_status=5,\n           retry_backoff_factor=0.5,\n\
    \           retry_backoff_max=60,\n           retry_on_methods=['GET']\n     \
    \  )\n\n   ````\n"
  fullName: azure.core.pipeline.policies.AsyncRetryPolicy
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      - inheritance:
        - type: builtins.object
        type: typing.Generic
      type: azure.core.pipeline.policies._base.HTTPPolicy
    type: azure.core.pipeline.policies._retry.RetryPolicy
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.pipeline.policies._base_async.AsyncHTTPPolicy
  langs:
  - python
  module: azure.core.pipeline.policies
  name: AsyncRetryPolicy
  summary: 'Async flavor of the retry policy.


    The async retry policy in the pipeline can be configured directly, or tweaked
    on a per-call basis.'
  syntax:
    content: AsyncRetryPolicy(**kwargs)
    parameters:
    - description: 'Total number of retries to allow. Takes precedence over other
        counts.

        Default value is 10.'
      id: retry_total
      type:
      - int
    - description: 'How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,

        which we assume has not triggered the server to process the request. Default
        value is 3.'
      id: retry_connect
      type:
      - int
    - description: 'How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the

        request may have side-effects. Default value is 3.'
      id: retry_read
      type:
      - int
    - description: How many times to retry on bad status codes. Default value is 3.
      id: retry_status
      type:
      - int
    - description: 'A backoff factor to apply between attempts after the second try

        (most errors are resolved immediately by a second try without a delay).

        Retry policy will sleep for: *{backoff factor} * (2 ** ({number of total retries}
        - 1))*

        seconds. If the backoff_factor is 0.1, then the retry will sleep

        for [0.0s, 0.2s, 0.4s, ...] between retries. The default value is 0.8.'
      id: retry_backoff_factor
      type:
      - float
    - description: The maximum back off time. Default value is 120 seconds (2 minutes).
      id: retry_backoff_max
      type:
      - int
  type: class
  uid: azure.core.pipeline.policies.AsyncRetryPolicy
- class: azure.core.pipeline.policies.AsyncRetryPolicy
  fullName: azure.core.pipeline.policies.AsyncRetryPolicy.send
  langs:
  - python
  module: azure.core.pipeline.policies
  name: send(request)
  namewithoutparameters: send
  summary: Uses the configured retry policy to send the request to the next policy
    in the pipeline.
  syntax:
    content: send(request)
    parameters:
    - description: The PipelineRequest object
      id: request
      isRequired: true
      type:
      - azure.core.pipeline.PipelineRequest
    return:
      description: Returns the PipelineResponse or raises error if maximum retries
        exceeded.
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.AsyncRetryPolicy.send
- class: azure.core.pipeline.policies.AsyncRetryPolicy
  fullName: azure.core.pipeline.policies.AsyncRetryPolicy.sleep
  langs:
  - python
  module: azure.core.pipeline.policies
  name: sleep(settings, transport, response=None)
  namewithoutparameters: sleep
  summary: 'Sleep between retry attempts.


    This method will respect a server''s `Retry-After` response header

    and sleep the duration of the time requested. If that is not present, it

    will use an exponential backoff. By default, the backoff factor is 0 and

    this method will return immediately.'
  syntax:
    content: sleep(settings, transport, response=None)
    parameters:
    - description: The retry settings.
      id: settings
      isRequired: true
      type:
      - dict
    - description: The HTTP transport type.
      id: transport
      isRequired: true
    - defaultValue: None
      description: The PipelineResponse object.
      id: response
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.AsyncRetryPolicy.sleep
references:
- fullName: azure.core.pipeline.policies.AsyncRetryPolicy.send
  isExternal: false
  name: send(request)
  parent: azure.core.pipeline.policies.AsyncRetryPolicy
  uid: azure.core.pipeline.policies.AsyncRetryPolicy.send
- fullName: azure.core.pipeline.policies.AsyncRetryPolicy.sleep
  isExternal: false
  name: sleep(settings, transport, response=None)
  parent: azure.core.pipeline.policies.AsyncRetryPolicy
  uid: azure.core.pipeline.policies.AsyncRetryPolicy.sleep
