### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.policies.RetryPolicy.configure_retries
  - azure.core.pipeline.policies.RetryPolicy.get_backoff_time
  - azure.core.pipeline.policies.RetryPolicy.get_retry_after
  - azure.core.pipeline.policies.RetryPolicy.increment
  - azure.core.pipeline.policies.RetryPolicy.is_exhausted
  - azure.core.pipeline.policies.RetryPolicy.is_retry
  - azure.core.pipeline.policies.RetryPolicy.no_retries
  - azure.core.pipeline.policies.RetryPolicy.parse_retry_after
  - azure.core.pipeline.policies.RetryPolicy.send
  - azure.core.pipeline.policies.RetryPolicy.sleep
  - azure.core.pipeline.policies.RetryPolicy.update_context
  - azure.core.pipeline.policies.RetryPolicy.BACKOFF_MAX
  class: azure.core.pipeline.policies.RetryPolicy
  example:
  - "Configuring a retry policy.<!--[!code-python[Main](les\\test_example_sync.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\102\\\\azure-core-1.8.1\\\\samples\\\\test_example_sync.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline.policies\
    \ import RetryPolicy\n\n   retry_policy = RetryPolicy()\n\n   # Total number of\
    \ retries to allow. Takes precedence over other counts.\n   # Default value is\
    \ 10.\n   retry_policy.total_retries = 5\n\n   # How many connection-related errors\
    \ to retry on.\n   # These are errors raised before the request is sent to the\
    \ remote server,\n   # which we assume has not triggered the server to process\
    \ the request. Default value is 3\n   retry_policy.connect_retries = 2\n\n   #\
    \ How many times to retry on read errors.\n   # These errors are raised after\
    \ the request was sent to the server, so the\n   # request may have side-effects.\
    \ Default value is 3.\n   retry_policy.read_retries = 4\n\n   # How many times\
    \ to retry on bad status codes. Default value is 3.\n   retry_policy.status_retries\
    \ = 3\n\n   # A backoff factor to apply between attempts after the second try\n\
    \   # (most errors are resolved immediately by a second try without a delay).\n\
    \   # Retry policy will sleep for:\n   #    {backoff factor} * (2 ** ({number\
    \ of total retries} - 1))\n   # seconds. If the backoff_factor is 0.1, then the\
    \ retry will sleep\n   # for [0.0s, 0.2s, 0.4s, ...] between retries.\n   # The\
    \ default value is 0.8.\n   retry_policy.backoff_factor = 0.5\n\n   # The maximum\
    \ back off time. Default value is 120 seconds (2 minutes).\n   retry_policy.backoff_max\
    \ = 120\n\n   # Alternatively you can disable redirects entirely\n   retry_policy\
    \ = RetryPolicy.no_retries()\n\n   # All of these settings can also be configured\
    \ per operation.\n   policies.append(retry_policy)\n   client = PipelineClient(base_url=url,\
    \ policies=policies)\n   request = client.get(url)\n   pipeline_response = client._pipeline.run(\n\
    \       request,\n       retry_total=10,\n       retry_connect=1,\n       retry_read=1,\n\
    \       retry_status=5,\n       retry_backoff_factor=0.5,\n       retry_backoff_max=120,\n\
    \       retry_on_methods=['GET']\n   )\n\n   ````\n"
  fullName: azure.core.pipeline.policies.RetryPolicy
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.pipeline.policies._base.HTTPPolicy
  langs:
  - python
  module: azure.core.pipeline.policies
  name: RetryPolicy
  summary: 'A retry policy.


    The retry policy in the pipeline can be configured directly, or tweaked on a per-call
    basis.'
  syntax:
    content: RetryPolicy(**kwargs)
    parameters:
    - description: 'Total number of retries to allow. Takes precedence over other
        counts.

        Default value is 10.'
      id: retry_total
      type:
      - int
    - description: 'How many connection-related errors to retry on.

        These are errors raised before the request is sent to the remote server,

        which we assume has not triggered the server to process the request. Default
        value is 3.'
      id: retry_connect
      type:
      - int
    - description: 'How many times to retry on read errors.

        These errors are raised after the request was sent to the server, so the

        request may have side-effects. Default value is 3.'
      id: retry_read
      type:
      - int
    - description: How many times to retry on bad status codes. Default value is 3.
      id: retry_status
      type:
      - int
    - description: 'A backoff factor to apply between attempts after the second try

        (most errors are resolved immediately by a second try without a delay).

        In fixed mode, retry policy will alwasy sleep for {backoff factor}.

        In ''exponential'' mode, retry policy will sleep for: *{backoff factor} *
        (2 ** ({number of total retries} - 1))*

        seconds. If the backoff_factor is 0.1, then the retry will sleep

        for [0.0s, 0.2s, 0.4s, ...] between retries. The default value is 0.8.'
      id: retry_backoff_factor
      type:
      - float
    - description: The maximum back off time. Default value is 120 seconds (2 minutes).
      id: retry_backoff_max
      type:
      - int
    - description: Fixed or exponential delay between attemps, default is exponential.
      id: retry_mode
      type:
      - RetryMode
    - description: Timeout setting for the operation in seconds, default is 604800s
        (7 days).
      id: timeout
      type:
      - int
  type: class
  uid: azure.core.pipeline.policies.RetryPolicy
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.configure_retries
  langs:
  - python
  module: azure.core.pipeline.policies
  name: configure_retries(options)
  namewithoutparameters: configure_retries
  summary: Configures the retry settings.
  syntax:
    content: configure_retries(options)
    parameters:
    - description: keyword arguments from context.
      id: options
      isRequired: true
    return:
      description: A dict containing settings and history for retries.
      type:
      - dict
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.configure_retries
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.get_backoff_time
  langs:
  - python
  module: azure.core.pipeline.policies
  name: get_backoff_time(settings)
  namewithoutparameters: get_backoff_time
  summary: Returns the current backoff time.
  syntax:
    content: get_backoff_time(settings)
    parameters:
    - description: The retry settings.
      id: settings
      isRequired: true
      type:
      - dict
    return:
      description: The current backoff value.
      type:
      - float
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.get_backoff_time
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.get_retry_after
  langs:
  - python
  module: azure.core.pipeline.policies
  name: get_retry_after(response)
  namewithoutparameters: get_retry_after
  summary: Get the value of Retry-After in seconds.
  syntax:
    content: get_retry_after(response)
    parameters:
    - description: The PipelineResponse object
      id: response
      isRequired: true
      type:
      - azure.core.pipeline.PipelineResponse
    return:
      description: Value of Retry-After in seconds.
      type:
      - float
      - None
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.get_retry_after
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.increment
  langs:
  - python
  module: azure.core.pipeline.policies
  name: increment(settings, response=None, error=None)
  namewithoutparameters: increment
  summary: Increment the retry counters.
  syntax:
    content: increment(settings, response=None, error=None)
    parameters:
    - description: The retry settings.
      id: settings
      isRequired: true
    - defaultValue: None
      description: A pipeline response object.
      id: response
      type:
      - azure.core.pipeline.PipelineResponse
    - defaultValue: None
      description: 'An error encountered during the request, or

        None if the response was received successfully.'
      id: error
    return:
      description: 'Whether any retry attempt is available

        True if more retry attempts available, False otherwise'
      type:
      - bool
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.increment
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.is_exhausted
  langs:
  - python
  module: azure.core.pipeline.policies
  name: is_exhausted(settings)
  namewithoutparameters: is_exhausted
  summary: Checks if any retries left.
  syntax:
    content: is_exhausted(settings)
    parameters:
    - description: the retry settings
      id: settings
      isRequired: true
      type:
      - dict
    return:
      description: False if have more retries. True if retries exhausted.
      type:
      - bool
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.is_exhausted
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.is_retry
  langs:
  - python
  module: azure.core.pipeline.policies
  name: is_retry(settings, response)
  namewithoutparameters: is_retry
  summary: 'Checks if method/status code is retryable.


    Based on whitelists and control variables such as the number of

    total retries to allow, whether to respect the Retry-After header,

    whether this header is present, and whether the returned status

    code is on the list of status codes to be retried upon on the

    presence of the aforementioned header.


    The behavior is:

    -       If status_code < 400: don''t retry

    -       Else if Retry-After present: retry

    -       Else: retry based on the safe status code list ([408, 429, 500, 502, 503,
    504])'
  syntax:
    content: is_retry(settings, response)
    parameters:
    - description: The retry settings.
      id: settings
      isRequired: true
      type:
      - dict
    - description: The PipelineResponse object
      id: response
      isRequired: true
      type:
      - azure.core.pipeline.PipelineResponse
    return:
      description: True if method/status code is retryable. False if not retryable.
      type:
      - bool
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.is_retry
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.no_retries
  langs:
  - python
  module: azure.core.pipeline.policies
  name: no_retries()
  namewithoutparameters: no_retries
  summary: Disable retries.
  syntax:
    content: no_retries()
    parameters:
    - id: cls
      isRequired: true
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.no_retries
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.parse_retry_after
  langs:
  - python
  module: azure.core.pipeline.policies
  name: parse_retry_after(retry_after)
  namewithoutparameters: parse_retry_after
  summary: Helper to parse Retry-After and get value in seconds.
  syntax:
    content: parse_retry_after(retry_after)
    parameters:
    - description: Retry-After header
      id: retry_after
      isRequired: true
      type:
      - str
    return:
      type:
      - float
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.parse_retry_after
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.send
  langs:
  - python
  module: azure.core.pipeline.policies
  name: send(request)
  namewithoutparameters: send
  summary: Sends the PipelineRequest object to the next policy. Uses retry settings
    if necessary.
  syntax:
    content: send(request)
    parameters:
    - description: The PipelineRequest object
      id: request
      isRequired: true
      type:
      - azure.core.pipeline.PipelineRequest
    return:
      description: Returns the PipelineResponse or raises error if maximum retries
        exceeded.
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.send
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.sleep
  langs:
  - python
  module: azure.core.pipeline.policies
  name: sleep(settings, transport, response=None)
  namewithoutparameters: sleep
  summary: 'Sleep between retry attempts.


    This method will respect a server''s `Retry-After` response header

    and sleep the duration of the time requested. If that is not present, it

    will use an exponential backoff. By default, the backoff factor is 0 and

    this method will return immediately.'
  syntax:
    content: sleep(settings, transport, response=None)
    parameters:
    - description: The retry settings.
      id: settings
      isRequired: true
      type:
      - dict
    - description: The HTTP transport type.
      id: transport
      isRequired: true
    - defaultValue: None
      description: The PipelineResponse object.
      id: response
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.sleep
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.update_context
  langs:
  - python
  module: azure.core.pipeline.policies
  name: update_context(context, retry_settings)
  namewithoutparameters: update_context
  summary: Updates retry history in pipeline context.
  syntax:
    content: update_context(context, retry_settings)
    parameters:
    - description: The pipeline context.
      id: context
      isRequired: true
      type:
      - azure.core.pipeline.PipelineContext
    - description: The retry settings.
      id: retry_settings
      isRequired: true
      type:
      - dict
  type: method
  uid: azure.core.pipeline.policies.RetryPolicy.update_context
- class: azure.core.pipeline.policies.RetryPolicy
  fullName: azure.core.pipeline.policies.RetryPolicy.BACKOFF_MAX
  langs:
  - python
  module: azure.core.pipeline.policies
  name: BACKOFF_MAX
  syntax:
    content: BACKOFF_MAX = 120
  type: attribute
  uid: azure.core.pipeline.policies.RetryPolicy.BACKOFF_MAX
references:
- fullName: azure.core.pipeline.policies.RetryPolicy.configure_retries
  isExternal: false
  name: configure_retries(options)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.configure_retries
- fullName: azure.core.pipeline.policies.RetryPolicy.get_backoff_time
  isExternal: false
  name: get_backoff_time(settings)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.get_backoff_time
- fullName: azure.core.pipeline.policies.RetryPolicy.get_retry_after
  isExternal: false
  name: get_retry_after(response)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.get_retry_after
- fullName: azure.core.pipeline.policies.RetryPolicy.increment
  isExternal: false
  name: increment(settings, response=None, error=None)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.increment
- fullName: azure.core.pipeline.policies.RetryPolicy.is_exhausted
  isExternal: false
  name: is_exhausted(settings)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.is_exhausted
- fullName: azure.core.pipeline.policies.RetryPolicy.is_retry
  isExternal: false
  name: is_retry(settings, response)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.is_retry
- fullName: azure.core.pipeline.policies.RetryPolicy.no_retries
  isExternal: false
  name: no_retries()
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.no_retries
- fullName: azure.core.pipeline.policies.RetryPolicy.parse_retry_after
  isExternal: false
  name: parse_retry_after(retry_after)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.parse_retry_after
- fullName: azure.core.pipeline.policies.RetryPolicy.send
  isExternal: false
  name: send(request)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.send
- fullName: azure.core.pipeline.policies.RetryPolicy.sleep
  isExternal: false
  name: sleep(settings, transport, response=None)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.sleep
- fullName: azure.core.pipeline.policies.RetryPolicy.update_context
  isExternal: false
  name: update_context(context, retry_settings)
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.update_context
- fullName: azure.core.pipeline.policies.RetryPolicy.BACKOFF_MAX
  isExternal: false
  name: BACKOFF_MAX
  parent: azure.core.pipeline.policies.RetryPolicy
  uid: azure.core.pipeline.policies.RetryPolicy.BACKOFF_MAX
