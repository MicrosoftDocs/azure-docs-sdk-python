### YamlMime:PythonClass
uid: azure.core.AsyncPipelineClient
name: AsyncPipelineClient
fullName: azure.core.AsyncPipelineClient
module: azure.core
inheritances:
- azure.core.pipeline.transport._base.PipelineClientBase
summary: 'Service client core methods.


  Builds an AsyncPipeline client.'
constructor:
  syntax: AsyncPipelineClient(base_url, **kwargs)
  parameters:
  - name: base_url
    description: URL for the request.
    types:
    - <xref:str>
  - name: config
    description: If omitted, the standard configuration is used.
    types:
    - <xref:azure.core.configuration.Configuration>
  - name: pipeline
    description: If omitted, a Pipeline object is created and returned.
    types:
    - <xref:Pipeline>
  - name: policies
    description: If omitted, the standard policies of the configuration object is
      used.
    types:
    - <xref:list>[<xref:HTTPPolicy>]
  - name: transport
    description: If omitted, RequestsTransport is used for synchronous transport.
    types:
    - <xref:HttpTransport>
examples:
- "Builds the async pipeline client.<!--[!code-python[Main](les\\test_example_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\101\\\\\
  azure-core-1.10.0\\\\samples\\\\test_example_async.py\", \"xml:space\": \"preserve\"\
  , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
  : 1}} -->\n\n````python\n\n   from azure.core import AsyncPipelineClient\n   from\
  \ azure.core.pipeline.policies import AsyncRedirectPolicy, UserAgentPolicy\n   from\
  \ azure.core.pipeline.transport import HttpRequest\n\n   # example policies\n  \
  \ request = HttpRequest(\"GET\", url)\n   policies = [\n       UserAgentPolicy(\"\
  myuseragent\"),\n       AsyncRedirectPolicy(),\n   ]\n\n   async with AsyncPipelineClient(base_url=url,\
  \ policies=policies) as client:\n       response = await client._pipeline.run(request)\n\
  \n   ````\n"
methods:
- uid: azure.core.AsyncPipelineClient.close
  name: close
  signature: close()
