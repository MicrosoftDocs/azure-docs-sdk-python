### YamlMime:PythonClass
uid: azure.core.AsyncPipelineClient
name: AsyncPipelineClient
fullName: azure.core.AsyncPipelineClient
module: azure.core
inheritances:
- azure.core.pipeline.transport._base.PipelineClientBase
- contextlib.AbstractAsyncContextManager
- typing.Generic
summary: 'Service client core methods.


  Builds an AsyncPipeline client.'
constructor:
  syntax: 'AsyncPipelineClient(base_url: str, *, pipeline: AsyncPipeline[HTTPRequestType,
    AsyncHTTPResponseType] | None = None, config: Configuration | None = None, **kwargs)'
  parameters:
  - name: base_url
    description: URL for the request.
    isRequired: true
    types:
    - <xref:str>
  - name: config
    description: If omitted, the standard configuration is used.
    types:
    - <xref:azure.core.configuration.Configuration>
  - name: pipeline
    description: If omitted, a Pipeline object is created and returned.
    types:
    - <xref:azure.core.pipeline.Pipeline>
  - name: policies
    description: If omitted, the standard policies of the configuration object is
      used.
    types:
    - <xref:list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>]
  - name: per_call_policies
    description: If specified, the policies will be added into the policy list before
      RetryPolicy
    types:
    - <xref:Union>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>, <xref:azure.core.pipeline.policies.SansIOHTTPPolicy,list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>],
      <xref:list>[<xref:azure.core.pipeline.policies.SansIOHTTPPolicy>]]
  - name: per_retry_policies
    description: If specified, the policies will be added into the policy list after
      RetryPolicy
    types:
    - <xref:Union>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>, <xref:azure.core.pipeline.policies.SansIOHTTPPolicy,list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>],
      <xref:list>[<xref:azure.core.pipeline.policies.SansIOHTTPPolicy>]]
  - name: transport
    description: If omitted, AioHttpTransport is used for asynchronous transport.
    types:
    - <xref:azure.core.pipeline.transport.AsyncHttpTransport>
examples:
- "Builds the async pipeline client.<!--[!code-python[Main](les\\test_example_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  79\\\\azure-core-1.28.0\\\\samples\\\\test_example_async.py\", \"xml:space\": \"\
  preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\": {\"\
  linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core import\
  \ AsyncPipelineClient\n   from azure.core.pipeline.policies import AsyncRedirectPolicy,\
  \ UserAgentPolicy\n   from azure.core.pipeline.transport import HttpRequest\n\n\
  \   # example policies\n   request = HttpRequest(\"GET\", url)\n   policies: Iterable[Union[AsyncHTTPPolicy,\
  \ SansIOHTTPPolicy]] = [\n       UserAgentPolicy(\"myuseragent\"),\n       AsyncRedirectPolicy(),\n\
  \   ]\n\n   async with AsyncPipelineClient(base_url=url, policies=policies) as client:\n\
  \       response = await client._pipeline.run(request)\n\n   ````\n"
methods:
- uid: azure.core.AsyncPipelineClient.close
  name: close
  signature: async close()
- uid: azure.core.AsyncPipelineClient.send_request
  name: send_request
  summary: 'Method that runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest(''GET'', ''http://www.example.com'')

    <HttpRequest [GET], url: ''http://www.example.com''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```'
  signature: 'send_request(request: HTTPRequestType, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHTTPResponseType]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
