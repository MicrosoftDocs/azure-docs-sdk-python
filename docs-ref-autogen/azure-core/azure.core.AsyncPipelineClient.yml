### YamlMime:PythonClass
uid: azure.core.AsyncPipelineClient
name: AsyncPipelineClient
fullName: azure.core.AsyncPipelineClient
module: azure.core
inheritances:
- azure.core.pipeline.transport._base.PipelineClientBase
- contextlib.AbstractAsyncContextManager
- typing.Generic
summary: 'Service client core methods.


  Builds an AsyncPipeline client.'
constructor:
  syntax: 'AsyncPipelineClient(base_url: str, *, pipeline: AsyncPipeline[HTTPRequestType,
    AsyncHTTPResponseType] | None = None, config: Configuration[HTTPRequestType, AsyncHTTPResponseType]
    | None = None, **kwargs: Any)'
  parameters:
  - name: base_url
    description: URL for the request.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: config
    description: If omitted, the standard configuration is used.
    types:
    - <xref:azure.core.configuration.Configuration>
  - name: pipeline
    description: If omitted, a Pipeline object is created and returned.
    types:
    - <xref:azure.core.pipeline.Pipeline>
  - name: policies
    description: If omitted, the standard policies of the configuration object is
      used.
    types:
    - <xref:list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>]
  - name: per_call_policies
    description: If specified, the policies will be added into the policy list before
      RetryPolicy
    types:
    - <xref:typing.Union>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>, <xref:azure.core.pipeline.policies.SansIOHTTPPolicy>,
      <xref:list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>], <xref:list>[<xref:azure.core.pipeline.policies.SansIOHTTPPolicy>]]
  - name: per_retry_policies
    description: If specified, the policies will be added into the policy list after
      RetryPolicy
    types:
    - <xref:typing.Union>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>, <xref:azure.core.pipeline.policies.SansIOHTTPPolicy>,
      <xref:list>[<xref:azure.core.pipeline.policies.AsyncHTTPPolicy>], <xref:list>[<xref:azure.core.pipeline.policies.SansIOHTTPPolicy>]]
  - name: transport
    description: If omitted, AioHttpTransport is used for asynchronous transport.
    types:
    - <xref:azure.core.pipeline.transport.AsyncHttpTransport>
examples:
- "Builds the async pipeline client.<!--[!code-python[Main](les\\test_example_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\36\\\\azure-core-1.30.1\\\
  \\samples\\\\test_example_async.py\", \"xml:space\": \"preserve\", \"force\": false,\
  \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
  : false} -->\n\n````python\n\n   from azure.core import AsyncPipelineClient\n  \
  \ from azure.core.pipeline.policies import AsyncRedirectPolicy, UserAgentPolicy\n\
  \   from azure.core.rest import HttpRequest\n\n   # example policies\n   request\
  \ = HttpRequest(\"GET\", url)\n   policies: Iterable[Union[AsyncHTTPPolicy, SansIOHTTPPolicy]]\
  \ = [\n       UserAgentPolicy(\"myuseragent\"),\n       AsyncRedirectPolicy(),\n\
  \   ]\n\n   async with AsyncPipelineClient[HttpRequest, AsyncHttpResponse](base_url=url,\
  \ policies=policies) as client:\n       response = await client.send_request(request)\n\
  \n   ````\n"
methods:
- uid: azure.core.AsyncPipelineClient.close
  name: close
  signature: async close() -> None
- uid: azure.core.AsyncPipelineClient.delete
  name: delete
  summary: Create a DELETE request object.
  signature: 'delete(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.format_url
  name: format_url
  summary: 'Format request URL with the client base URL, unless the

    supplied URL is already absolute.


    Note that both the base url and the template url can contain query parameters.'
  signature: 'format_url(url_template: str, **kwargs: Any) -> str'
  parameters:
  - name: url_template
    description: The request URL to be formatted if necessary.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The formatted URL.
    types:
    - <xref:str>
- uid: azure.core.AsyncPipelineClient.get
  name: get
  summary: Create a GET request object.
  signature: 'get(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.head
  name: head
  summary: Create a HEAD request object.
  signature: 'head(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None, stream_content: Any = None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  - name: stream_content
    description: The body content as a stream
    defaultValue: None
    types:
    - <xref:stream>
    - <xref:generator>
    - <xref:asyncgenerator>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.merge
  name: merge
  summary: Create a MERGE request object.
  signature: 'merge(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.options
  name: options
  summary: Create a OPTIONS request object.
  signature: 'options(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, *, content: bytes | str | Dict[Any, Any] | None = None, form_content:
    Dict[Any, Any] | None = None, **kwargs: Any) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  keywordOnlyParameters:
  - name: content
    description: The body content
  - name: form_content
    description: Form content
    types:
    - <xref:dict>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.patch
  name: patch
  summary: Create a PATCH request object.
  signature: 'patch(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None, stream_content: Any = None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  - name: stream_content
    description: The body content as a stream
    defaultValue: None
    types:
    - <xref:stream>
    - <xref:generator>
    - <xref:asyncgenerator>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.post
  name: post
  summary: Create a POST request object.
  signature: 'post(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None, stream_content: Any = None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  - name: stream_content
    description: The body content as a stream
    defaultValue: None
    types:
    - <xref:stream>
    - <xref:generator>
    - <xref:asyncgenerator>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.put
  name: put
  summary: Create a PUT request object.
  signature: 'put(url: str, params: Dict[str, str] | None = None, headers: Dict[str,
    str] | None = None, content: Any = None, form_content: Dict[str, Any] | None =
    None, stream_content: Any = None) -> HttpRequest'
  parameters:
  - name: url
    description: The request URL.
    isRequired: true
    types:
    - <xref:str>
  - name: params
    description: Request URL parameters.
    defaultValue: None
    types:
    - <xref:dict>
  - name: headers
    description: Headers
    defaultValue: None
    types:
    - <xref:dict>
  - name: content
    description: The body content
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
  - name: form_content
    description: Form content
    defaultValue: None
    types:
    - <xref:dict>
  - name: stream_content
    description: The body content as a stream
    defaultValue: None
    types:
    - <xref:stream>
    - <xref:generator>
    - <xref:asyncgenerator>
  return:
    description: An HttpRequest object
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
- uid: azure.core.AsyncPipelineClient.send_request
  name: send_request
  summary: 'Method that runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest(''GET'', ''http://www.example.com'')

    <HttpRequest [GET], url: ''http://www.example.com''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```'
  signature: 'send_request(request: HTTPRequestType, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHTTPResponseType]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
