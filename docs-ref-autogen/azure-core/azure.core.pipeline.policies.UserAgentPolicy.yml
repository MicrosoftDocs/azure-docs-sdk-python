### YamlMime:PythonClass
uid: azure.core.pipeline.policies.UserAgentPolicy
name: UserAgentPolicy
fullName: azure.core.pipeline.policies.UserAgentPolicy
module: azure.core.pipeline.policies
inheritances:
- azure.core.pipeline.policies._base.SansIOHTTPPolicy
summary: User-Agent Policy. Allows custom values to be added to the User-Agent header.
constructor:
  syntax: 'UserAgentPolicy(base_user_agent: str | None = None, **kwargs: Any)'
  parameters:
  - name: base_user_agent
    description: Sets the base user agent value.
    defaultValue: None
    types:
    - <xref:str>
  - name: user_agent_overwrite
    description: Overwrites User-Agent when True. Defaults to False.
    types:
    - <xref:bool>
  - name: user_agent_use_env
    description: Gets user-agent from environment. Defaults to True.
    types:
    - <xref:bool>
  - name: user_agent
    description: If specified, this will be added in front of the user agent string.
    types:
    - <xref:str>
  - name: sdk_moniker
    description: 'If specified, the user agent string will be

      azsdk-python-[sdk_moniker] Python/[python_version] ([platform_version])'
    types:
    - <xref:str>
examples:
- "Configuring a user agent policy.<!--[!code-python[Main](les\\test_example_sansio.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  79\\\\azure-core-1.28.0\\\\samples\\\\test_example_sansio.py\", \"xml:space\": \"\
  preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\": {\"\
  linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.pipeline.policies\
  \ import UserAgentPolicy\n\n   user_agent_policy = UserAgentPolicy()\n\n   # The\
  \ user-agent policy allows you to append a custom value to the header.\n   user_agent_policy.add_user_agent(\"\
  CustomValue\")\n\n   # You can also pass in a custom value per operation to append\
  \ to the end of the user-agent.\n   # This can be used together with the policy\
  \ configuration to append multiple values.\n   policies = [\n       redirect_policy,\n\
  \       user_agent_policy,\n   ]\n   client: PipelineClient[HttpRequest, HttpResponse]\
  \ = PipelineClient(base_url=url, policies=policies)\n   request = HttpRequest(\"\
  GET\", url)\n   pipeline_response = client._pipeline.run(request, user_agent=\"\
  AnotherValue\")\n\n   ````\n"
methods:
- uid: azure.core.pipeline.policies.UserAgentPolicy.add_user_agent
  name: add_user_agent
  summary: 'Add value to current user agent with a space.

    :param str value: value to add to user agent.'
  signature: 'add_user_agent(value: str) -> None'
  parameters:
  - name: value
    isRequired: true
- uid: azure.core.pipeline.policies.UserAgentPolicy.on_request
  name: on_request
  summary: Modifies the User-Agent header before the request is sent.
  signature: 'on_request(request: PipelineRequest[HttpRequest | HttpRequest]) -> None'
  parameters:
  - name: request
    description: The PipelineRequest object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
attributes:
- uid: azure.core.pipeline.policies.UserAgentPolicy.user_agent
  name: user_agent
  summary: The current user agent value.
  return:
    description: The current user agent value.
    types:
    - <xref:str>
