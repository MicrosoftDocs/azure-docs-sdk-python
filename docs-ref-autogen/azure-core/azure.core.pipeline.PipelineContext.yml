### YamlMime:PythonClass
uid: azure.core.pipeline.PipelineContext
name: PipelineContext
fullName: azure.core.pipeline.PipelineContext
module: azure.core.pipeline
inheritances:
- builtins.dict
- typing.Generic
summary: 'A context object carried by the pipeline request and response containers.


  This is transport specific and can contain data persisted between

  pipeline requests (for example reusing an open connection pool or "session"),

  as well as used by the SDK developer to carry arbitrary data through

  the pipeline.'
constructor:
  syntax: 'PipelineContext(transport: TransportType | None, **kwargs: Any)'
  parameters:
  - name: transport
    description: The HTTP transport type.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.transport.HttpTransport>
    - <xref:azure.core.pipeline.transport.AsyncHttpTransport>
  - name: kwargs
    description: Developer-defined keyword arguments.
    isRequired: true
    types:
    - <xref:any>
methods:
- uid: azure.core.pipeline.PipelineContext.clear
  name: clear
  summary: Context objects cannot be cleared.
  signature: clear() -> None
  exceptions:
  - type: TypeError
- uid: azure.core.pipeline.PipelineContext.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.core.pipeline.PipelineContext.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
  parameters:
  - name: type
    isRequired: true
- uid: azure.core.pipeline.PipelineContext.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.core.pipeline.PipelineContext.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.core.pipeline.PipelineContext.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.core.pipeline.PipelineContext.pop
  name: pop
  summary: Removes specified key and returns the value.
  signature: 'pop(__key: str) -> Any'
  parameters:
  - name: args
    description: The key to remove.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The value for this key.
    types:
    - <xref:any>
  exceptions:
  - type: ValueError If the key is in the protected list.
- uid: azure.core.pipeline.PipelineContext.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.core.pipeline.PipelineContext.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.core.pipeline.PipelineContext.update
  name: update
  summary: Context objects cannot be updated.
  signature: 'update(*args: Any, **kwargs: Any) -> None'
  exceptions:
  - type: TypeError
- uid: azure.core.pipeline.PipelineContext.values
  name: values
  signature: values() -> an object providing a view on D's values
