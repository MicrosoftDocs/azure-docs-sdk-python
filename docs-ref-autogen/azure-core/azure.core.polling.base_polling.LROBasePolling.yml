### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.polling.base_polling.LROBasePolling.finished
  - azure.core.polling.base_polling.LROBasePolling.from_continuation_token
  - azure.core.polling.base_polling.LROBasePolling.get_continuation_token
  - azure.core.polling.base_polling.LROBasePolling.initialize
  - azure.core.polling.base_polling.LROBasePolling.request_status
  - azure.core.polling.base_polling.LROBasePolling.resource
  - azure.core.polling.base_polling.LROBasePolling.run
  - azure.core.polling.base_polling.LROBasePolling.status
  - azure.core.polling.base_polling.LROBasePolling.update_status
  class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.polling._poller.PollingMethod
  langs:
  - python
  module: azure.core.polling.base_polling
  name: LROBasePolling
  summary: 'A base LRO poller.


    This assumes a basic flow:

    - I analyze the response to decide the polling approach

    - I poll

    - I ask the final resource depending of the polling approach


    If your polling need are more specific, you could implement a PollingMethod directly'
  syntax:
    content: LROBasePolling(timeout=30, lro_algorithms=None, lro_options=None, **operation_config)
  type: class
  uid: azure.core.polling.base_polling.LROBasePolling
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.finished
  langs:
  - python
  module: azure.core.polling.base_polling
  name: finished()
  namewithoutparameters: finished
  summary: 'Is this polling finished?

    :rtype: bool'
  syntax:
    content: finished()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.finished
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.from_continuation_token
  langs:
  - python
  module: azure.core.polling.base_polling
  name: from_continuation_token(continuation_token, **kwargs)
  namewithoutparameters: from_continuation_token
  syntax:
    content: from_continuation_token(continuation_token, **kwargs)
    parameters:
    - id: cls
      isRequired: true
    - id: continuation_token
      isRequired: true
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.from_continuation_token
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.get_continuation_token
  langs:
  - python
  module: azure.core.polling.base_polling
  name: get_continuation_token()
  namewithoutparameters: get_continuation_token
  syntax:
    content: get_continuation_token()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.get_continuation_token
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.initialize
  langs:
  - python
  module: azure.core.polling.base_polling
  name: initialize(client, initial_response, deserialization_callback)
  namewithoutparameters: initialize
  summary: Set the initial status of this LRO.
  syntax:
    content: initialize(client, initial_response, deserialization_callback)
    parameters:
    - description: The initial response of the poller
      id: initial_response
      isRequired: true
    - id: initial_response
      isRequired: true
    - id: deserialization_callback
      isRequired: true
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.initialize
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.request_status
  langs:
  - python
  module: azure.core.polling.base_polling
  name: request_status(status_link)
  namewithoutparameters: request_status
  summary: 'Do a simple GET to this status link.


    This method re-inject ''x-ms-client-request-id''.'
  syntax:
    content: request_status(status_link)
    parameters:
    - id: status_link
      isRequired: true
    return:
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.request_status
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.resource
  langs:
  - python
  module: azure.core.polling.base_polling
  name: resource()
  namewithoutparameters: resource
  summary: Return the built resource.
  syntax:
    content: resource()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.resource
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.run
  langs:
  - python
  module: azure.core.polling.base_polling
  name: run()
  namewithoutparameters: run
  syntax:
    content: run()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.run
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.status
  langs:
  - python
  module: azure.core.polling.base_polling
  name: status()
  namewithoutparameters: status
  summary: 'Return the current status as a string.

    :rtype: str'
  syntax:
    content: status()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.status
- class: azure.core.polling.base_polling.LROBasePolling
  fullName: azure.core.polling.base_polling.LROBasePolling.update_status
  langs:
  - python
  module: azure.core.polling.base_polling
  name: update_status()
  namewithoutparameters: update_status
  summary: Update the current status of the LRO.
  syntax:
    content: update_status()
    parameters: []
  type: method
  uid: azure.core.polling.base_polling.LROBasePolling.update_status
references:
- fullName: azure.core.polling.base_polling.LROBasePolling.finished
  isExternal: false
  name: finished()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.finished
- fullName: azure.core.polling.base_polling.LROBasePolling.from_continuation_token
  isExternal: false
  name: from_continuation_token(continuation_token, **kwargs)
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.from_continuation_token
- fullName: azure.core.polling.base_polling.LROBasePolling.get_continuation_token
  isExternal: false
  name: get_continuation_token()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.get_continuation_token
- fullName: azure.core.polling.base_polling.LROBasePolling.initialize
  isExternal: false
  name: initialize(client, initial_response, deserialization_callback)
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.initialize
- fullName: azure.core.polling.base_polling.LROBasePolling.request_status
  isExternal: false
  name: request_status(status_link)
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.request_status
- fullName: azure.core.polling.base_polling.LROBasePolling.resource
  isExternal: false
  name: resource()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.resource
- fullName: azure.core.polling.base_polling.LROBasePolling.run
  isExternal: false
  name: run()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.run
- fullName: azure.core.polling.base_polling.LROBasePolling.status
  isExternal: false
  name: status()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.status
- fullName: azure.core.polling.base_polling.LROBasePolling.update_status
  isExternal: false
  name: update_status()
  parent: azure.core.polling.base_polling.LROBasePolling
  uid: azure.core.polling.base_polling.LROBasePolling.update_status
