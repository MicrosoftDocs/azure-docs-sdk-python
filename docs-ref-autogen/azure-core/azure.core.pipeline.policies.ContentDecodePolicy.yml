### YamlMime:PythonClass
uid: azure.core.pipeline.policies.ContentDecodePolicy
name: ContentDecodePolicy
fullName: azure.core.pipeline.policies.ContentDecodePolicy
module: azure.core.pipeline.policies
inheritances:
- azure.core.pipeline.policies._base.SansIOHTTPPolicy
summary: Policy for decoding unstreamed response content.
constructor:
  syntax: 'ContentDecodePolicy(response_encoding: Optional[str] = None, **kwargs:
    Any)'
  parameters:
  - name: response_encoding
    description: The encoding to use if known for this service (will disable auto-detection)
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
  name: deserialize_from_http_generics
  summary: 'Deserialize from HTTP response.


    Headers will tested for "content-type"'
  signature: deserialize_from_http_generics(response, encoding=None)
  parameters:
  - name: response
    description: The HTTP response
    isRequired: true
  - name: encoding
    description: The encoding to use if known for this service (will disable auto-detection)
    isRequired: true
  - name: encoding
    defaultValue: None
  return:
    description: A dict or XML tree, depending of the mime-type
  exceptions:
  - description: If deserialization fails
    type: azure.core.exceptions.DecodeError
- uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
  name: deserialize_from_text
  summary: 'Decode response data according to content-type.


    Accept a stream of data as well, but will be load at once in memory for now.

    If no content-type, will return the string version (not bytes, not stream)'
  signature: deserialize_from_text(data, mime_type=None, response=None)
  parameters:
  - name: response
    description: The HTTP response.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.transport.HttpResponse>
  - name: mime_type
    description: The mime type. As mime type, charset is not expected.
    isRequired: true
    types:
    - <xref:str>
  - name: response
    description: If passed, exception will be annotated with that response
    defaultValue: None
  - name: response
    defaultValue: None
  return:
    description: A dict or XML tree, depending of the mime_type
  exceptions:
  - description: If deserialization fails
    type: azure.core.exceptions.DecodeError
- uid: azure.core.pipeline.policies.ContentDecodePolicy.on_request
  name: on_request
  summary: Is executed before sending the request from next policy.
  signature: 'on_request(request: azure.core.pipeline.PipelineRequest) -> None'
  parameters:
  - name: request
    description: Request to be modified before sent from next policy.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
- uid: azure.core.pipeline.policies.ContentDecodePolicy.on_response
  name: on_response
  summary: 'Extract data from the body of a REST response object.

    This will load the entire payload in memory.

    Will follow Content-Type to parse.

    We assume everything is UTF8 (BOM acceptable).'
  signature: 'on_response(request: PipelineRequest[HTTPRequestType], response: PipelineResponse[HTTPRequestType,
    Union[HttpResponse, AsyncHttpResponse]]) -> None'
  parameters:
  - name: request
    description: The PipelineRequest object.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  - name: response
    description: The PipelineResponse object.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  - name: raw_data
    description: Data to be processed.
    isRequired: true
  - name: content_type
    description: How to parse if raw_data is a string/bytes.
    isRequired: true
  exceptions:
  - description: If JSON is requested and parsing is impossible.
    type: JSONDecodeError
  - description: If bytes is not UTF8
    type: UnicodeDecodeError
  - description: If bytes is not valid XML
    type: xml.etree.ElementTree.ParseError
  - description: If deserialization fails
    type: azure.core.exceptions.DecodeError
attributes:
- uid: azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
  name: CONTEXT_NAME
  signature: CONTEXT_NAME = 'deserialized_data'
- uid: azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
  name: JSON_REGEXP
  signature: JSON_REGEXP = re.compile('^(application|text)/([0-9a-z+.]+\\+)?json$')
