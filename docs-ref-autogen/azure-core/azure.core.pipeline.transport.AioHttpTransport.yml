### YamlMime:PythonClass
uid: azure.core.pipeline.transport.AioHttpTransport
name: AioHttpTransport
fullName: azure.core.pipeline.transport.AioHttpTransport
module: azure.core.pipeline.transport
inheritances:
- azure.core.pipeline.transport._base_async.AsyncHttpTransport
summary: 'AioHttp HTTP sender implementation.


  Fully asynchronous implementation using the aiohttp library.'
constructor:
  syntax: 'AioHttpTransport(*, session: ClientSession | None = None, loop=None, session_owner:
    bool = True, **kwargs)'
  parameters:
  - name: session
    description: The client session.
    types:
    - '[<xref:ClientSession>](<xref:aiohttp.ClientSession>)'
  - name: session_owner
    description: Session owner. Defaults True.
    types:
    - <xref:bool>
  - name: use_env_settings
    description: Uses proxy settings from environment. Defaults to True.
    types:
    - <xref:bool>
examples:
- "Asynchronous transport with aiohttp.<!--[!code-python[Main](les\\test_example_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  79\\\\azure-core-1.28.0\\\\samples\\\\test_example_async.py\", \"xml:space\": \"\
  preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\": {\"\
  linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.pipeline.transport\
  \ import AioHttpTransport\n\n   async with AsyncPipeline(AioHttpTransport(), policies=policies)\
  \ as pipeline:\n       response = await pipeline.run(request)\n\n   ````\n"
methods:
- uid: azure.core.pipeline.transport.AioHttpTransport.close
  name: close
  summary: Closes the connection.
  signature: async close()
- uid: azure.core.pipeline.transport.AioHttpTransport.open
  name: open
  summary: Opens the connection.
  signature: async open()
- uid: azure.core.pipeline.transport.AioHttpTransport.send
  name: send
  summary: 'Send the request using this HTTP sender.


    Will pre-load the body into memory to be available with a sync method.

    Pass stream=True to avoid this behavior.'
  signature: 'async send(request: HttpRequest, **config: Any) -> AsyncHttpResponse
    | None'
  parameters:
  - name: request
    description: The HttpRequest object
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: config
    description: Any keyword arguments
    types:
    - <xref:any>
  - name: stream
    description: Defaults to False.
    types:
    - <xref:bool>
  - name: proxies
    description: dict of proxy to used based on protocol. Proxy is a dict (protocol,
      url)
    types:
    - <xref:dict>
  - name: proxy
    description: will define the proxy to use all the time
    types:
    - <xref:str>
  return:
    description: The AsyncHttpResponse
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
