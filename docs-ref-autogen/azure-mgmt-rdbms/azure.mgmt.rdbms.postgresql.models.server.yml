### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.rdbms.postgresql.models.Server
  fullName: azure.mgmt.rdbms.postgresql.models.Server
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.rdbms.postgresql.models._models_py3.Resource
    type: azure.mgmt.rdbms.postgresql.models._models_py3.TrackedResource
  langs:
  - python
  module: azure.mgmt.rdbms.postgresql.models
  name: Server
  summary: 'Represents a server.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'Server(*, location: str, tags=None, identity=None, sku=None, administrator_login:
      str = None, version=None, ssl_enforcement=None, minimal_tls_version=None, infrastructure_encryption=None,
      user_visible_state=None, fully_qualified_domain_name: str = None, earliest_restore_date=None,
      storage_profile=None, replication_role: str = None, master_server_id: str =
      None, replica_capacity: int = None, public_network_access=None, **kwargs) ->
      None'
    parameters:
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: Required. The geo-location where the resource lives
      id: location
      type:
      - str
    - description: The Azure Active Directory identity of the server.
      id: identity
      type:
      - azure.mgmt.rdbms.postgresql.models.ResourceIdentity
    - description: The SKU (pricing tier) of the server.
      id: sku
      type:
      - azure.mgmt.rdbms.postgresql.models.Sku
    - description: 'The administrator''s login name of a server.

        Can only be specified when the server is being created (and is required

        for creation).'
      id: administrator_login
      type:
      - str
    - description: 'Server version. Possible values include: ''9.5'', ''9.6'',

        ''10'', ''10.0'', ''10.2'', ''11'''
      id: version
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.ServerVersion
    - description: 'Enable ssl enforcement or not when connect to

        server. Possible values include: ''Enabled'', ''Disabled'''
      id: ssl_enforcement
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.SslEnforcementEnum
    - description: 'Enforce a minimal Tls version for the server.

        Possible values include: ''TLS1_0'', ''TLS1_1'', ''TLS1_2'',

        ''TLSEnforcementDisabled'''
      id: minimal_tls_version
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.MinimalTlsVersionEnum
    - description: 'Status showing whether the server

        enabled infrastructure encryption. Possible values include: ''Enabled'',

        ''Disabled'''
      id: infrastructure_encryption
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.InfrastructureEncryption
    - description: 'A state of a server that is visible to user.

        Possible values include: ''Ready'', ''Dropping'', ''Disabled'', ''Inaccessible'''
      id: user_visible_state
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.ServerState
    - description: 'The fully qualified domain name of a

        server.'
      id: fully_qualified_domain_name
      type:
      - str
    - description: 'Earliest restore point creation time

        (ISO8601 format)'
      id: earliest_restore_date
      type:
      - datetime
    - description: Storage profile of a server.
      id: storage_profile
      type:
      - azure.mgmt.rdbms.postgresql.models.StorageProfile
    - description: The replication role of the server.
      id: replication_role
      type:
      - str
    - description: The master server id of a replica server.
      id: master_server_id
      type:
      - str
    - description: 'The maximum number of replicas that a master

        server can have.'
      id: replica_capacity
      type:
      - int
    - description: 'Whether or not public network access is

        allowed for this server. Value is optional but if passed in, must be

        ''Enabled'' or ''Disabled''. Possible values include: ''Enabled'', ''Disabled'''
      id: public_network_access
      type:
      - str
      - azure.mgmt.rdbms.postgresql.models.PublicNetworkAccessEnum
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      id: id
      type:
      - str
    - description: The name of the resource
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex-

        Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: 'Status showing whether the server data encryption

        is enabled with customer-managed keys.'
      id: byok_enforcement
      type:
      - str
    - description: 'List of private endpoint connections

        on a server'
      id: private_endpoint_connections
      type:
      - list[azure.mgmt.rdbms.postgresql.models.ServerPrivateEndpointConnection]
  type: class
  uid: azure.mgmt.rdbms.postgresql.models.Server
references:
- fullName: list[azure.mgmt.rdbms.postgresql.models.ServerPrivateEndpointConnection]
  name: list[ServerPrivateEndpointConnection]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.rdbms.postgresql.models.ServerPrivateEndpointConnection
    name: ServerPrivateEndpointConnection
    uid: azure.mgmt.rdbms.postgresql.models.ServerPrivateEndpointConnection
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.rdbms.postgresql.models.ServerPrivateEndpointConnection]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
