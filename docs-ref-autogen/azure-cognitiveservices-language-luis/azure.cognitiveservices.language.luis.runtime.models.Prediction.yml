### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.cognitiveservices.language.luis.runtime.models.Prediction
  fullName: azure.cognitiveservices.language.luis.runtime.models.Prediction
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.cognitiveservices.language.luis.runtime.models
  name: Prediction
  summary: 'Represents the prediction of a query.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'Prediction(*, top_intent: str, intents, entities, altered_query: str
      = None, sentiment=None, **kwargs) -> None'
    parameters:
    - description: 'The query after spell checking. Only set if spell

        check was enabled and a spelling mistake was found.'
      id: altered_query
      type:
      - str
    - description: Required. The name of the top scoring intent.
      id: top_intent
      type:
      - str
    - description: 'Required. A dictionary representing the intents that

        fired.'
      id: intents
      type:
      - dict[str,azure.cognitiveservices.language.luis.runtime.models.Intent]
    - description: 'Required. A dictionary representing the entities that

        fired.'
      id: entities
      type:
      - dict[str, object]
    - description: The result of the sentiment analysis.
      id: sentiment
      type:
      - azure.cognitiveservices.language.luis.runtime.models.Sentiment
  type: class
  uid: azure.cognitiveservices.language.luis.runtime.models.Prediction
references:
- fullName: dict[str,azure.cognitiveservices.language.luis.runtime.models.Intent]
  name: dict[Intent]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,azure.cognitiveservices.language.luis.runtime.models.Intent
    name: Intent
    uid: str,azure.cognitiveservices.language.luis.runtime.models.Intent
  - fullName: ']'
    name: ']'
  uid: dict[str,azure.cognitiveservices.language.luis.runtime.models.Intent]
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
