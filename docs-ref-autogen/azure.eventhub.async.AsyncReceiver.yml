### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.async.AsyncReceiver.receive
  class: azure.eventhub.async.AsyncReceiver
  fullName: azure.eventhub.async.AsyncReceiver
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub.Receiver
  langs:
  - python
  module: azure.eventhub.async
  name: AsyncReceiver
  source:
    id: AsyncReceiver
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 232
  summary: 'Implements the async API of a Receiver.


    '
  syntax:
    content: AsyncReceiver(client, source, prefetch=300, epoch=None, loop=None)
  type: class
  uid: azure.eventhub.async.AsyncReceiver
- class: azure.eventhub.async.AsyncReceiver
  fullName: azure.eventhub.async.AsyncReceiver.receive
  langs:
  - python
  module: azure.eventhub.async
  name: receive
  source:
    id: receive
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 268
  summary: "Receive events asynchronously from the EventHub.\n:param max_batch_size:\
    \ Receive a batch of events. Batch size will\n\n\n   be up to the maximum specified,\
    \ but will return as soon as service\n   returns no new events. If combined with\
    \ a timeout and no events are\n   retrieve before the time, the result will be\
    \ empty. If no batch\n   size is supplied, the prefetch size will be the maximum.\n\
    \n"
  syntax:
    content: receive(max_batch_size=None, callback=None, timeout=None)
    parameters:
    - defaultValue: None
      description: 'A callback to be run for each received event. This must

        be a function that accepts a single argument - the event data. This callback

        will be run before the message is returned in the result generator.

        '
      id: callback
      type:
      - func[azure.eventhub.EventData]
    - defaultValue: None
      id: callback
    - defaultValue: None
      id: timeout
    return:
      description: 'list[~azure.eventhub.EventData]

        '
  type: method
  uid: azure.eventhub.async.AsyncReceiver.receive
references:
- fullName: azure.eventhub.async.AsyncReceiver.receive
  isExternal: false
  name: receive
  parent: azure.eventhub.async.AsyncReceiver
  uid: azure.eventhub.async.AsyncReceiver.receive
- fullName: func[azure.eventhub.EventData]
  name: func[EventData]
  spec.python:
  - fullName: func
    name: func
    uid: func
  - fullName: '['
    name: '['
  - fullName: azure.eventhub.EventData
    name: EventData
    uid: azure.eventhub.EventData
  - fullName: ']'
    name: ']'
  uid: func[azure.eventhub.EventData]
