### YamlMime:PythonClass
uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor
name: TaskOrchestrationExecutor
fullName: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor
module: azure.durable_functions.models.TaskOrchestrationExecutor
inheritances:
- builtins.object
summary: 'Manages the execution and replay of user-defined orchestrations.


  Initialize TaskOrchestrationExecutor.'
constructor:
  syntax: TaskOrchestrationExecutor()
methods:
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.execute
  name: execute
  summary: Execute an orchestration via its history to evaluate Tasks and replay events.
  signature: 'execute(context: DurableOrchestrationContext, history: List[HistoryEvent],
    fn) -> str'
  parameters:
  - name: context
    description: The user's orchestration context, to interact with the user code.
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.TaskOrchestrationExecutor.DurableOrchestrationContext>
  - name: history
    description: The orchestration history, to evaluate tasks and replay events.
    isRequired: true
    types:
    - <xref:List>[<xref:HistoryEvent>]
  - name: fn
    description: The user's orchestration function.
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.TaskOrchestrationExecutor.function>
  return:
    description: A JSON-formatted string of the user's orchestration state, payload
      for the extension.
    types:
    - <xref:str>
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.get_orchestrator_state_str
  name: get_orchestrator_state_str
  summary: Obtain a JSON-formatted string representing the orchestration's state.
  signature: get_orchestrator_state_str() -> str
  return:
    description: String represented orchestration's state, payload to the extension
    types:
    - <xref:str>
  exceptions:
  - type: Exception
    description: "When the orchestration's state represents an error. The exception's\n\
      \    message contains in it the string representation of the orchestration's\n\
      \    state"
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.initialize
  name: initialize
  summary: Initialize the TaskOrchestrationExecutor for a new orchestration invocation.
  signature: initialize()
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.is_task_completion_event
  name: is_task_completion_event
  summary: Determine if some event_type corresponds to a Task-resolution event.
  signature: 'is_task_completion_event(event_type: HistoryEventType) -> bool'
  parameters:
  - name: event_type
    description: The event_type to analyze.
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.TaskOrchestrationExecutor.HistoryEventType>
  return:
    description: True if the event corresponds to a Task being resolved. False otherwise.
    types:
    - <xref:bool>
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.process_event
  name: process_event
  summary: 'Evaluate a history event.


    This might result in updating some orchestration internal state deterministically,

    to evaluating some Task, or have no side-effects.'
  signature: 'process_event(event: HistoryEvent)'
  parameters:
  - name: event
    description: The history event to process
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.TaskOrchestrationExecutor.HistoryEvent>
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.resume_user_code
  name: resume_user_code
  summary: 'Attempt to continue executing user code.


    We can only continue executing if the active/current task has resolved to a value.'
  signature: resume_user_code()
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.set_task_value
  name: set_task_value
  summary: Set a running task to either a success or failed state, and sets its value.
  signature: 'set_task_value(event: HistoryEvent, is_success: bool, id_key: str)'
  parameters:
  - name: event
    description: The history event containing the value for the Task
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.TaskOrchestrationExecutor.HistoryEvent>
  - name: is_success
    description: Whether the Task succeeded or failed (throws exception)
    isRequired: true
    types:
    - <xref:bool>
  - name: id_key
    description: The attribute in the event object containing the ID of the Task to
      target
    isRequired: true
    types:
    - <xref:str>
attributes:
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.has_execution_completed
  name: has_execution_completed
  summary: 'Determine if the orchestration invocation is completed.


    An orchestration can complete either by returning,

    continuing-as-new, or through an exception.'
  return:
    description: Whether the orchestration invocation is completed.
    types:
    - <xref:bool>
- uid: azure.durable_functions.models.TaskOrchestrationExecutor.TaskOrchestrationExecutor.orchestration_invocation_succeeded
  name: orchestration_invocation_succeeded
  summary: Whether the orchestration returned or continued-as-new.
  return:
    description: Whether the orchestration returned or continued-as-new
    types:
    - <xref:bool>
