### YamlMime:PythonClass
uid: azure.durable_functions.models.Task.RetryAbleTask
name: RetryAbleTask
fullName: azure.durable_functions.models.Task.RetryAbleTask
module: azure.durable_functions.models.Task
inheritances:
- azure.durable_functions.models.Task.WhenAllTask
summary: 'A Task representing *with_retry* scenarios.


  It inherits from WhenAllTask because retryable scenarios are Tasks

  with equivalent to WhenAll Tasks with dynamically increasing lists

  of children. At every failure, we add a Timer child and a Task child

  to the list of pending tasks.'
constructor:
  syntax: 'RetryAbleTask(child: TaskBase, retry_options: RetryOptions, context)'
  parameters:
  - name: child
    isRequired: true
  - name: retry_options
    isRequired: true
  - name: context
    isRequired: true
methods:
- uid: azure.durable_functions.models.Task.RetryAbleTask.change_state
  name: change_state
  summary: 'Transition a running Task to a terminal state: success or failure.'
  signature: 'change_state(state: TaskState)'
  parameters:
  - name: state
    description: The terminal state to assign to this Task
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.Task.TaskState>
  exceptions:
  - type: Exception
    description: When the input state is RUNNING
- uid: azure.durable_functions.models.Task.RetryAbleTask.handle_completion
  name: handle_completion
  summary: Manage sub-task completion events.
  signature: 'handle_completion(child: TaskBase)'
  parameters:
  - name: child
    description: The sub-task that completed
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.Task.TaskBase>
  exceptions:
  - type: Exception
    description: "When the calling sub-task was not registered\n    with this Task's\
      \ pending sub-tasks."
- uid: azure.durable_functions.models.Task.RetryAbleTask.propagate
  name: propagate
  summary: Notify parent Task of this Task's state change.
  signature: propagate()
- uid: azure.durable_functions.models.Task.RetryAbleTask.set_is_played
  name: set_is_played
  summary: 'Set the is_played flag for the Task.


    Needed for updating the orchestrator''s is_replaying flag.'
  signature: 'set_is_played(is_played: bool)'
  parameters:
  - name: is_played
    description: Whether the latest event for this Task has been played before.
    isRequired: true
    types:
    - <xref:bool>
- uid: azure.durable_functions.models.Task.RetryAbleTask.set_value
  name: set_value
  summary: 'Set the value of this Task: either an exception of a result.'
  signature: 'set_value(is_error: bool, value: Any)'
  parameters:
  - name: is_error
    description: Whether the value represents an exception of a result.
    isRequired: true
    types:
    - <xref:bool>
  - name: value
    description: The value of this Task
    isRequired: true
    types:
    - <xref:typing.Any>
  exceptions:
  - type: Exception
    description: When the Task failed but its value was not an Exception
- uid: azure.durable_functions.models.Task.RetryAbleTask.try_set_value
  name: try_set_value
  summary: Transition a Retryable Task to a terminal state and set its value.
  signature: 'try_set_value(child: TaskBase)'
  parameters:
  - name: child
    description: A sub-task that just completed
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.Task.TaskBase>
attributes:
- uid: azure.durable_functions.models.Task.RetryAbleTask.id_
  name: id_
  summary: 'Obtain the task''s ID.


    Since this is an internal-only abstraction, the task ID is represented

    by the ID of its inner/wrapped task _plus_ a suffix: "_retryable_proxy"'
  return:
    description: '[description]'
    types:
    - '[<xref:type>]'
- uid: azure.durable_functions.models.Task.RetryAbleTask.is_completed
  name: is_completed
  summary: 'Get indicator of whether the task completed.


    Note that completion is not equivalent to success.'
