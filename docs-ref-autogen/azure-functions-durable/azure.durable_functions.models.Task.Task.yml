### YamlMime:PythonClass
uid: azure.durable_functions.models.Task.Task
name: Task
fullName: azure.durable_functions.models.Task.Task
module: azure.durable_functions.models.Task
inheritances:
- builtins.object
summary: 'Represents some pending action.


  Similar to a native JavaScript promise in

  that it acts as a placeholder for outstanding asynchronous work, but has

  a synchronous implementation and is specific to Durable Functions.


  Tasks are only returned to an orchestration function when a

  [[DurableOrchestrationContext]] operation is not called with *yield*. They

  are useful for parallelization and timeout operations in conjunction with

  Task.all and Task.any.'
constructor:
  syntax: Task(is_completed, is_faulted, action, result=None, timestamp=None, id_=None,
    exc=None, is_played=False)
attributes:
- uid: azure.durable_functions.models.Task.Task.action
  name: action
  summary: 'Get the scheduled action represented by the task.


    _Internal use only._'
- uid: azure.durable_functions.models.Task.Task.exception
  name: exception
  summary: 'Get the error thrown when attempting to perform the task''s action.


    If the Task has not yet completed or has completed successfully, *None*'
- uid: azure.durable_functions.models.Task.Task.id
  name: id
  summary: 'Get the ID number of the task.


    _Internal use only._'
- uid: azure.durable_functions.models.Task.Task.is_completed
  name: is_completed
  summary: 'Get indicator whether the task has completed.


    Note that completion is not equivalent to success.'
- uid: azure.durable_functions.models.Task.Task.is_faulted
  name: is_faulted
  summary: Get indicator whether the task faulted in some way due to error.
- uid: azure.durable_functions.models.Task.Task.result
  name: result
  summary: Get the result of the task, if completed. Otherwise *None*.
- uid: azure.durable_functions.models.Task.Task.timestamp
  name: timestamp
  summary: Get the timestamp of the task.
