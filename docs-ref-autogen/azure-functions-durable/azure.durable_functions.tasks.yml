### YamlMime:PythonPackage
uid: azure.durable_functions.tasks
name: tasks
fullName: azure.durable_functions.tasks
summary: Contains the definitions for the functions that enable scheduling of activities.
type: import
functions:
- uid: azure.durable_functions.tasks.call_activity_task
  name: call_activity_task
  summary: Determine the state of Scheduling an activity for execution.
  signature: 'call_activity_task(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    name: str, input_: Optional[Any] = None) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: state
    description: The list of history events to search to determine the current state
      of the activity.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: name
    description: The name of the activity function to schedule.
    isRequired: true
    types:
    - <xref:str>
  - name: input
    description: The JSON-serializable input to pass to the activity function.
    defaultValue: None
    types:
    - <xref:Any>
  return:
    description: A Durable Task that completes when the called activity function completes
      or fails.
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.call_activity_with_retry_task
  name: call_activity_with_retry_task
  summary: Determine the state of scheduling an activity for execution with retry
    options.
  signature: 'call_activity_with_retry_task(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    retry_options: azure.durable_functions.models.RetryOptions.RetryOptions, name:
    str, input_: Optional[Any] = None) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: state
    description: The list of history events to search to determine the current state
      of the activity.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: retry_options
    description: The retry options for the activity function.
    isRequired: true
    types:
    - <xref:azure.durable_functions.RetryOptions>
  - name: name
    description: The name of the activity function to call.
    isRequired: true
    types:
    - <xref:str>
  - name: input
    description: The JSON-serializable input to pass to the activity function.
    defaultValue: None
    types:
    - <xref:Any>
  return:
    description: 'A Durable Task that completes when the called activity function
      completes or fails

      completely.'
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.call_http
  name: call_http
  summary: Get task used to schedule a durable HTTP call to the specified endpoint.
  signature: 'call_http(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    method: str, uri: str, content: Optional[str] = None, headers: Optional[Dict[str,
    str]] = None, token_source: Optional[azure.durable_functions.models.TokenSource.TokenSource]
    = None) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: state
    description: 'The list of events that have been processed to determine the state
      of the task to be

      scheduled'
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: method
    description: The HTTP request method.
    isRequired: true
    types:
    - <xref:str>
  - name: uri
    description: The HTTP request uri.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The HTTP request content.
    defaultValue: None
    types:
    - <xref:str>
  - name: headers
    description: The HTTP request headers.
    defaultValue: None
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
  - name: token_source
    description: The source of OAuth token to add to the request.
    defaultValue: None
    types:
    - <xref:azure.durable_functions.models.TokenSource.TokenSource>
  return:
    description: The durable HTTP request to schedule.
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.call_sub_orchestrator_task
  name: call_sub_orchestrator_task
  summary: Determine the state of Scheduling a sub-orchestrator for execution.
  signature: 'call_sub_orchestrator_task(context, state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    name: str, input_: Optional[Any] = None, instance_id: Optional[str] = None) ->
    azure.durable_functions.models.Task.Task'
  parameters:
  - name: context
    description: A reference to the orchestration context.
    isRequired: true
    types:
    - <xref:<xref:'DurableOrchestrationContext':>>
  - name: state
    description: The list of history events to search to determine the current state
      of the activity.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: name
    description: The name of the activity function to schedule.
    isRequired: true
    types:
    - <xref:str>
  - name: input
    description: The JSON-serializable input to pass to the activity function. Defaults
      to None.
    defaultValue: None
    types:
    - <xref:Optional>[<xref:Any>]
  - name: instance_id
    description: The instance ID of the sub-orchestrator to call. Defaults to "".
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A Durable Task that completes when the called sub-orchestrator completes
      or fails.
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.call_sub_orchestrator_with_retry_task
  name: call_sub_orchestrator_with_retry_task
  summary: Determine the state of Scheduling a sub-orchestrator for execution, with
    retry options.
  signature: 'call_sub_orchestrator_with_retry_task(context, state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    retry_options: azure.durable_functions.models.RetryOptions.RetryOptions, name:
    str, input_: Optional[Any] = None, instance_id: Optional[str] = None) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: context
    description: A reference to the orchestration context.
    isRequired: true
    types:
    - <xref:<xref:'DurableOrchestrationContext':>>
  - name: state
    description: The list of history events to search to determine the current state
      of the activity.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: retry_options
    description: The settings for retrying this sub-orchestrator in case of a failure.
    isRequired: true
    types:
    - <xref:azure.durable_functions.RetryOptions>
  - name: name
    description: The name of the activity function to schedule.
    isRequired: true
    types:
    - <xref:str>
  - name: input
    description: The JSON-serializable input to pass to the activity function. Defaults
      to None.
    defaultValue: None
    types:
    - <xref:Optional>[<xref:Any>]
  - name: instance_id
    description: The instance ID of the sub-orchestrator to call. Defaults to "".
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A Durable Task that completes when the called sub-orchestrator completes
      or fails.
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.continue_as_new
  name: continue_as_new
  summary: Create a new continue as new action.
  signature: 'continue_as_new(context, input_: Optional[Any] = None)'
  parameters:
  - name: input
    description: The JSON-serializable input to pass to the activity function.
    isRequired: true
    types:
    - <xref:Any>
  - name: input_
    defaultValue: None
- uid: azure.durable_functions.tasks.create_timer_task
  name: create_timer_task
  summary: Durable Timers are used in orchestrator function to implement delays.
  signature: 'create_timer_task(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    fire_at: datetime.datetime) -> azure.durable_functions.tasks.timer_task.TimerTask'
  parameters:
  - name: state
    description: The list of history events to search to determine the current state
      of the activity
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: fire_at
    description: The time interval to fire the timer trigger
    isRequired: true
    types:
    - <xref:datetime>
  return:
    description: A Durable Timer Task that schedules the timer to wake up the activity
    types:
    - <xref:azure.durable_functions.tasks.timer_task.TimerTask>
- uid: azure.durable_functions.tasks.new_uuid
  name: new_uuid
  summary: "Create a new UUID that is safe for replay within an orchestration or operation.\n\
    \nThe default implementation of this method creates a name-based UUID\nusing the\
    \ algorithm from RFC 4122 \xA74.3. The name input used to generate\nthis value\
    \ is a combination of the orchestration instance ID and an\ninternally managed\
    \ sequence number."
  signature: 'new_uuid(context: DurableOrchestrationContext) -> str'
  parameters:
  - name: context
    description: 'Provides reference to the instance id, current_utc_datetime and
      a new_uuid_counter

      attribute that is combined together to form that name that is used for the V5
      UUID.'
    isRequired: true
    types:
    - <xref:azure.durable_functions.DurableOrchestrationContext>
  return:
    description: New UUID that is safe for replay within an orchestration or operation.
    types:
    - <xref:str>
- uid: azure.durable_functions.tasks.should_suspend
  name: should_suspend
  summary: Check the state of the result to determine if the orchestration should
    suspend.
  signature: should_suspend(partial_result) -> bool
  parameters:
  - name: partial_result
- uid: azure.durable_functions.tasks.task_all
  name: task_all
  summary: Determine the state of scheduling the activities for execution with retry
    options.
  signature: 'task_all(tasks: List[azure.durable_functions.models.Task.Task])'
  parameters:
  - name: tasks
    description: The tasks to evaluate their current state.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.Task.Task>]
  return:
    description: A Durable Task Set that reports the state of running all of the tasks
      within it.
    types:
    - <xref:azure.durable_functions.models.TaskSet.TaskSet>
- uid: azure.durable_functions.tasks.task_any
  name: task_any
  summary: Determine whether any of the given tasks is completed.
  signature: task_any(tasks)
  parameters:
  - name: tasks
    description: The tasks to evaluate their current state.
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.Task.Task>
  return:
    description: 'Returns a completed Durable Task Set if any of the tasks is completed.

      Returns a not completed Durable Task Set if none of the tasks are completed.

      Returns a faulted Taskset if all tasks are faulted'
    types:
    - <xref:azure.durable_functions.models.TaskSet.TaskSet>
- uid: azure.durable_functions.tasks.wait_for_external_event_task
  name: wait_for_external_event_task
  summary: Determine the state of a task that is waiting for an event to occur.
  signature: 'wait_for_external_event_task(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    name: str) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: state
    description: The list of history events to search to determine the current
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: of the task.
    isRequired: true
    types:
    - <xref:state>
  - name: name
    description: The event name of the event that the task is waiting for.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'Returns a completed task if the expected event was raised.

      Returns a not completed task if the expected event has not occurred yet.'
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.call_http
  name: call_http
  summary: Get task used to schedule a durable HTTP call to the specified endpoint.
  signature: 'call_http(state: List[azure.durable_functions.models.history.HistoryEvent.HistoryEvent],
    method: str, uri: str, content: Optional[str] = None, headers: Optional[Dict[str,
    str]] = None, token_source: Optional[azure.durable_functions.models.TokenSource.TokenSource]
    = None) -> azure.durable_functions.models.Task.Task'
  parameters:
  - name: state
    description: 'The list of events that have been processed to determine the state
      of the task to be

      scheduled'
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.history.HistoryEvent.HistoryEvent>]
  - name: method
    description: The HTTP request method.
    isRequired: true
    types:
    - <xref:str>
  - name: uri
    description: The HTTP request uri.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The HTTP request content.
    defaultValue: None
    types:
    - <xref:str>
  - name: headers
    description: The HTTP request headers.
    defaultValue: None
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
  - name: token_source
    description: The source of OAuth token to add to the request.
    defaultValue: None
    types:
    - <xref:azure.durable_functions.models.TokenSource.TokenSource>
  return:
    description: The durable HTTP request to schedule.
    types:
    - <xref:azure.durable_functions.models.Task.Task>
- uid: azure.durable_functions.tasks.continue_as_new
  name: continue_as_new
  summary: Create a new continue as new action.
  signature: 'continue_as_new(context, input_: Optional[Any] = None)'
  parameters:
  - name: input
    description: The JSON-serializable input to pass to the activity function.
    isRequired: true
    types:
    - <xref:Any>
  - name: input_
    defaultValue: None
- uid: azure.durable_functions.tasks.new_uuid
  name: new_uuid
  summary: "Create a new UUID that is safe for replay within an orchestration or operation.\n\
    \nThe default implementation of this method creates a name-based UUID\nusing the\
    \ algorithm from RFC 4122 \xA74.3. The name input used to generate\nthis value\
    \ is a combination of the orchestration instance ID and an\ninternally managed\
    \ sequence number."
  signature: 'new_uuid(context: DurableOrchestrationContext) -> str'
  parameters:
  - name: context
    description: 'Provides reference to the instance id, current_utc_datetime and
      a new_uuid_counter

      attribute that is combined together to form that name that is used for the V5
      UUID.'
    isRequired: true
    types:
    - <xref:azure.durable_functions.DurableOrchestrationContext>
  return:
    description: New UUID that is safe for replay within an orchestration or operation.
    types:
    - <xref:str>
- uid: azure.durable_functions.tasks.task_all
  name: task_all
  summary: Determine the state of scheduling the activities for execution with retry
    options.
  signature: 'task_all(tasks: List[azure.durable_functions.models.Task.Task])'
  parameters:
  - name: tasks
    description: The tasks to evaluate their current state.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.durable_functions.models.Task.Task>]
  return:
    description: A Durable Task Set that reports the state of running all of the tasks
      within it.
    types:
    - <xref:azure.durable_functions.models.TaskSet.TaskSet>
- uid: azure.durable_functions.tasks.task_any
  name: task_any
  summary: Determine whether any of the given tasks is completed.
  signature: task_any(tasks)
  parameters:
  - name: tasks
    description: The tasks to evaluate their current state.
    isRequired: true
    types:
    - <xref:azure.durable_functions.models.Task.Task>
  return:
    description: 'Returns a completed Durable Task Set if any of the tasks is completed.

      Returns a not completed Durable Task Set if none of the tasks are completed.

      Returns a faulted Taskset if all tasks are faulted'
    types:
    - <xref:azure.durable_functions.models.TaskSet.TaskSet>
modules:
- azure.durable_functions.tasks.call_http
- azure.durable_functions.tasks.continue_as_new
- azure.durable_functions.tasks.new_uuid
- azure.durable_functions.tasks.task_all
- azure.durable_functions.tasks.task_any
- azure.durable_functions.tasks.call_activity
- azure.durable_functions.tasks.call_activity_with_retry
- azure.durable_functions.tasks.call_http
- azure.durable_functions.tasks.call_suborchestrator
- azure.durable_functions.tasks.call_suborchestrator_with_retry
- azure.durable_functions.tasks.continue_as_new
- azure.durable_functions.tasks.create_timer
- azure.durable_functions.tasks.new_uuid
- azure.durable_functions.tasks.task_all
- azure.durable_functions.tasks.task_any
- azure.durable_functions.tasks.task_utilities
- azure.durable_functions.tasks.timer_task
- azure.durable_functions.tasks.wait_for_external_event
