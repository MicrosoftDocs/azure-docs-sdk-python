### YamlMime:PythonClass
uid: azure.durable_functions.orchestrator.Orchestrator
name: Orchestrator
fullName: azure.durable_functions.orchestrator.Orchestrator
module: azure.durable_functions.orchestrator
inheritances:
- builtins.object
summary: 'Durable Orchestration Class.


  Responsible for orchestrating the execution of the user defined generator

  function.'
constructor:
  syntax: 'Orchestrator(activity_func: Callable[[DurableOrchestrationContext], Generator[Any,
    Any, Any]])'
  parameters:
  - name: activity_func
methods:
- uid: azure.durable_functions.orchestrator.Orchestrator.create
  name: create
  summary: Create an instance of the orchestration class.
  signature: 'create(fn: Callable[[DurableOrchestrationContext], Generator[Any, Any,
    Any]]) -> Callable[[Any], str]'
  parameters:
  - name: fn
    description: Generator function that needs orchestration
    isRequired: true
    types:
    - <xref:azure.durable_functions.orchestrator.Callable>[[<xref:azure.durable_functions.DurableOrchestrationContext>],
      <xref:azure.durable_functions.orchestrator.Iterator>[<xref:azure.durable_functions.orchestrator.Any>]]
  return:
    description: Handle function of the newly created orchestration client
    types:
    - <xref:azure.durable_functions.orchestrator.Callable>[[<xref:azure.durable_functions.orchestrator.Any>],
      <xref:azure.durable_functions.orchestrator.str>]
- uid: azure.durable_functions.orchestrator.Orchestrator.handle
  name: handle
  summary: 'Handle the orchestration of the user defined generator function.


    Called each time the durable extension executes an activity and needs

    the client to handle the result.


    the durable extension.

    :return: the resulting orchestration state, with instructions back to

    the durable extension.'
  signature: 'handle(context: DurableOrchestrationContext)'
  parameters:
  - name: context
    description: the context of what has been executed by
    isRequired: true
