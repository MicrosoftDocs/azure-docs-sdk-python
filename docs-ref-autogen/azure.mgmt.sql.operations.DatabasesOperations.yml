### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_rule
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_geo_backup_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_long_term_retention_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  - azure.mgmt.sql.operations.DatabasesOperations.delete
  - azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.export
  - azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  - azure.mgmt.sql.operations.DatabasesOperations.get
  - azure.mgmt.sql.operations.DatabasesOperations.get_backup_long_term_retention_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_data_masking_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_geo_backup_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  - azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  - azure.mgmt.sql.operations.DatabasesOperations.import_method
  - azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  - azure.mgmt.sql.operations.DatabasesOperations.list_data_masking_rules
  - azure.mgmt.sql.operations.DatabasesOperations.list_geo_backup_policies
  - azure.mgmt.sql.operations.DatabasesOperations.list_metric_definitions
  - azure.mgmt.sql.operations.DatabasesOperations.list_metrics
  - azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  - azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  - azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  - azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  - azure.mgmt.sql.operations.DatabasesOperations.list_usages
  - azure.mgmt.sql.operations.DatabasesOperations.pause
  - azure.mgmt.sql.operations.DatabasesOperations.resume
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: DatabasesOperations
  source:
    id: DatabasesOperations
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 20
  summary: 'DatabasesOperations operations.





































    '
  syntax:
    content: DatabasesOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An objec model deserializer.

        '
      id: deserializer
    variables:
    - description: 'The name of the database for which the data masking rule applies.
        Constant value: "Default".

        '
      id: data_masking_policy_name
    - description: 'The name of the geo backup policy. Constant value: "Default".

        '
      id: geo_backup_policy_name
    - description: 'The name of the operation to perform. Constant value: "import".

        '
      id: extension_name
    - description: 'The name of the security alert policy. Constant value: "default".

        '
      id: security_alert_policy_name
    - description: 'The name of the backup long term retention policy. Constant value:
        "Default".

        '
      id: backup_long_term_retention_policy_name
    - description: 'The name of the blob auditing policy. Constant value: "default".

        '
      id: blob_auditing_policy_name
  type: class
  uid: azure.mgmt.sql.operations.DatabasesOperations
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_import_operation
  source:
    id: create_import_operation
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 766
  summary: 'Creates an import operation that imports a bacpac into an existing

    database. The existing database must be empty.

    '
  syntax:
    content: create_import_operation(resource_group_name, server_name, database_name,
      parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to import into

        '
      id: database_name
      type:
      - str
    - description: 'The required parameters for importing a Bacpac into

        a database.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.ImportExtensionRequest
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns @azure.mgmt.sql.models.ImportExportResponse'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update
  source:
    id: create_or_update
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1681
  summary: 'Creates a new database or updates an existing database. Location is a

    required property in the request body, and it must be the same as the

    location of the SQL server.

    '
  syntax:
    content: create_or_update(resource_group_name, server_name, database_name, parameters,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to be operated on

        (updated or created).

        '
      id: database_name
      type:
      - str
    - description: 'The required parameters for creating or updating a

        database.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.Database
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns @azure.mgmt.sql.models.Database'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_blob_auditing_policy
  source:
    id: create_or_update_blob_auditing_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2857
  summary: 'Creates or updates a database''s blob auditing policy.

    '
  syntax:
    content: create_or_update_blob_auditing_policy(resource_group_name, server_name,
      database_name, parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which the blob

        auditing policy will be defined.

        '
      id: database_name
      type:
      - str
    - description: 'The database blob auditing policy.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.DatabaseBlobAuditingPolicy
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabaseBlobAuditingPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_data_masking_policy
  source:
    id: create_or_update_data_masking_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 126
  summary: 'Creates or updates a database data masking policy.

    '
  syntax:
    content: create_or_update_data_masking_policy(resource_group_name, server_name,
      database_name, data_masking_state, exempt_principals=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - description: 'The state of the data masking policy.

        Possible values include: ''Disabled'', ''Enabled''

        '
      id: data_masking_state
      type:
      - 'str or @azure.mgmt.sql.models.DataMaskingState

        '
    - defaultValue: None
      description: 'The list of the exempt principals. Specifies

        the semicolon-separated list of database users for which the data

        masking policy does not apply. The specified users receive data

        results without masking for all of the database queries.

        '
      id: exempt_principals
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DataMaskingPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_rule
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_data_masking_rule
  source:
    id: create_or_update_data_masking_rule
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 281
  summary: 'Creates or updates a database data masking rule.

    '
  syntax:
    content: create_or_update_data_masking_rule(resource_group_name, server_name,
      database_name, data_masking_rule_name, parameters, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - description: 'The name of the data masking rule.

        '
      id: data_masking_rule_name
      type:
      - str
    - description: 'The required parameters for creating or updating a

        data masking rule.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.DataMaskingRule
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DataMaskingRule
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_rule
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_geo_backup_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_geo_backup_policy
  source:
    id: create_or_update_geo_backup_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 441
  summary: 'Updates a database geo backup policy.

    '
  syntax:
    content: create_or_update_geo_backup_policy(resource_group_name, server_name,
      database_name, state, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - description: 'The state of the geo backup policy. Possible values

        include: ''Disabled'', ''Enabled''

        '
      id: state
      type:
      - 'str or @azure.mgmt.sql.models.GeoBackupPolicyState

        '
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.GeoBackupPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_geo_backup_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_long_term_retention_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_long_term_retention_policy
  source:
    id: create_or_update_long_term_retention_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2602
  summary: 'Creates or updates a database backup long term retention policy.

    '
  syntax:
    content: create_or_update_long_term_retention_policy(resource_group_name, server_name,
      database_name, state, recovery_services_backup_policy_resource_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database

        '
      id: database_name
      type:
      - str
    - description: 'The status of the backup long term retention policy.

        Possible values include: ''Disabled'', ''Enabled''

        '
      id: state
      type:
      - 'str or @azure.mgmt.sql.models.BackupLongTermRetentionPolicyState

        '
    - description: 'The azure recovery

        services backup protection policy resource id

        '
      id: recovery_services_backup_policy_resource_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns @azure.mgmt.sql.models.BackupLongTermRetentionPolicy'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_long_term_retention_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_threat_detection_policy
  source:
    id: create_or_update_threat_detection_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2452
  summary: 'Creates or updates a database''s threat detection policy.

    '
  syntax:
    content: create_or_update_threat_detection_policy(resource_group_name, server_name,
      database_name, parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which database

        Threat Detection policy is defined.

        '
      id: database_name
      type:
      - str
    - description: 'The database Threat Detection policy.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.DatabaseSecurityAlertPolicy
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabaseSecurityAlertPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_transparent_data_encryption_configuration
  source:
    id: create_or_update_transparent_data_encryption_configuration
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2151
  summary: 'Creates or updates a database''s transparent data encryption

    configuration.

    '
  syntax:
    content: create_or_update_transparent_data_encryption_configuration(resource_group_name,
      server_name, database_name, status=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which setting the

        transparent data encryption applies.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'The status of the database transparent data encryption.

        Possible values include: ''Enabled'', ''Disabled''

        '
      id: status
      type:
      - 'str or @azure.mgmt.sql.models.TransparentDataEncryptionStatus

        '
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.TransparentDataEncryption
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.delete
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1785
  summary: 'Deletes a database.

    '
  syntax:
    content: delete(resource_group_name, server_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to be deleted.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: delete_replication_link
  source:
    id: delete_replication_link
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1122
  summary: 'Deletes a database replication link. Cannot be done during failover.

    '
  syntax:
    content: delete_replication_link(resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database that has the

        replication link to be dropped.

        '
      id: database_name
      type:
      - str
    - description: 'The ID of the replication link to be deleted.

        '
      id: link_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.export
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: export
  source:
    id: export
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 868
  summary: 'Exports a database to a bacpac.

    '
  syntax:
    content: export(resource_group_name, server_name, database_name, parameters, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to be exported.

        '
      id: database_name
      type:
      - str
    - description: 'The required parameters for exporting a database.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.ExportRequest
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns @azure.mgmt.sql.models.ImportExportResponse'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.export
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: failover_replication_link
  source:
    id: failover_replication_link
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1259
  summary: 'Sets which replica database is primary by failing over from the current

    primary replica database.

    '
  syntax:
    content: failover_replication_link(resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database that has the

        replication link to be failed over.

        '
      id: database_name
      type:
      - str
    - description: 'The ID of the replication link to be failed over.

        '
      id: link_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns None'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: failover_replication_link_allow_data_loss
  source:
    id: failover_replication_link_allow_data_loss
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1348
  summary: 'Sets which replica database is primary by failing over from the current

    primary replica database. This operation might result in data loss.

    '
  syntax:
    content: failover_replication_link_allow_data_loss(resource_group_name, server_name,
      database_name, link_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database that has the

        replication link to be failed over.

        '
      id: database_name
      type:
      - str
    - description: 'The ID of the replication link to be failed over.

        '
      id: link_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns None'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get
  source:
    id: get
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1846
  summary: 'Gets a database.

    '
  syntax:
    content: get(resource_group_name, server_name, database_name, expand=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to be retrieved.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'A comma separated list of child objects to expand in

        the response. Possible properties: serviceTierAdvisors,

        transparentDataEncryption.

        '
      id: expand
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.Database
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_backup_long_term_retention_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_backup_long_term_retention_policy
  source:
    id: get_backup_long_term_retention_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2532
  summary: 'Returns a database backup long term retention policy.

    '
  syntax:
    content: get_backup_long_term_retention_policy(resource_group_name, server_name,
      database_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.BackupLongTermRetentionPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_backup_long_term_retention_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_blob_auditing_policy
  source:
    id: get_blob_auditing_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2786
  summary: 'Gets a database''s blob auditing policy.

    '
  syntax:
    content: get_blob_auditing_policy(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which the blob

        audit policy is defined.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabaseBlobAuditingPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_data_masking_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_data_masking_policy
  source:
    id: get_data_masking_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 211
  summary: 'Gets a database data masking policy.

    '
  syntax:
    content: get_data_masking_policy(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DataMaskingPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_data_masking_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_geo_backup_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_geo_backup_policy
  source:
    id: get_geo_backup_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 523
  summary: 'Gets a geo backup policy.

    '
  syntax:
    content: get_geo_backup_policy(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.GeoBackupPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_geo_backup_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_replication_link
  source:
    id: get_replication_link
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1187
  summary: 'Gets a database replication link.

    '
  syntax:
    content: get_replication_link(resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to get the link for.

        '
      id: database_name
      type:
      - str
    - description: 'The replication link ID to be retrieved.

        '
      id: link_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.ReplicationLink
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_service_tier_advisor
  source:
    id: get_service_tier_advisor
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2003
  summary: 'Gets a service tier advisor.

    '
  syntax:
    content: get_service_tier_advisor(resource_group_name, server_name, database_name,
      service_tier_advisor_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of database.

        '
      id: database_name
      type:
      - str
    - description: 'The name of service tier advisor.

        '
      id: service_tier_advisor_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.ServiceTierAdvisor
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_threat_detection_policy
  source:
    id: get_threat_detection_policy
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2381
  summary: 'Gets a database''s threat detection policy.

    '
  syntax:
    content: get_threat_detection_policy(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which database

        Threat Detection policy is defined.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabaseSecurityAlertPolicy
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_transparent_data_encryption_configuration
  source:
    id: get_transparent_data_encryption_configuration
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2234
  summary: 'Gets a database''s transparent data encryption configuration.

    '
  syntax:
    content: get_transparent_data_encryption_configuration(resource_group_name, server_name,
      database_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which the

        transparent data encryption applies.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.TransparentDataEncryption
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.import_method
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: import_method
  source:
    id: import_method
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 669
  summary: 'Imports a bacpac into a new database. .

    '
  syntax:
    content: import_method(resource_group_name, server_name, parameters, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The required parameters for importing a Bacpac into

        a database.

        '
      id: parameters
      type:
      - azure.mgmt.sql.models.ImportRequest
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns @azure.mgmt.sql.models.ImportExportResponse'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.import_method
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_by_server
  source:
    id: list_by_server
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1920
  summary: 'Returns a list of databases in a server.

    '
  syntax:
    content: list_by_server(resource_group_name, server_name, expand=None, filter=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - defaultValue: None
      description: 'A comma separated list of child objects to expand in

        the response. Possible properties: serviceTierAdvisors,

        transparentDataEncryption.

        '
      id: expand
      type:
      - str
    - defaultValue: None
      description: 'An OData filter expression that describes a subset of

        databases to return.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabasePaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_data_masking_rules
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_data_masking_rules
  source:
    id: list_data_masking_rules
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 364
  summary: 'Gets a list of database data masking rules.

    '
  syntax:
    content: list_data_masking_rules(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DataMaskingRulePaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_data_masking_rules
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_geo_backup_policies
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_geo_backup_policies
  source:
    id: list_geo_backup_policies
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 593
  summary: 'Returns a list of geo backup policies.

    '
  syntax:
    content: list_geo_backup_policies(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.GeoBackupPolicyPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_geo_backup_policies
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_metric_definitions
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_metric_definitions
  source:
    id: list_metric_definitions
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1046
  summary: 'Returns database metric definitions.

    '
  syntax:
    content: list_metric_definitions(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.MetricDefinitionPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_metric_definitions
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_metrics
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_metrics
  source:
    id: list_metrics
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 967
  summary: 'Returns database metrics.

    '
  syntax:
    content: list_metrics(resource_group_name, server_name, database_name, filter,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - description: 'An OData filter expression that describes a subset of

        metrics to return.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.MetricPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_metrics
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_replication_links
  source:
    id: list_replication_links
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1437
  summary: 'Lists a database''s replication links.

    '
  syntax:
    content: list_replication_links(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to retrieve links for.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.ReplicationLinkPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_restore_points
  source:
    id: list_restore_points
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 49
  summary: 'Gets a list of database restore points.

    '
  syntax:
    content: list_restore_points(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database to get available

        restore points.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.RestorePointPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_service_tier_advisors
  source:
    id: list_service_tier_advisors
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2075
  summary: 'Returns service tier advisors for specified database.

    '
  syntax:
    content: list_service_tier_advisors(resource_group_name, server_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.ServiceTierAdvisorPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_transparent_data_encryption_activity
  source:
    id: list_transparent_data_encryption_activity
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2304
  summary: 'Returns a database''s transparent data encryption operation result.

    '
  syntax:
    content: list_transparent_data_encryption_activity(resource_group_name, server_name,
      database_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database for which the

        transparent data encryption applies.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.TransparentDataEncryptionActivityPaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_usages
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_usages
  source:
    id: list_usages
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 2710
  summary: 'Returns database usages.

    '
  syntax:
    content: list_usages(resource_group_name, server_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the database.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.sql.models.DatabaseUsagePaged
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_usages
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.pause
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: pause
  source:
    id: pause
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1513
  summary: 'Pauses a data warehouse.

    '
  syntax:
    content: pause(resource_group_name, server_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the data warehouse to pause.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns None'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.pause
- class: azure.mgmt.sql.operations.DatabasesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.sql.operations.DatabasesOperations.resume
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: resume
  source:
    id: resume
    path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: azure-mgmt-sql\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1597
  summary: 'Resumes a data warehouse.

    '
  syntax:
    content: resume(resource_group_name, server_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains the resource. You can obtain this value from the Azure

        Resource Manager API or the portal.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the server.

        '
      id: server_name
      type:
      - str
    - description: 'The name of the data warehouse to resume.

        '
      id: database_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns None'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.sql.operations.DatabasesOperations.resume
references:
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  isExternal: false
  name: create_import_operation
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  isExternal: false
  name: create_or_update
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  isExternal: false
  name: create_or_update_blob_auditing_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_policy
  isExternal: false
  name: create_or_update_data_masking_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_rule
  isExternal: false
  name: create_or_update_data_masking_rule
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_data_masking_rule
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_geo_backup_policy
  isExternal: false
  name: create_or_update_geo_backup_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_geo_backup_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_long_term_retention_policy
  isExternal: false
  name: create_or_update_long_term_retention_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_long_term_retention_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  isExternal: false
  name: create_or_update_threat_detection_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  isExternal: false
  name: create_or_update_transparent_data_encryption_configuration
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
- fullName: azure.mgmt.sql.operations.DatabasesOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete
- fullName: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  isExternal: false
  name: delete_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.export
  isExternal: false
  name: export
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.export
- fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  isExternal: false
  name: failover_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  isExternal: false
  name: failover_replication_link_allow_data_loss
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_backup_long_term_retention_policy
  isExternal: false
  name: get_backup_long_term_retention_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_backup_long_term_retention_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  isExternal: false
  name: get_blob_auditing_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_data_masking_policy
  isExternal: false
  name: get_data_masking_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_data_masking_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_geo_backup_policy
  isExternal: false
  name: get_geo_backup_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_geo_backup_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  isExternal: false
  name: get_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  isExternal: false
  name: get_service_tier_advisor
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  isExternal: false
  name: get_threat_detection_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  isExternal: false
  name: get_transparent_data_encryption_configuration
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
- fullName: azure.mgmt.sql.operations.DatabasesOperations.import_method
  isExternal: false
  name: import_method
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.import_method
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  isExternal: false
  name: list_by_server
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_data_masking_rules
  isExternal: false
  name: list_data_masking_rules
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_data_masking_rules
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_geo_backup_policies
  isExternal: false
  name: list_geo_backup_policies
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_geo_backup_policies
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_metric_definitions
  isExternal: false
  name: list_metric_definitions
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_metric_definitions
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_metrics
  isExternal: false
  name: list_metrics
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_metrics
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  isExternal: false
  name: list_replication_links
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  isExternal: false
  name: list_restore_points
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  isExternal: false
  name: list_service_tier_advisors
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  isExternal: false
  name: list_transparent_data_encryption_activity
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_usages
  isExternal: false
  name: list_usages
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_usages
- fullName: azure.mgmt.sql.operations.DatabasesOperations.pause
  isExternal: false
  name: pause
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.pause
- fullName: azure.mgmt.sql.operations.DatabasesOperations.resume
  isExternal: false
  name: resume
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.resume
