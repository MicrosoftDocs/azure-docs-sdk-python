### YamlMime:PythonModule
uid: azure.mgmt.core.tools
name: tools
fullName: azure.mgmt.core.tools
functions:
- uid: azure.mgmt.core.tools.is_valid_resource_id
  name: is_valid_resource_id
  summary: Validates the given resource id.
  signature: is_valid_resource_id(rid, exception_type=None)
  parameters:
  - name: rid
    description: The resource id being validated.
    isRequired: true
    types:
    - <xref:str>
  - name: exception_type
    description: Raises this Exception if invalid.
    defaultValue: None
    types:
    - <xref:azure.mgmt.core.tools.Exception>
  return:
    description: A boolean describing whether the id is valid.
    types:
    - <xref:bool>
- uid: azure.mgmt.core.tools.is_valid_resource_name
  name: is_valid_resource_name
  summary: Validates the given resource name to ARM guidelines, individual services
    may be more restrictive.
  signature: is_valid_resource_name(rname, exception_type=None)
  parameters:
  - name: rname
    description: The resource name being validated.
    isRequired: true
    types:
    - <xref:str>
  - name: exception_type
    description: Raises this Exception if invalid.
    defaultValue: None
    types:
    - <xref:azure.mgmt.core.tools.Exception>
  return:
    description: A boolean describing whether the name is valid.
    types:
    - <xref:bool>
- uid: azure.mgmt.core.tools.parse_resource_id
  name: parse_resource_id
  summary: 'Parses a resource_id into its various parts.


    Returns a dictionary with a single key-value pair, ''name'': rid, if invalid resource
    id.'
  signature: parse_resource_id(rid)
  parameters:
  - name: rid
    description: The resource id being parsed
    isRequired: true
    types:
    - <xref:str>
  return:
    description: "A dictionary with with following key/value pairs (if found):\n\n\
      * subscription:            Subscription id \n\n* resource_group:          Name\
      \ of resource group \n\n* namespace:               Namespace for the resource\
      \ provider (i.e. Microsoft.Compute) \n\n* type:                    Type of the\
      \ root resource (i.e. virtualMachines) \n\n* name:                    Name of\
      \ the root resource \n\n* child_namespace_{level}: Namespace for the child resource\
      \ of that level \n\n* child_type_{level}:      Type of the child resource of\
      \ that level \n\n* child_name_{level}:      Name of the child resource of that\
      \ level \n\n* last_child_num:          Level of the last child \n\n* resource_parent:\
      \         Computed parent in the following pattern: providers/{namespace}  \
      \      /{parent}/{type}/{name} \n\n* resource_namespace:      Same as namespace.\
      \ Note that this may be different than the         target resource's namespace.\
      \ \n\n* resource_type:           Type of the target resource (not the parent)\
      \ \n\n* resource_name:           Name of the target resource (not the parent)"
    types:
    - <xref:dict>[<xref:str,str>]
- uid: azure.mgmt.core.tools.resource_id
  name: resource_id
  summary: 'Create a valid resource id string from the given parts.


    This method builds the resource id from the left until the next required id parameter

    to be appended is not found. It then returns the built up id.'
  signature: resource_id(**kwargs)
  parameters:
  - name: kwargs
    description: "The keyword arguments that will make up the id.\n\nThe method accepts\
      \ the following keyword arguments:\n   * subscription (required): Subscription\
      \ id \n\n   * resource_group:          Name of resource group \n\n   * namespace:\
      \               Namespace for the resource provider (i.e. Microsoft.Compute)\
      \ \n\n   * type:                    Type of the resource (i.e. virtualMachines)\
      \ \n\n   * name:                    Name of the resource (or parent if child_name\
      \ is also             specified) \n\n   * child_namespace_{level}: Namespace\
      \ for the child resource of that level (optional) \n\n   * child_type_{level}:\
      \      Type of the child resource of that level \n\n   * child_name_{level}:\
      \      Name of the child resource of that level"
    isRequired: true
    types:
    - <xref:dict>
  return:
    description: A resource id built from the given arguments.
    types:
    - <xref:str>
