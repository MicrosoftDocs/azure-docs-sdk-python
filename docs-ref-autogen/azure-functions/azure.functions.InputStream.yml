### YamlMime:PythonClass
uid: azure.functions.InputStream
name: InputStream
fullName: azure.functions.InputStream
module: azure.functions
inheritances:
- io.BufferedIOBase
- abc.ABC
summary: File-like object representing an input blob.
constructor:
  syntax: InputStream()
methods:
- uid: azure.functions.InputStream.close
  name: close
  summary: 'Flush and close the IO object.


    This method has no effect if the file is already closed.'
  signature: close()
- uid: azure.functions.InputStream.detach
  name: detach
  summary: 'Disconnect this buffer from its underlying raw stream and return it.


    After the raw stream has been detached, the buffer is in an unusable

    state.'
  signature: detach()
- uid: azure.functions.InputStream.fileno
  name: fileno
  summary: 'Returns underlying file descriptor if one exists.


    OSError is raised if the IO object does not use a file descriptor.'
  signature: fileno()
- uid: azure.functions.InputStream.flush
  name: flush
  summary: 'Flush write buffers, if applicable.


    This is not implemented for read-only and non-blocking streams.'
  signature: flush()
- uid: azure.functions.InputStream.isatty
  name: isatty
  summary: 'Return whether this is an ''interactive'' stream.


    Return False if it can''t be determined.'
  signature: isatty()
- uid: azure.functions.InputStream.read
  name: read
  summary: Return and read up to *size* bytes.
  signature: abstract read(size=-1) -> bytes
  parameters:
  - name: size
    description: 'The number of bytes to read.  If the argument is omitted,

      `None`, or negative, data is read and returned until

      EOF is reached.'
    defaultValue: '-1'
    types:
    - <xref:int>
  return:
    description: Bytes read from the input stream.
- uid: azure.functions.InputStream.read1
  name: read1
  summary: 'Read and return up to n bytes, with at most one read() call

    to the underlying raw stream. A short result does not imply

    that EOF is imminent.


    Returns an empty bytes object on EOF.'
  signature: read1()
- uid: azure.functions.InputStream.readable
  name: readable
  summary: 'Return whether object was opened for reading.


    If False, read() will raise OSError.'
  signature: readable()
- uid: azure.functions.InputStream.readinto
  name: readinto
  signature: readinto(buffer, /)
  positionalOnlyParameters:
  - name: buffer
    isRequired: true
- uid: azure.functions.InputStream.readinto1
  name: readinto1
  signature: readinto1(buffer, /)
  positionalOnlyParameters:
  - name: buffer
    isRequired: true
- uid: azure.functions.InputStream.readline
  name: readline
  summary: 'Read and return a line from the stream.


    If size is specified, at most size bytes will be read.


    The line terminator is always b''n'' for binary files; for text

    files, the newlines argument to open can be used to select the line

    terminator(s) recognized.'
  signature: readline(size=-1, /)
  positionalOnlyParameters:
  - name: size
    defaultValue: '-1'
- uid: azure.functions.InputStream.readlines
  name: readlines
  summary: 'Return a list of lines from the stream.


    hint can be specified to control the number of lines read: no more

    lines will be read if the total size (in bytes/characters) of all

    lines so far exceeds hint.'
  signature: readlines(hint=-1, /)
  positionalOnlyParameters:
  - name: hint
    defaultValue: '-1'
- uid: azure.functions.InputStream.seek
  name: seek
  summary: "Change the stream position to the given byte offset.\n\n   offset\n  \
    \    The stream position, relative to 'whence'.\n\n   whence\n      The relative\
    \ position to seek from.\n\nThe offset is interpreted relative to the position\
    \ indicated by whence.\nValues for whence are:\n\n* os.SEEK_SET or 0 \u2013 start\
    \ of stream (the default); offset should be zero or positive \n\n* os.SEEK_CUR\
    \ or 1 \u2013 current stream position; offset may be negative \n\n* os.SEEK_END\
    \ or 2 \u2013 end of stream; offset is usually negative \n\nReturn the new absolute\
    \ position."
  signature: seek(offset, whence=0, /)
  positionalOnlyParameters:
  - name: offset
    isRequired: true
  - name: whence
    defaultValue: '0'
- uid: azure.functions.InputStream.seekable
  name: seekable
  summary: 'Return whether object supports random access.


    If False, seek(), tell() and truncate() will raise OSError.

    This method may need to do a test seek().'
  signature: seekable()
- uid: azure.functions.InputStream.tell
  name: tell
  summary: Return current stream position.
  signature: tell()
- uid: azure.functions.InputStream.truncate
  name: truncate
  summary: 'Truncate file to size bytes.


    File pointer is left unchanged.  Size defaults to the current IO

    position as reported by tell().  Returns the new size.'
  signature: truncate()
- uid: azure.functions.InputStream.writable
  name: writable
  summary: 'Return whether object was opened for writing.


    If False, write() will raise OSError.'
  signature: writable()
- uid: azure.functions.InputStream.write
  name: write
  summary: 'Write the given buffer to the IO stream.


    Returns the number of bytes written, which is always the length of b

    in bytes.


    Raises BlockingIOError if the buffer is full and the

    underlying raw stream cannot accept more data at the moment.'
  signature: write()
- uid: azure.functions.InputStream.writelines
  name: writelines
  summary: 'Write a list of lines to stream.


    Line separators are not added, so it is usual for each of the

    lines provided to have a line separator at the end.'
  signature: writelines(lines, /)
  positionalOnlyParameters:
  - name: lines
    isRequired: true
attributes:
- uid: azure.functions.InputStream.closed
  name: closed
- uid: azure.functions.InputStream.length
  name: length
- uid: azure.functions.InputStream.name
  name: name
- uid: azure.functions.InputStream.uri
  name: uri
