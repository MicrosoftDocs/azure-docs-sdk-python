### YamlMime:PythonClass
uid: azure.functions.FunctionRegister
name: FunctionRegister
fullName: azure.functions.FunctionRegister
module: azure.functions
inheritances:
- azure.functions.decorators.function_app.DecoratorApi
- azure.functions.decorators.function_app.HttpFunctionsAuthLevelMixin
- abc.ABC
summary: 'Interface for declaring top level function app class which will

  be directly indexed by Python Function runtime.


  on the request in order to invoke the function.

  :param args: Variable length argument list.

  :param kwargs: Arbitrary keyword arguments.'
constructor:
  syntax: 'FunctionRegister(auth_level: AuthLevel | str, *args, **kwargs)'
  parameters:
  - name: auth_level
    description: Determines what keys, if any, need to be present
    isRequired: true
methods:
- uid: azure.functions.FunctionRegister.function_name
  name: function_name
  summary: 'Optional: Sets name of the <xref:azure.functions.Function> object. If
    not set,

    it will default to the name of the method name.


    additional setting fields

    :return: Decorator function.'
  signature: 'function_name(name: str, setting_extra_fields: Dict[str, Any] | None
    = None) -> Callable[[...], Any]'
  parameters:
  - name: name
    description: Name of the function.
    isRequired: true
  - name: setting_extra_fields
    description: Keyword arguments for specifying
    defaultValue: None
- uid: azure.functions.FunctionRegister.get_functions
  name: get_functions
  summary: Get the function objects in the function app.
  signature: get_functions() -> List[Function]
  return:
    description: List of functions in the function app.
- uid: azure.functions.FunctionRegister.http_type
  name: http_type
  summary: Set http type of the <xref:azure.functions.Function> object.
  signature: 'http_type(http_type: str) -> Callable[[...], Any]'
  parameters:
  - name: http_type
    description: Http type of the function.
    isRequired: true
  return:
    description: Decorator function.
- uid: azure.functions.FunctionRegister.register_blueprint
  name: register_blueprint
  summary: 'Register a list of functions in the function app.


    which contains a list of functions.'
  signature: 'register_blueprint(function_container: DecoratorApi) -> None'
  parameters:
  - name: function_container
    description: Instance extending <xref:azure.functions.DecoratorApi>
    isRequired: true
- uid: azure.functions.FunctionRegister.register_functions
  name: register_functions
  summary: 'Register a list of functions in the function app.


    which contains a list of functions.'
  signature: 'register_functions(function_container: DecoratorApi) -> None'
  parameters:
  - name: function_container
    description: Instance extending <xref:azure.functions.DecoratorApi>
    isRequired: true
- uid: azure.functions.FunctionRegister.validate_function_names
  name: validate_function_names
  summary: 'The functions_bindings dict contains the function name and

    its bindings for all functions in an app. If a previous function

    has the same name, indexing will fail here.'
  signature: 'validate_function_names(functions: List[Function])'
  parameters:
  - name: functions
    isRequired: true
attributes:
- uid: azure.functions.FunctionRegister.app_script_file
  name: app_script_file
  summary: "Name of function app script file in which all the functions\n   are defined.\n\
    \n   Script file defined here is for placeholder purpose, please refer to\n  \
    \ worker defined script file path as the single point of truth."
  return:
    description: Script file name.
- uid: azure.functions.FunctionRegister.auth_level
  name: auth_level
  summary: "Authorization level of the function app. Will be applied to the http\n\
    \   trigger functions which do not have authorization level specified."
  return:
    description: Authorization level of the function app.
