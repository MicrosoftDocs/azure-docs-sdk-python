### YamlMime:PythonClass
uid: azure.functions.EventHubEvent
name: EventHubEvent
fullName: azure.functions.EventHubEvent
module: azure.functions
inheritances:
- azure.functions._abc.EventHubEvent
summary: A concrete implementation of Event Hub message type.
constructor:
  syntax: 'EventHubEvent(*, body: bytes, trigger_metadata: Mapping[str, Datum] = None,
    enqueued_time: datetime | None = None, partition_key: str | None = None, sequence_number:
    int | None = None, offset: str | None = None, iothub_metadata: Mapping[str, str]
    | None = None)'
  keywordOnlyParameters:
  - name: body
    isRequired: true
  - name: trigger_metadata
    isRequired: true
  - name: enqueued_time
    isRequired: true
  - name: partition_key
    isRequired: true
  - name: sequence_number
    isRequired: true
  - name: offset
    isRequired: true
  - name: iothub_metadata
    isRequired: true
methods:
- uid: azure.functions.EventHubEvent.get_body
  name: get_body
  signature: get_body() -> bytes
attributes:
- uid: azure.functions.EventHubEvent.enqueued_time
  name: enqueued_time
- uid: azure.functions.EventHubEvent.iothub_metadata
  name: iothub_metadata
- uid: azure.functions.EventHubEvent.metadata
  name: metadata
  summary: "Getting read-only trigger metadata in a Python dictionary.\n\nExposing\
    \ the raw trigger_metadata to our customer. For cardinality=many\nscenarios, each\
    \ event points to the common metadata of all the events.\n\nSo when using metadata\
    \ field when cardinality=many, it only needs to\ntake one of the events to get\
    \ all the data (e.g. events[0].metadata).\n\n# Returns:\n\ntyping.Mapping[str,\
    \ object]\n   Return the Python dictionary of trigger metadata"
- uid: azure.functions.EventHubEvent.offset
  name: offset
- uid: azure.functions.EventHubEvent.partition_key
  name: partition_key
- uid: azure.functions.EventHubEvent.sequence_number
  name: sequence_number
