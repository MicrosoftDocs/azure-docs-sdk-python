### YamlMime:PythonClass
uid: azure.functions.decorators.utils.BuildDictMeta
name: BuildDictMeta
fullName: azure.functions.decorators.utils.BuildDictMeta
module: azure.functions.decorators.utils
inheritances:
- builtins.type
summary: 'BuildDictMeta will apply to every binding.

  It will apply <xref:azure.functions.decorators.utils.BuildDictMeta.add_to_dict>
  decorator to <xref:azure.functions.decorators.utils.BuildDictMeta.__init__> of

  every binding class to collect list of params to include in building

  json dictionary which corresponds to function.json in legacy app.

  It will also apply <xref:azure.functions.decorators.utils.BuildDictMeta.skip_none>
  to <xref:azure.functions.decorators.utils.BuildDictMeta.get_dict_repr> to

  enable json dictionary generated for every binding has non-empty

  value fields. It is needed for enabling binding param optionality.'
constructor:
  syntax: BuildDictMeta(name, bases, dct)
  parameters:
  - name: mcs
    isRequired: true
  - name: name
    isRequired: true
  - name: bases
    isRequired: true
  - name: dct
    isRequired: true
methods:
- uid: azure.functions.decorators.utils.BuildDictMeta.add_to_dict
  name: add_to_dict
  signature: 'static add_to_dict(func: Callable[[...], Any])'
  parameters:
  - name: func
    isRequired: true
- uid: azure.functions.decorators.utils.BuildDictMeta.clean_nones
  name: clean_nones
  summary: 'Recursively remove all None values from dictionaries and lists,

    and returns

    the result as a new dictionary or list.'
  signature: static clean_nones(value)
  parameters:
  - name: value
    isRequired: true
- uid: azure.functions.decorators.utils.BuildDictMeta.mro
  name: mro
  summary: Return a type's method resolution order.
  signature: mro()
- uid: azure.functions.decorators.utils.BuildDictMeta.skip_none
  name: skip_none
  signature: static skip_none(func)
  parameters:
  - name: func
    isRequired: true
