### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.functions.eventhub.EventHubConverter.check_input_type_annotation
  - azure.functions.eventhub.EventHubConverter.check_output_type_annotation
  - azure.functions.eventhub.EventHubConverter.decode
  - azure.functions.eventhub.EventHubConverter.decode_multiple_events
  - azure.functions.eventhub.EventHubConverter.decode_single_event
  - azure.functions.eventhub.EventHubConverter.encode
  class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.functions.meta._BaseConverter
    type: azure.functions.meta.InConverter
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.functions.meta._BaseConverter
    type: azure.functions.meta.OutConverter
  langs:
  - python
  module: azure.functions.eventhub
  name: EventHubConverter
  source:
    id: EventHubConverter
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 12
  summary: ''
  syntax: {}
  type: class
  uid: azure.functions.eventhub.EventHubConverter
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.check_input_type_annotation
  langs:
  - python
  module: azure.functions.eventhub
  name: 'check_input_type_annotation(pytype: type) -> bool'
  namewithoutparameters: check_input_type_annotation
  source:
    id: check_input_type_annotation
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 15
  syntax:
    content: 'check_input_type_annotation(pytype: type) -> bool'
  type: method
  uid: azure.functions.eventhub.EventHubConverter.check_input_type_annotation
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.check_output_type_annotation
  langs:
  - python
  module: azure.functions.eventhub
  name: 'check_output_type_annotation(pytype: type) -> bool'
  namewithoutparameters: check_output_type_annotation
  source:
    id: check_output_type_annotation
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 23
  syntax:
    content: 'check_output_type_annotation(pytype: type) -> bool'
  type: method
  uid: azure.functions.eventhub.EventHubConverter.check_output_type_annotation
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.decode
  langs:
  - python
  module: azure.functions.eventhub
  name: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._eventhub.EventHubEvent,
    typing.List[azure.functions._eventhub.EventHubEvent]]'
  namewithoutparameters: decode
  source:
    id: decode
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 31
  syntax:
    content: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._eventhub.EventHubEvent,
      typing.List[azure.functions._eventhub.EventHubEvent]]'
  type: method
  uid: azure.functions.eventhub.EventHubConverter.decode
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.decode_multiple_events
  langs:
  - python
  module: azure.functions.eventhub
  name: decode_multiple_events(data, trigger_metadata) -> typing.List[azure.functions._eventhub.EventHubEvent]
  namewithoutparameters: decode_multiple_events
  source:
    id: decode_multiple_events
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 58
  syntax:
    content: decode_multiple_events(data, trigger_metadata) -> typing.List[azure.functions._eventhub.EventHubEvent]
  type: method
  uid: azure.functions.eventhub.EventHubConverter.decode_multiple_events
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.decode_single_event
  langs:
  - python
  module: azure.functions.eventhub
  name: decode_single_event(data, trigger_metadata) -> azure.functions._eventhub.EventHubEvent
  namewithoutparameters: decode_single_event
  source:
    id: decode_single_event
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 47
  syntax:
    content: decode_single_event(data, trigger_metadata) -> azure.functions._eventhub.EventHubEvent
  type: method
  uid: azure.functions.eventhub.EventHubConverter.decode_single_event
- class: azure.functions.eventhub.EventHubConverter
  fullName: azure.functions.eventhub.EventHubConverter.encode
  langs:
  - python
  module: azure.functions.eventhub
  name: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType]) ->
    azure.functions.meta.Datum'
  namewithoutparameters: encode
  source:
    id: encode
    path: azure\functions\eventhub.py
    remote:
      branch: master
      path: azure\functions\eventhub.py
      repo: https://github.com/Azure/azure-functions-python-library
    startLine: 75
  syntax:
    content: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType])
      -> azure.functions.meta.Datum'
  type: method
  uid: azure.functions.eventhub.EventHubConverter.encode
references:
- fullName: azure.functions.eventhub.EventHubConverter.check_input_type_annotation
  isExternal: false
  name: 'check_input_type_annotation(pytype: type) -> bool'
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.check_input_type_annotation
- fullName: azure.functions.eventhub.EventHubConverter.check_output_type_annotation
  isExternal: false
  name: 'check_output_type_annotation(pytype: type) -> bool'
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.check_output_type_annotation
- fullName: azure.functions.eventhub.EventHubConverter.decode
  isExternal: false
  name: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._eventhub.EventHubEvent,
    typing.List[azure.functions._eventhub.EventHubEvent]]'
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.decode
- fullName: azure.functions.eventhub.EventHubConverter.decode_multiple_events
  isExternal: false
  name: decode_multiple_events(data, trigger_metadata) -> typing.List[azure.functions._eventhub.EventHubEvent]
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.decode_multiple_events
- fullName: azure.functions.eventhub.EventHubConverter.decode_single_event
  isExternal: false
  name: decode_single_event(data, trigger_metadata) -> azure.functions._eventhub.EventHubEvent
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.decode_single_event
- fullName: azure.functions.eventhub.EventHubConverter.encode
  isExternal: false
  name: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType]) ->
    azure.functions.meta.Datum'
  parent: azure.functions.eventhub.EventHubConverter
  uid: azure.functions.eventhub.EventHubConverter.encode
