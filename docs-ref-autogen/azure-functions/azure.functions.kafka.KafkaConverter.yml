### YamlMime:PythonClass
uid: azure.functions.kafka.KafkaConverter
name: KafkaConverter
fullName: azure.functions.kafka.KafkaConverter
module: azure.functions.kafka
inheritances:
- azure.functions.meta.InConverter
- azure.functions.meta.OutConverter
constructor:
  syntax: KafkaConverter()
methods:
- uid: azure.functions.kafka.KafkaConverter.check_input_type_annotation
  name: check_input_type_annotation
  signature: check_input_type_annotation(pytype) -> bool
  parameters:
  - name: pytype
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.check_output_type_annotation
  name: check_output_type_annotation
  signature: check_output_type_annotation(pytype) -> bool
  parameters:
  - name: pytype
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.decode
  name: decode
  signature: 'decode(data: Datum, *, trigger_metadata) -> KafkaEvent | List[KafkaEvent]'
  parameters:
  - name: data
    isRequired: true
  keywordOnlyParameters:
  - name: trigger_metadata
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.decode_multiple_events
  name: decode_multiple_events
  signature: 'decode_multiple_events(data: Datum, trigger_metadata) -> List[KafkaEvent]'
  parameters:
  - name: data
    isRequired: true
  - name: trigger_metadata
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.decode_single_event
  name: decode_single_event
  signature: 'decode_single_event(data: Datum, trigger_metadata) -> KafkaEvent'
  parameters:
  - name: data
    isRequired: true
  - name: trigger_metadata
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.encode
  name: encode
  signature: 'encode(obj: Any, *, expected_type: type | None) -> Datum'
  parameters:
  - name: obj
    isRequired: true
  keywordOnlyParameters:
  - name: expected_type
    isRequired: true
- uid: azure.functions.kafka.KafkaConverter.has_implicit_output
  name: has_implicit_output
  signature: abstract classmethod has_implicit_output() -> bool
