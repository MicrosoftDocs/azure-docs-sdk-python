### YamlMime:PythonClass
uid: azure.functions.KafkaConverter
name: KafkaConverter
fullName: azure.functions.KafkaConverter
module: azure.functions
inheritances:
- azure.functions.meta.InConverter
- azure.functions.meta.OutConverter
constructor:
  syntax: KafkaConverter()
methods:
- uid: azure.functions.KafkaConverter.check_input_type_annotation
  name: check_input_type_annotation
  signature: check_input_type_annotation(pytype) -> bool
  parameters:
  - name: cls
    isRequired: true
  - name: pytype
    isRequired: true
- uid: azure.functions.KafkaConverter.check_output_type_annotation
  name: check_output_type_annotation
  signature: check_output_type_annotation(pytype) -> bool
  parameters:
  - name: cls
    isRequired: true
  - name: pytype
    isRequired: true
- uid: azure.functions.KafkaConverter.decode
  name: decode
  signature: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> Union[azure.functions.kafka.KafkaEvent,
    List[azure.functions.kafka.KafkaEvent]]'
  parameters:
  - name: cls
    isRequired: true
  - name: data
    isRequired: true
- uid: azure.functions.KafkaConverter.decode_multiple_events
  name: decode_multiple_events
  signature: 'decode_multiple_events(data: azure.functions.meta.Datum, trigger_metadata)
    -> List[azure.functions.kafka.KafkaEvent]'
  parameters:
  - name: cls
    isRequired: true
  - name: data
    isRequired: true
  - name: trigger_metadata
    isRequired: true
- uid: azure.functions.KafkaConverter.decode_single_event
  name: decode_single_event
  signature: 'decode_single_event(data: azure.functions.meta.Datum, trigger_metadata)
    -> azure.functions.kafka.KafkaEvent'
  parameters:
  - name: cls
    isRequired: true
  - name: data
    isRequired: true
  - name: trigger_metadata
    isRequired: true
- uid: azure.functions.KafkaConverter.encode
  name: encode
  signature: 'encode(obj: Any, *, expected_type: Optional[type]) -> azure.functions.meta.Datum'
  parameters:
  - name: cls
    isRequired: true
  - name: obj
    isRequired: true
