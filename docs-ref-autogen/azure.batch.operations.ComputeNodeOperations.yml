### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.batch.operations.ComputeNodeOperations.add_user
  - azure.batch.operations.ComputeNodeOperations.delete_user
  - azure.batch.operations.ComputeNodeOperations.disable_scheduling
  - azure.batch.operations.ComputeNodeOperations.enable_scheduling
  - azure.batch.operations.ComputeNodeOperations.get
  - azure.batch.operations.ComputeNodeOperations.get_remote_desktop
  - azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
  - azure.batch.operations.ComputeNodeOperations.list
  - azure.batch.operations.ComputeNodeOperations.reboot
  - azure.batch.operations.ComputeNodeOperations.reimage
  - azure.batch.operations.ComputeNodeOperations.update_user
  - azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
  - azure.batch.operations.ComputeNodeOperations.models
  class: azure.batch.operations.ComputeNodeOperations
  fullName: azure.batch.operations.ComputeNodeOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.batch.operations
  name: ComputeNodeOperations
  source:
    id: ComputeNodeOperations
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 18
  summary: 'ComputeNodeOperations operations.














    '
  syntax:
    content: ComputeNodeOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An object model deserializer.

        '
      id: deserializer
    variables:
    - description: 'Client API Version. Constant value: "2018-03-01.6.1".

        '
      id: api_version
  type: class
  uid: azure.batch.operations.ComputeNodeOperations
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.add_user
  langs:
  - python
  module: azure.batch.operations
  name: add_user
  source:
    id: add_user
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 39
  summary: 'Adds a user account to the specified compute node.


    You can add a user account to a node only when it is in the idle or

    running state.

    '
  syntax:
    content: add_user(pool_id, node_id, user, compute_node_add_user_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the machine on which you want to create a

        user account.

        '
      id: node_id
      type:
      - str
    - description: 'The user account to be created.

        '
      id: user
      type:
      - azure.batch.models.ComputeNodeUser
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_add_user_options
      type:
      - azure.batch.models.ComputeNodeAddUserOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.add_user
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.delete_user
  langs:
  - python
  module: azure.batch.operations
  name: delete_user
  source:
    id: delete_user
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 133
  summary: 'Deletes a user account from the specified compute node.


    You can delete a user account to a node only when it is in the idle or

    running state.

    '
  syntax:
    content: delete_user(pool_id, node_id, user_name, compute_node_delete_user_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the machine on which you want to delete a

        user account.

        '
      id: node_id
      type:
      - str
    - description: 'The name of the user account to delete.

        '
      id: user_name
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_delete_user_options
      type:
      - azure.batch.models.ComputeNodeDeleteUserOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.delete_user
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.disable_scheduling
  langs:
  - python
  module: azure.batch.operations
  name: disable_scheduling
  source:
    id: disable_scheduling
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 628
  summary: 'Disables task scheduling on the specified compute node.


    You can disable task scheduling on a node only if its current

    scheduling state is enabled.

    '
  syntax:
    content: disable_scheduling(pool_id, node_id, compute_node_disable_scheduling_options=None,
      node_disable_scheduling_option=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node on which you want to

        disable task scheduling.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters

        for the operation

        '
      id: compute_node_disable_scheduling_options
      type:
      - azure.batch.models.ComputeNodeDisableSchedulingOptions
    - defaultValue: None
      description: 'What to do with currently

        running tasks when disabling task scheduling on the compute node. The

        default value is requeue. Possible values include: ''requeue'',

        ''terminate'', ''taskCompletion''

        '
      id: node_disable_scheduling_option
      type:
      - str
      - azure.batch.models.DisableComputeNodeSchedulingOption
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.disable_scheduling
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.enable_scheduling
  langs:
  - python
  module: azure.batch.operations
  name: enable_scheduling
  source:
    id: enable_scheduling
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 732
  summary: 'Enables task scheduling on the specified compute node.


    You can enable task scheduling on a node only if its current scheduling

    state is disabled.

    '
  syntax:
    content: enable_scheduling(pool_id, node_id, compute_node_enable_scheduling_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node on which you want to enable

        task scheduling.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters

        for the operation

        '
      id: compute_node_enable_scheduling_options
      type:
      - azure.batch.models.ComputeNodeEnableSchedulingOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.enable_scheduling
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.get
  langs:
  - python
  module: azure.batch.operations
  name: get
  source:
    id: get
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 323
  summary: 'Gets information about the specified compute node.

    '
  syntax:
    content: get(pool_id, node_id, compute_node_get_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node that you want to get

        information about.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_get_options
      type:
      - azure.batch.models.ComputeNodeGetOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ComputeNode or ClientRawResponse if raw=true

        '
      type:
      - azure.batch.models.ComputeNode
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.get
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.get_remote_desktop
  langs:
  - python
  module: azure.batch.operations
  name: get_remote_desktop
  source:
    id: get_remote_desktop
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 921
  summary: 'Gets the Remote Desktop Protocol file for the specified compute node.


    Before you can access a node by using the RDP file, you must create a

    user account on the node. This API can only be invoked on pools created

    with a cloud service configuration. For pools created with a virtual

    machine configuration, see the GetRemoteLoginSettings API.

    '
  syntax:
    content: get_remote_desktop(pool_id, node_id, compute_node_get_remote_desktop_options=None,
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node for which you want to get

        the Remote Desktop Protocol file.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters

        for the operation

        '
      id: compute_node_get_remote_desktop_options
      type:
      - azure.batch.models.ComputeNodeGetRemoteDesktopOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'object or ClientRawResponse if raw=true

        '
      type:
      - Generator
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.get_remote_desktop
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
  langs:
  - python
  module: azure.batch.operations
  name: get_remote_login_settings
  source:
    id: get_remote_login_settings
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 820
  summary: 'Gets the settings required for remote login to a compute node.


    Before you can remotely login to a node using the remote login

    settings, you must create a user account on the node. This API can be

    invoked only on pools created with the virtual machine configuration

    property. For pools created with a cloud service configuration, see the

    GetRemoteDesktop API.

    '
  syntax:
    content: get_remote_login_settings(pool_id, node_id, compute_node_get_remote_login_settings_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node for which to obtain the

        remote login settings.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional

        parameters for the operation

        '
      id: compute_node_get_remote_login_settings_options
      type:
      - azure.batch.models.ComputeNodeGetRemoteLoginSettingsOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ComputeNodeGetRemoteLoginSettingsResult or ClientRawResponse

        if raw=true

        '
      type:
      - azure.batch.models.ComputeNodeGetRemoteLoginSettingsResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.list
  langs:
  - python
  module: azure.batch.operations
  name: list
  source:
    id: list
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1131
  summary: 'Lists the compute nodes in the specified pool.

    '
  syntax:
    content: list(pool_id, compute_node_list_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the pool from which you want to list nodes.

        '
      id: pool_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_list_options
      type:
      - azure.batch.models.ComputeNodeListOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'An iterator like instance of ComputeNode

        '
      type:
      - azure.batch.models.ComputeNodePaged[azure.batch.models.ComputeNode]
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.list
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.reboot
  langs:
  - python
  module: azure.batch.operations
  name: reboot
  source:
    id: reboot
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 422
  summary: 'Restarts the specified compute node.


    You can restart a node only if it is in an idle or running state.

    '
  syntax:
    content: reboot(pool_id, node_id, compute_node_reboot_options=None, node_reboot_option=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node that you want to restart.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_reboot_options
      type:
      - azure.batch.models.ComputeNodeRebootOptions
    - defaultValue: None
      description: 'When to reboot the compute node and what to

        do with currently running tasks. The default value is requeue.

        Possible values include: ''requeue'', ''terminate'', ''taskCompletion'',

        ''retainedData''

        '
      id: node_reboot_option
      type:
      - str
      - azure.batch.models.ComputeNodeRebootOption
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.reboot
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.reimage
  langs:
  - python
  module: azure.batch.operations
  name: reimage
  source:
    id: reimage
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 524
  summary: 'Reinstalls the operating system on the specified compute node.


    You can reinstall the operating system on a node only if it is in an

    idle or running state. This API can be invoked only on pools created

    with the cloud service configuration property.

    '
  syntax:
    content: reimage(pool_id, node_id, compute_node_reimage_options=None, node_reimage_option=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node that you want to restart.

        '
      id: node_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_reimage_options
      type:
      - azure.batch.models.ComputeNodeReimageOptions
    - defaultValue: None
      description: 'When to reimage the compute node and what

        to do with currently running tasks. The default value is requeue.

        Possible values include: ''requeue'', ''terminate'', ''taskCompletion'',

        ''retainedData''

        '
      id: node_reimage_option
      type:
      - str
      - azure.batch.models.ComputeNodeReimageOption
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.reimage
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.update_user
  langs:
  - python
  module: azure.batch.operations
  name: update_user
  source:
    id: update_user
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 221
  summary: 'Updates the password and expiration time of a user account on the

    specified compute node.


    This operation replaces of all the updateable properties of the

    account. For example, if the expiryTime element is not specified, the

    current value is replaced with the default value, not left unmodified.

    You can update a user account on a node only when it is in the idle or

    running state.

    '
  syntax:
    content: update_user(pool_id, node_id, user_name, node_update_user_parameter,
      compute_node_update_user_options=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the machine on which you want to update a

        user account.

        '
      id: node_id
      type:
      - str
    - description: 'The name of the user account to update.

        '
      id: user_name
      type:
      - str
    - description: 'The parameters for the request.

        '
      id: node_update_user_parameter
      type:
      - azure.batch.models.NodeUpdateUserParameter
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: compute_node_update_user_options
      type:
      - azure.batch.models.ComputeNodeUpdateUserOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.update_user
- class: azure.batch.operations.ComputeNodeOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
  langs:
  - python
  module: azure.batch.operations
  name: upload_batch_service_logs
  source:
    id: upload_batch_service_logs
    path: azure-batch\azure\batch\operations\compute_node_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\compute_node_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1024
  summary: 'Upload Azure Batch service log files from the specified compute node to

    Azure Blob Storage.


    This is for gathering Azure Batch service log files in an automated

    fashion from nodes if you are experiencing an error and wish to

    escalate to Azure support. The Azure Batch service log files should be

    shared with Azure support to aid in debugging issues with the Batch

    service.

    '
  syntax:
    content: upload_batch_service_logs(pool_id, node_id, upload_batch_service_logs_configuration,
      compute_node_upload_batch_service_logs_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the pool that contains the compute node.

        '
      id: pool_id
      type:
      - str
    - description: 'The ID of the compute node from which you want to

        upload the Azure Batch service log files.

        '
      id: node_id
      type:
      - str
    - description: 'The Azure Batch

        service log files upload configuration.

        '
      id: upload_batch_service_logs_configuration
      type:
      - azure.batch.models.UploadBatchServiceLogsConfiguration
    - defaultValue: None
      description: 'Additional

        parameters for the operation

        '
      id: compute_node_upload_batch_service_logs_options
      type:
      - azure.batch.models.ComputeNodeUploadBatchServiceLogsOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'UploadBatchServiceLogsResult or ClientRawResponse if raw=true

        '
      type:
      - azure.batch.models.UploadBatchServiceLogsResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
- class: azure.batch.operations.ComputeNodeOperations
  fullName: azure.batch.operations.ComputeNodeOperations.models
  langs:
  - python
  module: azure.batch.operations
  name: models
  syntax:
    content: models = <module 'azure.batch.models' from 'c:\\program files (x86)\\microsoft
      visual studio\\shared\\python36_64\\lib\\site-packages\\azure_batch-4.1.1-py3.6.egg\\azure\\batch\\models\\__init__.py'>
  type: attribute
  uid: azure.batch.operations.ComputeNodeOperations.models
references:
- fullName: azure.batch.operations.ComputeNodeOperations.add_user
  isExternal: false
  name: add_user
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.add_user
- fullName: azure.batch.operations.ComputeNodeOperations.delete_user
  isExternal: false
  name: delete_user
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.delete_user
- fullName: azure.batch.operations.ComputeNodeOperations.disable_scheduling
  isExternal: false
  name: disable_scheduling
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.disable_scheduling
- fullName: azure.batch.operations.ComputeNodeOperations.enable_scheduling
  isExternal: false
  name: enable_scheduling
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.enable_scheduling
- fullName: azure.batch.operations.ComputeNodeOperations.get
  isExternal: false
  name: get
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.get
- fullName: azure.batch.operations.ComputeNodeOperations.get_remote_desktop
  isExternal: false
  name: get_remote_desktop
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.get_remote_desktop
- fullName: azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
  isExternal: false
  name: get_remote_login_settings
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
- fullName: azure.batch.operations.ComputeNodeOperations.list
  isExternal: false
  name: list
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.list
- fullName: azure.batch.operations.ComputeNodeOperations.reboot
  isExternal: false
  name: reboot
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.reboot
- fullName: azure.batch.operations.ComputeNodeOperations.reimage
  isExternal: false
  name: reimage
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.reimage
- fullName: azure.batch.operations.ComputeNodeOperations.update_user
  isExternal: false
  name: update_user
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.update_user
- fullName: azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
  isExternal: false
  name: upload_batch_service_logs
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
- fullName: azure.batch.operations.ComputeNodeOperations.models
  isExternal: false
  name: models
  parent: azure.batch.operations.ComputeNodeOperations
  uid: azure.batch.operations.ComputeNodeOperations.models
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: azure.batch.models.ComputeNodePaged[azure.batch.models.ComputeNode]
  name: ComputeNodePaged[ComputeNode]
  spec.python:
  - fullName: azure.batch.models.ComputeNodePaged
    name: ComputeNodePaged
    uid: azure.batch.models.ComputeNodePaged
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ComputeNode
    name: ComputeNode
    uid: azure.batch.models.ComputeNode
  - fullName: ']'
    name: ']'
  uid: azure.batch.models.ComputeNodePaged[azure.batch.models.ComputeNode]
