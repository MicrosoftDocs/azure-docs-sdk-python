### YamlMime:UniversalReference
api_name: []
items:
- children:
  - adal.authentication_context.AuthenticationContext.acquire_token
  - adal.authentication_context.AuthenticationContext.acquire_token_with_authorization_code
  - adal.authentication_context.AuthenticationContext.acquire_token_with_client_certificate
  - adal.authentication_context.AuthenticationContext.acquire_token_with_client_credentials
  - adal.authentication_context.AuthenticationContext.acquire_token_with_device_code
  - adal.authentication_context.AuthenticationContext.acquire_token_with_refresh_token
  - adal.authentication_context.AuthenticationContext.acquire_token_with_username_password
  - adal.authentication_context.AuthenticationContext.acquire_user_code
  - adal.authentication_context.AuthenticationContext.cancel_request_to_get_token_with_device_code
  class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: adal.authentication_context
  name: AuthenticationContext
  source:
    id: AuthenticationContext
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 41
  summary: "Retrieves authentication tokens from Azure Active Directory.\n\nFor usages,\
    \ check out the \"sample\" folder at:\n   [https://github.com/AzureAD/azure-activedirectory-library-for-python](https://github.com/AzureAD/azure-activedirectory-library-for-python)\n\
    \n\n\n\n\n\n\n\n\n\n"
  syntax:
    content: AuthenticationContext(authority, validate_authority=None, cache=None,
      api_version=None, timeout=None, enable_pii=False, verify_ssl=None, proxies=None)
  type: class
  uid: adal.authentication_context.AuthenticationContext
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token
  source:
    id: acquire_token
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 130
  summary: 'Gets a token for a given resource via cached tokens.

    '
  syntax:
    content: acquire_token(resource, user_id, client_id)
    parameters:
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The username of the user on behalf this application

        is authenticating.

        '
      id: user_id
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    return:
      description: 'dic with several keys, include "accessToken" and

        "refreshToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_authorization_code
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_authorization_code
  source:
    id: acquire_token_with_authorization_code
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 181
  summary: 'Gets a token for a given resource via auhtorization code for a

    server app.

    '
  syntax:
    content: acquire_token_with_authorization_code(authorization_code, redirect_uri,
      resource, client_id, client_secret=None, code_verifier=None)
    parameters:
    - description: 'An authorization code returned from a

        client.

        '
      id: authorization_code
      type:
      - str
    - description: 'the redirect uri that was used in the

        authorize call.

        '
      id: redirect_uri
      type:
      - str
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    - defaultValue: None
      description: '(only for confidential clients)The OAuth

        client secret of the calling application. This parameter if not set,

        defaults to None

        '
      id: client_secret
      type:
      - str
    - defaultValue: None
      description: '(optional)The code verifier that was used to

        obtain authorization code if PKCE was used in the authorization

        code grant request.(usually used by public clients) This parameter if not
        set,

        defaults to None

        '
      id: code_verifier
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken" and

        "refreshToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_authorization_code
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_client_certificate
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_client_certificate
  source:
    id: acquire_token_with_client_certificate
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 237
  summary: 'Gets a token for a given resource via certificate credentials

    '
  syntax:
    content: acquire_token_with_client_certificate(resource, client_id, certificate,
      thumbprint)
    parameters:
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    - description: 'A PEM encoded certificate private key.

        '
      id: certificate
      type:
      - str
    - description: 'hex encoded thumbprint of the certificate.

        '
      id: thumbprint
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_client_certificate
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_client_credentials
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_client_credentials
  source:
    id: acquire_token_with_client_credentials
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 166
  summary: 'Gets a token for a given resource via client credentials.

    '
  syntax:
    content: acquire_token_with_client_credentials(resource, client_id, client_secret)
    parameters:
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    - description: 'The OAuth client secret of the calling application.

        '
      id: client_secret
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_client_credentials
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_device_code
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_device_code
  source:
    id: acquire_token_with_device_code
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 271
  summary: 'Gets a new access token using via a device code.

    '
  syntax:
    content: acquire_token_with_device_code(resource, user_code_info, client_id)
    parameters:
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The code info from the invocation of

        "acquire_user_code"

        '
      id: user_code_info
      type:
      - dict
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken" and

        "refreshToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_device_code
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_refresh_token
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_refresh_token
  source:
    id: acquire_token_with_refresh_token
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 217
  summary: 'Gets a token for a given resource via refresh tokens

    '
  syntax:
    content: acquire_token_with_refresh_token(refresh_token, client_id, resource,
      client_secret=None)
    parameters:
    - description: 'A refresh token returned in a tokne response

        from a previous invocation of acquireToken.

        '
      id: refresh_token
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - defaultValue: None
      description: '(optional)The OAuth client secret of the

        calling application.

        '
      id: client_secret
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken" and

        "refreshToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_refresh_token
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_username_password
  langs:
  - python
  module: adal.authentication_context
  name: acquire_token_with_username_password
  source:
    id: acquire_token_with_username_password
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 147
  summary: 'Gets a token for a given resource via user credentails.

    '
  syntax:
    content: acquire_token_with_username_password(resource, username, password, client_id)
    parameters:
    - description: 'A URI that identifies the resource for which the

        token is valid.

        '
      id: resource
      type:
      - str
    - description: 'The username of the user on behalf this

        application is authenticating.

        '
      id: username
      type:
      - str
    - description: 'The password of the user named in the username

        parameter.

        '
      id: password
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    return:
      description: 'dict with several keys, include "accessToken" and

        "refreshToken".

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_username_password
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.acquire_user_code
  langs:
  - python
  module: adal.authentication_context
  name: acquire_user_code
  source:
    id: acquire_user_code
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 254
  summary: 'Gets the user code info which contains user_code, device_code for

    authenticating user on device.

    '
  syntax:
    content: acquire_user_code(resource, client_id, language=None)
    parameters:
    - description: 'A URI that identifies the resource for which the

        device_code and user_code is valid for.

        '
      id: resource
      type:
      - str
    - description: 'The OAuth client id of the calling application.

        '
      id: client_id
      type:
      - str
    - defaultValue: None
      description: 'The language code specifying how the message

        should be localized to.

        '
      id: language
      type:
      - str
    return:
      description: 'dict contains code and uri for users to login through browser.

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.acquire_user_code
- class: adal.authentication_context.AuthenticationContext
  fullName: adal.authentication_context.AuthenticationContext.cancel_request_to_get_token_with_device_code
  langs:
  - python
  module: adal.authentication_context
  name: cancel_request_to_get_token_with_device_code
  source:
    id: cancel_request_to_get_token_with_device_code
    path: adal\authentication_context.py
    remote:
      branch: dev
      path: adal\authentication_context.py
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-python
    startLine: 298
  summary: 'Cancels the polling request to get token with device code.

    '
  syntax:
    content: cancel_request_to_get_token_with_device_code(user_code_info)
    parameters:
    - description: 'The code info from the invocation of

        "acquire_user_code"

        '
      id: user_code_info
      type:
      - dict
    return:
      description: 'None

        '
  type: method
  uid: adal.authentication_context.AuthenticationContext.cancel_request_to_get_token_with_device_code
references:
- fullName: adal.authentication_context.AuthenticationContext.acquire_token
  isExternal: false
  name: acquire_token
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_authorization_code
  isExternal: false
  name: acquire_token_with_authorization_code
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_authorization_code
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_client_certificate
  isExternal: false
  name: acquire_token_with_client_certificate
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_client_certificate
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_client_credentials
  isExternal: false
  name: acquire_token_with_client_credentials
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_client_credentials
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_device_code
  isExternal: false
  name: acquire_token_with_device_code
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_device_code
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_refresh_token
  isExternal: false
  name: acquire_token_with_refresh_token
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_refresh_token
- fullName: adal.authentication_context.AuthenticationContext.acquire_token_with_username_password
  isExternal: false
  name: acquire_token_with_username_password
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_token_with_username_password
- fullName: adal.authentication_context.AuthenticationContext.acquire_user_code
  isExternal: false
  name: acquire_user_code
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.acquire_user_code
- fullName: adal.authentication_context.AuthenticationContext.cancel_request_to_get_token_with_device_code
  isExternal: false
  name: cancel_request_to_get_token_with_device_code
  parent: adal.authentication_context.AuthenticationContext
  uid: adal.authentication_context.AuthenticationContext.cancel_request_to_get_token_with_device_code
