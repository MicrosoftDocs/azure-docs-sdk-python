### YamlMime:PythonClass
uid: azure.mgmt.sphere.operations.CertificatesOperations
name: CertificatesOperations
fullName: azure.mgmt.sphere.operations.CertificatesOperations
module: azure.mgmt.sphere.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sphere.AzureSphereMgmtClient>'s\n\
  >\n> <xref:certificates> attribute.\n>"
constructor:
  syntax: CertificatesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sphere.operations.CertificatesOperations.get
  name: get
  summary: Get a Certificate.
  signature: 'get(resource_group_name: str, catalog_name: str, serial_number: str,
    **kwargs: Any) -> Certificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: Name of catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: serial_number
    description: 'Serial number of the certificate. Use ''.default'' to get current
      active

      certificate. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Certificate or the result of cls(response)
    types:
    - <xref:azure.mgmt.sphere.models.Certificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sphere.operations.CertificatesOperations.list_by_catalog
  name: list_by_catalog
  summary: List Certificate resources by Catalog.
  signature: 'list_by_catalog(resource_group_name: str, catalog_name: str, filter:
    str | None = None, top: int | None = None, skip: int | None = None, maxpagesize:
    int | None = None, **kwargs: Any) -> Iterable[Certificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: Name of catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: Filter the result list using the given expression. Default value
      is None.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The number of result items to return. Default value is None.
    isRequired: true
    types:
    - <xref:int>
  - name: skip
    description: The number of result items to skip. Default value is None.
    isRequired: true
    types:
    - <xref:int>
  - name: maxpagesize
    description: The maximum number of result items per page. Default value is None.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either Certificate or the result of
      cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sphere.models.Certificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sphere.operations.CertificatesOperations.retrieve_cert_chain
  name: retrieve_cert_chain
  summary: Retrieves cert chain.
  signature: 'retrieve_cert_chain(resource_group_name: str, catalog_name: str, serial_number:
    str, **kwargs: Any) -> CertificateChainResponse'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: Name of catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: serial_number
    description: 'Serial number of the certificate. Use ''.default'' to get current
      active

      certificate. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: CertificateChainResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.sphere.models.CertificateChainResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sphere.operations.CertificatesOperations.retrieve_proof_of_possession_nonce
  name: retrieve_proof_of_possession_nonce
  summary: Gets the proof of possession nonce.
  signature: 'retrieve_proof_of_possession_nonce(resource_group_name: str, catalog_name:
    str, serial_number: str, proof_of_possession_nonce_request: _models.ProofOfPossessionNonceRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.ProofOfPossessionNonceResponse'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: Name of catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: serial_number
    description: 'Serial number of the certificate. Use ''.default'' to get current
      active

      certificate. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: proof_of_possession_nonce_request
    description: 'Proof of possession nonce request body. Is either a

      ProofOfPossessionNonceRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sphere.models.ProofOfPossessionNonceRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: ProofOfPossessionNonceResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.sphere.models.ProofOfPossessionNonceResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sphere.operations.CertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sphere.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\sphere\\models\\__init__.py'>
