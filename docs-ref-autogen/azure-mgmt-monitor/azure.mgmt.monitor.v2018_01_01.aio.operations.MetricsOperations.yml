### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations
name: MetricsOperations
fullName: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations
module: azure.mgmt.monitor.v2018_01_01.aio.operations
inheritances:
- builtins.object
summary: 'MetricsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: MetricsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations.list
  name: list
  summary: '**Lists the metric values for a resource**.'
  signature: 'list(resource_uri: str, timespan: Optional[str] = None, interval: Optional[datetime.timedelta]
    = None, metricnames: Optional[str] = None, aggregation: Optional[str] = None,
    top: Optional[int] = None, orderby: Optional[str] = None, filter: Optional[str]
    = None, result_type: Optional[Union[str, azure.mgmt.monitor.v2018_01_01.models._monitor_management_client_enums.ResultType]]
    = None, metricnamespace: Optional[str] = None, **kwargs: Any) -> azure.mgmt.monitor.v2018_01_01.models._models_py3.Response'
  parameters:
  - name: resource_uri
    description: The identifier of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''.'
    defaultValue: None
    types:
    - <xref:str>
  - name: interval
    description: The interval (i.e. timegrain) of the query.
    defaultValue: None
    types:
    - <xref:datetime.timedelta>
  - name: metricnames
    description: 'The names of the metrics (comma separated) to retrieve. Special
      case: If a

      metricname itself has a comma in it then use %2 to indicate it. Eg: ''Metric,Name1''
      should be

      **''Metric%2Name1''**.'
    defaultValue: None
    types:
    - <xref:str>
  - name: aggregation
    description: The list of aggregation types (comma separated) to retrieve.
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve.

      Valid only if $filter is specified.

      Defaults to 10.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      Examples: sum asc.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data returned.
      Example:

      Metric contains metadata A, B and C. - Return all time series of C where A =
      a1 and B = b1 or

      b2 **$filter=A eq ''a1'' and B eq ''b1'' or B eq ''b2'' and C eq ''*''** - Invalid
      variant: **$filter=A

      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''** This is invalid because
      the logical or

      operator cannot separate two different metadata names. - Return all time series
      where A = a1, B

      = b1 and C = c1: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''c1''** - Return
      all time series

      where A = a1 **$filter=A eq ''a1'' and B eq ''*'' and C eq ''*''**. Special
      case: When dimension

      name or dimension value uses round brackets. Eg: When dimension name is **dim
      (test) 1**

      Instead of using $filter= "dim (test) 1 eq ''*'' " use **$filter= "dim %2528test%2529
      1 eq ''*         '' "** When dimension name is **dim (test) 3** and dimension
      value is **dim3 (test) val         ** Instead of using $filter= "dim (test)
      3 eq ''dim3 (test) val'' " use **$filter= "dim

      %2528test%2529 3 eq ''dim3 %2528test%2529 val'' "**.'
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:$>(<xref:python-base-namespace>)<xref:azure.mgmt.monitor.v2018_01_01.models.ResultType>
  - name: metricnamespace
    description: Metric namespace to query metric definitions for.
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Response, or the result of cls(response)
    types:
    - <xref:$>(<xref:python-base-namespace>)<xref:azure.mgmt.monitor.v2018_01_01.models.Response>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.monitor.v2018_01_01.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\monitor\\v2018_01_01\\models\\__init__.py'>
