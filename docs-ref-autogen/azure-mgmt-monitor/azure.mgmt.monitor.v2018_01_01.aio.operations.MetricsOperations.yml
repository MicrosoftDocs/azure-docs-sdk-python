### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations
name: MetricsOperations
fullName: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations
module: azure.mgmt.monitor.v2018_01_01.aio.operations
inheritances:
- builtins.object
summary: 'MetricsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: MetricsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations.list
  name: list
  summary: '**Lists the metric values for a resource**.'
  signature: 'list(resource_uri: str, timespan: typing.Union[str, NoneType] = None,
    interval: typing.Union[datetime.timedelta, NoneType] = None, metricnames: typing.Union[str,
    NoneType] = None, aggregation: typing.Union[str, NoneType] = None, top: typing.Union[int,
    NoneType] = None, orderby: typing.Union[str, NoneType] = None, filter: typing.Union[str,
    NoneType] = None, result_type: typing.Union[str, _ForwardRef(''_models.ResultType''),
    NoneType] = None, metricnamespace: typing.Union[str, NoneType] = None, **kwargs)
    -> azure.mgmt.monitor.v2018_01_01.models._models_py3.Response'
  parameters:
  - name: resource_uri
    description: The identifier of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''.'
    defaultValue: None
    types:
    - <xref:str>
  - name: interval
    description: The interval (i.e. timegrain) of the query.
    defaultValue: None
    types:
    - <xref:datetime.timedelta>
  - name: metricnames
    description: The names of the metrics (comma separated) to retrieve.
    defaultValue: None
    types:
    - <xref:str>
  - name: aggregation
    description: The list of aggregation types (comma separated) to retrieve.
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve.

      Valid only if $filter is specified.

      Defaults to 10.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      Examples: sum asc.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: "The **$filter** is used to reduce the set of metric data\nreturned.:code:*<br>`Example::code:`<br>`Metric\
      \ contains metadata A, B and C.:code:`<br>*-\nReturn all time series of C where\
      \ A = a1 and B = b1 or b2:code:*<br>***$filter=A eq \u2018a1\u2019 and\nB eq\
      \ \u2018b1\u2019 or B eq \u2018b2\u2019 and C eq \u2018*\u2019**`<br>`- Invalid\
      \ variant:`<br>`**$filter=A\neq \u2018a1\u2019 and B eq \u2018b1\u2019 and C\
      \ eq \u2018*\u2019 or B = \u2018b2\u2019**`<br>`This is invalid because the\n\
      logical or operator cannot separate two different metadata names.:code:`<br>`-\
      \ Return all time\nseries where A = a1, B = b1 and C = c1:`<br>`**$filter=A\
      \ eq \u2018a1\u2019 and B eq \u2018b1\u2019 and C eq\n\u2018c1\u2019**`<br>`-\
      \ Return all time series where A = a1:code:*<br>***$filter=A eq \u2018a1\u2019\
      \ and\nB eq \u2018*\u2019 and C eq \u2018*\u2019**."
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details.'
    defaultValue: None
    types:
    - <xref:str>
    - '<xref:$>(<xref:python-base-namespace>)<xref:.v2018_01_01.models.ResultType>'
  - name: metricnamespace
    description: Metric namespace to query metric definitions for.
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: Response, or the result of cls(response)
    types:
    - '<xref:$>(<xref:python-base-namespace>)<xref:.v2018_01_01.models.Response>'
attributes:
- uid: azure.mgmt.monitor.v2018_01_01.aio.operations.MetricsOperations.models
  name: models
  signature: 'models = <module ''azure.mgmt.monitor.v2018_01_01.models'' from ''c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\monitor\\v2018_01_01\\models\\__init__.py''>'
