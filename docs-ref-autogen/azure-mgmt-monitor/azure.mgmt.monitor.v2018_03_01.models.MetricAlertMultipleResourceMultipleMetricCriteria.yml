### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.monitor.v2018_03_01.models.MetricAlertMultipleResourceMultipleMetricCriteria
  fullName: azure.mgmt.monitor.v2018_03_01.models.MetricAlertMultipleResourceMultipleMetricCriteria
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.monitor.v2018_03_01.models._models_py3.MetricAlertCriteria
  langs:
  - python
  module: azure.mgmt.monitor.v2018_03_01.models
  name: MetricAlertMultipleResourceMultipleMetricCriteria
  summary: 'Specifies the metric alert criteria for multiple resource that has multiple
    metric criteria.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'MetricAlertMultipleResourceMultipleMetricCriteria(*, additional_properties:
      typing.Union[typing.Dict[str, object], NoneType] = None, all_of: typing.Union[typing.List[_ForwardRef(''MultiMetricCriteria'')],
      NoneType] = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Required. specifies the type of the alert criteria.Constant filled
        by

        server.  Possible values include:

        "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",

        "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",

        "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria".'
      id: odata_type
      type:
      - str
      - $(python-base-namespace).v2018_03_01.models.Odatatype
    - description: the list of multiple metric criteria for this 'all of' operation.
      id: all_of
      type:
      - list[$(python-base-namespace).v2018_03_01.models.MultiMetricCriteria]
  type: class
  uid: azure.mgmt.monitor.v2018_03_01.models.MetricAlertMultipleResourceMultipleMetricCriteria
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: $(python-base-namespace).v2018_03_01.models.Odatatype
  name: $(python-base-namespace)Odatatype
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.Odatatype
    name: Odatatype
    uid: .v2018_03_01.models.Odatatype
  uid: $(python-base-namespace).v2018_03_01.models.Odatatype
- fullName: list[$(python-base-namespace).v2018_03_01.models.MultiMetricCriteria]
  name: list[$(python-base-namespace)MultiMetricCriteria]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.MultiMetricCriteria
    name: MultiMetricCriteria
    uid: .v2018_03_01.models.MultiMetricCriteria
  - fullName: ']'
    name: ']'
  uid: list[$(python-base-namespace).v2018_03_01.models.MultiMetricCriteria]
