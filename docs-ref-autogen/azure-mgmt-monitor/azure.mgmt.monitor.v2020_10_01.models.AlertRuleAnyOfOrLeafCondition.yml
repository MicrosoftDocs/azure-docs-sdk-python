### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2020_10_01.models.AlertRuleAnyOfOrLeafCondition
name: AlertRuleAnyOfOrLeafCondition
fullName: azure.mgmt.monitor.v2020_10_01.models.AlertRuleAnyOfOrLeafCondition
module: azure.mgmt.monitor.v2020_10_01.models
inheritances:
- azure.mgmt.monitor.v2020_10_01.models._models_py3.AlertRuleLeafCondition
summary: "An Activity Log Alert rule condition that is met when all its member conditions\
  \ are met.\nEach condition can be of one of the following types:\n**Important**:\
  \ Each type has its unique subset of properties. Properties from different types\
  \ CANNOT exist in one condition.\n\n* **Leaf Condition -** must contain 'field'\
  \ and either 'equals' or 'containsAny'. *Please note, 'anyOf' should **not** be\
  \ set in a Leaf Condition.* \n\n  * **AnyOf Condition -** must contain **only**\
  \ 'anyOf' (which is an array of Leaf Conditions). *Please note, 'field', 'equals'\
  \ and 'containsAny' should **not** be set in an AnyOf Condition.*. \n\n    ivar\
  \ field:\n       The name of the Activity Log event's field that this condition\
  \ will examine.\n       The possible values for this field are (case-insensitive):\
  \ 'resourceId', 'category', 'caller',\n       'level', 'operationName', 'resourceGroup',\
  \ 'resourceProvider', 'status', 'subStatus',\n       'resourceType', or anything\
  \ beginning with 'properties'.\n\n    vartype field:\n       str\n\n    ivar equals:\n\
  \       The value of the event's field will be compared to this value (case-insensitive)\n\
  \       to determine if the condition is met.\n\n    vartype equals:\n       str\n\
  \n    ivar contains_any:\n       The value of the event's field will be compared\
  \ to the values in this array\n       (case-insensitive) to determine if the condition\
  \ is met.\n\n    vartype contains_any:\n       list[str]\n\n    ivar any_of:\n \
  \      An Activity Log Alert rule condition that is met when at least one of its\
  \ member\n       leaf conditions are met.\n\n    vartype any_of:\n       list[~$(python-base-namespace).v2020_10_01.models.AlertRuleLeafCondition]"
constructor:
  syntax: 'AlertRuleAnyOfOrLeafCondition(*, field: Optional[str] = None, equals: Optional[str]
    = None, contains_any: Optional[List[str]] = None, any_of: Optional[List[_models.AlertRuleLeafCondition]]
    = None, **kwargs)'
