### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2019_11_01_preview.models.ExtensionDataSource
name: ExtensionDataSource
fullName: azure.mgmt.monitor.v2019_11_01_preview.models.ExtensionDataSource
module: azure.mgmt.monitor.v2019_11_01_preview.models
inheritances:
- msrest.serialization.Model
summary: "Definition of which data will be collected from a separate VM extension\
  \ that integrates with the Azure Monitor Agent.\nCollected from either Windows and\
  \ Linux machines, depending on which extension is defined.\n\n   All required parameters\
  \ must be populated in order to send to Azure.\n\n   param streams:\n      List\
  \ of streams that this data source will be sent to.\n      A stream indicates what\
  \ schema will be used for this data and usually what table in Log\n      Analytics\
  \ the data will be sent to.\n\n   type streams:\n      list[str or\n      ~$(python-base-namespace).v2019_11_01_preview.models.KnownExtensionDataSourceStreams]\n\
  \n   param extension_name:\n      Required. The name of the VM extension.\n\n  \
  \ type extension_name:\n      str\n\n   param extension_settings:\n      The extension\
  \ settings. The format is specific for particular\n      extension.\n\n   type extension_settings:\n\
  \      any\n\n   param input_data_sources:\n      The list of data sources this\
  \ extension needs data from.\n\n   type input_data_sources:\n      list[str]\n\n\
  \   param name:\n      A friendly name for the data source.\n      This name should\
  \ be unique across all data sources (regardless of type) within the data\n     \
  \ collection rule.\n\n   type name:\n      str"
constructor:
  syntax: 'ExtensionDataSource(*, extension_name: str, streams: Optional[List[Union[str,
    azure.mgmt.monitor.v2019_11_01_preview.models._monitor_management_client_enums.KnownExtensionDataSourceStreams]]]
    = None, extension_settings: Optional[Any] = None, input_data_sources: Optional[List[str]]
    = None, name: Optional[str] = None, **kwargs)'
