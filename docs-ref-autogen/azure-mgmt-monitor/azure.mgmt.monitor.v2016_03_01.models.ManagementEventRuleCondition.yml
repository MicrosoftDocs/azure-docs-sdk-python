### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.monitor.v2016_03_01.models.ManagementEventRuleCondition
  fullName: azure.mgmt.monitor.v2016_03_01.models.ManagementEventRuleCondition
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.monitor.v2016_03_01.models._models_py3.RuleCondition
  langs:
  - python
  module: azure.mgmt.monitor.v2016_03_01.models
  name: ManagementEventRuleCondition
  summary: 'A management event rule condition.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'ManagementEventRuleCondition(*, data_source: typing.Union[_ForwardRef(''RuleDataSource''),
      NoneType] = None, aggregation: typing.Union[_ForwardRef(''ManagementEventAggregationCondition''),
      NoneType] = None, **kwargs)'
    parameters:
    - description: 'Required. specifies the type of condition. This can be one of
        three types:

        ManagementEventRuleCondition (occurrences of management events), LocationThresholdRuleCondition

        (based on the number of failures of a web test), and ThresholdRuleCondition
        (based on the

        threshold of a metric).Constant filled by server.'
      id: odata_type
      type:
      - str
    - description: 'the resource from which the rule collects its data. For this type

        dataSource will always be of type RuleMetricDataSource.'
      id: data_source
      type:
      - $(python-base-namespace).v2016_03_01.models.RuleDataSource
    - description: "How the data that is collected should be combined over time and\
        \ when the\nalert is activated. Note that for management event alerts aggregation\
        \ is optional \u2013 if it is\nnot provided then any event will cause the\
        \ alert to activate."
      id: aggregation
      type:
      - $(python-base-namespace).v2016_03_01.models.ManagementEventAggregationCondition
  type: class
  uid: azure.mgmt.monitor.v2016_03_01.models.ManagementEventRuleCondition
references:
- fullName: $(python-base-namespace).v2016_03_01.models.RuleDataSource
  name: $(python-base-namespace)RuleDataSource
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2016_03_01.models.RuleDataSource
    name: RuleDataSource
    uid: .v2016_03_01.models.RuleDataSource
  uid: $(python-base-namespace).v2016_03_01.models.RuleDataSource
- fullName: $(python-base-namespace).v2016_03_01.models.ManagementEventAggregationCondition
  name: $(python-base-namespace)ManagementEventAggregationCondition
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2016_03_01.models.ManagementEventAggregationCondition
    name: ManagementEventAggregationCondition
    uid: .v2016_03_01.models.ManagementEventAggregationCondition
  uid: $(python-base-namespace).v2016_03_01.models.ManagementEventAggregationCondition
