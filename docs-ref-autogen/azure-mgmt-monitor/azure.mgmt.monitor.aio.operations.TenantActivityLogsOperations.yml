### YamlMime:PythonClass
uid: azure.mgmt.monitor.aio.operations.TenantActivityLogsOperations
name: TenantActivityLogsOperations
fullName: azure.mgmt.monitor.aio.operations.TenantActivityLogsOperations
module: azure.mgmt.monitor.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.monitor.aio.MonitorManagementClient>'s\n\
  >\n> <xref:tenant_activity_logs> attribute.\n>"
constructor:
  syntax: TenantActivityLogsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.monitor.aio.operations.TenantActivityLogsOperations.list
  name: list
  summary: 'Gets the Activity Logs for the Tenant.:code:>>`<<<br>`Everything that
    is applicable to the API

    to get the Activity Logs for the subscription is applicable to this API (the parameters,

    $filter, etc.).:code:>>`<<<br>`One thing to point out here is that this API does
    *not* retrieve

    the logs at the individual subscription of the tenant but only surfaces the logs
    that were

    generated at the tenant level.'
  signature: 'list(filter: str | None = None, select: str | None = None, **kwargs:
    Any) -> AsyncItemPaged[EventData]'
  parameters:
  - name: filter
    description: 'Reduces the set of data collected. `<br>`The **$filter** is very

      restricted and allows only the following patterns.:code:`<br>`- List events
      for a resource

      group: $filter=eventTimestamp ge ''`<Start Time>`'' and eventTimestamp le ''`<End
      Time>`'' and eventChannels eq ''Admin, Operation'' and resourceGroupName eq
      ''`<ResourceGroupName>`''.`<br>`- List events for resource: $filter=eventTimestamp

      ge ''`<Start Time>`'' and eventTimestamp le ''`<End Time>`'' and eventChannels
      eq

      ''Admin, Operation'' and resourceUri eq ''`<ResourceURI>`''.`<br>`- List events

      for a subscription: $filter=eventTimestamp ge ''`<Start Time>`'' and eventTimestamp
      le

      ''`<End Time>`'' and eventChannels eq ''Admin, Operation''.`<br>`- List events

      for a resource provider: $filter=eventTimestamp ge ''`<Start Time>`'' and eventTimestamp

      le ''`<End Time>`'' and eventChannels eq ''Admin, Operation'' and resourceProvider
      eq ''`<ResourceProviderName>`''.`<br>`- List events for a correlation Id:

      api-version=2014-04-01&$filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z''
      and

      eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and eventChannels eq ''Admin,
      Operation'' and

      correlationId eq ''`<CorrelationID>`''.`<br>`**NOTE**: No other syntax is

      allowed. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: 'Used to fetch events with only the given properties.:code:>>`<<<br>`The

      **$select** argument is a comma separated list of property names to be returned.
      Possible

      values are: *authorization*, *claims*, *correlationId*, *description*,

      *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*,

      *operationId*, *operationName*, *properties*, *resourceGroupName*,

      *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*,

      *subStatus*, *subscriptionId*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either EventData or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.monitor.models.EventData>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.monitor.aio.operations.TenantActivityLogsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.monitor.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv173\\Lib\\site-packages\\azure\\mgmt\\monitor\\models\\__init__.py'>
