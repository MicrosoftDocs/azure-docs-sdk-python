### YamlMime:PythonClass
uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations
name: NetworkWatchersOperations
fullName: azure.mgmt.network.aio.operations.NetworkWatchersOperations
module: azure.mgmt.network.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.network.aio.NetworkManagementClient>'s\n\
  >\n> <xref:network_watchers> attribute.\n>"
constructor:
  syntax: NetworkWatchersOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_check_connectivity
  name: begin_check_connectivity
  summary: 'Verifies the possibility of establishing a direct TCP connection from
    a virtual machine to a

    given endpoint including another VM or an arbitrary remote server.'
  signature: 'async begin_check_connectivity(resource_group_name: str, network_watcher_name:
    str, parameters: ConnectivityParameters | IO, **kwargs: Any) -> AsyncLROPoller[ConnectivityInformation]'
  parameters:
  - name: resource_group_name
    description: The name of the network watcher resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that determine how the connectivity check will be performed.
      Is

      either a ConnectivityParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.ConnectivityParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ConnectivityInformation
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.ConnectivityInformation>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_delete
  name: begin_delete
  summary: Deletes the specified network watcher resource.
  signature: 'async begin_delete(resource_group_name: str, network_watcher_name: str,
    **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
  name: begin_get_azure_reachability_report
  summary: 'NOTE: This feature is currently in preview and still being tested for
    stability. Gets the

    relative latency score for internet service providers from a specified location
    to Azure

    regions.'
  signature: 'async begin_get_azure_reachability_report(resource_group_name: str,
    network_watcher_name: str, parameters: AzureReachabilityReportParameters | IO,
    **kwargs: Any) -> AsyncLROPoller[AzureReachabilityReport]'
  parameters:
  - name: resource_group_name
    description: The name of the network watcher resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that determine Azure reachability report configuration.
      Is either

      a AzureReachabilityReportParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.AzureReachabilityReportParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either AzureReachabilityReport
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.AzureReachabilityReport>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
  name: begin_get_flow_log_status
  summary: Queries status of flow log and traffic analytics (optional) on a specified
    resource.
  signature: 'async begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
    str, parameters: FlowLogStatusParameters | IO, **kwargs: Any) -> AsyncLROPoller[FlowLogInformation]'
  parameters:
  - name: resource_group_name
    description: The name of the network watcher resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define a resource to query flow log and traffic
      analytics

      (optional) status. Is either a FlowLogStatusParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.FlowLogStatusParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either FlowLogInformation
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.FlowLogInformation>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
  name: begin_get_network_configuration_diagnostic
  summary: 'Gets Network Configuration Diagnostic data to help customers understand
    and debug network

    behavior. It provides detailed information on what security rules were applied
    to a specified

    traffic flow and the result of evaluating these rules. Customers must provide
    details of a flow

    like source, destination, protocol, etc. The API returns whether traffic was allowed
    or denied,

    the rules evaluated for the specified flow and the evaluation results.'
  signature: 'begin_get_network_configuration_diagnostic(resource_group_name: str,
    network_watcher_name: str, parameters: NetworkConfigurationDiagnosticParameters
    | IO, **kwargs: Any) -> AsyncLROPoller[NetworkConfigurationDiagnosticResponse]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters to get network configuration diagnostic. Is either a

      NetworkConfigurationDiagnosticParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.NetworkConfigurationDiagnosticParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either

      NetworkConfigurationDiagnosticResponse or the result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.NetworkConfigurationDiagnosticResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_next_hop
  name: begin_get_next_hop
  summary: Gets the next hop from the specified VM.
  signature: 'async begin_get_next_hop(resource_group_name: str, network_watcher_name:
    str, parameters: NextHopParameters | IO, **kwargs: Any) -> AsyncLROPoller[NextHopResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the source and destination endpoint. Is either
      a

      NextHopParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.NextHopParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either NextHopResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.NextHopResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
  name: begin_get_troubleshooting
  summary: Initiate troubleshooting on a specified resource.
  signature: 'async begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
    str, parameters: TroubleshootingParameters | IO, **kwargs: Any) -> AsyncLROPoller[TroubleshootingResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the resource to troubleshoot. Is either a

      TroubleshootingParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.TroubleshootingParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either TroubleshootingResult
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.TroubleshootingResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
  name: begin_get_troubleshooting_result
  summary: Get the last completed troubleshooting result on a specified resource.
  signature: 'async begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
    str, parameters: QueryTroubleshootingParameters | IO, **kwargs: Any) -> AsyncLROPoller[TroubleshootingResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the resource to query the troubleshooting
      result. Is

      either a QueryTroubleshootingParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.QueryTroubleshootingParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either TroubleshootingResult
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.TroubleshootingResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
  name: begin_get_vm_security_rules
  summary: Gets the configured and effective security group rules on the specified
    VM.
  signature: 'async begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
    str, parameters: SecurityGroupViewParameters | IO, **kwargs: Any) -> AsyncLROPoller[SecurityGroupViewResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the VM to check security groups for. Is either
      a

      SecurityGroupViewParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.SecurityGroupViewParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SecurityGroupViewResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.SecurityGroupViewResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_list_available_providers
  name: begin_list_available_providers
  summary: 'NOTE: This feature is currently in preview and still being tested for
    stability. Lists all

    available internet service providers for a specified Azure region.'
  signature: 'async begin_list_available_providers(resource_group_name: str, network_watcher_name:
    str, parameters: AvailableProvidersListParameters | IO, **kwargs: Any) -> AsyncLROPoller[AvailableProvidersList]'
  parameters:
  - name: resource_group_name
    description: The name of the network watcher resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that scope the list of available providers. Is either
      a

      AvailableProvidersListParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.AvailableProvidersListParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either AvailableProvidersList
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.AvailableProvidersList>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
  name: begin_set_flow_log_configuration
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  signature: 'async begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
    str, parameters: FlowLogInformation | IO, **kwargs: Any) -> AsyncLROPoller[FlowLogInformation]'
  parameters:
  - name: resource_group_name
    description: The name of the network watcher resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the configuration of flow log. Is either
      a

      FlowLogInformation type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.FlowLogInformation>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either FlowLogInformation
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.FlowLogInformation>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
  name: begin_verify_ip_flow
  summary: Verify IP flow from the specified VM to a location given the currently
    configured NSG rules.
  signature: 'async begin_verify_ip_flow(resource_group_name: str, network_watcher_name:
    str, parameters: VerificationIPFlowParameters | IO, **kwargs: Any) -> AsyncLROPoller[VerificationIPFlowResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the IP flow to be verified. Is either a

      VerificationIPFlowParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.VerificationIPFlowParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either VerificationIPFlowResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.VerificationIPFlowResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.create_or_update
  name: create_or_update
  summary: Creates or updates a network watcher in the specified resource group.
  signature: 'async create_or_update(resource_group_name: str, network_watcher_name:
    str, parameters: NetworkWatcher | IO, **kwargs: Any) -> NetworkWatcher'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the network watcher resource. Is either a

      NetworkWatcher type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.NetworkWatcher>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NetworkWatcher or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.NetworkWatcher>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.get
  name: get
  summary: Gets the specified network watcher by resource group.
  signature: 'async get(resource_group_name: str, network_watcher_name: str, **kwargs:
    Any) -> NetworkWatcher'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NetworkWatcher or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.NetworkWatcher>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.get_topology
  name: get_topology
  summary: Gets the current network topology by resource group.
  signature: 'async get_topology(resource_group_name: str, network_watcher_name: str,
    parameters: TopologyParameters | IO, **kwargs: Any) -> Topology'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define the representation of topology. Is either
      a

      TopologyParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.TopologyParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Topology or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.Topology>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.list
  name: list
  summary: Gets all network watchers by resource group.
  signature: 'list(resource_group_name: str, **kwargs: Any) -> AsyncIterable[NetworkWatcher]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NetworkWatcher or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.models.NetworkWatcher>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.list_all
  name: list_all
  summary: Gets all network watchers by subscription.
  signature: 'list_all(**kwargs: Any) -> AsyncIterable[NetworkWatcher]'
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NetworkWatcher or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.models.NetworkWatcher>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.update_tags
  name: update_tags
  summary: Updates a network watcher tags.
  signature: 'async update_tags(resource_group_name: str, network_watcher_name: str,
    parameters: TagsObject | IO, **kwargs: Any) -> NetworkWatcher'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: network_watcher_name
    description: The name of the network watcher. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to update network watcher tags. Is either a
      TagsObject

      type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.TagsObject>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NetworkWatcher or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.NetworkWatcher>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.network.aio.operations.NetworkWatchersOperations.models
  name: models
  signature: models = <module 'azure.mgmt.network.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\network\\models\\__init__.py'>
