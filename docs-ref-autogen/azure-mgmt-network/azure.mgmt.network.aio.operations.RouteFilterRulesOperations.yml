### YamlMime:PythonClass
uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations
name: RouteFilterRulesOperations
fullName: azure.mgmt.network.aio.operations.RouteFilterRulesOperations
module: azure.mgmt.network.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.network.aio.NetworkManagementClient>'s\n\
  >\n> <xref:route_filter_rules> attribute.\n>"
constructor:
  syntax: RouteFilterRulesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates a route in the specified route filter.
  signature: 'async begin_create_or_update(resource_group_name: str, route_filter_name:
    str, rule_name: str, route_filter_rule_parameters: _models.RouteFilterRule, *,
    content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.RouteFilterRule]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: route_filter_name
    description: The name of the route filter. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: rule_name
    description: The name of the route filter rule. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: route_filter_rule_parameters
    description: 'Parameters supplied to the create or update route filter

      rule operation. Is either a RouteFilterRule type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.RouteFilterRule>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either RouteFilterRule
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.RouteFilterRule>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations.begin_delete
  name: begin_delete
  summary: Deletes the specified rule from a route filter.
  signature: 'async begin_delete(resource_group_name: str, route_filter_name: str,
    rule_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: route_filter_name
    description: The name of the route filter. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: rule_name
    description: The name of the rule. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations.get
  name: get
  summary: Gets the specified rule from a route filter.
  signature: 'async get(resource_group_name: str, route_filter_name: str, rule_name:
    str, **kwargs: Any) -> RouteFilterRule'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: route_filter_name
    description: The name of the route filter. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: rule_name
    description: The name of the rule. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RouteFilterRule or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.RouteFilterRule>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations.list_by_route_filter
  name: list_by_route_filter
  summary: Gets all RouteFilterRules in a route filter.
  signature: 'list_by_route_filter(resource_group_name: str, route_filter_name: str,
    **kwargs: Any) -> AsyncIterable[RouteFilterRule]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: route_filter_name
    description: The name of the route filter. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either RouteFilterRule or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.models.RouteFilterRule>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.network.aio.operations.RouteFilterRulesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.network.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv174\\Lib\\site-packages\\azure\\mgmt\\network\\models\\__init__.py'>
