### YamlMime:PythonClass
uid: azure.mgmt.network.operations.VpnSitesOperations
name: VpnSitesOperations
fullName: azure.mgmt.network.operations.VpnSitesOperations
module: azure.mgmt.network.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.network.NetworkManagementClient>'s\n\
  >\n> <xref:vpn_sites> attribute.\n>"
constructor:
  syntax: VpnSitesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.network.operations.VpnSitesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates a VpnSite resource if it doesn't exist else updates the existing
    VpnSite.
  signature: 'begin_create_or_update(resource_group_name: str, vpn_site_name: str,
    vpn_site_parameters: _models.VpnSite, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.VpnSite]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the VpnSite. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_name
    description: The name of the VpnSite being created or updated. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_parameters
    description: 'Parameters supplied to create or update VpnSite. Is either a

      VpnSite type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.VpnSite>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either VpnSite or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.network.models.VpnSite>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.operations.VpnSitesOperations.begin_delete
  name: begin_delete
  summary: Deletes a VpnSite.
  signature: 'begin_delete(resource_group_name: str, vpn_site_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the VpnSite. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_name
    description: The name of the VpnSite being deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.operations.VpnSitesOperations.get
  name: get
  summary: Retrieves the details of a VPN site.
  signature: 'get(resource_group_name: str, vpn_site_name: str, **kwargs: Any) ->
    VpnSite'
  parameters:
  - name: resource_group_name
    description: The resource group name of the VpnSite. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_name
    description: The name of the VpnSite being retrieved. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VpnSite or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.VpnSite>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.operations.VpnSitesOperations.list
  name: list
  summary: Lists all the VpnSites in a subscription.
  signature: 'list(**kwargs: Any) -> Iterable[VpnSite]'
  return:
    description: An iterator like instance of either VpnSite or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.network.models.VpnSite>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.operations.VpnSitesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Lists all the vpnSites in a resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[VpnSite]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the VpnSite. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either VpnSite or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.network.models.VpnSite>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.operations.VpnSitesOperations.update_tags
  name: update_tags
  summary: Updates VpnSite tags.
  signature: 'update_tags(resource_group_name: str, vpn_site_name: str, vpn_site_parameters:
    _models.TagsObject, *, content_type: str = ''application/json'', **kwargs: Any)
    -> _models.VpnSite'
  parameters:
  - name: resource_group_name
    description: The resource group name of the VpnSite. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_name
    description: The name of the VpnSite being updated. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: vpn_site_parameters
    description: 'Parameters supplied to update VpnSite tags. Is either a TagsObject

      type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.TagsObject>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: VpnSite or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.VpnSite>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.network.operations.VpnSitesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.network.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv176\\Lib\\site-packages\\azure\\mgmt\\network\\models\\__init__.py'>
