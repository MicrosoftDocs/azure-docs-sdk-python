### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.network.v2019_11_01.models.ConnectivityIssue
  fullName: azure.mgmt.network.v2019_11_01.models.ConnectivityIssue
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.network.v2019_11_01.models
  name: ConnectivityIssue
  summary: 'Information about an issue encountered in the process of checking for

    connectivity.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: ConnectivityIssue(**kwargs) -> None
    variables:
    - description: 'The origin of the issue. Possible values include: ''Local'',

        ''Inbound'', ''Outbound'''
      id: origin
      type:
      - str
      - azure.mgmt.network.v2019_11_01.models.Origin
    - description: 'The severity of the issue. Possible values include:

        ''Error'', ''Warning'''
      id: severity
      type:
      - str
      - azure.mgmt.network.v2019_11_01.models.Severity
    - description: 'The type of issue. Possible values include: ''Unknown'',

        ''AgentStopped'', ''GuestFirewall'', ''DnsResolution'', ''SocketBind'',

        ''NetworkSecurityRule'', ''UserDefinedRoute'', ''PortThrottled'', ''Platform'''
      id: type
      type:
      - str
      - azure.mgmt.network.v2019_11_01.models.IssueType
    - description: Provides additional context on the issue.
      id: context
      type:
      - list[dict[str, str]]
  type: class
  uid: azure.mgmt.network.v2019_11_01.models.ConnectivityIssue
references:
- fullName: list[dict[str, str]]
  name: list[dict[str, str]]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: list[dict[str, str]]
