### YamlMime:PythonClass
uid: azure.mgmt.network.v2019_02_01.aio.operations.PeerExpressRouteCircuitConnectionsOperations
name: PeerExpressRouteCircuitConnectionsOperations
fullName: azure.mgmt.network.v2019_02_01.aio.operations.PeerExpressRouteCircuitConnectionsOperations
module: azure.mgmt.network.v2019_02_01.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.network.v2019_02_01.aio.NetworkManagementClient>'s\n\
  >\n> <xref:peer_express_route_circuit_connections> attribute.\n>"
constructor:
  syntax: PeerExpressRouteCircuitConnectionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.network.v2019_02_01.aio.operations.PeerExpressRouteCircuitConnectionsOperations.get
  name: get
  summary: 'Gets the specified Peer Express Route Circuit Connection from the specified
    express route

    circuit.'
  signature: 'async get(resource_group_name: str, circuit_name: str, peering_name:
    str, connection_name: str, **kwargs: Any) -> PeerExpressRouteCircuitConnection'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: circuit_name
    description: The name of the express route circuit. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: peering_name
    description: The name of the peering. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: connection_name
    description: The name of the peer express route circuit connection. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PeerExpressRouteCircuitConnection or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.v2019_02_01.models.PeerExpressRouteCircuitConnection>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.v2019_02_01.aio.operations.PeerExpressRouteCircuitConnectionsOperations.list
  name: list
  summary: 'Gets all global reach peer connections associated with a private peering
    in an express route

    circuit.'
  signature: 'list(resource_group_name: str, circuit_name: str, peering_name: str,
    **kwargs: Any) -> AsyncIterable[PeerExpressRouteCircuitConnection]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: circuit_name
    description: The name of the circuit. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: peering_name
    description: The name of the peering. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.network.v2019_02_01.aio.operations.str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either PeerExpressRouteCircuitConnection
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.v2019_02_01.models.PeerExpressRouteCircuitConnection>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.network.v2019_02_01.aio.operations.PeerExpressRouteCircuitConnectionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.network.v2019_02_01.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.1\\x64\\Lib\\site-packages\\azure\\mgmt\\network\\v2019_02_01\\models\\__init__.py'>
