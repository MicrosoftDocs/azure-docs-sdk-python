### YamlMime:PythonClass
uid: azure.mgmt.network.aio.operations.LoadBalancersOperations
name: LoadBalancersOperations
fullName: azure.mgmt.network.aio.operations.LoadBalancersOperations
module: azure.mgmt.network.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.network.aio.NetworkManagementClient>'s\n\
  >\n> <xref:load_balancers> attribute.\n>"
constructor:
  syntax: LoadBalancersOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates a load balancer.
  signature: 'async begin_create_or_update(resource_group_name: str, load_balancer_name:
    str, parameters: _models.LoadBalancer, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.LoadBalancer]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the create or update load balancer operation.
      Is

      either a LoadBalancer type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.LoadBalancer>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either LoadBalancer or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.LoadBalancer>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.begin_delete
  name: begin_delete
  summary: Deletes the specified load balancer.
  signature: 'async begin_delete(resource_group_name: str, load_balancer_name: str,
    **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.begin_list_inbound_nat_rule_port_mappings
  name: begin_list_inbound_nat_rule_port_mappings
  summary: List of inbound NAT rule port mappings.
  signature: 'async begin_list_inbound_nat_rule_port_mappings(group_name: str, load_balancer_name:
    str, backend_pool_name: str, parameters: _models.QueryInboundNatRulePortMappingRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.BackendAddressInboundNatRulePortMappings]'
  parameters:
  - name: group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backend_pool_name
    description: The name of the load balancer backend address pool. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Query inbound NAT rule port mapping request. Is either a

      QueryInboundNatRulePortMappingRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.QueryInboundNatRulePortMappingRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either

      BackendAddressInboundNatRulePortMappings or the result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.network.models.BackendAddressInboundNatRulePortMappings>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.begin_swap_public_ip_addresses
  name: begin_swap_public_ip_addresses
  summary: Swaps VIPs between two load balancers.
  signature: 'async begin_swap_public_ip_addresses(location: str, parameters: _models.LoadBalancerVipSwapRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: location
    description: The region where load balancers are located at. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters that define which VIPs should be swapped. Is either a

      LoadBalancerVipSwapRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.LoadBalancerVipSwapRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.get
  name: get
  summary: Gets the specified load balancer.
  signature: 'async get(resource_group_name: str, load_balancer_name: str, *, expand:
    str | None = None, **kwargs: Any) -> LoadBalancer'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: expand
    description: Expands referenced resources. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: LoadBalancer or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.LoadBalancer>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.list
  name: list
  summary: Gets all the load balancers in a resource group.
  signature: 'list(resource_group_name: str, **kwargs: Any) -> AsyncIterable[LoadBalancer]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either LoadBalancer or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.models.LoadBalancer>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.list_all
  name: list_all
  summary: Gets all the load balancers in a subscription.
  signature: 'list_all(**kwargs: Any) -> AsyncIterable[LoadBalancer]'
  return:
    description: An iterator like instance of either LoadBalancer or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.network.models.LoadBalancer>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.migrate_to_ip_based
  name: migrate_to_ip_based
  summary: Migrate load balancer to IP Based.
  signature: 'async migrate_to_ip_based(group_name: str, load_balancer_name: str,
    parameters: _models.MigrateLoadBalancerToIpBasedRequest | None = None, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.MigratedPools'
  parameters:
  - name: group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the migrateToIpBased Api. Is either a

      MigrateLoadBalancerToIpBasedRequest type or a IO[bytes] type. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.network.models.MigrateLoadBalancerToIpBasedRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: MigratedPools or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.MigratedPools>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.update_tags
  name: update_tags
  summary: Updates a load balancer tags.
  signature: 'async update_tags(resource_group_name: str, load_balancer_name: str,
    parameters: _models.TagsObject, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.LoadBalancer'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: load_balancer_name
    description: The name of the load balancer. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to update load balancer tags. Is either a TagsObject

      type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.network.models.TagsObject>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: LoadBalancer or the result of cls(response)
    types:
    - <xref:azure.mgmt.network.models.LoadBalancer>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.network.aio.operations.LoadBalancersOperations.models
  name: models
  signature: models = <module 'azure.mgmt.network.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.10\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv167\\Lib\\site-packages\\azure\\mgmt\\network\\models\\__init__.py'>
