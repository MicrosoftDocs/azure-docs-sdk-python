### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
  - azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
  class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: ReviewsOperations
  summary: ReviewsOperations operations.
  syntax:
    content: ReviewsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The content type. Constant value: "text/plain".'
      id: content_type
  type: class
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: add_video_frame(team_name, review_id, timescale=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: add_video_frame
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    <h3>CallBack Schemas </h3>

    <h4>Review Completion CallBack Sample</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>.'
  syntax:
    content: add_video_frame(team_name, review_id, timescale=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Timescale of the video you are adding frames to.
      id: timescale
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: add_video_frame_stream(content_type, team_name, review_id, frame_image_zip,
    frame_metadata, timescale=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add_video_frame_stream
  summary: 'Use this method to add frames for a video review.Timescale: This

    parameter is a factor which is used to convert the timestamp on a frame

    into milliseconds. Timescale is provided in the output of the Content

    Moderator video media processor on the Azure Media Services

    platform.Timescale in the Video Moderation output is Ticks/Second.'
  syntax:
    content: add_video_frame_stream(content_type, team_name, review_id, frame_image_zip,
      frame_metadata, timescale=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The content type.
      id: content_type
      isRequired: true
      type:
      - str
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - description: Zip file containing frame images.
      id: frame_image_zip
      isRequired: true
      type:
      - Generator
    - description: Metadata of the frame.
      id: frame_metadata
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Timescale of the video .
      id: timescale
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: add_video_frame_url(content_type, team_name, review_id, video_frame_body,
    timescale=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add_video_frame_url
  summary: 'Use this method to add frames for a video review.Timescale: This

    parameter is a factor which is used to convert the timestamp on a frame

    into milliseconds. Timescale is provided in the output of the Content

    Moderator video media processor on the Azure Media Services

    platform.Timescale in the Video Moderation output is Ticks/Second.'
  syntax:
    content: add_video_frame_url(content_type, team_name, review_id, video_frame_body,
      timescale=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The content type.
      id: content_type
      isRequired: true
      type:
      - str
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - description: Body for add video frames API
      id: video_frame_body
      isRequired: true
      type:
      - list[azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem]
    - defaultValue: None
      description: Timescale of the video.
      id: timescale
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: add_video_transcript(team_name, review_id, vt_tfile, custom_headers=None,
    raw=False, callback=None, **operation_config)
  namewithoutparameters: add_video_transcript
  summary: 'This API adds a transcript file (text version of all the words spoken

    in a video) to a video review. The file should be a valid WebVTT

    format.'
  syntax:
    content: add_video_transcript(team_name, review_id, vt_tfile, custom_headers=None,
      raw=False, callback=None, **operation_config)
    parameters:
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - description: Transcript file of the video.
      id: vt_tfile
      isRequired: true
      type:
      - Generator
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: add_video_transcript_moderation_result(content_type, team_name, review_id,
    transcript_moderation_body, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add_video_transcript_moderation_result
  summary: 'This API adds a transcript screen text result file for a video review.

    Transcript screen text result file is a result of Screen Text API . In

    order to generate transcript screen text result file , a transcript

    file has to be screened for profanity using Screen Text API.'
  syntax:
    content: add_video_transcript_moderation_result(content_type, team_name, review_id,
      transcript_moderation_body, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The content type.
      id: content_type
      isRequired: true
      type:
      - str
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - description: 'Body for add video transcript

        moderation result API'
      id: transcript_moderation_body
      isRequired: true
      type:
      - list[azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: create_job(team_name, content_type, content_id, workflow_name, job_content_type,
    content_value, call_back_endpoint=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_job
  summary: 'A job Id will be returned for the content posted on this endpoint.

    Once the content is evaluated against the Workflow provided the review

    will be created or ignored based on the workflow expression.

    <h3>CallBack Schemas </h3>

    <p>

    <h4>Job Completion CallBack Sample</h4><br/>

    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "<Review Id, if the Job resulted in a Review to be

    created>",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "<This will be one of Complete, InProgress, Error>",<br/>

    "ContentType": "Image",<br/>

    "ContentId": "<This is the ContentId that was specified on

    input>",<br/>

    "CallBackType": "Job",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>

    <p>

    <h4>Review Completion CallBack Sample</h4><br/>

    {

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>.'
  syntax:
    content: create_job(team_name, content_type, content_id, workflow_name, job_content_type,
      content_value, call_back_endpoint=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: 'Image, Text or Video. Possible values include:

        ''Image'', ''Text'', ''Video'''
      id: content_type
      isRequired: true
      type:
      - str
    - description: Id/Name to identify the content submitted.
      id: content_id
      isRequired: true
      type:
      - str
    - description: Workflow Name that you want to invoke.
      id: workflow_name
      isRequired: true
      type:
      - str
    - description: 'The content type. Possible values include:

        ''application/json'', ''image/jpeg'''
      id: job_content_type
      isRequired: true
      type:
      - str
    - description: Content to evaluate for a job.
      id: content_value
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Callback endpoint for posting the create

        job result.'
      id: call_back_endpoint
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: JobId or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.JobId
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: create_reviews(url_content_type, team_name, create_review_body, sub_team=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_reviews
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    <h3>CallBack Schemas </h3>

    <h4>Review Completion CallBack Sample</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>.'
  syntax:
    content: create_reviews(url_content_type, team_name, create_review_body, sub_team=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The content type.
      id: url_content_type
      isRequired: true
      type:
      - str
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Body for create reviews API
      id: create_review_body
      isRequired: true
      type:
      - list[azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem]
    - defaultValue: None
      description: 'SubTeam of your team, you want to assign the created

        review to.'
      id: sub_team
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[str]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: create_video_reviews(content_type, team_name, create_video_reviews_body, sub_team=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_video_reviews
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    <h3>CallBack Schemas </h3>

    <h4>Review Completion CallBack Sample</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>.'
  syntax:
    content: create_video_reviews(content_type, team_name, create_video_reviews_body,
      sub_team=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The content type.
      id: content_type
      isRequired: true
      type:
      - str
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Body for create reviews API
      id: create_video_reviews_body
      isRequired: true
      type:
      - list[azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem]
    - defaultValue: None
      description: 'SubTeam of your team, you want to assign the created

        review to.'
      id: sub_team
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[str]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: get_job_details(team_name, job_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_job_details
  summary: Get the Job Details for a Job Id.
  syntax:
    content: get_job_details(team_name, job_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Your Team Name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the job.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Job or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.Job
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: get_review(team_name, review_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_review
  summary: Returns review details for the review Id passed.
  syntax:
    content: get_review(team_name, review_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Your Team Name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Review or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.Review
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: get_video_frames(team_name, review_id, start_seed=None, no_of_records=None,
    filter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_video_frames
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    <h3>CallBack Schemas </h3>

    <h4>Review Completion CallBack Sample</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadata": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>

    </p>.'
  syntax:
    content: get_video_frames(team_name, review_id, start_seed=None, no_of_records=None,
      filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Time stamp of the frame from where you want to

        start fetching the frames.'
      id: start_seed
      type:
      - int
    - defaultValue: None
      description: Number of frames to fetch.
      id: no_of_records
      type:
      - int
    - defaultValue: None
      description: Get frames filtered by tags.
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Frames or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.Frames
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: publish_video_review(team_name, review_id, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: publish_video_review
  summary: Publish video review to make it available for review.
  syntax:
    content: publish_video_review(team_name, review_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Your team name.
      id: team_name
      isRequired: true
      type:
      - str
    - description: Id of the review.
      id: review_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
- class: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.contentmoderator.models'
      from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\contentmoderator\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
references:
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
  isExternal: false
  name: add_video_frame(team_name, review_id, timescale=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
  isExternal: false
  name: add_video_frame_stream(content_type, team_name, review_id, frame_image_zip,
    frame_metadata, timescale=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
  isExternal: false
  name: add_video_frame_url(content_type, team_name, review_id, video_frame_body,
    timescale=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
  isExternal: false
  name: add_video_transcript(team_name, review_id, vt_tfile, custom_headers=None,
    raw=False, callback=None, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
  isExternal: false
  name: add_video_transcript_moderation_result(content_type, team_name, review_id,
    transcript_moderation_body, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
  isExternal: false
  name: create_job(team_name, content_type, content_id, workflow_name, job_content_type,
    content_value, call_back_endpoint=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
  isExternal: false
  name: create_reviews(url_content_type, team_name, create_review_body, sub_team=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
  isExternal: false
  name: create_video_reviews(content_type, team_name, create_video_reviews_body, sub_team=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
  isExternal: false
  name: get_job_details(team_name, job_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
  isExternal: false
  name: get_review(team_name, review_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
  isExternal: false
  name: get_video_frames(team_name, review_id, start_seed=None, no_of_records=None,
    filter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
  isExternal: false
  name: publish_video_review(team_name, review_id, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
- fullName: list[azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem]
  name: list[VideoFrameBodyItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem
    name: VideoFrameBodyItem
    uid: azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem]
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: list[azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem]
  name: list[TranscriptModerationBodyItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem
    name: TranscriptModerationBodyItem
    uid: azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem]
- fullName: list[azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem]
  name: list[CreateReviewBodyItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem
    name: CreateReviewBodyItem
    uid: azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem]
  name: list[CreateVideoReviewsBodyItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem
    name: CreateVideoReviewsBodyItem
    uid: azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem]
