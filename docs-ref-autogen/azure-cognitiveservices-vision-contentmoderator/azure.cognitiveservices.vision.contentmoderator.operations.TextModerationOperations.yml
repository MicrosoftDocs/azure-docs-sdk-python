### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.detect_language
  - azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.screen_text
  - azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.models
  class: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations
  name: TextModerationOperations
  summary: TextModerationOperations operations.
  syntax:
    content: TextModerationOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
- class: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.detect_language
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations
  name: detect_language(text_content_type, text_content, custom_headers=None, raw=False,
    callback=None, **operation_config)
  namewithoutparameters: detect_language
  summary: 'This operation will detect the language of given input content. Returns

    the <a href="[http://www-01.sil.org/iso639-3/codes.asp](http://www-01.sil.org/iso639-3/codes.asp)">ISO
    639-3

    code</a> for the predominant language comprising the submitted text.

    Over 110 languages supported.'
  syntax:
    content: detect_language(text_content_type, text_content, custom_headers=None,
      raw=False, callback=None, **operation_config)
    parameters:
    - description: 'The content type. Possible values include:

        ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown'''
      id: text_content_type
      isRequired: true
      type:
      - str
    - description: Content to screen.
      id: text_content
      isRequired: true
      type:
      - Generator
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DetectedLanguage or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.DetectedLanguage
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.detect_language
- class: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.screen_text
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations
  name: screen_text(text_content_type, text_content, language=None, autocorrect=False,
    pii=False, list_id=None, classify=False, custom_headers=None, raw=False, callback=None,
    **operation_config)
  namewithoutparameters: screen_text
  summary: 'Detect profanity and match against custom and shared blacklists.


    Detects profanity in more than 100 languages and match against custom

    and shared blacklists.'
  syntax:
    content: screen_text(text_content_type, text_content, language=None, autocorrect=False,
      pii=False, list_id=None, classify=False, custom_headers=None, raw=False, callback=None,
      **operation_config)
    parameters:
    - description: 'The content type. Possible values include:

        ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown'''
      id: text_content_type
      isRequired: true
      type:
      - str
    - description: Content to screen.
      id: text_content
      isRequired: true
      type:
      - Generator
    - defaultValue: None
      description: Language of the text.
      id: language
      type:
      - str
    - defaultValue: 'False'
      description: Autocorrect text.
      id: autocorrect
      type:
      - bool
    - defaultValue: 'False'
      description: Detect personal identifiable information.
      id: pii
      type:
      - bool
    - defaultValue: None
      description: The list Id.
      id: list_id
      type:
      - str
    - defaultValue: 'False'
      description: Classify input.
      id: classify
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Screen or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.contentmoderator.models.Screen
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.screen_text
- class: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.contentmoderator.operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.contentmoderator.models'
      from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\contentmoderator\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.models
references:
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.detect_language
  isExternal: false
  name: detect_language(text_content_type, text_content, custom_headers=None, raw=False,
    callback=None, **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.detect_language
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.screen_text
  isExternal: false
  name: screen_text(text_content_type, text_content, language=None, autocorrect=False,
    pii=False, list_id=None, classify=False, custom_headers=None, raw=False, callback=None,
    **operation_config)
  parent: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.screen_text
- fullName: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations
  uid: azure.cognitiveservices.vision.contentmoderator.operations.TextModerationOperations.models
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
