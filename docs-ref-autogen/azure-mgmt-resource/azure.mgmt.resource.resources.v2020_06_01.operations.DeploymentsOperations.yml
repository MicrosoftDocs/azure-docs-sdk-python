### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.calculate_template_hash
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_by_resource_group
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_management_group_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_subscription_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_tenant_scope
  - azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.models
  class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: DeploymentsOperations
  summary: 'DeploymentsOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: DeploymentsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2020-06-01".'
      id: api_version
  type: class
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.calculate_template_hash
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: calculate_template_hash(template, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: calculate_template_hash
  summary: Calculate the hash of the given template.
  syntax:
    content: calculate_template_hash(template, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The template provided to calculate hash.
      id: template
      isRequired: true
      type:
      - object
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: TemplateHashResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.TemplateHashResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.calculate_template_hash
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: cancel(resource_group_name, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: cancel
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted

    or Running. After the deployment is canceled, the provisioningState is

    set to Canceled. Canceling a template deployment stops the currently

    running template deployment and leaves the resource group partially

    deployed.'
  syntax:
    content: cancel(resource_group_name, deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: cancel_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: cancel_at_management_group_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted

    or Running. After the deployment is canceled, the provisioningState is

    set to Canceled. Canceling a template deployment stops the currently

    running template deployment and leaves the resources partially

    deployed.'
  syntax:
    content: cancel_at_management_group_scope(group_id, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: cancel_at_scope(scope, deployment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: cancel_at_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted

    or Running. After the deployment is canceled, the provisioningState is

    set to Canceled. Canceling a template deployment stops the currently

    running template deployment and leaves the resources partially

    deployed.'
  syntax:
    content: cancel_at_scope(scope, deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: cancel_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: cancel_at_subscription_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted

    or Running. After the deployment is canceled, the provisioningState is

    set to Canceled. Canceling a template deployment stops the currently

    running template deployment and leaves the resources partially

    deployed.'
  syntax:
    content: cancel_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: cancel_at_tenant_scope(deployment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: cancel_at_tenant_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted

    or Running. After the deployment is canceled, the provisioningState is

    set to Canceled. Canceling a template deployment stops the currently

    running template deployment and leaves the resources partially

    deployed.'
  syntax:
    content: cancel_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: check_existence(resource_group_name, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: check_existence
  summary: Checks whether the deployment exists.
  syntax:
    content: check_existence(resource_group_name, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group with the

        deployment to check. The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: check_existence_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: check_existence_at_management_group_scope
  summary: Checks whether the deployment exists.
  syntax:
    content: check_existence_at_management_group_scope(group_id, deployment_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: check_existence_at_scope(scope, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: check_existence_at_scope
  summary: Checks whether the deployment exists.
  syntax:
    content: check_existence_at_scope(scope, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: check_existence_at_subscription_scope(deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: check_existence_at_subscription_scope
  summary: Checks whether the deployment exists.
  syntax:
    content: check_existence_at_subscription_scope(deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: check_existence_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: check_existence_at_tenant_scope
  summary: Checks whether the deployment exists.
  syntax:
    content: check_existence_at_tenant_scope(deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: create_or_update(resource_group_name, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Deploys resources to a resource group.


    You can provide the template and parameters directly in the request or

    link to JSON files.'
  syntax:
    content: create_or_update(resource_group_name, deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group to deploy

        the resources to. The name is case insensitive. The resource group

        must already exist.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DeploymentExtended or

        ClientRawResponse<DeploymentExtended> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: create_or_update_at_management_group_scope(group_id, deployment_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update_at_management_group_scope
  summary: 'Deploys resources at management group scope.


    You can provide the template and parameters directly in the request or

    link to JSON files.'
  syntax:
    content: create_or_update_at_management_group_scope(group_id, deployment_name,
      parameters, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.ScopedDeployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DeploymentExtended or

        ClientRawResponse<DeploymentExtended> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: create_or_update_at_scope(scope, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update_at_scope
  summary: 'Deploys resources at a given scope.


    You can provide the template and parameters directly in the request or

    link to JSON files.'
  syntax:
    content: create_or_update_at_scope(scope, deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DeploymentExtended or

        ClientRawResponse<DeploymentExtended> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: create_or_update_at_subscription_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update_at_subscription_scope
  summary: 'Deploys resources at subscription scope.


    You can provide the template and parameters directly in the request or

    link to JSON files.'
  syntax:
    content: create_or_update_at_subscription_scope(deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DeploymentExtended or

        ClientRawResponse<DeploymentExtended> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: create_or_update_at_tenant_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update_at_tenant_scope
  summary: 'Deploys resources at tenant scope.


    You can provide the template and parameters directly in the request or

    link to JSON files.'
  syntax:
    content: create_or_update_at_tenant_scope(deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.ScopedDeployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DeploymentExtended or

        ClientRawResponse<DeploymentExtended> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: delete(resource_group_name, deployment_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted.

    Deleting a template deployment removes the associated deployment

    operations. Deleting a template deployment does not affect the state of

    the resource group. This is an asynchronous operation that returns a

    status of 202 until the template deployment is successfully deleted.

    The Location response header contains the URI that is used to obtain

    the status of the process. While the process is running, a call to the

    URI in the Location header returns a status of 202. When the process

    finishes, the URI in the Location header returns a status of 204 on

    success. If the asynchronous request failed, the URI in the Location

    header returns an error-level status code.'
  syntax:
    content: delete(resource_group_name, deployment_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group with the

        deployment to delete. The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: delete_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_at_management_group_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted.

    Deleting a template deployment removes the associated deployment

    operations. This is an asynchronous operation that returns a status of

    202 until the template deployment is successfully deleted. The Location

    response header contains the URI that is used to obtain the status of

    the process. While the process is running, a call to the URI in the

    Location header returns a status of 202. When the process finishes, the

    URI in the Location header returns a status of 204 on success. If the

    asynchronous request failed, the URI in the Location header returns an

    error-level status code.'
  syntax:
    content: delete_at_management_group_scope(group_id, deployment_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: delete_at_scope(scope, deployment_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete_at_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted.

    Deleting a template deployment removes the associated deployment

    operations. This is an asynchronous operation that returns a status of

    202 until the template deployment is successfully deleted. The Location

    response header contains the URI that is used to obtain the status of

    the process. While the process is running, a call to the URI in the

    Location header returns a status of 202. When the process finishes, the

    URI in the Location header returns a status of 204 on success. If the

    asynchronous request failed, the URI in the Location header returns an

    error-level status code.'
  syntax:
    content: delete_at_scope(scope, deployment_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: delete_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: delete_at_subscription_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted.

    Deleting a template deployment removes the associated deployment

    operations. This is an asynchronous operation that returns a status of

    202 until the template deployment is successfully deleted. The Location

    response header contains the URI that is used to obtain the status of

    the process. While the process is running, a call to the URI in the

    Location header returns a status of 202. When the process finishes, the

    URI in the Location header returns a status of 204 on success. If the

    asynchronous request failed, the URI in the Location header returns an

    error-level status code.'
  syntax:
    content: delete_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: delete_at_tenant_scope(deployment_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete_at_tenant_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted.

    Deleting a template deployment removes the associated deployment

    operations. This is an asynchronous operation that returns a status of

    202 until the template deployment is successfully deleted. The Location

    response header contains the URI that is used to obtain the status of

    the process. While the process is running, a call to the URI in the

    Location header returns a status of 202. When the process finishes, the

    URI in the Location header returns a status of 204 on success. If the

    asynchronous request failed, the URI in the Location header returns an

    error-level status code.'
  syntax:
    content: delete_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: export_template(resource_group_name, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: export_template
  summary: Exports the template used for specified deployment.
  syntax:
    content: export_template(resource_group_name, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExportResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExportResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: export_template_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: export_template_at_management_group_scope
  summary: Exports the template used for specified deployment.
  syntax:
    content: export_template_at_management_group_scope(group_id, deployment_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExportResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExportResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: export_template_at_scope(scope, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: export_template_at_scope
  summary: Exports the template used for specified deployment.
  syntax:
    content: export_template_at_scope(scope, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExportResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExportResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: export_template_at_subscription_scope(deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: export_template_at_subscription_scope
  summary: Exports the template used for specified deployment.
  syntax:
    content: export_template_at_subscription_scope(deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExportResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExportResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: export_template_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: export_template_at_tenant_scope
  summary: Exports the template used for specified deployment.
  syntax:
    content: export_template_at_tenant_scope(deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExportResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExportResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: get(resource_group_name, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get
  summary: Gets a deployment.
  syntax:
    content: get(resource_group_name, deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExtended or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: get_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_at_management_group_scope
  summary: Gets a deployment.
  syntax:
    content: get_at_management_group_scope(group_id, deployment_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExtended or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: get_at_scope(scope, deployment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_at_scope
  summary: Gets a deployment.
  syntax:
    content: get_at_scope(scope, deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExtended or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: get_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_at_subscription_scope
  summary: Gets a deployment.
  syntax:
    content: get_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExtended or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: get_at_tenant_scope(deployment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_at_tenant_scope
  summary: Gets a deployment.
  syntax:
    content: get_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeploymentExtended or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: list_at_management_group_scope(group_id, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_at_management_group_scope
  summary: Get all the deployments for a management group.
  syntax:
    content: list_at_management_group_scope(group_id, filter=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. For example, you

        can use $filter=provisioningState eq ''{state}''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to get. If null is passed, returns

        all deployments.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeploymentExtended
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: list_at_scope(scope, filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list_at_scope
  summary: Get all the deployments at the given scope.
  syntax:
    content: list_at_scope(scope, filter=None, top=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. For example, you

        can use $filter=provisioningState eq ''{state}''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to get. If null is passed, returns

        all deployments.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeploymentExtended
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: list_at_subscription_scope(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list_at_subscription_scope
  summary: Get all the deployments for a subscription.
  syntax:
    content: list_at_subscription_scope(filter=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The filter to apply on the operation. For example, you

        can use $filter=provisioningState eq ''{state}''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to get. If null is passed, returns

        all deployments.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeploymentExtended
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: list_at_tenant_scope(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list_at_tenant_scope
  summary: Get all the deployments at the tenant scope.
  syntax:
    content: list_at_tenant_scope(filter=None, top=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: None
      description: 'The filter to apply on the operation. For example, you

        can use $filter=provisioningState eq ''{state}''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to get. If null is passed, returns

        all deployments.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeploymentExtended
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_by_resource_group
  summary: Get all the deployments for a resource group.
  syntax:
    content: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group with the

        deployments to get. The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. For example, you

        can use $filter=provisioningState eq ''{state}''.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The number of results to get. If null is passed, returns

        all deployments.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DeploymentExtended
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_by_resource_group
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: validate(resource_group_name, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: validate
  summary: 'Validates whether the specified template is syntactically correct and

    will be accepted by Azure Resource Manager..'
  syntax:
    content: validate(resource_group_name, deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group the

        template will be deployed to. The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        DeploymentValidateResult or

        ClientRawResponse<DeploymentValidateResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: validate_at_management_group_scope(group_id, deployment_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: validate_at_management_group_scope
  summary: 'Validates whether the specified template is syntactically correct and

    will be accepted by Azure Resource Manager..'
  syntax:
    content: validate_at_management_group_scope(group_id, deployment_name, parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.ScopedDeployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        DeploymentValidateResult or

        ClientRawResponse<DeploymentValidateResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: validate_at_scope(scope, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: validate_at_scope
  summary: 'Validates whether the specified template is syntactically correct and

    will be accepted by Azure Resource Manager..'
  syntax:
    content: validate_at_scope(scope, deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The resource scope.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        DeploymentValidateResult or

        ClientRawResponse<DeploymentValidateResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: validate_at_subscription_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: validate_at_subscription_scope
  summary: 'Validates whether the specified template is syntactically correct and

    will be accepted by Azure Resource Manager..'
  syntax:
    content: validate_at_subscription_scope(deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.Deployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        DeploymentValidateResult or

        ClientRawResponse<DeploymentValidateResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: validate_at_tenant_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: validate_at_tenant_scope
  summary: 'Validates whether the specified template is syntactically correct and

    will be accepted by Azure Resource Manager..'
  syntax:
    content: validate_at_tenant_scope(deployment_name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.ScopedDeployment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        DeploymentValidateResult or

        ClientRawResponse<DeploymentValidateResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: what_if(resource_group_name, deployment_name, properties, location=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: what_if
  summary: 'Returns changes that will be made by the deployment if executed at the

    scope of the resource group.'
  syntax:
    content: what_if(resource_group_name, deployment_name, properties, location=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group the

        template will be deployed to. The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: The deployment properties.
      id: properties
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentWhatIfProperties
    - defaultValue: None
      description: The location to store the deployment data.
      id: location
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns WhatIfOperationResult

        or ClientRawResponse<WhatIfOperationResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_management_group_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: what_if_at_management_group_scope(group_id, deployment_name, location, properties,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: what_if_at_management_group_scope
  summary: 'Returns changes that will be made by the deployment if executed at the

    scope of the management group.'
  syntax:
    content: what_if_at_management_group_scope(group_id, deployment_name, location,
      properties, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The management group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: The location to store the deployment data.
      id: location
      isRequired: true
      type:
      - str
    - description: The deployment properties.
      id: properties
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentWhatIfProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns WhatIfOperationResult

        or ClientRawResponse<WhatIfOperationResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_management_group_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: what_if_at_subscription_scope(deployment_name, properties, location=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: what_if_at_subscription_scope
  summary: 'Returns changes that will be made by the deployment if executed at the

    scope of the subscription.'
  syntax:
    content: what_if_at_subscription_scope(deployment_name, properties, location=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: The deployment properties.
      id: properties
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentWhatIfProperties
    - defaultValue: None
      description: The location to store the deployment data.
      id: location
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns WhatIfOperationResult

        or ClientRawResponse<WhatIfOperationResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_subscription_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_tenant_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: what_if_at_tenant_scope(deployment_name, location, properties, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: what_if_at_tenant_scope
  summary: 'Returns changes that will be made by the deployment if executed at the

    scope of the tenant group.'
  syntax:
    content: what_if_at_tenant_scope(deployment_name, location, properties, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: The location to store the deployment data.
      id: location
      isRequired: true
      type:
      - str
    - description: The deployment properties.
      id: properties
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2020_06_01.models.DeploymentWhatIfProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns WhatIfOperationResult

        or ClientRawResponse<WhatIfOperationResult> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
  type: method
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_tenant_scope
- class: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.models
  langs:
  - python
  module: azure.mgmt.resource.resources.v2020_06_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resource.resources.v2020_06_01.models' from
      'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2020_06_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.models
references:
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.calculate_template_hash
  isExternal: false
  name: calculate_template_hash(template, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.calculate_template_hash
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel
  isExternal: false
  name: cancel(resource_group_name, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_management_group_scope
  isExternal: false
  name: cancel_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_scope
  isExternal: false
  name: cancel_at_scope(scope, deployment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_subscription_scope
  isExternal: false
  name: cancel_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_tenant_scope
  isExternal: false
  name: cancel_at_tenant_scope(deployment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.cancel_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence
  isExternal: false
  name: check_existence(resource_group_name, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_management_group_scope
  isExternal: false
  name: check_existence_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_scope
  isExternal: false
  name: check_existence_at_scope(scope, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
  isExternal: false
  name: check_existence_at_subscription_scope(deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_tenant_scope
  isExternal: false
  name: check_existence_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.check_existence_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_management_group_scope
  isExternal: false
  name: create_or_update_at_management_group_scope(group_id, deployment_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_scope
  isExternal: false
  name: create_or_update_at_scope(scope, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_subscription_scope
  isExternal: false
  name: create_or_update_at_subscription_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_tenant_scope
  isExternal: false
  name: create_or_update_at_tenant_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.create_or_update_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete
  isExternal: false
  name: delete(resource_group_name, deployment_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_management_group_scope
  isExternal: false
  name: delete_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_scope
  isExternal: false
  name: delete_at_scope(scope, deployment_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_subscription_scope
  isExternal: false
  name: delete_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_tenant_scope
  isExternal: false
  name: delete_at_tenant_scope(deployment_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.delete_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template
  isExternal: false
  name: export_template(resource_group_name, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_management_group_scope
  isExternal: false
  name: export_template_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_scope
  isExternal: false
  name: export_template_at_scope(scope, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_subscription_scope
  isExternal: false
  name: export_template_at_subscription_scope(deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_tenant_scope
  isExternal: false
  name: export_template_at_tenant_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.export_template_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get
  isExternal: false
  name: get(resource_group_name, deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_management_group_scope
  isExternal: false
  name: get_at_management_group_scope(group_id, deployment_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_scope
  isExternal: false
  name: get_at_scope(scope, deployment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_subscription_scope
  isExternal: false
  name: get_at_subscription_scope(deployment_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_tenant_scope
  isExternal: false
  name: get_at_tenant_scope(deployment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.get_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_management_group_scope
  isExternal: false
  name: list_at_management_group_scope(group_id, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_scope
  isExternal: false
  name: list_at_scope(scope, filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_subscription_scope
  isExternal: false
  name: list_at_subscription_scope(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_tenant_scope
  isExternal: false
  name: list_at_tenant_scope(filter=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, filter=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.list_by_resource_group
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate
  isExternal: false
  name: validate(resource_group_name, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_management_group_scope
  isExternal: false
  name: validate_at_management_group_scope(group_id, deployment_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_scope
  isExternal: false
  name: validate_at_scope(scope, deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_subscription_scope
  isExternal: false
  name: validate_at_subscription_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_tenant_scope
  isExternal: false
  name: validate_at_tenant_scope(deployment_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.validate_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if
  isExternal: false
  name: what_if(resource_group_name, deployment_name, properties, location=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_management_group_scope
  isExternal: false
  name: what_if_at_management_group_scope(group_id, deployment_name, location, properties,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_management_group_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_subscription_scope
  isExternal: false
  name: what_if_at_subscription_scope(deployment_name, properties, location=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_tenant_scope
  isExternal: false
  name: what_if_at_tenant_scope(deployment_name, location, properties, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.what_if_at_tenant_scope
- fullName: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2020_06_01.operations.DeploymentsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  name: AzureOperationPoller[DeploymentExtended]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
    name: DeploymentExtended
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
  name: AzureOperationPoller[ClientRawResponse[DeploymentExtended]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
    name: DeploymentExtended
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
  name: DeploymentExtendedPaged[DeploymentExtended]
  spec.python:
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged
    name: DeploymentExtendedPaged
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
    name: DeploymentExtended
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtendedPaged[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentExtended]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
  name: AzureOperationPoller[DeploymentValidateResult]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult
    name: DeploymentValidateResult
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
  name: AzureOperationPoller[ClientRawResponse[DeploymentValidateResult]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult
    name: DeploymentValidateResult
    uid: azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.DeploymentValidateResult]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
  name: AzureOperationPoller[WhatIfOperationResult]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult
    name: WhatIfOperationResult
    uid: azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
  name: AzureOperationPoller[ClientRawResponse[WhatIfOperationResult]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult
    name: WhatIfOperationResult
    uid: azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.resource.resources.v2020_06_01.models.WhatIfOperationResult]]
