### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations
name: PolicyAssignmentsOperations
fullName: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations
module: azure.mgmt.resource.policy.v2015_10_01_preview.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.policy.v2015_10_01_preview.PolicyClient>'s\n\
  >\n> <xref:policy_assignments> attribute.\n>"
constructor:
  syntax: PolicyAssignmentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.create
  name: create
  summary: 'Creates a policy assignment.


    Policy assignments are inherited by child resources. For example, when you apply
    a policy to a

    resource group that policy is assigned to all resources in the group.'
  signature: 'create(scope: str, policy_assignment_name: str, parameters: _models.PolicyAssignment,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.PolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the policy assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for the policy assignment. Is either a PolicyAssignment
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.create_by_id
  name: create_by_id
  summary: 'Creates a policy assignment by ID.


    Policy assignments are inherited by child resources. For example, when you apply
    a policy to a

    resource group that policy is assigned to all resources in the group. When providing
    a scope

    for the assignment, use ''/subscriptions/{subscription-id}/'' for subscriptions,

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'' for
    resource groups,

    and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'create_by_id(policy_assignment_id: str, parameters: _models.PolicyAssignment,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to create. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for policy assignment. Is either a PolicyAssignment type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.delete
  name: delete
  summary: Deletes a policy assignment.
  signature: 'delete(scope: str, policy_assignment_name: str, **kwargs: Any) -> PolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the policy assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.delete_by_id
  name: delete_by_id
  summary: 'Deletes a policy assignment by ID.


    When providing a scope for the assignment, use ''/subscriptions/{subscription-id}/''
    for

    subscriptions, ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}''
    for

    resource groups, and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'delete_by_id(policy_assignment_id: str, **kwargs: Any) -> PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to delete. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.get
  name: get
  summary: Gets a policy assignment.
  signature: 'get(scope: str, policy_assignment_name: str, **kwargs: Any) -> PolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the policy assignment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.get_by_id
  name: get_by_id
  summary: 'Gets a policy assignment by ID.


    When providing a scope for the assignment, use ''/subscriptions/{subscription-id}/''
    for

    subscriptions, ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}''
    for

    resource groups, and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'get_by_id(policy_assignment_id: str, **kwargs: Any) -> PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to get. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.list
  name: list
  summary: Gets all the policy assignments for a subscription.
  signature: 'list(filter: str | None = None, **kwargs: Any) -> Iterable[PolicyAssignment]'
  parameters:
  - name: filter
    description: The filter to apply on the operation. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either PolicyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.list_for_resource
  name: list_for_resource
  summary: Gets policy assignments for a  resource.
  signature: 'list_for_resource(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    str | None = None, **kwargs: Any) -> Iterable[PolicyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource. The name
      is

      case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource path. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource with policy assignments. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either PolicyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: Gets policy assignments for the resource group.
  signature: 'list_for_resource_group(resource_group_name: str, filter: str | None
    = None, **kwargs: Any) -> Iterable[PolicyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains policy assignments.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either PolicyAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2015_10_01_preview.models.PolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.policy.v2015_10_01_preview.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2015_10_01_preview\\models\\__init__.py'>
