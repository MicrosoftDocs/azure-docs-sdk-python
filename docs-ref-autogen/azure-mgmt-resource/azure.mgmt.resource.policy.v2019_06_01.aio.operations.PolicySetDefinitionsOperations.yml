### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations
name: PolicySetDefinitionsOperations
fullName: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations
module: azure.mgmt.resource.policy.v2019_06_01.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.policy.v2019_06_01.aio.PolicyClient>'s\n\
  >\n> <xref:policy_set_definitions> attribute.\n>"
constructor:
  syntax: PolicySetDefinitionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.create_or_update
  name: create_or_update
  summary: 'Creates or updates a policy set definition.


    This operation creates or updates a policy set definition in the given subscription
    with the

    given name.'
  signature: 'async create_or_update(policy_set_definition_name: str, parameters:
    _models.PolicySetDefinition, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.PolicySetDefinition'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The policy set definition properties. Is either a PolicySetDefinition
      type

      or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: PolicySetDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.create_or_update_at_management_group
  name: create_or_update_at_management_group
  summary: 'Creates or updates a policy set definition.


    This operation creates or updates a policy set definition in the given management
    group with

    the given name.'
  signature: 'async create_or_update_at_management_group(policy_set_definition_name:
    str, management_group_id: str, parameters: _models.PolicySetDefinition, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.PolicySetDefinition'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The policy set definition properties. Is either a PolicySetDefinition
      type

      or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: PolicySetDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.delete
  name: delete
  summary: 'Deletes a policy set definition.


    This operation deletes the policy set definition in the given subscription with
    the given name.'
  signature: 'async delete(policy_set_definition_name: str, **kwargs: Any) -> None'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.delete_at_management_group
  name: delete_at_management_group
  summary: 'Deletes a policy set definition.


    This operation deletes the policy set definition in the given management group
    with the given

    name.'
  signature: 'async delete_at_management_group(policy_set_definition_name: str, management_group_id:
    str, **kwargs: Any) -> None'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.get
  name: get
  summary: 'Retrieves a policy set definition.


    This operation retrieves the policy set definition in the given subscription with
    the given

    name.'
  signature: 'async get(policy_set_definition_name: str, **kwargs: Any) -> PolicySetDefinition'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicySetDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.get_at_management_group
  name: get_at_management_group
  summary: 'Retrieves a policy set definition.


    This operation retrieves the policy set definition in the given management group
    with the given

    name.'
  signature: 'async get_at_management_group(policy_set_definition_name: str, management_group_id:
    str, **kwargs: Any) -> PolicySetDefinition'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicySetDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.get_built_in
  name: get_built_in
  summary: 'Retrieves a built in policy set definition.


    This operation retrieves the built-in policy set definition with the given name.'
  signature: 'async get_built_in(policy_set_definition_name: str, **kwargs: Any) ->
    PolicySetDefinition'
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PolicySetDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.list
  name: list
  summary: 'Retrieves the policy set definitions for a subscription.


    This operation retrieves a list of all the policy set definitions in the given
    subscription.'
  signature: 'list(**kwargs: Any) -> AsyncIterable[PolicySetDefinition]'
  return:
    description: An iterator like instance of either PolicySetDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.list_built_in
  name: list_built_in
  summary: 'Retrieves built-in policy set definitions.


    This operation retrieves a list of all the built-in policy set definitions.'
  signature: 'list_built_in(**kwargs: Any) -> AsyncIterable[PolicySetDefinition]'
  return:
    description: An iterator like instance of either PolicySetDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.list_by_management_group
  name: list_by_management_group
  summary: 'Retrieves all policy set definitions in management group.


    This operation retrieves a list of all the a policy set definition in the given
    management

    group.'
  signature: 'list_by_management_group(management_group_id: str, **kwargs: Any) ->
    AsyncIterable[PolicySetDefinition]'
  parameters:
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either PolicySetDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2019_06_01.models.PolicySetDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.policy.v2019_06_01.aio.operations.PolicySetDefinitionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.policy.v2019_06_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2019_06_01\\models\\__init__.py'>
