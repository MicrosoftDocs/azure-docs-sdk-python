### YamlMime:PythonClass
uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations
name: ManagementLocksOperations
fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations
module: azure.mgmt.resource.locks.v2016_09_01.aio.operations
inheritances:
- builtins.object
summary: 'ManagementLocksOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ManagementLocksOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.create_or_update_at_resource_group_level
  name: create_or_update_at_resource_group_level
  summary: 'Creates or updates a management lock at the resource group level.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'create_or_update_at_resource_group_level(resource_group_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: resource_group_name
    description: The name of the resource group to lock.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: 'The lock name. The lock name can be a maximum of 260 characters.
      It cannot

      contain <, > %, &, :, , ?, /, or any control characters.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The management lock parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.create_or_update_at_resource_level
  name: create_or_update_at_resource_level
  summary: 'Creates or updates a management lock at the resource level or any level
    below the resource.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'create_or_update_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: resource_group_name
    description: The name of the resource group containing the resource to lock.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The resource provider namespace of the resource to lock.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource to lock.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to lock.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: 'The name of lock. The lock name can be a maximum of 260 characters.
      It cannot

      contain <, > %, &, :, , ?, /, or any control characters.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for creating or updating a  management lock.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.create_or_update_at_subscription_level
  name: create_or_update_at_subscription_level
  summary: 'Creates or updates a management lock at the subscription level.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'create_or_update_at_subscription_level(lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: lock_name
    description: 'The name of lock. The lock name can be a maximum of 260 characters.
      It cannot

      contain <, > %, &, :, , ?, /, or any control characters.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The management lock parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.create_or_update_by_scope
  name: create_or_update_by_scope
  summary: Create or update a management lock by scope.
  signature: 'create_or_update_by_scope(scope: str, lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: scope
    description: 'The scope for the lock. When providing a scope for the assignment,
      use

      ''/subscriptions/{subscriptionId}'' for subscriptions,

      ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'' for resource
      groups, and

      ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}''

      for resources.'
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of lock.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Create or update management lock parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.delete_at_resource_group_level
  name: delete_at_resource_group_level
  summary: 'Deletes a management lock at the resource group level.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'delete_at_resource_group_level(resource_group_name: str, lock_name:
    str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: The name of the resource group containing the lock.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of lock to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.delete_at_resource_level
  name: delete_at_resource_level
  summary: 'Deletes the management lock of a resource or any level below the resource.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'delete_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource with the

      lock to delete.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: 'The resource provider namespace of the resource with the

      lock to delete.'
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource with the lock to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource with the lock to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of the lock to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.delete_at_subscription_level
  name: delete_at_subscription_level
  summary: 'Deletes the management lock at the subscription level.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  signature: 'delete_at_subscription_level(lock_name: str, **kwargs: Any) -> None'
  parameters:
  - name: lock_name
    description: The name of lock to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.delete_by_scope
  name: delete_by_scope
  summary: Delete a management lock by scope.
  signature: 'delete_by_scope(scope: str, lock_name: str, **kwargs: Any) -> None'
  parameters:
  - name: scope
    description: The scope for the lock.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of lock.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.get_at_resource_group_level
  name: get_at_resource_group_level
  summary: Gets a management lock at the resource group level.
  signature: 'get_at_resource_group_level(resource_group_name: str, lock_name: str,
    **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: resource_group_name
    description: The name of the locked resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of the lock to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.get_at_resource_level
  name: get_at_resource_level
  summary: Get the management lock of a resource or any level below resource.
  signature: 'get_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: 'An extra path parameter needed in some services, like SQL

      Databases.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The type of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of lock.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.get_at_subscription_level
  name: get_at_subscription_level
  summary: Gets a management lock at the subscription level.
  signature: 'get_at_subscription_level(lock_name: str, **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: lock_name
    description: The name of the lock to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.get_by_scope
  name: get_by_scope
  summary: Get a management lock by scope.
  signature: 'get_by_scope(scope: str, lock_name: str, **kwargs: Any) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parameters:
  - name: scope
    description: The scope for the lock.
    isRequired: true
    types:
    - <xref:str>
  - name: lock_name
    description: The name of lock.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementLockObject, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.list_at_resource_group_level
  name: list_at_resource_group_level
  summary: Gets all the management locks for a resource group.
  signature: 'list_at_resource_group_level(resource_group_name: str, filter: Optional[str]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group containing the locks to get.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ManagementLockListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.list_at_resource_level
  name: list_at_resource_level
  summary: Gets all the management locks for a resource or any level below resource.
  signature: 'list_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    Optional[str] = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockListResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the locked resource. The

      name is case insensitive.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the locked resource.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the locked resource.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ManagementLockListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.list_at_subscription_level
  name: list_at_subscription_level
  summary: Gets all the management locks for a subscription.
  signature: 'list_at_subscription_level(filter: Optional[str] = None, **kwargs: Any)
    -> AsyncIterable[azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockListResult]'
  parameters:
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ManagementLockListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.list_by_scope
  name: list_by_scope
  summary: Gets all the management locks for a scope.
  signature: 'list_by_scope(scope: str, filter: Optional[str] = None, **kwargs: Any)
    -> AsyncIterable[azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockListResult]'
  parameters:
  - name: scope
    description: 'The scope for the lock. When providing a scope for the assignment,
      use

      ''/subscriptions/{subscriptionId}'' for subscriptions,

      ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'' for resource
      groups, and

      ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}''

      for resources.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ManagementLockListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations.ManagementLocksOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.locks.v2016_09_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\locks\\v2016_09_01\\models\\__init__.py'>
