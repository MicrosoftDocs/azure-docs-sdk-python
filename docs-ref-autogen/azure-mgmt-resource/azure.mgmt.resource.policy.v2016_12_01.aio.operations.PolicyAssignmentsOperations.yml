### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations
name: PolicyAssignmentsOperations
fullName: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations
module: azure.mgmt.resource.policy.v2016_12_01.aio.operations
inheritances:
- builtins.object
summary: 'PolicyAssignmentsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: PolicyAssignmentsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.create
  name: create
  summary: 'Creates a policy assignment.


    Policy assignments are inherited by child resources. For example, when you apply
    a policy to a

    resource group that policy is assigned to all resources in the group.'
  signature: 'create(scope: str, policy_assignment_name: str, parameters: azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment,
    **kwargs: Any) -> azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the policy assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for the policy assignment.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.create_by_id
  name: create_by_id
  summary: 'Creates a policy assignment by ID.


    Policy assignments are inherited by child resources. For example, when you apply
    a policy to a

    resource group that policy is assigned to all resources in the group. When providing
    a scope

    for the assignment, use ''/subscriptions/{subscription-id}/'' for subscriptions,

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'' for
    resource groups,

    and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'create_by_id(policy_assignment_id: str, parameters: azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment,
    **kwargs: Any) -> azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to create. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for policy assignment.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.delete
  name: delete
  summary: Deletes a policy assignment.
  signature: 'delete(scope: str, policy_assignment_name: str, **kwargs: Any) -> Optional[azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment]'
  parameters:
  - name: scope
    description: The scope of the policy assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.delete_by_id
  name: delete_by_id
  summary: 'Deletes a policy assignment by ID.


    When providing a scope for the assignment, use ''/subscriptions/{subscription-id}/''
    for

    subscriptions, ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}''
    for

    resource groups, and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'delete_by_id(policy_assignment_id: str, **kwargs: Any) -> azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to delete. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.get
  name: get
  summary: Gets a policy assignment.
  signature: 'get(scope: str, policy_assignment_name: str, **kwargs: Any) -> azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the policy assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: policy_assignment_name
    description: The name of the policy assignment to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.get_by_id
  name: get_by_id
  summary: 'Gets a policy assignment by ID.


    When providing a scope for the assignment, use ''/subscriptions/{subscription-id}/''
    for

    subscriptions, ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}''
    for

    resource groups, and

    ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}''

    for resources.'
  signature: 'get_by_id(policy_assignment_id: str, **kwargs: Any) -> azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignment'
  parameters:
  - name: policy_assignment_id
    description: 'The ID of the policy assignment to get. Use the format

      ''/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}''.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyAssignment, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignment>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.list
  name: list
  summary: Gets all the policy assignments for a subscription.
  signature: 'list(filter: Optional[str] = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignmentListResult]'
  parameters:
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either PolicyAssignmentListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignmentListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.list_for_resource
  name: list_for_resource
  summary: Gets policy assignments for a resource.
  signature: 'list_for_resource(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    Optional[str] = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignmentListResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource. The name
      is

      case insensitive.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource path.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource with policy assignments.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either PolicyAssignmentListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignmentListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: Gets policy assignments for the resource group.
  signature: 'list_for_resource_group(resource_group_name: str, filter: Optional[str]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.resource.policy.v2016_12_01.models._models_py3.PolicyAssignmentListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group that contains policy assignments.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: The filter to apply on the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either PolicyAssignmentListResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.policy.v2016_12_01.models.PolicyAssignmentListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.policy.v2016_12_01.aio.operations.PolicyAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.policy.v2016_12_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2016_12_01\\models\\__init__.py'>
