### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations
name: PolicySetDefinitionsOperations
fullName: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations
module: azure.mgmt.resource.policy.v2020_09_01.operations
inheritances:
- builtins.object
summary: 'PolicySetDefinitionsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: PolicySetDefinitionsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.create_or_update
  name: create_or_update
  summary: 'Creates or updates a policy set definition.


    This operation creates or updates a policy set definition in the given subscription
    with the

    given name.'
  signature: create_or_update(policy_set_definition_name, parameters, **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to create.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The policy set definition properties.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicySetDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.create_or_update_at_management_group
  name: create_or_update_at_management_group
  summary: 'Creates or updates a policy set definition.


    This operation creates or updates a policy set definition in the given management
    group with

    the given name.'
  signature: create_or_update_at_management_group(policy_set_definition_name, management_group_id,
    parameters, **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to create.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The policy set definition properties.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicySetDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.delete
  name: delete
  summary: 'Deletes a policy set definition.


    This operation deletes the policy set definition in the given subscription with
    the given name.'
  signature: delete(policy_set_definition_name, **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.delete_at_management_group
  name: delete_at_management_group
  summary: 'Deletes a policy set definition.


    This operation deletes the policy set definition in the given management group
    with the given

    name.'
  signature: delete_at_management_group(policy_set_definition_name, management_group_id,
    **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.get
  name: get
  summary: 'Retrieves a policy set definition.


    This operation retrieves the policy set definition in the given subscription with
    the given

    name.'
  signature: get(policy_set_definition_name, **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicySetDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.get_at_management_group
  name: get_at_management_group
  summary: 'Retrieves a policy set definition.


    This operation retrieves the policy set definition in the given management group
    with the given

    name.'
  signature: get_at_management_group(policy_set_definition_name, management_group_id,
    **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicySetDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.get_built_in
  name: get_built_in
  summary: 'Retrieves a built in policy set definition.


    This operation retrieves the built-in policy set definition with the given name.'
  signature: get_built_in(policy_set_definition_name, **kwargs)
  parameters:
  - name: policy_set_definition_name
    description: The name of the policy set definition to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicySetDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinition>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.list
  name: list
  summary: 'Retrieves the policy set definitions for a subscription.


    This operation retrieves a list of all the policy set definitions in a given subscription
    that

    match the optional given $filter. Valid values for $filter are: ''atExactScope()'',
    ''policyType

    -eq {value}'' or ''category eq ''{value}''''. If $filter is not provided, the
    unfiltered list

    includes all policy set definitions associated with the subscription, including
    those that

    apply directly or from management groups that contain the given subscription.
    If

    $filter=atExactScope() is provided, the returned list only includes all policy
    set definitions

    that at the given subscription. If $filter=''policyType -eq {value}'' is provided,
    the returned

    list only includes all policy set definitions whose type match the {value}. Possible
    policyType

    values are NotSpecified, BuiltIn and Custom. If $filter=''category -eq {value}''
    is provided, the

    returned list only includes all policy set definitions whose category match the
    {value}.'
  signature: list(filter=None, top=None, **kwargs)
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy set definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy set definitions
      whose type

      match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom,
      and Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy set

      definitions whose category match the {value}.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicySetDefinitionListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinitionListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.list_built_in
  name: list_built_in
  summary: 'Retrieves built-in policy set definitions.


    This operation retrieves a list of all the built-in policy set definitions that
    match the

    optional given $filter. If $filter=''category -eq {value}'' is provided, the returned
    list only

    includes all built-in policy set definitions whose category match the {value}.'
  signature: list_built_in(filter=None, top=None, **kwargs)
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy set definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy set definitions
      whose type

      match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom,
      and Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy set

      definitions whose category match the {value}.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicySetDefinitionListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinitionListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.list_by_management_group
  name: list_by_management_group
  summary: 'Retrieves all policy set definitions in management group.


    This operation retrieves a list of all the policy set definitions in a given management
    group

    that match the optional given $filter. Valid values for $filter are: ''atExactScope()'',

    ''policyType -eq {value}'' or ''category eq ''{value}''''. If $filter is not provided,
    the unfiltered

    list includes all policy set definitions associated with the management group,
    including those

    that apply directly or from management groups that contain the given management
    group. If

    $filter=atExactScope() is provided, the returned list only includes all policy
    set definitions

    that at the given management group. If $filter=''policyType -eq {value}'' is provided,
    the

    returned list only includes all policy set definitions whose type match the {value}.
    Possible

    policyType values are NotSpecified, BuiltIn and Custom. If $filter=''category
    -eq {value}'' is

    provided, the returned list only includes all policy set definitions whose category
    match the

    {value}.'
  signature: list_by_management_group(management_group_id, filter=None, top=None,
    **kwargs)
  parameters:
  - name: management_group_id
    description: The ID of the management group.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy set definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy set definitions
      whose type

      match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom,
      and Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy set

      definitions whose category match the {value}.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicySetDefinitionListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2020_09_01.models.PolicySetDefinitionListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.policy.v2020_09_01.operations.PolicySetDefinitionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.policy.v2020_09_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2020_09_01\\models\\__init__.py'>
