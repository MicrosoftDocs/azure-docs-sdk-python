### YamlMime:PythonClass
uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations
name: DeploymentStacksOperations
fullName: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations
module: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.DeploymentStacksClient>'s\n\
  >\n> <xref:deployment_stacks> attribute.\n>"
constructor:
  syntax: DeploymentStacksOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_create_or_update_at_management_group
  name: begin_create_or_update_at_management_group
  summary: Creates or updates a Deployment stack at Management Group scope.
  signature: 'begin_create_or_update_at_management_group(management_group_id: str,
    deployment_stack_name: str, deployment_stack: _models.DeploymentStack, *, content_type:
    str = ''application/json'', **kwargs: Any) -> LROPoller[_models.DeploymentStack]'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack supplied to the operation. Is either a

      DeploymentStack type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStack or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_create_or_update_at_resource_group
  name: begin_create_or_update_at_resource_group
  summary: Creates or updates a Deployment stack at Resource Group scope.
  signature: 'begin_create_or_update_at_resource_group(resource_group_name: str, deployment_stack_name:
    str, deployment_stack: _models.DeploymentStack, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.DeploymentStack]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack supplied to the operation. Is either a

      DeploymentStack type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStack or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_create_or_update_at_subscription
  name: begin_create_or_update_at_subscription
  summary: Creates or updates a Deployment stack at Subscription scope.
  signature: 'begin_create_or_update_at_subscription(deployment_stack_name: str, deployment_stack:
    _models.DeploymentStack, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.DeploymentStack]'
  parameters:
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack supplied to the operation. Is either a

      DeploymentStack type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStack or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_delete_at_management_group
  name: begin_delete_at_management_group
  summary: 'Deletes a Deployment stack by name at Management Group scope. When operation
    completes, status

    code 200 returned without content.'
  signature: 'begin_delete_at_management_group(management_group_id: str, deployment_stack_name:
    str, unmanage_action_resources: str | UnmanageActionResourceMode | None = None,
    unmanage_action_resource_groups: str | UnmanageActionResourceGroupMode | None
    = None, unmanage_action_management_groups: str | UnmanageActionManagementGroupMode
    | None = None, bypass_stack_out_of_sync_error: bool | None = None, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: unmanage_action_resources
    description: 'Flag to indicate delete rather than detach for unmanaged

      resources. Known values are: "delete" and "detach". Default value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceMode>
  - name: unmanage_action_resource_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged resource groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceGroupMode>
  - name: unmanage_action_management_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged management groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionManagementGroupMode>
  - name: bypass_stack_out_of_sync_error
    description: 'Flag to bypass service errors that indicate the stack

      resource list is not correctly synchronized. Default value is None.'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_delete_at_resource_group
  name: begin_delete_at_resource_group
  summary: 'Deletes a Deployment stack by name at Resource Group scope. When operation
    completes, status

    code 200 returned without content.'
  signature: 'begin_delete_at_resource_group(resource_group_name: str, deployment_stack_name:
    str, unmanage_action_resources: str | UnmanageActionResourceMode | None = None,
    unmanage_action_resource_groups: str | UnmanageActionResourceGroupMode | None
    = None, unmanage_action_management_groups: str | UnmanageActionManagementGroupMode
    | None = None, bypass_stack_out_of_sync_error: bool | None = None, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: unmanage_action_resources
    description: 'Flag to indicate delete rather than detach for unmanaged

      resources. Known values are: "delete" and "detach". Default value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceMode>
  - name: unmanage_action_resource_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged resource groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceGroupMode>
  - name: unmanage_action_management_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged management groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionManagementGroupMode>
  - name: bypass_stack_out_of_sync_error
    description: 'Flag to bypass service errors that indicate the stack

      resource list is not correctly synchronized. Default value is None.'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_delete_at_subscription
  name: begin_delete_at_subscription
  summary: 'Deletes a Deployment stack by name at Subscription scope. When operation
    completes, status code

    200 returned without content.'
  signature: 'begin_delete_at_subscription(deployment_stack_name: str, unmanage_action_resources:
    str | UnmanageActionResourceMode | None = None, unmanage_action_resource_groups:
    str | UnmanageActionResourceGroupMode | None = None, unmanage_action_management_groups:
    str | UnmanageActionManagementGroupMode | None = None, bypass_stack_out_of_sync_error:
    bool | None = None, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: unmanage_action_resources
    description: 'Flag to indicate delete rather than detach for unmanaged

      resources. Known values are: "delete" and "detach". Default value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceMode>
  - name: unmanage_action_resource_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged resource groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionResourceGroupMode>
  - name: unmanage_action_management_groups
    description: 'Flag to indicate delete rather than detach for

      unmanaged management groups. Known values are: "delete" and "detach". Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.UnmanageActionManagementGroupMode>
  - name: bypass_stack_out_of_sync_error
    description: 'Flag to bypass service errors that indicate the stack

      resource list is not correctly synchronized. Default value is None.'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_validate_stack_at_management_group
  name: begin_validate_stack_at_management_group
  summary: 'Runs preflight validation on the Management Group scoped Deployment stack
    template to verify

    its acceptance to Azure Resource Manager.'
  signature: 'begin_validate_stack_at_management_group(management_group_id: str, deployment_stack_name:
    str, deployment_stack: _models.DeploymentStack, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.DeploymentStackValidateResult]'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack to validate. Is either a DeploymentStack type or
      a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStackValidateResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackValidateResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_validate_stack_at_resource_group
  name: begin_validate_stack_at_resource_group
  summary: 'Runs preflight validation on the Resource Group scoped Deployment stack
    template to verify its

    acceptance to Azure Resource Manager.'
  signature: 'begin_validate_stack_at_resource_group(resource_group_name: str, deployment_stack_name:
    str, deployment_stack: _models.DeploymentStack, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.DeploymentStackValidateResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack to validate. Is either a DeploymentStack type or
      a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStackValidateResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackValidateResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.begin_validate_stack_at_subscription
  name: begin_validate_stack_at_subscription
  summary: 'Runs preflight validation on the Subscription scoped Deployment stack
    template to verify its

    acceptance to Azure Resource Manager.'
  signature: 'begin_validate_stack_at_subscription(deployment_stack_name: str, deployment_stack:
    _models.DeploymentStack, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.DeploymentStackValidateResult]'
  parameters:
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack
    description: 'Deployment stack to validate. Is either a DeploymentStack type or
      a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DeploymentStackValidateResult
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackValidateResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.export_template_at_management_group
  name: export_template_at_management_group
  summary: Exports the template used to create the Deployment stack at Management
    Group scope.
  signature: 'export_template_at_management_group(management_group_id: str, deployment_stack_name:
    str, **kwargs: Any) -> DeploymentStackTemplateDefinition'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStackTemplateDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackTemplateDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.export_template_at_resource_group
  name: export_template_at_resource_group
  summary: Exports the template used to create the Deployment stack at Resource Group
    scope.
  signature: 'export_template_at_resource_group(resource_group_name: str, deployment_stack_name:
    str, **kwargs: Any) -> DeploymentStackTemplateDefinition'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStackTemplateDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackTemplateDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.export_template_at_subscription
  name: export_template_at_subscription
  summary: Exports the template used to create the Deployment stack at Subscription
    scope.
  signature: 'export_template_at_subscription(deployment_stack_name: str, **kwargs:
    Any) -> DeploymentStackTemplateDefinition'
  parameters:
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStackTemplateDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStackTemplateDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.get_at_management_group
  name: get_at_management_group
  summary: Gets a Deployment stack with a given name at Management Group scope.
  signature: 'get_at_management_group(management_group_id: str, deployment_stack_name:
    str, **kwargs: Any) -> DeploymentStack'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStack or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.get_at_resource_group
  name: get_at_resource_group
  summary: Gets a Deployment stack with a given name at Resource Group scope.
  signature: 'get_at_resource_group(resource_group_name: str, deployment_stack_name:
    str, **kwargs: Any) -> DeploymentStack'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStack or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.get_at_subscription
  name: get_at_subscription
  summary: Gets a Deployment stack with a given name at Subscription scope.
  signature: 'get_at_subscription(deployment_stack_name: str, **kwargs: Any) -> DeploymentStack'
  parameters:
  - name: deployment_stack_name
    description: Name of the deployment stack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeploymentStack or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.list_at_management_group
  name: list_at_management_group
  summary: Lists all the Deployment stacks within the specified Management Group.
  signature: 'list_at_management_group(management_group_id: str, **kwargs: Any) ->
    Iterable[DeploymentStack]'
  parameters:
  - name: management_group_id
    description: Management Group id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either DeploymentStack or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.list_at_resource_group
  name: list_at_resource_group
  summary: Lists all the Deployment stacks within the specified Resource Group.
  signature: 'list_at_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[DeploymentStack]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either DeploymentStack or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.list_at_subscription
  name: list_at_subscription
  summary: Lists all the Deployment stacks within the specified Subscription.
  signature: 'list_at_subscription(**kwargs: Any) -> Iterable[DeploymentStack]'
  return:
    description: An iterator like instance of either DeploymentStack or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.deploymentstacks.v2024_03_01.models.DeploymentStack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.deploymentstacks.v2024_03_01.operations.DeploymentStacksOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.deploymentstacks.v2024_03_01.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\deploymentstacks\\v2024_03_01\\models\\__init__.py'>
