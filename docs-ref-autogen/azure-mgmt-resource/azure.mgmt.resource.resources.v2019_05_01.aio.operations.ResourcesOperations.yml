### YamlMime:PythonClass
uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations
name: ResourcesOperations
fullName: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations
module: azure.mgmt.resource.resources.v2019_05_01.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.resources.v2019_05_01.aio.ResourceManagementClient>'s\n\
  >\n> <xref:resources> attribute.\n>"
constructor:
  syntax: ResourcesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates a resource.
  signature: 'async begin_create_or_update(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, api_version:
    str, parameters: _models.GenericResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.GenericResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group for the resource. The name is case

      insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for creating or updating the resource. Is either a

      GenericResource type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either GenericResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_create_or_update_by_id
  name: begin_create_or_update_by_id
  summary: Create a resource by ID.
  signature: 'async begin_create_or_update_by_id(resource_id: str, api_version: str,
    parameters: _models.GenericResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.GenericResource]'
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format,

      /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Create or update resource parameters. Is either a GenericResource
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either GenericResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_delete
  name: begin_delete
  summary: Deletes a resource.
  signature: 'async begin_delete(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, api_version:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource to

      delete. The name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_delete_by_id
  name: begin_delete_by_id
  summary: Deletes a resource by ID.
  signature: 'async begin_delete_by_id(resource_id: str, api_version: str, **kwargs:
    Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format,

      /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_move_resources
  name: begin_move_resources
  summary: 'Moves resources from one resource group to another resource group.


    The resources to move must be in the same source resource group. The target resource
    group may

    be in a different subscription. When moving resources, both the source group and
    the target

    group are locked for the duration of the operation. Write and delete operations
    are blocked on

    the groups until the move completes.'
  signature: 'async begin_move_resources(source_resource_group_name: str, parameters:
    _models.ResourcesMoveInfo, *, content_type: str = ''application/json'', **kwargs:
    Any) -> AsyncLROPoller[None]'
  parameters:
  - name: source_resource_group_name
    description: 'The name of the resource group containing the resources to

      move. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for moving resources. Is either a ResourcesMoveInfo type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.ResourcesMoveInfo>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_update
  name: begin_update
  summary: Updates a resource.
  signature: 'async begin_update(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, api_version:
    str, parameters: _models.GenericResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.GenericResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group for the resource. The name is case

      insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for updating the resource. Is either a GenericResource
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either GenericResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_update_by_id
  name: begin_update_by_id
  summary: Updates a resource by ID.
  signature: 'async begin_update_by_id(resource_id: str, api_version: str, parameters:
    _models.GenericResource, *, content_type: str = ''application/json'', **kwargs:
    Any) -> AsyncLROPoller[_models.GenericResource]'
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format,

      /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Update resource parameters. Is either a GenericResource type or
      a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either GenericResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.begin_validate_move_resources
  name: begin_validate_move_resources
  summary: 'Validates whether resources can be moved from one resource group to another
    resource group.


    This operation checks whether the specified resources can be moved to the target.
    The resources

    to move must be in the same source resource group. The target resource group may
    be in a

    different subscription. If validation succeeds, it returns HTTP response code
    204 (no content).

    If validation fails, it returns HTTP response code 409 (Conflict) with an error
    message.

    Retrieve the URL in the Location header value to check the result of the long-running

    operation.'
  signature: 'async begin_validate_move_resources(source_resource_group_name: str,
    parameters: _models.ResourcesMoveInfo, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: source_resource_group_name
    description: 'The name of the resource group containing the resources to

      validate for move. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for moving resources. Is either a ResourcesMoveInfo type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.ResourcesMoveInfo>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.check_existence
  name: check_existence
  summary: Checks whether a resource exists.
  signature: 'async check_existence(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, api_version:
    str, **kwargs: Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource to check.

      The name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The resource provider of the resource to check. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to check whether it exists. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.check_existence_by_id
  name: check_existence_by_id
  summary: Checks by ID whether a resource exists.
  signature: 'async check_existence_by_id(resource_id: str, api_version: str, **kwargs:
    Any) -> bool'
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format,

      /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.get
  name: get
  summary: Gets a resource.
  signature: 'async get(resource_group_name: str, resource_provider_namespace: str,
    parent_resource_path: str, resource_type: str, resource_name: str, api_version:
    str, **kwargs: Any) -> GenericResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource to get. The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GenericResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.get_by_id
  name: get_by_id
  summary: Gets a resource by ID.
  signature: 'async get_by_id(resource_id: str, api_version: str, **kwargs: Any) ->
    GenericResource'
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format,

      /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GenericResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.list
  name: list
  summary: Get all the resources in a subscription.
  signature: 'list(filter: str | None = None, expand: str | None = None, top: int
    | None = None, **kwargs: Any) -> AsyncIterable[GenericResourceExpanded]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation.:code:*<br>*`<br>`The properties
      you

      can use for eq (equals) or ne (not equals) are: location, resourceType, name,
      resourceGroup,

      identity, identity/principalId, plan, plan/publisher, plan/product, plan/name,
      plan/version,

      and plan/promotionCode.:code:`<br>``<br>`For example, to filter by a resource
      type, use:

      $filter=resourceType eq ''Microsoft.Network/virtualNetworks'':code:`<br>``<br>`You
      can use

      substringof(value, property) in the filter. The properties you can use for substring
      are: name

      and resourceGroup.:code:`<br>``<br>`For example, to get all resources with ''demo''

      anywhere in the name, use: $filter=substringof(''demo'', name):code:`<br>``<br>`You
      can

      link more than one substringof together by adding and/or operators.:code:`<br>``<br>`You

      can filter by tag names and values. For example, to filter for a tag name and
      value, use

      $filter=tagName eq ''tag1'' and tagValue eq ''Value1'':code:`<br>`:code:>>`<<<br>`You
      can use some

      properties together when filtering. The combinations you can use are: substringof
      and/or

      resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: expand
    description: 'Comma-separated list of additional properties to be included in
      the response.

      Valid values include `createdTime`, `changedTime` and `provisioningState`. For
      example,

      `$expand=createdTime,changedTime`. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return. If null is passed, returns all
      resources. Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: 'An iterator like instance of either GenericResourceExpanded or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResourceExpanded>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Get all the resources for a resource group.
  signature: 'list_by_resource_group(resource_group_name: str, filter: str | None
    = None, expand: str | None = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[GenericResourceExpanded]'
  parameters:
  - name: resource_group_name
    description: The resource group with the resources to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation.:code:*<br>*`<br>`The properties
      you

      can use for eq (equals) or ne (not equals) are: location, resourceType, name,
      resourceGroup,

      identity, identity/principalId, plan, plan/publisher, plan/product, plan/name,
      plan/version,

      and plan/promotionCode.:code:`<br>``<br>`For example, to filter by a resource
      type, use:

      $filter=resourceType eq ''Microsoft.Network/virtualNetworks'':code:`<br>``<br>`You
      can use

      substringof(value, property) in the filter. The properties you can use for substring
      are: name

      and resourceGroup.:code:`<br>``<br>`For example, to get all resources with ''demo''

      anywhere in the name, use: $filter=substringof(''demo'', name):code:`<br>``<br>`You
      can

      link more than one substringof together by adding and/or operators.:code:`<br>``<br>`You

      can filter by tag names and values. For example, to filter for a tag name and
      value, use

      $filter=tagName eq ''tag1'' and tagValue eq ''Value1'':code:`<br>`:code:>>`<<<br>`You
      can use some

      properties together when filtering. The combinations you can use are: substringof
      and/or

      resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: expand
    description: 'Comma-separated list of additional properties to be included in
      the response.

      Valid values include `createdTime`, `changedTime` and `provisioningState`. For
      example,

      `$expand=createdTime,changedTime`. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return. If null is passed, returns all
      resources. Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: 'An iterator like instance of either GenericResourceExpanded or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.resource.resources.v2019_05_01.models.GenericResourceExpanded>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.resources.v2019_05_01.aio.operations.ResourcesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.resources.v2019_05_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2019_05_01\\models\\__init__.py'>
