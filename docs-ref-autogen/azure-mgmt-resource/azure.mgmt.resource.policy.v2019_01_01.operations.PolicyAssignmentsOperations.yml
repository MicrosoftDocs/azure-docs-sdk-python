### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create_by_id
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete_by_id
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get_by_id
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource_group
  - azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.models
  class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: PolicyAssignmentsOperations
  summary: 'PolicyAssignmentsOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: PolicyAssignmentsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for the operation. Constant value: "2019-01-01".'
      id: api_version
  type: class
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: create(scope, policy_assignment_name, parameters, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: create
  summary: 'Creates or updates a policy assignment.


    This operation creates or updates a policy assignment with the given

    scope and name. Policy assignments apply to all resources contained

    within their scope. For example, when you assign a policy at resource

    group scope, that policy applies to all resources in the group.'
  syntax:
    content: create(scope, policy_assignment_name, parameters, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The scope of the policy assignment. Valid scopes are:

        management group (format:

        ''/providers/Microsoft.Management/managementGroups/{managementGroup}''),

        subscription (format: ''/subscriptions/{subscriptionId}''), resource

        group (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'',

        or resource (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'''
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of the policy assignment.
      id: policy_assignment_name
      isRequired: true
      type:
      - str
    - description: Parameters for the policy assignment.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create_by_id
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: create_by_id(policy_assignment_id, parameters, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: create_by_id
  summary: 'Creates or updates a policy assignment.


    This operation creates or updates the policy assignment with the given

    ID. Policy assignments made on a scope apply to all resources contained

    in that scope. For example, when you assign a policy to a resource

    group that policy applies to all resources in the group. Policy

    assignment IDs have this format:

    ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.

    Valid scopes are: management group (format:

    ''/providers/Microsoft.Management/managementGroups/{managementGroup}''),

    subscription (format: ''/subscriptions/{subscriptionId}''), resource

    group (format:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'',

    or resource (format:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.'
  syntax:
    content: create_by_id(policy_assignment_id, parameters, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the policy assignment to

        create. Use the format

        ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.'
      id: policy_assignment_id
      isRequired: true
      type:
      - str
    - description: Parameters for policy assignment.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create_by_id
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: delete(scope, policy_assignment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes a policy assignment.


    This operation deletes a policy assignment, given its name and the

    scope it was created in. The scope of a policy assignment is the part

    of its ID preceding

    ''/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.'
  syntax:
    content: delete(scope, policy_assignment_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The scope of the policy assignment. Valid scopes are:

        management group (format:

        ''/providers/Microsoft.Management/managementGroups/{managementGroup}''),

        subscription (format: ''/subscriptions/{subscriptionId}''), resource

        group (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'',

        or resource (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'''
      id: scope
      isRequired: true
      type:
      - str
    - description: 'The name of the policy assignment to

        delete.'
      id: policy_assignment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete_by_id
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: delete_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_by_id
  summary: 'Deletes a policy assignment.


    This operation deletes the policy with the given ID. Policy assignment

    IDs have this format:

    ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.

    Valid formats for {scope} are:

    ''/providers/Microsoft.Management/managementGroups/{managementGroup}''

    (management group), ''/subscriptions/{subscriptionId}'' (subscription),

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}''

    (resource group), or

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''

    (resource).'
  syntax:
    content: delete_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the policy assignment to

        delete. Use the format

        ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.'
      id: policy_assignment_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete_by_id
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: get(scope, policy_assignment_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Retrieves a policy assignment.


    This operation retrieves a single policy assignment, given its name and

    the scope it was created at.'
  syntax:
    content: get(scope, policy_assignment_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The scope of the policy assignment. Valid scopes are:

        management group (format:

        ''/providers/Microsoft.Management/managementGroups/{managementGroup}''),

        subscription (format: ''/subscriptions/{subscriptionId}''), resource

        group (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'',

        or resource (format:

        ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'''
      id: scope
      isRequired: true
      type:
      - str
    - description: 'The name of the policy assignment to

        get.'
      id: policy_assignment_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get_by_id
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: get_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_by_id
  summary: 'Retrieves the policy assignment with the given ID.


    The operation retrieves the policy assignment with the given ID. Policy

    assignment IDs have this format:

    ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.

    Valid scopes are: management group (format:

    ''/providers/Microsoft.Management/managementGroups/{managementGroup}''),

    subscription (format: ''/subscriptions/{subscriptionId}''), resource

    group (format:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'',

    or resource (format:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.'
  syntax:
    content: get_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the policy assignment to get.

        Use the format

        ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.'
      id: policy_assignment_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PolicyAssignment or ClientRawResponse if raw=true
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get_by_id
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: list(filter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: 'Retrieves all policy assignments that apply to a subscription.


    This operation retrieves the list of all policy assignments associated

    with the given subscription that match the optional given $filter.

    Valid values for $filter are: ''atScope()'' or ''policyDefinitionId eq

    ''{value}''''. If $filter is not provided, the unfiltered list includes

    all policy assignments associated with the subscription, including

    those that apply directly or from management groups that contain the

    given subscription, as well as any applied to objects contained within

    the subscription. If $filter=atScope() is provided, the returned list

    includes all policy assignments that apply to the subscription, which

    is everything in the unfiltered list except those applied to objects

    contained within the subscription. If $filter=policyDefinitionId eq

    ''{value}'' is provided, the returned list includes all policy

    assignments of the policy definition whose id is {value}.'
  syntax:
    content: list(filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The filter to apply on the operation. Valid values for

        $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''. If

        $filter is not provided, no filtering is performed.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of PolicyAssignment
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged[azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment]
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: list_for_resource(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, filter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_for_resource
  summary: 'Retrieves all policy assignments that apply to a resource.


    This operation retrieves the list of all policy assignments associated

    with the specified resource in the given resource group and

    subscription that match the optional given $filter. Valid values for

    $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''. If

    $filter is not provided, the unfiltered list includes all policy

    assignments associated with the resource, including those that apply

    directly or from all containing scopes, as well as any applied to

    resources contained within the resource. If $filter=atScope() is

    provided, the returned list includes all policy assignments that apply

    to the resource, which is everything in the unfiltered list except

    those applied to resources contained within the resource. If

    $filter=policyDefinitionId eq ''{value}'' is provided, the returned list

    includes all policy assignments of the policy definition whose id is

    {value} that apply to the resource. Three parameters plus the resource

    name are used to identify a specific resource. If the resource is not

    part of a parent resource (the more common case), the parent resource

    path should not be provided (or provided as ''''). For example a web app

    could be specified as ({resourceProviderNamespace} == ''Microsoft.Web'',

    {parentResourcePath} == '''', {resourceType} == ''sites'', {resourceName}

    == ''MyWebApp''). If the resource is part of a parent resource, then all

    parameters should be provided. For example a virtual machine DNS name

    could be specified as ({resourceProviderNamespace} ==

    ''Microsoft.Compute'', {parentResourcePath} ==

    ''virtualMachines/MyVirtualMachine'', {resourceType} == ''domainNames'',

    {resourceName} == ''MyComputerName''). A convenient alternative to

    providing the namespace and type name separately is to provide both in

    the {resourceType} parameter, format: ({resourceProviderNamespace} ==

    '''', {parentResourcePath} == '''', {resourceType} ==

    ''Microsoft.Web/sites'', {resourceName} == ''MyWebApp'').'
  syntax:
    content: list_for_resource(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group containing

        the resource.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The namespace of the resource

        provider. For example, the namespace of a virtual machine is

        Microsoft.Compute (from Microsoft.Compute/virtualMachines)'
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: 'The parent resource path. Use empty

        string if there is none.'
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: 'The resource type name. For example the type

        name of a web app is ''sites'' (from Microsoft.Web/sites).'
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. Valid values for

        $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''. If

        $filter is not provided, no filtering is performed.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of PolicyAssignment
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged[azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment]
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  exceptions:
  - type: azure.mgmt.resource.policy.v2019_01_01.models.ErrorResponseException
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource_group
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: list_for_resource_group(resource_group_name, filter=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_for_resource_group
  summary: 'Retrieves all policy assignments that apply to a resource group.


    This operation retrieves the list of all policy assignments associated

    with the given resource group in the given subscription that match the

    optional given $filter. Valid values for $filter are: ''atScope()'' or

    ''policyDefinitionId eq ''{value}''''. If $filter is not provided, the

    unfiltered list includes all policy assignments associated with the

    resource group, including those that apply directly or apply from

    containing scopes, as well as any applied to resources contained within

    the resource group. If $filter=atScope() is provided, the returned list

    includes all policy assignments that apply to the resource group, which

    is everything in the unfiltered list except those applied to resources

    contained within the resource group. If $filter=policyDefinitionId eq

    ''{value}'' is provided, the returned list includes all policy

    assignments of the policy definition whose id is {value} that apply to

    the resource group.'
  syntax:
    content: list_for_resource_group(resource_group_name, filter=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group that

        contains policy assignments.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. Valid values for

        $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''. If

        $filter is not provided, no filtering is performed.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of PolicyAssignment
      type:
      - azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged[azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment]
  type: method
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource_group
- class: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.models
  langs:
  - python
  module: azure.mgmt.resource.policy.v2019_01_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resource.policy.v2019_01_01.models' from
      'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2019_01_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.models
references:
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create
  isExternal: false
  name: create(scope, policy_assignment_name, parameters, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create_by_id
  isExternal: false
  name: create_by_id(policy_assignment_id, parameters, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.create_by_id
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete
  isExternal: false
  name: delete(scope, policy_assignment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete_by_id
  isExternal: false
  name: delete_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.delete_by_id
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get
  isExternal: false
  name: get(scope, policy_assignment_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get_by_id
  isExternal: false
  name: get_by_id(policy_assignment_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.get_by_id
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list
  isExternal: false
  name: list(filter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource
  isExternal: false
  name: list_for_resource(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, filter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource_group
  isExternal: false
  name: list_for_resource_group(resource_group_name, filter=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.list_for_resource_group
- fullName: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations
  uid: azure.mgmt.resource.policy.v2019_01_01.operations.PolicyAssignmentsOperations.models
- fullName: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged[azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment]
  name: PolicyAssignmentPaged[PolicyAssignment]
  spec.python:
  - fullName: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged
    name: PolicyAssignmentPaged
    uid: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
    name: PolicyAssignment
    uid: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignmentPaged[azure.mgmt.resource.policy.v2019_01_01.models.PolicyAssignment]
