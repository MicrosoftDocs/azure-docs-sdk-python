### YamlMime:PythonClass
uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations
name: DeploymentsOperations
fullName: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations
module: azure.mgmt.resource.resources.v2018_05_01.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.resources.v2018_05_01.ResourceManagementClient>'s\n\
  >\n> <xref:deployments> attribute.\n>"
constructor:
  syntax: DeploymentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Deploys resources to a resource group.


    You can provide the template and parameters directly in the request or link to
    JSON files.'
  signature: 'begin_create_or_update(resource_group_name: str, deployment_name: str,
    parameters: _models.Deployment, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.DeploymentExtended]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to deploy the resources to. The name

      is case insensitive. The resource group must already exist. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Additional parameters supplied to the operation. Is either a Deployment
      type

      or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.Deployment>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either DeploymentExtended
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
  name: begin_create_or_update_at_subscription_scope
  summary: 'Deploys resources at subscription scope.


    You can provide the template and parameters directly in the request or link to
    JSON files.'
  signature: 'begin_create_or_update_at_subscription_scope(deployment_name: str, parameters:
    _models.Deployment, *, content_type: str = ''application/json'', **kwargs: Any)
    -> LROPoller[_models.DeploymentExtended]'
  parameters:
  - name: deployment_name
    description: The name of the deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Additional parameters supplied to the operation. Is either a Deployment
      type

      or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.Deployment>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either DeploymentExtended
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.begin_delete
  name: begin_delete
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted. Deleting a
    template

    deployment removes the associated deployment operations. Deleting a template deployment
    does

    not affect the state of the resource group. This is an asynchronous operation
    that returns a

    status of 202 until the template deployment is successfully deleted. The Location
    response

    header contains the URI that is used to obtain the status of the process. While
    the process is

    running, a call to the URI in the Location header returns a status of 202. When
    the process

    finishes, the URI in the Location header returns a status of 204 on success. If
    the

    asynchronous request failed, the URI in the Location header returns an error-level
    status code.'
  signature: 'begin_delete(resource_group_name: str, deployment_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group with the deployment to delete. The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.begin_delete_at_subscription_scope
  name: begin_delete_at_subscription_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted. Deleting a
    template

    deployment removes the associated deployment operations. This is an asynchronous
    operation that

    returns a status of 202 until the template deployment is successfully deleted.
    The Location

    response header contains the URI that is used to obtain the status of the process.
    While the

    process is running, a call to the URI in the Location header returns a status
    of 202. When the

    process finishes, the URI in the Location header returns a status of 204 on success.
    If the

    asynchronous request failed, the URI in the Location header returns an error-level
    status code.'
  signature: 'begin_delete_at_subscription_scope(deployment_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: deployment_name
    description: The name of the deployment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.calculate_template_hash
  name: calculate_template_hash
  summary: Calculate the hash of the given template.
  signature: 'calculate_template_hash(template: MutableMapping[str, Any], **kwargs:
    Any) -> TemplateHashResult'
  parameters:
  - name: template
    description: The template provided to calculate hash. Required.
    isRequired: true
    types:
    - <xref:JSON>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: TemplateHashResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.TemplateHashResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.cancel
  name: cancel
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted or Running.
    After the

    deployment is canceled, the provisioningState is set to Canceled. Canceling a
    template

    deployment stops the currently running template deployment and leaves the resource
    group

    partially deployed.'
  signature: 'cancel(resource_group_name: str, deployment_name: str, **kwargs: Any)
    -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment to cancel. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.cancel_at_subscription_scope
  name: cancel_at_subscription_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted or Running.
    After the

    deployment is canceled, the provisioningState is set to Canceled. Canceling a
    template

    deployment stops the currently running template deployment and leaves the resources
    partially

    deployed.'
  signature: 'cancel_at_subscription_scope(deployment_name: str, **kwargs: Any) ->
    None'
  parameters:
  - name: deployment_name
    description: The name of the deployment to cancel. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.check_existence
  name: check_existence
  summary: Checks whether the deployment exists.
  signature: 'check_existence(resource_group_name: str, deployment_name: str, **kwargs:
    Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group with the deployment to check. The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment to check. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.check_existence_at_subscription_scope
  name: check_existence_at_subscription_scope
  summary: Checks whether the deployment exists.
  signature: 'check_existence_at_subscription_scope(deployment_name: str, **kwargs:
    Any) -> bool'
  parameters:
  - name: deployment_name
    description: The name of the deployment to check. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.export_template
  name: export_template
  summary: Exports the template used for specified deployment.
  signature: 'export_template(resource_group_name: str, deployment_name: str, **kwargs:
    Any) -> DeploymentExportResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment from which to get the template. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentExportResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExportResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.export_template_at_subscription_scope
  name: export_template_at_subscription_scope
  summary: Exports the template used for specified deployment.
  signature: 'export_template_at_subscription_scope(deployment_name: str, **kwargs:
    Any) -> DeploymentExportResult'
  parameters:
  - name: deployment_name
    description: The name of the deployment from which to get the template. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentExportResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExportResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.get
  name: get
  summary: Gets a deployment.
  signature: 'get(resource_group_name: str, deployment_name: str, **kwargs: Any) ->
    DeploymentExtended'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentExtended or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.get_at_subscription_scope
  name: get_at_subscription_scope
  summary: Gets a deployment.
  signature: 'get_at_subscription_scope(deployment_name: str, **kwargs: Any) -> DeploymentExtended'
  parameters:
  - name: deployment_name
    description: The name of the deployment to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentExtended or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.list_at_subscription_scope
  name: list_at_subscription_scope
  summary: Get all the deployments for a subscription.
  signature: 'list_at_subscription_scope(filter: str | None = None, top: int | None
    = None, **kwargs: Any) -> Iterable[DeploymentExtended]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. For example, you can use

      $filter=provisioningState eq ''{state}''. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to get. If null is passed, returns all deployments.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DeploymentExtended or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Get all the deployments for a resource group.
  signature: 'list_by_resource_group(resource_group_name: str, filter: str | None
    = None, top: int | None = None, **kwargs: Any) -> Iterable[DeploymentExtended]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group with the deployments to get. The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. For example, you can use

      $filter=provisioningState eq ''{state}''. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to get. If null is passed, returns all deployments.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DeploymentExtended or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentExtended>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.validate
  name: validate
  summary: 'Validates whether the specified template is syntactically correct and
    will be accepted by Azure

    Resource Manager..'
  signature: 'validate(resource_group_name: str, deployment_name: str, parameters:
    _models.Deployment, *, content_type: str = ''application/json'', **kwargs: Any)
    -> _models.DeploymentValidateResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group the template will be deployed to.

      The name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of the deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters to validate. Is either a Deployment type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.Deployment>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentValidateResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentValidateResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.validate_at_subscription_scope
  name: validate_at_subscription_scope
  summary: 'Validates whether the specified template is syntactically correct and
    will be accepted by Azure

    Resource Manager..'
  signature: 'validate_at_subscription_scope(deployment_name: str, parameters: _models.Deployment,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.DeploymentValidateResult'
  parameters:
  - name: deployment_name
    description: The name of the deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters to validate. Is either a Deployment type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.Deployment>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DeploymentValidateResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2018_05_01.models.DeploymentValidateResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.resources.v2018_05_01.operations.DeploymentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.resources.v2018_05_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2018_05_01\\models\\__init__.py'>
