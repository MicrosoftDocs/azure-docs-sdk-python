### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.create
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.delete
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get_training_status
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.list
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.train
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.update
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.models
  class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: LargePersonGroupOperations
  summary: 'LargePersonGroupOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: LargePersonGroupOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.create
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: create(large_person_group_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create
  summary: 'Create a new large person group with user-specified largePersonGroupId,

    name, an optional userData and recognitionModel.

    <br /> A large person group is the container of the uploaded person

    data, including face recognition feature, and up to 1,000,000

    people.

    <br /> After creation, use [LargePersonGroup Person -

    Create]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/create](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/create))

    to add person into the group, and call [LargePersonGroup -

    Train]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/train](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/train))

    to get this group ready for [Face -

    Identify]([https://docs.microsoft.com/rest/api/cognitiveservices/face/face/identify](https://docs.microsoft.com/rest/api/cognitiveservices/face/face/identify)).

    <br /> No image will be stored. Only the person''s extracted face

    features and userData will be stored on server until [LargePersonGroup

    Person -

    Delete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete))

    or [LargePersonGroup -

    Delete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete))

    is called.

    <br/>''recognitionModel'' should be specified to associate with this

    large person group. The default value for ''recognitionModel'' is

    ''recognition_01'', if the latest model needed, please explicitly specify

    the model you need in this parameter. New faces that are added to an

    existing large person group will use the recognition model that''s

    already associated with the collection. Existing face features in a

    large person group can''t be updated to features extracted by another

    version of recognition model.

    * ''recognition_01'': The default recognition model for [LargePersonGroup

    -

    Create]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/create](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/create)).

    All those large person groups created before 2019 March are bonded with

    this recognition model.

    * ''recognition_02'': Recognition model released in 2019 March.

    * ''recognition_03'': Recognition model released in 2020 May.

    ''recognition_03'' is recommended since its overall accuracy is improved

    compared with ''recognition_01'' and ''recognition_02''.

    Large person group quota:

    * Free-tier subscription quota: 1,000 large person groups.

    * S0-tier subscription quota: 1,000,000 large person groups.'
  syntax:
    content: create(large_person_group_id, name=None, user_data=None, recognition_model='recognition_01',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: recognition_01
      description: 'Possible values include: ''recognition_01'',

        ''recognition_02'', ''recognition_03'''
      id: recognition_model
      type:
      - str
      - azure.cognitiveservices.vision.face.models.RecognitionModel
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.create
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.delete
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: delete(large_person_group_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: 'Delete an existing large person group. Persisted face features of all

    people in the large person group will also be deleted.'
  syntax:
    content: delete(large_person_group_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.delete
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get(large_person_group_id, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Retrieve the information of a large person group, including its name,

    userData and recognitionModel. This API returns large person group

    information only, use [LargePersonGroup Person -

    List]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/list](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/list))

    instead to retrieve person information under the large person group.

    .'
  syntax:
    content: get(large_person_group_id, return_recognition_model=False, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: LargePersonGroup or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.LargePersonGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get_training_status
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get_training_status(large_person_group_id, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_training_status
  summary: 'Retrieve the training status of a large person group (completed or

    ongoing).'
  syntax:
    content: get_training_status(large_person_group_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: TrainingStatus or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.TrainingStatus
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get_training_status
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.list
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list
  summary: "List all existing large person groups\u2019 largePersonGroupId, name,\n\
    userData and recognitionModel.<br />\n* Large person groups are stored in alphabetical\
    \ order of\nlargePersonGroupId.\n* \"start\" parameter (string, optional) is a\
    \ user-provided\nlargePersonGroupId value that returned entries have larger ids\
    \ by\nstring comparison. \"start\" set to empty to indicate return from the\n\
    first item.\n* \"top\" parameter (int, optional) specifies the number of entries\
    \ to\nreturn. A maximal of 1000 entries can be returned in one call. To fetch\n\
    more, you can specify \"start\" with the last returned entry\u2019s Id of the\n\
    current call.\n<br />\nFor example, total 5 large person groups: \"group1\", ...,\
    \ \"group5\".\n<br /> \"start=&top=\" will return all 5 groups.\n<br /> \"start=&top=2\"\
    \ will return \"group1\", \"group2\".\n<br /> \"start=group2&top=3\" will return\
    \ \"group3\", \"group4\", \"group5\".\n."
  syntax:
    content: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'List large person groups from the least

        largePersonGroupId greater than the "start".'
      id: start
      type:
      - str
    - defaultValue: '1000'
      description: The number of large person groups to list.
      id: top
      type:
      - int
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.cognitiveservices.vision.face.models.LargePersonGroup]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.list
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.train
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: train(large_person_group_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: train
  summary: 'Queue a large person group training task, the training task may not be

    started immediately.'
  syntax:
    content: train(large_person_group_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.train
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.update
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: update(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: 'Update an existing large person group''s display name and userData. The

    properties which does not appear in request body will not be updated.'
  syntax:
    content: update(large_person_group_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.update
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.face.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.models
references:
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.create
  isExternal: false
  name: create(large_person_group_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.create
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.delete
  isExternal: false
  name: delete(large_person_group_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.delete
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get
  isExternal: false
  name: get(large_person_group_id, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get_training_status
  isExternal: false
  name: get_training_status(large_person_group_id, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.get_training_status
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.list
  isExternal: false
  name: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.list
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.train
  isExternal: false
  name: train(large_person_group_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.train
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.update
  isExternal: false
  name: update(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.update
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupOperations.models
- fullName: list[azure.cognitiveservices.vision.face.models.LargePersonGroup]
  name: list[LargePersonGroup]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.face.models.LargePersonGroup
    name: LargePersonGroup
    uid: azure.cognitiveservices.vision.face.models.LargePersonGroup
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.face.models.LargePersonGroup]
