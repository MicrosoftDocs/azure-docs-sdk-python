### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_stream
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_url
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.create
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete_face
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get_face
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.list
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update_face
  - azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.models
  class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: LargePersonGroupPersonOperations
  summary: 'LargePersonGroupPersonOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: LargePersonGroupPersonOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
    target_face=None, detection_model='detection_01', custom_headers=None, raw=False,
    callback=None, **operation_config)
  namewithoutparameters: add_face_from_stream
  summary: "Add a face to a person into a large person group for face\nidentification\
    \ or verification. To deal with an image contains multiple\nfaces, input face\
    \ can be specified as an image with a targetFace\nrectangle. It returns a persistedFaceId\
    \ representing the added face. No\nimage will be stored. Only the extracted face\
    \ feature will be stored on\nserver until [LargePersonGroup PersonFace -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/deleteface](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/deleteface)),\n\
    [LargePersonGroup Person -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete))\n\
    or [LargePersonGroup -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete))\n\
    is called.\n<br /> Note persistedFaceId is different from faceId generated by\
    \ [Face\n-\nDetect]([https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl)).\n\
    * Higher face image quality means better recognition precision. Please\nconsider\
    \ high-quality faces: frontal, clear, and face size is 200x200\npixels (100 pixels\
    \ between eyes) or bigger.\n* Each person entry can hold up to 248 faces.\n* JPEG,\
    \ PNG, GIF (the first frame), and BMP format are supported. The\nallowed image\
    \ file size is from 1KB to 6MB.\n* \"targetFace\" rectangle should contain one\
    \ face. Zero or multiple\nfaces will be regarded as an error. If the provided\
    \ \"targetFace\"\nrectangle is not returned from [Face -\nDetect]([https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl)),\n\
    there\u2019s no guarantee to detect and add the face successfully.\n* Out of detectable\
    \ face size (36x36 - 4096x4096 pixels), large\nhead-pose, or large occlusions\
    \ will cause failures.\n* Adding/deleting faces to/from a same person will be\
    \ processed\nsequentially. Adding/deleting faces to/from different persons are\n\
    processed in parallel.\n* The minimum detectable face size is 36x36 pixels in\
    \ an image no\nlarger than 1920x1080 pixels. Images with dimensions higher than\n\
    1920x1080 pixels will need a proportionally larger minimum face size.\n* Different\
    \ 'detectionModel' values can be provided. To use and compare\ndifferent detection\
    \ models, please refer to [How to specify a detection\nmodel]([https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model))\n\
    | Model | Recommended use-case(s) |\n| ---------- | -------- |\n| 'detection_01':\
    \ | The default detection model for [LargePersonGroup\nPerson - Add\nFace]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/addfacefromurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/addfacefromurl)).\n\
    Recommend for near frontal face detection. For scenarios with\nexceptionally large\
    \ angle (head-pose) faces, occluded faces or wrong\nimage orientation, the faces\
    \ in such cases may not be detected. |\n| 'detection_02': | Detection model released\
    \ in 2019 May with improved\naccuracy especially on small, side and blurry faces.\
    \ >>|<<."
  syntax:
    content: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
      target_face=None, detection_model='detection_01', custom_headers=None, raw=False,
      callback=None, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - description: An image stream.
      id: image
      isRequired: true
      type:
      - Generator
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: detection_01
      description: 'Name of detection model. Detection model is

        used to detect faces in the submitted image. A detection model name

        can be provided when performing Face - Detect or (Large)FaceList - Add

        Face or (Large)PersonGroup - Add Face. The default value is

        ''detection_01'', if another model is needed, please explicitly specify

        it. Possible values include: ''detection_01'', ''detection_02'''
      id: detection_model
      type:
      - str
      - azure.cognitiveservices.vision.face.models.DetectionModel
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_stream
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_url
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: add_face_from_url(large_person_group_id, person_id, url, user_data=None, target_face=None,
    detection_model='detection_01', custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add_face_from_url
  summary: "Add a face to a person into a large person group for face\nidentification\
    \ or verification. To deal with an image contains multiple\nfaces, input face\
    \ can be specified as an image with a targetFace\nrectangle. It returns a persistedFaceId\
    \ representing the added face. No\nimage will be stored. Only the extracted face\
    \ feature will be stored on\nserver until [LargePersonGroup PersonFace -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/deleteface](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/deleteface)),\n\
    [LargePersonGroup Person -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/delete))\n\
    or [LargePersonGroup -\nDelete]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroup/delete))\n\
    is called.\n<br /> Note persistedFaceId is different from faceId generated by\
    \ [Face\n-\nDetect]([https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl)).\n\
    * Higher face image quality means better recognition precision. Please\nconsider\
    \ high-quality faces: frontal, clear, and face size is 200x200\npixels (100 pixels\
    \ between eyes) or bigger.\n* Each person entry can hold up to 248 faces.\n* JPEG,\
    \ PNG, GIF (the first frame), and BMP format are supported. The\nallowed image\
    \ file size is from 1KB to 6MB.\n* \"targetFace\" rectangle should contain one\
    \ face. Zero or multiple\nfaces will be regarded as an error. If the provided\
    \ \"targetFace\"\nrectangle is not returned from [Face -\nDetect]([https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/face/detectwithurl)),\n\
    there\u2019s no guarantee to detect and add the face successfully.\n* Out of detectable\
    \ face size (36x36 - 4096x4096 pixels), large\nhead-pose, or large occlusions\
    \ will cause failures.\n* Adding/deleting faces to/from a same person will be\
    \ processed\nsequentially. Adding/deleting faces to/from different persons are\n\
    processed in parallel.\n* The minimum detectable face size is 36x36 pixels in\
    \ an image no\nlarger than 1920x1080 pixels. Images with dimensions higher than\n\
    1920x1080 pixels will need a proportionally larger minimum face size.\n* Different\
    \ 'detectionModel' values can be provided. To use and compare\ndifferent detection\
    \ models, please refer to [How to specify a detection\nmodel]([https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model))\n\
    | Model | Recommended use-case(s) |\n| ---------- | -------- |\n| 'detection_01':\
    \ | The default detection model for [LargePersonGroup\nPerson - Add\nFace]([https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/addfacefromurl](https://docs.microsoft.com/rest/api/cognitiveservices/face/largepersongroupperson/addfacefromurl)).\n\
    Recommend for near frontal face detection. For scenarios with\nexceptionally large\
    \ angle (head-pose) faces, occluded faces or wrong\nimage orientation, the faces\
    \ in such cases may not be detected. |\n| 'detection_02': | Detection model released\
    \ in 2019 May with improved\naccuracy especially on small, side and blurry faces.\
    \ >>|<<."
  syntax:
    content: add_face_from_url(large_person_group_id, person_id, url, user_data=None,
      target_face=None, detection_model='detection_01', custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - description: Publicly reachable URL of an image
      id: url
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: detection_01
      description: 'Name of detection model. Detection model is

        used to detect faces in the submitted image. A detection model name

        can be provided when performing Face - Detect or (Large)FaceList - Add

        Face or (Large)PersonGroup - Add Face. The default value is

        ''detection_01'', if another model is needed, please explicitly specify

        it. Possible values include: ''detection_01'', ''detection_02'''
      id: detection_model
      type:
      - str
      - azure.cognitiveservices.vision.face.models.DetectionModel
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_url
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.create
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create
  summary: Create a new person in a specified large person group.
  syntax:
    content: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Person or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.Person
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.create
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: delete(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: 'Delete an existing person from a large person group. The

    persistedFaceId, userData, person name and face feature in the person

    entry will all be deleted.'
  syntax:
    content: delete(large_person_group_id, person_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_face
  summary: 'Delete a face from a person in a large person group by specified

    largePersonGroupId, personId and persistedFaceId.

    <br /> Adding/deleting faces to/from a same person will be processed

    sequentially. Adding/deleting faces to/from different persons are

    processed in parallel.'
  syntax:
    content: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete_face
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Retrieve a person''s name and userData, and the persisted faceIds

    representing the registered person face feature.'
  syntax:
    content: get(large_person_group_id, person_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Person or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.Person
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_face
  summary: 'Retrieve information about a persisted face (specified by

    persistedFaceId, personId and its belonging largePersonGroupId).'
  syntax:
    content: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get_face
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.list
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: list(large_person_group_id, start=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list
  summary: 'List all persons in a large person group, and retrieve person

    information (including personId, name, userData and persistedFaceIds of

    registered faces of the person).'
  syntax:
    content: list(large_person_group_id, start=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Starting person id to return (used to list a range of

        persons).'
      id: start
      type:
      - str
    - defaultValue: None
      description: 'Number of persons to return starting with the person id

        indicated by the ''start'' parameter.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.cognitiveservices.vision.face.models.Person]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.list
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: Update name or userData of a person.
  syntax:
    content: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: update_face
  summary: Update a person persisted face's userData field.
  syntax:
    content: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      isRequired: true
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      isRequired: true
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'User-provided data attached to the face. The size

        limit is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update_face
- class: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.face.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.models
references:
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_stream
  isExternal: false
  name: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
    target_face=None, detection_model='detection_01', custom_headers=None, raw=False,
    callback=None, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_stream
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_url
  isExternal: false
  name: add_face_from_url(large_person_group_id, person_id, url, user_data=None, target_face=None,
    detection_model='detection_01', custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.add_face_from_url
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.create
  isExternal: false
  name: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.create
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete
  isExternal: false
  name: delete(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete_face
  isExternal: false
  name: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.delete_face
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get
  isExternal: false
  name: get(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get_face
  isExternal: false
  name: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.get_face
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.list
  isExternal: false
  name: list(large_person_group_id, start=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.list
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update
  isExternal: false
  name: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update_face
  isExternal: false
  name: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.update_face
- fullName: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.LargePersonGroupPersonOperations.models
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: list[azure.cognitiveservices.vision.face.models.Person]
  name: list[Person]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.face.models.Person
    name: Person
    uid: azure.cognitiveservices.vision.face.models.Person
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.face.models.Person]
