### YamlMime:PythonClass
uid: azure.mgmt.connectedvmware.operations.DatastoresOperations
name: DatastoresOperations
fullName: azure.mgmt.connectedvmware.operations.DatastoresOperations
module: azure.mgmt.connectedvmware.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.connectedvmware.ConnectedVMwareMgmtClient>'s\n\
  >\n> <xref:datastores> attribute.\n>"
constructor:
  syntax: DatastoresOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.begin_create
  name: begin_create
  summary: 'Implements datastore PUT method.


    Create Or Update datastore.'
  signature: 'begin_create(resource_group_name: str, datastore_name: str, body: _models.Datastore
    | None = None, *, content_type: str = ''application/json'', **kwargs: Any) ->
    LROPoller[_models.Datastore]'
  parameters:
  - name: resource_group_name
    description: The Resource Group Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: datastore_name
    description: Name of the datastore. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Request payload. Is either a Datastore type or a IO type. Default
      value is None.
    isRequired: true
    types:
    - <xref:azure.mgmt.connectedvmware.models.Datastore>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either Datastore or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.connectedvmware.models.Datastore>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.begin_delete
  name: begin_delete
  summary: 'Deletes an datastore.


    Implements datastore DELETE method.'
  signature: 'begin_delete(resource_group_name: str, datastore_name: str, force: bool
    | None = None, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The Resource Group Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: datastore_name
    description: Name of the datastore. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: force
    description: Whether force delete was specified. Default value is None.
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.get
  name: get
  summary: 'Gets a datastore.


    Implements datastore GET method.'
  signature: 'get(resource_group_name: str, datastore_name: str, **kwargs: Any) ->
    Datastore'
  parameters:
  - name: resource_group_name
    description: The Resource Group Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: datastore_name
    description: Name of the datastore. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Datastore or the result of cls(response)
    types:
    - <xref:azure.mgmt.connectedvmware.models.Datastore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.list
  name: list
  summary: 'Implements GET datastores in a subscription.


    List of datastores in a subscription.'
  signature: 'list(**kwargs: Any) -> Iterable[Datastore]'
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either Datastore or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.connectedvmware.models.Datastore>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Implements GET datastores in a resource group.


    List of datastores in a resource group.'
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[Datastore]'
  parameters:
  - name: resource_group_name
    description: The Resource Group Name. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either Datastore or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.connectedvmware.models.Datastore>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.update
  name: update
  summary: 'Updates a datastore.


    API to update certain properties of the datastore resource.'
  signature: 'update(resource_group_name: str, datastore_name: str, body: _models.ResourcePatch
    | None = None, *, content_type: str = ''application/json'', **kwargs: Any) ->
    _models.Datastore'
  parameters:
  - name: resource_group_name
    description: The Resource Group Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: datastore_name
    description: Name of the datastore. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: 'Resource properties to update. Is either a ResourcePatch type or
      a IO type.

      Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.connectedvmware.models.ResourcePatch>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Datastore or the result of cls(response)
    types:
    - <xref:azure.mgmt.connectedvmware.models.Datastore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.connectedvmware.operations.DatastoresOperations.models
  name: models
  signature: models = <module 'azure.mgmt.connectedvmware.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\connectedvmware\\models\\__init__.py'>
