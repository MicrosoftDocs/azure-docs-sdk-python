### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.acquire_lease_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_if_not_exists_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_store_if_not_exists_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_if_not_exists_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_store_if_not_exists_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_checkpoint_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_store_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_all_leases
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_checkpoint_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_lease_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.initialize
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.release_lease_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.renew_lease_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_checkpoint_async
  - azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_lease_async
  class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: azure.eventprocessorhost.abstract_lease_manager.AbstractLeaseManager
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: AzureStorageCheckpointLeaseManager
  source:
    id: AzureStorageCheckpointLeaseManager
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 26
  summary: 'Manages checkpoints and lease with azure storage blobs. In this implementation,

    checkpoints are data that''s actually in the lease blob, so checkpoint operations

    turn into lease operations under the covers.

















    '
  syntax:
    content: AzureStorageCheckpointLeaseManager(storage_account_name, storage_account_key,
      lease_container_name, storage_blob_prefix=None, lease_renew_interval=10, lease_duration=30)
  type: class
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.acquire_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: acquire_lease_async
  source:
    id: acquire_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 247
  summary: 'Acquire the lease on the desired partition for this EventProcessorHost.

    Note that it is legal to acquire a lease that is already owned by another host.

    Lease-stealing is how partitions are redistributed when additional hosts are started.

    :returns: *True* if the lease was acquired successfully, *False* if not.

    '
  syntax:
    content: acquire_lease_async(lease)
    parameters:
    - id: lease
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.acquire_lease_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: create_checkpoint_if_not_exists_async
  source:
    id: create_checkpoint_if_not_exists_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 98
  summary: 'Create the given partition checkpoint if it doesn''t exist.Do nothing
    if it does exist.

    The offset/sequenceNumber for a freshly-created checkpoint should be set to StartOfStream/0.

    :returns: The checkpoint for the given partition, whether newly created or already
    existing.

    '
  syntax:
    content: create_checkpoint_if_not_exists_async(partition_id)
    parameters:
    - id: partition_id
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_if_not_exists_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_store_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: create_checkpoint_store_if_not_exists_async
  source:
    id: create_checkpoint_store_if_not_exists_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 76
  summary: "Create the checkpoint store if it doesn't exist. Do nothing if it does\
    \ exist.\n:returns: *True* if the checkpoint store already exists or was created\
    \ OK, *False*\n\n\n   if there was a failure\n"
  syntax:
    content: create_checkpoint_store_if_not_exists_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_store_if_not_exists_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: create_lease_if_not_exists_async
  source:
    id: create_lease_if_not_exists_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 202
  summary: 'Create in the store the lease info for the given partition, if it does
    not exist.

    Do nothing if it does exist in the store already.

    :param partition_id: The ID of a given parition.

    :type partition_id: str

    :returns: the existing or newly-created lease info for the partition.

    '
  syntax:
    content: create_lease_if_not_exists_async(partition_id)
    parameters:
    - id: partition_id
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_if_not_exists_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_store_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: create_lease_store_if_not_exists_async
  source:
    id: create_lease_store_if_not_exists_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 130
  summary: 'Create the lease store if it does not exist, do nothing if it does exist.

    :returns: *True* if the lease store already exists or was created successfully,
    *False* if not.

    '
  syntax:
    content: create_lease_store_if_not_exists_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_store_if_not_exists_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: delete_checkpoint_async
  source:
    id: delete_checkpoint_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 121
  summary: 'Delete the stored checkpoint for the given partition. If there is no stored
    checkpoint

    for the given partition, that is treated as success.

    '
  syntax:
    content: delete_checkpoint_async(partition_id)
    parameters:
    - id: partition_id
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_checkpoint_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: delete_lease_async
  source:
    id: delete_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 234
  summary: 'Delete the lease info for the given partition from the store.

    If there is no stored lease for the given partition, that is treated as success.

    '
  syntax:
    content: delete_lease_async(lease)
    parameters:
    - id: lease
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_store_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: delete_lease_store_async
  source:
    id: delete_lease_store_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 148
  summary: 'Not used by EventProcessorHost, but a convenient function to have for
    testing.

    :returns: *True* if the lease store was deleted successfully, *False* if not.

    '
  syntax:
    content: delete_lease_store_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_store_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_all_leases
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: get_all_leases
  source:
    id: get_all_leases
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 190
  summary: 'Return the lease info for all partitions.

    A typical implementation could just call get_lease_async() on all partitions.

    :returns: list of lease info.

    '
  syntax:
    content: get_all_leases()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_all_leases
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: get_checkpoint_async
  source:
    id: get_checkpoint_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 84
  summary: 'Get the checkpoint data associated with the given partition.

    Could return null if no checkpoint has been created for that partition.

    :returns: Given partition checkpoint info, or *None* if none has been previously
    stored.

    '
  syntax:
    content: get_checkpoint_async(partition_id)
    parameters:
    - id: partition_id
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_checkpoint_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: get_lease_async
  source:
    id: get_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 155
  summary: 'Return the lease info for the specified partition.

    Can return null if no lease has been created in the store for the specified partition.

    :returns: lease info for the partition, or *None*.

    '
  syntax:
    content: get_lease_async(partition_id)
    parameters:
    - id: partition_id
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_lease_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.initialize
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: initialize
  source:
    id: initialize
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 62
  summary: 'The EventProcessorHost can''t pass itself to the AzureStorageCheckpointLeaseManager

    constructor because it is still being constructed. Do other initialization here

    also because it might throw and hence we don''t want it in the constructor.

    '
  syntax:
    content: initialize(host)
    parameters:
    - id: host
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.initialize
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.release_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: release_lease_async
  source:
    id: release_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 330
  summary: 'Give up a lease currently held by this host. If the lease has been stolen,
    or expired,

    releasing it is unnecessary, and will fail if attempted.

    :returns: *True* if the lease was released successfully, *False* if not.

    '
  syntax:
    content: release_lease_async(lease)
    parameters:
    - id: lease
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.release_lease_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.renew_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: renew_lease_async
  source:
    id: renew_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 305
  summary: 'Renew a lease currently held by this host.

    If the lease has been stolen, or expired, or released, it is not possible to renew
    it.

    You will have to call getLease() and then acquireLease() again.

    :returns: *True* if the lease was renewed successfully, *False* if not.

    '
  syntax:
    content: renew_lease_async(lease)
    parameters:
    - id: lease
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.renew_lease_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: update_checkpoint_async
  source:
    id: update_checkpoint_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 110
  summary: 'Update the checkpoint in the store with the offset/sequenceNumber in the
    provided checkpoint

    checkpoint:offset/sequeceNumber to update the store with.

    '
  syntax:
    content: update_checkpoint_async(lease, checkpoint)
    parameters:
    - id: lease
    - id: checkpoint
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_checkpoint_async
- class: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.azure_storage_checkpoint_manager
  name: update_lease_async
  source:
    id: update_lease_async
    path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\azure_storage_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 366
  summary: 'Update the store with the information in the provided lease. It is necessary
    to currently

    hold a lease in order to update it. If the lease has been stolen, or expired,
    or released,

    it cannot be updated. Updating should renew the lease before performing the update
    to

    avoid lease expiration during the process.

    :returns: *True* if the updated was performed successfully, *False* if not.

    '
  syntax:
    content: update_lease_async(lease)
    parameters:
    - id: lease
  type: method
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_lease_async
references:
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.acquire_lease_async
  isExternal: false
  name: acquire_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.acquire_lease_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_if_not_exists_async
  isExternal: false
  name: create_checkpoint_if_not_exists_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_if_not_exists_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_store_if_not_exists_async
  isExternal: false
  name: create_checkpoint_store_if_not_exists_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_checkpoint_store_if_not_exists_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_if_not_exists_async
  isExternal: false
  name: create_lease_if_not_exists_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_if_not_exists_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_store_if_not_exists_async
  isExternal: false
  name: create_lease_store_if_not_exists_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.create_lease_store_if_not_exists_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_checkpoint_async
  isExternal: false
  name: delete_checkpoint_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_checkpoint_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_async
  isExternal: false
  name: delete_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_store_async
  isExternal: false
  name: delete_lease_store_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.delete_lease_store_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_all_leases
  isExternal: false
  name: get_all_leases
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_all_leases
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_checkpoint_async
  isExternal: false
  name: get_checkpoint_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_checkpoint_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_lease_async
  isExternal: false
  name: get_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.get_lease_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.initialize
  isExternal: false
  name: initialize
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.initialize
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.release_lease_async
  isExternal: false
  name: release_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.release_lease_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.renew_lease_async
  isExternal: false
  name: renew_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.renew_lease_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_checkpoint_async
  isExternal: false
  name: update_checkpoint_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_checkpoint_async
- fullName: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_lease_async
  isExternal: false
  name: update_lease_async
  parent: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager
  uid: azure.eventprocessorhost.azure_storage_checkpoint_manager.AzureStorageCheckpointLeaseManager.update_lease_async
