### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_container
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_database
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_stored_procedure
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_trigger
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_user_defined_function
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_container
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_database
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_stored_procedure
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_trigger
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_user_defined_function
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container_throughput
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database_throughput
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_stored_procedure
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_trigger
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_user_defined_function
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_containers
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_databases
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_stored_procedures
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_triggers
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_user_defined_functions
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_container_throughput
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_database_throughput
  - azure.mgmt.cosmosdb.operations.SqlResourcesOperations.models
  class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: SqlResourcesOperations
  summary: 'SqlResourcesOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: SqlResourcesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2020-04-01".'
      id: api_version
  type: class
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_container(resource_group_name, account_name, database_name,
    container_name, create_update_sql_container_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: create_update_sql_container
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: create_update_sql_container(resource_group_name, account_name, database_name,
      container_name, create_update_sql_container_parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current SQL container.'
      id: create_update_sql_container_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.SqlContainerCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns SqlContainerGetResults

        or ClientRawResponse<SqlContainerGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainerGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_container
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_database(resource_group_name, account_name, database_name,
    create_update_sql_database_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: create_update_sql_database
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: create_update_sql_database(resource_group_name, account_name, database_name,
      create_update_sql_database_parameters, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current SQL database.'
      id: create_update_sql_database_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabaseCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns SqlDatabaseGetResults

        or ClientRawResponse<SqlDatabaseGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_database
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_stored_procedure
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, create_update_sql_stored_procedure_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_update_sql_stored_procedure
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: create_update_sql_stored_procedure(resource_group_name, account_name,
      database_name, container_name, stored_procedure_name, create_update_sql_stored_procedure_parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB storedProcedure name.
      id: stored_procedure_name
      isRequired: true
      type:
      - str
    - description: 'The parameters

        to provide for the current SQL storedProcedure.'
      id: create_update_sql_stored_procedure_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.SqlStoredProcedureCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        SqlStoredProcedureGetResults or

        ClientRawResponse<SqlStoredProcedureGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_stored_procedure
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_trigger
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_trigger(resource_group_name, account_name, database_name,
    container_name, trigger_name, create_update_sql_trigger_parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_update_sql_trigger
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: create_update_sql_trigger(resource_group_name, account_name, database_name,
      container_name, trigger_name, create_update_sql_trigger_parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to provide

        for the current SQL trigger.'
      id: create_update_sql_trigger_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.SqlTriggerCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns SqlTriggerGetResults or

        ClientRawResponse<SqlTriggerGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_trigger
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_user_defined_function
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_user_defined_function(resource_group_name, account_name,
    database_name, container_name, user_defined_function_name, create_update_sql_user_defined_function_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_update_sql_user_defined_function
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: create_update_sql_user_defined_function(resource_group_name, account_name,
      database_name, container_name, user_defined_function_name, create_update_sql_user_defined_function_parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB userDefinedFunction name.
      id: user_defined_function_name
      isRequired: true
      type:
      - str
    - description: 'The

        parameters to provide for the current SQL userDefinedFunction.'
      id: create_update_sql_user_defined_function_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        SqlUserDefinedFunctionGetResults or

        ClientRawResponse<SqlUserDefinedFunctionGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_user_defined_function
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_sql_container
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: delete_sql_container(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_container
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_sql_database
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: delete_sql_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_database
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_stored_procedure
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete_sql_stored_procedure
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: delete_sql_stored_procedure(resource_group_name, account_name, database_name,
      container_name, stored_procedure_name, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB storedProcedure name.
      id: stored_procedure_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_stored_procedure
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_trigger
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_trigger(resource_group_name, account_name, database_name, container_name,
    trigger_name, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_sql_trigger
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: delete_sql_trigger(resource_group_name, account_name, database_name,
      container_name, trigger_name, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_trigger
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_user_defined_function
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_user_defined_function(resource_group_name, account_name, database_name,
    container_name, user_defined_function_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete_sql_user_defined_function
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: delete_sql_user_defined_function(resource_group_name, account_name, database_name,
      container_name, user_defined_function_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB userDefinedFunction name.
      id: user_defined_function_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_user_defined_function
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_container
  summary: 'Gets the SQL container under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_sql_container(resource_group_name, account_name, database_name, container_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SqlContainerGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlContainerGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_container_throughput
  summary: 'Gets the RUs per second of the SQL container under an existing Azure

    Cosmos DB database account.'
  syntax:
    content: get_sql_container_throughput(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container_throughput
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_sql_database
  summary: 'Gets the SQL database under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SqlDatabaseGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_database_throughput
  summary: 'Gets the RUs per second of the SQL database under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_sql_database_throughput(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database_throughput
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_stored_procedure
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_stored_procedure
  summary: 'Gets the SQL storedProcedure under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_sql_stored_procedure(resource_group_name, account_name, database_name,
      container_name, stored_procedure_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB storedProcedure name.
      id: stored_procedure_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SqlStoredProcedureGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_stored_procedure
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_trigger
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_trigger(resource_group_name, account_name, database_name, container_name,
    trigger_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_trigger
  summary: 'Gets the SQL trigger under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_sql_trigger(resource_group_name, account_name, database_name, container_name,
      trigger_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: SqlTriggerGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlTriggerGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_trigger
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_user_defined_function
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_user_defined_function(resource_group_name, account_name, database_name,
    container_name, user_defined_function_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sql_user_defined_function
  summary: 'Gets the SQL userDefinedFunction under an existing Azure Cosmos DB

    database account.'
  syntax:
    content: get_sql_user_defined_function(resource_group_name, account_name, database_name,
      container_name, user_defined_function_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB userDefinedFunction name.
      id: user_defined_function_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'SqlUserDefinedFunctionGetResults or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_user_defined_function
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_containers
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_containers(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_sql_containers
  summary: 'Lists the SQL container under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_sql_containers(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SqlContainerGetResults
      type:
      - azure.mgmt.cosmosdb.models.SqlContainerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_containers
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_databases
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_sql_databases
  summary: 'Lists the SQL databases under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_sql_databases(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SqlDatabaseGetResults
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_databases
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_stored_procedures
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_stored_procedures(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_sql_stored_procedures
  summary: 'Lists the SQL storedProcedure under an existing Azure Cosmos DB

    database account.'
  syntax:
    content: list_sql_stored_procedures(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SqlStoredProcedureGetResults
      type:
      - azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResultsPaged[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_stored_procedures
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_triggers
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_triggers(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_sql_triggers
  summary: 'Lists the SQL trigger under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_sql_triggers(resource_group_name, account_name, database_name, container_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SqlTriggerGetResults
      type:
      - azure.mgmt.cosmosdb.models.SqlTriggerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_triggers
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_user_defined_functions
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_user_defined_functions(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_sql_user_defined_functions
  summary: 'Lists the SQL userDefinedFunction under an existing Azure Cosmos DB

    database account.'
  syntax:
    content: list_sql_user_defined_functions(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of SqlUserDefinedFunctionGetResults
      type:
      - azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResultsPaged[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_user_defined_functions
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_container_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, update_throughput_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: update_sql_container_throughput
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: update_sql_container_throughput(resource_group_name, account_name, database_name,
      container_name, update_throughput_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to provide for the

        RUs per second of the current SQL container.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_container_throughput
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_sql_database_throughput(resource_group_name, account_name, database_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: update_sql_database_throughput
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: update_sql_database_throughput(resource_group_name, account_name, database_name,
      update_throughput_parameters, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to provide for the

        RUs per second of the current SQL database.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_database_throughput
- class: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.models
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.cosmosdb.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\cosmosdb\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.models
references:
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_container
  isExternal: false
  name: create_update_sql_container(resource_group_name, account_name, database_name,
    container_name, create_update_sql_container_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_container
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_database
  isExternal: false
  name: create_update_sql_database(resource_group_name, account_name, database_name,
    create_update_sql_database_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_database
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_stored_procedure
  isExternal: false
  name: create_update_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, create_update_sql_stored_procedure_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_stored_procedure
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_trigger
  isExternal: false
  name: create_update_sql_trigger(resource_group_name, account_name, database_name,
    container_name, trigger_name, create_update_sql_trigger_parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_trigger
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_user_defined_function
  isExternal: false
  name: create_update_sql_user_defined_function(resource_group_name, account_name,
    database_name, container_name, user_defined_function_name, create_update_sql_user_defined_function_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.create_update_sql_user_defined_function
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_container
  isExternal: false
  name: delete_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_container
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_database
  isExternal: false
  name: delete_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_database
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_stored_procedure
  isExternal: false
  name: delete_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_stored_procedure
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_trigger
  isExternal: false
  name: delete_sql_trigger(resource_group_name, account_name, database_name, container_name,
    trigger_name, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_trigger
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_user_defined_function
  isExternal: false
  name: delete_sql_user_defined_function(resource_group_name, account_name, database_name,
    container_name, user_defined_function_name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.delete_sql_user_defined_function
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container
  isExternal: false
  name: get_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container_throughput
  isExternal: false
  name: get_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_container_throughput
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database
  isExternal: false
  name: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database_throughput
  isExternal: false
  name: get_sql_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_stored_procedure
  isExternal: false
  name: get_sql_stored_procedure(resource_group_name, account_name, database_name,
    container_name, stored_procedure_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_stored_procedure
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_trigger
  isExternal: false
  name: get_sql_trigger(resource_group_name, account_name, database_name, container_name,
    trigger_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_trigger
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_user_defined_function
  isExternal: false
  name: get_sql_user_defined_function(resource_group_name, account_name, database_name,
    container_name, user_defined_function_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.get_sql_user_defined_function
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_containers
  isExternal: false
  name: list_sql_containers(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_containers
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_databases
  isExternal: false
  name: list_sql_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_databases
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_stored_procedures
  isExternal: false
  name: list_sql_stored_procedures(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_stored_procedures
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_triggers
  isExternal: false
  name: list_sql_triggers(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_triggers
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_user_defined_functions
  isExternal: false
  name: list_sql_user_defined_functions(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.list_sql_user_defined_functions
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_container_throughput
  isExternal: false
  name: update_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, update_throughput_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_container_throughput
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_database_throughput
  isExternal: false
  name: update_sql_database_throughput(resource_group_name, account_name, database_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.update_sql_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.cosmosdb.operations.SqlResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.SqlResourcesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
  name: AzureOperationPoller[SqlContainerGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainerGetResults
    name: SqlContainerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlContainerGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainerGetResults]]
  name: AzureOperationPoller[ClientRawResponse[SqlContainerGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainerGetResults
    name: SqlContainerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlContainerGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainerGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
  name: AzureOperationPoller[SqlDatabaseGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
    name: SqlDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]]
  name: AzureOperationPoller[ClientRawResponse[SqlDatabaseGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
    name: SqlDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
  name: AzureOperationPoller[SqlStoredProcedureGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
    name: SqlStoredProcedureGetResults
    uid: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]]
  name: AzureOperationPoller[ClientRawResponse[SqlStoredProcedureGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
    name: SqlStoredProcedureGetResults
    uid: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
  name: AzureOperationPoller[SqlTriggerGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
    name: SqlTriggerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]]
  name: AzureOperationPoller[ClientRawResponse[SqlTriggerGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
    name: SqlTriggerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
  name: AzureOperationPoller[SqlUserDefinedFunctionGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
    name: SqlUserDefinedFunctionGetResults
    uid: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]]
  name: AzureOperationPoller[ClientRawResponse[SqlUserDefinedFunctionGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
    name: SqlUserDefinedFunctionGetResults
    uid: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.cosmosdb.models.SqlContainerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
  name: SqlContainerGetResultsPaged[SqlContainerGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlContainerGetResultsPaged
    name: SqlContainerGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.SqlContainerGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainerGetResults
    name: SqlContainerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlContainerGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlContainerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlContainerGetResults]
- fullName: azure.mgmt.cosmosdb.models.SqlDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
  name: SqlDatabaseGetResultsPaged[SqlDatabaseGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabaseGetResultsPaged
    name: SqlDatabaseGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.SqlDatabaseGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
    name: SqlDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.SqlDatabaseGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.SqlDatabaseGetResults]
- fullName: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResultsPaged[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
  name: SqlStoredProcedureGetResultsPaged[SqlStoredProcedureGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResultsPaged
    name: SqlStoredProcedureGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
    name: SqlStoredProcedureGetResults
    uid: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResultsPaged[azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults]
- fullName: azure.mgmt.cosmosdb.models.SqlTriggerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
  name: SqlTriggerGetResultsPaged[SqlTriggerGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlTriggerGetResultsPaged
    name: SqlTriggerGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.SqlTriggerGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
    name: SqlTriggerGetResults
    uid: azure.mgmt.cosmosdb.models.SqlTriggerGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlTriggerGetResultsPaged[azure.mgmt.cosmosdb.models.SqlTriggerGetResults]
- fullName: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResultsPaged[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
  name: SqlUserDefinedFunctionGetResultsPaged[SqlUserDefinedFunctionGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResultsPaged
    name: SqlUserDefinedFunctionGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
    name: SqlUserDefinedFunctionGetResults
    uid: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResultsPaged[azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
  name: AzureOperationPoller[ThroughputSettingsGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  name: AzureOperationPoller[ClientRawResponse[ThroughputSettingsGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
