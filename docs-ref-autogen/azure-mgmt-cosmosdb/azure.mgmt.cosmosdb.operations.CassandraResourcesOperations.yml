### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_table
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_table
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace_throughput
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table_throughput
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_keyspaces
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_tables
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_keyspace_throughput
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_table_throughput
  - azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.models
  class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: CassandraResourcesOperations
  summary: 'CassandraResourcesOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: CassandraResourcesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2020-04-01".'
      id: api_version
  type: class
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    create_update_cassandra_keyspace_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: create_update_cassandra_keyspace
  summary: Create or update an Azure Cosmos DB Cassandra keyspace.
  syntax:
    content: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      create_update_cassandra_keyspace_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current Cassandra keyspace.'
      id: create_update_cassandra_keyspace_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspaceCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        CassandraKeyspaceGetResults or

        ClientRawResponse<CassandraKeyspaceGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
    table_name, create_update_cassandra_table_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: create_update_cassandra_table
  summary: Create or update an Azure Cosmos DB Cassandra Table.
  syntax:
    content: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, create_update_cassandra_table_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current Cassandra Table.'
      id: create_update_cassandra_table_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.CassandraTableCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        CassandraTableGetResults or

        ClientRawResponse<CassandraTableGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTableGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_table
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_cassandra_keyspace
  summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
  syntax:
    content: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_cassandra_table
  summary: Deletes an existing Azure Cosmos DB Cassandra table.
  syntax:
    content: delete_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_table
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_cassandra_keyspace
  summary: 'Gets the Cassandra keyspaces under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CassandraKeyspaceGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cassandra_keyspace_throughput
  summary: 'Gets the RUs per second of the Cassandra Keyspace under an existing

    Azure Cosmos DB database account with the provided name.'
  syntax:
    content: get_cassandra_keyspace_throughput(resource_group_name, account_name,
      keyspace_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace_throughput
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cassandra_table
  summary: 'Gets the Cassandra table under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CassandraTableGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.CassandraTableGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cassandra_table_throughput
  summary: 'Gets the RUs per second of the Cassandra table under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table_throughput
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_keyspaces
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_cassandra_keyspaces
  summary: 'Lists the Cassandra keyspaces under an existing Azure Cosmos DB

    database account.'
  syntax:
    content: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of CassandraKeyspaceGetResults
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_keyspaces
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_tables
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_cassandra_tables(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_cassandra_tables
  summary: 'Lists the Cassandra table under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_cassandra_tables(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of CassandraTableGetResults
      type:
      - azure.mgmt.cosmosdb.models.CassandraTableGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_tables
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_keyspace_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: update_cassandra_keyspace_throughput
  summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace.
  syntax:
    content: update_cassandra_keyspace_throughput(resource_group_name, account_name,
      keyspace_name, update_throughput_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: 'The RUs per second of the

        parameters to provide for the current Cassandra Keyspace.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_keyspace_throughput
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, update_throughput_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: update_cassandra_table_throughput
  summary: Update RUs per second of an Azure Cosmos DB Cassandra table.
  syntax:
    content: update_cassandra_table_throughput(resource_group_name, account_name,
      keyspace_name, table_name, update_throughput_parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      isRequired: true
      type:
      - str
    - description: 'The RUs per second of the

        parameters to provide for the current Cassandra table.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_table_throughput
- class: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.models
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.cosmosdb.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\cosmosdb\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.models
references:
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_keyspace
  isExternal: false
  name: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    create_update_cassandra_keyspace_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_table
  isExternal: false
  name: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
    table_name, create_update_cassandra_table_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.create_update_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_keyspace
  isExternal: false
  name: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_table
  isExternal: false
  name: delete_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.delete_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace
  isExternal: false
  name: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace_throughput
  isExternal: false
  name: get_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_keyspace_throughput
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table
  isExternal: false
  name: get_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table_throughput
  isExternal: false
  name: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.get_cassandra_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_keyspaces
  isExternal: false
  name: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_keyspaces
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_tables
  isExternal: false
  name: list_cassandra_tables(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.list_cassandra_tables
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_keyspace_throughput
  isExternal: false
  name: update_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_keyspace_throughput
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_table_throughput
  isExternal: false
  name: update_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, update_throughput_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.update_cassandra_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.CassandraResourcesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
  name: AzureOperationPoller[CassandraKeyspaceGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
    name: CassandraKeyspaceGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]]
  name: AzureOperationPoller[ClientRawResponse[CassandraKeyspaceGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
    name: CassandraKeyspaceGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
  name: AzureOperationPoller[CassandraTableGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTableGetResults
    name: CassandraTableGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraTableGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTableGetResults]]
  name: AzureOperationPoller[ClientRawResponse[CassandraTableGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTableGetResults
    name: CassandraTableGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraTableGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTableGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
  name: CassandraKeyspaceGetResultsPaged[CassandraKeyspaceGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResultsPaged
    name: CassandraKeyspaceGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
    name: CassandraKeyspaceGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraKeyspaceGetResults]
- fullName: azure.mgmt.cosmosdb.models.CassandraTableGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
  name: CassandraTableGetResultsPaged[CassandraTableGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.CassandraTableGetResultsPaged
    name: CassandraTableGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.CassandraTableGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTableGetResults
    name: CassandraTableGetResults
    uid: azure.mgmt.cosmosdb.models.CassandraTableGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.CassandraTableGetResultsPaged[azure.mgmt.cosmosdb.models.CassandraTableGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
  name: AzureOperationPoller[ThroughputSettingsGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  name: AzureOperationPoller[ClientRawResponse[ThroughputSettingsGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
