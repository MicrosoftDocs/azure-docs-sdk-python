### YamlMime:PythonClass
uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations
name: SqlResourcesOperations
fullName: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations
module: azure.mgmt.cosmosdb.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.cosmosdb.aio.CosmosDBManagementClient>'s\n\
  >\n> <xref:sql_resources> attribute.\n>"
constructor:
  syntax: SqlResourcesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_container
  name: begin_create_update_sql_container
  summary: Create or update an Azure Cosmos DB SQL container.
  signature: 'async begin_create_update_sql_container(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, create_update_sql_container_parameters:
    azure.mgmt.cosmosdb.models._models_py3.SqlContainerCreateUpdateParameters, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlContainerGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_container_parameters
    description: 'The parameters to provide for the current SQL

      container.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlContainerCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlContainerGetResults
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlContainerGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_database
  name: begin_create_update_sql_database
  summary: Create or update an Azure Cosmos DB SQL database.
  signature: 'async begin_create_update_sql_database(resource_group_name: str, account_name:
    str, database_name: str, create_update_sql_database_parameters: azure.mgmt.cosmosdb.models._models_py3.SqlDatabaseCreateUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlDatabaseGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_database_parameters
    description: 'The parameters to provide for the current SQL

      database.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlDatabaseCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlDatabaseGetResults
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlDatabaseGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_role_assignment
  name: begin_create_update_sql_role_assignment
  summary: Creates or updates an Azure Cosmos DB SQL Role Assignment.
  signature: 'async begin_create_update_sql_role_assignment(role_assignment_id: str,
    resource_group_name: str, account_name: str, create_update_sql_role_assignment_parameters:
    azure.mgmt.cosmosdb.models._models_py3.SqlRoleAssignmentCreateUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlRoleAssignmentGetResults]'
  parameters:
  - name: role_assignment_id
    description: The GUID for the Role Assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_role_assignment_parameters
    description: 'The properties required to create or

      update a Role Assignment.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlRoleAssignmentCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlRoleAssignmentGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlRoleAssignmentGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_role_definition
  name: begin_create_update_sql_role_definition
  summary: Creates or updates an Azure Cosmos DB SQL Role Definition.
  signature: 'async begin_create_update_sql_role_definition(role_definition_id: str,
    resource_group_name: str, account_name: str, create_update_sql_role_definition_parameters:
    azure.mgmt.cosmosdb.models._models_py3.SqlRoleDefinitionCreateUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlRoleDefinitionGetResults]'
  parameters:
  - name: role_definition_id
    description: The GUID for the Role Definition.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_role_definition_parameters
    description: 'The properties required to create or

      update a Role Definition.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlRoleDefinitionCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlRoleDefinitionGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlRoleDefinitionGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_stored_procedure
  name: begin_create_update_sql_stored_procedure
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  signature: 'async begin_create_update_sql_stored_procedure(resource_group_name:
    str, account_name: str, database_name: str, container_name: str, stored_procedure_name:
    str, create_update_sql_stored_procedure_parameters: azure.mgmt.cosmosdb.models._models_py3.SqlStoredProcedureCreateUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlStoredProcedureGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: stored_procedure_name
    description: Cosmos DB storedProcedure name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_stored_procedure_parameters
    description: 'The parameters to provide for the current

      SQL storedProcedure.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlStoredProcedureCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlStoredProcedureGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_trigger
  name: begin_create_update_sql_trigger
  summary: Create or update an Azure Cosmos DB SQL trigger.
  signature: 'async begin_create_update_sql_trigger(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, trigger_name: str, create_update_sql_trigger_parameters:
    azure.mgmt.cosmosdb.models._models_py3.SqlTriggerCreateUpdateParameters, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlTriggerGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: trigger_name
    description: Cosmos DB trigger name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_trigger_parameters
    description: 'The parameters to provide for the current SQL

      trigger.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlTriggerCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlTriggerGetResults
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlTriggerGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_create_update_sql_user_defined_function
  name: begin_create_update_sql_user_defined_function
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  signature: 'async begin_create_update_sql_user_defined_function(resource_group_name:
    str, account_name: str, database_name: str, container_name: str, user_defined_function_name:
    str, create_update_sql_user_defined_function_parameters: azure.mgmt.cosmosdb.models._models_py3.SqlUserDefinedFunctionCreateUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.SqlUserDefinedFunctionGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: user_defined_function_name
    description: Cosmos DB userDefinedFunction name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_update_sql_user_defined_function_parameters
    description: 'The parameters to provide for the

      current SQL userDefinedFunction.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionCreateUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either SqlUserDefinedFunctionGetResults
      or

      the result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_container
  name: begin_delete_sql_container
  summary: Deletes an existing Azure Cosmos DB SQL container.
  signature: 'async begin_delete_sql_container(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_database
  name: begin_delete_sql_database
  summary: Deletes an existing Azure Cosmos DB SQL database.
  signature: 'async begin_delete_sql_database(resource_group_name: str, account_name:
    str, database_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_role_assignment
  name: begin_delete_sql_role_assignment
  summary: Deletes an existing Azure Cosmos DB SQL Role Assignment.
  signature: 'async begin_delete_sql_role_assignment(role_assignment_id: str, resource_group_name:
    str, account_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: role_assignment_id
    description: The GUID for the Role Assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_role_definition
  name: begin_delete_sql_role_definition
  summary: Deletes an existing Azure Cosmos DB SQL Role Definition.
  signature: 'async begin_delete_sql_role_definition(role_definition_id: str, resource_group_name:
    str, account_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: role_definition_id
    description: The GUID for the Role Definition.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_stored_procedure
  name: begin_delete_sql_stored_procedure
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  signature: 'async begin_delete_sql_stored_procedure(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, stored_procedure_name: str, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: stored_procedure_name
    description: Cosmos DB storedProcedure name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_trigger
  name: begin_delete_sql_trigger
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  signature: 'async begin_delete_sql_trigger(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, trigger_name: str, **kwargs: Any)
    -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: trigger_name
    description: Cosmos DB trigger name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_delete_sql_user_defined_function
  name: begin_delete_sql_user_defined_function
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  signature: 'async begin_delete_sql_user_defined_function(resource_group_name: str,
    account_name: str, database_name: str, container_name: str, user_defined_function_name:
    str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: user_defined_function_name
    description: Cosmos DB userDefinedFunction name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_migrate_sql_container_to_autoscale
  name: begin_migrate_sql_container_to_autoscale
  summary: Migrate an Azure Cosmos DB SQL container from manual throughput to autoscale.
  signature: 'async begin_migrate_sql_container_to_autoscale(resource_group_name:
    str, account_name: str, database_name: str, container_name: str, **kwargs: Any)
    -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_migrate_sql_container_to_manual_throughput
  name: begin_migrate_sql_container_to_manual_throughput
  summary: Migrate an Azure Cosmos DB SQL container from autoscale to manual throughput.
  signature: 'async begin_migrate_sql_container_to_manual_throughput(resource_group_name:
    str, account_name: str, database_name: str, container_name: str, **kwargs: Any)
    -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_migrate_sql_database_to_autoscale
  name: begin_migrate_sql_database_to_autoscale
  summary: Migrate an Azure Cosmos DB SQL database from manual throughput to autoscale.
  signature: 'async begin_migrate_sql_database_to_autoscale(resource_group_name: str,
    account_name: str, database_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_migrate_sql_database_to_manual_throughput
  name: begin_migrate_sql_database_to_manual_throughput
  summary: Migrate an Azure Cosmos DB SQL database from autoscale to manual throughput.
  signature: 'async begin_migrate_sql_database_to_manual_throughput(resource_group_name:
    str, account_name: str, database_name: str, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_retrieve_continuous_backup_information
  name: begin_retrieve_continuous_backup_information
  summary: Retrieves continuous backup information for a container resource.
  signature: 'async begin_retrieve_continuous_backup_information(resource_group_name:
    str, account_name: str, database_name: str, container_name: str, location: azure.mgmt.cosmosdb.models._models_py3.ContinuousBackupRestoreLocation,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.BackupInformation]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The name of the continuous backup restore location.
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.ContinuousBackupRestoreLocation>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either BackupInformation
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.BackupInformation>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_update_sql_container_throughput
  name: begin_update_sql_container_throughput
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  signature: 'async begin_update_sql_container_throughput(resource_group_name: str,
    account_name: str, database_name: str, container_name: str, update_throughput_parameters:
    azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsUpdateParameters, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: update_throughput_parameters
    description: 'The parameters to provide for the RUs per second of the

      current SQL container.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.begin_update_sql_database_throughput
  name: begin_update_sql_database_throughput
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  signature: 'async begin_update_sql_database_throughput(resource_group_name: str,
    account_name: str, database_name: str, update_throughput_parameters: azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: update_throughput_parameters
    description: 'The parameters to provide for the RUs per second of the

      current SQL database.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ThroughputSettingsGetResults
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_container
  name: get_sql_container
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  signature: 'async get_sql_container(resource_group_name: str, account_name: str,
    database_name: str, container_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlContainerGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlContainerGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlContainerGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_container_throughput
  name: get_sql_container_throughput
  summary: 'Gets the RUs per second of the SQL container under an existing Azure Cosmos
    DB database

    account.'
  signature: 'async get_sql_container_throughput(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ThroughputSettingsGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_database
  name: get_sql_database
  summary: 'Gets the SQL database under an existing Azure Cosmos DB database account
    with the provided

    name.'
  signature: 'async get_sql_database(resource_group_name: str, account_name: str,
    database_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlDatabaseGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlDatabaseGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlDatabaseGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_database_throughput
  name: get_sql_database_throughput
  summary: 'Gets the RUs per second of the SQL database under an existing Azure Cosmos
    DB database account

    with the provided name.'
  signature: 'async get_sql_database_throughput(resource_group_name: str, account_name:
    str, database_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.ThroughputSettingsGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ThroughputSettingsGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_role_assignment
  name: get_sql_role_assignment
  summary: Retrieves the properties of an existing Azure Cosmos DB SQL Role Assignment
    with the given Id.
  signature: 'async get_sql_role_assignment(role_assignment_id: str, resource_group_name:
    str, account_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlRoleAssignmentGetResults'
  parameters:
  - name: role_assignment_id
    description: The GUID for the Role Assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlRoleAssignmentGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlRoleAssignmentGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_role_definition
  name: get_sql_role_definition
  summary: Retrieves the properties of an existing Azure Cosmos DB SQL Role Definition
    with the given Id.
  signature: 'async get_sql_role_definition(role_definition_id: str, resource_group_name:
    str, account_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlRoleDefinitionGetResults'
  parameters:
  - name: role_definition_id
    description: The GUID for the Role Definition.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlRoleDefinitionGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlRoleDefinitionGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_stored_procedure
  name: get_sql_stored_procedure
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database
    account.
  signature: 'async get_sql_stored_procedure(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, stored_procedure_name: str, **kwargs:
    Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlStoredProcedureGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: stored_procedure_name
    description: Cosmos DB storedProcedure name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlStoredProcedureGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlStoredProcedureGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_trigger
  name: get_sql_trigger
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  signature: 'async get_sql_trigger(resource_group_name: str, account_name: str, database_name:
    str, container_name: str, trigger_name: str, **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlTriggerGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: trigger_name
    description: Cosmos DB trigger name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlTriggerGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlTriggerGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.get_sql_user_defined_function
  name: get_sql_user_defined_function
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database
    account.
  signature: 'async get_sql_user_defined_function(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, user_defined_function_name: str,
    **kwargs: Any) -> azure.mgmt.cosmosdb.models._models_py3.SqlUserDefinedFunctionGetResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: user_defined_function_name
    description: Cosmos DB userDefinedFunction name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SqlUserDefinedFunctionGetResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionGetResults>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_containers
  name: list_sql_containers
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  signature: 'list_sql_containers(resource_group_name: str, account_name: str, database_name:
    str, **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlContainerListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlContainerListResult or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlContainerListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_databases
  name: list_sql_databases
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  signature: 'list_sql_databases(resource_group_name: str, account_name: str, **kwargs:
    Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlDatabaseListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlDatabaseListResult or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlDatabaseListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_role_assignments
  name: list_sql_role_assignments
  summary: Retrieves the list of all Azure Cosmos DB SQL Role Assignments.
  signature: 'list_sql_role_assignments(resource_group_name: str, account_name: str,
    **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlRoleAssignmentListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlRoleAssignmentListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlRoleAssignmentListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_role_definitions
  name: list_sql_role_definitions
  summary: Retrieves the list of all Azure Cosmos DB SQL Role Definitions.
  signature: 'list_sql_role_definitions(resource_group_name: str, account_name: str,
    **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlRoleDefinitionListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlRoleDefinitionListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlRoleDefinitionListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_stored_procedures
  name: list_sql_stored_procedures
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database
    account.
  signature: 'list_sql_stored_procedures(resource_group_name: str, account_name: str,
    database_name: str, container_name: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlStoredProcedureListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlStoredProcedureListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlStoredProcedureListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_triggers
  name: list_sql_triggers
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  signature: 'list_sql_triggers(resource_group_name: str, account_name: str, database_name:
    str, container_name: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlTriggerListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlTriggerListResult or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlTriggerListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.list_sql_user_defined_functions
  name: list_sql_user_defined_functions
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database
    account.
  signature: 'list_sql_user_defined_functions(resource_group_name: str, account_name:
    str, database_name: str, container_name: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.cosmosdb.models._models_py3.SqlUserDefinedFunctionListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: Cosmos DB database account name.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: Cosmos DB database name.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: Cosmos DB container name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either SqlUserDefinedFunctionListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cosmosdb.models.SqlUserDefinedFunctionListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.cosmosdb.aio.operations.SqlResourcesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.cosmosdb.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\azure\\mgmt\\cosmosdb\\models\\__init__.py'>
