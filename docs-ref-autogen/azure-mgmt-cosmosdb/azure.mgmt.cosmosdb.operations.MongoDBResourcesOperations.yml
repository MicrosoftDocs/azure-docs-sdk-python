### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_database
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_database
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection_throughput
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database_throughput
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_collections
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_databases
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_collection_throughput
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_database_throughput
  - azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.models
  class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: MongoDBResourcesOperations
  summary: 'MongoDBResourcesOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: MongoDBResourcesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2020-04-01".'
      id: api_version
  type: class
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, create_update_mongo_db_collection_parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: create_update_mongo_db_collection
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: create_update_mongo_db_collection(resource_group_name, account_name,
      database_name, collection_name, create_update_mongo_db_collection_parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current MongoDB Collection.'
      id: create_update_mongo_db_collection_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollectionCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        MongoDBCollectionGetResults or

        ClientRawResponse<MongoDBCollectionGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_mongo_db_database(resource_group_name, account_name, database_name,
    create_update_mongo_db_database_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: create_update_mongo_db_database
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: create_update_mongo_db_database(resource_group_name, account_name, database_name,
      create_update_mongo_db_database_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to

        provide for the current MongoDB database.'
      id: create_update_mongo_db_database_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabaseCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        MongoDBDatabaseGetResults or

        ClientRawResponse<MongoDBDatabaseGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_mongo_db_collection
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: delete_mongo_db_collection(resource_group_name, account_name, database_name,
      collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_mongo_db_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_mongo_db_database
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: delete_mongo_db_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_mongo_db_collection
  summary: 'Gets the MongoDB collection under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_mongo_db_collection(resource_group_name, account_name, database_name,
      collection_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: MongoDBCollectionGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_mongo_db_collection_throughput
  summary: 'Gets the RUs per second of the MongoDB collection under an existing

    Azure Cosmos DB database account with the provided name.'
  syntax:
    content: get_mongo_db_collection_throughput(resource_group_name, account_name,
      database_name, collection_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection_throughput
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_mongo_db_database
  summary: 'Gets the MongoDB databases under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_mongo_db_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: MongoDBDatabaseGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_mongo_db_database_throughput
  summary: 'Gets the RUs per second of the MongoDB database under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ThroughputSettingsGetResults or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database_throughput
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_collections
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_mongo_db_collections(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_mongo_db_collections
  summary: 'Lists the MongoDB collection under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_mongo_db_collections(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of MongoDBCollectionGetResults
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollectionGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_collections
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_databases
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_mongo_db_databases
  summary: 'Lists the MongoDB databases under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of MongoDBDatabaseGetResults
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_databases
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_collection_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, update_throughput_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: update_mongo_db_collection_throughput
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: update_mongo_db_collection_throughput(resource_group_name, account_name,
      database_name, collection_name, update_throughput_parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      isRequired: true
      type:
      - str
    - description: 'The RUs per second of the

        parameters to provide for the current MongoDB collection.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_collection_throughput
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: update_mongo_db_database_throughput
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: update_mongo_db_database_throughput(resource_group_name, account_name,
      database_name, update_throughput_parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group. The name

        is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      isRequired: true
      type:
      - str
    - description: 'The RUs per second of the

        parameters to provide for the current MongoDB database.'
      id: update_throughput_parameters
      isRequired: true
      type:
      - azure.mgmt.cosmosdb.models.ThroughputSettingsUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns

        ThroughputSettingsGetResults or

        ClientRawResponse<ThroughputSettingsGetResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_database_throughput
- class: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.models
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.cosmosdb.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\cosmosdb\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.models
references:
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_collection
  isExternal: false
  name: create_update_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, create_update_mongo_db_collection_parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_database
  isExternal: false
  name: create_update_mongo_db_database(resource_group_name, account_name, database_name,
    create_update_mongo_db_database_parameters, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.create_update_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_collection
  isExternal: false
  name: delete_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_database
  isExternal: false
  name: delete_mongo_db_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.delete_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection
  isExternal: false
  name: get_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection_throughput
  isExternal: false
  name: get_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_collection_throughput
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database
  isExternal: false
  name: get_mongo_db_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database_throughput
  isExternal: false
  name: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.get_mongo_db_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_collections
  isExternal: false
  name: list_mongo_db_collections(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_collections
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_databases
  isExternal: false
  name: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.list_mongo_db_databases
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_collection_throughput
  isExternal: false
  name: update_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, update_throughput_parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_collection_throughput
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_database_throughput
  isExternal: false
  name: update_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    update_throughput_parameters, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.update_mongo_db_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations
  uid: azure.mgmt.cosmosdb.operations.MongoDBResourcesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
  name: AzureOperationPoller[MongoDBCollectionGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
    name: MongoDBCollectionGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]]
  name: AzureOperationPoller[ClientRawResponse[MongoDBCollectionGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
    name: MongoDBCollectionGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
  name: AzureOperationPoller[MongoDBDatabaseGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
    name: MongoDBDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]]
  name: AzureOperationPoller[ClientRawResponse[MongoDBDatabaseGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
    name: MongoDBDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
  name: MongoDBCollectionGetResultsPaged[MongoDBCollectionGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResultsPaged
    name: MongoDBCollectionGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
    name: MongoDBCollectionGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MongoDBCollectionGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBCollectionGetResults]
- fullName: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
  name: MongoDBDatabaseGetResultsPaged[MongoDBDatabaseGetResults]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResultsPaged
    name: MongoDBDatabaseGetResultsPaged
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResultsPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
    name: MongoDBDatabaseGetResults
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResultsPaged[azure.mgmt.cosmosdb.models.MongoDBDatabaseGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
  name: AzureOperationPoller[ThroughputSettingsGetResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
  name: AzureOperationPoller[ClientRawResponse[ThroughputSettingsGetResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
    name: ThroughputSettingsGetResults
    uid: azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.ThroughputSettingsGetResults]]
