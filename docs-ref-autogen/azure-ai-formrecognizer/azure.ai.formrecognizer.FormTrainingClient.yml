### YamlMime:PythonClass
uid: azure.ai.formrecognizer.FormTrainingClient
name: FormTrainingClient
fullName: azure.ai.formrecognizer.FormTrainingClient
module: azure.ai.formrecognizer
inheritances:
- builtins.object
summary: 'FormTrainingClient is the Form Recognizer interface to use for creating,

  and managing custom models. It provides methods for training models on the forms

  you provide, as well as methods for viewing and deleting models, accessing

  account properties, and copying a model to another Form Recognizer resource.'
constructor:
  syntax: FormTrainingClient(endpoint, credential, **kwargs)
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname,

      for example: [https://westus2.api.cognitive.microsoft.com](https://westus2.api.cognitive.microsoft.com)).'
    types:
    - <xref:str>
  - name: credential
    description: 'Credentials needed for the client to connect to Azure.

      This is an instance of AzureKeyCredential if using an API key or a token

      credential from <xref:azure.identity>.'
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to the latest service version.

      Setting to an older version may result in reduced feature compatibility.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormRecognizerApiVersion>
examples:
- "Creating the FormTrainingClient with an endpoint and API key.<!--[!code-python[Main](les\\\
  sample_authentication.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\":\
  \ [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\
  \\1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_authentication.py\"\
  , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
  highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.credentials\
  \ import AzureKeyCredential\n   from azure.ai.formrecognizer import FormTrainingClient\n\
  \   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"]\n   key = os.environ[\"\
  AZURE_FORM_RECOGNIZER_KEY\"]\n\n   form_training_client = FormTrainingClient(endpoint,\
  \ AzureKeyCredential(key))\n\n   ````\n\nCreating the FormTrainingClient with a\
  \ token credential.<!--[!code-python[Main](les\\sample_authentication.py )]-->\n\
  \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\128\\\\\
  azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_authentication.py\", \"xml:space\"\
  : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
  : {\"linenostart\": 1}} -->\n\n````python\n\n   \"\"\"DefaultAzureCredential will\
  \ use the values from these environment\n   variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,\
  \ AZURE_CLIENT_SECRET\n   \"\"\"\n   from azure.ai.formrecognizer import FormTrainingClient\n\
  \   from azure.identity import DefaultAzureCredential\n\n   endpoint = os.environ[\"\
  AZURE_FORM_RECOGNIZER_AAD_ENDPOINT\"]\n   credential = DefaultAzureCredential()\n\
  \n   form_training_client = FormTrainingClient(endpoint, credential)\n\n   ````\n"
methods:
- uid: azure.ai.formrecognizer.FormTrainingClient.begin_copy_model
  name: begin_copy_model
  summary: 'Copy a custom model stored in this resource (the source) to the user specified

    target Form Recognizer resource. This should be called with the source Form Recognizer
    resource

    (with the model that is intended to be copied). The *target* parameter should
    be supplied from the

    target resource''s output from calling the <xref:azure.ai.formrecognizer.get_copy_authorization>
    method.'
  signature: begin_copy_model(model_id, target, **kwargs)
  parameters:
  - name: model_id
    description: Model identifier of the model to copy to target resource.
    isRequired: true
    types:
    - <xref:str>
  - name: target
    description: 'The copy authorization generated from the target resource''s call
      to

      <xref:azure.ai.formrecognizer.get_copy_authorization>.'
    isRequired: true
    types:
    - <xref:dict>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if

      no Retry-After header is present.'
    isRequired: true
    types:
    - <xref:int>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of an LROPoller. Call *result()* on the poller

      object to return a <xref:azure.ai.formrecognizer.CustomFormModelInfo>.'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.formrecognizer.CustomFormModelInfo>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Copy a model from the source resource to the target resource<!--[!code-python[Main](les\\\
    sample_copy_model.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_copy_model.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   source_client\
    \ = FormTrainingClient(endpoint=source_endpoint, credential=AzureKeyCredential(source_key))\n\
    \n   poller = source_client.begin_copy_model(\n       model_id=source_model_id,\n\
    \       target=target  # output from target client's call to get_copy_authorization()\n\
    \   )\n   copied_over_model = poller.result()\n\n   print(\"Model ID: {}\".format(copied_over_model.model_id))\n\
    \   print(\"Status: {}\".format(copied_over_model.status))\n\n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.begin_training
  name: begin_training
  summary: 'Create and train a custom model. The request must include a *training_files_url*
    parameter that is an

    externally accessible Azure storage blob container URI (preferably a Shared Access
    Signature URI). Note that

    a container URI (without SAS) is accepted only when the container is public.

    Models are trained using documents that are of the following content type - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff''. Other type of content in the container
    is ignored.'
  signature: begin_training(training_files_url, use_training_labels, **kwargs)
  parameters:
  - name: training_files_url
    description: 'An Azure Storage blob container''s SAS URI. A container URI (without
      SAS)

      can be used if the container is public. For more information on setting up a
      training data set, see:

      [https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set](https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set)'
    isRequired: true
    types:
    - <xref:str>
  - name: use_training_labels
    description: 'Whether to train with labels or not. Corresponding labeled files
      must

      exist in the blob container if set to *True*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: prefix
    description: 'A case-sensitive prefix string to filter documents in the source
      path for

      training. For example, when using a Azure storage blob URI, use the prefix to
      restrict sub

      folders for training.'
    isRequired: true
    types:
    - <xref:str>
  - name: include_subfolders
    description: 'A flag to indicate if subfolders within the set of prefix folders

      will also need to be included when searching for content to be preprocessed.
      Not supported if

      training with labels.'
    isRequired: true
    types:
    - <xref:bool>
  - name: polling_interval
    description: 'Waiting time between two polls for LRO operations

      if no Retry-After header is present. Defaults to 5 seconds.'
    isRequired: true
    types:
    - <xref:int>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of an LROPoller. Call *result()* on the poller

      object to return a <xref:azure.ai.formrecognizer.CustomFormModel>.'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.formrecognizer.CustomFormModel>]
  exceptions:
  - description: 'Note that if the training fails, the exception is raised, but a
      model with an

      "invalid" status is still created. You can delete this model by calling <xref:azure.ai.formrecognizer.delete_model>'
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Training a model (without labels) with your custom forms.<!--[!code-python[Main](les\\\
    sample_train_model_without_labels.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\\
    samples\\\\sample_train_model_without_labels.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   from azure.ai.formrecognizer import FormTrainingClient\n\
    \   from azure.core.credentials import AzureKeyCredential\n\n   endpoint = os.environ[\"\
    AZURE_FORM_RECOGNIZER_ENDPOINT\"]\n   key = os.environ[\"AZURE_FORM_RECOGNIZER_KEY\"\
    ]\n   container_sas_url = os.environ[\"CONTAINER_SAS_URL\"]\n\n   form_training_client\
    \ = FormTrainingClient(endpoint, AzureKeyCredential(key))\n   poller = form_training_client.begin_training(container_sas_url,\
    \ use_training_labels=False)\n   model = poller.result()\n\n   # Custom model\
    \ information\n   print(\"Model ID: {}\".format(model.model_id))\n   print(\"\
    Status: {}\".format(model.status))\n   print(\"Training started on: {}\".format(model.training_started_on))\n\
    \   print(\"Training completed on: {}\".format(model.training_completed_on))\n\
    \n   print(\"Recognized fields:\")\n   # Looping through the submodels, which\
    \ contains the fields they were trained on\n   for submodel in model.submodels:\n\
    \       print(\"...The submodel has form type '{}'\".format(submodel.form_type))\n\
    \       for name, field in submodel.fields.items():\n           print(\"...The\
    \ model found field '{}' to have label '{}'\".format(\n               name, field.label\n\
    \           ))\n\n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.close
  name: close
  summary: Close the <xref:azure.ai.formrecognizer.FormTrainingClient> session.
  signature: close()
- uid: azure.ai.formrecognizer.FormTrainingClient.delete_model
  name: delete_model
  summary: 'Mark model for deletion. Model artifacts will be permanently

    removed within a predetermined period.'
  signature: delete_model(model_id, **kwargs)
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:None>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError or ~azure.core.exceptions.ResourceNotFoundError
  examples:
  - "Delete a custom model.<!--[!code-python[Main](les\\sample_manage_custom_models.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_manage_custom_models.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   form_training_client.delete_model(model_id=custom_model.model_id)\n\
    \n   try:\n       form_training_client.get_custom_model(model_id=custom_model.model_id)\n\
    \   except ResourceNotFoundError:\n       print(\"Successfully deleted model with\
    \ id {}\".format(custom_model.model_id))\n\n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.get_account_properties
  name: get_account_properties
  summary: Get information about the models on the form recognizer account.
  signature: get_account_properties(**kwargs)
  return:
    description: 'Summary of models on account - custom model count,

      custom model limit.'
    types:
    - <xref:azure.ai.formrecognizer.AccountProperties>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Get properties for the form recognizer account.<!--[!code-python[Main](les\\\
    sample_manage_custom_models.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\\
    sample_manage_custom_models.py\", \"xml:space\": \"preserve\", \"language\": \"\
    python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n\
    ````python\n\n   from azure.core.credentials import AzureKeyCredential\n   from\
    \ azure.core.exceptions import ResourceNotFoundError\n   from azure.ai.formrecognizer\
    \ import FormTrainingClient\n\n   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"\
    ]\n   key = os.environ[\"AZURE_FORM_RECOGNIZER_KEY\"]\n\n   form_training_client\
    \ = FormTrainingClient(endpoint=endpoint, credential=AzureKeyCredential(key))\n\
    \   # First, we see how many custom models we have, and what our limit is\n  \
    \ account_properties = form_training_client.get_account_properties()\n   print(\"\
    Our account has {} custom models, and we can have at most {} custom models\\n\"\
    .format(\n       account_properties.custom_model_count, account_properties.custom_model_limit\n\
    \   ))\n\n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.get_copy_authorization
  name: get_copy_authorization
  summary: 'Generate authorization for copying a custom model into the target Form
    Recognizer resource.

    This should be called by the target resource (where the model will be copied to)

    and the output can be passed as the *target* parameter into <xref:azure.ai.formrecognizer.FormTrainingClient.begin_copy_model>.'
  signature: get_copy_authorization(resource_id, resource_region, **kwargs)
  parameters:
  - name: resource_id
    description: 'Azure Resource Id of the target Form Recognizer resource

      where the model will be copied to.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_region
    description: 'Location of the target Form Recognizer resource. A valid Azure

      region name supported by Cognitive Services. For example, ''westus'', ''eastus''
      etc.

      See [https://azure.microsoft.com/global-infrastructure/services/?products=cognitive-services](https://azure.microsoft.com/global-infrastructure/services/?products=cognitive-services)

      for the regional availability of Cognitive Services'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'A dictionary with values for the copy authorization -

      "modelId", "accessToken", "resourceId", "resourceRegion", and "expirationDateTimeTicks".'
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:int>]]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Authorize the target resource to receive the copied model<!--[!code-python[Main](les\\\
    sample_copy_model.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_copy_model.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   target_client\
    \ = FormTrainingClient(endpoint=target_endpoint, credential=AzureKeyCredential(target_key))\n\
    \n   target = target_client.get_copy_authorization(\n       resource_region=target_region,\n\
    \       resource_id=target_resource_id\n   )\n   # model ID that target client\
    \ will use to access the model once copy is complete\n   print(\"Model ID: {}\"\
    .format(target[\"modelId\"]))\n\n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.get_custom_model
  name: get_custom_model
  summary: 'Get a description of a custom model, including the types of forms

    it can recognize, and the fields it will extract for each form type.'
  signature: get_custom_model(model_id, **kwargs)
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: CustomFormModel
    types:
    - <xref:azure.ai.formrecognizer.CustomFormModel>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError or ~azure.core.exceptions.ResourceNotFoundError
  examples:
  - "Get a custom model with a model ID.<!--[!code-python[Main](les\\sample_manage_custom_models.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\sample_manage_custom_models.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   custom_model =\
    \ form_training_client.get_custom_model(model_id=first_model.model_id)\n   print(\"\
    \\nModel ID: {}\".format(custom_model.model_id))\n   print(\"Status: {}\".format(custom_model.status))\n\
    \   print(\"Training started on: {}\".format(custom_model.training_started_on))\n\
    \   print(\"Training completed on: {}\".format(custom_model.training_completed_on))\n\
    \n   ````\n"
- uid: azure.ai.formrecognizer.FormTrainingClient.get_form_recognizer_client
  name: get_form_recognizer_client
  summary: Get an instance of a FormRecognizerClient from FormTrainingClient.
  signature: get_form_recognizer_client(**kwargs)
  return:
    description: A FormRecognizerClient
    types:
    - <xref:azure.ai.formrecognizer.FormRecognizerClient>
- uid: azure.ai.formrecognizer.FormTrainingClient.list_custom_models
  name: list_custom_models
  summary: 'List information for each model, including model id,

    model status, and when it was created and last modified.'
  signature: list_custom_models(**kwargs)
  return:
    description: ItemPaged[<xref:azure.ai.formrecognizer.CustomFormModelInfo>]
    types:
    - <xref:azure.core.paging.ItemPaged>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "List model information for each model on the account.<!--[!code-python[Main](les\\\
    sample_manage_custom_models.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\128\\\\azure-ai-formrecognizer-3.0.0\\\\samples\\\\\
    sample_manage_custom_models.py\", \"xml:space\": \"preserve\", \"language\": \"\
    python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n\
    ````python\n\n   custom_models = form_training_client.list_custom_models()\n\n\
    \   print(\"We have models with the following IDs:\")\n\n   # Let's pull out the\
    \ first model\n   first_model = next(custom_models)\n   print(first_model.model_id)\n\
    \   for model in custom_models:\n       print(model.model_id)\n\n   ````\n"
