### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.async.EventHubClientAsync.add_async_epoch_receiver
  - azure.eventhub.async.EventHubClientAsync.add_async_receiver
  - azure.eventhub.async.EventHubClientAsync.add_async_sender
  - azure.eventhub.async.EventHubClientAsync.get_eventhub_info_async
  - azure.eventhub.async.EventHubClientAsync.run_async
  - azure.eventhub.async.EventHubClientAsync.stop_async
  class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub.EventHubClient
  langs:
  - python
  module: azure.eventhub.async
  name: EventHubClientAsync
  source:
    id: EventHubClientAsync
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 29
  summary: 'The EventHubClient class defines a high level interface for asynchronously

    sending events to and receiving events from the Azure Event Hubs service.







    '
  syntax:
    content: EventHubClientAsync(address, username=None, password=None, debug=False)
  type: class
  uid: azure.eventhub.async.EventHubClientAsync
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.add_async_epoch_receiver
  langs:
  - python
  module: azure.eventhub.async
  name: add_async_epoch_receiver
  source:
    id: add_async_epoch_receiver
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 148
  summary: 'Add an async receiver to the client with an epoch value. Only a single
    epoch receiver

    can connect to a partition at any given time - additional epoch receivers must
    have

    a higher epoch value or they will be rejected. If a 2nd epoch receiver has

    connected, the first will be closed.

    :param consumer_group: The name of the consumer group.

    :type consumer_group: str

    :param partition: The ID of the partition.

    :type partition: str

    :param epoch: The epoch value for the receiver.

    :type epoch: int

    :param prefetch: The message prefetch count of the receiver. Default is 300.

    :type prefetch: int

    :returns: ~azure.eventhub.ReceiverAsync

    '
  syntax:
    content: add_async_epoch_receiver(consumer_group, partition, epoch, prefetch=300,
      loop=None)
    parameters:
    - id: consumer_group
    - id: partition
    - id: epoch
    - defaultValue: '300'
      id: prefetch
    - defaultValue: None
      id: loop
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.add_async_epoch_receiver
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.add_async_receiver
  langs:
  - python
  module: azure.eventhub.async
  name: add_async_receiver
  source:
    id: add_async_receiver
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 126
  summary: 'Add an async receiver to the client for a particular consumer group and
    partition.

    :param consumer_group: The name of the consumer group.

    :type consumer_group: str

    :param partition: The ID of the partition.

    :type partition: str

    :param offset: The offset from which to start receiving.

    :type offset: ~azure.eventhub.Offset

    :param prefetch: The message prefetch count of the receiver. Default is 300.

    :type prefetch: int

    :returns: ~azure.eventhub.ReceiverAsync

    '
  syntax:
    content: add_async_receiver(consumer_group, partition, offset=None, prefetch=300,
      loop=None)
    parameters:
    - id: consumer_group
    - id: partition
    - defaultValue: None
      id: offset
    - defaultValue: '300'
      id: prefetch
    - defaultValue: None
      id: loop
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.add_async_receiver
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.add_async_sender
  langs:
  - python
  module: azure.eventhub.async
  name: add_async_sender
  source:
    id: add_async_sender
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 170
  summary: "Add an async sender to the client to send ~azure.eventhub.EventData object\n\
    to an EventHub.\n:param partition: Optionally specify a particular partition to\
    \ send to.\n\n\n   If omitted, the events will be distributed to available partitions\
    \ via\n   round-robin\n\n"
  syntax:
    content: add_async_sender(partition=None, loop=None)
    parameters:
    - defaultValue: None
      id: partition
    - defaultValue: None
      id: loop
    return:
      description: '~azure.eventhub.SenderAsync

        '
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.add_async_sender
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.get_eventhub_info_async
  langs:
  - python
  module: azure.eventhub.async
  name: get_eventhub_info_async
  source:
    id: get_eventhub_info_async
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 101
  summary: 'Get details on the specified EventHub async.

    :returns: dict

    '
  syntax:
    content: get_eventhub_info_async()
    parameters: []
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.get_eventhub_info_async
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.run_async
  langs:
  - python
  module: azure.eventhub.async
  name: run_async
  source:
    id: run_async
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 79
  summary: 'Run the EventHubClient asynchronously.

    Opens the connection and starts running all AsyncSender/AsyncReceiver clients.

    '
  syntax:
    content: run_async()
    parameters: []
    return:
      description: '~azure.eventhub.EventHubClientAsync

        '
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.run_async
- class: azure.eventhub.async.EventHubClientAsync
  fullName: azure.eventhub.async.EventHubClientAsync.stop_async
  langs:
  - python
  module: azure.eventhub.async
  name: stop_async
  source:
    id: stop_async
    path: azure\eventhub\async\__init__.py
    remote:
      branch: develop
      path: azure\eventhub\async\__init__.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 92
  summary: 'Stop the EventHubClient and all its Sender/Receiver clients.

    '
  syntax:
    content: stop_async()
    parameters: []
  type: method
  uid: azure.eventhub.async.EventHubClientAsync.stop_async
references:
- fullName: azure.eventhub.async.EventHubClientAsync.add_async_epoch_receiver
  isExternal: false
  name: add_async_epoch_receiver
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.add_async_epoch_receiver
- fullName: azure.eventhub.async.EventHubClientAsync.add_async_receiver
  isExternal: false
  name: add_async_receiver
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.add_async_receiver
- fullName: azure.eventhub.async.EventHubClientAsync.add_async_sender
  isExternal: false
  name: add_async_sender
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.add_async_sender
- fullName: azure.eventhub.async.EventHubClientAsync.get_eventhub_info_async
  isExternal: false
  name: get_eventhub_info_async
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.get_eventhub_info_async
- fullName: azure.eventhub.async.EventHubClientAsync.run_async
  isExternal: false
  name: run_async
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.run_async
- fullName: azure.eventhub.async.EventHubClientAsync.stop_async
  isExternal: false
  name: stop_async
  parent: azure.eventhub.async.EventHubClientAsync
  uid: azure.eventhub.async.EventHubClientAsync.stop_async
