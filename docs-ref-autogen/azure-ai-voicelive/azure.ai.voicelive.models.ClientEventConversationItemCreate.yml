### YamlMime:PythonClass
uid: azure.ai.voicelive.models.ClientEventConversationItemCreate
name: ClientEventConversationItemCreate
fullName: azure.ai.voicelive.models.ClientEventConversationItemCreate
module: azure.ai.voicelive.models
summary: 'Add a new Item to the Conversation''s context, including messages, function

  calls, and function call responses. This event can be used both to populate a

  "history" of the conversation and to add new items mid-stream, but has the

  current limitation that it cannot populate assistant audio messages.

  If successful, the server will respond with a `conversation.item.created`

  event, otherwise an `error` event will be sent.'
constructor:
  syntax: 'ClientEventConversationItemCreate(*args: Any, **kwargs: Any)'
variables:
- description: The event type, must be `conversation.item.create`. Required.
  name: type
  types:
  - <xref:str>
  - <xref:azure.ai.voicelive.models.CONVERSATION_ITEM_CREATE>
- description: Optional client-generated ID used to identify this event.
  name: event_id
  types:
  - <xref:str>
- description: 'The ID of the preceding item after which the new item will be inserted.

    If not set, the new item will be appended to the end of the conversation.

    If set to `root`, the new item will be added to the beginning of the conversation.

    If set to an existing ID, it allows an item to be inserted mid-conversation. If
    the

    ID cannot be found, an error will be returned and the item will not be added.'
  name: previous_item_id
  types:
  - <xref:str>
- name: item
  types:
  - <xref:azure.ai.voicelive.models.ConversationRequestItem>
methods:
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> tuple[str, Any]
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.item
  name: item
  signature: 'item: _models.ConversationRequestItem | None'
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.previous_item_id
  name: previous_item_id
  summary: 'The ID of the preceding item after which the new item will be inserted.

    If not set, the new item will be appended to the end of the conversation.

    If set to `root`, the new item will be added to the beginning of the conversation.

    If set to an existing ID, it allows an item to be inserted mid-conversation. If
    the

    ID cannot be found, an error will be returned and the item will not be added.'
  signature: 'previous_item_id: str | None'
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.type
  name: type
  summary: The event type, must be `conversation.item.create`. Required.
  signature: 'type: create''>]'
- uid: azure.ai.voicelive.models.ClientEventConversationItemCreate.event_id
  name: event_id
  signature: 'event_id: str | None'
