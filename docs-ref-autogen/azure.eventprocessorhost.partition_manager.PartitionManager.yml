### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease
  - azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.check_and_add_pump_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.count_leases_by_owner
  - azure.eventprocessorhost.partition_manager.PartitionManager.create_new_pump_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.get_partition_ids_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.initialize_stores_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.remove_all_pumps_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.remove_pump_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.retry
  - azure.eventprocessorhost.partition_manager.PartitionManager.retry_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.run_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.run_loop_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.start_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.stop_async
  - azure.eventprocessorhost.partition_manager.PartitionManager.which_lease_to_steal
  class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: PartitionManager
  source:
    id: PartitionManager
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 19
  summary: 'Manages the partition event pump execution

















    '
  syntax:
    content: PartitionManager(host)
  type: class
  uid: azure.eventprocessorhost.partition_manager.PartitionManager
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: attempt_renew_lease
  source:
    id: attempt_renew_lease
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 286
  summary: 'Make attempt_renew_lease async call sync

    '
  syntax:
    content: attempt_renew_lease(lease_task, owned_by_others_q, lease_manager)
    parameters:
    - id: lease_task
    - id: owned_by_others_q
    - id: lease_manager
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: attempt_renew_lease_async
  source:
    id: attempt_renew_lease_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 293
  summary: 'Attempts to renew a potential lease if possible and

    marks in the queue as none adds to adds to the queue

    '
  syntax:
    content: attempt_renew_lease_async(lease_task, owned_by_others_q, lease_manager)
    parameters:
    - id: lease_task
    - id: owned_by_others_q
    - id: lease_manager
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.check_and_add_pump_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: check_and_add_pump_async
  source:
    id: check_and_add_pump_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 190
  summary: 'Updates the lease on an exisiting pump

    '
  syntax:
    content: check_and_add_pump_async(partition_id, lease)
    parameters:
    - id: partition_id
    - id: lease
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.check_and_add_pump_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.count_leases_by_owner
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: count_leases_by_owner
  source:
    id: count_leases_by_owner
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 279
  summary: 'Returns a dictionary of leases by current owner

    '
  syntax:
    content: count_leases_by_owner(leases)
    parameters:
    - id: leases
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.count_leases_by_owner
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.create_new_pump_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: create_new_pump_async
  source:
    id: create_new_pump_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 209
  summary: 'Create a new pump thread with a given lease

    '
  syntax:
    content: create_new_pump_async(partition_id, lease)
    parameters:
    - id: partition_id
    - id: lease
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.create_new_pump_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.get_partition_ids_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: get_partition_ids_async
  source:
    id: get_partition_ids_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 31
  summary: 'Returns a list of all the event hub partition ids

    '
  syntax:
    content: get_partition_ids_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.get_partition_ids_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.initialize_stores_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: initialize_stores_async
  source:
    id: initialize_stores_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 81
  summary: 'Intializes the partition checkpoint and lease store ensures that a checkpoint

    exists for all partitions. Note in this case checkpoint and lease stores are

    the same storage manager construct. Returns the number of partitions

    '
  syntax:
    content: initialize_stores_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.initialize_stores_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.remove_all_pumps_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: remove_all_pumps_async
  source:
    id: remove_all_pumps_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 239
  summary: 'Stops all partition pumps

    (Note this might be wrong and need to await all tasks before returning done)

    '
  syntax:
    content: remove_all_pumps_async(reason)
    parameters:
    - id: reason
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.remove_all_pumps_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.remove_pump_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: remove_pump_async
  source:
    id: remove_pump_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 220
  summary: 'Stops a single partiton pump

    '
  syntax:
    content: remove_pump_async(partition_id, reason)
    parameters:
    - id: partition_id
    - id: reason
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.remove_pump_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.retry
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: retry
  source:
    id: retry
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 103
  summary: 'Make attempt_renew_lease async call sync

    '
  syntax:
    content: retry(func, partition_id, retry_message, final_failure_message, max_retries,
      host_id)
    parameters:
    - id: func
    - id: partition_id
    - id: retry_message
    - id: final_failure_message
    - id: max_retries
    - id: host_id
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.retry
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.retry_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: retry_async
  source:
    id: retry_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 111
  summary: 'Throws if it runs out of retries. If it returns, action succeeded

    '
  syntax:
    content: retry_async(func, partition_id, retry_message, final_failure_message,
      max_retries, host_id)
    parameters:
    - id: func
    - id: partition_id
    - id: retry_message
    - id: final_failure_message
    - id: max_retries
    - id: host_id
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.retry_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.run_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: run_async
  source:
    id: run_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 66
  summary: 'Starts the run loop and manages exceptions and cleanup

    '
  syntax:
    content: run_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.run_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.run_loop_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: run_loop_async
  source:
    id: run_loop_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 128
  summary: 'This is the main execution loop for allocating and manging pumps

    '
  syntax:
    content: run_loop_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.run_loop_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.start_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: start_async
  source:
    id: start_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 47
  summary: 'Intializes the partition checkpoint and lease store and then calls run
    async.

    '
  syntax:
    content: start_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.start_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.stop_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: stop_async
  source:
    id: stop_async
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 58
  summary: 'Terminiates the partition manger.

    '
  syntax:
    content: stop_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.stop_async
- class: azure.eventprocessorhost.partition_manager.PartitionManager
  fullName: azure.eventprocessorhost.partition_manager.PartitionManager.which_lease_to_steal
  langs:
  - python
  module: azure.eventprocessorhost.partition_manager
  name: which_lease_to_steal
  source:
    id: which_lease_to_steal
    path: azure\eventprocessorhost\partition_manager.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 248
  summary: 'Determines and return which lease to steal

    If the number of leases is a multiple of the number of hosts, then the desired

    configuration is that all hosts own the name number of leases, and the

    difference between the "biggest" owner and any other is 0.


    If the number of leases is not a multiple of the number of hosts, then the most

    even configurationpossible is for some hosts to have (self, leases/hosts) leases

    and others to have (self, (self, leases/hosts) + 1). For example, for 16 partitions

    distributed over five hosts, the distribution would be 4, 3, 3, 3, 3, or any of
    the

    possible reorderings.


    In either case, if the difference between this host and the biggest owner is 2
    or more,

    then thesystem is not in the most evenly-distributed configuration, so steal one
    lease

    from the biggest. If there is a tie for biggest, we pick whichever appears first
    in the

    list because it doesn''t really matter which "biggest" is trimmed down.


    Stealing one at a time prevents flapping because it reduces the difference between
    the

    biggest and this host by two at a time. If the starting difference is two or greater,

    then the difference cannot end up below 0. This host may become tied for biggest,
    but it

    cannot become larger than the host that it is stealing from.

    '
  syntax:
    content: which_lease_to_steal(stealable_leases, have_lease_count)
    parameters:
    - id: stealable_leases
    - id: have_lease_count
  type: method
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.which_lease_to_steal
references:
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease
  isExternal: false
  name: attempt_renew_lease
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease_async
  isExternal: false
  name: attempt_renew_lease_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.attempt_renew_lease_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.check_and_add_pump_async
  isExternal: false
  name: check_and_add_pump_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.check_and_add_pump_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.count_leases_by_owner
  isExternal: false
  name: count_leases_by_owner
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.count_leases_by_owner
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.create_new_pump_async
  isExternal: false
  name: create_new_pump_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.create_new_pump_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.get_partition_ids_async
  isExternal: false
  name: get_partition_ids_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.get_partition_ids_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.initialize_stores_async
  isExternal: false
  name: initialize_stores_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.initialize_stores_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.remove_all_pumps_async
  isExternal: false
  name: remove_all_pumps_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.remove_all_pumps_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.remove_pump_async
  isExternal: false
  name: remove_pump_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.remove_pump_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.retry
  isExternal: false
  name: retry
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.retry
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.retry_async
  isExternal: false
  name: retry_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.retry_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.run_async
  isExternal: false
  name: run_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.run_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.run_loop_async
  isExternal: false
  name: run_loop_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.run_loop_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.start_async
  isExternal: false
  name: start_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.start_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.stop_async
  isExternal: false
  name: stop_async
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.stop_async
- fullName: azure.eventprocessorhost.partition_manager.PartitionManager.which_lease_to_steal
  isExternal: false
  name: which_lease_to_steal
  parent: azure.eventprocessorhost.partition_manager.PartitionManager
  uid: azure.eventprocessorhost.partition_manager.PartitionManager.which_lease_to_steal
