### YamlMime:PythonClass
uid: azure.mgmt.quota.operations.GroupQuotasOperations
name: GroupQuotasOperations
fullName: azure.mgmt.quota.operations.GroupQuotasOperations
module: azure.mgmt.quota.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.quota.QuotaMgmtClient>'s\n\
  >\n> <xref:group_quotas> attribute.\n>"
constructor:
  syntax: GroupQuotasOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.quota.operations.GroupQuotasOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates a new GroupQuota for the name passed. A RequestId will be returned
    by the Service. The

    status can be polled periodically. The status Async polling is using standards
    defined at -

    [https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations](https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations).

    Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration
    will be

    specified in retry-after header. Once the operation gets to terminal state - Succeeded
    |

    Failed, then the URI will change to Get URI and full details can be checked.'
  signature: 'begin_create_or_update(management_group_id: str, group_quota_name: str,
    group_quota_put_request_body: _models.GroupQuotasEntity | None = None, *, content_type:
    str = ''application/json'', **kwargs: Any) -> LROPoller[_models.GroupQuotasEntity]'
  parameters:
  - name: management_group_id
    description: The management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_put_request_body
    description: 'The GroupQuota body details for creation or update of a

      GroupQuota entity. Is one of the following types: GroupQuotasEntity, JSON, IO[bytes]
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotasEntity>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns GroupQuotasEntity. The GroupQuotasEntity
      is

      compatible with MutableMapping'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.GroupQuotasEntity>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotasOperations.begin_delete
  name: begin_delete
  summary: 'Deletes the GroupQuotas for the name passed. All the remaining shareQuota
    in the GroupQuotas

    will be lost.'
  signature: 'begin_delete(management_group_id: str, group_quota_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: management_group_id
    description: The management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns None
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotasOperations.begin_update
  name: begin_update
  summary: 'Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will
    be returned by the

    Service. The status can be polled periodically. The status Async polling is using
    standards

    defined at -

    [https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations](https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations).

    Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration
    will be

    specified in retry-after header. Once the operation gets to terminal state - Succeeded
    |

    Failed, then the URI will change to Get URI and full details can be checked.

    Any change in the filters will be applicable to the future quota assignments,
    existing quota

    allocated to subscriptions from the GroupQuotas remains unchanged.'
  signature: 'begin_update(management_group_id: str, group_quota_name: str, group_quotas_patch_request_body:
    _models.GroupQuotasEntityPatch | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.GroupQuotasEntity]'
  parameters:
  - name: management_group_id
    description: The management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: group_quotas_patch_request_body
    description: 'The  GroupQuotas Patch Request. Is one of the following

      types: GroupQuotasEntityPatch, JSON, IO[bytes] Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotasEntityPatch>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns GroupQuotasEntity. The GroupQuotasEntity
      is

      compatible with MutableMapping'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.GroupQuotasEntity>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotasOperations.get
  name: get
  summary: 'Gets the GroupQuotas for the name passed. It will return the GroupQuotas
    properties only. The

    details on group quota can be access from the group quota APIs.'
  signature: 'get(management_group_id: str, group_quota_name: str, **kwargs: Any)
    -> GroupQuotasEntity'
  parameters:
  - name: management_group_id
    description: The management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GroupQuotasEntity. The GroupQuotasEntity is compatible with MutableMapping
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotasEntity>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotasOperations.list
  name: list
  summary: 'Lists GroupQuotas for the scope passed. It will return the GroupQuotas
    QuotaEntity properties

    only.The details on group quota can be access from the group quota APIs.'
  signature: 'list(management_group_id: str, **kwargs: Any) -> ItemPaged[GroupQuotasEntity]'
  parameters:
  - name: management_group_id
    description: The management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of GroupQuotasEntity
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.quota.models.GroupQuotasEntity>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
