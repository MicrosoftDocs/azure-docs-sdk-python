### YamlMime:PythonClass
uid: azure.mgmt.support.operations.SupportTicketsOperations
name: SupportTicketsOperations
fullName: azure.mgmt.support.operations.SupportTicketsOperations
module: azure.mgmt.support.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.support.MicrosoftSupport>'s\n\
  >\n> <xref:support_tickets> attribute.\n>"
constructor:
  syntax: SupportTicketsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.support.operations.SupportTicketsOperations.begin_create
  name: begin_create
  summary: 'Creates a new support ticket for Subscription and Service limits (Quota),
    Technical, Billing,

    and Subscription Management issues for the specified subscription. Learn the [prerequisites](https://aka.ms/supportAPI)
    required to create a support

    ticket.:code:*<br/>*`<br/>`Always call the Services and ProblemClassifications
    API to get

    the most recent set of services and problem categories required for support ticket

    creation.:code:`<br/>`>>:code:`<br/>`Adding attachments is not currently supported
    via the API.

    To add a file to an existing support ticket, visit the `Manage support ticket

    <https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest>`_<<

    page in the Azure portal, select the support ticket, and use the file upload control
    to add a

    new file.:code:*<br/>*`<br/>`Providing consent to share diagnostic information
    with Azure

    support is currently not supported via the API. The Azure support engineer working
    on your

    ticket will reach out to you for consent if your issue requires gathering diagnostic

    information from your Azure resources.:code:`<br/>``<br/>`**Creating a support
    ticket

    for on-behalf-of**: Include *x-ms-authorization-auxiliary* header to provide an
    auxiliary

    token as per [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).

    The primary token will be from the tenant for whom a support ticket is being raised
    against the

    subscription, i.e. Cloud solution provider (CSP) customer tenant. The auxiliary
    token will be

    from the Cloud solution provider (CSP) partner tenant.'
  signature: 'begin_create(support_ticket_name: str, create_support_ticket_parameters:
    _models.SupportTicketDetails, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.SupportTicketDetails]'
  parameters:
  - name: support_ticket_name
    description: Support ticket name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: create_support_ticket_parameters
    description: 'Support ticket request payload. Is either a

      SupportTicketDetails type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.support.models.SupportTicketDetails>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either SupportTicketDetails
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.support.models.SupportTicketDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.operations.SupportTicketsOperations.check_name_availability
  name: check_name_availability
  summary: 'Check the availability of a resource name. This API should be used to
    check the uniqueness of

    the name for support ticket creation for the selected subscription.'
  signature: 'check_name_availability(check_name_availability_input: _models.CheckNameAvailabilityInput,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.CheckNameAvailabilityOutput'
  parameters:
  - name: check_name_availability_input
    description: 'Input to check. Is either a CheckNameAvailabilityInput

      type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.support.models.CheckNameAvailabilityInput>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckNameAvailabilityOutput or the result of cls(response)
    types:
    - <xref:azure.mgmt.support.models.CheckNameAvailabilityOutput>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.operations.SupportTicketsOperations.get
  name: get
  summary: 'Get ticket details for an Azure subscription. Support ticket data is available
    for 18 months

    after ticket creation. If a ticket was created more than 18 months ago, a request
    for data

    might cause an error.'
  signature: 'get(support_ticket_name: str, **kwargs: Any) -> SupportTicketDetails'
  parameters:
  - name: support_ticket_name
    description: Support ticket name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SupportTicketDetails or the result of cls(response)
    types:
    - <xref:azure.mgmt.support.models.SupportTicketDetails>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.operations.SupportTicketsOperations.list
  name: list
  summary: 'Lists all the support tickets for an Azure subscription. You can also
    filter the support

    tickets by *Status*, *CreatedDate*, *ServiceId*, and *ProblemClassificationId*
    using the

    $filter parameter. Output will be a paged result with *nextLink*, using which
    you can

    retrieve the next set of support tickets. `<br/>`:code:>>`<<<br/>`Support ticket
    data is

    available for 18 months after ticket creation. If a ticket was created more than
    18 months ago,

    a request for data might cause an error.'
  signature: 'list(top: int | None = None, filter: str | None = None, **kwargs: Any)
    -> Iterable[SupportTicketDetails]'
  parameters:
  - name: top
    description: 'The number of values to return in the collection. Default is 25
      and max is 100.

      Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  - name: filter
    description: 'The filter to apply on the operation. We support ''odata v4.0''
      filter semantics.

      [Learn more](https://docs.microsoft.com/odata/concepts/queryoptions-overview).
      *Status*,

      *ServiceId*, and *ProblemClassificationId* filters can only be used with Equals
      (''eq'')

      operator. For *CreatedDate* filter, the supported operators are Greater Than
      (''gt'') and Greater

      Than or Equals (''ge''). When using both filters, combine them using the logical
      ''AND''. Default

      value is None.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either SupportTicketDetails or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.support.models.SupportTicketDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.operations.SupportTicketsOperations.update
  name: update
  summary: 'This API allows you to update the severity level, ticket status, advanced
    diagnostic consent

    and your contact information in the support ticket.:code:*<br/>*:code:>>`<<<br/>`Note:
    The severity

    levels cannot be changed if a support ticket is actively being worked upon by
    an Azure support

    engineer. In such a case, contact your support engineer to request severity update
    by adding a

    new communication using the Communications API.'
  signature: 'update(support_ticket_name: str, update_support_ticket: _models.UpdateSupportTicket,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.SupportTicketDetails'
  parameters:
  - name: support_ticket_name
    description: Support ticket name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: update_support_ticket
    description: 'UpdateSupportTicket object. Is either a UpdateSupportTicket type

      or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.support.models.UpdateSupportTicket>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: SupportTicketDetails or the result of cls(response)
    types:
    - <xref:azure.mgmt.support.models.SupportTicketDetails>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.support.operations.SupportTicketsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.support.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\support\\models\\__init__.py'>
