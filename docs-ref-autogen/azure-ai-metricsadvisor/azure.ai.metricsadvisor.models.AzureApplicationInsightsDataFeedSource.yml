### YamlMime:PythonClass
uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource
name: AzureApplicationInsightsDataFeedSource
fullName: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource
module: azure.ai.metricsadvisor.models
inheritances:
- azure.ai.metricsadvisor.models._models.DataFeedSource
summary: AzureApplicationInsightsDataFeedSource.
constructor:
  syntax: 'AzureApplicationInsightsDataFeedSource(query: str, **kwargs: Any)'
  parameters:
  - name: query
    description: Required. Query.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: credential_id
    description: The datasource credential id.
    types:
    - <xref:str>
  - name: azure_cloud
    description: Azure cloud environment.
    types:
    - <xref:str>
  - name: application_id
    description: Azure Application Insights ID.
    types:
    - <xref:str>
  - name: api_key
    description: API Key.
    types:
    - <xref:str>
variables:
- description: 'Required. data source type.Constant filled by server.  Possible values

    include: "AzureApplicationInsights", "AzureBlob", "AzureCosmosDB", "AzureDataExplorer",

    "AzureDataLakeStorageGen2", "AzureEventHubs", "AzureLogAnalytics", "AzureTable",
    "InfluxDB",

    "MongoDB", "MySql", "PostgreSql", "SqlServer".'
  name: data_source_type
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DatasourceType>
- description: 'authentication type for corresponding data source. Possible values

    include: "Basic", "ManagedIdentity", "AzureSQLConnectionString", "DataLakeGen2SharedKey",

    "ServicePrincipal", "ServicePrincipalInKV". Default is "Basic".'
  name: authentication_type
  types:
  - <xref:str>
  - <xref:azure.ai.metricsadvisor.models.DatasourceAuthenticationType>
methods:
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
  parameters:
  - name: type
    isRequired: true
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.metricsadvisor.models.AzureApplicationInsightsDataFeedSource.values
  name: values
  signature: values() -> an object providing a view on D's values
