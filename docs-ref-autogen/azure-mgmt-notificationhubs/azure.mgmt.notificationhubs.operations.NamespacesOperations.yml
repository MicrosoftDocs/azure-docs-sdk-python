### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.models
  class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: NamespacesOperations
  summary: NamespacesOperations operations.
  syntax:
    content: NamespacesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client Api Version. Constant value: "2017-04-01".'
      id: api_version
  type: class
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: check_availability(parameters, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: check_availability
  summary: 'Checks the availability of the given service namespace across all Azure

    subscriptions. This is useful because the domain name is created based

    on the service namespace name.'
  syntax:
    content: check_availability(parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The namespace name.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.notificationhubs.models.CheckAvailabilityParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CheckAvailabilityResult or ClientRawResponse if raw=true
      type:
      - azure.mgmt.notificationhubs.models.CheckAvailabilityResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: create_or_update(resource_group_name, namespace_name, parameters, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Creates/Updates a service namespace. Once created, this namespace''s

    resource manifest is immutable. This operation is idempotent.'
  syntax:
    content: create_or_update(resource_group_name, namespace_name, parameters, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to create a Namespace Resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.notificationhubs.models.NamespaceCreateOrUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NamespaceResource or ClientRawResponse if raw=true
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: create_or_update_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    properties, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_or_update_authorization_rule
  summary: Creates an authorization rule for a namespace.
  syntax:
    content: create_or_update_authorization_rule(resource_group_name, namespace_name,
      authorization_rule_name, properties, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: Authorization Rule Name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: Properties of the Namespace AuthorizationRules.
      id: properties
      isRequired: true
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'SharedAccessAuthorizationRuleResource or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: delete(resource_group_name, namespace_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes an existing namespace. This operation also removes all

    associated notificationHubs under the namespace.'
  syntax:
    content: delete(resource_group_name, namespace_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: delete_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_authorization_rule
  summary: Deletes a namespace authorization rule.
  syntax:
    content: delete_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: Authorization Rule Name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: get(resource_group_name, namespace_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Returns the description for the specified namespace.
  syntax:
    content: get(resource_group_name, namespace_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NamespaceResource or ClientRawResponse if raw=true
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: get_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_authorization_rule
  summary: Gets an authorization rule for a namespace by name.
  syntax:
    content: get_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: Authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'SharedAccessAuthorizationRuleResource or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list(resource_group_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: Lists the available namespaces within a resourceGroup.
  syntax:
    content: list(resource_group_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. If

        resourceGroupName value is null the method lists all the namespaces

        within subscription'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of NamespaceResource
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResourcePaged[azure.mgmt.notificationhubs.models.NamespaceResource]
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_all(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_all
  summary: 'Lists all the available namespaces within the subscription irrespective

    of the resourceGroups.'
  syntax:
    content: list_all(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of NamespaceResource
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResourcePaged[azure.mgmt.notificationhubs.models.NamespaceResource]
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_authorization_rules(resource_group_name, namespace_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_authorization_rules
  summary: Gets the authorization rules for a namespace.
  syntax:
    content: list_authorization_rules(resource_group_name, namespace_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name
      id: namespace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'An iterator like instance of

        SharedAccessAuthorizationRuleResource'
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged[azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource]
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_keys(resource_group_name, namespace_name, authorization_rule_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_keys
  summary: Gets the Primary and Secondary ConnectionStrings to the namespace .
  syntax:
    content: list_keys(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: 'The connection string of the namespace

        for the specified authorizationRule.'
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'SharedAccessAuthorizationRuleListResult or ClientRawResponse

        if raw=true'
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleListResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: patch(resource_group_name, namespace_name, tags=None, sku=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: patch
  summary: Patches the existing namespace.
  syntax:
    content: patch(resource_group_name, namespace_name, tags=None, sku=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: The sku of the created namespace
      id: sku
      type:
      - azure.mgmt.notificationhubs.models.Sku
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NamespaceResource or ClientRawResponse if raw=true
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: regenerate_keys(resource_group_name, namespace_name, authorization_rule_name,
    policy_key=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: regenerate_keys
  summary: 'Regenerates the Primary/Secondary Keys to the Namespace Authorization

    Rule.'
  syntax:
    content: regenerate_keys(resource_group_name, namespace_name, authorization_rule_name,
      policy_key=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: 'The connection string of the namespace

        for the specified authorizationRule.'
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Name of the key that has to be regenerated for the

        Namespace/Notification Hub Authorization Rule. The value can be

        Primary Key/Secondary Key.'
      id: policy_key
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ResourceListKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.notificationhubs.models.ResourceListKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.models
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.notificationhubs.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\notificationhubs\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.models
references:
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  isExternal: false
  name: check_availability(parameters, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, namespace_name, parameters, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  isExternal: false
  name: create_or_update_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    properties, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  isExternal: false
  name: delete(resource_group_name, namespace_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  isExternal: false
  name: delete_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  isExternal: false
  name: get(resource_group_name, namespace_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  isExternal: false
  name: get_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  isExternal: false
  name: list(resource_group_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  isExternal: false
  name: list_all(custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  isExternal: false
  name: list_authorization_rules(resource_group_name, namespace_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  isExternal: false
  name: list_keys(resource_group_name, namespace_name, authorization_rule_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  isExternal: false
  name: patch(resource_group_name, namespace_name, tags=None, sku=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  isExternal: false
  name: regenerate_keys(resource_group_name, namespace_name, authorization_rule_name,
    policy_key=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.notificationhubs.models.NamespaceResourcePaged[azure.mgmt.notificationhubs.models.NamespaceResource]
  name: NamespaceResourcePaged[NamespaceResource]
  spec.python:
  - fullName: azure.mgmt.notificationhubs.models.NamespaceResourcePaged
    name: NamespaceResourcePaged
    uid: azure.mgmt.notificationhubs.models.NamespaceResourcePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.notificationhubs.models.NamespaceResource
    name: NamespaceResource
    uid: azure.mgmt.notificationhubs.models.NamespaceResource
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.notificationhubs.models.NamespaceResourcePaged[azure.mgmt.notificationhubs.models.NamespaceResource]
- fullName: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged[azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource]
  name: SharedAccessAuthorizationRuleResourcePaged[SharedAccessAuthorizationRuleResource]
  spec.python:
  - fullName: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged
    name: SharedAccessAuthorizationRuleResourcePaged
    uid: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
    name: SharedAccessAuthorizationRuleResource
    uid: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged[azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
