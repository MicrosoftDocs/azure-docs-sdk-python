### YamlMime:PythonClass
uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations
name: ManagedClustersOperations
fullName: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations
module: azure.mgmt.containerservice.v2018_03_31.aio.operations
inheritances:
- builtins.object
summary: 'ManagedClustersOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ManagedClustersOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates or updates a managed cluster.


    Creates or updates a managed cluster with the specified configuration for agents
    and Kubernetes

    version.'
  signature: 'begin_create_or_update(resource_group_name: str, resource_name: str,
    parameters: azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedCluster,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedCluster]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters supplied to the Create or Update a Managed Cluster operation.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedCluster>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either ManagedCluster
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedCluster>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.begin_delete
  name: begin_delete
  summary: 'Deletes a managed cluster.


    Deletes the managed cluster with a specified resource group and name.'
  signature: 'begin_delete(resource_group_name: str, resource_name: str, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.begin_reset_aad_profile
  name: begin_reset_aad_profile
  summary: 'Reset AAD Profile of a managed cluster.


    Update the AAD Profile for a managed cluster.'
  signature: 'begin_reset_aad_profile(resource_group_name: str, resource_name: str,
    parameters: azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterAADProfile,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the Reset AAD Profile operation for a Managed

      Cluster.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterAADProfile>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.begin_reset_service_principal_profile
  name: begin_reset_service_principal_profile
  summary: 'Reset Service Principal Profile of a managed cluster.


    Update the service principal Profile for a managed cluster.'
  signature: 'begin_reset_service_principal_profile(resource_group_name: str, resource_name:
    str, parameters: azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterServicePrincipalProfile,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the Reset Service Principal Profile operation
      for a

      Managed Cluster.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterServicePrincipalProfile>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.begin_update_tags
  name: begin_update_tags
  summary: 'Updates tags on a managed cluster.


    Updates a managed cluster with the specified tags.'
  signature: 'begin_update_tags(resource_group_name: str, resource_name: str, parameters:
    azure.mgmt.containerservice.v2018_03_31.models._models_py3.TagsObject, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedCluster]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters supplied to the Update Managed Cluster Tags operation.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.TagsObject>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either ManagedCluster
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedCluster>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.get
  name: get
  summary: 'Gets a managed cluster.


    Gets the details of the managed cluster with a specified resource group and name.'
  signature: 'get(resource_group_name: str, resource_name: str, **kwargs: Any) ->
    azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedCluster'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagedCluster, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedCluster>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.get_access_profile
  name: get_access_profile
  summary: 'Gets an access profile of a managed cluster.


    Gets the accessProfile for the specified role name of the managed cluster with
    a specified

    resource group and name.'
  signature: 'get_access_profile(resource_group_name: str, resource_name: str, role_name:
    str, **kwargs: Any) -> azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterAccessProfile'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: role_name
    description: The name of the role for managed cluster accessProfile resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagedClusterAccessProfile, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterAccessProfile>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.get_upgrade_profile
  name: get_upgrade_profile
  summary: 'Gets upgrade profile for a managed cluster.


    Gets the details of the upgrade profile for a managed cluster with a specified
    resource group

    and name.'
  signature: 'get_upgrade_profile(resource_group_name: str, resource_name: str, **kwargs:
    Any) -> azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterUpgradeProfile'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagedClusterUpgradeProfile, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterUpgradeProfile>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.list
  name: list
  summary: 'Gets a list of managed clusters in the specified subscription.


    Gets a list of managed clusters in the specified subscription. The operation returns
    properties

    of each managed cluster.'
  signature: 'list(**kwargs: Any) -> AsyncIterable[azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterListResult]'
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either ManagedClusterListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Lists managed clusters in the specified subscription and resource group.


    Lists managed clusters in the specified subscription and resource group. The operation
    returns

    properties of each managed cluster.'
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.containerservice.v2018_03_31.models._models_py3.ManagedClusterListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either ManagedClusterListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerservice.v2018_03_31.models.ManagedClusterListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.list_cluster_admin_credentials
  name: list_cluster_admin_credentials
  summary: 'Gets cluster admin credential of a managed cluster.


    Gets cluster admin credential of the managed cluster with a specified resource
    group and name.'
  signature: 'list_cluster_admin_credentials(resource_group_name: str, resource_name:
    str, **kwargs: Any) -> azure.mgmt.containerservice.v2018_03_31.models._models_py3.CredentialResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CredentialResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.CredentialResults>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.list_cluster_user_credentials
  name: list_cluster_user_credentials
  summary: 'Gets cluster user credential of a managed cluster.


    Gets cluster user credential of the managed cluster with a specified resource
    group and name.'
  signature: 'list_cluster_user_credentials(resource_group_name: str, resource_name:
    str, **kwargs: Any) -> azure.mgmt.containerservice.v2018_03_31.models._models_py3.CredentialResults'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the managed cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CredentialResults, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerservice.v2018_03_31.models.CredentialResults>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.containerservice.v2018_03_31.aio.operations.ManagedClustersOperations.models
  name: models
  signature: models = <module 'azure.mgmt.containerservice.v2018_03_31.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\containerservice\\v2018_03_31\\models\\__init__.py'>
