### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.containerservice.v2020_03_01.models.AgentPool
  fullName: azure.mgmt.containerservice.v2020_03_01.models.AgentPool
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.containerservice.v2020_03_01.models._models_py3.SubResource
  langs:
  - python
  module: azure.mgmt.containerservice.v2020_03_01.models
  name: AgentPool
  summary: 'Agent Pool.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'AgentPool(*, count: int = None, vm_size=None, os_disk_size_gb: int =
      None, vnet_subnet_id: str = None, max_pods: int = None, os_type=''Linux'', max_count:
      int = None, min_count: int = None, enable_auto_scaling: bool = None, agent_pool_type=None,
      mode=None, orchestrator_version: str = None, availability_zones=None, enable_node_public_ip:
      bool = None, scale_set_priority=''Regular'', scale_set_eviction_policy=''Delete'',
      spot_max_price: float = None, tags=None, node_labels=None, node_taints=None,
      **kwargs) -> None'
    parameters:
    - description: 'Number of agents (VMs) to host docker containers. Allowed

        values must be in the range of 0 to 100 (inclusive) for user pools and in

        the range of 1 to 100 (inclusive) for system pools. The default value is

        1.'
      id: count
      type:
      - int
    - description: 'Size of agent VMs. Possible values include: ''Standard_A1'',

        ''Standard_A10'', ''Standard_A11'', ''Standard_A1_v2'', ''Standard_A2'',

        ''Standard_A2_v2'', ''Standard_A2m_v2'', ''Standard_A3'', ''Standard_A4'',

        ''Standard_A4_v2'', ''Standard_A4m_v2'', ''Standard_A5'', ''Standard_A6'',

        ''Standard_A7'', ''Standard_A8'', ''Standard_A8_v2'', ''Standard_A8m_v2'',

        ''Standard_A9'', ''Standard_B2ms'', ''Standard_B2s'', ''Standard_B4ms'',

        ''Standard_B8ms'', ''Standard_D1'', ''Standard_D11'', ''Standard_D11_v2'',

        ''Standard_D11_v2_Promo'', ''Standard_D12'', ''Standard_D12_v2'',

        ''Standard_D12_v2_Promo'', ''Standard_D13'', ''Standard_D13_v2'',

        ''Standard_D13_v2_Promo'', ''Standard_D14'', ''Standard_D14_v2'',

        ''Standard_D14_v2_Promo'', ''Standard_D15_v2'', ''Standard_D16_v3'',

        ''Standard_D16s_v3'', ''Standard_D1_v2'', ''Standard_D2'', ''Standard_D2_v2'',

        ''Standard_D2_v2_Promo'', ''Standard_D2_v3'', ''Standard_D2s_v3'',

        ''Standard_D3'', ''Standard_D32_v3'', ''Standard_D32s_v3'', ''Standard_D3_v2'',

        ''Standard_D3_v2_Promo'', ''Standard_D4'', ''Standard_D4_v2'',

        ''Standard_D4_v2_Promo'', ''Standard_D4_v3'', ''Standard_D4s_v3'',

        ''Standard_D5_v2'', ''Standard_D5_v2_Promo'', ''Standard_D64_v3'',

        ''Standard_D64s_v3'', ''Standard_D8_v3'', ''Standard_D8s_v3'', ''Standard_DS1'',

        ''Standard_DS11'', ''Standard_DS11_v2'', ''Standard_DS11_v2_Promo'',

        ''Standard_DS12'', ''Standard_DS12_v2'', ''Standard_DS12_v2_Promo'',

        ''Standard_DS13'', ''Standard_DS13-2_v2'', ''Standard_DS13-4_v2'',

        ''Standard_DS13_v2'', ''Standard_DS13_v2_Promo'', ''Standard_DS14'',

        ''Standard_DS14-4_v2'', ''Standard_DS14-8_v2'', ''Standard_DS14_v2'',

        ''Standard_DS14_v2_Promo'', ''Standard_DS15_v2'', ''Standard_DS1_v2'',

        ''Standard_DS2'', ''Standard_DS2_v2'', ''Standard_DS2_v2_Promo'',

        ''Standard_DS3'', ''Standard_DS3_v2'', ''Standard_DS3_v2_Promo'',

        ''Standard_DS4'', ''Standard_DS4_v2'', ''Standard_DS4_v2_Promo'',

        ''Standard_DS5_v2'', ''Standard_DS5_v2_Promo'', ''Standard_E16_v3'',

        ''Standard_E16s_v3'', ''Standard_E2_v3'', ''Standard_E2s_v3'',

        ''Standard_E32-16s_v3'', ''Standard_E32-8s_v3'', ''Standard_E32_v3'',

        ''Standard_E32s_v3'', ''Standard_E4_v3'', ''Standard_E4s_v3'',

        ''Standard_E64-16s_v3'', ''Standard_E64-32s_v3'', ''Standard_E64_v3'',

        ''Standard_E64s_v3'', ''Standard_E8_v3'', ''Standard_E8s_v3'', ''Standard_F1'',

        ''Standard_F16'', ''Standard_F16s'', ''Standard_F16s_v2'', ''Standard_F1s'',

        ''Standard_F2'', ''Standard_F2s'', ''Standard_F2s_v2'', ''Standard_F32s_v2'',

        ''Standard_F4'', ''Standard_F4s'', ''Standard_F4s_v2'', ''Standard_F64s_v2'',

        ''Standard_F72s_v2'', ''Standard_F8'', ''Standard_F8s'', ''Standard_F8s_v2'',

        ''Standard_G1'', ''Standard_G2'', ''Standard_G3'', ''Standard_G4'', ''Standard_G5'',

        ''Standard_GS1'', ''Standard_GS2'', ''Standard_GS3'', ''Standard_GS4'',

        ''Standard_GS4-4'', ''Standard_GS4-8'', ''Standard_GS5'', ''Standard_GS5-16'',

        ''Standard_GS5-8'', ''Standard_H16'', ''Standard_H16m'', ''Standard_H16mr'',

        ''Standard_H16r'', ''Standard_H8'', ''Standard_H8m'', ''Standard_L16s'',

        ''Standard_L32s'', ''Standard_L4s'', ''Standard_L8s'', ''Standard_M128-32ms'',

        ''Standard_M128-64ms'', ''Standard_M128ms'', ''Standard_M128s'',

        ''Standard_M64-16ms'', ''Standard_M64-32ms'', ''Standard_M64ms'',

        ''Standard_M64s'', ''Standard_NC12'', ''Standard_NC12s_v2'',

        ''Standard_NC12s_v3'', ''Standard_NC24'', ''Standard_NC24r'',

        ''Standard_NC24rs_v2'', ''Standard_NC24rs_v3'', ''Standard_NC24s_v2'',

        ''Standard_NC24s_v3'', ''Standard_NC6'', ''Standard_NC6s_v2'',

        ''Standard_NC6s_v3'', ''Standard_ND12s'', ''Standard_ND24rs'', ''Standard_ND24s'',

        ''Standard_ND6s'', ''Standard_NV12'', ''Standard_NV24'', ''Standard_NV6'''
      id: vm_size
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.ContainerServiceVMSizeTypes
    - description: 'OS Disk Size in GB to be used to specify the disk

        size for every machine in this master/agent pool. If you specify 0, it

        will apply the default osDisk size according to the vmSize specified.'
      id: os_disk_size_gb
      type:
      - int
    - description: 'VNet SubnetID specifies the VNet''s subnet

        identifier.'
      id: vnet_subnet_id
      type:
      - str
    - description: Maximum number of pods that can run on a node.
      id: max_pods
      type:
      - int
    - description: 'OsType to be used to specify os type. Choose from Linux

        and Windows. Default to Linux. Possible values include: ''Linux'',

        ''Windows''. Default value: "Linux" .'
      id: os_type
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.OSType
    - description: Maximum number of nodes for auto-scaling
      id: max_count
      type:
      - int
    - description: Minimum number of nodes for auto-scaling
      id: min_count
      type:
      - int
    - description: Whether to enable auto-scaler
      id: enable_auto_scaling
      type:
      - bool
    - description: 'AgentPoolType represents types of an agent pool.

        Possible values include: ''VirtualMachineScaleSets'', ''AvailabilitySet'''
      id: agent_pool_type
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.AgentPoolType
    - description: 'AgentPoolMode represents mode of an agent pool. Possible

        values include: ''System'', ''User'''
      id: mode
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.AgentPoolMode
    - description: 'Version of orchestrator specified when

        creating the managed cluster.'
      id: orchestrator_version
      type:
      - str
    - description: 'Availability zones for nodes. Must use

        VirtualMachineScaleSets AgentPoolType.'
      id: availability_zones
      type:
      - list[str]
    - description: Enable public IP for nodes
      id: enable_node_public_ip
      type:
      - bool
    - description: 'ScaleSetPriority to be used to specify virtual

        machine scale set priority. Default to regular. Possible values include:

        ''Spot'', ''Low'', ''Regular''. Default value: "Regular" .'
      id: scale_set_priority
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.ScaleSetPriority
    - description: 'ScaleSetEvictionPolicy to be used to

        specify eviction policy for Spot or low priority virtual machine scale

        set. Default to Delete. Possible values include: ''Delete'', ''Deallocate''.

        Default value: "Delete" .'
      id: scale_set_eviction_policy
      type:
      - str
      - azure.mgmt.containerservice.v2020_03_01.models.ScaleSetEvictionPolicy
    - description: 'SpotMaxPrice to be used to specify the maximum

        price you are willing to pay in US Dollars. Possible values are any

        decimal value greater than zero or -1 which indicates default price to be

        up-to on-demand.'
      id: spot_max_price
      type:
      - float
    - description: 'Agent pool tags to be persisted on the agent pool virtual

        machine scale set.'
      id: tags
      type:
      - dict[str, str]
    - description: 'Agent pool node labels to be persisted across all

        nodes in agent pool.'
      id: node_labels
      type:
      - dict[str, str]
    - description: 'Taints added to new nodes during node pool create and

        scale. For example, key=value:NoSchedule.'
      id: node_taints
      type:
      - list[str]
    variables:
    - description: Resource ID.
      id: id
      type:
      - str
    - description: 'The name of the resource that is unique within a resource

        group. This name can be used to access the resource.'
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
    - description: 'The current deployment or provisioning state,

        which only appears in the response.'
      id: provisioning_state
      type:
      - str
  type: class
  uid: azure.mgmt.containerservice.v2020_03_01.models.AgentPool
references:
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
