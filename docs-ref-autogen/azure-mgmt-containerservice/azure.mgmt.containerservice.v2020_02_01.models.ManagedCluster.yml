### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.containerservice.v2020_02_01.models.ManagedCluster
  fullName: azure.mgmt.containerservice.v2020_02_01.models.ManagedCluster
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.containerservice.v2020_02_01.models._models_py3.Resource
  langs:
  - python
  module: azure.mgmt.containerservice.v2020_02_01.models
  name: ManagedCluster
  summary: 'Managed cluster.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'ManagedCluster(*, location: str, tags=None, kubernetes_version: str
      = None, dns_prefix: str = None, agent_pool_profiles=None, linux_profile=None,
      windows_profile=None, service_principal_profile=None, addon_profiles=None, node_resource_group:
      str = None, enable_rbac: bool = None, enable_pod_security_policy: bool = None,
      network_profile=None, aad_profile=None, auto_scaler_profile=None, api_server_access_profile=None,
      disk_encryption_set_id: str = None, identity_profile=None, identity=None, **kwargs)
      -> None'
    parameters:
    - description: Required. Resource location
      id: location
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'Version of Kubernetes specified when creating

        the managed cluster.'
      id: kubernetes_version
      type:
      - str
    - description: DNS prefix specified when creating the managed cluster.
      id: dns_prefix
      type:
      - str
    - description: Properties of the agent pool.
      id: agent_pool_profiles
      type:
      - list[azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAgentPoolProfile]
    - description: 'Profile for Linux VMs in the container service

        cluster.'
      id: linux_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ContainerServiceLinuxProfile
    - description: 'Profile for Windows VMs in the container service

        cluster.'
      id: windows_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterWindowsProfile
    - description: 'Information about a service principal

        identity for the cluster to use for manipulating Azure APIs.'
      id: service_principal_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterServicePrincipalProfile
    - description: Profile of managed cluster add-on.
      id: addon_profiles
      type:
      - dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAddonProfile]
    - description: 'Name of the resource group containing agent

        pool nodes.'
      id: node_resource_group
      type:
      - str
    - description: 'Whether to enable Kubernetes Role-Based Access

        Control.'
      id: enable_rbac
      type:
      - bool
    - description: '(PREVIEW) Whether to enable Kubernetes

        Pod security policy.'
      id: enable_pod_security_policy
      type:
      - bool
    - description: Profile of network configuration.
      id: network_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ContainerServiceNetworkProfile
    - description: Profile of Azure Active Directory configuration.
      id: aad_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAADProfile
    - description: 'Parameters to be applied to the

        cluster-autoscaler when enabled'
      id: auto_scaler_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesAutoScalerProfile
    - description: 'Access profile for managed cluster API

        server.'
      id: api_server_access_profile
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAPIServerAccessProfile
    - description: 'ResourceId of the disk encryption set to

        use for enabling encryption at rest.'
      id: disk_encryption_set_id
      type:
      - str
    - description: Identities associated with the cluster.
      id: identity_profile
      type:
      - dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesIdentityProfileValue]
    - description: The identity of the managed cluster, if configured.
      id: identity
      type:
      - azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterIdentity
    variables:
    - description: Resource Id
      id: id
      type:
      - str
    - description: Resource name
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
    - description: 'The current deployment or provisioning state,

        which only appears in the response.'
      id: provisioning_state
      type:
      - str
    - description: 'The max number of agent pools for the managed

        cluster.'
      id: max_agent_pools
      type:
      - int
    - description: FQDN for the master pool.
      id: fqdn
      type:
      - str
    - description: FQDN of private cluster.
      id: private_fqdn
      type:
      - str
  type: class
  uid: azure.mgmt.containerservice.v2020_02_01.models.ManagedCluster
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAgentPoolProfile]
  name: list[ManagedClusterAgentPoolProfile]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAgentPoolProfile
    name: ManagedClusterAgentPoolProfile
    uid: azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAgentPoolProfile
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAgentPoolProfile]
- fullName: dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAddonProfile]
  name: dict[ManagedClusterAddonProfile]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAddonProfile
    name: ManagedClusterAddonProfile
    uid: str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAddonProfile
  - fullName: ']'
    name: ']'
  uid: dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterAddonProfile]
- fullName: dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesIdentityProfileValue]
  name: dict[ManagedClusterPropertiesIdentityProfileValue]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesIdentityProfileValue
    name: ManagedClusterPropertiesIdentityProfileValue
    uid: str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesIdentityProfileValue
  - fullName: ']'
    name: ']'
  uid: dict[str,azure.mgmt.containerservice.v2020_02_01.models.ManagedClusterPropertiesIdentityProfileValue]
