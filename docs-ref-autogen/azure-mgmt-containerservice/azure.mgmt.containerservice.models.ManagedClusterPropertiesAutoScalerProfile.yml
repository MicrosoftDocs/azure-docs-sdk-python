### YamlMime:PythonClass
uid: azure.mgmt.containerservice.models.ManagedClusterPropertiesAutoScalerProfile
name: ManagedClusterPropertiesAutoScalerProfile
fullName: azure.mgmt.containerservice.models.ManagedClusterPropertiesAutoScalerProfile
module: azure.mgmt.containerservice.models
summary: Parameters to be applied to the cluster-autoscaler when enabled.
constructor:
  syntax: 'ManagedClusterPropertiesAutoScalerProfile(*, balance_similar_node_groups:
    str | None = None, daemonset_eviction_for_empty_nodes: bool | None = None, daemonset_eviction_for_occupied_nodes:
    bool | None = None, ignore_daemonsets_utilization: bool | None = None, expander:
    str | _models.Expander | None = None, max_empty_bulk_delete: str | None = None,
    max_graceful_termination_sec: str | None = None, max_node_provision_time: str
    | None = None, max_total_unready_percentage: str | None = None, new_pod_scale_up_delay:
    str | None = None, ok_total_unready_count: str | None = None, scan_interval: str
    | None = None, scale_down_delay_after_add: str | None = None, scale_down_delay_after_delete:
    str | None = None, scale_down_delay_after_failure: str | None = None, scale_down_unneeded_time:
    str | None = None, scale_down_unready_time: str | None = None, scale_down_utilization_threshold:
    str | None = None, skip_nodes_with_local_storage: str | None = None, skip_nodes_with_system_pods:
    str | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: balance_similar_node_groups
    description: 'Detects similar node pools and balances the number of

      nodes between them. Valid values are ''true'' and ''false''.'
    defaultValue: None
    types:
    - <xref:str>
  - name: daemonset_eviction_for_empty_nodes
    description: 'DaemonSet pods will be gracefully terminated from

      empty nodes. If set to true, all daemonset pods on empty nodes will be evicted
      before deletion

      of the node. If the daemonset pod cannot be evicted another node will be chosen
      for scaling. If

      set to false, the node will be deleted without ensuring that daemonset pods
      are deleted or

      evicted.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: daemonset_eviction_for_occupied_nodes
    description: 'DaemonSet pods will be gracefully terminated

      from non-empty nodes. If set to true, all daemonset pods on occupied nodes will
      be evicted

      before deletion of the node. If the daemonset pod cannot be evicted another
      node will be chosen

      for scaling. If set to false, the node will be deleted without ensuring that
      daemonset pods are

      deleted or evicted.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: ignore_daemonsets_utilization
    description: 'Should CA ignore DaemonSet pods when calculating

      resource utilization for scaling down. If set to true, the resources used by
      daemonset will be

      taken into account when making scaling down decisions.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: expander
    description: 'The expander to use when scaling up. If not specified, the default
      is

      ''random''. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)

      for more information. Known values are: "least-waste", "most-pods", "priority",
      and "random".'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.containerservice.models.Expander>
  - name: max_empty_bulk_delete
    description: 'The maximum number of empty nodes that can be deleted at the

      same time. This must be a positive integer. The default is 10.'
    defaultValue: None
    types:
    - <xref:str>
  - name: max_graceful_termination_sec
    description: 'The maximum number of seconds the cluster autoscaler

      waits for pod termination when trying to scale down a node. The default is 600.'
    defaultValue: None
    types:
    - <xref:str>
  - name: max_node_provision_time
    description: 'The maximum time the autoscaler waits for a node to be

      provisioned. The default is ''15m''. Values must be an integer followed by an
      ''m''. No unit of

      time other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: max_total_unready_percentage
    description: 'The maximum percentage of unready nodes in the cluster.

      After this percentage is exceeded, cluster autoscaler halts operations. The
      default is 45. The

      maximum is 100 and the minimum is 0.'
    defaultValue: None
    types:
    - <xref:str>
  - name: new_pod_scale_up_delay
    description: 'Ignore unscheduled pods before they''re a certain age. For

      scenarios like burst/batch scale where you don''t want CA to act before the
      kubernetes scheduler

      could schedule all the pods, you can tell CA to ignore unscheduled pods before
      they''re a

      certain age. The default is ''0s''. Values must be an integer followed by a
      unit (''s'' for

      seconds, ''m'' for minutes, ''h'' for hours, etc).'
    defaultValue: None
    types:
    - <xref:str>
  - name: ok_total_unready_count
    description: 'The number of allowed unready nodes, irrespective of

      max-total-unready-percentage. This must be an integer. The default is 3.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scan_interval
    description: 'How often cluster is reevaluated for scale up or down. The default
      is

      ''10''. Values must be an integer number of seconds.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_delay_after_add
    description: 'How long after scale up that scale down evaluation

      resumes. The default is ''10m''. Values must be an integer followed by an ''m''.
      No unit of time

      other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_delay_after_delete
    description: 'How long after node deletion that scale down evaluation

      resumes. The default is the scan-interval. Values must be an integer followed
      by an ''m''. No

      unit of time other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_delay_after_failure
    description: 'How long after scale down failure that scale down

      evaluation resumes. The default is ''3m''. Values must be an integer followed
      by an ''m''. No unit

      of time other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_unneeded_time
    description: 'How long a node should be unneeded before it is eligible for

      scale down. The default is ''10m''. Values must be an integer followed by an
      ''m''. No unit of time

      other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_unready_time
    description: 'How long an unready node should be unneeded before it is

      eligible for scale down. The default is ''20m''. Values must be an integer followed
      by an ''m''. No

      unit of time other than minutes (m) is supported.'
    defaultValue: None
    types:
    - <xref:str>
  - name: scale_down_utilization_threshold
    description: 'Node utilization level, defined as sum of requested

      resources divided by capacity, below which a node can be considered for scale
      down. The default

      is ''0.5''.'
    defaultValue: None
    types:
    - <xref:str>
  - name: skip_nodes_with_local_storage
    description: 'If cluster autoscaler will skip deleting nodes with

      pods with local storage, for example, EmptyDir or HostPath. The default is true.'
    defaultValue: None
    types:
    - <xref:str>
  - name: skip_nodes_with_system_pods
    description: 'If cluster autoscaler will skip deleting nodes with pods

      from kube-system (except for DaemonSet or mirror pods). The default is true.'
    defaultValue: None
    types:
    - <xref:str>
variables:
- description: 'Detects similar node pools and balances the number of nodes

    between them. Valid values are ''true'' and ''false''.'
  name: balance_similar_node_groups
  types:
  - <xref:str>
- description: 'DaemonSet pods will be gracefully terminated from

    empty nodes. If set to true, all daemonset pods on empty nodes will be evicted
    before deletion

    of the node. If the daemonset pod cannot be evicted another node will be chosen
    for scaling. If

    set to false, the node will be deleted without ensuring that daemonset pods are
    deleted or

    evicted.'
  name: daemonset_eviction_for_empty_nodes
  types:
  - <xref:bool>
- description: 'DaemonSet pods will be gracefully terminated from

    non-empty nodes. If set to true, all daemonset pods on occupied nodes will be
    evicted before

    deletion of the node. If the daemonset pod cannot be evicted another node will
    be chosen for

    scaling. If set to false, the node will be deleted without ensuring that daemonset
    pods are

    deleted or evicted.'
  name: daemonset_eviction_for_occupied_nodes
  types:
  - <xref:bool>
- description: 'Should CA ignore DaemonSet pods when calculating resource

    utilization for scaling down. If set to true, the resources used by daemonset
    will be taken

    into account when making scaling down decisions.'
  name: ignore_daemonsets_utilization
  types:
  - <xref:bool>
- description: 'The expander to use when scaling up. If not specified, the default
    is ''random''.

    See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)

    for more information. Known values are: "least-waste", "most-pods", "priority",
    and "random".'
  name: expander
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.models.Expander>
- description: 'The maximum number of empty nodes that can be deleted at the same

    time. This must be a positive integer. The default is 10.'
  name: max_empty_bulk_delete
  types:
  - <xref:str>
- description: 'The maximum number of seconds the cluster autoscaler waits

    for pod termination when trying to scale down a node. The default is 600.'
  name: max_graceful_termination_sec
  types:
  - <xref:str>
- description: 'The maximum time the autoscaler waits for a node to be

    provisioned. The default is ''15m''. Values must be an integer followed by an
    ''m''. No unit of

    time other than minutes (m) is supported.'
  name: max_node_provision_time
  types:
  - <xref:str>
- description: 'The maximum percentage of unready nodes in the cluster.

    After this percentage is exceeded, cluster autoscaler halts operations. The default
    is 45. The

    maximum is 100 and the minimum is 0.'
  name: max_total_unready_percentage
  types:
  - <xref:str>
- description: 'Ignore unscheduled pods before they''re a certain age. For

    scenarios like burst/batch scale where you don''t want CA to act before the kubernetes
    scheduler

    could schedule all the pods, you can tell CA to ignore unscheduled pods before
    they''re a

    certain age. The default is ''0s''. Values must be an integer followed by a unit
    (''s'' for

    seconds, ''m'' for minutes, ''h'' for hours, etc).'
  name: new_pod_scale_up_delay
  types:
  - <xref:str>
- description: 'The number of allowed unready nodes, irrespective of

    max-total-unready-percentage. This must be an integer. The default is 3.'
  name: ok_total_unready_count
  types:
  - <xref:str>
- description: 'How often cluster is reevaluated for scale up or down. The default
    is

    ''10''. Values must be an integer number of seconds.'
  name: scan_interval
  types:
  - <xref:str>
- description: 'How long after scale up that scale down evaluation resumes.

    The default is ''10m''. Values must be an integer followed by an ''m''. No unit
    of time other than

    minutes (m) is supported.'
  name: scale_down_delay_after_add
  types:
  - <xref:str>
- description: 'How long after node deletion that scale down evaluation

    resumes. The default is the scan-interval. Values must be an integer followed
    by an ''m''. No

    unit of time other than minutes (m) is supported.'
  name: scale_down_delay_after_delete
  types:
  - <xref:str>
- description: 'How long after scale down failure that scale down

    evaluation resumes. The default is ''3m''. Values must be an integer followed
    by an ''m''. No unit

    of time other than minutes (m) is supported.'
  name: scale_down_delay_after_failure
  types:
  - <xref:str>
- description: 'How long a node should be unneeded before it is eligible for

    scale down. The default is ''10m''. Values must be an integer followed by an ''m''.
    No unit of time

    other than minutes (m) is supported.'
  name: scale_down_unneeded_time
  types:
  - <xref:str>
- description: 'How long an unready node should be unneeded before it is

    eligible for scale down. The default is ''20m''. Values must be an integer followed
    by an ''m''. No

    unit of time other than minutes (m) is supported.'
  name: scale_down_unready_time
  types:
  - <xref:str>
- description: 'Node utilization level, defined as sum of requested

    resources divided by capacity, below which a node can be considered for scale
    down. The default

    is ''0.5''.'
  name: scale_down_utilization_threshold
  types:
  - <xref:str>
- description: 'If cluster autoscaler will skip deleting nodes with pods

    with local storage, for example, EmptyDir or HostPath. The default is true.'
  name: skip_nodes_with_local_storage
  types:
  - <xref:str>
- description: 'If cluster autoscaler will skip deleting nodes with pods

    from kube-system (except for DaemonSet or mirror pods). The default is true.'
  name: skip_nodes_with_system_pods
  types:
  - <xref:str>
