### YamlMime:PythonClass
uid: azure.mgmt.containerservice.v2022_01_01.models.ContainerServiceNetworkProfile
name: ContainerServiceNetworkProfile
fullName: azure.mgmt.containerservice.v2022_01_01.models.ContainerServiceNetworkProfile
module: azure.mgmt.containerservice.v2022_01_01.models
inheritances:
- msrest.serialization.Model
summary: Profile of network configuration.
constructor:
  syntax: 'ContainerServiceNetworkProfile(*, network_plugin: Optional[Union[str, _models.NetworkPlugin]]
    = ''kubenet'', network_policy: Optional[Union[str, _models.NetworkPolicy]] = None,
    network_mode: Optional[Union[str, _models.NetworkMode]] = None, pod_cidr: Optional[str]
    = ''10.244.0.0/16'', service_cidr: Optional[str] = ''10.0.0.0/16'', dns_service_ip:
    Optional[str] = ''10.0.0.10'', docker_bridge_cidr: Optional[str] = ''172.17.0.1/16'',
    outbound_type: Optional[Union[str, _models.OutboundType]] = ''loadBalancer'',
    load_balancer_sku: Optional[Union[str, _models.LoadBalancerSku]] = None, load_balancer_profile:
    Optional[_models.ManagedClusterLoadBalancerProfile] = None, nat_gateway_profile:
    Optional[_models.ManagedClusterNATGatewayProfile] = None, pod_cidrs: Optional[List[str]]
    = None, service_cidrs: Optional[List[str]] = None, ip_families: Optional[List[Union[str,
    _models.IpFamily]]] = None, **kwargs)'
variables:
- description: 'Network plugin used for building the Kubernetes network. Known values

    are: "azure", "kubenet". Default value: "kubenet".'
  name: network_plugin
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.NetworkPlugin>
- description: 'Network policy used for building the Kubernetes network. Known values

    are: "calico", "azure".'
  name: network_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.NetworkPolicy>
- description: 'This cannot be specified if networkPlugin is anything other than ''azure''.

    Known values are: "transparent", "bridge".'
  name: network_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.NetworkMode>
- description: A CIDR notation IP range from which to assign pod IPs when kubenet
    is used.
  name: pod_cidr
  types:
  - <xref:str>
- description: 'A CIDR notation IP range from which to assign service cluster IPs.
    It must

    not overlap with any Subnet IP ranges.'
  name: service_cidr
  types:
  - <xref:str>
- description: 'An IP address assigned to the Kubernetes DNS service. It must be within

    the Kubernetes service address range specified in serviceCidr.'
  name: dns_service_ip
  types:
  - <xref:str>
- description: 'A CIDR notation IP range assigned to the Docker bridge network. It

    must not overlap with any Subnet IP ranges or the Kubernetes service address range.'
  name: docker_bridge_cidr
  types:
  - <xref:str>
- description: 'This can only be set at cluster creation time and cannot be changed
    later.

    For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
    Known values are: "loadBalancer",

    "userDefinedRouting", "managedNATGateway", "userAssignedNATGateway". Default value:

    "loadBalancer".'
  name: outbound_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.OutboundType>
- description: 'The default is ''standard''. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus)
    for more information about the

    differences between load balancer SKUs. Known values are: "standard", "basic".'
  name: load_balancer_sku
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.LoadBalancerSku>
- description: Profile of the cluster load balancer.
  name: load_balancer_profile
  types:
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.ManagedClusterLoadBalancerProfile>
- description: Profile of the cluster NAT gateway.
  name: nat_gateway_profile
  types:
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.ManagedClusterNATGatewayProfile>
- description: 'One IPv4 CIDR is expected for single-stack networking. Two CIDRs,
    one for each

    IP family (IPv4/IPv6), is expected for dual-stack networking.'
  name: pod_cidrs
  types:
  - <xref:list>[<xref:str>]
- description: 'One IPv4 CIDR is expected for single-stack networking. Two CIDRs,
    one for

    each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not
    overlap with

    any Subnet IP ranges.'
  name: service_cidrs
  types:
  - <xref:list>[<xref:str>]
- description: 'IP families are used to determine single-stack or dual-stack clusters.
    For

    single-stack, the expected value is IPv4. For dual-stack, the expected values
    are IPv4 and

    IPv6.'
  name: ip_families
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.containerservice.v2022_01_01.models.IpFamily>]
