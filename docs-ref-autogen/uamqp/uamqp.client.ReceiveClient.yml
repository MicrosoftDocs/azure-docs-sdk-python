### YamlMime:PythonClass
uid: uamqp.client.ReceiveClient
name: ReceiveClient
fullName: uamqp.client.ReceiveClient
module: uamqp.client
inheritances:
- uamqp.client.AMQPClient
summary: An AMQP client for receiving messages.
constructor:
  syntax: ReceiveClient(source, auth=None, client_name=None, debug=False, timeout=0,
    auto_complete=True, error_policy=None, **kwargs)
  parameters:
  - name: target
    description: 'The source AMQP service endpoint. This can either be the URI as

      a string or a ~uamqp.address.Source object.'
    isRequired: true
    types:
    - <xref:str>, <xref:bytes>
    - <xref:uamqp.address.Source>
  - name: auth
    description: "Authentication for the connection. This should be one of the subclasses\
      \ of\nuamqp.authentication.AMQPAuth. Currently this includes:\n\n   * uamqp.authentication.SASLAnonymous\
      \ \n\n   * uamqp.authentication.SASLPlain \n\n   * uamqp.authentication.SASTokenAuth\
      \ \n\nIf no authentication is supplied, SASLAnnoymous will be used by default."
    isRequired: true
    types:
    - <xref:uamqp.authentication.common.AMQPAuth>
  - name: client_name
    description: 'The name for the client, also known as the Container ID.

      If no name is provided, a random GUID will be used.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: debug
    description: 'Whether to turn on network trace logs. If *True*, trace logs

      will be logged at INFO level. Default is *False*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: timeout
    description: 'A timeout in milliseconds. The receiver will shut down if no

      new messages are received after the specified timeout. If set to 0, the receiver

      will never timeout and will continue to listen. The default is 0.

      Set *shutdown_after_timeout* to *False* if keeping the receiver open after timeout
      is needed.'
    isRequired: true
    types:
    - <xref:float>
  - name: shutdown_after_timeout
    description: 'Whether to automatically shutdown the receiver

      if no new messages are received after the specified timeout. Default is *True*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: auto_complete
    description: 'Whether to automatically settle message received via callback

      or via iterator. If the message has not been explicitly settled after processing

      the message will be accepted. Alternatively, when used with batch receive, this
      setting

      will determine whether the messages are pre-emptively settled during batching,
      or otherwise

      let to the user to be explicitly settled.'
    isRequired: true
    types:
    - <xref:bool>
  - name: error_policy
    description: 'A policy for parsing errors on link, connection and message

      disposition to determine whether the error should be retryable.'
    isRequired: true
    types:
    - <xref:uamqp.errors.ErrorPolicy>
  - name: keep_alive_interval
    description: 'If set, a thread will be started to keep the connection

      alive during periods of user inactivity. The value will determine how long the

      thread will sleep (in seconds) between pinging the connection. If 0 or None,
      no

      thread will be started.'
    isRequired: true
    types:
    - <xref:int>
  - name: send_settle_mode
    description: 'The mode by which to settle message send

      operations. If set to *Unsettled*, the client will wait for a confirmation

      from the service that the message was successfully sent. If set to ''Settled'',

      the client will not wait for confirmation and assume success.'
    isRequired: true
    types:
    - <xref:uamqp.constants.SenderSettleMode>
  - name: receive_settle_mode
    description: 'The mode by which to settle message receive

      operations. If set to *PeekLock*, the receiver will lock a message once received
      until

      the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
      service

      will assume successful receipt of the message and clear it from the queue. The

      default is *PeekLock*.'
    isRequired: true
    types:
    - <xref:uamqp.constants.ReceiverSettleMode>
  - name: desired_capabilities
    description: "The extension capabilities desired from the peer endpoint.\nTo create\
      \ a desired_capabilities object, please do as follows:\n\n   * 1. Create an\
      \ array of desired capability symbols: *capabilities_symbol_array = [types.AMQPSymbol(string)]*\
      \ \n\n\n   * 2. Transform the array to AMQPValue object: *utils.data_factory(types.AMQPArray(capabilities_symbol_array))*"
    isRequired: true
    types:
    - <xref:uamqp.c_uamqp.AMQPValue>
  - name: max_message_size
    description: The maximum allowed message size negotiated for the Link.
    isRequired: true
    types:
    - <xref:int>
  - name: link_properties
    description: Metadata to be sent in the Link ATTACH frame.
    isRequired: true
    types:
    - <xref:dict>
  - name: prefetch
    description: 'The receiver Link credit that determines how many

      messages the Link will attempt to handle per connection iteration.

      The default is 300.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_frame_size
    description: Maximum AMQP frame size. Default is 63488 bytes.
    isRequired: true
    types:
    - <xref:int>
  - name: channel_max
    description: Maximum number of Session channels in the Connection.
    isRequired: true
    types:
    - <xref:int>
  - name: idle_timeout
    description: 'Timeout in milliseconds after which the Connection will close

      if there is no further activity.'
    isRequired: true
    types:
    - <xref:int>
  - name: properties
    description: Connection properties.
    isRequired: true
    types:
    - <xref:dict>
  - name: remote_idle_timeout_empty_frame_send_ratio
    description: 'Ratio of empty frames to

      idle time for Connections with no activity. Value must be between

      0.0 and 1.0 inclusive. Default is 0.5.'
    isRequired: true
    types:
    - <xref:float>
  - name: incoming_window
    description: The size of the allowed window for incoming messages.
    isRequired: true
    types:
    - <xref:int>
  - name: outgoing_window
    description: The size of the allowed window for outgoing messages.
    isRequired: true
    types:
    - <xref:int>
  - name: handle_max
    description: The maximum number of concurrent link handles.
    isRequired: true
    types:
    - <xref:int>
  - name: on_attach
    description: 'A callback function to be run on receipt of an ATTACH frame.

      The function must take 4 arguments: source, target, properties and error.'
    isRequired: true
    types:
    - <xref:func>[<xref:uamqp.address.Source>, <xref:uamqp.address.Target>, <xref:dict>,
      <xref:uamqp.errors.AMQPConnectionError>]
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: uamqp.client.ReceiveClient.receive_message_batch
  name: receive_message_batch
  summary: 'Receive a batch of messages. Messages returned in the batch have already
    been

    accepted - if you wish to add logic to accept or reject messages based on custom

    criteria, pass in a callback. This method will return as soon as some messages
    are

    available rather than waiting to achieve a specific batch size, and therefore
    the

    number of messages returned per call will vary up to the maximum allowed.


    If the receive client is configured with *auto_complete=True* then the messages
    received

    in the batch returned by this function will already be settled. Alternatively,
    if

    *auto_complete=False*, then each message will need to be explicitly settled before

    it expires and is released.'
  signature: receive_message_batch(max_batch_size=None, on_message_received=None,
    timeout=0)
  parameters:
  - name: max_batch_size
    description: 'The maximum number of messages that can be returned in

      one call. This value cannot be larger than the prefetch value, and if not specified,

      the prefetch value will be used.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: on_message_received
    description: 'A callback to process messages as they arrive from the

      service. It takes a single argument, a ~uamqp.message.Message object.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:callable>[<xref:uamqp.message.Message>]
  - name: timeout
    description: 'I timeout in milliseconds for which to wait to receive any messages.

      If no messages are received in this time, an empty list will be returned. If
      set to

      0, the client will continue to wait until at least one message is received.
      The

      default is 0.'
    isRequired: true
    defaultValue: '0'
    types:
    - <xref:float>
- uid: uamqp.client.ReceiveClient.receive_messages
  name: receive_messages
  summary: 'Receive messages. This function will run indefinitely, until the client

    closes either via timeout, error or forced interruption (e.g. keyboard interrupt).


    If the receive client is configured with *auto_complete=True* then the messages
    that

    have not been settled on completion of the provided callback will automatically
    be

    accepted provided it has not expired. If an error occurs or the message has expired

    it will be released. Alternatively if *auto_complete=False*, each message will
    need

    to be explicitly settled during the callback, otherwise it will be released.'
  signature: receive_messages(on_message_received)
  parameters:
  - name: on_message_received
    description: 'A callback to process messages as they arrive from the

      service. It takes a single argument, a ~uamqp.message.Message object.'
    isRequired: true
    types:
    - <xref:callable>[<xref:uamqp.message.Message>]
- uid: uamqp.client.ReceiveClient.receive_messages_iter
  name: receive_messages_iter
  summary: 'Receive messages by generator. Messages returned in the generator have
    already been

    accepted - if you wish to add logic to accept or reject messages based on custom

    criteria, pass in a callback.'
  signature: receive_messages_iter(on_message_received=None)
  parameters:
  - name: on_message_received
    description: 'A callback to process messages as they arrive from the

      service. It takes a single argument, a ~uamqp.message.Message object.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:callable>[<xref:uamqp.message.Message>]
- uid: uamqp.client.ReceiveClient.redirect
  name: redirect
  summary: 'Redirect the client endpoint using a Link DETACH redirect

    response.'
  signature: redirect(redirect, auth)
  parameters:
  - name: redirect
    description: The Link DETACH redirect details.
    isRequired: true
    types:
    - <xref:uamqp.errors.LinkRedirect>
  - name: auth
    description: Authentication credentials to the redirected endpoint.
    isRequired: true
    types:
    - <xref:uamqp.authentication.common.AMQPAuth>
