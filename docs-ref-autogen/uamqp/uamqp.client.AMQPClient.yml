### YamlMime:PythonClass
uid: uamqp.client.AMQPClient
name: AMQPClient
fullName: uamqp.client.AMQPClient
module: uamqp.client
inheritances:
- builtins.object
summary: An AMQP client.
constructor:
  syntax: AMQPClient(remote_address, auth=None, client_name=None, debug=False, error_policy=None,
    keep_alive_interval=None, **kwargs)
  parameters:
  - name: remote_address
    description: 'The AMQP endpoint to connect to. This could be a send target

      or a receive source.'
    isRequired: true
    types:
    - <xref:str>, <xref:bytes>
    - <xref:uamqp.address.Address>
  - name: auth
    description: "Authentication for the connection. This should be one of the subclasses\
      \ of\nuamqp.authentication.AMQPAuth. Currently this includes:\n\n   * uamqp.authentication.SASLAnonymous\
      \ \n\n   * uamqp.authentication.SASLPlain \n\n   * uamqp.authentication.SASTokenAuth\
      \ \n\nIf no authentication is supplied, SASLAnnoymous will be used by default."
    isRequired: true
    types:
    - <xref:uamqp.authentication.common.AMQPAuth>
  - name: client_name
    description: 'The name for the client, also known as the Container ID.

      If no name is provided, a random GUID will be used.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: debug
    description: 'Whether to turn on network trace logs. If *True*, trace logs

      will be logged at INFO level. Default is *False*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: error_policy
    description: 'A policy for parsing errors on link, connection and message

      disposition to determine whether the error should be retryable.'
    isRequired: true
    types:
    - <xref:uamqp.errors.ErrorPolicy>
  - name: keep_alive_interval
    description: 'If set, a thread will be started to keep the connection

      alive during periods of user inactivity. The value will determine how long the

      thread will sleep (in seconds) between pinging the connection. If 0 or None,
      no

      thread will be started.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_frame_size
    description: Maximum AMQP frame size. Default is 63488 bytes.
    isRequired: true
    types:
    - <xref:int>
  - name: channel_max
    description: Maximum number of Session channels in the Connection.
    isRequired: true
    types:
    - <xref:int>
  - name: idle_timeout
    description: 'Timeout in milliseconds after which the Connection will close

      if there is no further activity.'
    isRequired: true
    types:
    - <xref:int>
  - name: properties
    description: Connection properties.
    isRequired: true
    types:
    - <xref:dict>
  - name: remote_idle_timeout_empty_frame_send_ratio
    description: 'Ratio of empty frames to

      idle time for Connections with no activity. Value must be between

      0.0 and 1.0 inclusive. Default is 0.5.'
    isRequired: true
    types:
    - <xref:float>
  - name: incoming_window
    description: The size of the allowed window for incoming messages.
    isRequired: true
    types:
    - <xref:int>
  - name: outgoing_window
    description: The size of the allowed window for outgoing messages.
    isRequired: true
    types:
    - <xref:int>
  - name: handle_max
    description: The maximum number of concurrent link handles.
    isRequired: true
    types:
    - <xref:int>
  - name: on_attach
    description: 'A callback function to be run on receipt of an ATTACH frame.

      The function must take 4 arguments: source, target, properties and error.'
    isRequired: true
    types:
    - <xref:func>[<xref:uamqp.address.Source>, <xref:uamqp.address.Target>, <xref:dict>,
      <xref:uamqp.errors.AMQPConnectionError>]
  - name: send_settle_mode
    description: 'The mode by which to settle message send

      operations. If set to *Unsettled*, the client will wait for a confirmation

      from the service that the message was successfully sent. If set to ''Settled'',

      the client will not wait for confirmation and assume success.'
    isRequired: true
    types:
    - <xref:uamqp.constants.SenderSettleMode>
  - name: receive_settle_mode
    description: 'The mode by which to settle message receive

      operations. If set to *PeekLock*, the receiver will lock a message once received
      until

      the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
      service

      will assume successful receipt of the message and clear it from the queue. The

      default is *PeekLock*.'
    isRequired: true
    types:
    - <xref:uamqp.constants.ReceiverSettleMode>
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: uamqp.client.AMQPClient.auth_complete
  name: auth_complete
  summary: 'Whether the authentication handshake is complete during

    connection initialization.'
  signature: auth_complete()
  return:
    types:
    - <xref:bool>
- uid: uamqp.client.AMQPClient.client_ready
  name: client_ready
  summary: 'Whether the handler has completed all start up processes such as

    establishing the connection, session, link and authentication, and

    is not ready to process messages.'
  signature: client_ready()
  return:
    types:
    - <xref:bool>
- uid: uamqp.client.AMQPClient.close
  name: close
  summary: 'Close the client. This includes closing the Session

    and CBS authentication layer as well as the Connection.

    If the client was opened using an external Connection,

    this will be left intact.


    No further messages can be sent or received and the client

    cannot be re-opened.


    All pending, unsent messages will remain uncleared to allow

    them to be inspected and queued to a new client.'
  signature: close()
- uid: uamqp.client.AMQPClient.do_work
  name: do_work
  summary: 'Run a single connection iteration.

    This will return *True* if the connection is still open

    and ready to be used for further work, or *False* if it needs

    to be shut down.'
  signature: do_work()
  return:
    types:
    - <xref:bool>
  exceptions:
  - type: TimeoutError or ~uamqp.errors.ClientTimeout if CBS authentication timeout
      reached.
- uid: uamqp.client.AMQPClient.mgmt_request
  name: mgmt_request
  summary: 'Run a request/response operation. These are frequently used for management

    tasks against a $management node, however any node name can be specified

    and the available options will depend on the target service.'
  signature: mgmt_request(message, operation, op_type=None, node=None, callback=None,
    **kwargs)
  parameters:
  - name: message
    description: The message to send in the management request.
    isRequired: true
    types:
    - <xref:uamqp.message.Message>
  - name: operation
    description: 'The type of operation to be performed. This value will

      be service-specific, but common values include READ, CREATE and UPDATE.

      This value will be added as an application property on the message.'
    isRequired: true
    types:
    - <xref:bytes>
  - name: op_type
    description: 'The type on which to carry out the operation. This will

      be specific to the entities of the service. This value will be added as

      an application property on the message.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:bytes>
  - name: node
    description: The target node. Default is *b"$management"*.
    isRequired: true
    defaultValue: None
    types:
    - <xref:bytes>
  - name: timeout
    description: 'Provide an optional timeout in milliseconds within which a response

      to the management request must be received.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:float>
  - name: callback
    description: 'The function to process the returned parameters of the management

      request including status code and a description if available. This can be used

      to reformat the response or raise an error based on content. The function must

      take 3 arguments - status code, response message and description.'
    isRequired: true
    types:
    - <xref:callable>[<xref:int>, <xref:bytes>, <xref:uamqp.message.Message>]
  - name: status_code_field
    description: 'Provide an alternate name for the status code in the

      response body which can vary between services due to the spec still being in
      draft.

      The default is *b"statusCode"*.'
    isRequired: true
    types:
    - <xref:bytes>
  - name: description_fields
    description: 'Provide an alternate name for the description in the

      response body which can vary between services due to the spec still being in
      draft.

      The default is *b"statusDescription"*.'
    isRequired: true
    types:
    - <xref:bytes>
  return:
    types:
    - <xref:uamqp.message.Message>
- uid: uamqp.client.AMQPClient.open
  name: open
  summary: 'Open the client. The client can create a new Connection

    or an existing Connection can be passed in. This existing Connection

    may have an existing CBS authentication Session, which will be

    used for this client as well. Otherwise a new Session will be

    created.'
  signature: open(connection=None)
  parameters:
  - name: connection
    description: 'An existing Connection that may be shared between

      multiple clients.'
    isRequired: true
    defaultValue: None
