### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.close_authenticator_async
  - uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.create_authenticator_async
  - uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.handle_token_async
  class: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  inheritance:
  - inheritance:
    - type: builtins.object
    type: uamqp.authentication.cbs_auth.CBSAuthMixin
  langs:
  - python
  module: uamqp.authentication.cbs_auth_async
  name: CBSAsyncAuthMixin
  summary: Mixin to handle sending and refreshing CBS auth tokens asynchronously.
  syntax: {}
  type: class
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
- class: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.close_authenticator_async
  langs:
  - python
  module: uamqp.authentication.cbs_auth_async
  name: close_authenticator_async()
  namewithoutparameters: close_authenticator_async
  summary: Close the CBS auth channel and session asynchronously.
  syntax:
    content: close_authenticator_async()
    parameters: []
  type: method
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.close_authenticator_async
- class: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.create_authenticator_async
  langs:
  - python
  module: uamqp.authentication.cbs_auth_async
  name: create_authenticator_async(connection, debug=False, loop=None, **kwargs)
  namewithoutparameters: create_authenticator_async
  summary: 'Create the async AMQP session and the CBS channel with which

    to negotiate the token.'
  syntax:
    content: create_authenticator_async(connection, debug=False, loop=None, **kwargs)
    parameters:
    - description: 'The underlying AMQP connection on which

        to create the session.'
      id: connection
      isRequired: true
      type:
      - uamqp.async_ops.connection_async.ConnectionAsync
    - defaultValue: 'False'
      description: 'Whether to emit network trace logging events for the

        CBS session. Default is *False*. Logging events are set at INFO level.'
      id: debug
      type:
      - bool
    - defaultValue: None
      description: A user specified event loop.
      id: loop
      type:
      - asycnio.AbstractEventLoop
    return:
      type:
      - uamqp.c_uamqp.CBSTokenAuth
  type: method
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.create_authenticator_async
- class: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.handle_token_async
  langs:
  - python
  module: uamqp.authentication.cbs_auth_async
  name: handle_token_async()
  namewithoutparameters: handle_token_async
  summary: 'This coroutine is called periodically to check the status of the current

    token if there is one, and request a new one if needed.

    If the token request fails, it will be retried according to the retry policy.

    A token refresh will be attempted if the token will expire soon.


    This function will return a tuple of two booleans. The first represents whether

    the token authentication has not completed within it''s given timeout window.
    The

    second indicates whether the token negotiation is still in progress.'
  syntax:
    content: handle_token_async()
    parameters: []
    return:
      type:
      - tuple[bool, bool]
  type: method
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.handle_token_async
references:
- fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.close_authenticator_async
  isExternal: false
  name: close_authenticator_async()
  parent: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.close_authenticator_async
- fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.create_authenticator_async
  isExternal: false
  name: create_authenticator_async(connection, debug=False, loop=None, **kwargs)
  parent: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.create_authenticator_async
- fullName: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.handle_token_async
  isExternal: false
  name: handle_token_async()
  parent: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin
  uid: uamqp.authentication.cbs_auth_async.CBSAsyncAuthMixin.handle_token_async
- fullName: tuple[bool, bool]
  name: tuple[bool, bool]
  spec.python:
  - fullName: tuple
    name: tuple
    uid: tuple
  - fullName: '['
    name: '['
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ', '
    name: ', '
  - fullName: bool
    name: bool
    uid: bool
  - fullName: ']'
    name: ']'
  uid: tuple[bool, bool]
