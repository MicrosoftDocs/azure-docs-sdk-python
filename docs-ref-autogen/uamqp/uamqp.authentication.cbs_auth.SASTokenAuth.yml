### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.authentication.cbs_auth.SASTokenAuth.from_shared_access_key
  - uamqp.authentication.cbs_auth.SASTokenAuth.update_token
  class: uamqp.authentication.cbs_auth.SASTokenAuth
  fullName: uamqp.authentication.cbs_auth.SASTokenAuth
  inheritance:
  - inheritance:
    - type: builtins.object
    type: uamqp.authentication.common.AMQPAuth
  - inheritance:
    - type: builtins.object
    type: uamqp.authentication.cbs_auth.CBSAuthMixin
  langs:
  - python
  module: uamqp.authentication.cbs_auth
  name: SASTokenAuth
  summary: CBS authentication using SAS tokens.
  syntax:
    content: 'SASTokenAuth(audience, uri, token, expires_in=None, expires_at=None,
      username=None, password=None, port=5671, timeout=10, retry_policy=<uamqp.authentication.cbs_auth.TokenRetryPolicy
      object>, verify=None, token_type=b''servicebus.windows.net:sastoken'', http_proxy=None,
      transport_type=<TransportType.Amqp: 1>, encoding=''UTF-8'')'
    parameters:
    - description: 'The token audience field. For SAS tokens

        this is usually the URI.'
      id: audience
      type:
      - str
      - bytes
    - description: 'The AMQP endpoint URI. This must be provided as

        a decoded string.'
      id: uri
      type:
      - str
    - description: The SAS token.
      id: token
      type:
      - str
      - bytes.
    - description: 'The total remaining seconds until the token

        expires.'
      id: expires_in
      type:
      - datetime.timedelta
    - description: 'The timestamp at which the SAS token will expire

        formatted as seconds since epoch.'
      id: expires_at
      type:
      - float
    - description: 'The SAS token username, also referred to as the key

        name or policy name. This can optionally be encoded into the URI.'
      id: username
      type:
      - str
    - description: 'The SAS token password, also referred to as the key.

        This can optionally be encoded into the URI.'
      id: password
      type:
      - str
    - description: The TLS port - default for AMQP is 5671.
      id: port
      type:
      - int
    - description: 'The timeout in seconds in which to negotiate the token.

        The default value is 10 seconds.'
      id: timeout
      type:
      - float
    - description: 'The retry policy for the PUT token request. The default

        retry policy has 3 retries.'
      id: retry_policy
      type:
      - uamqp.authentication.cbs_auth.TokenRetryPolicy
    - description: The path to a user-defined certificate.
      id: verify
      type:
      - str
    - description: 'The type field of the token request.

        Default value is *b"servicebus.windows.net:sastoken"*.'
      id: token_type
      type:
      - bytes
    - description: 'HTTP proxy configuration. This should be a dictionary with

        the following keys present: ''proxy_hostname'' and ''proxy_port''. Additional
        optional

        keys are ''username'' and ''password''.'
      id: http_proxy
      type:
      - dict
    - description: 'The transport protocol type - default is ~uamqp.TransportType.Amqp.

        ~uamqp.TransportType.AmqpOverWebsocket is applied when http_proxy is set or
        the

        transport type is explicitly requested.'
      id: transport_type
      type:
      - uamqp.TransportType
    - description: 'The encoding to use if hostname is provided as a str.

        Default is ''UTF-8''.'
      id: encoding
      type:
      - str
  type: class
  uid: uamqp.authentication.cbs_auth.SASTokenAuth
- class: uamqp.authentication.cbs_auth.SASTokenAuth
  fullName: uamqp.authentication.cbs_auth.SASTokenAuth.from_shared_access_key
  langs:
  - python
  module: uamqp.authentication.cbs_auth
  name: 'from_shared_access_key(uri, key_name, shared_access_key, expiry=None, port=5671,
    timeout=10, retry_policy=<uamqp.authentication.cbs_auth.TokenRetryPolicy object>,
    verify=None, http_proxy=None, transport_type=<TransportType.Amqp: 1>, encoding=''UTF-8'')'
  namewithoutparameters: from_shared_access_key
  summary: 'Attempt to create a CBS token session using a Shared Access Key such

    as is used to connect to Azure services.'
  syntax:
    content: 'from_shared_access_key(uri, key_name, shared_access_key, expiry=None,
      port=5671, timeout=10, retry_policy=<uamqp.authentication.cbs_auth.TokenRetryPolicy
      object>, verify=None, http_proxy=None, transport_type=<TransportType.Amqp: 1>,
      encoding=''UTF-8'')'
    parameters:
    - description: 'The AMQP endpoint URI. This must be provided as

        a decoded string.'
      id: uri
      isRequired: true
      type:
      - str
    - description: 'The SAS token username, also referred to as the key

        name or policy name.'
      id: key_name
      isRequired: true
      type:
      - str
    - description: The SAS token password, also referred to as the key.
      id: shared_access_key
      isRequired: true
      type:
      - str
    - description: The lifetime in seconds for the generated token. Default is 1 hour.
      id: expiry
      isRequired: true
      type:
      - int
    - defaultValue: None
      description: The TLS port - default for AMQP is 5671.
      id: port
      type:
      - int
    - defaultValue: '5671'
      description: 'The timeout in seconds in which to negotiate the token.

        The default value is 10 seconds.'
      id: timeout
      type:
      - float
    - defaultValue: '10'
      description: 'The retry policy for the PUT token request. The default

        retry policy has 3 retries.'
      id: retry_policy
      type:
      - uamqp.authentication.cbs_auth.TokenRetryPolicy
    - description: The path to a user-defined certificate.
      id: verify
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'HTTP proxy configuration. This should be a dictionary with

        the following keys present: ''proxy_hostname'' and ''proxy_port''. Additional
        optional

        keys are ''username'' and ''password''.'
      id: http_proxy
      type:
      - dict
    - defaultValue: None
      description: 'The transport protocol type - default is ~uamqp.TransportType.Amqp.

        ~uamqp.TransportType.AmqpOverWebsocket is applied when http_proxy is set or
        the

        transport type is explicitly requested.'
      id: transport_type
      type:
      - uamqp.TransportType
    - defaultValue: TransportType.Amqp
      description: 'The encoding to use if hostname is provided as a str.

        Default is ''UTF-8''.'
      id: encoding
      type:
      - str
    - defaultValue: UTF-8
      id: encoding
  type: method
  uid: uamqp.authentication.cbs_auth.SASTokenAuth.from_shared_access_key
- class: uamqp.authentication.cbs_auth.SASTokenAuth
  fullName: uamqp.authentication.cbs_auth.SASTokenAuth.update_token
  langs:
  - python
  module: uamqp.authentication.cbs_auth
  name: update_token()
  namewithoutparameters: update_token
  summary: 'If a username and password are present - attempt to use them to

    request a fresh SAS token.'
  syntax:
    content: update_token()
    parameters: []
  type: method
  uid: uamqp.authentication.cbs_auth.SASTokenAuth.update_token
references:
- fullName: uamqp.authentication.cbs_auth.SASTokenAuth.from_shared_access_key
  isExternal: false
  name: 'from_shared_access_key(uri, key_name, shared_access_key, expiry=None, port=5671,
    timeout=10, retry_policy=<uamqp.authentication.cbs_auth.TokenRetryPolicy object>,
    verify=None, http_proxy=None, transport_type=<TransportType.Amqp: 1>, encoding=''UTF-8'')'
  parent: uamqp.authentication.cbs_auth.SASTokenAuth
  uid: uamqp.authentication.cbs_auth.SASTokenAuth.from_shared_access_key
- fullName: uamqp.authentication.cbs_auth.SASTokenAuth.update_token
  isExternal: false
  name: update_token()
  parent: uamqp.authentication.cbs_auth.SASTokenAuth
  uid: uamqp.authentication.cbs_auth.SASTokenAuth.update_token
