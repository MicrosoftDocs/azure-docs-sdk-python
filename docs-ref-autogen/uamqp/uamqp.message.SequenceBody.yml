### YamlMime:PythonClass
uid: uamqp.message.SequenceBody
name: SequenceBody
fullName: uamqp.message.SequenceBody
module: uamqp.message
inheritances:
- uamqp.message.MessageBody
summary: 'An AMQP message body of type Sequence. This represents

  a list of sequence sections.'
constructor:
  syntax: SequenceBody(c_message, encoding='UTF-8')
  parameters:
  - name: c_message
    isRequired: true
  - name: encoding
    defaultValue: UTF-8
variables:
- description: The body type. This should always be SequenceType
  name: type
  types:
  - <xref:uamqp.c_uamqp.MessageBodyType>
- description: 'The data contained in the message body. This returns

    a generator to iterate over each section in the body, where

    each section will be a list of objects.'
  name: data
  types:
  - <xref:typing.Generator>[<xref:typing.List>[<xref:object>]]
methods:
- uid: uamqp.message.SequenceBody.append
  name: append
  summary: 'Append a sequence section to the body. The data

    should be a list of objects. The object in the list

    can be any Python data type and it will be automatically

    encoded into an AMQP type. If a specific AMQP type

    is required, a *types.AMQPType* can be used.'
  signature: append(data)
  parameters:
  - name: data
    description: The list of objects to append.
    isRequired: true
    types:
    - <xref:list>[<xref:uamqp.types.AMQPType>]
attributes:
- uid: uamqp.message.SequenceBody.data
  name: data
- uid: uamqp.message.SequenceBody.type
  name: type
