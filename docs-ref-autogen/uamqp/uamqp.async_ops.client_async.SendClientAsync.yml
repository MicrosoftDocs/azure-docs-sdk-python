### YamlMime:PythonClass
uid: uamqp.async_ops.client_async.SendClientAsync
name: SendClientAsync
fullName: uamqp.async_ops.client_async.SendClientAsync
module: uamqp.async_ops.client_async
inheritances:
- uamqp.client.SendClient
- uamqp.async_ops.client_async.AMQPClientAsync
summary: An AMQP client for sending messages asynchronously.
constructor:
  syntax: SendClientAsync(target, auth=None, client_name=None, loop=None, debug=False,
    msg_timeout=0, error_policy=None, keep_alive_interval=None, **kwargs)
  parameters:
  - name: target
    description: 'The target AMQP service endpoint. This can either be the URI as

      a string or a ~uamqp.address.Target object.'
    isRequired: true
    types:
    - <xref:str>, <xref:bytes>
    - <xref:uamqp.address.Target>
  - name: auth
    description: "Authentication for the connection. This should be one of the subclasses\
      \ of\nuamqp.authentication.AMQPAuth. Currently this includes:\n\n   * uamqp.authentication.SASLAnonymous\
      \ \n\n   * uamqp.authentication.SASLPlain \n\n   * uamqp.authentication.SASTokenAsync\
      \ \n\n   * uamqp.authentication.JWTTokenAsync \n\nIf no authentication is supplied,\
      \ SASLAnnoymous will be used by default."
    isRequired: true
    types:
    - <xref:uamqp.authentication.common.AMQPAuth>
  - name: client_name
    description: 'The name for the client, also known as the Container ID.

      If no name is provided, a random GUID will be used.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: debug
    description: 'Whether to turn on network trace logs. If *True*, trace logs

      will be logged at INFO level. Default is *False*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: msg_timeout
    description: 'A timeout in milliseconds for messages from when they have been

      added to the send queue to when the message is actually sent. This prevents
      potentially

      expired data from being sent. If set to 0, messages will not expire. Default
      is 0.'
    isRequired: true
    types:
    - <xref:int>
  - name: error_policy
    description: 'A policy for parsing errors on link, connection and message

      disposition to determine whether the error should be retryable.'
    isRequired: true
    types:
    - <xref:uamqp.errors.ErrorPolicy>
  - name: keep_alive_interval
    description: 'If set, a thread will be started to keep the connection

      alive during periods of user inactivity. The value will determine how long the

      thread will sleep (in seconds) between pinging the connection. If 0 or None,
      no

      thread will be started.'
    isRequired: true
    types:
    - <xref:int>
  - name: send_settle_mode
    description: 'The mode by which to settle message send

      operations. If set to *Unsettled*, the client will wait for a confirmation

      from the service that the message was successfully sent. If set to ''Settled'',

      the client will not wait for confirmation and assume success.'
    isRequired: true
    types:
    - <xref:uamqp.constants.SenderSettleMode>
  - name: receive_settle_mode
    description: 'The mode by which to settle message receive

      operations. If set to *PeekLock*, the receiver will lock a message once received
      until

      the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
      service

      will assume successful receipt of the message and clear it from the queue. The

      default is *PeekLock*.'
    isRequired: true
    types:
    - <xref:uamqp.constants.ReceiverSettleMode>
  - name: desired_capabilities
    description: "The extension capabilities desired from the peer endpoint.\nTo create\
      \ a desired_capabilities object, please do as follows:\n\n   * 1. Create an\
      \ array of desired capability symbols: *capabilities_symbol_array = [types.AMQPSymbol(string)]*\
      \ \n\n\n   * 2. Transform the array to AMQPValue object: *utils.data_factory(types.AMQPArray(capabilities_symbol_array))*"
    isRequired: true
    types:
    - <xref:uamqp.c_uamqp.AMQPValue>
  - name: max_message_size
    description: The maximum allowed message size negotiated for the Link.
    isRequired: true
    types:
    - <xref:int>
  - name: link_properties
    description: Metadata to be sent in the Link ATTACH frame.
    isRequired: true
    types:
    - <xref:dict>
  - name: link_credit
    description: 'The sender Link credit that determines how many

      messages the Link will attempt to handle per connection iteration.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_frame_size
    description: Maximum AMQP frame size. Default is 63488 bytes.
    isRequired: true
    types:
    - <xref:int>
  - name: channel_max
    description: Maximum number of Session channels in the Connection.
    isRequired: true
    types:
    - <xref:int>
  - name: idle_timeout
    description: 'Timeout in milliseconds after which the Connection will close

      if there is no further activity.'
    isRequired: true
    types:
    - <xref:int>
  - name: properties
    description: Connection properties.
    isRequired: true
    types:
    - <xref:dict>
  - name: remote_idle_timeout_empty_frame_send_ratio
    description: 'Ratio of empty frames to

      idle time for Connections with no activity. Value must be between

      0.0 and 1.0 inclusive. Default is 0.5.'
    isRequired: true
    types:
    - <xref:float>
  - name: incoming_window
    description: The size of the allowed window for incoming messages.
    isRequired: true
    types:
    - <xref:int>
  - name: outgoing_window
    description: The size of the allowed window for outgoing messages.
    isRequired: true
    types:
    - <xref:int>
  - name: handle_max
    description: The maximum number of concurrent link handles.
    isRequired: true
    types:
    - <xref:int>
  - name: on_attach
    description: 'A callback function to be run on receipt of an ATTACH frame.

      The function must take 4 arguments: source, target, properties and error.'
    isRequired: true
    types:
    - <xref:func>[<xref:uamqp.address.Source>, <xref:uamqp.address.Target>, <xref:dict>,
      <xref:uamqp.errors.AMQPConnectionError>]
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: uamqp.async_ops.client_async.SendClientAsync.close_async
  name: close_async
  summary: 'Close down the client asynchronously. No further

    messages can be sent and the client cannot be re-opened.


    All pending, unsent messages will remain uncleared to allow

    them to be inspected and queued to a new client.'
  signature: close_async()
- uid: uamqp.async_ops.client_async.SendClientAsync.redirect_async
  name: redirect_async
  summary: 'Redirect the client endpoint using a Link DETACH redirect

    response.'
  signature: redirect_async(redirect, auth)
  parameters:
  - name: redirect
    description: The Link DETACH redirect details.
    isRequired: true
    types:
    - <xref:uamqp.errors.LinkRedirect>
  - name: auth
    description: Authentication credentials to the redirected endpoint.
    isRequired: true
    types:
    - <xref:uamqp.authentication.common.AMQPAuth>
- uid: uamqp.async_ops.client_async.SendClientAsync.send_all_messages_async
  name: send_all_messages_async
  summary: 'Send all pending messages in the queue asynchronously.

    This will return a list of the send result of all the pending

    messages so it can be determined if any messages failed to send.

    This function will open the client if it is not already open.'
  signature: send_all_messages_async(close_on_done=True)
  parameters:
  - name: close_on_done
    description: 'Close the client once the messages are sent.

      Default is *True*.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  return:
    types:
    - <xref:list>[<xref:uamqp.constants.MessageState>]
- uid: uamqp.async_ops.client_async.SendClientAsync.send_message_async
  name: send_message_async
  summary: Send a single message or batched message asynchronously.
  signature: send_message_async(messages, close_on_done=False)
  parameters:
  - name: messages
    description: 'A message to send. This can either be a single instance

      of ~uamqp.message.Message, or multiple messages wrapped in an instance

      of ~uamqp.message.BatchMessage.'
    isRequired: true
  - name: close_on_done
    description: Close the client once the message is sent. Default is *False*.
    defaultValue: 'False'
    types:
    - <xref:bool>
  exceptions:
  - type: '~uamqp.errors.MessageException if message fails to send after retry policy

      is exhausted.'
- uid: uamqp.async_ops.client_async.SendClientAsync.wait_async
  name: wait_async
  summary: 'Run the client asynchronously until all pending messages

    in the queue have been processed.'
  signature: wait_async()
