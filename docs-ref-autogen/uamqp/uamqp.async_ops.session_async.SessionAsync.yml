### YamlMime:PythonClass
uid: uamqp.async_ops.session_async.SessionAsync
name: SessionAsync
fullName: uamqp.async_ops.session_async.SessionAsync
module: uamqp.async_ops.session_async
inheritances:
- uamqp.session.Session
summary: 'An asynchronous AMQP Session. A Connection can have multiple Sessions, and
  each

  Session can have multiple Links.

  An async Session must be used with an async Connection.'
constructor:
  syntax: SessionAsync(connection, incoming_window=None, outgoing_window=None, handle_max=None,
    on_attach=None, loop=None)
  parameters:
  - name: connection
    description: The underlying Connection for the Session.
    isRequired: true
    types:
    - <xref:uamqp.async_ops.connection_async.ConnectionAsync>
  - name: incoming_window
    description: The size of the allowed window for incoming messages.
    isRequired: true
    types:
    - <xref:int>
  - name: outgoing_window
    description: The size of the allowed window for outgoing messages.
    isRequired: true
    types:
    - <xref:int>
  - name: handle_max
    description: The maximum number of concurrent link handles.
    isRequired: true
    types:
    - <xref:int>
  - name: on_attach
    description: 'A callback function to be run on receipt of an ATTACH frame.

      The function must take 4 arguments: source, target, properties and error.'
    isRequired: true
    types:
    - <xref:func>[<xref:uamqp.address.Source>, <xref:uamqp.address.Target>, <xref:dict>,
      <xref:uamqp.errors.AMQPConnectionError>]
  - name: loop
    description: A user specified event loop.
    isRequired: true
    types:
    - <xref:asycnio.AbstractEventLoop>
variables:
- description: The size of the allowed window for incoming messages.
  name: incoming_window
  types:
  - <xref:int>
- description: The size of the allowed window for outgoing messages.
  name: outgoing_window
  types:
  - <xref:int>
- description: The maximum number of concurrent link handles.
  name: handle_max
  types:
  - <xref:int>
methods:
- uid: uamqp.async_ops.session_async.SessionAsync.destroy_async
  name: destroy_async
  summary: 'Asynchronously close any open management Links and close the Session.

    Cleans up and C objects for both mgmt Links and Session.'
  signature: destroy_async()
- uid: uamqp.async_ops.session_async.SessionAsync.mgmt_request_async
  name: mgmt_request_async
  summary: 'Asynchronously run a request/response operation. These are frequently
    used

    for management tasks against a $management node, however any node name can be

    specified and the available options will depend on the target service.'
  signature: mgmt_request_async(message, operation, op_type=None, node=b'$management',
    **kwargs)
  parameters:
  - name: message
    description: The message to send in the management request.
    isRequired: true
    types:
    - <xref:uamqp.message.Message>
  - name: operation
    description: 'The type of operation to be performed. This value will

      be service-specific, but common values include READ, CREATE and UPDATE.

      This value will be added as an application property on the message.'
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:str>
  - name: op_type
    description: 'The type on which to carry out the operation. This will

      be specific to the entities of the service. This value will be added as

      an application property on the message.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:bytes>
    - <xref:str>
  - name: node
    description: The target node. Default is *b"$management"*.
    isRequired: true
    defaultValue: b'$management'
    types:
    - <xref:bytes>
    - <xref:str>
  - name: timeout
    description: 'Provide an optional timeout in milliseconds within which a response

      to the management request must be received.'
    isRequired: true
    types:
    - <xref:float>
  - name: status_code_field
    description: 'Provide an alternate name for the status code in the

      response body which can vary between services due to the spec still being in
      draft.

      The default is *b"statusCode"*.'
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:str>
  - name: description_fields
    description: 'Provide an alternate name for the description in the

      response body which can vary between services due to the spec still being in
      draft.

      The default is *b"statusDescription"*.'
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:str>
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:uamqp.message.Message>
