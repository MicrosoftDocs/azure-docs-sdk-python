### YamlMime:UniversalReference
api_name: []
items:
- children:
  - uamqp.async_ops.connection_async.ConnectionAsync.destroy_async
  - uamqp.async_ops.connection_async.ConnectionAsync.lock_async
  - uamqp.async_ops.connection_async.ConnectionAsync.redirect_async
  - uamqp.async_ops.connection_async.ConnectionAsync.release_async
  - uamqp.async_ops.connection_async.ConnectionAsync.sleep_async
  - uamqp.async_ops.connection_async.ConnectionAsync.work_async
  class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync
  inheritance:
  - inheritance:
    - type: builtins.object
    type: uamqp.connection.Connection
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: ConnectionAsync
  summary: 'An Asynchronous AMQP Connection. A single Connection can have multiple

    Sessions, and can be shared between multiple Clients.'
  syntax:
    content: ConnectionAsync(hostname, sasl, container_id=False, max_frame_size=None,
      channel_max=None, idle_timeout=None, properties=None, remote_idle_timeout_empty_frame_send_ratio=None,
      error_policy=None, debug=False, encoding='UTF-8', loop=None)
    parameters:
    - description: 'The hostname of the AMQP service with which to establish

        a connection.'
      id: hostname
      type:
      - bytes
      - str
    - description: 'Authentication for the connection. If none is provided SASL Annoymous

        authentication will be used.'
      id: sasl
      type:
      - uamqp.authentication.common.AMQPAuth
    - description: 'The name for the client, also known as the Container ID.

        If no name is provided, a random GUID will be used.'
      id: container_id
      type:
      - str
      - bytes
    - description: Maximum AMQP frame size. Default is 63488 bytes.
      id: max_frame_size
      type:
      - int
    - description: Maximum number of Session channels in the Connection.
      id: channel_max
      type:
      - int
    - description: 'Timeout in milliseconds after which the Connection will close

        if there is no further activity.'
      id: idle_timeout
      type:
      - int
    - description: Connection properties.
      id: properties
      type:
      - dict
    - description: 'Ratio of empty frames to

        idle time for Connections with no activity. Value must be between

        0.0 and 1.0 inclusive. Default is 0.5.'
      id: remote_idle_timeout_empty_frame_send_ratio
      type:
      - float
    - description: 'Whether to turn on network trace logs. If *True*, trace logs

        will be logged at INFO level. Default is *False*.'
      id: debug
      type:
      - bool
    - description: 'The encoding to use for parameters supplied as strings.

        Default is ''UTF-8'''
      id: encoding
      type:
      - str
    - description: A user specified event loop.
      id: loop
      type:
      - asyncio.AbstractEventLoop
    variables:
    - description: Maximum AMQP frame size. Default is 63488 bytes.
      id: max_frame_size
      type:
      - int
    - description: Maximum number of Session channels in the Connection.
      id: channel_max
      type:
      - int
    - description: 'Timeout in milliseconds after which the Connection will close

        if there is no further activity.'
      id: idle_timeout
      type:
      - int
    - description: Connection properties.
      id: properties
      type:
      - dict
  type: class
  uid: uamqp.async_ops.connection_async.ConnectionAsync
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.destroy_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: destroy_async()
  namewithoutparameters: destroy_async
  summary: 'Close the connection asynchronously, and close any associated

    CBS authentication session.'
  syntax:
    content: destroy_async()
    parameters: []
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.destroy_async
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.lock_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: lock_async(timeout=3.0)
  namewithoutparameters: lock_async
  syntax:
    content: lock_async(timeout=3.0)
    parameters:
    - defaultValue: '3.0'
      id: timeout
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.lock_async
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.redirect_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: redirect_async(redirect_error, auth)
  namewithoutparameters: redirect_async
  summary: 'Redirect the connection to an alternative endpoint.

    :param redirect: The Link DETACH redirect details.

    :type redirect: ~uamqp.errors.LinkRedirect

    :param auth: Authentication credentials to the redirected endpoint.

    :type auth: ~uamqp.authentication.common.AMQPAuth'
  syntax:
    content: redirect_async(redirect_error, auth)
    parameters:
    - id: redirect_error
      isRequired: true
    - id: auth
      isRequired: true
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.redirect_async
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.release_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: release_async()
  namewithoutparameters: release_async
  syntax:
    content: release_async()
    parameters: []
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.release_async
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.sleep_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: sleep_async(seconds)
  namewithoutparameters: sleep_async
  summary: Lock the connection for a given number of seconds.
  syntax:
    content: sleep_async(seconds)
    parameters:
    - description: Length of time to lock the connection.
      id: seconds
      isRequired: true
      type:
      - int
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.sleep_async
- class: uamqp.async_ops.connection_async.ConnectionAsync
  fullName: uamqp.async_ops.connection_async.ConnectionAsync.work_async
  langs:
  - python
  module: uamqp.async_ops.connection_async
  name: work_async()
  namewithoutparameters: work_async
  summary: Perform a single Connection iteration asynchronously.
  syntax:
    content: work_async()
    parameters: []
  type: method
  uid: uamqp.async_ops.connection_async.ConnectionAsync.work_async
references:
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.destroy_async
  isExternal: false
  name: destroy_async()
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.destroy_async
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.lock_async
  isExternal: false
  name: lock_async(timeout=3.0)
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.lock_async
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.redirect_async
  isExternal: false
  name: redirect_async(redirect_error, auth)
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.redirect_async
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.release_async
  isExternal: false
  name: release_async()
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.release_async
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.sleep_async
  isExternal: false
  name: sleep_async(seconds)
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.sleep_async
- fullName: uamqp.async_ops.connection_async.ConnectionAsync.work_async
  isExternal: false
  name: work_async()
  parent: uamqp.async_ops.connection_async.ConnectionAsync
  uid: uamqp.async_ops.connection_async.ConnectionAsync.work_async
