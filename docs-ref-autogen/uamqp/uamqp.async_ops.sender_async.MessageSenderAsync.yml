### YamlMime:PythonClass
uid: uamqp.async_ops.sender_async.MessageSenderAsync
name: MessageSenderAsync
fullName: uamqp.async_ops.sender_async.MessageSenderAsync
module: uamqp.async_ops.sender_async
inheritances:
- uamqp.sender.MessageSender
summary: 'An asynchronous Message Sender that opens its own exclsuive Link on an

  existing Session.'
constructor:
  syntax: 'MessageSenderAsync(session, source, target, name=None, send_settle_mode=<SenderSettleMode.Unsettled:
    0>, receive_settle_mode=<ReceiverSettleMode.PeekLock: 1>, max_message_size=1048576,
    link_credit=None, properties=None, error_policy=None, debug=False, encoding=''UTF-8'',
    desired_capabilities=None, loop=None)'
  parameters:
  - name: session
    description: The underlying Session with which to send.
    isRequired: true
    types:
    - <xref:uamqp.async_ops.session_async.SessionAsync>
  - name: source
    description: The name of source (i.e. the client).
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: target
    description: The AMQP endpoint to send to.
    isRequired: true
    types:
    - <xref:uamqp.address.Target>
  - name: name
    description: A unique name for the sender. If not specified a GUID will be used.
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: send_settle_mode
    description: 'The mode by which to settle message send

      operations. If set to *Unsettled*, the client will wait for a confirmation

      from the service that the message was successfully send. If set to ''Settled'',

      the client will not wait for confirmation and assume success.'
    isRequired: true
    types:
    - <xref:uamqp.constants.SenderSettleMode>
  - name: receive_settle_mode
    description: 'The mode by which to settle message receive

      operations. If set to *PeekLock*, the receiver will lock a message once received
      until

      the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
      service

      will assume successful receipt of the message and clear it from the queue. The

      default is *PeekLock*.'
    isRequired: true
    types:
    - <xref:uamqp.constants.ReceiverSettleMode>
  - name: desired_capabilities
    description: "The extension capabilities desired from the peer endpoint.\nTo create\
      \ a desired_capabilities object, please do as follows:\n\n   * 1. Create an\
      \ array of desired capability symbols: *capabilities_symbol_array = [types.AMQPSymbol(string)]*\
      \ \n\n\n   * 2. Transform the array to AMQPValue object: *utils.data_factory(types.AMQPArray(capabilities_symbol_array))*"
    isRequired: true
    types:
    - <xref:uamqp.c_uamqp.AMQPValue>
  - name: max_message_size
    description: The maximum allowed message size negotiated for the Link.
    isRequired: true
    types:
    - <xref:int>
  - name: link_credit
    description: 'The sender Link credit that determines how many

      messages the Link will attempt to handle per connection iteration.'
    isRequired: true
    types:
    - <xref:int>
  - name: properties
    description: Metadata to be sent in the Link ATTACH frame.
    isRequired: true
    types:
    - <xref:dict>
  - name: error_policy
    description: 'A policy for parsing errors on link, connection and message

      disposition to determine whether the error should be retryable.'
    isRequired: true
    types:
    - <xref:uamqp.errors.ErrorPolicy>
  - name: debug
    description: 'Whether to turn on network trace logs. If *True*, trace logs

      will be logged at INFO level. Default is *False*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    isRequired: true
    types:
    - <xref:str>
variables:
- description: 'The sender Link credit that determines how many

    messages the Link will attempt to handle per connection iteration.'
  name: link_credit
  types:
  - <xref:int>
- description: Metadata to be sent in the Link ATTACH frame.
  name: properties
  types:
  - <xref:dict>
- description: 'The mode by which to settle message send

    operations. If set to *Unsettled*, the client will wait for a confirmation

    from the service that the message was successfully send. If set to ''Settled'',

    the client will not wait for confirmation and assume success.'
  name: send_settle_mode
  types:
  - <xref:uamqp.constants.SenderSettleMode>
- description: 'The mode by which to settle message receive

    operations. If set to *PeekLock*, the receiver will lock a message once received
    until

    the client accepts or rejects the message. If set to *ReceiveAndDelete*, the service

    will assume successful receipt of the message and clear it from the queue. The

    default is *PeekLock*.'
  name: receive_settle_mode
  types:
  - <xref:uamqp.constants.ReceiverSettleMode>
- description: The maximum allowed message size negotiated for the Link.
  name: max_message_size
  types:
  - <xref:int>
methods:
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.close_async
  name: close_async
  summary: Close the sender asynchronously, leaving the link intact.
  signature: close_async()
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.destroy_async
  name: destroy_async
  summary: Asynchronously close both the Sender and the Link. Clean up any C objects.
  signature: destroy_async()
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.open_async
  name: open_async
  summary: 'Asynchronously open the MessageSender in order to start

    processing messages.'
  signature: open_async()
  exceptions:
  - type: '~uamqp.errors.AMQPConnectionError if the Sender raises

      an error on opening. This can happen if the target URI is invalid

      or the credentials are rejected.'
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.send_async
  name: send_async
  summary: 'Add a single message to the internal pending queue to be processed

    by the Connection without waiting for it to be sent.'
  signature: send_async(message, callback, timeout=0)
  parameters:
  - name: message
    description: The message to send.
    isRequired: true
    types:
    - <xref:uamqp.message.Message>
  - name: callback
    description: 'The callback to be run once a disposition is received

      in receipt of the message. The callback must take three arguments, the message,

      the send result and the optional delivery condition (exception).'
    isRequired: true
    types:
    - <xref:callable>[<xref:uamqp.message.Message>, <xref:uamqp.constants.MessageSendResult>,
      <xref:uamqp.errors.MessageException>]
  - name: timeout
    description: 'An expiry time for the message added to the queue. If the

      message is not sent within this timeout it will be discarded with an error

      state. If set to 0, the message will not expire. The default is 0.'
    defaultValue: '0'
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.work_async
  name: work_async
  summary: Update the link status.
  signature: work_async()
attributes:
- uid: uamqp.async_ops.sender_async.MessageSenderAsync.loop
  name: loop
