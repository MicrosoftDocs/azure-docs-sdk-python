### YamlMime:PythonClass
uid: uamqp.receiver.MessageReceiver
name: MessageReceiver
fullName: uamqp.receiver.MessageReceiver
module: uamqp.receiver
inheritances:
- builtins.object
summary: 'A Message Receiver that opens its own exclsuive Link on an

  existing Session.'
constructor:
  syntax: MessageReceiver(session, source, target, on_message_received, name=None,
    receive_settle_mode=ReceiverSettleMode.PeekLock, send_settle_mode=SenderSettleMode.Unsettled,
    max_message_size=1048576, prefetch=300, properties=None, error_policy=None, debug=False,
    encoding='UTF-8', desired_capabilities=None)
  parameters:
  - name: session
    description: The underlying Session with which to receive.
    isRequired: true
    types:
    - <xref:uamqp.session.Session>
  - name: source
    description: The AMQP endpoint to receive from.
    isRequired: true
    types:
    - <xref:uamqp.address.Source>
  - name: target
    description: The name of target (i.e. the client).
    isRequired: true
    types:
    - <xref:str>
    - <xref:bytes>
  - name: name
    description: A unique name for the receiver. If not specified a GUID will be used.
    defaultValue: None
    types:
    - <xref:str>
    - <xref:bytes>
  - name: receive_settle_mode
    description: 'The mode by which to settle message receive

      operations. If set to *PeekLock*, the receiver will lock a message once received
      until

      the client accepts or rejects the message. If set to *ReceiveAndDelete*, the
      service

      will assume successful receipt of the message and clear it from the queue. The

      default is *PeekLock*.'
    defaultValue: ReceiverSettleMode.PeekLock
    types:
    - <xref:uamqp.constants.ReceiverSettleMode>
  - name: send_settle_mode
    description: 'The mode by which to settle message send

      operations. If set to *Unsettled*, the client will wait for a confirmation

      from the service that the message was successfully sent. If set to ''Settled'',

      the client will not wait for confirmation and assume success.'
    defaultValue: SenderSettleMode.Unsettled
    types:
    - <xref:uamqp.constants.SenderSettleMode>
  - name: desired_capabilities
    description: "The extension capabilities desired from the peer endpoint.\nTo create\
      \ a desired_capabilities object, please do as follows:\n\n   * 1. Create an\
      \ array of desired capability symbols: *capabilities_symbol_array = [types.AMQPSymbol(string)]*\
      \ \n\n\n   * 2. Transform the array to AMQPValue object: *utils.data_factory(types.AMQPArray(capabilities_symbol_array))*"
    defaultValue: None
    types:
    - <xref:uamqp.c_uamqp.AMQPValue>
  - name: max_message_size
    description: The maximum allowed message size negotiated for the Link.
    defaultValue: '1048576'
    types:
    - <xref:int>
  - name: prefetch
    description: 'The receiver Link credit that determines how many

      messages the Link will attempt to handle per connection iteration.'
    defaultValue: '300'
    types:
    - <xref:int>
  - name: properties
    description: Metadata to be sent in the Link ATTACH frame.
    defaultValue: None
    types:
    - <xref:dict>
  - name: error_policy
    description: 'A policy for parsing errors on link, connection and message

      disposition to determine whether the error should be retryable.'
    defaultValue: None
    types:
    - <xref:uamqp.errors.ErrorPolicy>
  - name: debug
    description: 'Whether to turn on network trace logs. If *True*, trace logs

      will be logged at INFO level. Default is *False*.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: encoding
    description: 'The encoding to use for parameters supplied as strings.

      Default is ''UTF-8'''
    defaultValue: UTF-8
    types:
    - <xref:str>
  - name: on_message_received
    isRequired: true
variables:
- description: 'The mode by which to settle message receive

    operations. If set to *PeekLock*, the receiver will lock a message once received
    until

    the client accepts or rejects the message. If set to *ReceiveAndDelete*, the service

    will assume successful receipt of the message and clear it from the queue. The

    default is *PeekLock*.'
  name: receive_settle_mode
  types:
  - <xref:uamqp.constants.ReceiverSettleMode>
- description: 'The mode by which to settle message send

    operations. If set to *Unsettled*, the client will wait for a confirmation

    from the service that the message was successfully sent. If set to ''Settled'',

    the client will not wait for confirmation and assume success.'
  name: send_settle_mode
  types:
  - <xref:uamqp.constants.SenderSettleMode>
- description: The maximum allowed message size negotiated for the Link.
  name: max_message_size
  types:
  - <xref:int>
methods:
- uid: uamqp.receiver.MessageReceiver.close
  name: close
  summary: Close the Receiver, leaving the link intact.
  signature: close()
- uid: uamqp.receiver.MessageReceiver.destroy
  name: destroy
  summary: Close both the Receiver and the Link. Clean up any C objects.
  signature: destroy()
- uid: uamqp.receiver.MessageReceiver.get_state
  name: get_state
  summary: Get the state of the MessageReceiver and its underlying Link.
  signature: get_state()
  return:
    types:
    - <xref:uamqp.constants.MessageReceiverState>
- uid: uamqp.receiver.MessageReceiver.on_state_changed
  name: on_state_changed
  summary: 'Callback called whenever the underlying Receiver undergoes a change

    of state. This function can be overridden.'
  signature: on_state_changed(previous_state, new_state)
  parameters:
  - name: previous_state
    description: The previous Receiver state.
    isRequired: true
    types:
    - <xref:uamqp.constants.MessageReceiverState>
  - name: new_state
    description: The new Receiver state.
    isRequired: true
    types:
    - <xref:uamqp.constants.MessageReceiverState>
- uid: uamqp.receiver.MessageReceiver.open
  name: open
  summary: Open the MessageReceiver in order to start processing messages.
  signature: open()
  exceptions:
  - type: uamqp.errors.AMQPConnectionError if the Receiver raisesan error on opening.
      This can happen if the source URI is invalidor the credentials are rejected.
- uid: uamqp.receiver.MessageReceiver.reset_link_credit
  name: reset_link_credit
  summary: Reset the link credit. This method would send flow control frame to the
    sender.
  signature: reset_link_credit(link_credit, **kwargs)
  parameters:
  - name: link_credit
    description: The link credit amount that is requested.
    isRequired: true
    types:
    - <xref:int>
- uid: uamqp.receiver.MessageReceiver.work
  name: work
  summary: Update the link status.
  signature: work()
attributes:
- uid: uamqp.receiver.MessageReceiver.max_message_size
  name: max_message_size
- uid: uamqp.receiver.MessageReceiver.receive_settle_mode
  name: receive_settle_mode
- uid: uamqp.receiver.MessageReceiver.send_settle_mode
  name: send_settle_mode
