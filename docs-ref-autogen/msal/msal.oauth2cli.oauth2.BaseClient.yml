### YamlMime:PythonClass
uid: msal.oauth2cli.oauth2.BaseClient
name: BaseClient
fullName: msal.oauth2cli.oauth2.BaseClient
module: msal.oauth2cli.oauth2
inheritances:
- builtins.object
constructor:
  syntax: BaseClient(server_configuration, client_id, http_client=None, client_secret=None,
    client_assertion=None, client_assertion_type=None, default_headers=None, default_body=None,
    verify=None, proxies=None, timeout=None)
methods:
- uid: msal.oauth2cli.oauth2.BaseClient.encode_saml_assertion
  name: encode_saml_assertion
  signature: encode_saml_assertion(assertion)
  parameters:
  - name: assertion
    isRequired: true
- uid: msal.oauth2cli.oauth2.BaseClient.obtain_token_by_refresh_token
  name: obtain_token_by_refresh_token
  summary: Obtain an access token via a refresh token.
  parameters:
  - name: refresh_token
    description: The refresh token issued to the client
    isRequired: true
  - name: scope
    description: 'If omitted, is treated as equal to the scope originally

      granted by the resource owner,

      according to [https://tools.ietf.org/html/rfc6749#section-6](https://tools.ietf.org/html/rfc6749#section-6)'
    defaultValue: None
attributes:
- uid: msal.oauth2cli.oauth2.BaseClient.session
  name: session
- uid: msal.oauth2cli.oauth2.BaseClient.CLIENT_ASSERTION_TYPE_JWT
  name: CLIENT_ASSERTION_TYPE_JWT
  signature: CLIENT_ASSERTION_TYPE_JWT = 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'
- uid: msal.oauth2cli.oauth2.BaseClient.CLIENT_ASSERTION_TYPE_SAML2
  name: CLIENT_ASSERTION_TYPE_SAML2
  signature: CLIENT_ASSERTION_TYPE_SAML2 = 'urn:ietf:params:oauth:client-assertion-type:saml2-bearer'
- uid: msal.oauth2cli.oauth2.BaseClient.client_assertion_encoders
  name: client_assertion_encoders
  signature: 'client_assertion_encoders = {''urn:ietf:params:oauth:client-assertion-type:saml2-bearer'':
    <staticmethod object>}'
