### YamlMime:PythonClass
uid: msal.application.PublicClientApplication
name: PublicClientApplication
fullName: msal.application.PublicClientApplication
module: msal.application
inheritances:
- msal.application.ClientApplication
constructor:
  syntax: PublicClientApplication(client_id, client_credential=None, **kwargs)
methods:
- uid: msal.application.PublicClientApplication.acquire_token_by_device_flow
  name: acquire_token_by_device_flow
  summary: Obtain token by a device flow object, with customizable polling effect.
  signature: acquire_token_by_device_flow(flow, claims_challenge=None, **kwargs)
  parameters:
  - name: flow
    description: 'A dict previously generated by <xref:msal.application.initiate_device_flow>.

      By default, this method''s polling effect  will block current thread.

      You can abort the polling loop at any time,

      by changing the value of the flow''s "expires_at" key to 0.'
    isRequired: true
    types:
    - <xref:dict>
  - name: claims_challenge
    description: 'The claims_challenge parameter requests specific claims requested
      by the resource provider

      in the form of a claims_challenge directive in the www-authenticate header to
      be

      returned from the UserInfo Endpoint and/or in the ID Token and/or Access Token.

      It is a string of a JSON object which contains lists of claims being requested
      from these locations.'
    defaultValue: None
  return:
    description: "A dict representing the json response from AAD:\n\n* A successful\
      \ response would contain \"access_token\" key, \n\n* an error response would\
      \ contain \"error\" and usually \"error_description\"."
- uid: msal.application.PublicClientApplication.acquire_token_by_username_password
  name: acquire_token_by_username_password
  summary: 'Gets a token for a given resource via user credentials.


    See this page for constraints of Username Password Flow.

    [https://github.com/AzureAD/microsoft-authentication-library-for-python/wiki/Username-Password-Authentication](https://github.com/AzureAD/microsoft-authentication-library-for-python/wiki/Username-Password-Authentication)'
  signature: acquire_token_by_username_password(username, password, scopes, claims_challenge=None,
    **kwargs)
  parameters:
  - name: username
    description: Typically a UPN in the form of an email address.
    isRequired: true
    types:
    - <xref:str>
  - name: password
    description: The password.
    isRequired: true
    types:
    - <xref:str>
  - name: scopes
    description: Scopes requested to access a protected API (a resource).
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: claims_challenge
    description: 'The claims_challenge parameter requests specific claims requested
      by the resource provider

      in the form of a claims_challenge directive in the www-authenticate header to
      be

      returned from the UserInfo Endpoint and/or in the ID Token and/or Access Token.

      It is a string of a JSON object which contains lists of claims being requested
      from these locations.'
    defaultValue: None
  return:
    description: "A dict representing the json response from AAD:\n\n* A successful\
      \ response would contain \"access_token\" key, \n\n* an error response would\
      \ contain \"error\" and usually \"error_description\"."
- uid: msal.application.PublicClientApplication.acquire_token_interactive
  name: acquire_token_interactive
  summary: Acquire token interactively i.e. via a local browser.
  signature: acquire_token_interactive(scopes, prompt=None, login_hint=None, domain_hint=None,
    claims_challenge=None, timeout=None, port=None, extra_scopes_to_consent=None,
    **kwargs)
  parameters:
  - name: scope
    description: 'It is a list of case-sensitive strings.'
    isRequired: true
    types:
    - <xref:list>
  - name: prompt
    description: 'By default, no prompt value will be sent, not even "none".

      You will have to specify a value explicitly.

      Its valid values are defined in Open ID Connect specs

      [https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)'
    defaultValue: None
    types:
    - <xref:str>
  - name: login_hint
    description: Optional. Identifier of the user. Generally a User Principal Name
      (UPN).
    defaultValue: None
    types:
    - <xref:str>
  - name: domain_hint
    description: 'Can be one of "consumers" or "organizations" or your tenant domain
      "contoso.com".

      If included, it will skip the email-based discovery process that user goes

      through on the sign-in page, leading to a slightly more streamlined user experience.

      More information on possible values

      [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow#request-an-authorization-code)
      and

      [here](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oapx/86fb452d-e34a-494e-ac61-e526e263b6d8).'
    defaultValue: None
  - name: claims_challenge
    description: 'The claims_challenge parameter requests specific claims requested
      by the resource provider

      in the form of a claims_challenge directive in the www-authenticate header to
      be

      returned from the UserInfo Endpoint and/or in the ID Token and/or Access Token.

      It is a string of a JSON object which contains lists of claims being requested
      from these locations.'
    defaultValue: None
  - name: timeout
    description: 'This method will block the current thread.

      This parameter specifies the timeout value in seconds.

      Default value `None` means wait indefinitely.'
    defaultValue: None
    types:
    - <xref:int>
  - name: port
    description: 'The port to be used to listen to an incoming auth response.

      By default we will use a system-allocated port.

      (The rest of the redirect_uri is hard coded as `http://localhost`.)'
    defaultValue: None
    types:
    - <xref:int>
  - name: extra_scopes_to_consent
    description: '"Extra scopes to consent" is a concept only available in AAD.

      It refers to other resources you might want to prompt to consent for,

      in the same interaction, but for which you won''t get back a

      token for in this particular operation.'
    defaultValue: None
    types:
    - <xref:list>
  return:
    description: "* A dict containing no \"error\" key, and typically contains an\
      \ \"access_token\" key, if cache lookup succeeded. \n\n* A dict containing an\
      \ \"error\" key, when token refresh failed."
- uid: msal.application.PublicClientApplication.initiate_device_flow
  name: initiate_device_flow
  summary: 'Initiate a Device Flow instance,

    which will be used in <xref:msal.application.PublicClientApplication.acquire_token_by_device_flow>.'
  signature: initiate_device_flow(scopes=None, **kwargs)
  parameters:
  - name: scopes
    description: Scopes requested to access a protected API (a resource).
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: "A dict representing a newly created Device Flow object.\n\n* A successful\
      \ response would contain \"user_code\" key, among others \n\n* an error response\
      \ would contain some other readable key/value pairs."
attributes:
- uid: msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
  name: DEVICE_FLOW_CORRELATION_ID
  signature: DEVICE_FLOW_CORRELATION_ID = '_correlation_id'
