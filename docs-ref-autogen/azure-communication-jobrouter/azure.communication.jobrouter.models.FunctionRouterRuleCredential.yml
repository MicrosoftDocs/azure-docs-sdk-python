### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential
name: FunctionRouterRuleCredential
fullName: azure.communication.jobrouter.models.FunctionRouterRuleCredential
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter._model_base.Model
summary: Credentials used to access Azure function rule.
constructor:
  syntax: 'FunctionRouterRuleCredential(*args: Any, **kwargs: Any)'
variables:
- description: Access key scoped to a particular function.
  name: function_key
  types:
  - <xref:str>
- description: 'Access key scoped to a Azure Function app. This key grants access
    to all

    functions under the app.'
  name: app_key
  types:
  - <xref:str>
- description: 'Client id, when AppKey is provided In context of Azure function, this
    is

    usually the name of the key.'
  name: client_id
  types:
  - <xref:str>
methods:
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.app_key
  name: app_key
  summary: 'Access key scoped to a Azure Function app. This key grants access to all
    functions under the

    app.'
  signature: 'app_key: str | None'
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.client_id
  name: client_id
  summary: 'Client id, when AppKey is provided In context of Azure function, this
    is usually the name of

    the key.'
  signature: 'client_id: str | None'
- uid: azure.communication.jobrouter.models.FunctionRouterRuleCredential.function_key
  name: function_key
  summary: Access key scoped to a particular function.
  signature: 'function_key: str | None'
