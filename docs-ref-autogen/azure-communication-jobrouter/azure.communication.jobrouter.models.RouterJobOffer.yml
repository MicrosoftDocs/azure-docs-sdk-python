### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.RouterJobOffer
name: RouterJobOffer
fullName: azure.communication.jobrouter.models.RouterJobOffer
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter._model_base.Model
summary: 'An offer of a job to a worker.


  Readonly variables are only populated by the server, and will be ignored when sending
  a request.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'RouterJobOffer(*args: Any, **kwargs: Any)'
variables:
- description: Id of an offer. Required.
  name: offer_id
  types:
  - <xref:str>
- description: Id of the job. Required.
  name: job_id
  types:
  - <xref:str>
- description: The capacity cost consumed by the job offer. Required.
  name: capacity_cost
  types:
  - <xref:int>
- description: Timestamp when the offer was created in UTC.
  name: offered_at
  types:
  - <xref:datetime.datetime>
- description: Timestamp when the offer will expire in UTC.
  name: expires_at
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.communication.jobrouter.models.RouterJobOffer.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.RouterJobOffer.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.RouterJobOffer.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.RouterJobOffer.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.RouterJobOffer.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.RouterJobOffer.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.RouterJobOffer.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.RouterJobOffer.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.RouterJobOffer.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.RouterJobOffer.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.RouterJobOffer.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.RouterJobOffer.capacity_cost
  name: capacity_cost
  summary: The capacity cost consumed by the job offer. Required.
  signature: 'capacity_cost: int'
- uid: azure.communication.jobrouter.models.RouterJobOffer.expires_at
  name: expires_at
  summary: Timestamp when the offer will expire in UTC.
  signature: 'expires_at: datetime | None'
- uid: azure.communication.jobrouter.models.RouterJobOffer.job_id
  name: job_id
  summary: Id of the job. Required.
  signature: 'job_id: str'
- uid: azure.communication.jobrouter.models.RouterJobOffer.offer_id
  name: offer_id
  summary: Id of an offer. Required.
  signature: 'offer_id: str'
- uid: azure.communication.jobrouter.models.RouterJobOffer.offered_at
  name: offered_at
  summary: Timestamp when the offer was created in UTC.
  signature: 'offered_at: datetime | None'
