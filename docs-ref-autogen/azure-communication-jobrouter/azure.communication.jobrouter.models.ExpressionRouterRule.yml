### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.ExpressionRouterRule
name: ExpressionRouterRule
fullName: azure.communication.jobrouter.models.ExpressionRouterRule
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter.models._models.RouterRule
summary: 'A rule providing inline expression rules.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'ExpressionRouterRule(*args: Any, **kwargs: Any)'
variables:
- description: The expression language to compile to and execute. "powerFx"
  name: language
  types:
  - <xref:str>
  - <xref:azure.communication.jobrouter.models.ExpressionRouterRuleLanguage>
- description: 'An expression to evaluate. Should contain return statement with calculated

    values. Required.'
  name: expression
  types:
  - <xref:str>
- description: 'The type discriminator describing a sub-type of Rule. Required. Discriminator
    value

    for ExpressionRouterRule.'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.communication.jobrouter.models.EXPRESSION>
methods:
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.expression
  name: expression
  summary: An expression to evaluate. Should contain return statement with calculated
    values. Required.
  signature: 'expression: str'
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.kind
  name: kind
  summary: 'The type discriminator describing a sub-type of Rule. Required. Discriminator
    value for

    ExpressionRouterRule.'
  signature: 'kind: EXPRESSION: ''expression''>]'
- uid: azure.communication.jobrouter.models.ExpressionRouterRule.language
  name: language
  summary: The expression language to compile to and execute. "powerFx"
  signature: 'language: str | _models.ExpressionRouterRuleLanguage | None'
