### YamlMime:UniversalReference
api_name: []
items:
- children:
  - pydocumentdb.document_client.DocumentClient.Create
  - pydocumentdb.document_client.DocumentClient.CreateAttachment
  - pydocumentdb.document_client.DocumentClient.CreateAttachmentAndUploadMedia
  - pydocumentdb.document_client.DocumentClient.CreateCollection
  - pydocumentdb.document_client.DocumentClient.CreateDatabase
  - pydocumentdb.document_client.DocumentClient.CreateDocument
  - pydocumentdb.document_client.DocumentClient.CreatePermission
  - pydocumentdb.document_client.DocumentClient.CreateStoredProcedure
  - pydocumentdb.document_client.DocumentClient.CreateTrigger
  - pydocumentdb.document_client.DocumentClient.CreateUser
  - pydocumentdb.document_client.DocumentClient.CreateUserDefinedFunction
  - pydocumentdb.document_client.DocumentClient.DeleteAttachment
  - pydocumentdb.document_client.DocumentClient.DeleteCollection
  - pydocumentdb.document_client.DocumentClient.DeleteConflict
  - pydocumentdb.document_client.DocumentClient.DeleteDatabase
  - pydocumentdb.document_client.DocumentClient.DeleteDocument
  - pydocumentdb.document_client.DocumentClient.DeletePermission
  - pydocumentdb.document_client.DocumentClient.DeleteResource
  - pydocumentdb.document_client.DocumentClient.DeleteStoredProcedure
  - pydocumentdb.document_client.DocumentClient.DeleteTrigger
  - pydocumentdb.document_client.DocumentClient.DeleteUser
  - pydocumentdb.document_client.DocumentClient.DeleteUserDefinedFunction
  - pydocumentdb.document_client.DocumentClient.ExecuteStoredProcedure
  - pydocumentdb.document_client.DocumentClient.GetDatabaseAccount
  - pydocumentdb.document_client.DocumentClient.GetPartitionResolver
  - pydocumentdb.document_client.DocumentClient.QueryAttachments
  - pydocumentdb.document_client.DocumentClient.QueryCollections
  - pydocumentdb.document_client.DocumentClient.QueryConflicts
  - pydocumentdb.document_client.DocumentClient.QueryDatabases
  - pydocumentdb.document_client.DocumentClient.QueryDocuments
  - pydocumentdb.document_client.DocumentClient.QueryFeed
  - pydocumentdb.document_client.DocumentClient.QueryOffers
  - pydocumentdb.document_client.DocumentClient.QueryPermissions
  - pydocumentdb.document_client.DocumentClient.QueryStoredProcedures
  - pydocumentdb.document_client.DocumentClient.QueryTriggers
  - pydocumentdb.document_client.DocumentClient.QueryUserDefinedFunctions
  - pydocumentdb.document_client.DocumentClient.QueryUsers
  - pydocumentdb.document_client.DocumentClient.Read
  - pydocumentdb.document_client.DocumentClient.ReadAttachment
  - pydocumentdb.document_client.DocumentClient.ReadAttachments
  - pydocumentdb.document_client.DocumentClient.ReadCollection
  - pydocumentdb.document_client.DocumentClient.ReadCollections
  - pydocumentdb.document_client.DocumentClient.ReadConflict
  - pydocumentdb.document_client.DocumentClient.ReadConflicts
  - pydocumentdb.document_client.DocumentClient.ReadDatabase
  - pydocumentdb.document_client.DocumentClient.ReadDatabases
  - pydocumentdb.document_client.DocumentClient.ReadDocument
  - pydocumentdb.document_client.DocumentClient.ReadDocuments
  - pydocumentdb.document_client.DocumentClient.ReadEndpoint
  - pydocumentdb.document_client.DocumentClient.ReadMedia
  - pydocumentdb.document_client.DocumentClient.ReadOffer
  - pydocumentdb.document_client.DocumentClient.ReadOffers
  - pydocumentdb.document_client.DocumentClient.ReadPermission
  - pydocumentdb.document_client.DocumentClient.ReadPermissions
  - pydocumentdb.document_client.DocumentClient.ReadStoredProcedure
  - pydocumentdb.document_client.DocumentClient.ReadStoredProcedures
  - pydocumentdb.document_client.DocumentClient.ReadTrigger
  - pydocumentdb.document_client.DocumentClient.ReadTriggers
  - pydocumentdb.document_client.DocumentClient.ReadUser
  - pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunction
  - pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunctions
  - pydocumentdb.document_client.DocumentClient.ReadUsers
  - pydocumentdb.document_client.DocumentClient.RegisterPartitionResolver
  - pydocumentdb.document_client.DocumentClient.Replace
  - pydocumentdb.document_client.DocumentClient.ReplaceAttachment
  - pydocumentdb.document_client.DocumentClient.ReplaceCollection
  - pydocumentdb.document_client.DocumentClient.ReplaceDocument
  - pydocumentdb.document_client.DocumentClient.ReplaceOffer
  - pydocumentdb.document_client.DocumentClient.ReplacePermission
  - pydocumentdb.document_client.DocumentClient.ReplaceStoredProcedure
  - pydocumentdb.document_client.DocumentClient.ReplaceTrigger
  - pydocumentdb.document_client.DocumentClient.ReplaceUser
  - pydocumentdb.document_client.DocumentClient.ReplaceUserDefinedFunction
  - pydocumentdb.document_client.DocumentClient.Session
  - pydocumentdb.document_client.DocumentClient.UpdateMedia
  - pydocumentdb.document_client.DocumentClient.Upsert
  - pydocumentdb.document_client.DocumentClient.UpsertAttachment
  - pydocumentdb.document_client.DocumentClient.UpsertAttachmentAndUploadMedia
  - pydocumentdb.document_client.DocumentClient.UpsertDocument
  - pydocumentdb.document_client.DocumentClient.UpsertPermission
  - pydocumentdb.document_client.DocumentClient.UpsertStoredProcedure
  - pydocumentdb.document_client.DocumentClient.UpsertTrigger
  - pydocumentdb.document_client.DocumentClient.UpsertUser
  - pydocumentdb.document_client.DocumentClient.UpsertUserDefinedFunction
  - pydocumentdb.document_client.DocumentClient.WriteEndpoint
  - pydocumentdb.document_client.DocumentClient.PartitionResolverErrorMessage
  class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: pydocumentdb.document_client
  name: DocumentClient
  source:
    id: DocumentClient
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 40
  summary: 'Represents a document client.


    Provides a client-side logical representation of the Azure Cosmos DB

    service. This client is used to configure and execute requests against the

    service.


    The service client encapsulates the endpoint and credentials used to access

    the Azure Cosmos DB service.























































































    '
  syntax:
    content: DocumentClient(url_connection, auth, connection_policy=None, consistency_level='Session')
  type: class
  uid: pydocumentdb.document_client.DocumentClient
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.Create
  langs:
  - python
  module: pydocumentdb.document_client
  name: Create
  source:
    id: Create
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2332
  summary: 'Creates a Azure Cosmos DB resource and returns it.

    '
  syntax:
    content: Create(body, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: body
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Azure Cosmos DB resource.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.Create
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateAttachment
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateAttachment
  source:
    id: CreateAttachment
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1606
  summary: 'Creates an attachment in a document.

    '
  syntax:
    content: CreateAttachment(document_link, attachment, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: 'The Azure Cosmos DB attachment to create.

        '
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateAttachment
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateAttachmentAndUploadMedia
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateAttachmentAndUploadMedia
  source:
    id: CreateAttachmentAndUploadMedia
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1666
  summary: 'Creates an attachment and upload media.

    '
  syntax:
    content: CreateAttachmentAndUploadMedia(document_link, readable_stream, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateAttachmentAndUploadMedia
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateCollection
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateCollection
  source:
    id: CreateCollection
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 332
  summary: 'Creates a collection in a database.

    '
  syntax:
    content: CreateCollection(database_link, collection, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - description: 'The Azure Cosmos DB collection to create.

        '
      id: collection
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The Collection that was created.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateCollection
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateDatabase
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateDatabase
  source:
    id: CreateDatabase
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 203
  summary: 'Creates a database.

    '
  syntax:
    content: CreateDatabase(database, options=None)
    parameters:
    - description: 'The Azure Cosmos DB database to create.

        '
      id: database
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The Database that was created.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateDatabase
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateDocument
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateDocument
  source:
    id: CreateDocument
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 911
  summary: 'Creates a document in a collection.

    '
  syntax:
    content: CreateDocument(database_or_collection_link, document, options=None)
    parameters:
    - description: 'The link to the database when using partitioning, otherwise link
        to the document collection.

        '
      id: database_or_collection_link
      type:
      - str
    - description: 'The Azure Cosmos DB document to create.

        '
      id: document
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    - description: 'Disables the automatic id generation. If id is missing in the
        body and this

        option is true, an error will be returned.

        '
      id: options['disableAutomaticIdGeneration']
      type:
      - bool
    return:
      description: 'The created Document.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateDocument
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreatePermission
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreatePermission
  source:
    id: CreatePermission
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 566
  summary: 'Creates a permission for a user.

    '
  syntax:
    content: CreatePermission(user_link, permission, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - description: 'The Azure Cosmos DB user permission to create.

        '
      id: permission
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Permission.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreatePermission
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateStoredProcedure
  source:
    id: CreateStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1362
  summary: 'Creates a stored procedure in a collection.

    '
  syntax:
    content: CreateStoredProcedure(collection_link, sproc, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Stored Procedure.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateTrigger
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateTrigger
  source:
    id: CreateTrigger
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1092
  summary: 'Creates a trigger in a collection.

    '
  syntax:
    content: CreateTrigger(collection_link, trigger, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created Trigger.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateTrigger
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateUser
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateUser
  source:
    id: CreateUser
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 413
  summary: 'Creates a user.

    '
  syntax:
    content: CreateUser(database_link, user, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - description: 'The Azure Cosmos DB user to create.

        '
      id: user
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created User.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateUser
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.CreateUserDefinedFunction
  langs:
  - python
  module: pydocumentdb.document_client
  name: CreateUserDefinedFunction
  source:
    id: CreateUserDefinedFunction
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1227
  summary: 'Creates a user defined function in a collection.

    '
  syntax:
    content: CreateUserDefinedFunction(collection_link, udf, options=None)
    parameters:
    - description: 'The link to the collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The created UDF.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.CreateUserDefinedFunction
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteAttachment
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteAttachment
  source:
    id: DeleteAttachment
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1936
  summary: 'Deletes an attachment.

    '
  syntax:
    content: DeleteAttachment(attachment_link, options=None)
    parameters:
    - description: 'The link to the attachment.

        '
      id: attachment_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteAttachment
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteCollection
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteCollection
  source:
    id: DeleteCollection
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1519
  summary: 'Deletes a collection.

    '
  syntax:
    content: DeleteCollection(collection_link, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Collection.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteCollection
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteConflict
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteConflict
  source:
    id: DeleteConflict
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2185
  summary: 'Deletes a conflict.

    '
  syntax:
    content: DeleteConflict(conflict_link, options=None)
    parameters:
    - description: 'The link to the conflict.

        '
      id: conflict_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Conflict.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteConflict
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteDatabase
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteDatabase
  source:
    id: DeleteDatabase
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 541
  summary: 'Deletes a database.

    '
  syntax:
    content: DeleteDatabase(database_link, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Database.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteDatabase
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteDocument
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteDocument
  source:
    id: DeleteDocument
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1581
  summary: 'Deletes a document.

    '
  syntax:
    content: DeleteDocument(document_link, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Document.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteDocument
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeletePermission
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeletePermission
  source:
    id: DeletePermission
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 782
  summary: 'Deletes a permission.

    '
  syntax:
    content: DeletePermission(permission_link, options=None)
    parameters:
    - description: 'The link to the permission.

        '
      id: permission_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Permission.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeletePermission
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteResource
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteResource
  source:
    id: DeleteResource
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2485
  summary: 'Deletes a Azure Cosmos DB resource and returns it.

    '
  syntax:
    content: DeleteResource(path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Azure Cosmos DB resource.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteResource
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteStoredProcedure
  source:
    id: DeleteStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2160
  summary: 'Deletes a stored procedure.

    '
  syntax:
    content: DeleteStoredProcedure(sproc_link, options=None)
    parameters:
    - description: 'The link to the stored procedure.

        '
      id: sproc_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Stored Procedure.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteTrigger
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteTrigger
  source:
    id: DeleteTrigger
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1995
  summary: 'Deletes a trigger.

    '
  syntax:
    content: DeleteTrigger(trigger_link, options=None)
    parameters:
    - description: 'The link to the trigger.

        '
      id: trigger_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted Trigger.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteTrigger
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteUser
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteUser
  source:
    id: DeleteUser
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 729
  summary: 'Deletes a user.

    '
  syntax:
    content: DeleteUser(user_link, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted user.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteUser
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.DeleteUserDefinedFunction
  langs:
  - python
  module: pydocumentdb.document_client
  name: DeleteUserDefinedFunction
  source:
    id: DeleteUserDefinedFunction
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2054
  summary: 'Deletes a user defined function.

    '
  syntax:
    content: DeleteUserDefinedFunction(udf_link, options=None)
    parameters:
    - description: 'The link to the user defined function.

        '
      id: udf_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The deleted UDF.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.DeleteUserDefinedFunction
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ExecuteStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: ExecuteStoredProcedure
  source:
    id: ExecuteStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2079
  summary: 'Executes a store procedure.

    '
  syntax:
    content: ExecuteStoredProcedure(sproc_link, params, options=None)
    parameters:
    - description: 'The link to the stored procedure.

        '
      id: sproc_link
      type:
      - str
    - description: 'List or None

        '
      id: params
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The Stored Procedure response.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ExecuteStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.GetDatabaseAccount
  langs:
  - python
  module: pydocumentdb.document_client
  name: GetDatabaseAccount
  source:
    id: GetDatabaseAccount
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2287
  summary: 'Gets database account info.

    '
  syntax:
    content: GetDatabaseAccount(url_connection=None)
    parameters:
    - defaultValue: None
      id: url_connection
    return:
      description: 'The Database Account.

        '
      type:
      - documents.DatabaseAccount
  type: method
  uid: pydocumentdb.document_client.DocumentClient.GetDatabaseAccount
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.GetPartitionResolver
  langs:
  - python
  module: pydocumentdb.document_client
  name: GetPartitionResolver
  source:
    id: GetPartitionResolver
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 186
  summary: 'Gets the partition resolver associated with the database link

    '
  syntax:
    content: GetPartitionResolver(database_link)
    parameters:
    - description: 'Database self link or ID based link.

        '
      id: database_link
      type:
      - str
    return:
      description: 'An instance of PartitionResolver.

        '
      type:
      - object
  type: method
  uid: pydocumentdb.document_client.DocumentClient.GetPartitionResolver
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryAttachments
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryAttachments
  source:
    id: QueryAttachments
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1787
  summary: 'Queries attachments in a document.

    '
  syntax:
    content: QueryAttachments(document_link, query, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Attachments.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryAttachments
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryCollections
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryCollections
  source:
    id: QueryCollections
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 303
  summary: 'Queries collections in a database.

    '
  syntax:
    content: QueryCollections(database_link, query, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Collections.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryCollections
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryConflicts
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryConflicts
  source:
    id: QueryConflicts
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1465
  summary: 'Queries conflicts in a collection.

    '
  syntax:
    content: QueryConflicts(collection_link, query, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Conflicts.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryConflicts
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryDatabases
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryDatabases
  source:
    id: QueryDatabases
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 260
  summary: 'Queries databases.

    '
  syntax:
    content: QueryDatabases(query, options=None)
    parameters:
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Databases.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryDatabases
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryDocuments
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryDocuments
  source:
    id: QueryDocuments
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 825
  summary: 'Queries documents in a collection.

    '
  syntax:
    content: QueryDocuments(database_or_collection_link, query, options=None, partition_key=None)
    parameters:
    - description: 'The link to the database when using partitioning, otherwise link
        to the document collection.

        '
      id: database_or_collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    - defaultValue: None
      description: 'Partition key for the query(default value None)

        '
      id: partition_key
      type:
      - str
    return:
      description: 'Query Iterable of Documents.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryDocuments
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryFeed
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryFeed
  source:
    id: QueryFeed
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2622
  summary: 'Query Feed for Document Collection resource.

    '
  syntax:
    content: QueryFeed(path, collection_id, query, options, partition_key_range_id=None)
    parameters:
    - description: 'Path to the document collection.

        '
      id: path
      type:
      - str
    - description: 'Id of the document collection.

        '
      id: collection_id
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    - defaultValue: None
      description: 'Partition key range id.

        '
      id: partition_key_range_id
      type:
      - str
    return:
      type:
      - tuple
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryFeed
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryOffers
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryOffers
  source:
    id: QueryOffers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2261
  summary: 'Query for all offers.

    '
  syntax:
    content: QueryOffers(query, options=None)
    parameters:
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Offers.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryOffers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryPermissions
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryPermissions
  source:
    id: QueryPermissions
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 671
  summary: 'Queries permissions for a user.

    '
  syntax:
    content: QueryPermissions(user_link, query, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Permissions.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryPermissions
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryStoredProcedures
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryStoredProcedures
  source:
    id: QueryStoredProcedures
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1332
  summary: 'Queries stored procedures in a collection.

    '
  syntax:
    content: QueryStoredProcedures(collection_link, query, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Stored Procedures.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryStoredProcedures
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryTriggers
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryTriggers
  source:
    id: QueryTriggers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1062
  summary: 'Queries triggers in a collection.

    '
  syntax:
    content: QueryTriggers(collection_link, query, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Triggers.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryTriggers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryUserDefinedFunctions
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryUserDefinedFunctions
  source:
    id: QueryUserDefinedFunctions
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1197
  summary: 'Queries user defined functions in a collection.

    '
  syntax:
    content: QueryUserDefinedFunctions(collection_link, query, options=None)
    parameters:
    - description: 'The link to the collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of UDFs.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryUserDefinedFunctions
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.QueryUsers
  langs:
  - python
  module: pydocumentdb.document_client
  name: QueryUsers
  source:
    id: QueryUsers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 511
  summary: 'Queries users in a database.

    '
  syntax:
    content: QueryUsers(database_link, query, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - description: ''
      id: or dict) query
      type:
      - (str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Users.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.QueryUsers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.Read
  langs:
  - python
  module: pydocumentdb.document_client
  name: Read
  source:
    id: Read
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2451
  summary: 'Reads a Azure Cosmos DB resource and returns it.

    '
  syntax:
    content: Read(path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Azure Cosmos DB resource.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.Read
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadAttachment
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadAttachment
  source:
    id: ReadAttachment
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1743
  summary: 'Reads an attachment.

    '
  syntax:
    content: ReadAttachment(attachment_link, options=None)
    parameters:
    - description: 'The link to the attachment.

        '
      id: attachment_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadAttachment
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadAttachments
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadAttachments
  source:
    id: ReadAttachments
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1768
  summary: 'Reads all attachments in a document.

    '
  syntax:
    content: ReadAttachments(document_link, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Attachments.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadAttachments
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadCollection
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadCollection
  source:
    id: ReadCollection
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 388
  summary: 'Reads a collection.

    '
  syntax:
    content: ReadCollection(collection_link, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read Collection.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadCollection
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadCollections
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadCollections
  source:
    id: ReadCollections
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 285
  summary: 'Reads all collections in a database.

    '
  syntax:
    content: ReadCollections(database_link, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Collections.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadCollections
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadConflict
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadConflict
  source:
    id: ReadConflict
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1495
  summary: 'Reads a conflict.

    '
  syntax:
    content: ReadConflict(conflict_link, options=None)
    parameters:
    - description: 'The link to the conflict.

        '
      id: conflict_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: options
      type:
      - dict
    return:
      description: 'The read Conflict.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadConflict
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadConflicts
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadConflicts
  source:
    id: ReadConflicts
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1447
  summary: 'Reads conflicts.

    '
  syntax:
    content: ReadConflicts(collection_link, feed_options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: feed_options
      type:
      - dict
    return:
      description: 'Query Iterable of Conflicts.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadConflicts
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadDatabase
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadDatabase
  source:
    id: ReadDatabase
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 223
  summary: 'Reads a database.

    '
  syntax:
    content: ReadDatabase(database_link, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The Database that was read.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadDatabase
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadDatabases
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadDatabases
  source:
    id: ReadDatabases
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 243
  summary: 'Reads all databases.

    '
  syntax:
    content: ReadDatabases(options=None)
    parameters:
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Databases.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadDatabases
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadDocument
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadDocument
  source:
    id: ReadDocument
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1018
  summary: 'Reads a document.

    '
  syntax:
    content: ReadDocument(document_link, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read Document.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadDocument
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadDocuments
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadDocuments
  source:
    id: ReadDocuments
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 807
  summary: 'Reads all documents in a collection.

    '
  syntax:
    content: ReadDocuments(collection_link, feed_options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: ''
      id: feed_options
      type:
      - dict
    return:
      description: 'Query Iterable of Documents.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadDocuments
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadEndpoint
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadEndpoint
  source:
    id: ReadEndpoint
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: null
  summary: 'Gets the curent read endpoint for a geo-replicated database account.

    '
  syntax: {}
  type: attribute
  uid: pydocumentdb.document_client.DocumentClient.ReadEndpoint
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadMedia
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadMedia
  source:
    id: ReadMedia
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1819
  summary: 'Reads a media.


    When self.connection_policy.MediaReadMode ==

    documents.MediaReadMode.Streamed, returns a file-like stream object;

    otherwise, returns a str.

    '
  syntax:
    content: ReadMedia(media_link)
    parameters:
    - description: 'The link to the media.

        '
      id: media_link
      type:
      - str
    return:
      description: 'The read Media.

        '
      type:
      - str
      - file-like stream object
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadMedia
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadOffer
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadOffer
  source:
    id: ReadOffer
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2228
  summary: 'Reads an offer.

    '
  syntax:
    content: ReadOffer(offer_link)
    parameters:
    - description: 'The link to the offer.

        '
      id: offer_link
      type:
      - str
    return:
      description: 'The read Offer.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadOffer
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadOffers
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadOffers
  source:
    id: ReadOffers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2244
  summary: 'Reads all offers.

    '
  syntax:
    content: ReadOffers(options=None)
    parameters:
    - defaultValue: None
      description: 'The request options for the request

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Offers.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadOffers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadPermission
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadPermission
  source:
    id: ReadPermission
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 627
  summary: 'Reads a permission.

    '
  syntax:
    content: ReadPermission(permission_link, options=None)
    parameters:
    - description: 'The link to the permission.

        '
      id: permission_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read permission.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadPermission
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadPermissions
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadPermissions
  source:
    id: ReadPermissions
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 652
  summary: 'Reads all permissions for a user.

    '
  syntax:
    content: ReadPermissions(user_link, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Permissions.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadPermissions
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadStoredProcedure
  source:
    id: ReadStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1426
  summary: 'Reads a stored procedure.

    '
  syntax:
    content: ReadStoredProcedure(sproc_link, options=None)
    parameters:
    - description: 'The link to the stored procedure.

        '
      id: sproc_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read Stored Procedure.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadStoredProcedures
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadStoredProcedures
  source:
    id: ReadStoredProcedures
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1313
  summary: 'Reads all store procedures in a collection.

    '
  syntax:
    content: ReadStoredProcedures(collection_link, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Stored Procedures.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadStoredProcedures
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadTrigger
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadTrigger
  source:
    id: ReadTrigger
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1157
  summary: 'Reads a trigger.

    '
  syntax:
    content: ReadTrigger(trigger_link, options=None)
    parameters:
    - description: 'The link to the trigger.

        '
      id: trigger_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read Trigger.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadTrigger
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadTriggers
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadTriggers
  source:
    id: ReadTriggers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1043
  summary: 'Reads all triggers in a collection.

    '
  syntax:
    content: ReadTriggers(collection_link, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of Triggers.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadTriggers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadUser
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadUser
  source:
    id: ReadUser
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 472
  summary: 'Reads a user.

    '
  syntax:
    content: ReadUser(user_link, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read User.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadUser
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunction
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadUserDefinedFunction
  source:
    id: ReadUserDefinedFunction
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1292
  summary: 'Reads a user defined function.

    '
  syntax:
    content: ReadUserDefinedFunction(udf_link, options=None)
    parameters:
    - description: 'The link to the user defined function.

        '
      id: udf_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The read UDF.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunction
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunctions
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadUserDefinedFunctions
  source:
    id: ReadUserDefinedFunctions
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1178
  summary: 'Reads all user defined functions in a collection.

    '
  syntax:
    content: ReadUserDefinedFunctions(collection_link, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'Query Iterable of UDFs.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunctions
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReadUsers
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReadUsers
  source:
    id: ReadUsers
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 493
  summary: 'Reads all users in a database.

    '
  syntax:
    content: ReadUsers(database_link, options=None)
    parameters:
    - id: database_link
    - defaultValue: None
      id: options
    return:
      description: 'Query iterable of Users.

        '
      type:
      - query_iterable.QueryIterable
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReadUsers
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.RegisterPartitionResolver
  langs:
  - python
  module: pydocumentdb.document_client
  name: RegisterPartitionResolver
  source:
    id: RegisterPartitionResolver
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 168
  summary: 'Registers the partition resolver associated with the database link

    '
  syntax:
    content: RegisterPartitionResolver(database_link, partition_resolver)
    parameters:
    - description: 'Database Self Link or ID based link.

        '
      id: database_link
      type:
      - str
    - description: 'An instance of PartitionResolver.

        '
      id: partition_resolver
      type:
      - object
  type: method
  uid: pydocumentdb.document_client.DocumentClient.RegisterPartitionResolver
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.Replace
  langs:
  - python
  module: pydocumentdb.document_client
  name: Replace
  source:
    id: Replace
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2412
  summary: 'Replaces a Azure Cosmos DB resource and returns it.

    '
  syntax:
    content: Replace(resource, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: resource
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new Azure Cosmos DB resource.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.Replace
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceAttachment
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceAttachment
  source:
    id: ReplaceAttachment
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1908
  summary: 'Replaces an attachment and returns it.

    '
  syntax:
    content: ReplaceAttachment(attachment_link, attachment, options=None)
    parameters:
    - description: 'The link to the attachment.

        '
      id: attachment_link
      type:
      - str
    - description: ''
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The replaced Attachment

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceAttachment
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceCollection
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceCollection
  source:
    id: ReplaceCollection
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 359
  summary: 'Replaces a collection and return it.

    '
  syntax:
    content: ReplaceCollection(collection_link, collection, options=None)
    parameters:
    - description: 'The link to the collection entity.

        '
      id: collection_link
      type:
      - str
    - description: 'The collection to be used.

        '
      id: collection
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new Collection.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceCollection
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceDocument
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceDocument
  source:
    id: ReplaceDocument
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1544
  summary: 'Replaces a document and returns it.

    '
  syntax:
    content: ReplaceDocument(document_link, new_document, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: ''
      id: new_document
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new Document.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceDocument
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceOffer
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceOffer
  source:
    id: ReplaceOffer
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2210
  summary: 'Replaces an offer and returns it.

    '
  syntax:
    content: ReplaceOffer(offer_link, offer)
    parameters:
    - description: 'The link to the offer.

        '
      id: offer_link
      type:
      - str
    - description: ''
      id: offer
      type:
      - dict
    return:
      description: 'The replaced Offer.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceOffer
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplacePermission
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplacePermission
  source:
    id: ReplacePermission
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 754
  summary: 'Replaces a permission and return it.

    '
  syntax:
    content: ReplacePermission(permission_link, permission, options=None)
    parameters:
    - description: 'The link to the permission.

        '
      id: permission_link
      type:
      - str
    - description: ''
      id: permission
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new Permission.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplacePermission
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceStoredProcedure
  source:
    id: ReplaceStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2126
  summary: 'Replaces a stored procedure and returns it.

    '
  syntax:
    content: ReplaceStoredProcedure(sproc_link, sproc, options=None)
    parameters:
    - description: 'The link to the stored procedure.

        '
      id: sproc_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The replaced Stored Procedure.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceTrigger
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceTrigger
  source:
    id: ReplaceTrigger
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1961
  summary: 'Replaces a trigger and returns it.

    '
  syntax:
    content: ReplaceTrigger(trigger_link, trigger, options=None)
    parameters:
    - description: 'The link to the trigger.

        '
      id: trigger_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The replaced Trigger.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceTrigger
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceUser
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceUser
  source:
    id: ReplaceUser
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 701
  summary: 'Replaces a user and return it.

    '
  syntax:
    content: ReplaceUser(user_link, user, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - description: ''
      id: user
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new User.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceUser
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.ReplaceUserDefinedFunction
  langs:
  - python
  module: pydocumentdb.document_client
  name: ReplaceUserDefinedFunction
  source:
    id: ReplaceUserDefinedFunction
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2020
  summary: 'Replaces a user defined function and returns it.

    '
  syntax:
    content: ReplaceUserDefinedFunction(udf_link, udf, options=None)
    parameters:
    - description: 'The link to the user defined function.

        '
      id: udf_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The new UDF.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.ReplaceUserDefinedFunction
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.Session
  langs:
  - python
  module: pydocumentdb.document_client
  name: Session
  source:
    id: Session
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: null
  summary: 'Gets the session object from the client

    '
  syntax: {}
  type: attribute
  uid: pydocumentdb.document_client.DocumentClient.Session
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpdateMedia
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpdateMedia
  source:
    id: UpdateMedia
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1855
  summary: 'Updates a media and returns it.

    '
  syntax:
    content: UpdateMedia(media_link, readable_stream, options=None)
    parameters:
    - description: 'The link to the media.

        '
      id: media_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The updated Media.

        '
      type:
      - str
      - file-like stream object
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpdateMedia
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.Upsert
  langs:
  - python
  module: pydocumentdb.document_client
  name: Upsert
  source:
    id: Upsert
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 2371
  summary: 'Upserts a Azure Cosmos DB resource and returns it.

    '
  syntax:
    content: Upsert(body, path, type, id, initial_headers, options=None)
    parameters:
    - description: ''
      id: body
      type:
      - dict
    - description: ''
      id: path
      type:
      - str
    - description: ''
      id: type
      type:
      - str
    - description: ''
      id: id
      type:
      - str
    - description: ''
      id: initial_headers
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Azure Cosmos DB resource.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.Upsert
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertAttachment
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertAttachment
  source:
    id: UpsertAttachment
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1633
  summary: 'Upserts an attachment in a document.

    '
  syntax:
    content: UpsertAttachment(document_link, attachment, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: 'The Azure Cosmos DB attachment to upsert.

        '
      id: attachment
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertAttachment
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertAttachmentAndUploadMedia
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertAttachmentAndUploadMedia
  source:
    id: UpsertAttachmentAndUploadMedia
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1695
  summary: 'Upserts an attachment and upload media.

    '
  syntax:
    content: UpsertAttachmentAndUploadMedia(document_link, readable_stream, options=None)
    parameters:
    - description: 'The link to the document.

        '
      id: document_link
      type:
      - str
    - description: ''
      id: stream object) readable_stream
      type:
      - (file-like
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Attachment.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertAttachmentAndUploadMedia
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertDocument
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertDocument
  source:
    id: UpsertDocument
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 949
  summary: 'Upserts a document in a collection.

    '
  syntax:
    content: UpsertDocument(database_or_collection_link, document, options=None)
    parameters:
    - description: 'The link to the database when using partitioning, otherwise link
        to the document collection.

        '
      id: database_or_collection_link
      type:
      - str
    - description: 'The Azure Cosmos DB document to upsert.

        '
      id: document
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    - description: 'Disables the automatic id generation. If id is missing in the
        body and this

        option is true, an error will be returned.

        '
      id: options['disableAutomaticIdGeneration']
      type:
      - bool
    return:
      description: 'The upserted Document.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertDocument
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertPermission
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertPermission
  source:
    id: UpsertPermission
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 593
  summary: 'Upserts a permission for a user.

    '
  syntax:
    content: UpsertPermission(user_link, permission, options=None)
    parameters:
    - description: 'The link to the user entity.

        '
      id: user_link
      type:
      - str
    - description: 'The Azure Cosmos DB user permission to upsert.

        '
      id: permission
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted permission.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertPermission
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertStoredProcedure
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertStoredProcedure
  source:
    id: UpsertStoredProcedure
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1388
  summary: 'Upserts a stored procedure in a collection.

    '
  syntax:
    content: UpsertStoredProcedure(collection_link, sproc, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: sproc
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Stored Procedure.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertStoredProcedure
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertTrigger
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertTrigger
  source:
    id: UpsertTrigger
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1118
  summary: 'Upserts a trigger in a collection.

    '
  syntax:
    content: UpsertTrigger(collection_link, trigger, options=None)
    parameters:
    - description: 'The link to the document collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: trigger
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted Trigger.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertTrigger
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertUser
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertUser
  source:
    id: UpsertUser
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 440
  summary: 'Upserts a user.

    '
  syntax:
    content: UpsertUser(database_link, user, options=None)
    parameters:
    - description: 'The link to the database.

        '
      id: database_link
      type:
      - str
    - description: 'The Azure Cosmos DB user to upsert.

        '
      id: user
      type:
      - dict
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted User.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertUser
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.UpsertUserDefinedFunction
  langs:
  - python
  module: pydocumentdb.document_client
  name: UpsertUserDefinedFunction
  source:
    id: UpsertUserDefinedFunction
    path: pydocumentdb\document_client.py
    remote:
      branch: master
      path: pydocumentdb\document_client.py
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: 1253
  summary: 'Upserts a user defined function in a collection.

    '
  syntax:
    content: UpsertUserDefinedFunction(collection_link, udf, options=None)
    parameters:
    - description: 'The link to the collection.

        '
      id: collection_link
      type:
      - str
    - description: ''
      id: udf
      type:
      - str
    - defaultValue: None
      description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    return:
      description: 'The upserted UDF.

        '
      type:
      - dict
  type: method
  uid: pydocumentdb.document_client.DocumentClient.UpsertUserDefinedFunction
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.WriteEndpoint
  langs:
  - python
  module: pydocumentdb.document_client
  name: WriteEndpoint
  source:
    id: WriteEndpoint
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Azure/azure-documentdb-python
    startLine: null
  summary: 'Gets the curent write endpoint for a geo-replicated database account.

    '
  syntax: {}
  type: attribute
  uid: pydocumentdb.document_client.DocumentClient.WriteEndpoint
- class: pydocumentdb.document_client.DocumentClient
  fullName: pydocumentdb.document_client.DocumentClient.PartitionResolverErrorMessage
  langs:
  - python
  module: pydocumentdb.document_client
  name: PartitionResolverErrorMessage
  syntax:
    content: PartitionResolverErrorMessage = "Couldn't find any partition resolvers
      for the database link provided. Ensure that the link you used when registering
      the partition resolvers matches the link provided or you need to register both
      types of database link(self link as well as ID based link)."
  type: attribute
  uid: pydocumentdb.document_client.DocumentClient.PartitionResolverErrorMessage
references:
- fullName: pydocumentdb.document_client.DocumentClient.Create
  isExternal: false
  name: Create
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.Create
- fullName: pydocumentdb.document_client.DocumentClient.CreateAttachment
  isExternal: false
  name: CreateAttachment
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateAttachment
- fullName: pydocumentdb.document_client.DocumentClient.CreateAttachmentAndUploadMedia
  isExternal: false
  name: CreateAttachmentAndUploadMedia
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateAttachmentAndUploadMedia
- fullName: pydocumentdb.document_client.DocumentClient.CreateCollection
  isExternal: false
  name: CreateCollection
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateCollection
- fullName: pydocumentdb.document_client.DocumentClient.CreateDatabase
  isExternal: false
  name: CreateDatabase
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateDatabase
- fullName: pydocumentdb.document_client.DocumentClient.CreateDocument
  isExternal: false
  name: CreateDocument
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateDocument
- fullName: pydocumentdb.document_client.DocumentClient.CreatePermission
  isExternal: false
  name: CreatePermission
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreatePermission
- fullName: pydocumentdb.document_client.DocumentClient.CreateStoredProcedure
  isExternal: false
  name: CreateStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.CreateTrigger
  isExternal: false
  name: CreateTrigger
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateTrigger
- fullName: pydocumentdb.document_client.DocumentClient.CreateUser
  isExternal: false
  name: CreateUser
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateUser
- fullName: pydocumentdb.document_client.DocumentClient.CreateUserDefinedFunction
  isExternal: false
  name: CreateUserDefinedFunction
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.CreateUserDefinedFunction
- fullName: pydocumentdb.document_client.DocumentClient.DeleteAttachment
  isExternal: false
  name: DeleteAttachment
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteAttachment
- fullName: pydocumentdb.document_client.DocumentClient.DeleteCollection
  isExternal: false
  name: DeleteCollection
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteCollection
- fullName: pydocumentdb.document_client.DocumentClient.DeleteConflict
  isExternal: false
  name: DeleteConflict
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteConflict
- fullName: pydocumentdb.document_client.DocumentClient.DeleteDatabase
  isExternal: false
  name: DeleteDatabase
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteDatabase
- fullName: pydocumentdb.document_client.DocumentClient.DeleteDocument
  isExternal: false
  name: DeleteDocument
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteDocument
- fullName: pydocumentdb.document_client.DocumentClient.DeletePermission
  isExternal: false
  name: DeletePermission
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeletePermission
- fullName: pydocumentdb.document_client.DocumentClient.DeleteResource
  isExternal: false
  name: DeleteResource
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteResource
- fullName: pydocumentdb.document_client.DocumentClient.DeleteStoredProcedure
  isExternal: false
  name: DeleteStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.DeleteTrigger
  isExternal: false
  name: DeleteTrigger
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteTrigger
- fullName: pydocumentdb.document_client.DocumentClient.DeleteUser
  isExternal: false
  name: DeleteUser
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteUser
- fullName: pydocumentdb.document_client.DocumentClient.DeleteUserDefinedFunction
  isExternal: false
  name: DeleteUserDefinedFunction
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.DeleteUserDefinedFunction
- fullName: pydocumentdb.document_client.DocumentClient.ExecuteStoredProcedure
  isExternal: false
  name: ExecuteStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ExecuteStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.GetDatabaseAccount
  isExternal: false
  name: GetDatabaseAccount
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.GetDatabaseAccount
- fullName: pydocumentdb.document_client.DocumentClient.GetPartitionResolver
  isExternal: false
  name: GetPartitionResolver
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.GetPartitionResolver
- fullName: pydocumentdb.document_client.DocumentClient.QueryAttachments
  isExternal: false
  name: QueryAttachments
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryAttachments
- fullName: pydocumentdb.document_client.DocumentClient.QueryCollections
  isExternal: false
  name: QueryCollections
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryCollections
- fullName: pydocumentdb.document_client.DocumentClient.QueryConflicts
  isExternal: false
  name: QueryConflicts
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryConflicts
- fullName: pydocumentdb.document_client.DocumentClient.QueryDatabases
  isExternal: false
  name: QueryDatabases
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryDatabases
- fullName: pydocumentdb.document_client.DocumentClient.QueryDocuments
  isExternal: false
  name: QueryDocuments
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryDocuments
- fullName: pydocumentdb.document_client.DocumentClient.QueryFeed
  isExternal: false
  name: QueryFeed
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryFeed
- fullName: pydocumentdb.document_client.DocumentClient.QueryOffers
  isExternal: false
  name: QueryOffers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryOffers
- fullName: pydocumentdb.document_client.DocumentClient.QueryPermissions
  isExternal: false
  name: QueryPermissions
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryPermissions
- fullName: pydocumentdb.document_client.DocumentClient.QueryStoredProcedures
  isExternal: false
  name: QueryStoredProcedures
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryStoredProcedures
- fullName: pydocumentdb.document_client.DocumentClient.QueryTriggers
  isExternal: false
  name: QueryTriggers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryTriggers
- fullName: pydocumentdb.document_client.DocumentClient.QueryUserDefinedFunctions
  isExternal: false
  name: QueryUserDefinedFunctions
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryUserDefinedFunctions
- fullName: pydocumentdb.document_client.DocumentClient.QueryUsers
  isExternal: false
  name: QueryUsers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.QueryUsers
- fullName: pydocumentdb.document_client.DocumentClient.Read
  isExternal: false
  name: Read
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.Read
- fullName: pydocumentdb.document_client.DocumentClient.ReadAttachment
  isExternal: false
  name: ReadAttachment
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadAttachment
- fullName: pydocumentdb.document_client.DocumentClient.ReadAttachments
  isExternal: false
  name: ReadAttachments
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadAttachments
- fullName: pydocumentdb.document_client.DocumentClient.ReadCollection
  isExternal: false
  name: ReadCollection
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadCollection
- fullName: pydocumentdb.document_client.DocumentClient.ReadCollections
  isExternal: false
  name: ReadCollections
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadCollections
- fullName: pydocumentdb.document_client.DocumentClient.ReadConflict
  isExternal: false
  name: ReadConflict
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadConflict
- fullName: pydocumentdb.document_client.DocumentClient.ReadConflicts
  isExternal: false
  name: ReadConflicts
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadConflicts
- fullName: pydocumentdb.document_client.DocumentClient.ReadDatabase
  isExternal: false
  name: ReadDatabase
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadDatabase
- fullName: pydocumentdb.document_client.DocumentClient.ReadDatabases
  isExternal: false
  name: ReadDatabases
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadDatabases
- fullName: pydocumentdb.document_client.DocumentClient.ReadDocument
  isExternal: false
  name: ReadDocument
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadDocument
- fullName: pydocumentdb.document_client.DocumentClient.ReadDocuments
  isExternal: false
  name: ReadDocuments
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadDocuments
- fullName: pydocumentdb.document_client.DocumentClient.ReadEndpoint
  isExternal: false
  name: ReadEndpoint
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadEndpoint
- fullName: pydocumentdb.document_client.DocumentClient.ReadMedia
  isExternal: false
  name: ReadMedia
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadMedia
- fullName: pydocumentdb.document_client.DocumentClient.ReadOffer
  isExternal: false
  name: ReadOffer
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadOffer
- fullName: pydocumentdb.document_client.DocumentClient.ReadOffers
  isExternal: false
  name: ReadOffers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadOffers
- fullName: pydocumentdb.document_client.DocumentClient.ReadPermission
  isExternal: false
  name: ReadPermission
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadPermission
- fullName: pydocumentdb.document_client.DocumentClient.ReadPermissions
  isExternal: false
  name: ReadPermissions
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadPermissions
- fullName: pydocumentdb.document_client.DocumentClient.ReadStoredProcedure
  isExternal: false
  name: ReadStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.ReadStoredProcedures
  isExternal: false
  name: ReadStoredProcedures
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadStoredProcedures
- fullName: pydocumentdb.document_client.DocumentClient.ReadTrigger
  isExternal: false
  name: ReadTrigger
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadTrigger
- fullName: pydocumentdb.document_client.DocumentClient.ReadTriggers
  isExternal: false
  name: ReadTriggers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadTriggers
- fullName: pydocumentdb.document_client.DocumentClient.ReadUser
  isExternal: false
  name: ReadUser
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadUser
- fullName: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunction
  isExternal: false
  name: ReadUserDefinedFunction
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunction
- fullName: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunctions
  isExternal: false
  name: ReadUserDefinedFunctions
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadUserDefinedFunctions
- fullName: pydocumentdb.document_client.DocumentClient.ReadUsers
  isExternal: false
  name: ReadUsers
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReadUsers
- fullName: pydocumentdb.document_client.DocumentClient.RegisterPartitionResolver
  isExternal: false
  name: RegisterPartitionResolver
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.RegisterPartitionResolver
- fullName: pydocumentdb.document_client.DocumentClient.Replace
  isExternal: false
  name: Replace
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.Replace
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceAttachment
  isExternal: false
  name: ReplaceAttachment
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceAttachment
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceCollection
  isExternal: false
  name: ReplaceCollection
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceCollection
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceDocument
  isExternal: false
  name: ReplaceDocument
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceDocument
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceOffer
  isExternal: false
  name: ReplaceOffer
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceOffer
- fullName: pydocumentdb.document_client.DocumentClient.ReplacePermission
  isExternal: false
  name: ReplacePermission
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplacePermission
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceStoredProcedure
  isExternal: false
  name: ReplaceStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceTrigger
  isExternal: false
  name: ReplaceTrigger
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceTrigger
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceUser
  isExternal: false
  name: ReplaceUser
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceUser
- fullName: pydocumentdb.document_client.DocumentClient.ReplaceUserDefinedFunction
  isExternal: false
  name: ReplaceUserDefinedFunction
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.ReplaceUserDefinedFunction
- fullName: pydocumentdb.document_client.DocumentClient.Session
  isExternal: false
  name: Session
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.Session
- fullName: pydocumentdb.document_client.DocumentClient.UpdateMedia
  isExternal: false
  name: UpdateMedia
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpdateMedia
- fullName: pydocumentdb.document_client.DocumentClient.Upsert
  isExternal: false
  name: Upsert
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.Upsert
- fullName: pydocumentdb.document_client.DocumentClient.UpsertAttachment
  isExternal: false
  name: UpsertAttachment
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertAttachment
- fullName: pydocumentdb.document_client.DocumentClient.UpsertAttachmentAndUploadMedia
  isExternal: false
  name: UpsertAttachmentAndUploadMedia
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertAttachmentAndUploadMedia
- fullName: pydocumentdb.document_client.DocumentClient.UpsertDocument
  isExternal: false
  name: UpsertDocument
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertDocument
- fullName: pydocumentdb.document_client.DocumentClient.UpsertPermission
  isExternal: false
  name: UpsertPermission
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertPermission
- fullName: pydocumentdb.document_client.DocumentClient.UpsertStoredProcedure
  isExternal: false
  name: UpsertStoredProcedure
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertStoredProcedure
- fullName: pydocumentdb.document_client.DocumentClient.UpsertTrigger
  isExternal: false
  name: UpsertTrigger
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertTrigger
- fullName: pydocumentdb.document_client.DocumentClient.UpsertUser
  isExternal: false
  name: UpsertUser
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertUser
- fullName: pydocumentdb.document_client.DocumentClient.UpsertUserDefinedFunction
  isExternal: false
  name: UpsertUserDefinedFunction
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.UpsertUserDefinedFunction
- fullName: pydocumentdb.document_client.DocumentClient.WriteEndpoint
  isExternal: false
  name: WriteEndpoint
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.WriteEndpoint
- fullName: pydocumentdb.document_client.DocumentClient.PartitionResolverErrorMessage
  isExternal: false
  name: PartitionResolverErrorMessage
  parent: pydocumentdb.document_client.DocumentClient
  uid: pydocumentdb.document_client.DocumentClient.PartitionResolverErrorMessage
- fullName: (file-like
  name: (file-like
  spec.python:
  - fullName: (
    name: (
  - fullName: file-like
    name: file-like
    uid: file-like
  uid: (file-like
- fullName: (str
  name: (str
  spec.python:
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  uid: (str
