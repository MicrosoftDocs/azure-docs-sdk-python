### YamlMime:PythonClass
uid: azure.eventhub.aio.PartitionContext
name: PartitionContext
fullName: azure.eventhub.aio.PartitionContext
module: azure.eventhub.aio
inheritances:
- builtins.object
summary: 'Contains partition related context information.


  A *PartitionContext* instance will be passed to the event, error and initialization
  callbacks defined

  when calling *EventHubConsumerClient.receive()*.

  Users can call *update_checkpoint()* of this class to persist checkpoint data.'
constructor:
  syntax: 'PartitionContext(fully_qualified_namespace: str, eventhub_name: str, consumer_group:
    str, partition_id: str, checkpoint_store: CheckpointStore | None = None)'
  parameters:
  - name: fully_qualified_namespace
    isRequired: true
  - name: eventhub_name
    isRequired: true
  - name: consumer_group
    isRequired: true
  - name: partition_id
    isRequired: true
  - name: checkpoint_store
    defaultValue: None
methods:
- uid: azure.eventhub.aio.PartitionContext.update_checkpoint
  name: update_checkpoint
  summary: Updates the receive checkpoint to the given events offset.
  signature: 'async update_checkpoint(event: EventData | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: event
    description: 'The EventData instance which contains the offset and

      sequence number information used for checkpoint.'
    defaultValue: None
    types:
    - <xref:azure.eventhub.EventData>
  return:
    types:
    - <xref:None>
attributes:
- uid: azure.eventhub.aio.PartitionContext.last_enqueued_event_properties
  name: last_enqueued_event_properties
  summary: "The latest enqueued event information.\n\nThis property will be updated\
    \ each time an event is received if the receiver is created\nwith *track_last_enqueued_event_properties*\
    \ set to *True*.\nThe properties dict includes following information of the last\
    \ enqueued event:\n\n   * *sequence_number* (int) \n\n   * *offset* (str) \n\n\
    \   * *enqueued_time* (UTC datetime.datetime) \n\n   * *retrieval_time* (UTC datetime.datetime)"
  return:
    types:
    - <xref:dict>
    - <xref:None>
