### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.EventData.body
  - azure.eventhub.EventData.body_as_json
  - azure.eventhub.EventData.body_as_str
  - azure.eventhub.EventData.enqueued_time
  - azure.eventhub.EventData.offset
  - azure.eventhub.EventData.partition_key
  - azure.eventhub.EventData.properties
  - azure.eventhub.EventData.sequence_number
  - azure.eventhub.EventData.system_properties
  class: azure.eventhub.EventData
  example:
  - "Create instances of EventData<!--[!code-python[Main](les\\sync_samples\\sample_code_eventhub.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\108\\\\azure-eventhub-5.1.0\\\\samples\\\\sync_samples\\\\sample_code_eventhub.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n       from azure.eventhub\
    \ import EventData\n\n       event_data = EventData(\"String data\")\n       event_data\
    \ = EventData(b\"Bytes data\")\n\n\n   ````\n"
  fullName: azure.eventhub.EventData
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventhub
  name: EventData
  summary: The EventData class is a container for event content.
  syntax:
    content: EventData(body=None)
    parameters:
    - description: The data to send in a single message. body can be type of str or
        bytes.
      id: body
      type:
      - str
      - bytes
  type: class
  uid: azure.eventhub.EventData
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.body
  langs:
  - python
  module: azure.eventhub
  name: body
  summary: The content of the event.
  syntax:
    return:
      type:
      - bytes
      - Generator[bytes]
  type: attribute
  uid: azure.eventhub.EventData.body
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.body_as_json
  langs:
  - python
  module: azure.eventhub
  name: body_as_json(encoding='UTF-8')
  namewithoutparameters: body_as_json
  summary: The content of the event loaded as a JSON object, if the data is compatible.
  syntax:
    content: body_as_json(encoding='UTF-8')
    parameters:
    - defaultValue: UTF-8
      description: 'The encoding to use for decoding event data.

        Default is ''UTF-8'''
      id: encoding
    return:
      type:
      - dict
  type: method
  uid: azure.eventhub.EventData.body_as_json
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.body_as_str
  langs:
  - python
  module: azure.eventhub
  name: body_as_str(encoding='UTF-8')
  namewithoutparameters: body_as_str
  summary: The content of the event as a string, if the data is of a compatible type.
  syntax:
    content: body_as_str(encoding='UTF-8')
    parameters:
    - defaultValue: UTF-8
      description: 'The encoding to use for decoding event data.

        Default is ''UTF-8'''
      id: encoding
    return:
      type:
      - str
  type: method
  uid: azure.eventhub.EventData.body_as_str
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.enqueued_time
  langs:
  - python
  module: azure.eventhub
  name: enqueued_time
  summary: The enqueued timestamp of the event.
  syntax:
    return:
      type:
      - datetime.datetime
  type: attribute
  uid: azure.eventhub.EventData.enqueued_time
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.offset
  langs:
  - python
  module: azure.eventhub
  name: offset
  summary: The offset of the event.
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.eventhub.EventData.offset
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.partition_key
  langs:
  - python
  module: azure.eventhub
  name: partition_key
  summary: The partition key of the event.
  syntax:
    return:
      type:
      - bytes
  type: attribute
  uid: azure.eventhub.EventData.partition_key
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.properties
  langs:
  - python
  module: azure.eventhub
  name: properties
  summary: Application-defined properties on the event.
  syntax:
    return:
      type:
      - dict
  type: attribute
  uid: azure.eventhub.EventData.properties
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.sequence_number
  langs:
  - python
  module: azure.eventhub
  name: sequence_number
  summary: The sequence number of the event.
  syntax:
    return:
      type:
      - int
      - long
  type: attribute
  uid: azure.eventhub.EventData.sequence_number
- class: azure.eventhub.EventData
  fullName: azure.eventhub.EventData.system_properties
  langs:
  - python
  module: azure.eventhub
  name: system_properties
  summary: "Metadata set by the Event Hubs Service associated with the event.\n\n\
    An EventData could have some or all of the following meta data depending on the\
    \ source\nof the event data.\n\n   * b\"x-opt-sequence-number\" (int) \n\n   *\
    \ b\"x-opt-offset\" (bytes) \n\n   * b\"x-opt-partition-key\" (bytes) \n\n   *\
    \ b\"x-opt-enqueued-time\" (int) \n\n   * b\"message-id\" (bytes) \n\n   * b\"\
    user-id\" (bytes) \n\n   * b\"to\" (bytes) \n\n   * b\"subject\" (bytes) \n\n\
    \   * b\"reply-to\" (bytes) \n\n   * b\"correlation-id\" (bytes) \n\n   * b\"\
    content-type\" (bytes) \n\n   * b\"content-encoding\" (bytes) \n\n   * b\"absolute-expiry-time\"\
    \ (int) \n\n   * b\"creation-time\" (int) \n\n   * b\"group-id\" (bytes) \n\n\
    \   * b\"group-sequence\" (bytes) \n\n   * b\"reply-to-group-id\" (bytes)"
  syntax:
    return:
      type:
      - dict
  type: attribute
  uid: azure.eventhub.EventData.system_properties
references:
- fullName: azure.eventhub.EventData.body
  isExternal: false
  name: body
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.body
- fullName: azure.eventhub.EventData.body_as_json
  isExternal: false
  name: body_as_json(encoding='UTF-8')
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.body_as_json
- fullName: azure.eventhub.EventData.body_as_str
  isExternal: false
  name: body_as_str(encoding='UTF-8')
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.body_as_str
- fullName: azure.eventhub.EventData.enqueued_time
  isExternal: false
  name: enqueued_time
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.enqueued_time
- fullName: azure.eventhub.EventData.offset
  isExternal: false
  name: offset
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.offset
- fullName: azure.eventhub.EventData.partition_key
  isExternal: false
  name: partition_key
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.partition_key
- fullName: azure.eventhub.EventData.properties
  isExternal: false
  name: properties
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.properties
- fullName: azure.eventhub.EventData.sequence_number
  isExternal: false
  name: sequence_number
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.sequence_number
- fullName: azure.eventhub.EventData.system_properties
  isExternal: false
  name: system_properties
  parent: azure.eventhub.EventData
  uid: azure.eventhub.EventData.system_properties
- fullName: Generator[bytes]
  name: Generator[bytes]
  spec.python:
  - fullName: Generator
    name: Generator
    uid: Generator
  - fullName: '['
    name: '['
  - fullName: bytes
    name: bytes
    uid: bytes
  - fullName: ']'
    name: ']'
  uid: Generator[bytes]
