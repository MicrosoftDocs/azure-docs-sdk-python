### YamlMime:PythonClass
uid: azure.eventhub.EventData
name: EventData
fullName: azure.eventhub.EventData
module: azure.eventhub
inheritances:
- builtins.object
summary: The EventData class is a container for event content.
constructor:
  syntax: 'EventData(body: str | bytes | List | None = None)'
  parameters:
  - name: body
    description: The data to send in a single message. body can be type of str or
      bytes.
    defaultValue: None
    types:
    - <xref:str>
    - <xref:bytes>
examples:
- "Create instances of EventData<!--[!code-python[Main](les\\sync_samples\\sample_code_eventhub.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  85\\\\azure-eventhub-5.11.3\\\\samples\\\\sync_samples\\\\sample_code_eventhub.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n       from azure.eventhub\
  \ import EventData\n\n       event_data = EventData(\"String data\")\n       event_data\
  \ = EventData(b\"Bytes data\")\n\n\n   ````\n"
methods:
- uid: azure.eventhub.EventData.body_as_json
  name: body_as_json
  summary: The content of the event loaded as a JSON object, if the data is compatible.
  signature: 'body_as_json(encoding: str = ''UTF-8'') -> Dict[str, Any]'
  parameters:
  - name: encoding
    description: 'The encoding to use for decoding event data.

      Default is ''UTF-8'''
    defaultValue: UTF-8
  return:
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.eventhub.EventData.body_as_str
  name: body_as_str
  summary: The content of the event as a string, if the data is of a compatible type.
  signature: 'body_as_str(encoding: str = ''UTF-8'') -> str'
  parameters:
  - name: encoding
    description: 'The encoding to use for decoding event data.

      Default is ''UTF-8'''
    defaultValue: UTF-8
  return:
    types:
    - <xref:str>
- uid: azure.eventhub.EventData.from_message_content
  name: from_message_content
  summary: Creates an EventData object given content type and a content value to be
    set as body.
  signature: 'from_message_content(content: bytes, content_type: str, **kwargs: Any)
    -> EventData'
  parameters:
  - name: content
    description: The content value to be set as the body of the message.
    isRequired: true
    types:
    - <xref:bytes>
  - name: content_type
    description: The content type to be set on the message.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.eventhub.EventData>
attributes:
- uid: azure.eventhub.EventData.body
  name: body
  summary: 'The body of the Message. The format may vary depending on the body type:

    For <xref:azure.eventhub.amqp.AmqpMessageBodyType.DATA>,

    the body could be bytes or Iterable[bytes].

    For <xref:azure.eventhub.amqp.AmqpMessageBodyType.SEQUENCE>,

    the body could be List or Iterable[List].

    For <xref:azure.eventhub.amqp.AmqpMessageBodyType.VALUE>,

    the body could be any type.'
  return:
    types:
    - <xref:int>
    - <xref:bool>
    - <xref:float>
    - <xref:bytes>
    - <xref:str>
    - <xref:dict>
    - <xref:list>
    - <xref:uuid.UUID>
- uid: azure.eventhub.EventData.body_type
  name: body_type
  summary: The body type of the underlying AMQP message.
  return:
    types:
    - <xref:azure.eventhub.amqp.AmqpMessageBodyType>
- uid: azure.eventhub.EventData.content_type
  name: content_type
  summary: 'The content type descriptor.

    Optionally describes the payload of the message, with a descriptor following the
    format of RFC2045, Section 5,

    for example "application/json".

    :rtype: str'
- uid: azure.eventhub.EventData.correlation_id
  name: correlation_id
  summary: 'The correlation identifier.

    Allows an application to specify a context for the message for the purposes of
    correlation, for example

    reflecting the MessageId of a message that is being replied to.

    :rtype: str'
- uid: azure.eventhub.EventData.enqueued_time
  name: enqueued_time
  summary: The enqueued timestamp of the event.
  return:
    types:
    - <xref:datetime.datetime>
- uid: azure.eventhub.EventData.message
  name: message
  summary: "Get the underlying uamqp.Message or LegacyMessage.\n   This is deprecated\
    \ and will be removed in a later release."
  return:
    types:
    - <xref:uamqp.Message>
    - <xref:LegacyMessage>
- uid: azure.eventhub.EventData.message_id
  name: message_id
  summary: 'The id to identify the message.

    The message identifier is an application-defined value that uniquely identifies
    the message and its payload.

    The identifier is a free-form string and can reflect a GUID or an identifier derived
    from the

    application context.  If enabled, the duplicate detection feature identifies and
    removes second and

    further submissions of messages with the same message id.

    :rtype: str'
- uid: azure.eventhub.EventData.offset
  name: offset
  summary: The offset of the event.
  return:
    types:
    - <xref:str>
- uid: azure.eventhub.EventData.partition_key
  name: partition_key
  summary: The partition key of the event.
  return:
    types:
    - <xref:bytes>
- uid: azure.eventhub.EventData.properties
  name: properties
  summary: Application-defined properties on the event.
  return:
    types:
    - <xref:dict>
- uid: azure.eventhub.EventData.raw_amqp_message
  name: raw_amqp_message
  summary: Advanced usage only. The internal AMQP message payload that is sent or
    received.
- uid: azure.eventhub.EventData.sequence_number
  name: sequence_number
  summary: The sequence number of the event.
  return:
    types:
    - <xref:int>
- uid: azure.eventhub.EventData.system_properties
  name: system_properties
  summary: "Metadata set by the Event Hubs Service associated with the event.\n\n\
    An EventData could have some or all of the following meta data depending on the\
    \ source\nof the event data.\n\n   * b\"x-opt-sequence-number\" (int) \n\n   *\
    \ b\"x-opt-offset\" (bytes) \n\n   * b\"x-opt-partition-key\" (bytes) \n\n   *\
    \ b\"x-opt-enqueued-time\" (int) \n\n   * b\"message-id\" (bytes) \n\n   * b\"\
    user-id\" (bytes) \n\n   * b\"to\" (bytes) \n\n   * b\"subject\" (bytes) \n\n\
    \   * b\"reply-to\" (bytes) \n\n   * b\"correlation-id\" (bytes) \n\n   * b\"\
    content-type\" (bytes) \n\n   * b\"content-encoding\" (bytes) \n\n   * b\"absolute-expiry-time\"\
    \ (int) \n\n   * b\"creation-time\" (int) \n\n   * b\"group-id\" (bytes) \n\n\
    \   * b\"group-sequence\" (bytes) \n\n   * b\"reply-to-group-id\" (bytes)"
  return:
    types:
    - <xref:dict>
