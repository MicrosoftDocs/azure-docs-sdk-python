### YamlMime:PythonClass
uid: azure.communication.callautomation.TeamsExtensionUserProperties
name: TeamsExtensionUserProperties
fullName: azure.communication.callautomation.TeamsExtensionUserProperties
module: azure.communication.callautomation
summary: Dictionary of properties for a TeamsExtensionUserIdentifier.
constructor:
  syntax: TeamsExtensionUserProperties()
methods:
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.cloud
  name: cloud
  summary: Cloud environment that this identifier belongs to.
  signature: 'cloud: CommunicationCloudEnvironment | str'
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.resource_id
  name: resource_id
  summary: The Communication Services resource id.
  signature: 'resource_id: str'
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.tenant_id
  name: tenant_id
  summary: The tenant id associated with the user.
  signature: 'tenant_id: str'
- uid: azure.communication.callautomation.TeamsExtensionUserProperties.user_id
  name: user_id
  summary: The id of the Teams extension user.
  signature: 'user_id: str'
