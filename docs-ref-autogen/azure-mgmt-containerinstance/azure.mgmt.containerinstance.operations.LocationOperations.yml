### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.containerinstance.operations.LocationOperations.list_cached_images
  - azure.mgmt.containerinstance.operations.LocationOperations.list_capabilities
  - azure.mgmt.containerinstance.operations.LocationOperations.list_usage
  - azure.mgmt.containerinstance.operations.LocationOperations.models
  class: azure.mgmt.containerinstance.operations.LocationOperations
  fullName: azure.mgmt.containerinstance.operations.LocationOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.containerinstance.operations
  name: LocationOperations
  summary: 'LocationOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: LocationOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API version. Constant value: "2019-12-01".'
      id: api_version
  type: class
  uid: azure.mgmt.containerinstance.operations.LocationOperations
- class: azure.mgmt.containerinstance.operations.LocationOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_cached_images
  langs:
  - python
  module: azure.mgmt.containerinstance.operations
  name: list_cached_images(location, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_cached_images
  summary: 'Get the list of cached images.


    Get the list of cached images on specific OS type for a subscription in

    a region.'
  syntax:
    content: list_cached_images(location, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identifier for the physical azure location.
      id: location
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of CachedImages
      type:
      - azure.mgmt.containerinstance.models.CachedImagesPaged[azure.mgmt.containerinstance.models.CachedImages]
  type: method
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_cached_images
- class: azure.mgmt.containerinstance.operations.LocationOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_capabilities
  langs:
  - python
  module: azure.mgmt.containerinstance.operations
  name: list_capabilities(location, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_capabilities
  summary: 'Get the list of capabilities of the location.


    Get the list of CPU/memory/GPU capabilities of a region.'
  syntax:
    content: list_capabilities(location, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identifier for the physical azure location.
      id: location
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Capabilities
      type:
      - azure.mgmt.containerinstance.models.CapabilitiesPaged[azure.mgmt.containerinstance.models.Capabilities]
  type: method
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_capabilities
- class: azure.mgmt.containerinstance.operations.LocationOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_usage
  langs:
  - python
  module: azure.mgmt.containerinstance.operations
  name: list_usage(location, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_usage
  summary: Get the usage for a subscription.
  syntax:
    content: list_usage(location, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identifier for the physical azure location.
      id: location
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Usage
      type:
      - azure.mgmt.containerinstance.models.UsagePaged[azure.mgmt.containerinstance.models.Usage]
  type: method
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_usage
- class: azure.mgmt.containerinstance.operations.LocationOperations
  fullName: azure.mgmt.containerinstance.operations.LocationOperations.models
  langs:
  - python
  module: azure.mgmt.containerinstance.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.containerinstance.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\containerinstance\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.containerinstance.operations.LocationOperations.models
references:
- fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_cached_images
  isExternal: false
  name: list_cached_images(location, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.containerinstance.operations.LocationOperations
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_cached_images
- fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_capabilities
  isExternal: false
  name: list_capabilities(location, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.containerinstance.operations.LocationOperations
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_capabilities
- fullName: azure.mgmt.containerinstance.operations.LocationOperations.list_usage
  isExternal: false
  name: list_usage(location, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.containerinstance.operations.LocationOperations
  uid: azure.mgmt.containerinstance.operations.LocationOperations.list_usage
- fullName: azure.mgmt.containerinstance.operations.LocationOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.containerinstance.operations.LocationOperations
  uid: azure.mgmt.containerinstance.operations.LocationOperations.models
- fullName: azure.mgmt.containerinstance.models.CachedImagesPaged[azure.mgmt.containerinstance.models.CachedImages]
  name: CachedImagesPaged[CachedImages]
  spec.python:
  - fullName: azure.mgmt.containerinstance.models.CachedImagesPaged
    name: CachedImagesPaged
    uid: azure.mgmt.containerinstance.models.CachedImagesPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.containerinstance.models.CachedImages
    name: CachedImages
    uid: azure.mgmt.containerinstance.models.CachedImages
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.containerinstance.models.CachedImagesPaged[azure.mgmt.containerinstance.models.CachedImages]
- fullName: azure.mgmt.containerinstance.models.CapabilitiesPaged[azure.mgmt.containerinstance.models.Capabilities]
  name: CapabilitiesPaged[Capabilities]
  spec.python:
  - fullName: azure.mgmt.containerinstance.models.CapabilitiesPaged
    name: CapabilitiesPaged
    uid: azure.mgmt.containerinstance.models.CapabilitiesPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.containerinstance.models.Capabilities
    name: Capabilities
    uid: azure.mgmt.containerinstance.models.Capabilities
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.containerinstance.models.CapabilitiesPaged[azure.mgmt.containerinstance.models.Capabilities]
- fullName: azure.mgmt.containerinstance.models.UsagePaged[azure.mgmt.containerinstance.models.Usage]
  name: UsagePaged[Usage]
  spec.python:
  - fullName: azure.mgmt.containerinstance.models.UsagePaged
    name: UsagePaged
    uid: azure.mgmt.containerinstance.models.UsagePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.containerinstance.models.Usage
    name: Usage
    uid: azure.mgmt.containerinstance.models.Usage
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.containerinstance.models.UsagePaged[azure.mgmt.containerinstance.models.Usage]
