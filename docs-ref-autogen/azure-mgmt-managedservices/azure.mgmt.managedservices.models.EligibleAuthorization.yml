### YamlMime:PythonClass
uid: azure.mgmt.managedservices.models.EligibleAuthorization
name: EligibleAuthorization
fullName: azure.mgmt.managedservices.models.EligibleAuthorization
module: azure.mgmt.managedservices.models
inheritances:
- msrest.serialization.Model
summary: 'Eligible authorization tuple containing principle Id (of user/service principal/security
  group), role definition id, and the just-in-time access setting.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'EligibleAuthorization(*, principal_id: str, role_definition_id: str, principal_id_display_name:
    Optional[str] = None, just_in_time_access_policy: Optional[azure.mgmt.managedservices.models._models_py3.JustInTimeAccessPolicy]
    = None, **kwargs)'
  parameters:
  - name: principal_id
    description: 'Required. Principal Id of the security group/service principal/user
      that

      would be delegated permissions to the projected subscription.'
    isRequired: true
    types:
    - <xref:str>
  - name: principal_id_display_name
    description: Display name of the principal Id.
    isRequired: true
    types:
    - <xref:str>
  - name: role_definition_id
    description: 'Required. The role definition identifier. This role will delegate

      all the permissions that the security group/service principal/user must have
      on the projected

      subscription. This role cannot be an owner role.'
    isRequired: true
    types:
    - <xref:str>
  - name: just_in_time_access_policy
    description: Just-in-time access policy setting.
    isRequired: true
    types:
    - <xref:azure.mgmt.managedservices.models.JustInTimeAccessPolicy>
