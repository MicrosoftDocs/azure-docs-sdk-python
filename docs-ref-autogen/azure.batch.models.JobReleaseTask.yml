### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.JobReleaseTask
  fullName: azure.batch.models.JobReleaseTask
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: JobReleaseTask
  source:
    id: JobReleaseTask
    path: azure-batch\azure\batch\models\job_release_task.py
    remote:
      branch: master
      path: azure-batch\azure\batch\models\job_release_task.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'A Job Release task to run on job completion on any compute node where
    the

    job has run.


    The Job Release task runs when the job ends, because of one of the

    following: The user calls the Terminate Job API, or the Delete Job API

    while the job is still active, the job''s maximum wall clock time constraint

    is reached, and the job is still active, or the job''s Job Manager task

    completed, and the job is configured to terminate when the Job Manager

    completes. The Job Release task runs on each compute node where tasks of

    the job have run and the Job Preparation task ran and completed. If you

    reimage a compute node after it has run the Job Preparation task, and the

    job ends without any further tasks of the job running on that compute node

    (and hence the Job Preparation task does not re-run), then the Job Release

    task does not run on that node. If a compute node reboots while the Job

    Release task is still running, the Job Release task runs again when the

    compute node starts up. The job is not marked as complete until all Job

    Release tasks have completed. The Job Release task runs in the background.

    It does not occupy a scheduling slot; that is, it does not count towards

    the maxTasksPerNode limit specified on the pool.

    '
  syntax:
    content: JobReleaseTask(command_line, id=None, container_settings=None, resource_files=None,
      environment_settings=None, max_wall_clock_time=None, retention_time=None, user_identity=None)
    parameters:
    - description: 'A string that uniquely identifies the Job Release task within

        the job. The ID can contain any combination of alphanumeric characters

        including hyphens and underscores and cannot contain more than 64

        characters. If you do not specify this property, the Batch service assigns

        a default value of ''jobrelease''. No other task in the job can have the

        same ID as the Job Release task. If you try to submit a task with the same

        id, the Batch service rejects the request with error code

        TaskIdSameAsJobReleaseTask; if you are calling the REST API directly, the

        HTTP status code is 409 (Conflict).

        '
      id: id
      type:
      - str
    - description: 'The command line of the Job Release task. The command

        line does not run under a shell, and therefore cannot take advantage of

        shell features such as environment variable expansion. If you want to take

        advantage of such features, you should invoke the shell in the command

        line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c

        MyCommand" in Linux. If the command line refers to file paths, it should

        use a relative path (relative to the task working directory), or use the

        Batch provided environment variable

        ([https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables](https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)).

        '
      id: command_line
      type:
      - str
    - description: 'The settings for the container under which the

        Job Release task runs. When this is specified, all directories recursively

        below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on

        the node) are mapped into the container, all task environment variables

        are mapped into the container, and the task command line is executed in

        the container.

        '
      id: container_settings
      type:
      - azure.batch.models.TaskContainerSettings
    - description: 'A list of files that the Batch service will

        download to the compute node before running the command line. Files listed

        under this element are located in the task''s working directory.

        '
      id: resource_files
      type:
      - list[azure.batch.models.ResourceFile]
    - description: 'A list of environment variable settings for

        the Job Release task.

        '
      id: environment_settings
      type:
      - list[azure.batch.models.EnvironmentSetting]
    - description: 'The maximum elapsed time that the Job Release

        task may run on a given compute node, measured from the time the task

        starts. If the task does not complete within the time limit, the Batch

        service terminates it. The default value is 15 minutes. You may not

        specify a timeout longer than 15 minutes. If you do, the Batch service

        rejects it with an error; if you are calling the REST API directly, the

        HTTP status code is 400 (Bad Request).

        '
      id: max_wall_clock_time
      type:
      - timedelta
    - description: 'The minimum time to retain the task directory for

        the Job Release task on the compute node. After this time, the Batch

        service may delete the task directory and all its contents. The default is

        infinite, i.e. the task directory will be retained until the compute node

        is removed or reimaged.

        '
      id: retention_time
      type:
      - timedelta
    - description: 'The user identity under which the Job Release task

        runs. If omitted, the task runs as a non-administrative user unique to the

        task.

        '
      id: user_identity
      type:
      - azure.batch.models.UserIdentity
  type: class
  uid: azure.batch.models.JobReleaseTask
references:
- fullName: list[azure.batch.models.ResourceFile]
  name: list[ResourceFile]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ResourceFile
    name: ResourceFile
    uid: azure.batch.models.ResourceFile
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ResourceFile]
- fullName: list[azure.batch.models.EnvironmentSetting]
  name: list[EnvironmentSetting]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.EnvironmentSetting
    name: EnvironmentSetting
    uid: azure.batch.models.EnvironmentSetting
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.EnvironmentSetting]
