### YamlMime:PythonClass
uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations
name: RemediationsOperations
fullName: azure.mgmt.policyinsights.aio.operations.RemediationsOperations
module: azure.mgmt.policyinsights.aio.operations
inheritances:
- builtins.object
summary: 'RemediationsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RemediationsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.cancel_at_management_group
  name: cancel_at_management_group
  summary: Cancels a remediation at management group scope.
  signature: 'async cancel_at_management_group(management_group_id: str, remediation_name:
    str, **kwargs) -> Remediation'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.cancel_at_resource
  name: cancel_at_resource
  summary: Cancel a remediation at resource scope.
  signature: 'async cancel_at_resource(resource_id: str, remediation_name: str, **kwargs)
    -> Remediation'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.cancel_at_resource_group
  name: cancel_at_resource_group
  summary: Cancels a remediation at resource group scope.
  signature: 'async cancel_at_resource_group(resource_group_name: str, remediation_name:
    str, **kwargs) -> Remediation'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.cancel_at_subscription
  name: cancel_at_subscription
  summary: Cancels a remediation at subscription scope.
  signature: 'async cancel_at_subscription(remediation_name: str, **kwargs) -> Remediation'
  parameters:
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.create_or_update_at_management_group
  name: create_or_update_at_management_group
  summary: Creates or updates a remediation at management group scope.
  signature: 'async create_or_update_at_management_group(management_group_id: str,
    remediation_name: str, parameters: Remediation, **kwargs) -> Remediation'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The remediation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.create_or_update_at_resource
  name: create_or_update_at_resource
  summary: Creates or updates a remediation at resource scope.
  signature: 'async create_or_update_at_resource(resource_id: str, remediation_name:
    str, parameters: Remediation, **kwargs) -> Remediation'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The remediation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.create_or_update_at_resource_group
  name: create_or_update_at_resource_group
  summary: Creates or updates a remediation at resource group scope.
  signature: 'async create_or_update_at_resource_group(resource_group_name: str, remediation_name:
    str, parameters: Remediation, **kwargs) -> Remediation'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The remediation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.create_or_update_at_subscription
  name: create_or_update_at_subscription
  summary: Creates or updates a remediation at subscription scope.
  signature: 'async create_or_update_at_subscription(remediation_name: str, parameters:
    Remediation, **kwargs) -> Remediation'
  parameters:
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The remediation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.delete_at_management_group
  name: delete_at_management_group
  summary: Deletes an existing remediation at management group scope.
  signature: 'async delete_at_management_group(management_group_id: str, remediation_name:
    str, **kwargs) -> Remediation | None'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.delete_at_resource
  name: delete_at_resource
  summary: Deletes an existing remediation at individual resource scope.
  signature: 'async delete_at_resource(resource_id: str, remediation_name: str, **kwargs)
    -> Remediation | None'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.delete_at_resource_group
  name: delete_at_resource_group
  summary: Deletes an existing remediation at resource group scope.
  signature: 'async delete_at_resource_group(resource_group_name: str, remediation_name:
    str, **kwargs) -> Remediation | None'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.delete_at_subscription
  name: delete_at_subscription
  summary: Deletes an existing remediation at subscription scope.
  signature: 'async delete_at_subscription(remediation_name: str, **kwargs) -> Remediation
    | None'
  parameters:
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.get_at_management_group
  name: get_at_management_group
  summary: Gets an existing remediation at management group scope.
  signature: 'async get_at_management_group(management_group_id: str, remediation_name:
    str, **kwargs) -> Remediation'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.get_at_resource
  name: get_at_resource
  summary: Gets an existing remediation at resource scope.
  signature: 'async get_at_resource(resource_id: str, remediation_name: str, **kwargs)
    -> Remediation'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.get_at_resource_group
  name: get_at_resource_group
  summary: Gets an existing remediation at resource group scope.
  signature: 'async get_at_resource_group(resource_group_name: str, remediation_name:
    str, **kwargs) -> Remediation'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.get_at_subscription
  name: get_at_subscription
  summary: Gets an existing remediation at subscription scope.
  signature: 'async get_at_subscription(remediation_name: str, **kwargs) -> Remediation'
  parameters:
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Remediation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Remediation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_deployments_at_management_group
  name: list_deployments_at_management_group
  summary: Gets all deployments for a remediation at management group scope.
  signature: 'list_deployments_at_management_group(management_group_id: str, remediation_name:
    str, query_options: QueryOptions | None = None, **kwargs) -> AsyncIterable[RemediationDeploymentsListResult]'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationDeploymentsListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationDeploymentsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_deployments_at_resource
  name: list_deployments_at_resource
  summary: Gets all deployments for a remediation at resource scope.
  signature: 'list_deployments_at_resource(resource_id: str, remediation_name: str,
    query_options: QueryOptions | None = None, **kwargs) -> AsyncIterable[RemediationDeploymentsListResult]'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationDeploymentsListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationDeploymentsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_deployments_at_resource_group
  name: list_deployments_at_resource_group
  summary: Gets all deployments for a remediation at resource group scope.
  signature: 'list_deployments_at_resource_group(resource_group_name: str, remediation_name:
    str, query_options: QueryOptions | None = None, **kwargs) -> AsyncIterable[RemediationDeploymentsListResult]'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationDeploymentsListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationDeploymentsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_deployments_at_subscription
  name: list_deployments_at_subscription
  summary: Gets all deployments for a remediation at subscription scope.
  signature: 'list_deployments_at_subscription(remediation_name: str, query_options:
    QueryOptions | None = None, **kwargs) -> AsyncIterable[RemediationDeploymentsListResult]'
  parameters:
  - name: remediation_name
    description: The name of the remediation.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationDeploymentsListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationDeploymentsListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_for_management_group
  name: list_for_management_group
  summary: Gets all remediations for the management group.
  signature: 'list_for_management_group(management_group_id: str, query_options: QueryOptions
    | None = None, **kwargs) -> AsyncIterable[RemediationListResult]'
  parameters:
  - name: management_group_id
    description: Management group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_for_resource
  name: list_for_resource
  summary: Gets all remediations for a resource.
  signature: 'list_for_resource(resource_id: str, query_options: QueryOptions | None
    = None, **kwargs) -> AsyncIterable[RemediationListResult]'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: Gets all remediations for the subscription.
  signature: 'list_for_resource_group(resource_group_name: str, query_options: QueryOptions
    | None = None, **kwargs) -> AsyncIterable[RemediationListResult]'
  parameters:
  - name: resource_group_name
    description: Resource group name.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.list_for_subscription
  name: list_for_subscription
  summary: Gets all remediations for the subscription.
  signature: 'list_for_subscription(query_options: QueryOptions | None = None, **kwargs)
    -> AsyncIterable[RemediationListResult]'
  parameters:
  - name: query_options
    description: Parameter group.
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RemediationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.RemediationListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.policyinsights.aio.operations.RemediationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.policyinsights.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\policyinsights\\models\\__init__.py'>
