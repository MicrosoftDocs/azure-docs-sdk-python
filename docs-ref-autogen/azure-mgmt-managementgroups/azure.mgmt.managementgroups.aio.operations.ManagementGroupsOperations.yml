### YamlMime:PythonClass
uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations
name: ManagementGroupsOperations
fullName: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations
module: azure.mgmt.managementgroups.aio.operations
inheritances:
- builtins.object
summary: 'ManagementGroupsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ManagementGroupsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update a management group.

    If a management group is already created and a subsequent create request is issued
    with

    different properties, the management group properties will be updated.'
  signature: 'async begin_create_or_update(group_id: str, create_management_group_request:
    CreateManagementGroupRequest, cache_control: str | None = ''no-cache'', **kwargs:
    Any) -> AsyncLROPoller[ManagementGroup | AzureAsyncOperationResults]'
  parameters:
  - name: group_id
    description: Management Group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: create_management_group_request
    description: Management group creation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.managementgroups.models.CreateManagementGroupRequest>
  - name: cache_control
    description: 'Indicates whether the request should utilize any caches. Populate
      the

      header with ''no-cache'' value to bypass existing caches.'
    defaultValue: no-cache
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either ManagementGroup
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.managementgroups.models.ManagementGroup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.begin_delete
  name: begin_delete
  summary: 'Delete management group.

    If a management group contains child resources, the request will fail.'
  signature: 'async begin_delete(group_id: str, cache_control: str | None = ''no-cache'',
    **kwargs: Any) -> AsyncLROPoller[AzureAsyncOperationResults]'
  parameters:
  - name: group_id
    description: Management Group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: cache_control
    description: 'Indicates whether the request should utilize any caches. Populate
      the

      header with ''no-cache'' value to bypass existing caches.'
    defaultValue: no-cache
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either AzureAsyncOperationResults
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.managementgroups.models.AzureAsyncOperationResults>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.get
  name: get
  summary: Get the details of the management group.
  signature: 'async get(group_id: str, expand: str | Enum0 | None = None, recurse:
    bool | None = None, filter: str | None = None, cache_control: str | None = ''no-cache'',
    **kwargs: Any) -> ManagementGroup'
  parameters:
  - name: group_id
    description: Management Group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: expand
    description: 'The $expand=children query string parameter allows clients to request
      inclusion

      of children in the response payload.  $expand=path includes the path from the
      root group to the

      current group.  $expand=ancestors includes the ancestor Ids of the current group.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.managementgroups.models.Enum0>
  - name: recurse
    description: 'The $recurse=true query string parameter allows clients to request
      inclusion of

      entire hierarchy in the response payload. Note that  $expand=children must be
      passed up if

      $recurse is set to true.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: filter
    description: 'A filter which allows the exclusion of subscriptions from results
      (i.e.

      ''$filter=children.childType ne Subscription'').'
    defaultValue: None
    types:
    - <xref:str>
  - name: cache_control
    description: 'Indicates whether the request should utilize any caches. Populate
      the

      header with ''no-cache'' value to bypass existing caches.'
    defaultValue: no-cache
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementGroup, or the result of cls(response)
    types:
    - <xref:azure.mgmt.managementgroups.models.ManagementGroup>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.get_descendants
  name: get_descendants
  summary: List all entities that descend from a management group.
  signature: 'get_descendants(group_id: str, skiptoken: str | None = None, top: int
    | None = None, **kwargs: Any) -> AsyncIterable[DescendantListResult]'
  parameters:
  - name: group_id
    description: Management Group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: skiptoken
    description: 'Page continuation token is only used if a previous operation returned
      a

      partial result.

      If a previous response contains a nextLink element, the value of the nextLink
      element will

      include a token parameter that specifies a starting point to use for subsequent
      calls.'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Number of elements to return when retrieving results. Passing this
      in will override

      $skipToken.'
    defaultValue: None
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either DescendantListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.managementgroups.models.DescendantListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.list
  name: list
  summary: List management groups for the authenticated user.
  signature: 'list(cache_control: str | None = ''no-cache'', skiptoken: str | None
    = None, **kwargs: Any) -> AsyncIterable[ManagementGroupListResult]'
  parameters:
  - name: cache_control
    description: 'Indicates whether the request should utilize any caches. Populate
      the

      header with ''no-cache'' value to bypass existing caches.'
    defaultValue: no-cache
    types:
    - <xref:str>
  - name: skiptoken
    description: 'Page continuation token is only used if a previous operation returned
      a

      partial result.

      If a previous response contains a nextLink element, the value of the nextLink
      element will

      include a token parameter that specifies a starting point to use for subsequent
      calls.'
    defaultValue: None
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either ManagementGroupListResult or
      the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.managementgroups.models.ManagementGroupListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.update
  name: update
  summary: Update a management group.
  signature: 'async update(group_id: str, patch_group_request: PatchManagementGroupRequest,
    cache_control: str | None = ''no-cache'', **kwargs: Any) -> ManagementGroup'
  parameters:
  - name: group_id
    description: Management Group ID.
    isRequired: true
    types:
    - <xref:str>
  - name: patch_group_request
    description: Management group patch parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.managementgroups.models.PatchManagementGroupRequest>
  - name: cache_control
    description: 'Indicates whether the request should utilize any caches. Populate
      the

      header with ''no-cache'' value to bypass existing caches.'
    defaultValue: no-cache
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ManagementGroup, or the result of cls(response)
    types:
    - <xref:azure.mgmt.managementgroups.models.ManagementGroup>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.managementgroups.aio.operations.ManagementGroupsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.managementgroups.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\managementgroups\\models\\__init__.py'>
