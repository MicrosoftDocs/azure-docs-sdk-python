### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.create_or_update
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.delete
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.get
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.list
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.update
  - azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.models
  class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: ManagementGroupsOperations
  summary: ManagementGroupsOperations operations.
  syntax:
    content: ManagementGroupsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Version of the API to be used with the client request. The current
        version is 2018-01-01-preview. Constant value: "2018-03-01-preview".'
      id: api_version
  type: class
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  exceptions:
  - type: azure.mgmt.managementgroups.models.ErrorResponseException
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: create_or_update(group_id, create_management_group_request, cache_control='no-cache',
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Create or update a management group. If a management group is already

    created and a subsequent create request is issued with different

    properties, the management group properties will be updated.'
  syntax:
    content: create_or_update(group_id, create_management_group_request, cache_control='no-cache',
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Management Group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: 'Management group creation

        parameters.'
      id: create_management_group_request
      isRequired: true
      type:
      - azure.mgmt.managementgroups.models.CreateManagementGroupRequest
    - defaultValue: no-cache
      description: 'Indicates that the request shouldn''t utilize any

        caches.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns object or

        ClientRawResponse<object> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[object]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[object]]
  type: method
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.create_or_update
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  exceptions:
  - type: azure.mgmt.managementgroups.models.ErrorResponseException
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.delete
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: delete(group_id, cache_control='no-cache', custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: delete
  summary: 'Delete management group. If a management group contains child

    resources, the request will fail.'
  syntax:
    content: delete(group_id, cache_control='no-cache', custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: Management Group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - defaultValue: no-cache
      description: 'Indicates that the request shouldn''t utilize any

        caches.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns OperationResults or

        ClientRawResponse<OperationResults> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.managementgroups.models.OperationResults]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.managementgroups.models.OperationResults]]
  type: method
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.delete
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  exceptions:
  - type: azure.mgmt.managementgroups.models.ErrorResponseException
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.get
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: get(group_id, expand=None, recurse=None, filter=None, cache_control='no-cache',
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Get the details of the management group.
  syntax:
    content: get(group_id, expand=None, recurse=None, filter=None, cache_control='no-cache',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Management Group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The $expand=children query string parameter allows

        clients to request inclusion of children in the response payload.

        Possible values include: ''children'''
      id: expand
      type:
      - str
    - defaultValue: None
      description: 'The $recurse=true query string parameter allows

        clients to request inclusion of entire hierarchy in the response

        payload. Note that  $expand=children must be passed up if $recurse is

        set to true.'
      id: recurse
      type:
      - bool
    - defaultValue: None
      description: 'A filter which allows the exclusion of subscriptions

        from results (i.e. ''$filter=children.childType ne Subscription'')'
      id: filter
      type:
      - str
    - defaultValue: no-cache
      description: 'Indicates that the request shouldn''t utilize any

        caches.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ManagementGroup or ClientRawResponse if raw=true
      type:
      - azure.mgmt.managementgroups.models.ManagementGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.get
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  exceptions:
  - type: azure.mgmt.managementgroups.models.ErrorResponseException
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.list
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: list(cache_control='no-cache', skiptoken=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list
  summary: List management groups for the authenticated user.
  syntax:
    content: list(cache_control='no-cache', skiptoken=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: no-cache
      description: 'Indicates that the request shouldn''t utilize any

        caches.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: 'Page continuation token is only used if a previous

        operation returned a partial result. If a previous response contains a

        nextLink element, the value of the nextLink element will include a

        token parameter that specifies a starting point to use for subsequent

        calls.'
      id: skiptoken
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of ManagementGroupInfo
      type:
      - azure.mgmt.managementgroups.models.ManagementGroupInfoPaged[azure.mgmt.managementgroups.models.ManagementGroupInfo]
  type: method
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.list
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  exceptions:
  - type: azure.mgmt.managementgroups.models.ErrorResponseException
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.update
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: update(group_id, patch_group_request, cache_control='no-cache', custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: Update a management group.
  syntax:
    content: update(group_id, patch_group_request, cache_control='no-cache', custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Management Group ID.
      id: group_id
      isRequired: true
      type:
      - str
    - description: Management group patch parameters.
      id: patch_group_request
      isRequired: true
      type:
      - azure.mgmt.managementgroups.models.PatchManagementGroupRequest
    - defaultValue: no-cache
      description: 'Indicates that the request shouldn''t utilize any

        caches.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ManagementGroup or ClientRawResponse if raw=true
      type:
      - azure.mgmt.managementgroups.models.ManagementGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.update
- class: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.models
  langs:
  - python
  module: azure.mgmt.managementgroups.operations.management_groups_operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.managementgroups.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\managementgroups\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.models
references:
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.create_or_update
  isExternal: false
  name: create_or_update(group_id, create_management_group_request, cache_control='no-cache',
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.create_or_update
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.delete
  isExternal: false
  name: delete(group_id, cache_control='no-cache', custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.delete
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.get
  isExternal: false
  name: get(group_id, expand=None, recurse=None, filter=None, cache_control='no-cache',
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.get
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.list
  isExternal: false
  name: list(cache_control='no-cache', skiptoken=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.list
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.update
  isExternal: false
  name: update(group_id, patch_group_request, cache_control='no-cache', custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.update
- fullName: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations
  uid: azure.mgmt.managementgroups.operations.management_groups_operations.ManagementGroupsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[object]
  name: AzureOperationPoller[object]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[object]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[object]]
  name: AzureOperationPoller[ClientRawResponse[object]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[object]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.managementgroups.models.OperationResults]
  name: AzureOperationPoller[OperationResults]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.managementgroups.models.OperationResults
    name: OperationResults
    uid: azure.mgmt.managementgroups.models.OperationResults
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.managementgroups.models.OperationResults]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.managementgroups.models.OperationResults]]
  name: AzureOperationPoller[ClientRawResponse[OperationResults]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.managementgroups.models.OperationResults
    name: OperationResults
    uid: azure.mgmt.managementgroups.models.OperationResults
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.managementgroups.models.OperationResults]]
- fullName: azure.mgmt.managementgroups.models.ManagementGroupInfoPaged[azure.mgmt.managementgroups.models.ManagementGroupInfo]
  name: ManagementGroupInfoPaged[ManagementGroupInfo]
  spec.python:
  - fullName: azure.mgmt.managementgroups.models.ManagementGroupInfoPaged
    name: ManagementGroupInfoPaged
    uid: azure.mgmt.managementgroups.models.ManagementGroupInfoPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.managementgroups.models.ManagementGroupInfo
    name: ManagementGroupInfo
    uid: azure.mgmt.managementgroups.models.ManagementGroupInfo
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.managementgroups.models.ManagementGroupInfoPaged[azure.mgmt.managementgroups.models.ManagementGroupInfo]
