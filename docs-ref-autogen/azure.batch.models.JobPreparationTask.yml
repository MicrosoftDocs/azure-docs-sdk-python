### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.JobPreparationTask
  fullName: azure.batch.models.JobPreparationTask
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: JobPreparationTask
  source:
    id: JobPreparationTask
    path: azure-batch\azure\batch\models\job_preparation_task.py
    remote:
      branch: master
      path: azure-batch\azure\batch\models\job_preparation_task.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'A Job Preparation task to run before any tasks of the job on any given

    compute node.

    '
  syntax:
    content: JobPreparationTask(command_line, id=None, resource_files=None, environment_settings=None,
      constraints=None, wait_for_success=None, user_identity=None, rerun_on_node_reboot_after_success=None)
    parameters:
    - description: 'A string that uniquely identifies the Job Preparation task

        within the job. The ID can contain any combination of alphanumeric

        characters including hyphens and underscores and cannot contain more than

        64 characters. If you do not specify this property, the Batch service

        assigns a default value of ''jobpreparation''. No other task in the job can

        have the same id as the Job Preparation task. If you try to submit a task

        with the same id, the Batch service rejects the request with error code

        TaskIdSameAsJobPreparationTask; if you are calling the REST API directly,

        the HTTP status code is 409 (Conflict).

        '
      id: id
      type:
      - str
    - description: 'The command line of the Job Preparation task. The

        command line does not run under a shell, and therefore cannot take

        advantage of shell features such as environment variable expansion. If you

        want to take advantage of such features, you should invoke the shell in

        the command line, for example using "cmd /c MyCommand" in Windows or

        "/bin/sh -c MyCommand" in Linux.

        '
      id: command_line
      type:
      - str
    - description: 'A list of files that the Batch service will

        download to the compute node before running the command line. Files listed

        under this element are located in the task''s working directory.

        '
      id: resource_files
      type:
      - 'list of @azure.batch.models.ResourceFile

        '
    - description: 'A list of environment variable settings for

        the Job Preparation task.

        '
      id: environment_settings
      type:
      - 'list of @azure.batch.models.EnvironmentSetting

        '
    - description: 'Constraints that apply to the Job Preparation task.

        '
      id: constraints
      type:
      - azure.batch.models.TaskConstraints
    - description: 'Whether the Batch service should wait for the Job

        Preparation task to complete successfully before scheduling any other

        tasks of the job on the compute node. If true and the Job Preparation task

        fails on a compute node, the Batch service retries the Job Preparation

        task up to its maximum retry count (as specified in the constraints

        element). If the task has still not completed successfully after all

        retries, then the Batch service will not schedule tasks of the job to the

        compute node. The compute node remains active and eligible to run tasks of

        other jobs. If false, the Batch service will not wait for the Job

        Preparation task to complete. In this case, other tasks of the job can

        start executing on the compute node while the Job Preparation task is

        still running; and even if the Job Preparation task fails, new tasks will

        continue to be scheduled on the node. The default value is true.

        '
      id: wait_for_success
      type:
      - bool
    - description: 'The user identity under which the Job Preparation

        task runs. If omitted, the task runs as a non-administrative user unique

        to the task.

        '
      id: user_identity
      type:
      - azure.batch.models.UserIdentity
    - description: 'Whether the Batch service

        should rerun the Job Preparation task after a compute node reboots. The

        Job Preparation task is always rerun if a compute node is reimaged, or if

        the Job Preparation task did not complete (e.g. because the reboot

        occurred while the task was running). Therefore, you should always write a

        Job Preparation task to be idempotent and to behave correctly if run

        multiple times. The default value is true.

        '
      id: rerun_on_node_reboot_after_success
      type:
      - bool
  type: class
  uid: azure.batch.models.JobPreparationTask
references: []
