### YamlMime:PythonClass
uid: azure.ai.textanalytics.SentenceSentiment
name: SentenceSentiment
fullName: azure.ai.textanalytics.SentenceSentiment
module: azure.ai.textanalytics
inheritances:
- azure.ai.textanalytics._dict_mixin.DictMixin
summary: 'SentenceSentiment contains the predicted sentiment and

  confidence scores for each individual sentence in the document.


  *New in version v3.1:* The *offset*, *length*, and *mined_opinions* properties.'
constructor:
  syntax: 'SentenceSentiment(**kwargs: Any)'
methods:
- uid: azure.ai.textanalytics.SentenceSentiment.get
  name: get
  signature: 'get(key: str, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.textanalytics.SentenceSentiment.has_key
  name: has_key
  signature: 'has_key(k: str) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.textanalytics.SentenceSentiment.items
  name: items
  signature: items() -> Iterable[Tuple[str, Any]]
- uid: azure.ai.textanalytics.SentenceSentiment.keys
  name: keys
  signature: keys() -> Iterable[str]
- uid: azure.ai.textanalytics.SentenceSentiment.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.textanalytics.SentenceSentiment.values
  name: values
  signature: values() -> Iterable[Any]
attributes:
- uid: azure.ai.textanalytics.SentenceSentiment.confidence_scores
  name: confidence_scores
  summary: 'The sentiment confidence score between 0

    and 1 for the sentence for all labels.'
  signature: 'confidence_scores: SentimentConfidenceScores'
- uid: azure.ai.textanalytics.SentenceSentiment.length
  name: length
  summary: 'The sentence text length.  This value depends on the value of the

    *string_index_type* parameter set in the original request, which is UnicodeCodePoints

    by default.'
  signature: 'length: int'
- uid: azure.ai.textanalytics.SentenceSentiment.mined_opinions
  name: mined_opinions
  summary: 'The list of opinions mined from this sentence.

    For example in the sentence "The food is good, but the service is bad", we would

    mine the two opinions "food is good" and "service is bad". Only returned

    if *show_opinion_mining* is set to True in the call to *analyze_sentiment* and

    api version is v3.1 and up.'
  signature: 'mined_opinions: List[MinedOpinion] | None = None'
- uid: azure.ai.textanalytics.SentenceSentiment.offset
  name: offset
  summary: 'The sentence text offset from the start of the document.

    The value depends on the value of the *string_index_type* parameter

    set in the original request, which is UnicodeCodePoints by default.'
  signature: 'offset: int'
- uid: azure.ai.textanalytics.SentenceSentiment.sentiment
  name: sentiment
  summary: 'The predicted Sentiment for the sentence.

    Possible values include ''positive'', ''neutral'', ''negative'''
  signature: 'sentiment: str'
- uid: azure.ai.textanalytics.SentenceSentiment.text
  name: text
  summary: The sentence text.
  signature: 'text: str'
