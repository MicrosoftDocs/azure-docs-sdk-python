### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msrestazure.azure_active_directory.AADTokenCredentials.retrieve_session
  class: msrestazure.azure_active_directory.AADTokenCredentials
  fullName: msrestazure.azure_active_directory.AADTokenCredentials
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: msrest.authentication.Authentication
        type: msrest.authentication.BasicTokenAuthentication
      type: msrest.authentication.OAuthTokenAuthentication
    type: msrestazure.azure_active_directory.AADMixin
  langs:
  - python
  module: msrestazure.azure_active_directory
  name: AADTokenCredentials
  source:
    id: AADTokenCredentials
    path: msrestazure-0.4.29-py3.6.egg\msrestazure\azure_active_directory.py
    remote:
      branch: master
      path: msrestazure-0.4.29-py3.6.egg\msrestazure\azure_active_directory.py
      repo: https://github.com/Azure/msrestazure-for-python.git
    startLine: 290
  summary: "Credentials objects for AAD token retrieved through external process\n\
    e.g. Python ADAL lib.\n\nOptional kwargs may include:\n\n* cloud_environment (msrestazure.azure_cloud.Cloud):\
    \ A targeted cloud environment \n\n* china (bool): Configure auth for China-based\
    \ service, default is 'False'. \n\n* tenant (str): Alternative tenant, default\
    \ is 'common'. \n\n* auth_uri (str): Alternative authentication endpoint. \n\n\
    * token_uri (str): Alternative token retrieval endpoint. \n\n* resource (str):\
    \ Alternative authentication resource, default is '[https://management.core.windows.net/](https://management.core.windows.net/)'.\
    \ \n\n* verify (bool): Verify secure connection, default is 'True'. \n\n* keyring\
    \ (str): Name of local token cache, default is 'AzureAAD'. \n\n* cached (bool):\
    \ If true, will not attempt to collect a token, which can then be populated later\
    \ from a cached token. \n\n"
  syntax:
    content: AADTokenCredentials(token, client_id=None, **kwargs)
    parameters:
    - description: 'Authentication token.

        '
      id: token
      type:
      - dict
    - description: 'Client ID, if not set, Xplat Client ID

        will be used.

        '
      id: client_id
      type:
      - str
  type: class
  uid: msrestazure.azure_active_directory.AADTokenCredentials
- class: msrestazure.azure_active_directory.AADTokenCredentials
  fullName: msrestazure.azure_active_directory.AADTokenCredentials.retrieve_session
  langs:
  - python
  module: msrestazure.azure_active_directory
  name: retrieve_session
  source:
    id: retrieve_session
    path: msrestazure-0.4.29-py3.6.egg\msrestazure\azure_active_directory.py
    remote:
      branch: master
      path: msrestazure-0.4.29-py3.6.egg\msrestazure\azure_active_directory.py
      repo: https://github.com/Azure/msrestazure-for-python.git
    startLine: 326
  summary: 'Create AADTokenCredentials from a cached token if it has not

    yet expired.

    '
  syntax:
    content: retrieve_session(client_id=None)
    parameters:
    - id: cls
    - defaultValue: None
      id: client_id
  type: method
  uid: msrestazure.azure_active_directory.AADTokenCredentials.retrieve_session
references:
- fullName: msrestazure.azure_active_directory.AADTokenCredentials.retrieve_session
  isExternal: false
  name: retrieve_session
  parent: msrestazure.azure_active_directory.AADTokenCredentials
  uid: msrestazure.azure_active_directory.AADTokenCredentials.retrieve_session
