### YamlMime:PythonClass
uid: azure.mgmt.storagecache.models.NfsAccessRule
name: NfsAccessRule
fullName: azure.mgmt.storagecache.models.NfsAccessRule
module: azure.mgmt.storagecache.models
inheritances:
- msrest.serialization.Model
summary: 'Rule to place restrictions on portions of the cache namespace being presented
  to clients.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'NfsAccessRule(*, scope: str | _models.NfsAccessRuleScope, access: str |
    _models.NfsAccessRuleAccess, filter: str | None = None, suid: bool | None = None,
    submount_access: bool | None = None, root_squash: bool | None = None, anonymous_uid:
    str | None = None, anonymous_gid: str | None = None, **kwargs)'
variables:
- description: 'Required. Scope for this rule. The scope and filter determine which
    clients match

    the rule. Known values are: "default", "network", "host".'
  name: scope
  types:
  - <xref:azure.mgmt.storagecache.models.str>
  - <xref:azure.mgmt.storagecache.models.NfsAccessRuleScope>
- description: 'Filter applied to the scope for this rule. The filter''s format depends
    on its

    scope. ''default'' scope matches all clients and has no filter value. ''network''
    scope takes a

    filter in CIDR format (for example, 10.99.1.0/24). ''host'' takes an IP address
    or fully

    qualified domain name as filter. If a client does not match any filter rule and
    there is no

    default rule, access is denied.'
  name: filter
  types:
  - <xref:azure.mgmt.storagecache.models.str>
- description: 'Required. Access allowed by this rule. Known values are: "no", "ro",
    "rw".'
  name: access
  types:
  - <xref:azure.mgmt.storagecache.models.str>
  - <xref:azure.mgmt.storagecache.models.NfsAccessRuleAccess>
- description: Allow SUID semantics.
  name: suid
  types:
  - <xref:azure.mgmt.storagecache.models.bool>
- description: 'For the default policy, allow access to subdirectories under the root

    export. If this is set to no, clients can only mount the path ''/''. If set to
    yes, clients can

    mount a deeper path, like ''/a/b''.'
  name: submount_access
  types:
  - <xref:azure.mgmt.storagecache.models.bool>
- description: Map root accesses to anonymousUID and anonymousGID.
  name: root_squash
  types:
  - <xref:azure.mgmt.storagecache.models.bool>
- description: 'UID value that replaces 0 when rootSquash is true. 65534 will be used
    if

    not provided.'
  name: anonymous_uid
  types:
  - <xref:azure.mgmt.storagecache.models.str>
- description: 'GID value that replaces 0 when rootSquash is true. This will use the
    value

    of anonymousUID if not provided.'
  name: anonymous_gid
  types:
  - <xref:azure.mgmt.storagecache.models.str>
