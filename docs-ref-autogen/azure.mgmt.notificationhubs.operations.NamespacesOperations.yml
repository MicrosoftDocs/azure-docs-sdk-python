### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  - azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: NamespacesOperations
  source:
    id: NamespacesOperations
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 20
  summary: 'NamespacesOperations operations.














    '
  syntax:
    content: NamespacesOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An objec model deserializer.

        '
      id: deserializer
    variables:
    - description: 'Client Api Version. Constant value: "2017-04-01".

        '
      id: api_version
  type: class
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: check_availability
  source:
    id: check_availability
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 39
  summary: 'Checks the availability of the given service namespace across all Azure

    subscriptions. This is useful because the domain name is created based

    on the service namespace name.

    '
  syntax:
    content: check_availability(parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The namespace name.

        '
      id: parameters
      type:
      - azure.mgmt.notificationhubs.models.CheckAvailabilityParameters
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.CheckAvailabilityResult
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: create_or_update
  source:
    id: create_or_update
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 104
  summary: 'Creates/Updates a service namespace. Once created, this namespace''s

    resource manifest is immutable. This operation is idempotent.

    '
  syntax:
    content: create_or_update(resource_group_name, namespace_name, parameters, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - description: 'Parameters supplied to create a Namespace Resource.

        '
      id: parameters
      type:
      - azure.mgmt.notificationhubs.models.NamespaceCreateOrUpdateParameters
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: create_or_update_authorization_rule
  source:
    id: create_or_update_authorization_rule
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 388
  summary: 'Creates an authorization rule for a namespace.

    '
  syntax:
    content: create_or_update_authorization_rule(resource_group_name, namespace_name,
      authorization_rule_name, parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - description: 'Aauthorization Rule Name.

        '
      id: authorization_rule_name
      type:
      - str
    - description: 'The shared access authorization rule.

        '
      id: parameters
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 248
  summary: 'Deletes an existing namespace. This operation also removes all

    associated notificationHubs under the namespace.

    '
  syntax:
    content: delete(resource_group_name, namespace_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    return:
      type:
      - 'msrestazure.azure_operation.AzureOperationPoller

        instance that returns None'
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: delete_authorization_rule
  source:
    id: delete_authorization_rule
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 461
  summary: 'Deletes a namespace authorization rule.

    '
  syntax:
    content: delete_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - description: 'Authorization Rule Name.

        '
      id: authorization_rule_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: get
  source:
    id: get
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 326
  summary: 'Returns the description for the specified namespace.

    '
  syntax:
    content: get(resource_group_name, namespace_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: get_authorization_rule
  source:
    id: get_authorization_rule
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 518
  summary: 'Gets an authorization rule for a namespace by name.

    '
  syntax:
    content: get_authorization_rule(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name

        '
      id: namespace_name
      type:
      - str
    - description: 'Authorization rule name.

        '
      id: authorization_rule_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list
  source:
    id: list
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 583
  summary: 'Lists the available namespaces within a resourceGroup.

    '
  syntax:
    content: list(resource_group_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group. If

        resourceGroupName value is null the method lists all the namespaces

        within subscription

        '
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResourcePaged
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_all
  source:
    id: list_all
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 651
  summary: 'Lists all the available namespaces within the subscription irrespective

    of the resourceGroups.

    '
  syntax:
    content: list_all(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResourcePaged
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_authorization_rules
  source:
    id: list_authorization_rules
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 715
  summary: 'Gets the authorization rules for a namespace.

    '
  syntax:
    content: list_authorization_rules(resource_group_name, namespace_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name

        '
      id: namespace_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResourcePaged
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: list_keys
  source:
    id: list_keys
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 784
  summary: 'Gets the Primary and Secondary ConnectionStrings to the namespace .

    '
  syntax:
    content: list_keys(resource_group_name, namespace_name, authorization_rule_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - description: 'The connection string of the namespace

        for the specified authorizationRule.

        '
      id: authorization_rule_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.ResourceListKeys
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: patch
  source:
    id: patch
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 176
  summary: 'Patches the existing namespace.

    '
  syntax:
    content: patch(resource_group_name, namespace_name, tags=None, sku=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - defaultValue: None
      description: 'Resource tags

        '
      id: tags
      type:
      - dict
    - defaultValue: None
      description: 'The sku of the created namespace

        '
      id: sku
      type:
      - azure.mgmt.notificationhubs.models.Sku
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.NamespaceResource
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
- class: azure.mgmt.notificationhubs.operations.NamespacesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  langs:
  - python
  module: azure.mgmt.notificationhubs.operations
  name: regenerate_keys
  source:
    id: regenerate_keys
    path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
    remote:
      branch: master
      path: azure-mgmt-notificationhubs\azure\mgmt\notificationhubs\operations\namespaces_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 850
  summary: 'Regenerates the Primary/Secondary Keys to the Namespace Authorization

    Rule.

    '
  syntax:
    content: regenerate_keys(resource_group_name, namespace_name, authorization_rule_name,
      policy_key=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace name.

        '
      id: namespace_name
      type:
      - str
    - description: 'The connection string of the namespace

        for the specified authorizationRule.

        '
      id: authorization_rule_name
      type:
      - str
    - defaultValue: None
      description: 'Name of the key that has to be regenerated for the

        Namespace/Notification Hub Authorization Rule. The value can be

        Primary Key/Secondary Key.

        '
      id: policy_key
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.notificationhubs.models.ResourceListKeys
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
references:
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  isExternal: false
  name: check_availability
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
  isExternal: false
  name: create_or_update
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  isExternal: false
  name: create_or_update_authorization_rule
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  isExternal: false
  name: delete_authorization_rule
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  isExternal: false
  name: get_authorization_rule
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  isExternal: false
  name: list
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  isExternal: false
  name: list_all
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  isExternal: false
  name: list_authorization_rules
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  isExternal: false
  name: list_keys
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
  isExternal: false
  name: patch
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.patch
- fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  isExternal: false
  name: regenerate_keys
  parent: azure.mgmt.notificationhubs.operations.NamespacesOperations
  uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
