### YamlMime:PythonClass
uid: azure.messaging.webpubsubclient.WebPubSubClient
name: WebPubSubClient
fullName: azure.messaging.webpubsubclient.WebPubSubClient
module: azure.messaging.webpubsubclient
inheritances:
- azure.messaging.webpubsubclient._client.WebPubSubClientBase
constructor:
  syntax: 'WebPubSubClient(credential: WebPubSubClientCredential | str, *, message_retry_backoff_factor:
    float = 0.8, message_retry_backoff_max: float = 120.0, message_retry_mode: RetryMode
    = RetryMode.Exponential, message_retry_total: int = 3, protocol_type: WebPubSubProtocolType
    = WebPubSubProtocolType.JSON_RELIABLE, reconnect_retry_backoff_factor: float =
    0.8, reconnect_retry_backoff_max: float = 120.0, reconnect_retry_mode: RetryMode
    = RetryMode.Exponential, reconnect_retry_total: int = 3, auto_rejoin_groups: bool
    = True, logging_enable: bool = False, ack_timeout: float = 30.0, start_timeout:
    float = 30.0, user_agent: str | None = None, **kwargs: Any)'
  parameters:
  - name: credential
    description: The url to connect or credential to use when connecting. Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.messaging.webpubsubclient.WebPubSubClientCredential>
  keywordOnlyParameters:
  - name: auto_rejoin_groups
    description: Whether to enable restoring group after reconnecting
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: protocol_type
    description: Subprotocol type
    defaultValue: WebPubSubProtocolType.JSON_RELIABLE
    types:
    - <xref:azure.messaging.webpubsubclient.models.WebPubSubProtocolType>
  - name: reconnect_retry_total
    description: 'total number of retries to allow for reconnect. If 0, it means disable

      reconnect. Default is 3.'
    defaultValue: '3'
    types:
    - <xref:int>
  - name: reconnect_retry_backoff_factor
    description: 'A backoff factor to apply between attempts after the second try

      (most errors are resolved immediately by a second try without a delay). In fixed
      mode, retry policy will always

      sleep for {backoff factor}. In ''exponential'' mode, retry policy will sleep
      for:

      "{backoff factor} * (2 ** ({number of retries} - 1))" seconds. If the backoff_factor
      is 0.1, then the

      retry will sleep for [0.0s, 0.2s, 0.4s, ...] between retries. The default value
      is 0.8.'
    defaultValue: '0.8'
    types:
    - <xref:float>
  - name: reconnect_retry_backoff_max
    description: The maximum back off time. Default value is 120.0 seconds
    defaultValue: '120.0'
    types:
    - <xref:float>
  - name: reconnect_retry_mode
    description: 'Fixed or exponential delay

      between attemps, default is exponential.'
    defaultValue: RetryMode.Exponential
    types:
    - <xref:azure.messaging.webpubsubclient.RetryMode>
  - name: message_retry_total
    description: total number of retries to allow for sending message. Default is
      3.
    defaultValue: '3'
    types:
    - <xref:int>
  - name: message_retry_backoff_factor
    description: 'A backoff factor to apply between attempts after the second try

      (most errors are resolved immediately by a second try without a delay). In fixed
      mode, retry policy will always

      sleep for {backoff factor}. In ''exponential'' mode, retry policy will sleep
      for:

      "{backoff factor} * (2 ** ({number of retries} - 1))" seconds. If the backoff_factor
      is 0.1, then the

      retry will sleep for [0.0s, 0.2s, 0.4s, ...] between retries. The default value
      is 0.8.'
    defaultValue: '0.8'
    types:
    - <xref:float>
  - name: message_retry_backoff_max
    description: The maximum back off time. Default value is 120.0 seconds
    defaultValue: '120.0'
    types:
    - <xref:float>
  - name: message_retry_mode
    description: Fixed or exponential delay between attemps, default is exponential.
    defaultValue: RetryMode.Exponential
    types:
    - <xref:RetryMode>
  - name: auto_rejoin_groups
    description: auto_rejoin_groups, default is True
  - name: logging_enable
    description: Whether to output network trace logs to the logger. Default is *False*.
    types:
    - <xref:bool>
  - name: ack_timeout
    description: Time limit to wait for ack message from server. The default value
      is 30.0 seconds.
    defaultValue: '30.0'
    types:
    - <xref:float>
  - name: start_timeout
    description: Time limit to wait for successful client open. The default value
      is 30.0 seconds.
    defaultValue: '30.0'
    types:
    - <xref:float>
  - name: user_agent
    description: 'The user agent to be used for the request. If specified, this will
      be added in front of

      the default user agent string.'
    types:
    - <xref:str>
methods:
- uid: azure.messaging.webpubsubclient.WebPubSubClient.close
  name: close
  summary: close the client
  signature: close() -> None
- uid: azure.messaging.webpubsubclient.WebPubSubClient.is_connected
  name: is_connected
  summary: check whether the client is still connected to server after open
  signature: is_connected() -> bool
  return:
    description: True if the client is connected to server, otherwise False
    types:
    - <xref:bool>
- uid: azure.messaging.webpubsubclient.WebPubSubClient.join_group
  name: join_group
  summary: Join the client to group.
  signature: 'join_group(group_name: str, **kwargs: Any) -> None'
  parameters:
  - name: group_name
    description: The group name. Required.
    isRequired: true
    types:
    - <xref:str.>
  keywordOnlyParameters:
  - name: ack_id
    description: The optional ackId. If not specified, client will generate one.
    types:
    - <xref:int>
- uid: azure.messaging.webpubsubclient.WebPubSubClient.leave_group
  name: leave_group
  summary: 'Leave the client from group

    :param group_name: The group name. Required.

    :type group_name: str.

    :keyword int ack_id: The optional ackId. If not specified, client will generate
    one.'
  signature: 'leave_group(group_name: str, **kwargs: Any) -> None'
  parameters:
  - name: group_name
    isRequired: true
- uid: azure.messaging.webpubsubclient.WebPubSubClient.open
  name: open
  summary: open the client and connect to service
  signature: open() -> None
- uid: azure.messaging.webpubsubclient.WebPubSubClient.send_event
  name: send_event
  summary: 'Send custom event to server. For more info about event handler in web
    pubsub, please refer

    to [https://learn.microsoft.com/en-us/azure/azure-web-pubsub/howto-develop-eventhandler](https://learn.microsoft.com/en-us/azure/azure-web-pubsub/howto-develop-eventhandler)'
  signature: 'send_event(event_name: str, content: str, data_type: ~typing.Literal[<WebPubSubDataType.TEXT:
    ''text''>], **kwargs: ~typing.Any) -> None'
  parameters:
  - name: event_name
    description: The event name. Required.
    isRequired: true
    types:
    - <xref:str.>
  - name: content
    description: 'The data content that you want to send to event handler that registered
      in web

      pubsub. Required.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:memoryview>, <xref:typing.Dict>[<xref:str>,
      <xref:typing.Any>]]<xref:./>
  - name: data_type
    description: The data type. Required.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:azure.messaging.webpubsubclient.models.WebPubSubDataType>,
      <xref:str>]<xref:./>
  keywordOnlyParameters:
  - name: ack_id
    description: The optional ackId. If not specified, client will generate one.
    types:
    - <xref:int>
  - name: ack
    description: 'If False, the message won''t contains ackId and no AckMessage

      will be returned from the service. Default is True.'
    types:
    - <xref:bool>
- uid: azure.messaging.webpubsubclient.WebPubSubClient.send_to_group
  name: send_to_group
  summary: "Send message to group.\n:param group_name: The group name. Required.\n\
    :type group_name: str.\n:param content: The data content. Required.\n:type content:\
    \ Union[str, memoryview, Dict[str, Any]].\n:param data_type: The data type. Required.\n\
    :type data_type: ~azure.messaging.webpubsubclient.models.WebPubSubDataType or\
    \ str.\n:keyword int ack_id: The optional ackId. If not specified, client will\
    \ generate one.\n:keyword bool ack: If False, the message won't contains ackId\
    \ and no AckMessage\n\n   will be returned from the service. Default is True."
  signature: 'send_to_group(group_name: str, content: str, data_type: ~typing.Literal[<WebPubSubDataType.TEXT:
    ''text''>], **kwargs: ~typing.Any) -> None'
  parameters:
  - name: group_name
    isRequired: true
  - name: content
    isRequired: true
  - name: data_type
    isRequired: true
  keywordOnlyParameters:
  - name: no_echo
    description: Whether the message needs to echo to sender. Default is False.
    types:
    - <xref:bool>
- uid: azure.messaging.webpubsubclient.WebPubSubClient.subscribe
  name: subscribe
  summary: 'Add handler.

    :param event: The event name. Required.

    :type event: ~azure.messaging.webpubsubclient.models.CallbackType

    :param listener: The handler

    :type listener: callable.'
  signature: 'subscribe(event: ~typing.Literal[<CallbackType.CONNECTED: ''connected''>],
    listener: ~typing.Callable[[~azure.messaging.webpubsubclient.models._models.OnConnectedArgs],
    None]) -> None'
  parameters:
  - name: event
    isRequired: true
  - name: listener
    isRequired: true
- uid: azure.messaging.webpubsubclient.WebPubSubClient.unsubscribe
  name: unsubscribe
  summary: 'Remove handler for rejoining group failed.

    :param event: The event name. Required.

    :type event: ~azure.messaging.webpubsubclient.models.CallbackType

    :param listener: The handler

    :type listener: callable.'
  signature: 'unsubscribe(event: ~typing.Literal[<CallbackType.CONNECTED: ''connected''>],
    listener: ~typing.Callable[[~azure.messaging.webpubsubclient.models._models.OnConnectedArgs],
    None]) -> None'
  parameters:
  - name: event
    isRequired: true
  - name: listener
    isRequired: true
