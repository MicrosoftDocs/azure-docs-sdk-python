### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.SpeechRecognizer.canceled
  - azure.cognitiveservices.speech.SpeechRecognizer.recognize_once
  - azure.cognitiveservices.speech.SpeechRecognizer.recognize_once_async
  - azure.cognitiveservices.speech.SpeechRecognizer.recognized
  - azure.cognitiveservices.speech.SpeechRecognizer.recognizing
  class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.cognitiveservices.speech.Recognizer
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: SpeechRecognizer
  summary: 'A speech recognizer.

    If you need to specify source language information, please only specify one of
    these three parameters, language, source_language_config or auto_detect_source_language_config.'
  syntax:
    content: 'SpeechRecognizer(speech_config: azure.cognitiveservices.speech.SpeechConfig,
      audio_config: typing.Union[azure.cognitiveservices.speech.audio.AudioConfig,
      NoneType] = None, language: typing.Union[str, NoneType] = None, source_language_config:
      typing.Union[azure.cognitiveservices.speech.languageconfig.SourceLanguageConfig,
      NoneType] = None, auto_detect_source_language_config: typing.Union[azure.cognitiveservices.speech.languageconfig.AutoDetectSourceLanguageConfig,
      NoneType] = None)'
    parameters:
    - description: The config for the speech recognizer
      id: speech_config
    - description: The config for the audio input
      id: audio_config
    - description: The source language
      id: language
    - description: The source language config
      id: source_language_config
    - description: The auto detection source language config
      id: auto_detect_source_language_config
  type: class
  uid: azure.cognitiveservices.speech.SpeechRecognizer
- class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer.canceled
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: canceled
  summary: 'Signal for events containing canceled recognition results (indicating
    a recognition attempt

    that was canceled as a result or a direct cancellation request or, alternatively,
    a

    transport or protocol failure).


    Callbacks connected to this signal are called with a

    <xref:azure.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs>, instance
    as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechRecognizer.canceled
- class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognize_once() -> azure.cognitiveservices.speech.SpeechRecognitionResult
  namewithoutparameters: recognize_once
  summary: 'Performs recognition in a blocking (synchronous) mode. Returns after a
    single utterance is

    recognized. The end of a single utterance is determined by listening for silence
    at the end

    or until a maximum of 15 seconds of audio is processed. The task returns the recognition

    text as result. For long-running multi-utterance recognition, use

    <xref:azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async>
    instead.'
  syntax:
    content: recognize_once() -> azure.cognitiveservices.speech.SpeechRecognitionResult
    return:
      description: The result value of the synchronous recognition.
  type: method
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once
- class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
  namewithoutparameters: recognize_once_async
  summary: 'Performs recognition in a non-blocking (asynchronous) mode. This will
    recognize a single

    utterance. The end of a single utterance is determined by listening for silence
    at the end

    or until a maximum of 15 seconds of audio is processed. For long-running multi-utterance

    recognition, use <xref:azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async>
    instead.'
  syntax:
    content: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
    return:
      description: A future containing the result value of the asynchronous recognition.
  type: method
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once_async
- class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognized
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognized
  summary: 'Signal for events containing final recognition results (indicating a successful

    recognition attempt).


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechRecognitionEventArgs>

    instance as the single argument, dependent on the type of recognizer.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognized
- class: azure.cognitiveservices.speech.SpeechRecognizer
  fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognizing
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognizing
  summary: 'Signal for events containing intermediate recognition results.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechRecognitionEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognizing
references:
- fullName: azure.cognitiveservices.speech.SpeechRecognizer.canceled
  isExternal: false
  name: canceled
  parent: azure.cognitiveservices.speech.SpeechRecognizer
  uid: azure.cognitiveservices.speech.SpeechRecognizer.canceled
- fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once
  isExternal: false
  name: recognize_once() -> azure.cognitiveservices.speech.SpeechRecognitionResult
  parent: azure.cognitiveservices.speech.SpeechRecognizer
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once
- fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once_async
  isExternal: false
  name: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
  parent: azure.cognitiveservices.speech.SpeechRecognizer
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognize_once_async
- fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognized
  isExternal: false
  name: recognized
  parent: azure.cognitiveservices.speech.SpeechRecognizer
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognized
- fullName: azure.cognitiveservices.speech.SpeechRecognizer.recognizing
  isExternal: false
  name: recognizing
  parent: azure.cognitiveservices.speech.SpeechRecognizer
  uid: azure.cognitiveservices.speech.SpeechRecognizer.recognizing
