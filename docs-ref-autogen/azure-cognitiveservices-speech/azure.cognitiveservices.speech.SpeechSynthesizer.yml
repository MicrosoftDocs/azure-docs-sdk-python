### YamlMime:PythonClass
uid: azure.cognitiveservices.speech.SpeechSynthesizer
name: SpeechSynthesizer
fullName: azure.cognitiveservices.speech.SpeechSynthesizer
module: azure.cognitiveservices.speech
inheritances:
- builtins.object
summary: A speech synthesizer.
constructor:
  syntax: 'SpeechSynthesizer(speech_config: azure.cognitiveservices.speech.SpeechConfig,
    audio_config: Optional[azure.cognitiveservices.speech.audio.AudioOutputConfig]
    = ''None'', auto_detect_source_language_config: Optional[azure.cognitiveservices.speech.languageconfig.AutoDetectSourceLanguageConfig]
    = None)'
  parameters:
  - name: speech_config
    description: The config for the speech synthesizer
    isRequired: true
  - name: audio_config
    description: 'The config for the audio output.

      This parameter is optional.

      If it is not provided, the default speaker device will be used for audio output.

      If it is None, the output audio will be dropped.

      None can be used for scenarios like performance test.'
    isRequired: true
  - name: auto_detect_source_language_config
    description: The auto detection source language config
    isRequired: true
methods:
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.get_voices_async
  name: get_voices_async
  summary: Get the available voices, asynchronously.
  signature: 'get_voices_async(locale: str = '''') -> azure.cognitiveservices.speech.ResultFuture'
  parameters:
  - name: locale
    description: Specify the locale of voices, in BCP-47 format; or leave it empty
      to get all available voices.
    isRequired: true
  return:
    description: A task representing the asynchronous operation that gets the voices.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
  name: speak_ssml
  summary: Performs synthesis on ssml in a blocking (synchronous) mode.
  signature: 'speak_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parameters:
  - name: ssml
    isRequired: true
  return:
    description: A SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
  name: speak_ssml_async
  summary: Performs synthesis on ssml in a non-blocking (asynchronous) mode.
  signature: 'speak_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  parameters:
  - name: ssml
    isRequired: true
  return:
    description: A future with SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
  name: speak_text
  summary: Performs synthesis on plain text in a blocking (synchronous) mode.
  signature: 'speak_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parameters:
  - name: text
    isRequired: true
  return:
    description: A SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
  name: speak_text_async
  summary: Performs synthesis on plain text in a non-blocking (asynchronous) mode.
  signature: 'speak_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  parameters:
  - name: text
    isRequired: true
  return:
    description: A future with SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
  name: start_speaking_ssml
  summary: Starts synthesis on ssml in a blocking (synchronous) mode.
  signature: 'start_speaking_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parameters:
  - name: ssml
    isRequired: true
  return:
    description: A SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
  name: start_speaking_ssml_async
  summary: Starts synthesis on ssml in a non-blocking (asynchronous) mode.
  signature: 'start_speaking_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  parameters:
  - name: ssml
    isRequired: true
  return:
    description: A future with SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
  name: start_speaking_text
  summary: Starts synthesis on plain text in a blocking (synchronous) mode.
  signature: 'start_speaking_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parameters:
  - name: text
    isRequired: true
  return:
    description: A SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
  name: start_speaking_text_async
  summary: Starts synthesis on plain text in a non-blocking (asynchronous) mode.
  signature: 'start_speaking_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  parameters:
  - name: text
    isRequired: true
  return:
    description: A future with SpeechSynthesisResult.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.stop_speaking
  name: stop_speaking
  summary: 'Synchronously terminates ongoing synthesis operation.

    This method will stop playback and clear unread data in PullAudioOutputStream.'
  signature: stop_speaking()
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.stop_speaking_async
  name: stop_speaking_async
  summary: 'Asynchronously terminates ongoing synthesis operation.

    This method will stop playback and clear unread data in PullAudioOutputStream.'
  signature: stop_speaking_async()
  return:
    description: A future that is fulfilled once synthesis has been stopped.
attributes:
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. Otherwise, the synthesizer will encounter errors while speech
    synthesis.

    >'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.bookmark_reached
  name: bookmark_reached
  summary: 'Signal for events indicating a bookmark is reached.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisBookmarkEventArgs>

    instance as the single argument.



    > [!NOTE]

    > Added in version 1.16.0.

    >'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.properties
  name: properties
  summary: A collection of properties and their values defined for this SpeechSynthesizer.
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
  name: synthesis_canceled
  summary: 'Signal for events indicating synthesis has been canceled.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
  name: synthesis_completed
  summary: 'Signal for events indicating synthesis has completed.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
  name: synthesis_started
  summary: 'Signal for events indicating synthesis has started.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
  name: synthesis_word_boundary
  summary: 'Signal for events indicating a word boundary.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisWordBoundaryEventArgs>

    instance as the single argument.'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
  name: synthesizing
  summary: 'Signal for events indicating synthesis is ongoing.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
- uid: azure.cognitiveservices.speech.SpeechSynthesizer.viseme_received
  name: viseme_received
  summary: 'Signal for events indicating a viseme is received.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisVisemeEventArgs>

    instance as the single argument.



    > [!NOTE]

    > Added in version 1.16.0.

    >'
