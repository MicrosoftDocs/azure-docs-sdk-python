### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
  - azure.cognitiveservices.speech.SpeechSynthesizer.properties
  - azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
  - azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
  - azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
  - azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
  - azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
  - azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
  - azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
  - azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
  - azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
  - azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
  - azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
  - azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
  - azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
  class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: SpeechSynthesizer
  summary: A speech synthesizer.
  syntax:
    content: 'SpeechSynthesizer(speech_config: azure.cognitiveservices.speech.SpeechConfig,
      audio_config: typing.Union[azure.cognitiveservices.speech.audio.AudioOutputConfig,
      NoneType] = ''None'', auto_detect_source_language_config: typing.Union[azure.cognitiveservices.speech.languageconfig.AutoDetectSourceLanguageConfig,
      NoneType] = None)'
    parameters:
    - description: The config for the speech synthesizer
      id: speech_config
    - description: 'The config for the audio output.

        This parameter is optional.

        If it is not provided, the default speaker device will be used for audio output.

        If it is None, the output audio will be dropped.

        None can be used for scenarios like performance test.'
      id: audio_config
    - description: The auto detection source language config
      id: auto_detect_source_language_config
  type: class
  uid: azure.cognitiveservices.speech.SpeechSynthesizer
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. Otherwise, the synthesizer will encounter errors while speech
    synthesis.

    >'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.properties
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: properties
  summary: A collection of properties and their values defined for this SpeechSynthesizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.properties
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'speak_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  namewithoutparameters: speak_ssml
  summary: Performs synthesis on ssml in a blocking (synchronous) mode.
  syntax:
    content: 'speak_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
    return:
      description: A SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'speak_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  namewithoutparameters: speak_ssml_async
  summary: Performs synthesis on ssml in a non-blocking (asynchronous) mode.
  syntax:
    content: 'speak_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
    return:
      description: A future with SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'speak_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  namewithoutparameters: speak_text
  summary: Performs synthesis on plain text in a blocking (synchronous) mode.
  syntax:
    content: 'speak_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
    return:
      description: A SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'speak_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  namewithoutparameters: speak_text_async
  summary: Performs synthesis on plain text in a non-blocking (asynchronous) mode.
  syntax:
    content: 'speak_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
    return:
      description: A future with SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_speaking_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  namewithoutparameters: start_speaking_ssml
  summary: Starts synthesis on ssml in a blocking (synchronous) mode.
  syntax:
    content: 'start_speaking_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
    return:
      description: A SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_speaking_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  namewithoutparameters: start_speaking_ssml_async
  summary: Starts synthesis on ssml in a non-blocking (asynchronous) mode.
  syntax:
    content: 'start_speaking_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
    return:
      description: A future with SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_speaking_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  namewithoutparameters: start_speaking_text
  summary: Starts synthesis on plain text in a blocking (synchronous) mode.
  syntax:
    content: 'start_speaking_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
    return:
      description: A SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_speaking_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  namewithoutparameters: start_speaking_text_async
  summary: Starts synthesis on plain text in a non-blocking (asynchronous) mode.
  syntax:
    content: 'start_speaking_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
    return:
      description: A future with SpeechSynthesisResult.
  type: method
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: synthesis_canceled
  summary: 'Signal for events indicating synthesis has been canceled.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: synthesis_completed
  summary: 'Signal for events indicating synthesis has completed.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: synthesis_started
  summary: 'Signal for events indicating synthesis has started.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: synthesis_word_boundary
  summary: 'Signal for events indicating a word boundary.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisWordBoundaryEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
- class: azure.cognitiveservices.speech.SpeechSynthesizer
  fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: synthesizing
  summary: 'Signal for events indicating synthesis is ongoing.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechSynthesisEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
references:
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
  isExternal: false
  name: authorization_token
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.authorization_token
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.properties
  isExternal: false
  name: properties
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.properties
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
  isExternal: false
  name: 'speak_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
  isExternal: false
  name: 'speak_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_ssml_async
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
  isExternal: false
  name: 'speak_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
  isExternal: false
  name: 'speak_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.speak_text_async
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
  isExternal: false
  name: 'start_speaking_ssml(ssml: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
  isExternal: false
  name: 'start_speaking_ssml_async(ssml: str) -> azure.cognitiveservices.speech.ResultFuture'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_ssml_async
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
  isExternal: false
  name: 'start_speaking_text(text: str) -> azure.cognitiveservices.speech.SpeechSynthesisResult'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
  isExternal: false
  name: 'start_speaking_text_async(text: str) -> azure.cognitiveservices.speech.ResultFuture'
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.start_speaking_text_async
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
  isExternal: false
  name: synthesis_canceled
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_canceled
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
  isExternal: false
  name: synthesis_completed
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_completed
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
  isExternal: false
  name: synthesis_started
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_started
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
  isExternal: false
  name: synthesis_word_boundary
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesis_word_boundary
- fullName: azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
  isExternal: false
  name: synthesizing
  parent: azure.cognitiveservices.speech.SpeechSynthesizer
  uid: azure.cognitiveservices.speech.SpeechSynthesizer.synthesizing
