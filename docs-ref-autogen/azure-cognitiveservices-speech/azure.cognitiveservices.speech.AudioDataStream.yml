### YamlMime:PythonClass
uid: azure.cognitiveservices.speech.AudioDataStream
name: AudioDataStream
fullName: azure.cognitiveservices.speech.AudioDataStream
module: azure.cognitiveservices.speech
inheritances:
- builtins.object
summary: 'Represents audio data stream used for operating audio data as a stream.


  Generates an audio data stream from a speech synthesis result (type SpeechSynthesisResult)

  or a keyword recognition result (type KeywordRecognitionResult).'
constructor:
  syntax: AudioDataStream(result=None)
  parameters:
  - name: result
    description: The speech synthesis or keyword recognition result.
    isRequired: true
methods:
- uid: azure.cognitiveservices.speech.AudioDataStream.can_read_data
  name: can_read_data
  summary: 'Check whether the stream has enough data to be read,

    starting from the specified position (if specified).'
  signature: 'can_read_data(requested_bytes: int, pos: Optional[int] = None) -> bool'
  parameters:
  - name: requested_bytes
    description: The requested data size in bytes.
    isRequired: true
  - name: pos
    description: 'The position to start with.

      Will start from current position if this param is not given.'
    defaultValue: None
  return:
    description: A bool indicating the result
- uid: azure.cognitiveservices.speech.AudioDataStream.detach_input
  name: detach_input
  summary: Stop any more data from getting to the stream.
  signature: detach_input()
- uid: azure.cognitiveservices.speech.AudioDataStream.read_data
  name: read_data
  summary: 'Reads the audio data from the audio data stream,

    starting from the specified position (if specified).

    The maximal number of bytes to be read is determined by the size of audio_buffer.

    If there is no data immediately available, read_data() blocks until

    the next data becomes available.'
  signature: 'read_data(audio_buffer: bytes, pos: Optional[int] = None) -> int'
  parameters:
  - name: audio_buffer
    description: The buffer to receive the audio data.
    isRequired: true
  - name: pos
    description: 'The position to start with.

      Will start from current position if this param is not given.'
    defaultValue: None
  return:
    description: 'The number of bytes filled, or 0 in case the stream hits its end
      and

      there is no more data available.'
- uid: azure.cognitiveservices.speech.AudioDataStream.save_to_wav_file
  name: save_to_wav_file
  summary: Save the audio data to a file, synchronously.
  signature: 'save_to_wav_file(file_name: str)'
  parameters:
  - name: file_name
    description: Name of the file to be saved to
    isRequired: true
- uid: azure.cognitiveservices.speech.AudioDataStream.save_to_wav_file_async
  name: save_to_wav_file_async
  summary: Save the audio data to a file, asynchronously.
  signature: 'save_to_wav_file_async(file_name: str)'
  parameters:
  - name: file_name
    description: Name of the file to be saved to
    isRequired: true
  return:
    description: An asynchronous operation representing the saving.
attributes:
- uid: azure.cognitiveservices.speech.AudioDataStream.position
  name: position
  summary: Current position of the audio data stream.
- uid: azure.cognitiveservices.speech.AudioDataStream.status
  name: status
  summary: Current status of the audio data stream.
