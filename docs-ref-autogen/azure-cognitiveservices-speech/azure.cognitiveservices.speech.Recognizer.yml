### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.Recognizer.authorization_token
  - azure.cognitiveservices.speech.Recognizer.canceled
  - azure.cognitiveservices.speech.Recognizer.endpoint_id
  - azure.cognitiveservices.speech.Recognizer.properties
  - azure.cognitiveservices.speech.Recognizer.recognize_once
  - azure.cognitiveservices.speech.Recognizer.recognize_once_async
  - azure.cognitiveservices.speech.Recognizer.recognized
  - azure.cognitiveservices.speech.Recognizer.recognizing
  - azure.cognitiveservices.speech.Recognizer.session_started
  - azure.cognitiveservices.speech.Recognizer.session_stopped
  - azure.cognitiveservices.speech.Recognizer.speech_end_detected
  - azure.cognitiveservices.speech.Recognizer.speech_start_detected
  - azure.cognitiveservices.speech.Recognizer.start_continuous_recognition
  - azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async
  - azure.cognitiveservices.speech.Recognizer.start_keyword_recognition
  - azure.cognitiveservices.speech.Recognizer.start_keyword_recognition_async
  - azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition
  - azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async
  - azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition
  - azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition_async
  class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: Recognizer
  summary: Base class for different recognizers
  syntax: {}
  type: class
  uid: azure.cognitiveservices.speech.Recognizer
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.authorization_token
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. Otherwise, the recognizer will encounter errors during recognition.

    >'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.authorization_token
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.canceled
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: canceled
  summary: 'Signal for events containing canceled recognition results (indicating
    a recognition attempt

    that was canceled as a result or a direct cancellation request or, alternatively,
    a

    transport or protocol failure).


    Callbacks connected to this signal are called with a

    <xref:azure.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs>,

    <xref:azure.cognitiveservices.speech.TranslationRecognitionCanceledEventArgs>
    or

    <xref:azure.cognitiveservices.speech.IntentRecognitionCanceledEventArgs> instance
    as the single argument, dependent on

    the type of recognizer.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.canceled
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.endpoint_id
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: endpoint_id
  summary: The endpoint ID of a customized speech model that is used for recognition.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.endpoint_id
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.properties
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: properties
  summary: A collection of properties and their values defined for this Recognizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.properties
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.recognize_once
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognize_once
  namewithoutparameters: recognize_once
  summary: 'Performs recognition in a blocking (synchronous) mode. Returns after a
    single utterance is

    recognized. The end of a single utterance is determined by listening for silence
    at the end

    or until a maximum of 15 seconds of audio is processed. The task returns the recognition

    text as result. For long-running multi-utterance recognition, use

    <xref:azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async>
    instead.'
  syntax:
    return:
      description: The result value of the synchronous recognition.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.recognize_once
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.recognize_once_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
  namewithoutparameters: recognize_once_async
  summary: 'Performs recognition in a non-blocking (asynchronous) mode. This will
    recognize a single

    utterance. The end of a single utterance is determined by listening for silence
    at the end

    or until a maximum of 15 seconds of audio is processed. For long-running multi-utterance

    recognition, use <xref:azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async>
    instead.'
  syntax:
    content: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
    return:
      description: A future containing the result value of the asynchronous recognition.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.recognize_once_async
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.recognized
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognized
  summary: 'Signal for events containing final recognition results (indicating a successful

    recognition attempt).


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechRecognitionEventArgs>,

    <xref:azure.cognitiveservices.speech.TranslationRecognitionEventArgs> or <xref:azure.cognitiveservices.speech.IntentRecognitionEventArgs>
    instance

    as the single argument, dependent on the type of recognizer.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.recognized
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.recognizing
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: recognizing
  summary: 'Signal for events containing intermediate recognition results.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SpeechRecognitionEventArgs>,

    <xref:azure.cognitiveservices.speech.TranslationRecognitionEventArgs> or <xref:azure.cognitiveservices.speech.IntentRecognitionEventArgs>
    instance

    as the single argument, dependent on the type of recognizer.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.recognizing
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.session_started
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: session_started
  summary: 'Signal for events indicating the start of a recognition session (operation).


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SessionEventArgs>
    instance as

    the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.session_started
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.session_stopped
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: session_stopped
  summary: 'Signal for events indicating the end of a recognition session (operation).


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.SessionEventArgs>
    instance as

    the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.session_stopped
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.speech_end_detected
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_end_detected
  summary: 'Signal for events indicating the end of speech.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.RecognitionEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.speech_end_detected
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.speech_start_detected
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_start_detected
  summary: 'Signal for events indicating the start of speech.


    Callbacks connected to this signal are called with a <xref:azure.cognitiveservices.speech.RecognitionEventArgs>

    instance as the single argument.'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.Recognizer.speech_start_detected
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: start_continuous_recognition()
  namewithoutparameters: start_continuous_recognition
  summary: 'Synchronously initiates continuous recognition operation. User has to
    connect to

    EventSignal to receive recognition results. Call

    <xref:azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async>
    to stop the recognition.'
  syntax:
    content: start_continuous_recognition()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: start_continuous_recognition_async()
  namewithoutparameters: start_continuous_recognition_async
  summary: 'Asynchronously initiates continuous recognition operation. User has to
    connect to

    EventSignal to receive recognition results. Call

    <xref:azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async>
    to stop the recognition.'
  syntax:
    content: start_continuous_recognition_async()
    parameters: []
    return:
      description: A future that is fulfilled once recognition has been initialized.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_keyword_recognition(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
  namewithoutparameters: start_keyword_recognition
  summary: Synchronously initiates keyword recognition operation.
  syntax:
    content: 'start_keyword_recognition(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
    parameters:
    - description: the keyword recognition model that specifies the keyword to be
        recognized.
      id: model
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'start_keyword_recognition_async(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
  namewithoutparameters: start_keyword_recognition_async
  summary: Asynchronously initiates keyword recognition operation.
  syntax:
    content: 'start_keyword_recognition_async(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
    parameters:
    - description: the keyword recognition model that specifies the keyword to be
        recognized.
      id: model
      isRequired: true
    return:
      description: A future that is fulfilled once recognition has been initialized.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition_async
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: stop_continuous_recognition()
  namewithoutparameters: stop_continuous_recognition
  summary: Synchronously terminates ongoing continuous recognition operation.
  syntax:
    content: stop_continuous_recognition()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: stop_continuous_recognition_async()
  namewithoutparameters: stop_continuous_recognition_async
  summary: Asynchronously terminates ongoing continuous recognition operation.
  syntax:
    content: stop_continuous_recognition_async()
    parameters: []
    return:
      description: A future that is fulfilled once recognition has been stopped.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: stop_keyword_recognition()
  namewithoutparameters: stop_keyword_recognition
  summary: Synchronously terminates ongoing keyword recognition operation.
  syntax:
    content: stop_keyword_recognition()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition
- class: azure.cognitiveservices.speech.Recognizer
  fullName: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition_async
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: stop_keyword_recognition_async()
  namewithoutparameters: stop_keyword_recognition_async
  summary: Asynchronously terminates ongoing keyword recognition operation.
  syntax:
    content: stop_keyword_recognition_async()
    parameters: []
    return:
      description: A future that is fulfilled once recognition has been stopped.
  type: method
  uid: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition_async
references:
- fullName: azure.cognitiveservices.speech.Recognizer.authorization_token
  isExternal: false
  name: authorization_token
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.authorization_token
- fullName: azure.cognitiveservices.speech.Recognizer.canceled
  isExternal: false
  name: canceled
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.canceled
- fullName: azure.cognitiveservices.speech.Recognizer.endpoint_id
  isExternal: false
  name: endpoint_id
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.endpoint_id
- fullName: azure.cognitiveservices.speech.Recognizer.properties
  isExternal: false
  name: properties
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.properties
- fullName: azure.cognitiveservices.speech.Recognizer.recognize_once
  isExternal: false
  name: recognize_once
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.recognize_once
- fullName: azure.cognitiveservices.speech.Recognizer.recognize_once_async
  isExternal: false
  name: recognize_once_async() -> azure.cognitiveservices.speech.ResultFuture
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.recognize_once_async
- fullName: azure.cognitiveservices.speech.Recognizer.recognized
  isExternal: false
  name: recognized
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.recognized
- fullName: azure.cognitiveservices.speech.Recognizer.recognizing
  isExternal: false
  name: recognizing
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.recognizing
- fullName: azure.cognitiveservices.speech.Recognizer.session_started
  isExternal: false
  name: session_started
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.session_started
- fullName: azure.cognitiveservices.speech.Recognizer.session_stopped
  isExternal: false
  name: session_stopped
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.session_stopped
- fullName: azure.cognitiveservices.speech.Recognizer.speech_end_detected
  isExternal: false
  name: speech_end_detected
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.speech_end_detected
- fullName: azure.cognitiveservices.speech.Recognizer.speech_start_detected
  isExternal: false
  name: speech_start_detected
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.speech_start_detected
- fullName: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition
  isExternal: false
  name: start_continuous_recognition()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition
- fullName: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async
  isExternal: false
  name: start_continuous_recognition_async()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.start_continuous_recognition_async
- fullName: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition
  isExternal: false
  name: 'start_keyword_recognition(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition
- fullName: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition_async
  isExternal: false
  name: 'start_keyword_recognition_async(model: azure.cognitiveservices.speech.KeywordRecognitionModel)'
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.start_keyword_recognition_async
- fullName: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition
  isExternal: false
  name: stop_continuous_recognition()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition
- fullName: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async
  isExternal: false
  name: stop_continuous_recognition_async()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.stop_continuous_recognition_async
- fullName: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition
  isExternal: false
  name: stop_keyword_recognition()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition
- fullName: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition_async
  isExternal: false
  name: stop_keyword_recognition_async()
  parent: azure.cognitiveservices.speech.Recognizer
  uid: azure.cognitiveservices.speech.Recognizer.stop_keyword_recognition_async
