### YamlMime:PythonClass
uid: azure.cognitiveservices.speech.Connection
name: Connection
fullName: azure.cognitiveservices.speech.Connection
module: azure.cognitiveservices.speech
inheritances:
- builtins.object
summary: 'Proxy class for managing the connection to the speech service of the specified

  <xref:azure.cognitiveservices.speech.Recognizer>.


  By default, a <xref:azure.cognitiveservices.speech.Recognizer> autonomously manages
  connection to service when needed. The

  <xref:azure.cognitiveservices.speech.Connection> class provides additional methods
  for users to explicitly open or close a

  connection and to subscribe to connection status changes. The use of <xref:azure.cognitiveservices.speech.Connection>
  is

  optional. It is intended for scenarios where fine tuning of application behavior
  based on connection

  status is needed. Users can optionally call <xref:azure.cognitiveservices.speech.Connection.open>
  to manually initiate a service connection

  before starting recognition on the <xref:azure.cognitiveservices.speech.Recognizer>
  associated with this <xref:azure.cognitiveservices.speech.Connection>.

  After starting a recognition, calling <xref:azure.cognitiveservices.speech.Connection.open>
  or <xref:azure.cognitiveservices.speech.Connection.close> might fail. This will
  not impact

  the Recognizer or the ongoing recognition. Connection might drop for various reasons,
  the Recognizer will

  always try to reinstitute the connection as required to guarantee ongoing operations.
  In all these cases

  <xref:azure.cognitiveservices.speech.Connection.connected>/<xref:azure.cognitiveservices.speech.Connection.disconnected>
  events will indicate the change of the connection status.


  > [!NOTE]

  > Updated in version 1.17.0.

  >


  Constructor for internal use.'
constructor:
  syntax: 'Connection(handle: c_void_p)'
  parameters:
  - name: handle
    isRequired: true
methods:
- uid: azure.cognitiveservices.speech.Connection.close
  name: close
  summary: 'Closes the connection the service. Users can optionally call <xref:azure.cognitiveservices.speech.Connection.close>
    to manually

    shutdown the connection of the associated <xref:azure.cognitiveservices.speech.Recognizer>.
    The call might fail,

    depending on the process state of the <xref:azure.cognitiveservices.speech.Recognizer>.
    But the failure does not affect

    the state of the associated <xref:azure.cognitiveservices.speech.Recognizer>.'
  signature: close()
- uid: azure.cognitiveservices.speech.Connection.from_dialog_service_connector
  name: from_dialog_service_connector
  summary: Gets the <xref:azure.cognitiveservices.speech.Connection> instance from
    the specified dialog service connector.
  signature: 'from_dialog_service_connector(dialog_service_connector: DialogServiceConnector)
    -> Connection'
  parameters:
  - name: dialog_service_connector
    isRequired: true
- uid: azure.cognitiveservices.speech.Connection.from_recognizer
  name: from_recognizer
  summary: Gets the <xref:azure.cognitiveservices.speech.Connection> instance from
    the specified recognizer.
  signature: 'from_recognizer(recognizer: Recognizer) -> Connection'
  parameters:
  - name: recognizer
    isRequired: true
- uid: azure.cognitiveservices.speech.Connection.from_speech_synthesizer
  name: from_speech_synthesizer
  summary: 'Gets the <xref:azure.cognitiveservices.speech.Connection> instance from
    the specified speech synthesizer.


    > [!NOTE]

    > Added in version 1.17.0.

    >'
  signature: 'from_speech_synthesizer(speech_synthesizer: SpeechSynthesizer) -> Connection'
  parameters:
  - name: speech_synthesizer
    isRequired: true
- uid: azure.cognitiveservices.speech.Connection.open
  name: open
  summary: 'Starts to set up connection to the service. Users can optionally call
    <xref:azure.cognitiveservices.speech.Connection.open> to

    manually set up a connection in advance before starting recognition on the

    <xref:azure.cognitiveservices.speech.Recognizer> associated with this <xref:azure.cognitiveservices.speech.Connection>.
    After starting recognition,

    calling <xref:azure.cognitiveservices.speech.Connection.open>) might fail, depending
    on the process state of the

    <xref:azure.cognitiveservices.speech.Recognizer>. But the failure does not affect
    the state of the associated

    <xref:azure.cognitiveservices.speech.Recognizer>.


    > [!NOTE]

    > On return, the connection might not be ready yet. Please subscribe to the

    >

    > connected event to be notified when the connection is established.

    >'
  signature: 'open(for_continuous_recognition: bool)'
  parameters:
  - name: forContinuousRecognition
    description: 'indicates whether the connection is used for continuous

      recognition or single-shot recognition. It takes no effect if the connection
      is from SpeechSynthsizer.'
    isRequired: true
  - name: for_continuous_recognition
    isRequired: true
- uid: azure.cognitiveservices.speech.Connection.set_message_property
  name: set_message_property
  summary: 'Appends a parameter in a message to service.


    > [!NOTE]

    > This method doesn''t work for the connection of <xref:azure.cognitiveservices.speech.SpeechSynthesizer>.

    >'
  signature: 'set_message_property(path: str, property_name: str, property_value:
    str)'
  parameters:
  - name: path
    description: The message path.
    isRequired: true
  - name: property_name
    description: The property name that you want to set.
    isRequired: true
  - name: property_value
    description: The value of the property that you want to set.
    isRequired: true
attributes:
- uid: azure.cognitiveservices.speech.Connection.connected
  name: connected
  summary: The Connected event to indicate that the recognizer is connected to service.
- uid: azure.cognitiveservices.speech.Connection.disconnected
  name: disconnected
  summary: The Disconnected event to indicate that the recognizer is disconnected
    from service.
