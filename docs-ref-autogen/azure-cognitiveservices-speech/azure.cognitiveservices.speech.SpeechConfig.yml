### YamlMime:PythonClass
uid: azure.cognitiveservices.speech.SpeechConfig
name: SpeechConfig
fullName: azure.cognitiveservices.speech.SpeechConfig
module: azure.cognitiveservices.speech
inheritances:
- builtins.object
summary: "Class that defines configurations for speech / intent recognition and speech\
  \ synthesis.\n\nThe configuration can be initialized in different ways:\n\n* from\
  \ subscription: pass a subscription key and a region \n\n* from endpoint: pass an\
  \ endpoint. Subscription key or authorization token are optional. \n\n* from host:\
  \ pass a host address. Subscription key or authorization token are optional. \n\n\
  * from authorization token: pass an authorization token and a region"
constructor:
  syntax: 'SpeechConfig(subscription: Optional[str] = None, region: Optional[str]
    = None, endpoint: Optional[str] = None, host: Optional[str] = None, auth_token:
    Optional[str] = None, speech_recognition_language: Optional[str] = None)'
  parameters:
  - name: subscription
    description: The subscription key.
    isRequired: true
  - name: region
    description: The region name (see the [region page](https://aka.ms/csspeech/region)).
    isRequired: true
  - name: endpoint
    description: The service endpoint to connect to.
    isRequired: true
  - name: host
    description: 'The service host to connect to. Standard resource path will be assumed.
      Format

      is "protocol://host:port" where ":port" is optional.'
    isRequired: true
  - name: auth_token
    description: The authorization token.
    isRequired: true
  - name: speech_recognition_language
    description: 'The input language to the speech recognition. The language

      is specified in BCP-47 format.'
    isRequired: true
methods:
- uid: azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
  name: enable_audio_logging
  summary: 'Enables audio logging in service.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  signature: enable_audio_logging()
- uid: azure.cognitiveservices.speech.SpeechConfig.enable_dictation
  name: enable_dictation
  summary: 'Enables dictation. Only supported in speech continuous recognition.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  signature: enable_dictation()
- uid: azure.cognitiveservices.speech.SpeechConfig.get_property
  name: get_property
  summary: Get a property by id.
  signature: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId)
    -> str'
  parameters:
  - name: property_id
    description: The id of the property to be retrieved.
    isRequired: true
  return:
    description: The value of the property.
- uid: azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
  name: get_property_by_name
  summary: Get a property by name.
  signature: 'get_property_by_name(property_name: str) -> str'
  parameters:
  - name: property_name
    description: The name of the property to be retrieved.
    isRequired: true
  return:
    description: The value of the property.
- uid: azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
  name: request_word_level_timestamps
  summary: 'Includes word level timestamps in response result.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  signature: request_word_level_timestamps()
- uid: azure.cognitiveservices.speech.SpeechConfig.set_profanity
  name: set_profanity
  summary: 'Set the profanity option.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  signature: 'set_profanity(profanity_option: azure.cognitiveservices.speech.ProfanityOption)
    -> str'
  parameters:
  - name: profanity_option
    description: The profanity level to set.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_properties
  name: set_properties
  summary: Set multiple properties by id.
  signature: 'set_properties(properties: Dict[azure.cognitiveservices.speech.PropertyId,
    str])'
  parameters:
  - name: properties
    description: A dict mapping property ids to the values to be set.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
  name: set_properties_by_name
  summary: Set multiple properties by name.
  signature: 'set_properties_by_name(properties: Dict[str, str])'
  parameters:
  - name: properties
    description: A dict mapping property ids to the values to be set.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_property
  name: set_property
  summary: Set a property by id.
  signature: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId,
    value: str)'
  parameters:
  - name: property_id
    description: The id of the property to be set.
    isRequired: true
  - name: value
    description: The value to be set for the property.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
  name: set_property_by_name
  summary: Set a property by name.
  signature: 'set_property_by_name(property_name: str, value: str)'
  parameters:
  - name: property_name
    description: The name of the property to be set.
    isRequired: true
  - name: value
    description: The value to be set for the property.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_proxy
  name: set_proxy
  summary: 'Set proxy information.



    > [!NOTE]

    > Proxy functionality is not available on macOS. This function will have no effect
    on

    >

    > this platform.

    >'
  signature: 'set_proxy(hostname: str, port: str, username: str, password: str)'
  parameters:
  - name: hostname
    description: 'The host name of the proxy server. Do not add protocol information
      (http)

      to the hostname.'
    isRequired: true
  - name: port
    description: The port number of the proxy server.
    isRequired: true
  - name: username
    description: The user name of the proxy server.
    isRequired: true
  - name: password
    description: The password of the proxy server.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_service_property
  name: set_service_property
  summary: 'Sets a property value that will be passed to service using the specified
    channel.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  signature: 'set_service_property(name: str, value: str, channel: azure.cognitiveservices.speech.ServicePropertyChannel)'
  parameters:
  - name: name
    description: The property name.
    isRequired: true
  - name: value
    description: The property value.
    isRequired: true
  - name: channel
    description: The channel used to pass the specified property to service.
    isRequired: true
- uid: azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
  name: set_speech_synthesis_output_format
  summary: Set speech synthesis output audio format.
  signature: 'set_speech_synthesis_output_format(format_id: azure.cognitiveservices.speech.SpeechSynthesisOutputFormat)'
  parameters:
  - name: format_id
    description: The audio format id, e.g. Riff16Khz16BitMonoPcm.
    isRequired: true
attributes:
- uid: azure.cognitiveservices.speech.SpeechConfig.authorization_token
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. As configuration values are copied when creating a new recognizer,
    the

    >

    > new token value will not apply to recognizers that have already been created.
    For

    >

    > recognizers that have been created before, you need to set authorization token
    of the

    >

    > corresponding recognizer to refresh the token. Otherwise, the recognizers will
    encounter

    >

    > errors during recognition.

    >'
- uid: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  name: endpoint_id
  summary: The endpoint id.
- uid: azure.cognitiveservices.speech.SpeechConfig.output_format
  name: output_format
  summary: The output format (simple or detailed) of the speech recognition result.
- uid: azure.cognitiveservices.speech.SpeechConfig.region
  name: region
  summary: The region key that was used to create the Recognizer.
- uid: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  name: speech_recognition_language
  summary: The name of spoken language to be recognized in BCP-47 format.
- uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
  name: speech_synthesis_language
  summary: Get speech synthesis language.
- uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
  name: speech_synthesis_output_format_string
  summary: Get speech synthesis output audio format string.
- uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
  name: speech_synthesis_voice_name
  summary: Get speech synthesis voice name.
- uid: azure.cognitiveservices.speech.SpeechConfig.subscription_key
  name: subscription_key
  summary: The subscription key that was used to create the Recognizer.
