### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.SpeechConfig.authorization_token
  - azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
  - azure.cognitiveservices.speech.SpeechConfig.enable_dictation
  - azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  - azure.cognitiveservices.speech.SpeechConfig.get_property
  - azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
  - azure.cognitiveservices.speech.SpeechConfig.output_format
  - azure.cognitiveservices.speech.SpeechConfig.region
  - azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
  - azure.cognitiveservices.speech.SpeechConfig.set_profanity
  - azure.cognitiveservices.speech.SpeechConfig.set_properties
  - azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
  - azure.cognitiveservices.speech.SpeechConfig.set_property
  - azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
  - azure.cognitiveservices.speech.SpeechConfig.set_proxy
  - azure.cognitiveservices.speech.SpeechConfig.set_service_property
  - azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
  - azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  - azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
  - azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
  - azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
  - azure.cognitiveservices.speech.SpeechConfig.subscription_key
  class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: SpeechConfig
  summary: "Class that defines configurations for speech / intent recognition and\
    \ speech synthesis.\n\nThe configuration can be initialized in different ways:\n\
    \n* from subscription: pass a subscription key and a region \n\n* from endpoint:\
    \ pass an endpoint. Subscription key or authorization token are optional. \n\n\
    * from host: pass a host address. Subscription key or authorization token are\
    \ optional. \n\n* from authorization token: pass an authorization token and a\
    \ region"
  syntax:
    content: 'SpeechConfig(subscription: typing.Union[str, NoneType] = None, region:
      typing.Union[str, NoneType] = None, endpoint: typing.Union[str, NoneType] =
      None, host: typing.Union[str, NoneType] = None, auth_token: typing.Union[str,
      NoneType] = None, speech_recognition_language: typing.Union[str, NoneType] =
      None)'
    parameters:
    - description: The subscription key.
      id: subscription
    - description: The region name (see the [region page](https://aka.ms/csspeech/region)).
      id: region
    - description: The service endpoint to connect to.
      id: endpoint
    - description: 'The service host to connect to. Standard resource path will be
        assumed. Format

        is "protocol://host:port" where ":port" is optional.'
      id: host
    - description: The authorization token.
      id: auth_token
    - description: 'The input language to the speech recognition. The language

        is specified in BCP-47 format.'
      id: speech_recognition_language
  type: class
  uid: azure.cognitiveservices.speech.SpeechConfig
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.authorization_token
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: authorization_token
  summary: 'The authorization token that will be used for connecting to the service.



    > [!NOTE]

    > The caller needs to ensure that the authorization token is valid. Before the

    >

    > authorization token expires, the caller needs to refresh it by calling this
    setter with a

    >

    > new valid token. As configuration values are copied when creating a new recognizer,
    the

    >

    > new token value will not apply to recognizers that have already been created.
    For

    >

    > recognizers that have been created before, you need to set authorization token
    of the

    >

    > corresponding recognizer to refresh the token. Otherwise, the recognizers will
    encounter

    >

    > errors during recognition.

    >'
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.authorization_token
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: enable_audio_logging()
  namewithoutparameters: enable_audio_logging
  summary: 'Enables audio logging in service.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  syntax:
    content: enable_audio_logging()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.enable_dictation
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: enable_dictation()
  namewithoutparameters: enable_dictation
  summary: 'Enables dictation. Only supported in speech continuous recognition.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  syntax:
    content: enable_dictation()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.enable_dictation
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: endpoint_id
  summary: The endpoint id.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.get_property
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId) -> str'
  namewithoutparameters: get_property
  summary: Get a property by id.
  syntax:
    content: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId)
      -> str'
    parameters:
    - description: The id of the property to be retrieved.
      id: property_id
      isRequired: true
    return:
      description: The value of the property.
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'get_property_by_name(property_name: str) -> str'
  namewithoutparameters: get_property_by_name
  summary: Get a property by name.
  syntax:
    content: 'get_property_by_name(property_name: str) -> str'
    parameters:
    - description: The name of the property to be retrieved.
      id: property_name
      isRequired: true
    return:
      description: The value of the property.
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.output_format
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: output_format
  summary: The output format (simple or detailed) of the speech recognition result.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.output_format
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.region
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: region
  summary: The region key that was used to create the Recognizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.region
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: request_word_level_timestamps()
  namewithoutparameters: request_word_level_timestamps
  summary: 'Includes word level timestamps in response result.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  syntax:
    content: request_word_level_timestamps()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_profanity
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_profanity(profanity_option: azure.cognitiveservices.speech.ProfanityOption)
    -> str'
  namewithoutparameters: set_profanity
  summary: 'Set the profanity option.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  syntax:
    content: 'set_profanity(profanity_option: azure.cognitiveservices.speech.ProfanityOption)
      -> str'
    parameters:
    - description: The profanity level to set.
      id: profanity_option
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_profanity
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
    str])'
  namewithoutparameters: set_properties
  summary: Set multiple properties by id.
  syntax:
    content: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
      str])'
    parameters:
    - description: A dict mapping property ids to the values to be set.
      id: properties
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_properties_by_name(properties: typing.Dict[str, str])'
  namewithoutparameters: set_properties_by_name
  summary: Set multiple properties by name.
  syntax:
    content: 'set_properties_by_name(properties: typing.Dict[str, str])'
    parameters:
    - description: A dict mapping property ids to the values to be set.
      id: properties
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_property
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId, value:
    str)'
  namewithoutparameters: set_property
  summary: Set a property by id.
  syntax:
    content: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId,
      value: str)'
    parameters:
    - description: The id of the property to be set.
      id: property_id
      isRequired: true
    - description: The value to be set for the property.
      id: value
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_property_by_name(property_name: str, value: str)'
  namewithoutparameters: set_property_by_name
  summary: Set a property by name.
  syntax:
    content: 'set_property_by_name(property_name: str, value: str)'
    parameters:
    - description: The name of the property to be set.
      id: property_name
      isRequired: true
    - description: The value to be set for the property.
      id: value
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_proxy
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_proxy(hostname: str, port: str, username: str, password: str)'
  namewithoutparameters: set_proxy
  summary: 'Set proxy information.



    > [!NOTE]

    > Proxy functionality is not available on macOS. This function will have no effect
    on

    >

    > this platform.

    >'
  syntax:
    content: 'set_proxy(hostname: str, port: str, username: str, password: str)'
    parameters:
    - description: 'The host name of the proxy server. Do not add protocol information
        (http)

        to the hostname.'
      id: hostname
      isRequired: true
    - description: The port number of the proxy server.
      id: port
      isRequired: true
    - description: The user name of the proxy server.
      id: username
      isRequired: true
    - description: The password of the proxy server.
      id: password
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_proxy
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_service_property
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_service_property(name: str, value: str, channel: azure.cognitiveservices.speech.ServicePropertyChannel)'
  namewithoutparameters: set_service_property
  summary: 'Sets a property value that will be passed to service using the specified
    channel.



    > [!NOTE]

    > Added in version 1.5.0.

    >'
  syntax:
    content: 'set_service_property(name: str, value: str, channel: azure.cognitiveservices.speech.ServicePropertyChannel)'
    parameters:
    - description: The property name.
      id: name
      isRequired: true
    - description: The property value.
      id: value
      isRequired: true
    - description: The channel used to pass the specified property to service.
      id: channel
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_service_property
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: 'set_speech_synthesis_output_format(format_id: azure.cognitiveservices.speech.SpeechSynthesisOutputFormat)'
  namewithoutparameters: set_speech_synthesis_output_format
  summary: Set speech synthesis output audio format.
  syntax:
    content: 'set_speech_synthesis_output_format(format_id: azure.cognitiveservices.speech.SpeechSynthesisOutputFormat)'
    parameters:
    - description: The audio format id, e.g. Riff16Khz16BitMonoPcm.
      id: format_id
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_recognition_language
  summary: The name of spoken language to be recognized in BCP-47 format.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_synthesis_language
  summary: Get speech synthesis language.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_synthesis_output_format_string
  summary: Get speech synthesis output audio format string.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: speech_synthesis_voice_name
  summary: Get speech synthesis voice name.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
- class: azure.cognitiveservices.speech.SpeechConfig
  fullName: azure.cognitiveservices.speech.SpeechConfig.subscription_key
  langs:
  - python
  module: azure.cognitiveservices.speech
  name: subscription_key
  summary: The subscription key that was used to create the Recognizer.
  syntax: {}
  type: attribute
  uid: azure.cognitiveservices.speech.SpeechConfig.subscription_key
references:
- fullName: azure.cognitiveservices.speech.SpeechConfig.authorization_token
  isExternal: false
  name: authorization_token
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.authorization_token
- fullName: azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
  isExternal: false
  name: enable_audio_logging()
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.enable_audio_logging
- fullName: azure.cognitiveservices.speech.SpeechConfig.enable_dictation
  isExternal: false
  name: enable_dictation()
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.enable_dictation
- fullName: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
  isExternal: false
  name: endpoint_id
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.endpoint_id
- fullName: azure.cognitiveservices.speech.SpeechConfig.get_property
  isExternal: false
  name: 'get_property(property_id: azure.cognitiveservices.speech.PropertyId) -> str'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property
- fullName: azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
  isExternal: false
  name: 'get_property_by_name(property_name: str) -> str'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.get_property_by_name
- fullName: azure.cognitiveservices.speech.SpeechConfig.output_format
  isExternal: false
  name: output_format
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.output_format
- fullName: azure.cognitiveservices.speech.SpeechConfig.region
  isExternal: false
  name: region
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.region
- fullName: azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
  isExternal: false
  name: request_word_level_timestamps()
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.request_word_level_timestamps
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_profanity
  isExternal: false
  name: 'set_profanity(profanity_option: azure.cognitiveservices.speech.ProfanityOption)
    -> str'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_profanity
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties
  isExternal: false
  name: 'set_properties(properties: typing.Dict[azure.cognitiveservices.speech.PropertyId,
    str])'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
  isExternal: false
  name: 'set_properties_by_name(properties: typing.Dict[str, str])'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_properties_by_name
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_property
  isExternal: false
  name: 'set_property(property_id: azure.cognitiveservices.speech.PropertyId, value:
    str)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
  isExternal: false
  name: 'set_property_by_name(property_name: str, value: str)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_property_by_name
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_proxy
  isExternal: false
  name: 'set_proxy(hostname: str, port: str, username: str, password: str)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_proxy
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_service_property
  isExternal: false
  name: 'set_service_property(name: str, value: str, channel: azure.cognitiveservices.speech.ServicePropertyChannel)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_service_property
- fullName: azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
  isExternal: false
  name: 'set_speech_synthesis_output_format(format_id: azure.cognitiveservices.speech.SpeechSynthesisOutputFormat)'
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.set_speech_synthesis_output_format
- fullName: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
  isExternal: false
  name: speech_recognition_language
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_recognition_language
- fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
  isExternal: false
  name: speech_synthesis_language
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_language
- fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
  isExternal: false
  name: speech_synthesis_output_format_string
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_output_format_string
- fullName: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
  isExternal: false
  name: speech_synthesis_voice_name
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.speech_synthesis_voice_name
- fullName: azure.cognitiveservices.speech.SpeechConfig.subscription_key
  isExternal: false
  name: subscription_key
  parent: azure.cognitiveservices.speech.SpeechConfig
  uid: azure.cognitiveservices.speech.SpeechConfig.subscription_key
