### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.connect
  - azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.disconnect_all
  - azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.is_connected
  class: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.speech.speech_py_impl
  name: IntentCanceledEventSignal
  summary: 'Clients can connect to the event signal to receive events, or disconnect
    from


    the event signal to stop receiving events.'
  syntax:
    content: IntentCanceledEventSignal(*args, **kwargs)
  type: class
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
- class: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.connect
  langs:
  - python
  module: azure.cognitiveservices.speech.speech_py_impl
  name: connect(func, wrapped_type)
  namewithoutparameters: connect
  summary: 'Connects given callback function to the event signal, to be invoked when
    the


    event is signalled.'
  syntax:
    content: connect(func, wrapped_type)
    parameters:
    - description: Callback to connect.
      id: callback
      isRequired: true
    - id: wrapped_type
      isRequired: true
  type: method
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.connect
- class: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.disconnect_all
  langs:
  - python
  module: azure.cognitiveservices.speech.speech_py_impl
  name: disconnect_all()
  namewithoutparameters: disconnect_all
  summary: Disconnects all registered callbacks.
  syntax:
    content: disconnect_all()
    parameters: []
  type: method
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.disconnect_all
- class: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.is_connected
  langs:
  - python
  module: azure.cognitiveservices.speech.speech_py_impl
  name: is_connected()
  namewithoutparameters: is_connected
  summary: Checks if a callback is connected.
  syntax:
    content: is_connected()
    parameters: []
    return:
      description: True if a callback is connected
  type: method
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.is_connected
references:
- fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.connect
  isExternal: false
  name: connect(func, wrapped_type)
  parent: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.connect
- fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.disconnect_all
  isExternal: false
  name: disconnect_all()
  parent: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.disconnect_all
- fullName: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.is_connected
  isExternal: false
  name: is_connected()
  parent: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal
  uid: azure.cognitiveservices.speech.speech_py_impl.IntentCanceledEventSignal.is_connected
