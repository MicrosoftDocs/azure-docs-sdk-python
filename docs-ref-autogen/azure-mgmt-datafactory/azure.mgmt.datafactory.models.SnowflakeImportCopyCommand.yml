### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.SnowflakeImportCopyCommand
  fullName: azure.mgmt.datafactory.models.SnowflakeImportCopyCommand
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.datafactory.models._models_py3.ImportSettings
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: SnowflakeImportCopyCommand
  summary: 'Snowflake import command settings.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: SnowflakeImportCopyCommand(*, additional_properties=None, additional_copy_options=None,
      additional_format_options=None, **kwargs) -> None
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Constant filled by server.
      id: type
      type:
      - str
    - description: 'Additional copy options directly passed to

        snowflake Copy Command. Type: key value pairs (value should be string

        type) (or Expression with resultType object). Example:

        "additionalCopyOptions": { "DATE_FORMAT": "MM/DD/YYYY", "TIME_FORMAT":

        "''HH24:MI:SS.FF''" }'
      id: additional_copy_options
      type:
      - dict[str, object]
    - description: 'Additional format options directly

        passed to snowflake Copy Command. Type: key value pairs (value should be

        string type) (or Expression with resultType object). Example:

        "additionalFormatOptions": { "FORCE": "TRUE", "LOAD_UNCERTAIN_FILES":

        "''FALSE''" }'
      id: additional_format_options
      type:
      - dict[str, object]
  type: class
  uid: azure.mgmt.datafactory.models.SnowflakeImportCopyCommand
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
