### YamlMime:PythonClass
uid: azure.mgmt.datafactory.models.AppendVariableActivity
name: AppendVariableActivity
fullName: azure.mgmt.datafactory.models.AppendVariableActivity
module: azure.mgmt.datafactory.models
inheritances:
- azure.mgmt.datafactory.models._models_py3.ControlActivity
summary: 'Append value for a Variable of type Array.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'AppendVariableActivity(*, name: str, additional_properties: Dict[str, MutableMapping[str,
    Any]] | None = None, description: str | None = None, state: str | _models.ActivityState
    | None = None, on_inactive_mark_as: str | _models.ActivityOnInactiveMarkAs | None
    = None, depends_on: List[_models.ActivityDependency] | None = None, user_properties:
    List[_models.UserProperty] | None = None, variable_name: str | None = None, value:
    MutableMapping[str, Any] | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:JSON>]
  - name: name
    description: Activity name. Required.
    types:
    - <xref:str>
  - name: description
    description: Activity description.
    types:
    - <xref:str>
  - name: state
    description: 'Activity state. This is an optional property and if not provided,
      the state

      will be Active by default. Known values are: "Active" and "Inactive".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datafactory.models.ActivityState>
  - name: on_inactive_mark_as
    description: 'Status result of the activity when the state is set to Inactive.

      This is an optional property and if not provided when the activity is inactive,
      the status will

      be Succeeded by default. Known values are: "Succeeded", "Failed", and "Skipped".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datafactory.models.ActivityOnInactiveMarkAs>
  - name: depends_on
    description: Activity depends on condition.
    types:
    - <xref:list>[<xref:azure.mgmt.datafactory.models.ActivityDependency>]
  - name: user_properties
    description: Activity user properties.
    types:
    - <xref:list>[<xref:azure.mgmt.datafactory.models.UserProperty>]
  - name: variable_name
    description: Name of the variable whose value needs to be appended to.
    types:
    - <xref:str>
  - name: value
    description: 'Value to be appended. Type: could be a static value matching type
      of the

      variable item or Expression with resultType matching type of the variable item.'
    types:
    - <xref:JSON>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: Activity name. Required.
  name: name
  types:
  - <xref:str>
- description: Type of activity. Required.
  name: type
  types:
  - <xref:str>
- description: Activity description.
  name: description
  types:
  - <xref:str>
- description: 'Activity state. This is an optional property and if not provided,
    the state will

    be Active by default. Known values are: "Active" and "Inactive".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datafactory.models.ActivityState>
- description: 'Status result of the activity when the state is set to Inactive.

    This is an optional property and if not provided when the activity is inactive,
    the status will

    be Succeeded by default. Known values are: "Succeeded", "Failed", and "Skipped".'
  name: on_inactive_mark_as
  types:
  - <xref:str>
  - <xref:azure.mgmt.datafactory.models.ActivityOnInactiveMarkAs>
- description: Activity depends on condition.
  name: depends_on
  types:
  - <xref:list>[<xref:azure.mgmt.datafactory.models.ActivityDependency>]
- description: Activity user properties.
  name: user_properties
  types:
  - <xref:list>[<xref:azure.mgmt.datafactory.models.UserProperty>]
- description: Name of the variable whose value needs to be appended to.
  name: variable_name
  types:
  - <xref:str>
- description: 'Value to be appended. Type: could be a static value matching type
    of the variable

    item or Expression with resultType matching type of the variable item.'
  name: value
  types:
  - <xref:JSON>
