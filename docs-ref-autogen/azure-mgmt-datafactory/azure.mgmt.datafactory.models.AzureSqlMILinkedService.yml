### YamlMime:PythonClass
uid: azure.mgmt.datafactory.models.AzureSqlMILinkedService
name: AzureSqlMILinkedService
fullName: azure.mgmt.datafactory.models.AzureSqlMILinkedService
module: azure.mgmt.datafactory.models
inheritances:
- azure.mgmt.datafactory.models._models_py3.LinkedService
summary: 'Azure SQL Managed Instance linked service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'AzureSqlMILinkedService(*, connection_string: Any, additional_properties:
    Optional[Dict[str, Any]] = None, connect_via: Optional[azure.mgmt.datafactory.models._models_py3.IntegrationRuntimeReference]
    = None, description: Optional[str] = None, parameters: Optional[Dict[str, azure.mgmt.datafactory.models._models_py3.ParameterSpecification]]
    = None, annotations: Optional[List[Any]] = None, password: Optional[azure.mgmt.datafactory.models._models_py3.AzureKeyVaultSecretReference]
    = None, service_principal_id: Optional[Any] = None, service_principal_key: Optional[azure.mgmt.datafactory.models._models_py3.SecretBase]
    = None, tenant: Optional[Any] = None, azure_cloud_type: Optional[Any] = None,
    encrypted_credential: Optional[Any] = None, always_encrypted_settings: Optional[azure.mgmt.datafactory.models._models_py3.SqlAlwaysEncryptedProperties]
    = None, credential: Optional[azure.mgmt.datafactory.models._models_py3.CredentialReference]
    = None, **kwargs)'
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: Required. Type of linked service.Constant filled by server.
  name: type
  types:
  - <xref:str>
- description: The integration runtime reference.
  name: connect_via
  types:
  - <xref:azure.mgmt.datafactory.models.IntegrationRuntimeReference>
- description: Linked service description.
  name: description
  types:
  - <xref:str>
- description: Parameters for linked service.
  name: parameters
  types:
  - <xref:dict>[<xref:str>, <xref:azure.mgmt.datafactory.models.ParameterSpecification>]
- description: List of tags that can be used for describing the linked service.
  name: annotations
  types:
  - <xref:list>[<xref:any>]
- description: 'Required. The connection string. Type: string, SecureString or

    AzureKeyVaultSecretReference.'
  name: connection_string
  types:
  - <xref:any>
- description: The Azure key vault secret reference of password in connection string.
  name: password
  types:
  - <xref:azure.mgmt.datafactory.models.AzureKeyVaultSecretReference>
- description: 'The ID of the service principal used to authenticate against Azure

    SQL Managed Instance. Type: string (or Expression with resultType string).'
  name: service_principal_id
  types:
  - <xref:any>
- description: 'The key of the service principal used to authenticate against

    Azure SQL Managed Instance.'
  name: service_principal_key
  types:
  - <xref:azure.mgmt.datafactory.models.SecretBase>
- description: 'The name or ID of the tenant to which the service principal belongs.
    Type: string

    (or Expression with resultType string).'
  name: tenant
  types:
  - <xref:any>
- description: 'Indicates the azure cloud type of the service principle auth. Allowed

    values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value
    is the data

    factory regions'' cloud type. Type: string (or Expression with resultType string).'
  name: azure_cloud_type
  types:
  - <xref:any>
- description: 'The encrypted credential used for authentication. Credentials are

    encrypted using the integration runtime credential manager. Type: string (or Expression
    with

    resultType string).'
  name: encrypted_credential
  types:
  - <xref:any>
- description: Sql always encrypted properties.
  name: always_encrypted_settings
  types:
  - <xref:azure.mgmt.datafactory.models.SqlAlwaysEncryptedProperties>
- description: The credential reference containing authentication information.
  name: credential
  types:
  - <xref:azure.mgmt.datafactory.models.CredentialReference>
