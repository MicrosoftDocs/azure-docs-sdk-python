### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.SwitchActivity
  fullName: azure.mgmt.datafactory.models.SwitchActivity
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.datafactory.models._models_py3.Activity
    type: azure.mgmt.datafactory.models._models_py3.ControlActivity
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: SwitchActivity
  summary: 'This activity evaluates an expression and executes activities under the

    cases property that correspond to the expression evaluation expected in the

    equals property.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'SwitchActivity(*, name: str, on, additional_properties=None, description:
      str = None, depends_on=None, user_properties=None, cases=None, default_activities=None,
      **kwargs) -> None'
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Activity name.
      id: name
      type:
      - str
    - description: Activity description.
      id: description
      type:
      - str
    - description: Activity depends on condition.
      id: depends_on
      type:
      - list[azure.mgmt.datafactory.models.ActivityDependency]
    - description: Activity user properties.
      id: user_properties
      type:
      - list[azure.mgmt.datafactory.models.UserProperty]
    - description: Required. Constant filled by server.
      id: type
      type:
      - str
    - description: 'Required. An expression that would evaluate to a string or

        integer. This is used to determine the block of activities in cases that

        will be executed.'
      id: 'on'
      type:
      - azure.mgmt.datafactory.models.Expression
    - description: 'List of cases that correspond to expected values of the ''on''

        property. This is an optional property and if not provided, the activity

        will execute activities provided in defaultActivities.'
      id: cases
      type:
      - list[azure.mgmt.datafactory.models.SwitchCase]
    - description: 'List of activities to execute if no case

        condition is satisfied. This is an optional property and if not provided,

        the activity will exit without any action.'
      id: default_activities
      type:
      - list[azure.mgmt.datafactory.models.Activity]
  type: class
  uid: azure.mgmt.datafactory.models.SwitchActivity
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: list[azure.mgmt.datafactory.models.ActivityDependency]
  name: list[ActivityDependency]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.datafactory.models.ActivityDependency
    name: ActivityDependency
    uid: azure.mgmt.datafactory.models.ActivityDependency
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.datafactory.models.ActivityDependency]
- fullName: list[azure.mgmt.datafactory.models.UserProperty]
  name: list[UserProperty]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.datafactory.models.UserProperty
    name: UserProperty
    uid: azure.mgmt.datafactory.models.UserProperty
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.datafactory.models.UserProperty]
- fullName: list[azure.mgmt.datafactory.models.SwitchCase]
  name: list[SwitchCase]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.datafactory.models.SwitchCase
    name: SwitchCase
    uid: azure.mgmt.datafactory.models.SwitchCase
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.datafactory.models.SwitchCase]
- fullName: list[azure.mgmt.datafactory.models.Activity]
  name: list[Activity]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.datafactory.models.Activity
    name: Activity
    uid: azure.mgmt.datafactory.models.Activity
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.datafactory.models.Activity]
