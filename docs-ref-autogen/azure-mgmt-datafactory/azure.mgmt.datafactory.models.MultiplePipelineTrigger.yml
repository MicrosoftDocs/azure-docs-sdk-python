### YamlMime:PythonClass
uid: azure.mgmt.datafactory.models.MultiplePipelineTrigger
name: MultiplePipelineTrigger
fullName: azure.mgmt.datafactory.models.MultiplePipelineTrigger
module: azure.mgmt.datafactory.models
inheritances:
- azure.mgmt.datafactory.models._models_py3.Trigger
summary: 'Base class for all triggers that support one to many model for trigger to
  pipeline.


  You probably want to use the sub-classes and not this class directly. Known

  sub-classes are: BlobEventsTrigger, BlobTrigger, CustomEventsTrigger, ScheduleTrigger.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'MultiplePipelineTrigger(*, additional_properties: Optional[Dict[str, Any]]
    = None, description: Optional[str] = None, annotations: Optional[List[Any]] =
    None, pipelines: Optional[List[azure.mgmt.datafactory.models._models_py3.TriggerPipelineReference]]
    = None, **kwargs)'
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: Required. Trigger type.Constant filled by server.
  name: type
  types:
  - <xref:str>
- description: Trigger description.
  name: description
  types:
  - <xref:str>
- description: 'Indicates if trigger is running or not. Updated when Start/Stop APIs
    are

    called on the Trigger. Possible values include: "Started", "Stopped", "Disabled".'
  name: runtime_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datafactory.models.TriggerRuntimeState>
- description: List of tags that can be used for describing the trigger.
  name: annotations
  types:
  - <xref:list>[<xref:any>]
- description: Pipelines that need to be started.
  name: pipelines
  types:
  - <xref:list>[<xref:azure.mgmt.datafactory.models.TriggerPipelineReference>]
