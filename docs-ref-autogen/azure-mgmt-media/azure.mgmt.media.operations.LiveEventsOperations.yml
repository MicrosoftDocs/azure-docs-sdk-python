### YamlMime:PythonClass
uid: azure.mgmt.media.operations.LiveEventsOperations
name: LiveEventsOperations
fullName: azure.mgmt.media.operations.LiveEventsOperations
module: azure.mgmt.media.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.media.AzureMediaServices>'s\n\
  >\n> <xref:live_events> attribute.\n>"
constructor:
  syntax: LiveEventsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.media.operations.LiveEventsOperations.async_operation
  name: async_operation
  summary: 'Get operation status.


    Get a live event operation status.'
  signature: 'async_operation(resource_group_name: str, account_name: str, operation_id:
    str, **kwargs: Any) -> AsyncOperationResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_id
    description: The ID of an ongoing async operation. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: AsyncOperationResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.AsyncOperationResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_allocate
  name: begin_allocate
  summary: 'Allocate resources for a live event.


    A live event is in StandBy state after allocation completes, and is ready to start.'
  signature: 'begin_allocate(resource_group_name: str, account_name: str, live_event_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_create
  name: begin_create
  summary: 'Create Live Event.


    Creates a new live event.'
  signature: 'begin_create(resource_group_name: str, account_name: str, live_event_name:
    str, parameters: _models.LiveEvent, auto_start: bool | None = None, *, content_type:
    str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LiveEvent]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Live event properties needed for creation. Is either a model type
      or a IO

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.LiveEvent>
    - <xref:typing.IO>
  - name: auto_start
    description: 'The flag indicates if the resource should be automatically started
      on

      creation. Default value is None.'
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either LiveEvent or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.LiveEvent>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_delete
  name: begin_delete
  summary: 'Delete Live Event.


    Deletes a live event.'
  signature: 'begin_delete(resource_group_name: str, account_name: str, live_event_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_reset
  name: begin_reset
  summary: 'Reset Live Event.


    Resets an existing live event. All live outputs for the live event are deleted
    and the live

    event is stopped and will be started again. All assets used by the live outputs
    and streaming

    locators created on these assets are unaffected.'
  signature: 'begin_reset(resource_group_name: str, account_name: str, live_event_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_start
  name: begin_start
  summary: 'Start Live Event.


    A live event in Stopped or StandBy state will be in Running state after the start
    operation

    completes.'
  signature: 'begin_start(resource_group_name: str, account_name: str, live_event_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_stop
  name: begin_stop
  summary: 'Stop Live Event.


    Stops a running live event.'
  signature: 'begin_stop(resource_group_name: str, account_name: str, live_event_name:
    str, parameters: _models.LiveEventActionInput, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: LiveEvent stop parameters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.LiveEventActionInput>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.begin_update
  name: begin_update
  summary: Updates settings on an existing live event.
  signature: 'begin_update(resource_group_name: str, account_name: str, live_event_name:
    str, parameters: _models.LiveEvent, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.LiveEvent]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Live event properties needed for patch. Is either a model type or
      a IO type.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.LiveEvent>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either LiveEvent or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.LiveEvent>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.get
  name: get
  summary: 'Get Live Event.


    Gets properties of a live event.'
  signature: 'get(resource_group_name: str, account_name: str, live_event_name: str,
    **kwargs: Any) -> LiveEvent'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: LiveEvent or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.LiveEvent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.list
  name: list
  summary: 'List live events.


    Lists all the live events in the account.'
  signature: 'list(resource_group_name: str, account_name: str, **kwargs: Any) ->
    Iterable[LiveEvent]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either LiveEvent or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.media.models.LiveEvent>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.LiveEventsOperations.operation_location
  name: operation_location
  summary: 'Get operation status.


    Get a live event operation status.'
  signature: 'operation_location(resource_group_name: str, account_name: str, live_event_name:
    str, operation_id: str, **kwargs: Any) -> LiveEvent | None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: live_event_name
    description: The name of the live event, maximum length is 32. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_id
    description: The ID of an ongoing async operation. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: LiveEvent or None or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.LiveEvent>
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.media.operations.LiveEventsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.media.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
