### YamlMime:PythonClass
uid: azure.mgmt.media.operations.MediaservicesOperations
name: MediaservicesOperations
fullName: azure.mgmt.media.operations.MediaservicesOperations
module: azure.mgmt.media.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.media.AzureMediaServices>'s\n\
  >\n> <xref:mediaservices> attribute.\n>"
constructor:
  syntax: MediaservicesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.media.operations.MediaservicesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update a Media Services account.


    Creates or updates a Media Services account.'
  signature: 'begin_create_or_update(resource_group_name: str, account_name: str,
    parameters: _models.MediaService, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.MediaService]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.MediaService>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either MediaService or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.MediaService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.begin_update
  name: begin_update
  summary: 'Update a Media Services account.


    Updates an existing Media Services account.'
  signature: 'begin_update(resource_group_name: str, account_name: str, parameters:
    _models.MediaServiceUpdate, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.MediaService]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.MediaServiceUpdate>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either MediaService or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.MediaService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.delete
  name: delete
  summary: 'Delete a Media Services account.


    Deletes a Media Services account.'
  signature: 'delete(resource_group_name: str, account_name: str, **kwargs: Any) ->
    None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.get
  name: get
  summary: 'Get a Media Services account.


    Get the details of a Media Services account.'
  signature: 'get(resource_group_name: str, account_name: str, **kwargs: Any) -> MediaService'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: MediaService or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.MediaService>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.list
  name: list
  summary: 'List Media Services accounts.


    List Media Services accounts in the resource group.'
  signature: 'list(resource_group_name: str, **kwargs: Any) -> Iterable[MediaService]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either MediaService or the result of
      cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.media.models.MediaService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.list_by_subscription
  name: list_by_subscription
  summary: 'List Media Services accounts.


    List Media Services accounts in the subscription.'
  signature: 'list_by_subscription(**kwargs: Any) -> Iterable[MediaService]'
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either MediaService or the result of
      cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.media.models.MediaService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.list_edge_policies
  name: list_edge_policies
  summary: 'List the media edge policies associated with the Media Services account.


    List all the media edge policies associated with the Media Services account.'
  signature: 'list_edge_policies(resource_group_name: str, account_name: str, parameters:
    _models.ListEdgePoliciesInput, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.EdgePolicies'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.ListEdgePoliciesInput>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EdgePolicies or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.EdgePolicies>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.media.operations.MediaservicesOperations.sync_storage_keys
  name: sync_storage_keys
  summary: 'Synchronizes Storage Account Keys.


    Synchronizes storage account keys for a storage account associated with the Media
    Service

    account.'
  signature: 'sync_storage_keys(resource_group_name: str, account_name: str, parameters:
    _models.SyncStorageKeysInput, *, content_type: str = ''application/json'', **kwargs:
    Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the Azure subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.SyncStorageKeysInput>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.media.operations.MediaservicesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.media.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
