### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.media.operations.LocationsOperations.check_name_availability
  - azure.mgmt.media.operations.LocationsOperations.models
  class: azure.mgmt.media.operations.LocationsOperations
  fullName: azure.mgmt.media.operations.LocationsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.media.operations
  name: LocationsOperations
  summary: LocationsOperations operations.
  syntax:
    content: LocationsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The Version of the API to be used with the client request. Constant
        value: "2018-06-01-preview".'
      id: api_version
  type: class
  uid: azure.mgmt.media.operations.LocationsOperations
- class: azure.mgmt.media.operations.LocationsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.LocationsOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.media.operations
  name: check_name_availability(location_name, name=None, type=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: check_name_availability
  summary: 'Check Name Availability.


    Checks whether the Media Service resource name is available.'
  syntax:
    content: check_name_availability(location_name, name=None, type=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: ''
      id: location_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The account name.
      id: name
      type:
      - str
    - defaultValue: None
      description: 'The account type. For a Media Services account, this

        should be ''MediaServices''.'
      id: type
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'EntityNameAvailabilityCheckOutput or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.media.models.EntityNameAvailabilityCheckOutput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.media.operations.LocationsOperations.check_name_availability
- class: azure.mgmt.media.operations.LocationsOperations
  fullName: azure.mgmt.media.operations.LocationsOperations.models
  langs:
  - python
  module: azure.mgmt.media.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.media.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.media.operations.LocationsOperations.models
references:
- fullName: azure.mgmt.media.operations.LocationsOperations.check_name_availability
  isExternal: false
  name: check_name_availability(location_name, name=None, type=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.media.operations.LocationsOperations
  uid: azure.mgmt.media.operations.LocationsOperations.check_name_availability
- fullName: azure.mgmt.media.operations.LocationsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.media.operations.LocationsOperations
  uid: azure.mgmt.media.operations.LocationsOperations.models
