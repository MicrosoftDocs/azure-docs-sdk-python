### YamlMime:PythonClass
uid: azure.mgmt.media.models.EnvelopeEncryption
name: EnvelopeEncryption
fullName: azure.mgmt.media.models.EnvelopeEncryption
module: azure.mgmt.media.models
inheritances:
- msrest.serialization.Model
summary: Class for EnvelopeEncryption encryption scheme.
constructor:
  syntax: 'EnvelopeEncryption(*, enabled_protocols: Optional[azure.mgmt.media.models._models_py3.EnabledProtocols]
    = None, clear_tracks: Optional[List[azure.mgmt.media.models._models_py3.TrackSelection]]
    = None, content_keys: Optional[azure.mgmt.media.models._models_py3.StreamingPolicyContentKeys]
    = None, custom_key_acquisition_url_template: Optional[str] = None, **kwargs)'
  parameters:
  - name: enabled_protocols
    description: Representing supported protocols.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.EnabledProtocols>
  - name: clear_tracks
    description: Representing which tracks should not be encrypted.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.media.models.TrackSelection>]
  - name: content_keys
    description: 'Representing default content key for each encryption scheme and
      separate

      content keys for specific tracks.'
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingPolicyContentKeys>
  - name: custom_key_acquisition_url_template
    description: 'Template for the URL of the custom service

      delivering keys to end user players.  Not required when using Azure Media Services
      for issuing

      keys.  The template supports replaceable tokens that the service will update
      at runtime with

      the value specific to the request.  The currently supported token values are

      {AlternativeMediaId}, which is replaced with the value of

      StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced
      with the value of

      identifier of the key being requested.'
    isRequired: true
    types:
    - <xref:str>
