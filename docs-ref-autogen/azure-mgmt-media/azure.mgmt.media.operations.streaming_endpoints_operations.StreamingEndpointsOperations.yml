### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.create
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.delete
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.get
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.list
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.scale
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.start
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.stop
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.update
  - azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.models
  class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: StreamingEndpointsOperations
  summary: StreamingEndpointsOperations operations.
  syntax:
    content: StreamingEndpointsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The Version of the API to be used with the client request. Constant
        value: "2018-06-01-preview".'
      id: api_version
  type: class
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.create
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: create(resource_group_name, account_name, streaming_endpoint_name, parameters,
    auto_start=None, custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create
  summary: 'Create StreamingEndpoint.


    Creates a StreamingEndpoint.'
  syntax:
    content: create(resource_group_name, account_name, streaming_endpoint_name, parameters,
      auto_start=None, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - description: StreamingEndpoint properties needed for creation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.media.models.StreamingEndpoint
    - defaultValue: None
      description: The flag indicates if auto start the Live Event.
      id: auto_start
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns StreamingEndpoint or

        ClientRawResponse<StreamingEndpoint> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.media.models.StreamingEndpoint]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.media.models.StreamingEndpoint]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.create
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.delete
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: delete(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: delete
  summary: 'Delete StreamingEndpoint.


    Deletes a StreamingEndpoint.'
  syntax:
    content: delete(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.delete
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.get
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: get(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Get StreamingEndpoint.


    Gets a StreamingEndpoint.'
  syntax:
    content: get(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: StreamingEndpoint or ClientRawResponse if raw=true
      type:
      - azure.mgmt.media.models.StreamingEndpoint
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.get
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.list
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: list(resource_group_name, account_name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: 'List StreamingEndpoints.


    Lists the StreamingEndpoints in the account.'
  syntax:
    content: list(resource_group_name, account_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of StreamingEndpoint
      type:
      - azure.mgmt.media.models.StreamingEndpointPaged[azure.mgmt.media.models.StreamingEndpoint]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.list
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.scale
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: scale(resource_group_name, account_name, streaming_endpoint_name, scale_unit=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: scale
  summary: 'Scale StreamingEndpoint.


    Scales an existing StreamingEndpoint.'
  syntax:
    content: scale(resource_group_name, account_name, streaming_endpoint_name, scale_unit=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'ScaleUnit The scale unit number of the

        StreamingEndpoint.'
      id: scale_unit
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.scale
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.start
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: start(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: start
  summary: 'Start StreamingEndpoint.


    Starts an existing StreamingEndpoint.'
  syntax:
    content: start(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.start
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.stop
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: stop(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: stop
  summary: 'Stop StreamingEndpoint.


    Stops an existing StreamingEndpoint.'
  syntax:
    content: stop(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.stop
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.update
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: update(resource_group_name, account_name, streaming_endpoint_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: update
  summary: 'Update StreamingEndpoint.


    Updates a existing StreamingEndpoint.'
  syntax:
    content: update(resource_group_name, account_name, streaming_endpoint_name, parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        Azure subscription.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Media Services account name.
      id: account_name
      isRequired: true
      type:
      - str
    - description: The name of the StreamingEndpoint.
      id: streaming_endpoint_name
      isRequired: true
      type:
      - str
    - description: StreamingEndpoint properties needed for creation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.media.models.StreamingEndpoint
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns StreamingEndpoint or

        ClientRawResponse<StreamingEndpoint> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.media.models.StreamingEndpoint]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.media.models.StreamingEndpoint]]
  type: method
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.update
- class: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.models
  langs:
  - python
  module: azure.mgmt.media.operations.streaming_endpoints_operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.media.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.models
references:
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.create
  isExternal: false
  name: create(resource_group_name, account_name, streaming_endpoint_name, parameters,
    auto_start=None, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.create
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.delete
  isExternal: false
  name: delete(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.delete
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.get
  isExternal: false
  name: get(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.get
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.list
  isExternal: false
  name: list(resource_group_name, account_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.list
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.scale
  isExternal: false
  name: scale(resource_group_name, account_name, streaming_endpoint_name, scale_unit=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.scale
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.start
  isExternal: false
  name: start(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.start
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.stop
  isExternal: false
  name: stop(resource_group_name, account_name, streaming_endpoint_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.stop
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.update
  isExternal: false
  name: update(resource_group_name, account_name, streaming_endpoint_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.update
- fullName: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations
  uid: azure.mgmt.media.operations.streaming_endpoints_operations.StreamingEndpointsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.media.models.StreamingEndpoint]
  name: AzureOperationPoller[StreamingEndpoint]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.media.models.StreamingEndpoint
    name: StreamingEndpoint
    uid: azure.mgmt.media.models.StreamingEndpoint
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.media.models.StreamingEndpoint]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.media.models.StreamingEndpoint]]
  name: AzureOperationPoller[ClientRawResponse[StreamingEndpoint]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.media.models.StreamingEndpoint
    name: StreamingEndpoint
    uid: azure.mgmt.media.models.StreamingEndpoint
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.media.models.StreamingEndpoint]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: azure.mgmt.media.models.StreamingEndpointPaged[azure.mgmt.media.models.StreamingEndpoint]
  name: StreamingEndpointPaged[StreamingEndpoint]
  spec.python:
  - fullName: azure.mgmt.media.models.StreamingEndpointPaged
    name: StreamingEndpointPaged
    uid: azure.mgmt.media.models.StreamingEndpointPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.media.models.StreamingEndpoint
    name: StreamingEndpoint
    uid: azure.mgmt.media.models.StreamingEndpoint
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.media.models.StreamingEndpointPaged[azure.mgmt.media.models.StreamingEndpoint]
