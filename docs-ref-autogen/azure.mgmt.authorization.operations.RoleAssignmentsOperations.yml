### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
  - azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
  class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: RoleAssignmentsOperations
  source:
    id: RoleAssignmentsOperations
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 19
  summary: 'RoleAssignmentsOperations operations.











    '
  syntax:
    content: RoleAssignmentsOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An objec model deserializer.

        '
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2015-07-01".

        '
      id: api_version
  type: class
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: create
  source:
    id: create
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 260
  summary: 'Creates a role assignment.

    '
  syntax:
    content: create(scope, role_assignment_name, properties=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The scope of the role assignment to create. The scope

        can be any REST resource instance. For example, use

        ''/subscriptions/{subscription-id}/'' for a subscription,

        ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}''

        for a resource group, and

        ''/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}''

        for a resource.

        '
      id: scope
      type:
      - str
    - description: 'The name of the role assignment to

        create. It can be any valid GUID.

        '
      id: role_assignment_name
      type:
      - str
    - defaultValue: None
      description: 'Role assignment properties.

        '
      id: properties
      type:
      - azure.mgmt.authorization.models.RoleAssignmentProperties
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: create_by_id
  source:
    id: create_by_id
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 456
  summary: 'Creates a role assignment by ID.

    '
  syntax:
    content: create_by_id(role_assignment_id, properties=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the role assignment to create.

        '
      id: role_assignment_id
      type:
      - str
    - defaultValue: None
      description: 'Role assignment properties.

        '
      id: properties
      type:
      - azure.mgmt.authorization.models.RoleAssignmentProperties
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 198
  summary: 'Deletes a role assignment.

    '
  syntax:
    content: delete(scope, role_assignment_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The scope of the role assignment to delete.

        '
      id: scope
      type:
      - str
    - description: 'The name of the role assignment to

        delete.

        '
      id: role_assignment_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: delete_by_id
  source:
    id: delete_by_id
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 398
  summary: 'Deletes a role assignment.

    '
  syntax:
    content: delete_by_id(role_assignment_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the role assignment to delete.

        '
      id: role_assignment_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: get
  source:
    id: get
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 337
  summary: 'Get the specified role assignment.

    '
  syntax:
    content: get(scope, role_assignment_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The scope of the role assignment.

        '
      id: scope
      type:
      - str
    - description: 'The name of the role assignment to get.

        '
      id: role_assignment_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: get_by_id
  source:
    id: get_by_id
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 523
  summary: 'Gets a role assignment by ID.

    '
  syntax:
    content: get_by_id(role_assignment_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the role assignment to get.

        '
      id: role_assignment_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignment
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: list
  source:
    id: list
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 581
  summary: 'Gets all role assignments for the subscription.

    '
  syntax:
    content: list(filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The filter to apply on the operation. Use

        $filter=atScope() to return all role assignments at or above the

        scope. Use $filter=principalId eq {id} to return all role assignments

        at, above or below the scope for the specified principal.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignmentPaged
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: list_for_resource
  source:
    id: list_for_resource
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 38
  summary: 'Gets role assignments for a resource.

    '
  syntax:
    content: list_for_resource(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The namespace of the resource

        provider.

        '
      id: resource_provider_namespace
      type:
      - str
    - description: 'The parent resource identity.

        '
      id: parent_resource_path
      type:
      - str
    - description: 'The resource type of the resource.

        '
      id: resource_type
      type:
      - str
    - description: 'The name of the resource to get role assignments

        for.

        '
      id: resource_name
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. Use

        $filter=atScope() to return all role assignments at or above the

        scope. Use $filter=principalId eq {id} to return all role assignments

        at, above or below the scope for the specified principal.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignmentPaged
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: list_for_resource_group
  source:
    id: list_for_resource_group
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 125
  summary: 'Gets role assignments for a resource group.

    '
  syntax:
    content: list_for_resource_group(resource_group_name, filter=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group.

        '
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. Use

        $filter=atScope() to return all role assignments at or above the

        scope. Use $filter=principalId eq {id} to return all role assignments

        at, above or below the scope for the specified principal.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignmentPaged
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
- class: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
  langs:
  - python
  module: azure.mgmt.authorization.operations
  name: list_for_scope
  source:
    id: list_for_scope
    path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
    remote:
      branch: master
      path: azure-mgmt-authorization\azure\mgmt\authorization\operations\role_assignments_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 651
  summary: 'Gets role assignments for a scope.

    '
  syntax:
    content: list_for_scope(scope, filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The scope of the role assignments.

        '
      id: scope
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply on the operation. Use

        $filter=atScope() to return all role assignments at or above the

        scope. Use $filter=principalId eq {id} to return all role assignments

        at, above or below the scope for the specified principal.

        '
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.authorization.models.RoleAssignmentPaged
  type: method
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
references:
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
  isExternal: false
  name: create
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
  isExternal: false
  name: create_by_id
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.create_by_id
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
  isExternal: false
  name: delete_by_id
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.delete_by_id
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
  isExternal: false
  name: get_by_id
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.get_by_id
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
  isExternal: false
  name: list
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
  isExternal: false
  name: list_for_resource
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
  isExternal: false
  name: list_for_resource_group
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_resource_group
- fullName: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
  isExternal: false
  name: list_for_scope
  parent: azure.mgmt.authorization.operations.RoleAssignmentsOperations
  uid: azure.mgmt.authorization.operations.RoleAssignmentsOperations.list_for_scope
