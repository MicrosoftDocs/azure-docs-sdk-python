### YamlMime:PythonClass
uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest
name: ComposeDocumentModelRequest
fullName: azure.ai.documentintelligence.models.ComposeDocumentModelRequest
module: azure.ai.documentintelligence.models
summary: 'Request body to create a composed document model from component document
  models.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'ComposeDocumentModelRequest(*args: Any, **kwargs: Any)'
variables:
- description: Unique document model name. Required.
  name: model_id
  types:
  - <xref:str>
- description: Document model description.
  name: description
  types:
  - <xref:str>
- description: Custom classifier to split and classify the input file. Required.
  name: classifier_id
  types:
  - <xref:str>
- description: 'File splitting behavior. Known values are: "auto", "none", and "perPage".'
  name: split
  types:
  - <xref:str>
  - <xref:azure.ai.documentintelligence.models.SplitMode>
- description: 'Dictionary mapping supported docTypes to the corresponding document
    models.

    Required.'
  name: doc_types
  types:
  - <xref:dict>[<xref:str>, <xref:azure.ai.documentintelligence.models.DocumentTypeDetails>]
- description: List of key-value tag attributes associated with the document model.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.classifier_id
  name: classifier_id
  summary: Custom classifier to split and classify the input file. Required.
  signature: 'classifier_id: str'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.description
  name: description
  summary: Document model description.
  signature: 'description: str | None'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.doc_types
  name: doc_types
  summary: Dictionary mapping supported docTypes to the corresponding document models.
    Required.
  signature: 'doc_types: Dict[str, _models.DocumentTypeDetails]'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.model_id
  name: model_id
  summary: Unique document model name. Required.
  signature: 'model_id: str'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.split
  name: split
  summary: '"auto", "none", and "perPage".'
  signature: 'split: str | _models.SplitMode | None'
- uid: azure.ai.documentintelligence.models.ComposeDocumentModelRequest.tags
  name: tags
  summary: List of key-value tag attributes associated with the document model.
  signature: 'tags: Dict[str, str] | None'
