### YamlMime:PythonClass
uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations
name: DeviceUpdateOperations
fullName: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations
module: azure.iot.deviceupdate.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.iot.deviceupdate.aio.DeviceUpdateClient>'s\n\
  >\n> <xref:device_update> attribute.\n>"
constructor:
  syntax: DeviceUpdateOperations(*args, **kwargs)
methods:
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.begin_delete_update
  name: begin_delete_update
  summary: 'Delete a specific update version. This is a long-running-operation; use
    Operation-Location

    response header value to check for operation status.'
  signature: 'async begin_delete_update(provider: str, name: str, version: str, **kwargs:
    Any) -> AsyncLROPoller[None]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: Update name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: Update version. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns None
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.begin_import_update
  name: begin_import_update
  summary: 'Import new update version. This is a long-running-operation; use Operation-Location
    response

    header value to check for operation status.'
  signature: 'async begin_import_update(update_to_import: List[JSON], *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[JSON]'
  parameters:
  - name: update_to_import
    description: 'The update to be imported (see schema

      [https://json.schemastore.org/azure-deviceupdate-import-manifest-5.0.json](https://json.schemastore.org/azure-deviceupdate-import-manifest-5.0.json)
      for details). Is

      either a list type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:JSON>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"compatibility\"\
    : [\n           {\n               \"str\": \"str\"  # List of update compatibility\
    \ information.\n                 Required.\n           }\n       ],\n       \"\
    createdDateTime\": \"2020-02-20 00:00:00\",  # Date and time in UTC when the\n\
    \         update was created. Required.\n       \"importedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Date and time in UTC when the\n         update was imported.\
    \ Required.\n       \"manifestVersion\": \"str\",  # Schema version of manifest\
    \ used to import the\n         update. Required.\n       \"updateId\": {\n   \
    \        \"name\": \"str\",  # Update name. Required.\n           \"provider\"\
    : \"str\",  # Update provider. Required.\n           \"version\": \"str\"  # Update\
    \ version. Required.\n       },\n       \"description\": \"str\",  # Optional.\
    \ Update description specified by creator.\n       \"etag\": \"str\",  # Optional.\
    \ Update ETag.\n       \"friendlyName\": \"str\",  # Optional. Friendly update\
    \ name specified by\n         importer.\n       \"installedCriteria\": \"str\"\
    ,  # Optional. String interpreted by Device Update\n         client to determine\
    \ if the update is installed on the device. Deprecated in\n         latest import\
    \ manifest schema.\n       \"instructions\": {\n           \"steps\": [\n    \
    \           {\n                   \"description\": \"str\",  # Optional. Step\
    \ description.\n                   \"files\": [\n                       \"str\"\
    \  # Optional. Collection of file names\n                         to be passed\
    \ to handler during execution. Required if step type\n                       \
    \  is inline.\n                   ],\n                   \"handler\": \"str\"\
    ,  # Optional. Identity of handler\n                     that will execute this\
    \ step. Required if step type is inline.\n                   \"handlerProperties\"\
    : {},  # Optional. Parameters to\n                     be passed to handler during\
    \ execution.\n                   \"type\": \"inline\",  # Optional. Default value\
    \ is\n                     \"inline\". Step type. Known values are: \"Inline\"\
    \ and \"Reference\".\n                   \"updateId\": {\n                   \
    \    \"name\": \"str\",  # Update name. Required.\n                       \"provider\"\
    : \"str\",  # Update provider.\n                         Required.\n         \
    \              \"version\": \"str\"  # Update version. Required.\n           \
    \        }\n               }\n           ]\n       },\n       \"isDeployable\"\
    : True,  # Optional. Default value is True. Whether the update\n         can be\
    \ deployed to a device on its own.\n       \"referencedBy\": [\n           {\n\
    \               \"name\": \"str\",  # Update name. Required.\n               \"\
    provider\": \"str\",  # Update provider. Required.\n               \"version\"\
    : \"str\"  # Update version. Required.\n           }\n       ],\n       \"scanResult\"\
    : \"str\",  # Optional. Update aggregate scan result (calculated\n         from\
    \ payload file scan results).\n       \"updateType\": \"str\"  # Optional. Update\
    \ type. Deprecated in latest import\n         manifest schema.\n   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.get_file
  name: get_file
  summary: Get a specific update file from the version.
  signature: 'async get_file(provider: str, name: str, version: str, file_id: str,
    *, if_none_match: str | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: Update name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: Update version. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: File identifier. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: if_none_match
    description: 'Defines the If-None-Match condition. The operation will be performed

      only if the ETag on the server does not match this value. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"fileId\"\
    : \"str\",  # File identity, generated by server at import time.\n         Required.\n\
    \       \"fileName\": \"str\",  # File name. Required.\n       \"hashes\": {\n\
    \           \"str\": \"str\"  # Mapping of hashing algorithm to base64 encoded\
    \ hash\n             values. Required.\n       },\n       \"sizeInBytes\": 0,\
    \  # File size in number of bytes. Required.\n       \"downloadHandler\": {\n\
    \           \"id\": \"str\"  # Download handler identifier. Required.\n      \
    \ },\n       \"etag\": \"str\",  # Optional. File ETag.\n       \"mimeType\":\
    \ \"str\",  # Optional. File MIME type.\n       \"properties\": {\n          \
    \ \"str\": \"str\"  # Optional. Optional file properties (not consumed by\n  \
    \           service but pass-through to device).\n       },\n       \"relatedFiles\"\
    : [\n           {\n               \"fileName\": \"str\",  # File name. Required.\n\
    \               \"hashes\": {\n                   \"str\": \"str\"  # Mapping\
    \ of hashing algorithm to\n                     base64 encoded hash values. Required.\n\
    \               },\n               \"sizeInBytes\": 0,  # File size in number\
    \ of bytes. Required.\n               \"mimeType\": \"str\",  # Optional. File\
    \ MIME type.\n               \"properties\": {\n                   \"str\": \"\
    str\"  # Optional. Optional file properties\n                     (not consumed\
    \ by service but pass-through to device).\n               },\n               \"\
    scanDetails\": \"str\",  # Optional. Anti-malware scan details.\n            \
    \   \"scanResult\": \"str\"  # Optional. Anti-malware scan result.\n         \
    \  }\n       ],\n       \"scanDetails\": \"str\",  # Optional. Anti-malware scan\
    \ details.\n       \"scanResult\": \"str\"  # Optional. Anti-malware scan result.\n\
    \   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.get_operation_status
  name: get_operation_status
  summary: Retrieve operation status.
  signature: 'async get_operation_status(operation_id: str, *, if_none_match: str
    | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: operation_id
    description: Operation identifier. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: if_none_match
    description: 'Defines the If-None-Match condition. The operation will be performed

      only if the ETag on the server does not match this value. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Date and time in UTC when the\n         operation\
    \ was created. Required.\n       \"lastActionDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Date and time in UTC when the\n         operation status was last updated.\
    \ Required.\n       \"operationId\": \"str\",  # Operation Id. Required.\n   \
    \    \"status\": \"str\",  # Operation status. Required. Known values are:\n \
    \        \"NotStarted\", \"Running\", \"Succeeded\", and \"Failed\".\n       \"\
    error\": {\n           \"code\": \"str\",  # Server defined error code. Required.\n\
    \           \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ A more specific error code than what was\n                 provided by the containing\
    \ error. Required.\n               \"errorDetail\": \"str\",  # Optional. The\
    \ internal error or\n                 exception message.\n               \"innerError\"\
    : ...,\n               \"message\": \"str\"  # Optional. A human-readable representation\n\
    \                 of the error.\n           },\n           \"occurredDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date and time\n             in UTC when\
    \ the error occurred.\n           \"target\": \"str\"  # Optional. The target\
    \ of the error.\n       },\n       \"etag\": \"str\",  # Optional. Operation ETag.\n\
    \       \"resourceLocation\": \"str\",  # Optional. Location of the imported update\
    \ when\n         operation is successful.\n       \"traceId\": \"str\",  # Optional.\
    \ Operation correlation identity that can used\n         by Microsoft Support\
    \ for troubleshooting.\n       \"update\": {\n           \"updateId\": {\n   \
    \            \"name\": \"str\",  # Update name. Required.\n               \"provider\"\
    : \"str\",  # Update provider. Required.\n               \"version\": \"str\"\
    \  # Update version. Required.\n           },\n           \"description\": \"\
    str\",  # Optional. Update description.\n           \"friendlyName\": \"str\"\
    \  # Optional. Friendly update name.\n       }\n   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.get_update
  name: get_update
  summary: Get a specific update version.
  signature: 'async get_update(provider: str, name: str, version: str, *, if_none_match:
    str | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: Update name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: Update version. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: if_none_match
    description: 'Defines the If-None-Match condition. The operation will be performed

      only if the ETag on the server does not match this value. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"compatibility\"\
    : [\n           {\n               \"str\": \"str\"  # List of update compatibility\
    \ information.\n                 Required.\n           }\n       ],\n       \"\
    createdDateTime\": \"2020-02-20 00:00:00\",  # Date and time in UTC when the\n\
    \         update was created. Required.\n       \"importedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Date and time in UTC when the\n         update was imported.\
    \ Required.\n       \"manifestVersion\": \"str\",  # Schema version of manifest\
    \ used to import the\n         update. Required.\n       \"updateId\": {\n   \
    \        \"name\": \"str\",  # Update name. Required.\n           \"provider\"\
    : \"str\",  # Update provider. Required.\n           \"version\": \"str\"  # Update\
    \ version. Required.\n       },\n       \"description\": \"str\",  # Optional.\
    \ Update description specified by creator.\n       \"etag\": \"str\",  # Optional.\
    \ Update ETag.\n       \"friendlyName\": \"str\",  # Optional. Friendly update\
    \ name specified by\n         importer.\n       \"installedCriteria\": \"str\"\
    ,  # Optional. String interpreted by Device Update\n         client to determine\
    \ if the update is installed on the device. Deprecated in\n         latest import\
    \ manifest schema.\n       \"instructions\": {\n           \"steps\": [\n    \
    \           {\n                   \"description\": \"str\",  # Optional. Step\
    \ description.\n                   \"files\": [\n                       \"str\"\
    \  # Optional. Collection of file names\n                         to be passed\
    \ to handler during execution. Required if step type\n                       \
    \  is inline.\n                   ],\n                   \"handler\": \"str\"\
    ,  # Optional. Identity of handler\n                     that will execute this\
    \ step. Required if step type is inline.\n                   \"handlerProperties\"\
    : {},  # Optional. Parameters to\n                     be passed to handler during\
    \ execution.\n                   \"type\": \"inline\",  # Optional. Default value\
    \ is\n                     \"inline\". Step type. Known values are: \"Inline\"\
    \ and \"Reference\".\n                   \"updateId\": {\n                   \
    \    \"name\": \"str\",  # Update name. Required.\n                       \"provider\"\
    : \"str\",  # Update provider.\n                         Required.\n         \
    \              \"version\": \"str\"  # Update version. Required.\n           \
    \        }\n               }\n           ]\n       },\n       \"isDeployable\"\
    : True,  # Optional. Default value is True. Whether the update\n         can be\
    \ deployed to a device on its own.\n       \"referencedBy\": [\n           {\n\
    \               \"name\": \"str\",  # Update name. Required.\n               \"\
    provider\": \"str\",  # Update provider. Required.\n               \"version\"\
    : \"str\"  # Update version. Required.\n           }\n       ],\n       \"scanResult\"\
    : \"str\",  # Optional. Update aggregate scan result (calculated\n         from\
    \ payload file scan results).\n       \"updateType\": \"str\"  # Optional. Update\
    \ type. Deprecated in latest import\n         manifest schema.\n   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_files
  name: list_files
  summary: Get a list of all update file identifiers for the specified version.
  signature: 'list_files(provider: str, name: str, version: str, **kwargs: Any) ->
    AsyncIterable[str]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: Update name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: Update version. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of str
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == \"str\"  # Optional.\n\
    \   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_names
  name: list_names
  summary: Get a list of all update names that match the specified provider.
  signature: 'list_names(provider: str, **kwargs: Any) -> AsyncIterable[str]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of str
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == \"str\"  # Optional.\n\
    \   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_operation_statuses
  name: list_operation_statuses
  summary: 'Get a list of all import update operations. Completed operations are kept
    for 7 days before

    auto-deleted. Delete operations are not returned by this API version.'
  signature: 'list_operation_statuses(*, filter: str | None = None, top: int | None
    = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: filter
    description: 'Optional to filter operations by status property. Only one specific
      filter is

      supported: "status eq ''NotStarted'' or status eq ''Running''". Default value
      is None.'
    types:
    - <xref:str>
  - name: top
    description: 'Specifies a non-negative integer n that limits the number of items
      returned from

      a collection. The service returns the number of available items up to but not
      greater than the

      specified value n. Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Date and time in UTC when the\n         operation\
    \ was created. Required.\n       \"lastActionDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Date and time in UTC when the\n         operation status was last updated.\
    \ Required.\n       \"operationId\": \"str\",  # Operation Id. Required.\n   \
    \    \"status\": \"str\",  # Operation status. Required. Known values are:\n \
    \        \"NotStarted\", \"Running\", \"Succeeded\", and \"Failed\".\n       \"\
    error\": {\n           \"code\": \"str\",  # Server defined error code. Required.\n\
    \           \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ A more specific error code than what was\n                 provided by the containing\
    \ error. Required.\n               \"errorDetail\": \"str\",  # Optional. The\
    \ internal error or\n                 exception message.\n               \"innerError\"\
    : ...,\n               \"message\": \"str\"  # Optional. A human-readable representation\n\
    \                 of the error.\n           },\n           \"occurredDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date and time\n             in UTC when\
    \ the error occurred.\n           \"target\": \"str\"  # Optional. The target\
    \ of the error.\n       },\n       \"etag\": \"str\",  # Optional. Operation ETag.\n\
    \       \"resourceLocation\": \"str\",  # Optional. Location of the imported update\
    \ when\n         operation is successful.\n       \"traceId\": \"str\",  # Optional.\
    \ Operation correlation identity that can used\n         by Microsoft Support\
    \ for troubleshooting.\n       \"update\": {\n           \"updateId\": {\n   \
    \            \"name\": \"str\",  # Update name. Required.\n               \"provider\"\
    : \"str\",  # Update provider. Required.\n               \"version\": \"str\"\
    \  # Update version. Required.\n           },\n           \"description\": \"\
    str\",  # Optional. Update description.\n           \"friendlyName\": \"str\"\
    \  # Optional. Friendly update name.\n       }\n   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_providers
  name: list_providers
  summary: Get a list of all update providers that have been imported to Device Update
    for IoT Hub.
  signature: 'list_providers(**kwargs: Any) -> AsyncIterable[str]'
  return:
    description: An iterator like instance of str
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == \"str\"  # Optional.\n\
    \   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_updates
  name: list_updates
  summary: Get a list of all updates that have been imported to Device Update for
    IoT Hub.
  signature: 'list_updates(*, search: str | None = None, filter: str | None = None,
    **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: search
    description: Request updates matching a free-text search expression. Default value
      is None.
    types:
    - <xref:str>
  - name: filter
    description: Optional to filter updates by isDeployable property. Default value
      is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"compatibility\"\
    : [\n           {\n               \"str\": \"str\"  # List of update compatibility\
    \ information.\n                 Required.\n           }\n       ],\n       \"\
    createdDateTime\": \"2020-02-20 00:00:00\",  # Date and time in UTC when the\n\
    \         update was created. Required.\n       \"importedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Date and time in UTC when the\n         update was imported.\
    \ Required.\n       \"manifestVersion\": \"str\",  # Schema version of manifest\
    \ used to import the\n         update. Required.\n       \"updateId\": {\n   \
    \        \"name\": \"str\",  # Update name. Required.\n           \"provider\"\
    : \"str\",  # Update provider. Required.\n           \"version\": \"str\"  # Update\
    \ version. Required.\n       },\n       \"description\": \"str\",  # Optional.\
    \ Update description specified by creator.\n       \"etag\": \"str\",  # Optional.\
    \ Update ETag.\n       \"friendlyName\": \"str\",  # Optional. Friendly update\
    \ name specified by\n         importer.\n       \"installedCriteria\": \"str\"\
    ,  # Optional. String interpreted by Device Update\n         client to determine\
    \ if the update is installed on the device. Deprecated in\n         latest import\
    \ manifest schema.\n       \"instructions\": {\n           \"steps\": [\n    \
    \           {\n                   \"description\": \"str\",  # Optional. Step\
    \ description.\n                   \"files\": [\n                       \"str\"\
    \  # Optional. Collection of file names\n                         to be passed\
    \ to handler during execution. Required if step type\n                       \
    \  is inline.\n                   ],\n                   \"handler\": \"str\"\
    ,  # Optional. Identity of handler\n                     that will execute this\
    \ step. Required if step type is inline.\n                   \"handlerProperties\"\
    : {},  # Optional. Parameters to\n                     be passed to handler during\
    \ execution.\n                   \"type\": \"inline\",  # Optional. Default value\
    \ is\n                     \"inline\". Step type. Known values are: \"Inline\"\
    \ and \"Reference\".\n                   \"updateId\": {\n                   \
    \    \"name\": \"str\",  # Update name. Required.\n                       \"provider\"\
    : \"str\",  # Update provider.\n                         Required.\n         \
    \              \"version\": \"str\"  # Update version. Required.\n           \
    \        }\n               }\n           ]\n       },\n       \"isDeployable\"\
    : True,  # Optional. Default value is True. Whether the update\n         can be\
    \ deployed to a device on its own.\n       \"referencedBy\": [\n           {\n\
    \               \"name\": \"str\",  # Update name. Required.\n               \"\
    provider\": \"str\",  # Update provider. Required.\n               \"version\"\
    : \"str\"  # Update version. Required.\n           }\n       ],\n       \"scanResult\"\
    : \"str\",  # Optional. Update aggregate scan result (calculated\n         from\
    \ payload file scan results).\n       \"updateType\": \"str\"  # Optional. Update\
    \ type. Deprecated in latest import\n         manifest schema.\n   }\n   ````\n"
- uid: azure.iot.deviceupdate.aio.operations.DeviceUpdateOperations.list_versions
  name: list_versions
  summary: Get a list of all update versions that match the specified provider and
    name.
  signature: 'list_versions(provider: str, name: str, *, filter: str | None = None,
    **kwargs: Any) -> AsyncIterable[str]'
  parameters:
  - name: provider
    description: Update provider. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: Update name. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: Optional to filter updates by isDeployable property. Default value
      is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of str
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == \"str\"  # Optional.\n\
    \   ````\n"
