### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.operations.PolicyRestrictionValidationsOperations
name: PolicyRestrictionValidationsOperations
fullName: azure.mgmt.apimanagement.operations.PolicyRestrictionValidationsOperations
module: azure.mgmt.apimanagement.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.ApiManagementClient>'s\n\
  >\n> <xref:policy_restriction_validations> attribute.\n>"
constructor:
  syntax: PolicyRestrictionValidationsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.operations.PolicyRestrictionValidationsOperations.begin_by_service
  name: begin_by_service
  summary: Validate all policies of API Management services.
  signature: 'begin_by_service(resource_group_name: str, service_name: str, **kwargs:
    Any) -> LROPoller[OperationResultContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either OperationResultContract
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.apimanagement.models.OperationResultContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.operations.PolicyRestrictionValidationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv64\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
