### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations
name: DeletedServicesOperations
fullName: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:deleted_services> attribute.\n>"
constructor:
  syntax: DeletedServicesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations.begin_purge
  name: begin_purge
  summary: Purges Api Management Service (deletes it with no option to undelete).
  signature: 'async begin_purge(service_name: str, location: str, **kwargs: Any) ->
    AsyncLROPoller[DeletedServiceContract]'
  parameters:
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The location of the deleted API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of AsyncLROPoller that returns either DeletedServiceContract
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.apimanagement.models.DeletedServiceContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations.get_by_name
  name: get_by_name
  summary: Get soft-deleted Api Management Service by name.
  signature: 'async get_by_name(service_name: str, location: str, **kwargs: Any) ->
    DeletedServiceContract'
  parameters:
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The location of the deleted API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeletedServiceContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.DeletedServiceContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations.list_by_subscription
  name: list_by_subscription
  summary: Lists all soft-deleted services available for undelete for the given subscription.
  signature: 'list_by_subscription(**kwargs: Any) -> AsyncIterable[DeletedServiceContract]'
  return:
    description: 'An iterator like instance of either DeletedServiceContract or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.DeletedServiceContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.DeletedServicesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv63\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
