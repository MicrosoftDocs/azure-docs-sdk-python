### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations
name: ApiIssueCommentOperations
fullName: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:api_issue_comment> attribute.\n>"
constructor:
  syntax: ApiIssueCommentOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.create_or_update
  name: create_or_update
  summary: Creates a new Comment for the Issue in an API or updates an existing one.
  signature: 'async create_or_update(resource_group_name: str, service_name: str,
    api_id: str, issue_id: str, comment_id: str, parameters: _models.IssueCommentContract,
    if_match: str | None = None, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.IssueCommentContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_id
    description: 'API identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: comment_id
    description: 'Comment identifier within an Issue. Must be unique in the current
      Issue.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Create parameters. Is either a IssueCommentContract type or a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.IssueCommentContract>
    - <xref:typing.IO>[<xref:bytes>]
  - name: if_match
    description: 'ETag of the Entity. Not required when creating an entity, but required
      when

      updating an entity. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: IssueCommentContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.IssueCommentContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.delete
  name: delete
  summary: Deletes the specified comment from an Issue.
  signature: 'async delete(resource_group_name: str, service_name: str, api_id: str,
    issue_id: str, comment_id: str, if_match: str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_id
    description: 'API identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: comment_id
    description: 'Comment identifier within an Issue. Must be unique in the current
      Issue.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.get
  name: get
  summary: Gets the details of the issue Comment for an API specified by its identifier.
  signature: 'async get(resource_group_name: str, service_name: str, api_id: str,
    issue_id: str, comment_id: str, **kwargs: Any) -> IssueCommentContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_id
    description: 'API identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: comment_id
    description: 'Comment identifier within an Issue. Must be unique in the current
      Issue.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: IssueCommentContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.IssueCommentContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.get_entity_tag
  name: get_entity_tag
  summary: 'Gets the entity state (Etag) version of the issue Comment for an API specified
    by its

    identifier.'
  signature: 'async get_entity_tag(resource_group_name: str, service_name: str, api_id:
    str, issue_id: str, comment_id: str, **kwargs: Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_id
    description: 'API identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: comment_id
    description: 'Comment identifier within an Issue. Must be unique in the current
      Issue.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.list_by_service
  name: list_by_service
  summary: Lists all comments for the Issue associated with the specified API.
  signature: 'list_by_service(resource_group_name: str, service_name: str, api_id:
    str, issue_id: str, filter: str | None = None, top: int | None = None, skip: int
    | None = None, **kwargs: Any) -> AsyncIterable[IssueCommentContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: api_id
    description: 'API identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: "Field     |     Usage     |     Supported operators     |     Supported\n\
      \n\nfunctions     >>|</br>|<<\u2014\u2014\u2014\u2014->>|-------------|<<\u2014\
      \u2014\u2014\u2014->>|-------------|</br>|<< name |\nfilter | ge, le, eq, ne,\
      \ gt, lt | substringof, contains, startswith, endswith >>|</br>|<< userId |\n\
      filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith\
      \ >>|<<</br>. Default\nvalue is None."
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of records to return. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: skip
    description: Number of records to skip. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: 'An iterator like instance of either IssueCommentContract or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.IssueCommentContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.ApiIssueCommentOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv63\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
