### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.IssueOperations
name: IssueOperations
fullName: azure.mgmt.apimanagement.aio.operations.IssueOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:issue> attribute.\n>"
constructor:
  syntax: IssueOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.IssueOperations.get
  name: get
  summary: Gets API Management issue details.
  signature: 'async get(resource_group_name: str, service_name: str, issue_id: str,
    **kwargs: Any) -> IssueContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: issue_id
    description: 'Issue identifier. Must be unique in the current API Management service

      instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: IssueContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.IssueContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.IssueOperations.list_by_service
  name: list_by_service
  summary: Lists a collection of issues in the specified service instance.
  signature: 'list_by_service(resource_group_name: str, service_name: str, filter:
    str | None = None, top: int | None = None, skip: int | None = None, **kwargs:
    Any) -> AsyncIterable[IssueContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: "Field     |     Usage     |     Supported operators     |     Supported\n\
      \n\nfunctions     >>|</br>|<<\u2014\u2014\u2014\u2014->>|-------------|<<\u2014\
      \u2014\u2014\u2014->>|-------------|</br>|<< name |\nfilter | ge, le, eq, ne,\
      \ gt, lt | substringof, contains, startswith, endswith >>|</br>|<< apiId |\n\
      filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith\
      \ >>|</br>|<< title |\nfilter | ge, le, eq, ne, gt, lt | substringof, contains,\
      \ startswith, endswith >>|</br>|<<\ndescription | filter | ge, le, eq, ne, gt,\
      \ lt | substringof, contains, startswith, endswith\n>>|</br>|<< authorName |\
      \ filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith,\nendswith\
      \ >>|</br>|<< state | filter | eq |     >>|<<</br>. Default value is None."
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of records to return. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: skip
    description: Number of records to skip. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either IssueContract or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.IssueContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.IssueOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv64\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
