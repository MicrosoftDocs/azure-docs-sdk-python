### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations
name: LoggerOperations
fullName: azure.mgmt.apimanagement.aio.operations.LoggerOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:logger> attribute.\n>"
constructor:
  syntax: LoggerOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.create_or_update
  name: create_or_update
  summary: Creates or Updates a logger.
  signature: 'async create_or_update(resource_group_name: str, service_name: str,
    logger_id: str, parameters: _models.LoggerContract, if_match: str | None = None,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.LoggerContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: logger_id
    description: 'Logger identifier. Must be unique in the API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Create parameters. Is either a LoggerContract type or a IO[bytes]
      type.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.LoggerContract>
    - <xref:typing.IO>[<xref:bytes>]
  - name: if_match
    description: 'ETag of the Entity. Not required when creating an entity, but required
      when

      updating an entity. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: LoggerContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.LoggerContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.delete
  name: delete
  summary: Deletes the specified logger.
  signature: 'async delete(resource_group_name: str, service_name: str, logger_id:
    str, if_match: str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: logger_id
    description: 'Logger identifier. Must be unique in the API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.get
  name: get
  summary: Gets the details of the logger specified by its identifier.
  signature: 'async get(resource_group_name: str, service_name: str, logger_id: str,
    **kwargs: Any) -> LoggerContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: logger_id
    description: 'Logger identifier. Must be unique in the API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: LoggerContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.LoggerContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.get_entity_tag
  name: get_entity_tag
  summary: Gets the entity state (Etag) version of the logger specified by its identifier.
  signature: 'async get_entity_tag(resource_group_name: str, service_name: str, logger_id:
    str, **kwargs: Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: logger_id
    description: 'Logger identifier. Must be unique in the API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.list_by_service
  name: list_by_service
  summary: Lists a collection of loggers in the specified service instance.
  signature: 'list_by_service(resource_group_name: str, service_name: str, filter:
    str | None = None, top: int | None = None, skip: int | None = None, **kwargs:
    Any) -> AsyncIterable[LoggerContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: "Field     |     Usage     |     Supported operators     |     Supported\n\
      \n\nfunctions     >>|</br>|<<\u2014\u2014\u2014\u2014->>|-------------|<<\u2014\
      \u2014\u2014\u2014->>|-------------|</br>|<< name |\nfilter | ge, le, eq, ne,\
      \ gt, lt | substringof, contains, startswith, endswith >>|</br>|<<\ndescription\
      \ | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith\n\
      >>|</br>|<< loggerType | filter | eq |     >>|</br>|<< resourceId | filter |\
      \ ge, le, eq, ne, gt, lt |\nsubstringof, contains, startswith, endswith >>|<<</br>.\
      \ Default value is None."
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of records to return. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: skip
    description: Number of records to skip. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either LoggerContract or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.LoggerContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  seeAlsoContent: "\n\n  * [https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs)\
    \ \n"
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.update
  name: update
  summary: Updates an existing logger.
  signature: 'async update(resource_group_name: str, service_name: str, logger_id:
    str, if_match: str, parameters: _models.LoggerUpdateContract, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.LoggerContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: logger_id
    description: 'Logger identifier. Must be unique in the API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Update parameters. Is either a LoggerUpdateContract type or a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.LoggerUpdateContract>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: LoggerContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.LoggerContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.LoggerOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv64\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
