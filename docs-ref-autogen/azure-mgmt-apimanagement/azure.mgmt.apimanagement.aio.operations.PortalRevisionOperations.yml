### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations
name: PortalRevisionOperations
fullName: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:portal_revision> attribute.\n>"
constructor:
  syntax: PortalRevisionOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates a new developer portal''s revision by running the portal''s publishing.
    The `isCurrent`

    property indicates if the revision is publicly accessible.'
  signature: 'async begin_create_or_update(resource_group_name: str, service_name:
    str, portal_revision_id: str, parameters: _models.PortalRevisionContract, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.PortalRevisionContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: portal_revision_id
    description: 'Portal revision identifier. Must be unique in the current API

      Management service instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Is either a PortalRevisionContract type or a IO[bytes] type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.PortalRevisionContract>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either PortalRevisionContract
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.apimanagement.models.PortalRevisionContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.begin_update
  name: begin_update
  summary: Updates the description of specified portal revision or makes it current.
  signature: 'async begin_update(resource_group_name: str, service_name: str, portal_revision_id:
    str, if_match: str, parameters: _models.PortalRevisionContract, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.PortalRevisionContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: portal_revision_id
    description: 'Portal revision identifier. Must be unique in the current API

      Management service instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Is either a PortalRevisionContract type or a IO[bytes] type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.PortalRevisionContract>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either PortalRevisionContract
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.apimanagement.models.PortalRevisionContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.get
  name: get
  summary: Gets the developer portal's revision specified by its identifier.
  signature: 'async get(resource_group_name: str, service_name: str, portal_revision_id:
    str, **kwargs: Any) -> PortalRevisionContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: portal_revision_id
    description: 'Portal revision identifier. Must be unique in the current API

      Management service instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PortalRevisionContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.PortalRevisionContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.get_entity_tag
  name: get_entity_tag
  summary: Gets the developer portal revision specified by its identifier.
  signature: 'async get_entity_tag(resource_group_name: str, service_name: str, portal_revision_id:
    str, **kwargs: Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: portal_revision_id
    description: 'Portal revision identifier. Must be unique in the current API

      Management service instance. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.list_by_service
  name: list_by_service
  summary: Lists developer portal's revisions.
  signature: 'list_by_service(resource_group_name: str, service_name: str, filter:
    str | None = None, top: int | None = None, skip: int | None = None, **kwargs:
    Any) -> AsyncIterable[PortalRevisionContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: '>>|name | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
      endswith|<<

      >>|description | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
      endswith|<<

      >>|<<isCurrent | eq, ne |    >>|<<. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of records to return. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: skip
    description: Number of records to skip. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: 'An iterator like instance of either PortalRevisionContract or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.PortalRevisionContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.PortalRevisionOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv64\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
