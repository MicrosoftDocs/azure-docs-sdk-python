### YamlMime:PythonClass
uid: azure.mgmt.apimanagement.aio.operations.UserOperations
name: UserOperations
fullName: azure.mgmt.apimanagement.aio.operations.UserOperations
module: azure.mgmt.apimanagement.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.apimanagement.aio.ApiManagementClient>'s\n\
  >\n> <xref:user> attribute.\n>"
constructor:
  syntax: UserOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.begin_delete
  name: begin_delete
  summary: Deletes specific user.
  signature: 'async begin_delete(resource_group_name: str, service_name: str, user_id:
    str, if_match: str, delete_subscriptions: bool | None = None, notify: bool | None
    = None, app_type: str | AppType | None = None, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: delete_subscriptions
    description: 'Whether to delete user''s subscription or not. Default value is

      None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: notify
    description: Send an Account Closed Email notification to the User. Default value
      is None.
    defaultValue: None
    types:
    - <xref:bool>
  - name: app_type
    description: 'Determines the type of application which send the create user request.
      Default

      is legacy publisher portal. Known values are: "portal" and "developerPortal".
      Default value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.apimanagement.models.AppType>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.create_or_update
  name: create_or_update
  summary: Creates or Updates a user.
  signature: 'async create_or_update(resource_group_name: str, service_name: str,
    user_id: str, parameters: _models.UserCreateParameters, notify: bool | None =
    None, if_match: str | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.UserContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Create or update parameters. Is either a UserCreateParameters type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.UserCreateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  - name: notify
    description: Send an Email notification to the User. Default value is None.
    defaultValue: None
    types:
    - <xref:bool>
  - name: if_match
    description: 'ETag of the Entity. Not required when creating an entity, but required
      when

      updating an entity. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: UserContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.UserContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.generate_sso_url
  name: generate_sso_url
  summary: 'Retrieves a redirection URL containing an authentication token for signing
    a given user into

    the developer portal.'
  signature: 'async generate_sso_url(resource_group_name: str, service_name: str,
    user_id: str, **kwargs: Any) -> GenerateSsoUrlResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GenerateSsoUrlResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.GenerateSsoUrlResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.get
  name: get
  summary: Gets the details of the user specified by its identifier.
  signature: 'async get(resource_group_name: str, service_name: str, user_id: str,
    **kwargs: Any) -> UserContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: UserContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.UserContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.get_entity_tag
  name: get_entity_tag
  summary: Gets the entity state (Etag) version of the user specified by its identifier.
  signature: 'async get_entity_tag(resource_group_name: str, service_name: str, user_id:
    str, **kwargs: Any) -> bool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool or the result of cls(response)
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.get_shared_access_token
  name: get_shared_access_token
  summary: Gets the Shared Access Authorization Token for the User.
  signature: 'async get_shared_access_token(resource_group_name: str, service_name:
    str, user_id: str, parameters: _models.UserTokenParameters, *, content_type: str
    = ''application/json'', **kwargs: Any) -> _models.UserTokenResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Create Authorization Token parameters. Is either a UserTokenParameters
      type

      or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.UserTokenParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: UserTokenResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.UserTokenResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.list_by_service
  name: list_by_service
  summary: Lists a collection of registered users in the specified service instance.
  signature: 'list_by_service(resource_group_name: str, service_name: str, filter:
    str | None = None, top: int | None = None, skip: int | None = None, expand_groups:
    bool | None = None, **kwargs: Any) -> AsyncIterable[UserContract]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: "Field     |     Usage     |     Supported operators     |     Supported\n\
      \n\nfunctions     >>|</br>|<<\u2014\u2014\u2014\u2014->>|-------------|<<\u2014\
      \u2014\u2014\u2014->>|-------------|</br>|<< name |\nfilter | ge, le, eq, ne,\
      \ gt, lt | substringof, contains, startswith, endswith >>|</br>|<< firstName\n\
      | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith\
      \ >>|</br>|<<\nlastName | filter | ge, le, eq, ne, gt, lt | substringof, contains,\
      \ startswith, endswith\n>>|</br>|<< email | filter | ge, le, eq, ne, gt, lt\
      \ | substringof, contains, startswith, endswith\n>>|</br>|<< state | filter\
      \ | eq |     >>|</br>|<< registrationDate | filter | ge, le, eq, ne, gt, lt\
      \ |\n>>|</br>|<< note | filter | ge, le, eq, ne, gt, lt | substringof, contains,\
      \ startswith, endswith\n>>|</br>|<< groups | expand |     |     >>|<<</br>.\
      \ Default value is None."
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: Number of records to return. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: skip
    description: Number of records to skip. Default value is None.
    defaultValue: None
    types:
    - <xref:int>
  - name: expand_groups
    description: Detailed Group in response. Default value is None.
    defaultValue: None
    types:
    - <xref:bool>
  return:
    description: An iterator like instance of either UserContract or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.apimanagement.models.UserContract>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.update
  name: update
  summary: Updates the details of the user specified by its identifier.
  signature: 'async update(resource_group_name: str, service_name: str, user_id: str,
    if_match: str, parameters: _models.UserUpdateParameters, *, content_type: str
    = ''application/json'', **kwargs: Any) -> _models.UserContract'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: The name of the API Management service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'User identifier. Must be unique in the current API Management service
      instance.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'ETag of the Entity. ETag should match the current entity state from
      the header

      response of the GET request or it should be * for unconditional update. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Update parameters. Is either a UserUpdateParameters type or a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.apimanagement.models.UserUpdateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: UserContract or the result of cls(response)
    types:
    - <xref:azure.mgmt.apimanagement.models.UserContract>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.apimanagement.aio.operations.UserOperations.models
  name: models
  signature: models = <module 'azure.mgmt.apimanagement.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv64\\Lib\\site-packages\\azure\\mgmt\\apimanagement\\models\\__init__.py'>
