### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  - azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  - azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  - azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  - azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  - azure.eventprocessorhost.partition_context.PartitionContext.to_string
  class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: PartitionContext
  source:
    id: PartitionContext
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 13
  summary: 'Encapsulates information related to an Event Hubs partition used by AbstractEventProcessor







    '
  syntax:
    content: PartitionContext(host, partition_id, eh_path, consumer_group_name, pump_loop=None)
  type: class
  uid: azure.eventprocessorhost.partition_context.PartitionContext
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: checkpoint_async
  source:
    id: checkpoint_async
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 60
  summary: 'Generates a checkpoint for the partition using the curren offset and sequenceNumber
    for

    and persists to the checkpoint manager

    '
  syntax:
    content: checkpoint_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: checkpoint_async_event_data
  source:
    id: checkpoint_async_event_data
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 68
  summary: 'Stores the offset and sequenceNumber from the provided received EventData
    instance,

    then writes those values to the checkpoint store via the checkpoint manager.

    :param event_data: A received EventData with valid offset and sequenceNumber.

    :type event_data: ~azure.eventhub.EventData

    :raises: ValueError if suplied event_data is None

    :raises: ValueError if the sequenceNumber is less than the last checkpointed value.

    '
  syntax:
    content: checkpoint_async_event_data(event_data)
    parameters:
    - id: event_data
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: get_initial_offset_async
  source:
    id: get_initial_offset_async
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 39
  summary: 'Gets the initial offset for processing the partition.

    :returns: str

    '
  syntax:
    content: get_initial_offset_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: persist_checkpoint_async
  source:
    id: persist_checkpoint_async
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 98
  summary: 'Persists the checkpoint

    :param checkpoint: The checkpoint to persist.

    :type checkpoint: ~azure.eventprocessorhost.Checkpoint

    '
  syntax:
    content: persist_checkpoint_async(checkpoint)
    parameters:
    - id: checkpoint
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: set_offset_and_sequence_number
  source:
    id: set_offset_and_sequence_number
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 28
  summary: 'Updates offset based on event.

    :param event_data: A received EventData with valid offset and sequenceNumber.

    :type event_data: ~azure.eventhub.EventData

    '
  syntax:
    content: set_offset_and_sequence_number(event_data)
    parameters:
    - id: event_data
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
- class: azure.eventprocessorhost.partition_context.PartitionContext
  fullName: azure.eventprocessorhost.partition_context.PartitionContext.to_string
  langs:
  - python
  module: azure.eventprocessorhost.partition_context
  name: to_string
  source:
    id: to_string
    path: azure\eventprocessorhost\partition_context.py
    remote:
      branch: develop
      path: azure\eventprocessorhost\partition_context.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 87
  summary: 'Returns the parition context in the following format:

    "PartitionContext({EventHubPath}{ConsumerGroupName}{PartitionId}{SequenceNumber})"

    :returns: str

    '
  syntax:
    content: to_string()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_context.PartitionContext.to_string
references:
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
  isExternal: false
  name: checkpoint_async
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
  isExternal: false
  name: checkpoint_async_event_data
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.checkpoint_async_event_data
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
  isExternal: false
  name: get_initial_offset_async
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.get_initial_offset_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
  isExternal: false
  name: persist_checkpoint_async
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.persist_checkpoint_async
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
  isExternal: false
  name: set_offset_and_sequence_number
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.set_offset_and_sequence_number
- fullName: azure.eventprocessorhost.partition_context.PartitionContext.to_string
  isExternal: false
  name: to_string
  parent: azure.eventprocessorhost.partition_context.PartitionContext
  uid: azure.eventprocessorhost.partition_context.PartitionContext.to_string
