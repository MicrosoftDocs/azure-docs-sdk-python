### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.baseblobservice.BaseBlobService.abort_copy_blob
  - azure.storage.blob.baseblobservice.BaseBlobService.acquire_blob_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.acquire_container_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.break_blob_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.break_container_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.change_blob_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.change_container_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.copy_blob
  - azure.storage.blob.baseblobservice.BaseBlobService.create_container
  - azure.storage.blob.baseblobservice.BaseBlobService.delete_blob
  - azure.storage.blob.baseblobservice.BaseBlobService.delete_container
  - azure.storage.blob.baseblobservice.BaseBlobService.exists
  - azure.storage.blob.baseblobservice.BaseBlobService.generate_account_shared_access_signature
  - azure.storage.blob.baseblobservice.BaseBlobService.generate_blob_shared_access_signature
  - azure.storage.blob.baseblobservice.BaseBlobService.generate_container_shared_access_signature
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_metadata
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_properties
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_properties
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_stats
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_bytes
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_path
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_stream
  - azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_text
  - azure.storage.blob.baseblobservice.BaseBlobService.get_container_acl
  - azure.storage.blob.baseblobservice.BaseBlobService.get_container_metadata
  - azure.storage.blob.baseblobservice.BaseBlobService.get_container_properties
  - azure.storage.blob.baseblobservice.BaseBlobService.list_blobs
  - azure.storage.blob.baseblobservice.BaseBlobService.list_containers
  - azure.storage.blob.baseblobservice.BaseBlobService.make_blob_url
  - azure.storage.blob.baseblobservice.BaseBlobService.make_container_url
  - azure.storage.blob.baseblobservice.BaseBlobService.release_blob_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.release_container_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.renew_blob_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.renew_container_lease
  - azure.storage.blob.baseblobservice.BaseBlobService.set_blob_metadata
  - azure.storage.blob.baseblobservice.BaseBlobService.set_blob_properties
  - azure.storage.blob.baseblobservice.BaseBlobService.set_blob_service_properties
  - azure.storage.blob.baseblobservice.BaseBlobService.set_container_acl
  - azure.storage.blob.baseblobservice.BaseBlobService.set_container_metadata
  - azure.storage.blob.baseblobservice.BaseBlobService.snapshot_blob
  - azure.storage.blob.baseblobservice.BaseBlobService.undelete_blob
  - azure.storage.blob.baseblobservice.BaseBlobService.MAX_CHUNK_GET_SIZE
  - azure.storage.blob.baseblobservice.BaseBlobService.MAX_SINGLE_GET_SIZE
  class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.common.storageclient.StorageClient
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: BaseBlobService
  source:
    id: BaseBlobService
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 94
  summary: 'This is the main class managing Blob resources.


    The Blob service stores text and binary data as blobs in the cloud.

    The Blob service offers the following three resources: the storage account,

    containers, and blobs. Within your storage account, containers provide a

    way to organize sets of blobs. For more information please see:

    [https://msdn.microsoft.com/en-us/library/azure/ee691964.aspx](https://msdn.microsoft.com/en-us/library/azure/ee691964.aspx)












































    '
  syntax:
    content: BaseBlobService(account_name=None, account_key=None, sas_token=None,
      is_emulated=False, protocol='https', endpoint_suffix='core.windows.net', custom_domain=None,
      request_session=None, connection_string=None, socket_timeout=None, token_credential=None)
    variables:
    - description: 'The size of the first range get performed by get_blob_to_* methods
        if

        max_connections is greater than 1. Less data will be returned if the

        blob is smaller than this.

        '
      id: MAX_SINGLE_GET_SIZE
      type:
      - int
    - description: 'The size of subsequent range gets performed by get_blob_to_* methods
        if

        max_connections is greater than 1 and the blob is larger than MAX_SINGLE_GET_SIZE.

        Less data will be returned if the remainder of the blob is smaller than

        this. If this is set to larger than 4MB, content_validation will throw an

        error if enabled. However, if content_validation is not desired a size

        greater than 4MB may be optimal. Setting this below 4MB is not recommended.

        '
      id: MAX_CHUNK_GET_SIZE
      type:
      - int
    - description: 'The key-encryption-key optionally provided by the user. If provided,
        will be used to

        encrypt/decrypt in supported methods.

        For methods requiring decryption, either the key_encryption_key OR the resolver
        must be provided.

        If both are provided, the resolver will take precedence.

        Must implement the following methods for APIs requiring encryption:

        wrap_key(key)--wraps the specified key (bytes) using an algorithm of the user''s
        choice. Returns the encrypted key as bytes.

        get_key_wrap_algorithm()--returns the algorithm used to wrap the specified
        symmetric key.

        get_kid()--returns a string key id for this key-encryption-key.

        Must implement the following methods for APIs requiring decryption:

        unwrap_key(key, algorithm)--returns the unwrapped form of the specified symmetric
        key using the string-specified algorithm.

        get_kid()--returns a string key id for this key-encryption-key.

        '
      id: key_encryption_key
      type:
      - object
    - description: 'A function to resolve keys optionally provided by the user. If
        provided, will be used to decrypt in supported methods.

        For methods requiring decryption, either the key_encryption_key OR

        the resolver must be provided. If both are provided, the resolver will take
        precedence.

        It uses the kid string to return a key-encryption-key implementing the interface
        defined above.

        '
      id: key_resolver_function(kid)
      type:
      - function
    - description: 'A flag that may be set to ensure that all messages successfully
        uploaded to the queue and all those downloaded and

        successfully read from the queue are/were encrypted while on the server. If
        this flag is set, all required

        parameters for encryption/decryption must be provided. See the above comments
        on the key_encryption_key and resolver.

        '
      id: require_encryption
      type:
      - bool
  type: class
  uid: azure.storage.blob.baseblobservice.BaseBlobService
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.abort_copy_blob
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: abort_copy_blob
  source:
    id: abort_copy_blob
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 3111
  summary: 'Aborts a pending copy_blob operation, and leaves a destination blob

    with zero length and full metadata.

    '
  syntax:
    content: abort_copy_blob(container_name, blob_name, copy_id, lease_id=None, timeout=None)
    parameters:
    - description: 'Name of destination container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of destination blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Copy identifier provided in the copy.id of the original

        copy_blob operation.

        '
      id: copy_id
      type:
      - str
    - defaultValue: None
      description: 'Required if the destination blob has an active infinite lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.abort_copy_blob
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.acquire_blob_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: acquire_blob_lease
  source:
    id: acquire_blob_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2521
  summary: 'Requests a new lease. If the blob does not have an active lease, the Blob

    service creates a lease on the blob and returns a new lease ID.

    '
  syntax:
    content: acquire_blob_lease(container_name, blob_name, lease_duration=-1, proposed_lease_id=None,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: '-1'
      description: 'Specifies the duration of the lease, in seconds, or negative one

        (-1) for a lease that never expires. A non-infinite lease can be

        between 15 and 60 seconds. A lease duration cannot be changed

        using renew or change. Default is -1 (infinite lease).

        '
      id: lease_duration
      type:
      - int
    - defaultValue: None
      description: 'Proposed lease ID, in a GUID string format. The Blob service

        returns 400 (Invalid request) if the proposed lease ID is not

        in the correct format.

        '
      id: proposed_lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'str

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.acquire_blob_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.acquire_container_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: acquire_container_lease
  source:
    id: acquire_container_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 967
  summary: 'Requests a new lease. If the container does not have an active lease,

    the Blob service creates a lease on the container and returns a new

    lease ID.

    '
  syntax:
    content: acquire_container_lease(container_name, lease_duration=-1, proposed_lease_id=None,
      if_modified_since=None, if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: '-1'
      description: 'Specifies the duration of the lease, in seconds, or negative one

        (-1) for a lease that never expires. A non-infinite lease can be

        between 15 and 60 seconds. A lease duration cannot be changed

        using renew or change. Default is -1 (infinite lease).

        '
      id: lease_duration
      type:
      - int
    - defaultValue: None
      description: 'Proposed lease ID, in a GUID string format. The Blob service returns

        400 (Invalid request) if the proposed lease ID is not in the correct format.

        '
      id: proposed_lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'str

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.acquire_container_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.break_blob_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: break_blob_lease
  source:
    id: break_blob_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2703
  summary: 'Breaks the lease, if the blob has an active lease. Once a lease is broken,

    it cannot be renewed. Any authorized request can break the lease; the request

    is not required to specify a matching lease ID. When a lease is broken,

    the lease break period is allowed to elapse, during which time no lease operation

    except break and release can be performed on the blob. When a lease is successfully

    broken, the response indicates the interval in seconds until a new lease can be
    acquired.


    A lease that has been broken can also be released, in which case another client
    may

    immediately acquire the lease on the blob.

    '
  syntax:
    content: break_blob_lease(container_name, blob_name, lease_break_period=None,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'For a break operation, this is the proposed duration of

        seconds that the lease should continue before it is broken, between

        0 and 60 seconds. This break period is only used if it is shorter

        than the time remaining on the lease. If longer, the time remaining

        on the lease is used. A new lease will not be available before the

        break period has expired, but the lease may be held for longer than

        the break period. If this header does not appear with a break

        operation, a fixed-duration lease breaks after the remaining lease

        period elapses, and an infinite lease breaks immediately.

        '
      id: lease_break_period
      type:
      - int
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'int

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.break_blob_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.break_container_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: break_container_lease
  source:
    id: break_container_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1101
  summary: 'Break the lease, if the container has an active lease. Once a lease is

    broken, it cannot be renewed. Any authorized request can break the lease;

    the request is not required to specify a matching lease ID. When a lease

    is broken, the lease break period is allowed to elapse, during which time

    no lease operation except break and release can be performed on the container.

    When a lease is successfully broken, the response indicates the interval

    in seconds until a new lease can be acquired.

    '
  syntax:
    content: break_container_lease(container_name, lease_break_period=None, if_modified_since=None,
      if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'This is the proposed duration of seconds that the lease

        should continue before it is broken, between 0 and 60 seconds. This

        break period is only used if it is shorter than the time remaining

        on the lease. If longer, the time remaining on the lease is used.

        A new lease will not be available before the break period has

        expired, but the lease may be held for longer than the break

        period. If this header does not appear with a break

        operation, a fixed-duration lease breaks after the remaining lease

        period elapses, and an infinite lease breaks immediately.

        '
      id: lease_break_period
      type:
      - int
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'int

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.break_container_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.change_blob_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: change_blob_lease
  source:
    id: change_blob_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2777
  summary: 'Changes the lease ID of an active lease. A change must include the current

    lease ID and a new lease ID.

    '
  syntax:
    content: change_blob_lease(container_name, blob_name, lease_id, proposed_lease_id,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - description: 'Proposed lease ID, in a GUID string format. The Blob service returns

        400 (Invalid request) if the proposed lease ID is not in the correct format.

        '
      id: proposed_lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.change_blob_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.change_container_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: change_container_lease
  source:
    id: change_container_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1156
  summary: 'Change the lease ID of an active lease. A change must include the current

    lease ID and a new lease ID.

    '
  syntax:
    content: change_container_lease(container_name, lease_id, proposed_lease_id, if_modified_since=None,
      if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Lease ID for active lease.

        '
      id: lease_id
      type:
      - str
    - description: 'Proposed lease ID, in a GUID string format. The Blob service returns
        400

        (Invalid request) if the proposed lease ID is not in the correct format.

        '
      id: proposed_lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.change_container_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.copy_blob
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: copy_blob
  source:
    id: copy_blob
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2901
  summary: 'Copies a blob asynchronously. This operation returns a copy operation

    properties object, including a copy ID you can use to check or abort the

    copy operation. The Blob service copies blobs on a best-effort basis.


    The source blob for a copy operation may be a block blob, an append blob,

    or a page blob. If the destination blob already exists, it must be of the

    same blob type as the source blob. Any existing destination blob will be

    overwritten. The destination blob cannot be modified while a copy operation

    is in progress.


    When copying from a page blob, the Blob service creates a destination page

    blob of the source blob''s length, initially containing all zeroes. Then

    the source page ranges are enumerated, and non-empty ranges are copied.


    For a block blob or an append blob, the Blob service creates a committed

    blob of zero length before returning from this operation. When copying

    from a block blob, all committed blocks and their block IDs are copied.

    Uncommitted blocks are not copied. At the end of the copy operation, the

    destination blob will have the same committed block count as the source.


    When copying from an append blob, all committed blocks are copied. At the

    end of the copy operation, the destination blob will have the same committed

    block count as the source.


    For all blob types, you can call get_blob_properties on the destination

    blob to check the status of the copy operation. The final blob will be

    committed when the copy completes.

    '
  syntax:
    content: copy_blob(container_name, blob_name, copy_source, metadata=None, source_if_modified_since=None,
      source_if_unmodified_since=None, source_if_match=None, source_if_none_match=None,
      destination_if_modified_since=None, destination_if_unmodified_since=None, destination_if_match=None,
      destination_if_none_match=None, destination_lease_id=None, source_lease_id=None,
      timeout=None)
    parameters:
    - description: 'Name of the destination container. The container must exist.

        '
      id: container_name
      type:
      - str
    - description: 'Name of the destination blob. If the destination blob exists,
        it will

        be overwritten. Otherwise, it will be created.

        '
      id: blob_name
      type:
      - str
    - description: 'A URL of up to 2 KB in length that specifies an Azure file or
        blob.

        The value should be URL-encoded as it would appear in a request URI.

        If the source is in another account, the source must either be public

        or must be authenticated via a shared access signature. If the source

        is public, no authentication is required.

        Examples:

        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)

        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)?snapshot=<DateTime>

        [https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken](https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken)

        '
      id: copy_source
      type:
      - str
    - defaultValue: None
      description: 'Name-value pairs associated with the blob as metadata. If no name-value

        pairs are specified, the operation will copy the metadata from the

        source blob or file to the destination blob. If one or more name-value

        pairs are specified, the destination blob is created with the specified

        metadata, and metadata is not copied from the source blob or file.

        '
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source

        blob has been modified since the specified date/time.

        '
      id: source_if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source blob

        has not been modified since the specified date/time.

        '
      id: source_if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this conditional

        header to copy the source blob only if its ETag matches the value

        specified. If the ETag values do not match, the Blob service returns

        status code 412 (Precondition Failed). This header cannot be specified

        if the source is an Azure File.

        '
      id: source_if_match
      type:
      - ETag
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this conditional

        header to copy the blob only if its ETag does not match the value

        specified. If the values are identical, the Blob service returns status

        code 412 (Precondition Failed). This header cannot be specified if the

        source is an Azure File.

        '
      id: source_if_none_match
      type:
      - ETag
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has been modified since the specified date/time.

        If the destination blob has not been modified, the Blob service returns

        status code 412 (Precondition Failed).

        '
      id: destination_if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has not been modified since the specified

        date/time. If the destination blob has been modified, the Blob service

        returns status code 412 (Precondition Failed).

        '
      id: destination_if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for

        this conditional header to copy the blob only if the specified ETag value

        matches the ETag value for an existing destination blob. If the ETag for

        the destination blob does not match the ETag specified for If-Match, the

        Blob service returns status code 412 (Precondition Failed).

        '
      id: destination_if_match
      type:
      - ETag
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for

        this conditional header to copy the blob only if the specified ETag value

        does not match the ETag value for the destination blob. Specify the wildcard

        character (*) to perform the operation only if the destination blob does not

        exist. If the specified condition isn''t met, the Blob service returns status

        code 412 (Precondition Failed).

        '
      id: destination_if_none_match
      type:
      - ETag
    - defaultValue: None
      description: 'The lease ID specified for this header must match the lease ID
        of the

        destination blob. If the request does not include the lease ID or it is not

        valid, the operation fails with status code 412 (Precondition Failed).

        '
      id: destination_lease_id
      type:
      - str
    - defaultValue: None
      description: 'Specify this to perform the Copy Blob operation only if

        the lease ID given matches the active lease ID of the source blob.

        '
      id: source_lease_id
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'Copy operation properties such as status, source, and ID.

        '
      type:
      - azure.storage.blob.models.CopyProperties
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.copy_blob
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.create_container
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: create_container
  source:
    id: create_container
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 587
  summary: 'Creates a new container under the specified account. If the container

    with the same name already exists, the operation fails if

    fail_on_exist is True.

    '
  syntax:
    content: create_container(container_name, metadata=None, public_access=None, fail_on_exist=False,
      timeout=None)
    parameters:
    - description: 'Name of container to create.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'A dict with name_value pairs to associate with the

        container as metadata. Example:{''Category'':''test''}

        '
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: 'Possible values include: container, blob.

        '
      id: public_access
      type:
      - azure.storage.blob.models.PublicAccess
    - defaultValue: 'False'
      description: 'Specify whether to throw an exception when the container exists.

        '
      id: fail_on_exist
      type:
      - bool
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'True if container is created, False if container already exists.

        '
      type:
      - bool
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.create_container
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.delete_blob
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: delete_blob
  source:
    id: delete_blob
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 3148
  summary: 'Marks the specified blob or snapshot for deletion.

    The blob is later deleted during garbage collection.


    Note that in order to delete a blob, you must delete all of its

    snapshots. You can delete both at the same time with the Delete

    Blob operation.


    If a delete retention policy is enabled for the service, then this operation soft
    deletes the blob or snapshot

    and retains the blob or snapshot for specified number of days.

    After specified number of days, blob''s data is removed from the service during
    garbage collection.

    Soft deleted blob or snapshot is accessible through List Blobs API specifying
    include=Include.Deleted option.

    Soft-deleted blob or snapshot can be restored using Undelete API.

    '
  syntax:
    content: delete_blob(container_name, blob_name, snapshot=None, lease_id=None,
      delete_snapshots=None, if_modified_since=None, if_unmodified_since=None, if_match=None,
      if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to delete.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'Required if the blob has associated snapshots.

        '
      id: delete_snapshots
      type:
      - azure.storage.blob.models.DeleteSnapshot
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.delete_blob
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.delete_container
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: delete_container
  source:
    id: delete_container
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 826
  summary: 'Marks the specified container for deletion. The container and any blobs

    contained within it are later deleted during garbage collection.

    '
  syntax:
    content: delete_container(container_name, fail_not_exist=False, lease_id=None,
      if_modified_since=None, if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of container to delete.

        '
      id: container_name
      type:
      - str
    - defaultValue: 'False'
      description: 'Specify whether to throw an exception when the container doesn''t

        exist.

        '
      id: fail_not_exist
      type:
      - bool
    - defaultValue: None
      description: 'If specified, delete_container only succeeds if the

        container''s lease is active and matches this ID.

        Required if the container has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'True if container is deleted, False container doesn''t exist.

        '
      type:
      - bool
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.delete_container
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.exists
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: exists
  source:
    id: exists
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1559
  summary: 'Returns a boolean indicating whether the container exists (if blob_name

    is None), or otherwise a boolean indicating whether the blob exists.

    '
  syntax:
    content: exists(container_name, blob_name=None, snapshot=None, timeout=None)
    parameters:
    - description: 'Name of a container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'Name of a blob. If None, the container will be checked for existence.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the snapshot.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A boolean indicating whether the resource exists.

        '
      type:
      - bool
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.exists
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_account_shared_access_signature
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: generate_account_shared_access_signature
  source:
    id: generate_account_shared_access_signature
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 287
  summary: 'Generates a shared access signature for the blob service.

    Use the returned signature with the sas_token parameter of any BlobService.

    '
  syntax:
    content: generate_account_shared_access_signature(resource_types, permission,
      expiry, start=None, ip=None, protocol=None)
    parameters:
    - description: 'Specifies the resource types that are accessible with the account
        SAS.

        '
      id: resource_types
      type:
      - ResourceTypes
    - description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.

        '
      id: permission
      type:
      - AccountPermissions
    - description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.

        '
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.

        '
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.

        '
      id: ip
      type:
      - str
    - defaultValue: None
      description: 'Specifies the protocol permitted for a request made. The default
        value

        is https,http. See @azure.storage.common.models.Protocol for possible values.

        '
      id: protocol
      type:
      - str
    return:
      description: 'A Shared Access Signature (sas) token.

        '
      type:
      - str
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_account_shared_access_signature
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_blob_shared_access_signature
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: generate_blob_shared_access_signature
  source:
    id: generate_blob_shared_access_signature
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 420
  summary: 'Generates a shared access signature for the blob.

    Use the returned signature with the sas_token parameter of any BlobService.

    '
  syntax:
    content: generate_blob_shared_access_signature(container_name, blob_name, permission=None,
      expiry=None, start=None, id=None, ip=None, protocol=None, cache_control=None,
      content_disposition=None, content_encoding=None, content_language=None, content_type=None)
    parameters:
    - description: 'Name of container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.

        '
      id: permission
      type:
      - BlobPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.

        '
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.

        '
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy. To create a stored access policy, use @azure.storage.blob.baseblobservice.set_container_acl.

        '
      id: id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.

        '
      id: ip
      type:
      - str
    - defaultValue: None
      description: 'Specifies the protocol permitted for a request made. The default
        value

        is https,http. See @azure.storage.common.models.Protocol for possible values.

        '
      id: protocol
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.

        '
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.

        '
      id: content_disposition
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.

        '
      id: content_encoding
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.

        '
      id: content_language
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.

        '
      id: content_type
      type:
      - str
    return:
      description: 'A Shared Access Signature (sas) token.

        '
      type:
      - str
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_blob_shared_access_signature
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_container_shared_access_signature
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: generate_container_shared_access_signature
  source:
    id: generate_container_shared_access_signature
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 335
  summary: 'Generates a shared access signature for the container.

    Use the returned signature with the sas_token parameter of any BlobService.

    '
  syntax:
    content: generate_container_shared_access_signature(container_name, permission=None,
      expiry=None, start=None, id=None, ip=None, protocol=None, cache_control=None,
      content_disposition=None, content_encoding=None, content_language=None, content_type=None)
    parameters:
    - description: 'Name of container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.

        '
      id: permission
      type:
      - ContainerPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.

        '
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.

        '
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy. To create a stored access policy, use

        set_blob_service_properties.

        '
      id: id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the
        SAS

        restricts the request to those IP addresses.

        '
      id: ip
      type:
      - str
    - defaultValue: None
      description: 'Specifies the protocol permitted for a request made. The default
        value

        is https,http. See @azure.storage.common.models.Protocol for possible values.

        '
      id: protocol
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.

        '
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.

        '
      id: content_disposition
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.

        '
      id: content_encoding
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.

        '
      id: content_language
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.

        '
      id: content_type
      type:
      - str
    return:
      description: 'A Shared Access Signature (sas) token.

        '
      type:
      - str
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_container_shared_access_signature
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_metadata
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_metadata
  source:
    id: get_blob_metadata
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2296
  summary: 'Returns all user-defined metadata for the specified blob or snapshot.

    '
  syntax:
    content: get_blob_metadata(container_name, blob_name, snapshot=None, lease_id=None,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A dictionary representing the blob metadata name, value pairs.

        '
      type:
      - dict(str, str)
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_metadata
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_properties
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_properties
  source:
    id: get_blob_properties
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1430
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the blob. It does not return the content of the blob.

    Returns @azure.storage.blob.models.Blob

    with @azure.storage.blob.models.BlobProperties and a metadata dict.

    '
  syntax:
    content: get_blob_properties(container_name, blob_name, snapshot=None, lease_id=None,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'a blob object including properties and metadata.

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_properties
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_properties
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_service_properties
  source:
    id: get_blob_service_properties
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1408
  summary: 'Gets the properties of a storage account''s Blob service, including

    Azure Storage Analytics.

    '
  syntax:
    content: get_blob_service_properties(timeout=None)
    parameters:
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'The blob @azure.storage.common.models.ServiceProperties with an
        attached

        target_version property.

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_properties
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_stats
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_service_stats
  source:
    id: get_blob_service_stats
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1319
  summary: 'Retrieves statistics related to replication for the Blob service. It is

    only available when read-access geo-redundant replication is enabled for

    the storage account.


    With geo-redundant replication, Azure Storage maintains your data durable

    in two locations. In both locations, Azure Storage constantly maintains

    multiple healthy replicas of your data. The location where you read,

    create, update, or delete data is the primary storage account location.

    The primary location exists in the region you choose at the time you

    create an account via the Azure Management Azure classic portal, for

    example, North Central US. The location to which your data is replicated

    is the secondary location. The secondary location is automatically

    determined based on the location of the primary; it is in a second data

    center that resides in the same region as the primary location. Read-only

    access is available from the secondary location, if read-access geo-redundant

    replication is enabled for your storage account.

    '
  syntax:
    content: get_blob_service_stats(timeout=None)
    parameters:
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'The blob service stats.

        '
      type:
      - azure.storage.common.models.ServiceStats
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_stats
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_bytes
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_to_bytes
  source:
    id: get_blob_to_bytes
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2071
  summary: 'Downloads a blob as an array of bytes, with automatic chunking and

    progress notifications. Returns an instance of @azure.storage.blob.models.Blob
    with

    properties, metadata, and content.

    '
  syntax:
    content: get_blob_to_bytes(container_name, blob_name, snapshot=None, start_range=None,
      end_range=None, validate_content=False, progress_callback=None, max_connections=2,
      lease_id=None, if_modified_since=None, if_unmodified_since=None, if_match=None,
      if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Start of byte range to use for downloading a section of the blob.

        If no end_range is given, all bytes after the start_range will be downloaded.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: start_range
      type:
      - int
    - defaultValue: None
      description: 'End of byte range to use for downloading a section of the blob.

        If end_range is given, start_range must be provided.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: end_range
      type:
      - int
    - defaultValue: 'False'
      description: 'If set to true, validates an MD5 hash for each retrieved portion
        of

        the blob. This is primarily valuable for detecting bitflips on the wire

        if using http instead of https as https (the default) will already

        validate. Note that the service will only return transactional MD5s

        for chunks 4MB or less so the first get request will be of size

        self.MAX_CHUNK_GET_SIZE instead of self.MAX_SINGLE_GET_SIZE. If

        self.MAX_CHUNK_GET_SIZE was set to greater than 4MB an error will be

        thrown. As computing the MD5 takes processing time and more requests

        will need to be done due to the reduced chunk size there may be some

        increase in latency.

        '
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: 'Callback for progress with signature function(current, total)

        where current is the number of bytes transfered so far, and total is

        the size of the blob if known.

        '
      id: progress_callback
      type:
      - func(current, total)
    - defaultValue: '2'
      description: 'If set to 2 or greater, an initial get will be done for the first

        self.MAX_SINGLE_GET_SIZE bytes of the blob. If this is the entire blob,

        the method returns at this point. If it is not, it will download the

        remaining data parallel using the number of threads equal to

        max_connections. Each chunk will be of size self.MAX_CHUNK_GET_SIZE.

        If set to 1, a single large get request will be done. This is not

        generally recommended but available if very few threads should be

        used, network requests are very expensive, or a non-seekable stream

        prevents parallel download. This may also be useful if many blobs are

        expected to be empty as an extra request is required for empty blobs

        if max_connections is greater than 1.

        '
      id: max_connections
      type:
      - int
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A Blob with properties and metadata. If max_connections is greater

        than 1, the content_md5 (if set on the blob) will not be returned. If you

        require this value, either use get_blob_properties or set max_connections

        to 1.

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_bytes
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_path
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_to_path
  source:
    id: get_blob_to_path
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1704
  summary: 'Downloads a blob to a file path, with automatic chunking and progress

    notifications. Returns an instance of @azure.storage.blob.models.Blob with

    properties and metadata.

    '
  syntax:
    content: get_blob_to_path(container_name, blob_name, file_path, open_mode='wb',
      snapshot=None, start_range=None, end_range=None, validate_content=False, progress_callback=None,
      max_connections=2, lease_id=None, if_modified_since=None, if_unmodified_since=None,
      if_match=None, if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Path of file to write out to.

        '
      id: file_path
      type:
      - str
    - defaultValue: wb
      description: 'Mode to use when opening the file. Note that specifying append
        only

        open_mode prevents parallel download. So, max_connections must be set

        to 1 if this open_mode is used.

        '
      id: open_mode
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Start of byte range to use for downloading a section of the blob.

        If no end_range is given, all bytes after the start_range will be downloaded.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: start_range
      type:
      - int
    - defaultValue: None
      description: 'End of byte range to use for downloading a section of the blob.

        If end_range is given, start_range must be provided.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: end_range
      type:
      - int
    - defaultValue: 'False'
      description: 'If set to true, validates an MD5 hash for each retrieved portion
        of

        the blob. This is primarily valuable for detecting bitflips on the wire

        if using http instead of https as https (the default) will already

        validate. Note that the service will only return transactional MD5s

        for chunks 4MB or less so the first get request will be of size

        self.MAX_CHUNK_GET_SIZE instead of self.MAX_SINGLE_GET_SIZE. If

        self.MAX_CHUNK_GET_SIZE was set to greater than 4MB an error will be

        thrown. As computing the MD5 takes processing time and more requests

        will need to be done due to the reduced chunk size there may be some

        increase in latency.

        '
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: 'Callback for progress with signature function(current, total)

        where current is the number of bytes transfered so far, and total is

        the size of the blob if known.

        '
      id: progress_callback
      type:
      - func(current, total)
    - defaultValue: '2'
      description: 'If set to 2 or greater, an initial get will be done for the first

        self.MAX_SINGLE_GET_SIZE bytes of the blob. If this is the entire blob,

        the method returns at this point. If it is not, it will download the

        remaining data parallel using the number of threads equal to

        max_connections. Each chunk will be of size self.MAX_CHUNK_GET_SIZE.

        If set to 1, a single large get request will be done. This is not

        generally recommended but available if very few threads should be

        used, network requests are very expensive, or a non-seekable stream

        prevents parallel download. This may also be useful if many blobs are

        expected to be empty as an extra request is required for empty blobs

        if max_connections is greater than 1.

        '
      id: max_connections
      type:
      - int
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A Blob with properties and metadata. If max_connections is greater

        than 1, the content_md5 (if set on the blob) will not be returned. If you

        require this value, either use get_blob_properties or set max_connections

        to 1.

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_path
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_stream
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_to_stream
  source:
    id: get_blob_to_stream
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1828
  summary: 'Downloads a blob to a stream, with automatic chunking and progress

    notifications. Returns an instance of @azure.storage.blob.models.Blob with

    properties and metadata.

    '
  syntax:
    content: get_blob_to_stream(container_name, blob_name, stream, snapshot=None,
      start_range=None, end_range=None, validate_content=False, progress_callback=None,
      max_connections=2, lease_id=None, if_modified_since=None, if_unmodified_since=None,
      if_match=None, if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Opened stream to write to.

        '
      id: stream
      type:
      - io.IOBase
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Start of byte range to use for downloading a section of the blob.

        If no end_range is given, all bytes after the start_range will be downloaded.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: start_range
      type:
      - int
    - defaultValue: None
      description: 'End of byte range to use for downloading a section of the blob.

        If end_range is given, start_range must be provided.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: end_range
      type:
      - int
    - defaultValue: 'False'
      description: 'If set to true, validates an MD5 hash for each retrieved portion
        of

        the blob. This is primarily valuable for detecting bitflips on the wire

        if using http instead of https as https (the default) will already

        validate. Note that the service will only return transactional MD5s

        for chunks 4MB or less so the first get request will be of size

        self.MAX_CHUNK_GET_SIZE instead of self.MAX_SINGLE_GET_SIZE. If

        self.MAX_CHUNK_GET_SIZE was set to greater than 4MB an error will be

        thrown. As computing the MD5 takes processing time and more requests

        will need to be done due to the reduced chunk size there may be some

        increase in latency.

        '
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: 'Callback for progress with signature function(current, total)

        where current is the number of bytes transfered so far, and total is

        the size of the blob if known.

        '
      id: progress_callback
      type:
      - func(current, total)
    - defaultValue: '2'
      description: 'If set to 2 or greater, an initial get will be done for the first

        self.MAX_SINGLE_GET_SIZE bytes of the blob. If this is the entire blob,

        the method returns at this point. If it is not, it will download the

        remaining data parallel using the number of threads equal to

        max_connections. Each chunk will be of size self.MAX_CHUNK_GET_SIZE.

        If set to 1, a single large get request will be done. This is not

        generally recommended but available if very few threads should be

        used, network requests are very expensive, or a non-seekable stream

        prevents parallel download. This may also be useful if many blobs are

        expected to be empty as an extra request is required for empty blobs

        if max_connections is greater than 1.

        '
      id: max_connections
      type:
      - int
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A Blob with properties and metadata. If max_connections is greater

        than 1, the content_md5 (if set on the blob) will not be returned. If you

        require this value, either use get_blob_properties or set max_connections

        to 1.

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_stream
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_text
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_blob_to_text
  source:
    id: get_blob_to_text
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2184
  summary: 'Downloads a blob as unicode text, with automatic chunking and progress

    notifications. Returns an instance of @azure.storage.blob.models.Blob with

    properties, metadata, and content.

    '
  syntax:
    content: get_blob_to_text(container_name, blob_name, encoding='utf-8', snapshot=None,
      start_range=None, end_range=None, validate_content=False, progress_callback=None,
      max_connections=2, lease_id=None, if_modified_since=None, if_unmodified_since=None,
      if_match=None, if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: utf-8
      description: 'Python encoding to use when decoding the blob data.

        '
      id: encoding
      type:
      - str
    - defaultValue: None
      description: 'The snapshot parameter is an opaque DateTime value that,

        when present, specifies the blob snapshot to retrieve.

        '
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'Start of byte range to use for downloading a section of the blob.

        If no end_range is given, all bytes after the start_range will be downloaded.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: start_range
      type:
      - int
    - defaultValue: None
      description: 'End of byte range to use for downloading a section of the blob.

        If end_range is given, start_range must be provided.

        The start_range and end_range params are inclusive.

        Ex: start_range=0, end_range=511 will download first 512 bytes of blob.

        '
      id: end_range
      type:
      - int
    - defaultValue: 'False'
      description: 'If set to true, validates an MD5 hash for each retrieved portion
        of

        the blob. This is primarily valuable for detecting bitflips on the wire

        if using http instead of https as https (the default) will already

        validate. Note that the service will only return transactional MD5s

        for chunks 4MB or less so the first get request will be of size

        self.MAX_CHUNK_GET_SIZE instead of self.MAX_SINGLE_GET_SIZE. If

        self.MAX_CHUNK_GET_SIZE was set to greater than 4MB an error will be

        thrown. As computing the MD5 takes processing time and more requests

        will need to be done due to the reduced chunk size there may be some

        increase in latency.

        '
      id: validate_content
      type:
      - bool
    - defaultValue: None
      description: 'Callback for progress with signature function(current, total)

        where current is the number of bytes transfered so far, and total is

        the size of the blob if known.

        '
      id: progress_callback
      type:
      - func(current, total)
    - defaultValue: '2'
      description: 'If set to 2 or greater, an initial get will be done for the first

        self.MAX_SINGLE_GET_SIZE bytes of the blob. If this is the entire blob,

        the method returns at this point. If it is not, it will download the

        remaining data parallel using the number of threads equal to

        max_connections. Each chunk will be of size self.MAX_CHUNK_GET_SIZE.

        If set to 1, a single large get request will be done. This is not

        generally recommended but available if very few threads should be

        used, network requests are very expensive, or a non-seekable stream

        prevents parallel download. This may also be useful if many blobs are

        expected to be empty as an extra request is required for empty blobs

        if max_connections is greater than 1.

        '
      id: max_connections
      type:
      - int
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A Blob with properties and metadata. If max_connections is greater

        than 1, the content_md5 (if set on the blob) will not be returned. If you

        require this value, either use get_blob_properties or set max_connections

        to 1.

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_text
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_acl
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_container_acl
  source:
    id: get_container_acl
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 737
  summary: 'Gets the permissions for the specified container.

    The permissions indicate whether container data may be accessed publicly.

    '
  syntax:
    content: get_container_acl(container_name, lease_id=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'If specified, get_container_acl only succeeds if the

        container''s lease is active and matches this ID.

        '
      id: lease_id
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A dictionary of access policies associated with the container.
        dict of str to

        @azure.storage.common.models.AccessPolicy and a public_access property

        if public access is turned on

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_acl
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_metadata
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_container_metadata
  source:
    id: get_container_metadata
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 662
  summary: 'Returns all user-defined metadata for the specified container.

    '
  syntax:
    content: get_container_metadata(container_name, lease_id=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'If specified, get_container_metadata only succeeds if the

        container''s lease is active and matches this ID.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'A dictionary representing the container metadata name, value pairs.

        '
      type:
      - dict(str, str)
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_metadata
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_properties
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: get_container_properties
  source:
    id: get_container_properties
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 634
  summary: 'Returns all user-defined metadata and system properties for the specified

    container. The data returned does not include the container''s list of blobs.

    '
  syntax:
    content: get_container_properties(container_name, lease_id=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'If specified, get_container_properties only succeeds if the

        container''s lease is active and matches this ID.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'properties for the specified container within a container object.

        '
      type:
      - azure.storage.blob.models.Container
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_properties
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.list_blobs
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: list_blobs
  source:
    id: list_blobs
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1197
  summary: 'Returns a generator to list the blobs under the specified container.

    The generator will lazily follow the continuation tokens returned by

    the service and stop when all blobs have been returned or num_results is reached.


    If num_results is specified and the account has more than that number of

    blobs, the generator will have a populated next_marker field once it

    finishes. This marker can be used to create a new generator if more

    results are desired.

    '
  syntax:
    content: list_blobs(container_name, prefix=None, num_results=None, include=None,
      delimiter=None, marker=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'Filters the results to return only blobs whose names

        begin with the specified prefix.

        '
      id: prefix
      type:
      - str
    - defaultValue: None
      description: 'Specifies the maximum number of blobs to return,

        including all @azure.storage.blob.baseblobservice.BlobPrefix elements. If
        the request does not specify

        num_results or specifies a value greater than 5,000, the server will

        return up to 5,000 items. Setting num_results to a value less than

        or equal to zero results in error response code 400 (Bad Request).

        '
      id: num_results
      type:
      - int
    - defaultValue: None
      description: 'Specifies one or more additional datasets to include in the response.

        '
      id: include
      type:
      - azure.storage.blob.models.Include
    - defaultValue: None
      description: 'When the request includes this parameter, the operation

        returns a @azure.storage.blob.models.BlobPrefix element in the

        result list that acts as a placeholder for all blobs whose names begin

        with the same substring up to the appearance of the delimiter character.

        The delimiter may be a single character or a string.

        '
      id: delimiter
      type:
      - str
    - defaultValue: None
      description: 'An opaque continuation token. This value can be retrieved from
        the

        next_marker field of a previous generator object if num_results was

        specified and that generator has finished enumerating results. If

        specified, this generator will begin returning results from the point

        where the previous generator stopped.

        '
      id: marker
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.list_blobs
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.list_containers
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: list_containers
  source:
    id: list_containers
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 508
  summary: 'Returns a generator to list the containers under the specified account.

    The generator will lazily follow the continuation tokens returned by

    the service and stop when all containers have been returned or num_results is
    reached.


    If num_results is specified and the account has more than that number of

    containers, the generator will have a populated next_marker field once it

    finishes. This marker can be used to create a new generator if more

    results are desired.

    '
  syntax:
    content: list_containers(prefix=None, num_results=None, include_metadata=False,
      marker=None, timeout=None)
    parameters:
    - defaultValue: None
      description: 'Filters the results to return only containers whose names

        begin with the specified prefix.

        '
      id: prefix
      type:
      - str
    - defaultValue: None
      description: 'Specifies the maximum number of containers to return. A single
        list

        request may return up to 1000 contianers and potentially a continuation

        token which should be followed to get additional resutls.

        '
      id: num_results
      type:
      - int
    - defaultValue: 'False'
      description: 'Specifies that container metadata be returned in the response.

        '
      id: include_metadata
      type:
      - bool
    - defaultValue: None
      description: 'An opaque continuation token. This value can be retrieved from
        the

        next_marker field of a previous generator object if num_results was

        specified and that generator has finished enumerating results. If

        specified, this generator will begin returning results from the point

        where the previous generator stopped.

        '
      id: marker
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.list_containers
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.make_blob_url
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: make_blob_url
  source:
    id: make_blob_url
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 223
  summary: 'Creates the url to access a blob.

    '
  syntax:
    content: make_blob_url(container_name, blob_name, protocol=None, sas_token=None,
      snapshot=None)
    parameters:
    - description: 'Name of container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'Protocol to use: ''http'' or ''https''. If not specified, uses
        the

        protocol specified when BaseBlobService was initialized.

        '
      id: protocol
      type:
      - str
    - defaultValue: None
      description: 'Shared access signature token created with

        generate_shared_access_signature.

        '
      id: sas_token
      type:
      - str
    - defaultValue: None
      description: 'An string value that uniquely identifies the snapshot. The value
        of

        this query parameter indicates the snapshot version.

        '
      id: snapshot
      type:
      - str
    return:
      description: 'blob access URL.

        '
      type:
      - str
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.make_blob_url
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.make_container_url
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: make_container_url
  source:
    id: make_container_url
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 260
  summary: 'Creates the url to access a container.

    '
  syntax:
    content: make_container_url(container_name, protocol=None, sas_token=None)
    parameters:
    - description: 'Name of container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'Protocol to use: ''http'' or ''https''. If not specified, uses
        the

        protocol specified when BaseBlobService was initialized.

        '
      id: protocol
      type:
      - str
    - defaultValue: None
      description: 'Shared access signature token created with

        generate_shared_access_signature.

        '
      id: sas_token
      type:
      - str
    return:
      description: 'container access URL.

        '
      type:
      - str
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.make_container_url
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.release_blob_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: release_blob_lease
  source:
    id: release_blob_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2649
  summary: 'Releases the lease. The lease may be released if the lease ID specified
    on the

    request matches that associated with the blob. Releasing the lease allows another

    client to immediately acquire the lease for the blob as soon as the release is
    complete.

    '
  syntax:
    content: release_blob_lease(container_name, blob_name, lease_id, if_modified_since=None,
      if_unmodified_since=None, if_match=None, if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Lease ID for active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.release_blob_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.release_container_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: release_container_lease
  source:
    id: release_container_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1062
  summary: 'Release the lease. The lease may be released if the lease_id specified
    matches

    that associated with the container. Releasing the lease allows another client

    to immediately acquire the lease for the container as soon as the release is complete.

    '
  syntax:
    content: release_container_lease(container_name, lease_id, if_modified_since=None,
      if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Lease ID for active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.release_container_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.renew_blob_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: renew_blob_lease
  source:
    id: renew_blob_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2590
  summary: 'Renews the lease. The lease can be renewed if the lease ID specified on

    the request matches that associated with the blob. Note that the lease may

    be renewed even if it has expired as long as the blob has not been modified

    or leased again since the expiration of that lease. When you renew a lease,

    the lease duration clock resets.

    '
  syntax:
    content: renew_blob_lease(container_name, blob_name, lease_id, if_modified_since=None,
      if_unmodified_since=None, if_match=None, if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - description: 'Lease ID for active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'str

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.renew_blob_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.renew_container_lease
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: renew_container_lease
  source:
    id: renew_container_lease
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1018
  summary: 'Renews the lease. The lease can be renewed if the lease ID specified

    matches that associated with the container. Note that

    the lease may be renewed even if it has expired as long as the container

    has not been leased again since the expiration of that lease. When you

    renew a lease, the lease duration clock resets.

    '
  syntax:
    content: renew_container_lease(container_name, lease_id, if_modified_since=None,
      if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Lease ID for active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'str

        '
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.renew_container_lease
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_metadata
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: set_blob_metadata
  source:
    id: set_blob_metadata
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2360
  summary: 'Sets user-defined metadata for the specified blob as one or more

    name-value pairs.

    '
  syntax:
    content: set_blob_metadata(container_name, blob_name, metadata=None, lease_id=None,
      if_modified_since=None, if_unmodified_since=None, if_match=None, if_none_match=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'Dict containing name and value pairs. Each call to this operation

        replaces all existing metadata attached to the blob. To remove all

        metadata from the blob, call this operation with no metadata headers.

        '
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'ETag and last modified properties for the updated Blob

        '
      type:
      - azure.storage.blob.models.ResourceProperties
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_metadata
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_properties
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: set_blob_properties
  source:
    id: set_blob_properties
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1495
  summary: 'Sets system properties on the blob. If one property is set for the

    content_settings, all properties will be overriden.

    '
  syntax:
    content: set_blob_properties(container_name, blob_name, content_settings=None,
      lease_id=None, if_modified_since=None, if_unmodified_since=None, if_match=None,
      if_none_match=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'ContentSettings object used to set blob properties.

        '
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'ETag and last modified properties for the updated Blob

        '
      type:
      - azure.storage.blob.models.ResourceProperties
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_properties
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_service_properties
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: set_blob_service_properties
  source:
    id: set_blob_service_properties
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 1355
  summary: 'Sets the properties of a storage account''s Blob service, including

    Azure Storage Analytics. If an element (ex Logging) is left as None, the

    existing settings on the service for that functionality are preserved.

    '
  syntax:
    content: set_blob_service_properties(logging=None, hour_metrics=None, minute_metrics=None,
      cors=None, target_version=None, timeout=None, delete_retention_policy=None)
    parameters:
    - defaultValue: None
      description: 'Groups the Azure Analytics Logging settings.

        '
      id: logging
      type:
      - azure.storage.common.models.Logging
    - defaultValue: None
      description: 'The hour metrics settings provide a summary of request

        statistics grouped by API in hourly aggregates for blobs.

        '
      id: hour_metrics
      type:
      - azure.storage.common.models.Metrics
    - defaultValue: None
      description: 'The minute metrics settings provide request statistics

        for each minute for blobs.

        '
      id: minute_metrics
      type:
      - azure.storage.common.models.Metrics
    - defaultValue: None
      description: 'You can include up to five CorsRule elements in the

        list. If an empty list is specified, all CORS rules will be deleted,

        and CORS will be disabled for the service.

        '
      id: cors
      type:
      - list(azure.storage.common.models.CorsRule)
    - defaultValue: None
      description: 'Indicates the default version to use for requests if an incoming

        request''s version is not specified.

        '
      id: target_version
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    - defaultValue: None
      description: 'The delete retention policy specifies whether to retain deleted
        blobs.

        It also specifies the number of days and versions of blob to keep.

        '
      id: delete_retention_policy
      type:
      - azure.storage.common.models.DeleteRetentionPolicy
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_service_properties
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_container_acl
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: set_container_acl
  source:
    id: set_container_acl
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 767
  summary: 'Sets the permissions for the specified container or stored access

    policies that may be used with Shared Access Signatures. The permissions

    indicate whether blobs in a container may be accessed publicly.

    '
  syntax:
    content: set_container_acl(container_name, signed_identifiers=None, public_access=None,
      lease_id=None, if_modified_since=None, if_unmodified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'A dictionary of access policies to associate with the container.
        The

        dictionary may contain up to 5 elements. An empty dictionary

        will clear the access policies set on the service.

        '
      id: signed_identifiers
      type:
      - dict(str, azure.storage.common.models.AccessPolicy)
    - defaultValue: None
      description: 'Possible values include: container, blob.

        '
      id: public_access
      type:
      - azure.storage.blob.models.PublicAccess
    - defaultValue: None
      description: 'If specified, set_container_acl only succeeds if the

        container''s lease is active and matches this ID.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A datetime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified date/time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A datetime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'ETag and last modified properties for the updated Container

        '
      type:
      - azure.storage.blob.models.ResourceProperties
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_container_acl
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_container_metadata
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: set_container_metadata
  source:
    id: set_container_metadata
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 691
  summary: 'Sets one or more user-defined name-value pairs for the specified

    container. Each call to this operation replaces all existing metadata

    attached to the container. To remove all metadata from the container,

    call this operation with no metadata dict.

    '
  syntax:
    content: set_container_metadata(container_name, metadata=None, lease_id=None,
      if_modified_since=None, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'A dict containing name-value pairs to associate with the container
        as

        metadata. Example: {''category'':''test''}

        '
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: 'If specified, set_container_metadata only succeeds if the

        container''s lease is active and matches this ID.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'ETag and last modified properties for the updated Container

        '
      type:
      - azure.storage.blob.models.ResourceProperties
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_container_metadata
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.snapshot_blob
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: snapshot_blob
  source:
    id: snapshot_blob
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 2834
  summary: 'Creates a read-only snapshot of a blob.

    '
  syntax:
    content: snapshot_blob(container_name, blob_name, metadata=None, if_modified_since=None,
      if_unmodified_since=None, if_match=None, if_none_match=None, lease_id=None,
      timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'Specifies a user-defined name-value pair associated with the blob.

        If no name-value pairs are specified, the operation will copy the

        base blob metadata to the snapshot. If one or more name-value pairs

        are specified, the snapshot is created with the specified metadata,

        and metadata is not copied from the base blob.

        '
      id: metadata
      type:
      - dict(str, str)
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.

        '
      id: if_modified_since
      type:
      - datetime
    - defaultValue: None
      description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.

        '
      id: if_unmodified_since
      type:
      - datetime
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.

        '
      id: if_none_match
      type:
      - str
    - defaultValue: None
      description: 'Required if the blob has an active lease.

        '
      id: lease_id
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
    return:
      description: 'snapshot properties

        '
      type:
      - azure.storage.blob.models.Blob
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.snapshot_blob
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.undelete_blob
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: undelete_blob
  source:
    id: undelete_blob
    path: azure\storage\blob\baseblobservice.py
    remote:
      branch: master
      path: azure\storage\blob\baseblobservice.py
      repo: https://github.com/Azure/azure-storage-python.git
    startLine: 3222
  summary: 'The undelete Blob operation restores the contents and metadata of soft
    deleted blob or snapshot.

    Attempting to undelete a blob or snapshot that is not soft deleted will succeed
    without any changes.

    '
  syntax:
    content: undelete_blob(container_name, blob_name, timeout=None)
    parameters:
    - description: 'Name of existing container.

        '
      id: container_name
      type:
      - str
    - description: 'Name of existing blob.

        '
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: 'The timeout parameter is expressed in seconds.

        '
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.baseblobservice.BaseBlobService.undelete_blob
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.MAX_CHUNK_GET_SIZE
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: MAX_CHUNK_GET_SIZE
  syntax:
    content: MAX_CHUNK_GET_SIZE = 4194304
  type: attribute
  uid: azure.storage.blob.baseblobservice.BaseBlobService.MAX_CHUNK_GET_SIZE
- class: azure.storage.blob.baseblobservice.BaseBlobService
  fullName: azure.storage.blob.baseblobservice.BaseBlobService.MAX_SINGLE_GET_SIZE
  langs:
  - python
  module: azure.storage.blob.baseblobservice
  name: MAX_SINGLE_GET_SIZE
  syntax:
    content: MAX_SINGLE_GET_SIZE = 33554432
  type: attribute
  uid: azure.storage.blob.baseblobservice.BaseBlobService.MAX_SINGLE_GET_SIZE
references:
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.abort_copy_blob
  isExternal: false
  name: abort_copy_blob
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.abort_copy_blob
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.acquire_blob_lease
  isExternal: false
  name: acquire_blob_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.acquire_blob_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.acquire_container_lease
  isExternal: false
  name: acquire_container_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.acquire_container_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.break_blob_lease
  isExternal: false
  name: break_blob_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.break_blob_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.break_container_lease
  isExternal: false
  name: break_container_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.break_container_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.change_blob_lease
  isExternal: false
  name: change_blob_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.change_blob_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.change_container_lease
  isExternal: false
  name: change_container_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.change_container_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.copy_blob
  isExternal: false
  name: copy_blob
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.copy_blob
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.create_container
  isExternal: false
  name: create_container
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.create_container
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.delete_blob
  isExternal: false
  name: delete_blob
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.delete_blob
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.delete_container
  isExternal: false
  name: delete_container
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.delete_container
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.exists
  isExternal: false
  name: exists
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.exists
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_account_shared_access_signature
  isExternal: false
  name: generate_account_shared_access_signature
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_account_shared_access_signature
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_blob_shared_access_signature
  isExternal: false
  name: generate_blob_shared_access_signature
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_blob_shared_access_signature
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.generate_container_shared_access_signature
  isExternal: false
  name: generate_container_shared_access_signature
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.generate_container_shared_access_signature
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_metadata
  isExternal: false
  name: get_blob_metadata
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_metadata
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_properties
  isExternal: false
  name: get_blob_properties
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_properties
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_properties
  isExternal: false
  name: get_blob_service_properties
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_properties
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_stats
  isExternal: false
  name: get_blob_service_stats
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_service_stats
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_bytes
  isExternal: false
  name: get_blob_to_bytes
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_bytes
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_path
  isExternal: false
  name: get_blob_to_path
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_path
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_stream
  isExternal: false
  name: get_blob_to_stream
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_stream
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_text
  isExternal: false
  name: get_blob_to_text
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_blob_to_text
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_acl
  isExternal: false
  name: get_container_acl
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_acl
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_metadata
  isExternal: false
  name: get_container_metadata
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_metadata
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.get_container_properties
  isExternal: false
  name: get_container_properties
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.get_container_properties
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.list_blobs
  isExternal: false
  name: list_blobs
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.list_blobs
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.list_containers
  isExternal: false
  name: list_containers
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.list_containers
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.make_blob_url
  isExternal: false
  name: make_blob_url
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.make_blob_url
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.make_container_url
  isExternal: false
  name: make_container_url
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.make_container_url
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.release_blob_lease
  isExternal: false
  name: release_blob_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.release_blob_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.release_container_lease
  isExternal: false
  name: release_container_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.release_container_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.renew_blob_lease
  isExternal: false
  name: renew_blob_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.renew_blob_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.renew_container_lease
  isExternal: false
  name: renew_container_lease
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.renew_container_lease
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_metadata
  isExternal: false
  name: set_blob_metadata
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_metadata
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_properties
  isExternal: false
  name: set_blob_properties
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_properties
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_service_properties
  isExternal: false
  name: set_blob_service_properties
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_blob_service_properties
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_container_acl
  isExternal: false
  name: set_container_acl
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_container_acl
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.set_container_metadata
  isExternal: false
  name: set_container_metadata
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.set_container_metadata
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.snapshot_blob
  isExternal: false
  name: snapshot_blob
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.snapshot_blob
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.undelete_blob
  isExternal: false
  name: undelete_blob
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.undelete_blob
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.MAX_CHUNK_GET_SIZE
  isExternal: false
  name: MAX_CHUNK_GET_SIZE
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.MAX_CHUNK_GET_SIZE
- fullName: azure.storage.blob.baseblobservice.BaseBlobService.MAX_SINGLE_GET_SIZE
  isExternal: false
  name: MAX_SINGLE_GET_SIZE
  parent: azure.storage.blob.baseblobservice.BaseBlobService
  uid: azure.storage.blob.baseblobservice.BaseBlobService.MAX_SINGLE_GET_SIZE
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: func(current, total)
  name: func(current, total)
  spec.python:
  - fullName: func
    name: func
    uid: func
  - fullName: (
    name: (
  - fullName: current
    name: current
    uid: current
  - fullName: ', '
    name: ', '
  - fullName: total
    name: total
    uid: total
  - fullName: )
    name: )
  uid: func(current, total)
- fullName: list(azure.storage.common.models.CorsRule)
  name: list(CorsRule)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: azure.storage.common.models.CorsRule
    name: CorsRule
    uid: azure.storage.common.models.CorsRule
  - fullName: )
    name: )
  uid: list(azure.storage.common.models.CorsRule)
- fullName: dict(str, azure.storage.common.models.AccessPolicy)
  name: dict(str, AccessPolicy)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: azure.storage.common.models.AccessPolicy
    name: AccessPolicy
    uid: azure.storage.common.models.AccessPolicy
  - fullName: )
    name: )
  uid: dict(str, azure.storage.common.models.AccessPolicy)
