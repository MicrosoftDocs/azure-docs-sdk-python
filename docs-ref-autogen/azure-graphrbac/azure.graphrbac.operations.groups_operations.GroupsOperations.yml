### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.graphrbac.operations.groups_operations.GroupsOperations.add_member
  - azure.graphrbac.operations.groups_operations.GroupsOperations.add_owner
  - azure.graphrbac.operations.groups_operations.GroupsOperations.create
  - azure.graphrbac.operations.groups_operations.GroupsOperations.delete
  - azure.graphrbac.operations.groups_operations.GroupsOperations.get
  - azure.graphrbac.operations.groups_operations.GroupsOperations.get_group_members
  - azure.graphrbac.operations.groups_operations.GroupsOperations.get_member_groups
  - azure.graphrbac.operations.groups_operations.GroupsOperations.is_member_of
  - azure.graphrbac.operations.groups_operations.GroupsOperations.list
  - azure.graphrbac.operations.groups_operations.GroupsOperations.list_owners
  - azure.graphrbac.operations.groups_operations.GroupsOperations.remove_member
  - azure.graphrbac.operations.groups_operations.GroupsOperations.remove_owner
  - azure.graphrbac.operations.groups_operations.GroupsOperations.models
  class: azure.graphrbac.operations.groups_operations.GroupsOperations
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: GroupsOperations
  summary: GroupsOperations operations.
  syntax:
    content: GroupsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API version. Constant value: "1.6".'
      id: api_version
  type: class
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.add_member
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: add_member(group_object_id, url, additional_properties=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: add_member
  summary: Add a member to a group.
  syntax:
    content: add_member(group_object_id, url, additional_properties=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the group to which to add the

        member.'
      id: group_object_id
      isRequired: true
      type:
      - str
    - description: 'A member object URL, such as

        "[https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd](https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd)",

        where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and

        "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the member

        (user, application, servicePrincipal, group) to be added.'
      id: url
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Unmatched properties from the message

        are deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.add_member
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.add_owner
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: add_owner(object_id, url, additional_properties=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: add_owner
  summary: Add an owner to a group.
  syntax:
    content: add_owner(object_id, url, additional_properties=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the application to which to add the

        owner.'
      id: object_id
      isRequired: true
      type:
      - str
    - description: 'A owner object URL, such as

        "[https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd](https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd)",

        where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and

        "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the owner

        (user, application, servicePrincipal, group) to be added.'
      id: url
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Unmatched properties from the message

        are deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.add_owner
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.create
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: create(parameters, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create
  summary: Create a group in the directory.
  syntax:
    content: create(parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The parameters for the group to create.
      id: parameters
      isRequired: true
      type:
      - azure.graphrbac.models.GroupCreateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ADGroup or ClientRawResponse if raw=true
      type:
      - azure.graphrbac.models.ADGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.create
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.delete
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: delete(object_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: Delete a group from the directory.
  syntax:
    content: delete(object_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The object ID of the group to delete.
      id: object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.delete
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: get(object_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Gets group information from the directory.
  syntax:
    content: get(object_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the user for which to get group

        information.'
      id: object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ADGroup or ClientRawResponse if raw=true
      type:
      - azure.graphrbac.models.ADGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get_group_members
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: get_group_members(object_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_group_members
  summary: Gets the members of a group.
  syntax:
    content: get_group_members(object_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the group whose members should be

        retrieved.'
      id: object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DirectoryObject
      type:
      - azure.graphrbac.models.DirectoryObjectPaged[azure.graphrbac.models.DirectoryObject]
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get_group_members
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get_member_groups
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: get_member_groups(object_id, security_enabled_only, additional_properties=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_member_groups
  summary: 'Gets a collection of object IDs of groups of which the specified group

    is a member.'
  syntax:
    content: get_member_groups(object_id, security_enabled_only, additional_properties=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the group for which to get group

        membership.'
      id: object_id
      isRequired: true
      type:
      - str
    - description: 'If true, only membership in

        security-enabled groups should be checked. Otherwise, membership in

        all groups should be checked.'
      id: security_enabled_only
      isRequired: true
      type:
      - bool
    - defaultValue: None
      description: 'Unmatched properties from the message

        are deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of str
      type:
      - azure.graphrbac.models.StrPaged[str]
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get_member_groups
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.is_member_of
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: is_member_of(parameters, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: is_member_of
  summary: 'Checks whether the specified user, group, contact, or service principal

    is a direct or transitive member of the specified group.'
  syntax:
    content: is_member_of(parameters, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The check group membership parameters.
      id: parameters
      isRequired: true
      type:
      - azure.graphrbac.models.CheckGroupMembershipParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CheckGroupMembershipResult or ClientRawResponse if raw=true
      type:
      - azure.graphrbac.models.CheckGroupMembershipResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.is_member_of
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.list
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: list(filter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: Gets list of groups for the current tenant.
  syntax:
    content: list(filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: The filter to apply to the operation.
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of ADGroup
      type:
      - azure.graphrbac.models.ADGroupPaged[azure.graphrbac.models.ADGroup]
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.list
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.list_owners
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: list_owners(object_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_owners
  summary: 'Directory objects that are owners of the group.


    The owners are a set of non-admin users who are allowed to modify this

    object.'
  syntax:
    content: list_owners(object_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The object ID of the group for which to get owners.
      id: object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of DirectoryObject
      type:
      - azure.graphrbac.models.DirectoryObjectPaged[azure.graphrbac.models.DirectoryObject]
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.list_owners
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_member
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: remove_member(group_object_id, member_object_id, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: remove_member
  summary: Remove a member from a group.
  syntax:
    content: remove_member(group_object_id, member_object_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The object ID of the group from which to

        remove the member.'
      id: group_object_id
      isRequired: true
      type:
      - str
    - description: Member object id
      id: member_object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_member
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  exceptions:
  - type: azure.graphrbac.models.GraphErrorException
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_owner
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: remove_owner(object_id, owner_object_id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: remove_owner
  summary: Remove a member from owners.
  syntax:
    content: remove_owner(object_id, owner_object_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The object ID of the group from which to remove the

        owner.'
      id: object_id
      isRequired: true
      type:
      - str
    - description: Owner object id
      id: owner_object_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_owner
- class: azure.graphrbac.operations.groups_operations.GroupsOperations
  fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.models
  langs:
  - python
  module: azure.graphrbac.operations.groups_operations
  name: models
  syntax:
    content: models = <module 'azure.graphrbac.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\graphrbac\\models\\__init__.py'>
  type: attribute
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.models
references:
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.add_member
  isExternal: false
  name: add_member(group_object_id, url, additional_properties=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.add_member
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.add_owner
  isExternal: false
  name: add_owner(object_id, url, additional_properties=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.add_owner
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.create
  isExternal: false
  name: create(parameters, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.create
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.delete
  isExternal: false
  name: delete(object_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.delete
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get
  isExternal: false
  name: get(object_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get_group_members
  isExternal: false
  name: get_group_members(object_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get_group_members
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.get_member_groups
  isExternal: false
  name: get_member_groups(object_id, security_enabled_only, additional_properties=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.get_member_groups
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.is_member_of
  isExternal: false
  name: is_member_of(parameters, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.is_member_of
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.list
  isExternal: false
  name: list(filter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.list
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.list_owners
  isExternal: false
  name: list_owners(object_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.list_owners
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_member
  isExternal: false
  name: remove_member(group_object_id, member_object_id, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_member
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_owner
  isExternal: false
  name: remove_owner(object_id, owner_object_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.remove_owner
- fullName: azure.graphrbac.operations.groups_operations.GroupsOperations.models
  isExternal: false
  name: models
  parent: azure.graphrbac.operations.groups_operations.GroupsOperations
  uid: azure.graphrbac.operations.groups_operations.GroupsOperations.models
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: azure.graphrbac.models.DirectoryObjectPaged[azure.graphrbac.models.DirectoryObject]
  name: DirectoryObjectPaged[DirectoryObject]
  spec.python:
  - fullName: azure.graphrbac.models.DirectoryObjectPaged
    name: DirectoryObjectPaged
    uid: azure.graphrbac.models.DirectoryObjectPaged
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.DirectoryObject
    name: DirectoryObject
    uid: azure.graphrbac.models.DirectoryObject
  - fullName: ']'
    name: ']'
  uid: azure.graphrbac.models.DirectoryObjectPaged[azure.graphrbac.models.DirectoryObject]
- fullName: azure.graphrbac.models.StrPaged[str]
  name: StrPaged[str]
  spec.python:
  - fullName: azure.graphrbac.models.StrPaged
    name: StrPaged
    uid: azure.graphrbac.models.StrPaged
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: azure.graphrbac.models.StrPaged[str]
- fullName: azure.graphrbac.models.ADGroupPaged[azure.graphrbac.models.ADGroup]
  name: ADGroupPaged[ADGroup]
  spec.python:
  - fullName: azure.graphrbac.models.ADGroupPaged
    name: ADGroupPaged
    uid: azure.graphrbac.models.ADGroupPaged
  - fullName: '['
    name: '['
  - fullName: azure.graphrbac.models.ADGroup
    name: ADGroup
    uid: azure.graphrbac.models.ADGroup
  - fullName: ']'
    name: ']'
  uid: azure.graphrbac.models.ADGroupPaged[azure.graphrbac.models.ADGroup]
