### YamlMime:PythonClass
uid: azure.storage.fileshare.ShareFileClient
name: ShareFileClient
fullName: azure.storage.fileshare.ShareFileClient
module: azure.storage.fileshare
inheritances:
- azure.storage.fileshare._shared.base_client.StorageAccountHostsMixin
summary: 'A client to interact with a specific file, although that file may not yet
  exist.


  For more optional configuration, please click

  [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#optional-configuration).'
constructor:
  syntax: 'ShareFileClient(account_url: str, share_name: str, file_path: str, snapshot:
    str | Dict[str, Any] | None = None, credential: str | Dict[str, str] | AzureNamedKeyCredential
    | AzureSasCredential | TokenCredential | None = None, *, token_intent: Literal[''backup'']
    | None = None, **kwargs: Any)'
  parameters:
  - name: account_url
    description: 'The URI to the storage account. In order to create a client given
      the full URI to the

      file, use the <xref:azure.storage.fileshare.ShareFileClient.from_file_url> classmethod.'
    isRequired: true
    types:
    - <xref:str>
  - name: share_name
    description: The name of the share for the file.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: 'The file path to the file with which to interact. If specified,
      this value will override

      a file value specified in the file URL.'
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'An optional file snapshot on which to operate. This can be the snapshot
      ID string

      or the response returned from <xref:azure.storage.fileshare.ShareClient.create_snapshot>.'
    defaultValue: None
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential or AzureNamedKeyCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.

      If using an instance of AzureNamedKeyCredential, "name" should be the storage
      account name, and "key"

      should be the storage account key.'
    defaultValue: None
  - name: token_intent
    description: "Required when using *TokenCredential* for authentication and ignored\
      \ for other forms of authentication.\nSpecifies the intent for all requests\
      \ when using *TokenCredential* authentication. Possible values are:\n\nbackup\
      \ - Specifies requests are intended for backup/admin type operations, meaning\
      \ that all file/directory\n   ACLs are bypassed and full permissions are granted.\
      \ User must also have required RBAC permission."
    types:
    - <xref:Literal>[<xref:'backup'>]
  - name: allow_trailing_dot
    description: If true, the trailing dot will not be trimmed from the target URI.
    types:
    - <xref:bool>
  - name: allow_source_trailing_dot
    description: If true, the trailing dot will not be trimmed from the source URI.
    types:
    - <xref:bool>
  - name: api_version
    description: 'The Storage API version to use for requests. Default value is the
      most recent service version that is

      compatible with the current SDK. Setting to an older version may result in reduced
      feature compatibility.


      New in version 12.1.0.'
    types:
    - <xref:str>
  - name: secondary_hostname
    description: The hostname of the secondary endpoint.
    types:
    - <xref:str>
  - name: max_range_size
    description: The maximum range size used for a file upload. Defaults to 4*1024*1024.
    types:
    - <xref:int>
methods:
- uid: azure.storage.fileshare.ShareFileClient.abort_copy
  name: abort_copy
  summary: 'Abort an ongoing copy operation.


    This will leave a destination file with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  signature: 'abort_copy(copy_id: str | FileProperties, **kwargs: Any) -> None'
  parameters:
  - name: copy_id
    description: 'The copy operation to abort. This can be either an ID, or an

      instance of FileProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.FileProperties>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.fileshare.ShareFileClient.acquire_lease
  name: acquire_lease
  summary: 'Requests a new lease.


    If the file does not have an active lease, the File

    Service creates a lease on the blob and returns a new lease.'
  signature: 'acquire_lease(lease_id: str | None = None, **kwargs: Any) -> ShareLeaseClient'
  parameters:
  - name: lease_id
    description: 'Proposed lease ID, in a GUID string format. The File Service

      returns 400 (Invalid request) if the proposed lease ID is not

      in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: A ShareLeaseClient object.
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
  examples:
  - "Acquiring a lease on a file.<!--[!code-python[Main](les\\file_samples_client.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\\
    dist_temp\\\\82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   source_file.create_file(1024)\n   lease = source_file.acquire_lease()\n \
    \  source_file.upload_file(b'hello world', lease=lease)\n\n   lease.release()\n\
    \n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.clear_range
  name: clear_range
  summary: 'Clears the specified range and releases the space used in storage for

    that range.'
  signature: 'clear_range(offset: int, length: int, **kwargs) -> Dict[str, Any]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.ShareFileClient.close_all_handles
  name: close_all_handles
  summary: 'Close any open file handles.


    This operation will block until the service has closed all open handles.'
  signature: 'close_all_handles(**kwargs: Any) -> Dict[str, int]'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.ShareFileClient.close_handle
  name: close_handle
  summary: Close an open file handle.
  signature: 'close_handle(handle: str | Handle, **kwargs: Any) -> Dict[str, int]'
  parameters:
  - name: handle
    description: A specific handle to close.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.Handle>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.ShareFileClient.create_file
  name: create_file
  summary: 'Creates a new file.


    Note that it only initializes the file with no content.'
  signature: 'create_file(size: int, file_attributes: str | NTFSAttributes = ''none'',
    file_creation_time: str | datetime | None = ''now'', file_last_write_time: str
    | datetime | None = ''now'', file_permission: str | None = None, permission_key:
    str | None = None, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: size
    description: 'Specifies the maximum size for the file,

      up to 1 TB.'
    isRequired: true
    types:
    - <xref:int>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, the default value would be "None" and the attributes will be set
      to "Archive".

      Here is an example for when the var type is str: ''Temporary|Archive''.

      file_attributes value is not case sensitive.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: file_change_time
    description: 'Change time for the file. If not specified, change time will be
      set to the current date/time.


      New in version 12.8.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    types:
    - <xref:dict>(<xref:str,str>)
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
  examples:
  - "Create a file.<!--[!code-python[Main](les\\file_samples_client.py )]-->\n\n<!--\
    \ literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [],\
    \ \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
    82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Create and allocate bytes for the file (no content added yet)\n   my_allocated_file.create_file(size=100)\n\
    \n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.delete_file
  name: delete_file
  summary: 'Marks the specified file for deletion. The file is

    later deleted during garbage collection.'
  signature: 'delete_file(**kwargs: Any) -> None'
  parameters:
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
  examples:
  - "Delete a file.<!--[!code-python[Main](les\\file_samples_client.py )]-->\n\n<!--\
    \ literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [],\
    \ \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
    82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   my_file.delete_file()\n\n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.download_file
  name: download_file
  summary: 'Downloads a file to the StorageStreamDownloader. The readall() method
    must

    be used to read all the content or readinto() must be used to download the file
    into

    a stream. Using chunks() returns an iterator which allows the user to iterate
    over the content in chunks.'
  signature: 'download_file(offset: int | None = None, length: int | None = None,
    **kwargs: Any) -> StorageStreamDownloader'
  parameters:
  - name: offset
    description: 'Start of byte range to use for downloading a section of the file.

      Must be set if length is provided.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_concurrency
    description: Maximum number of parallel connections to use.
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the file. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https as https (the default) will

      already validate. Note that this MD5 hash is not stored with the

      file. Also note that if enabled, the memory-efficient upload algorithm

      will not be used, because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: progress_hook
    description: 'A callback to track the progress of a long running download. The
      signature is

      function(current: int, total: int) where current is the number of bytes transferred

      so far, and total is the total size of the download.'
    types:
    - <xref:Callable>[[<xref:int>, <xref:int>], <xref:None>]
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: A streaming object (StorageStreamDownloader)
    types:
    - <xref:azure.storage.fileshare.StorageStreamDownloader>
  examples:
  - "Download a file.<!--[!code-python[Main](les\\file_samples_client.py )]-->\n\n\
    <!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\
    \\82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   with open(DEST_FILE, \"wb\") as data:\n       stream = my_file.download_file()\n\
    \       data.write(stream.readall())\n\n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.from_connection_string
  name: from_connection_string
  summary: Create ShareFileClient from a Connection String.
  signature: 'from_connection_string(conn_str: str, share_name: str, file_path: str,
    snapshot: str | Dict[str, Any] | None = None, credential: str | Dict[str, str]
    | AzureNamedKeyCredential | AzureSasCredential | TokenCredential | None = None,
    **kwargs: Any) -> Self'
  parameters:
  - name: conn_str
    description: A connection string to an Azure Storage account.
    isRequired: true
    types:
    - <xref:str>
  - name: share_name
    description: The name of the share.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The file path.
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'An optional file snapshot on which to operate. This can be the snapshot
      ID string

      or the response returned from <xref:azure.storage.fileshare.ShareClient.create_snapshot>.'
    defaultValue: None
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential or AzureNamedKeyCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.

      If using an instance of AzureNamedKeyCredential, "name" should be the storage
      account name, and "key"

      should be the storage account key.'
    defaultValue: None
  return:
    description: A File client.
    types:
    - <xref:azure.storage.fileshare.ShareFileClient>
  examples:
  - "Creates the file client with connection string.<!--[!code-python[Main](les\\\
    file_samples_hello_world.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\82\\\\azure-storage-file-share-12.13.0\\\\\
    samples\\\\file_samples_hello_world.py\", \"xml:space\": \"preserve\", \"force\"\
    : false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
    linenos\": false} -->\n\n````python\n\n   from azure.storage.fileshare import\
    \ ShareFileClient\n   file = ShareFileClient.from_connection_string(\n       self.connection_string,\n\
    \       share_name=\"helloworld2\",\n       file_path=\"myfile\")\n\n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.from_file_url
  name: from_file_url
  summary: A client to interact with a specific file, although that file may not yet
    exist.
  signature: 'from_file_url(file_url: str, snapshot: str | Dict[str, Any] | None =
    None, credential: str | Dict[str, str] | AzureNamedKeyCredential | AzureSasCredential
    | TokenCredential | None = None, **kwargs: Any) -> Self'
  parameters:
  - name: file_url
    description: The full URI to the file.
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'An optional file snapshot on which to operate. This can be the snapshot
      ID string

      or the response returned from <xref:azure.storage.fileshare.ShareClient.create_snapshot>.'
    defaultValue: None
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential or AzureNamedKeyCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.

      If using an instance of AzureNamedKeyCredential, "name" should be the storage
      account name, and "key"

      should be the storage account key.'
    defaultValue: None
  return:
    description: A File client.
    types:
    - <xref:azure.storage.fileshare.ShareFileClient>
- uid: azure.storage.fileshare.ShareFileClient.get_file_properties
  name: get_file_properties
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the file.'
  signature: 'get_file_properties(**kwargs: Any) -> FileProperties'
  parameters:
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: FileProperties
    types:
    - <xref:azure.storage.fileshare.FileProperties>
- uid: azure.storage.fileshare.ShareFileClient.get_ranges
  name: get_ranges
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.'
  signature: 'get_ranges(offset: int | None = None, length: int | None = None, **kwargs:
    Any) -> List[Dict[str, int]]'
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: A list of valid ranges.
    types:
    - <xref:List>[<xref:dict>[<xref:str>, <xref:int>]]
- uid: azure.storage.fileshare.ShareFileClient.get_ranges_diff
  name: get_ranges_diff
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.


    New in version 12.6.0.'
  signature: 'get_ranges_diff(previous_sharesnapshot: str | Dict[str, Any], offset:
    int | None = None, length: int | None = None, **kwargs: Any) -> Tuple[List[Dict[str,
    int]], List[Dict[str, int]]]'
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    defaultValue: None
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    defaultValue: None
    types:
    - <xref:int>
  - name: previous_sharesnapshot
    description: 'The snapshot diff parameter that contains an opaque DateTime value
      that

      specifies a previous file snapshot to be compared

      against a more recent snapshot or the current file.'
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'A tuple of two lists of file ranges as dictionaries with ''start''
      and ''end'' keys.

      The first element are filled file ranges, the 2nd element is cleared file ranges.'
    types:
    - <xref:tuple>(<xref:list>(<xref:dict>(<xref:str>, <xref:str>), <xref:list>(<xref:dict>(<xref:str>,
      <xref:str>))
- uid: azure.storage.fileshare.ShareFileClient.list_handles
  name: list_handles
  summary: Lists handles for file.
  signature: 'list_handles(**kwargs: Any) -> ItemPaged[Handle]'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: An auto-paging iterable of Handle
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.storage.fileshare.Handle>]
- uid: azure.storage.fileshare.ShareFileClient.rename_file
  name: rename_file
  summary: "Rename the source file.\n\n:paramtype file_attributes:~azure.storage.fileshare.NTFSAttributes\
    \ or str\n:keyword file_creation_time:\n\n   Creation time for the file.\n\n:paramtype\
    \ file_creation_time:~datetime.datetime or str\n:keyword file_last_write_time:\n\
    \n   Last write time for the file.\n\n:paramtype file_last_write_time:~datetime.datetime\
    \ or str\n:keyword file_change_time:\n\n   Change time for the file. If not specified,\
    \ change time will be set to the current date/time.\n\n   New in version 12.8.0:\
    \ This parameter was introduced in API version '2021-06-08'."
  signature: 'rename_file(new_name: str, **kwargs: Any) -> ShareFileClient'
  parameters:
  - name: content_type
    description: 'The Content Type of the new file.


      New in version 12.8.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:str>
  - name: metadata
    description: A name-value pair to associate with a file storage object.
    types:
    - <xref:Dict>[<xref:str,str>]
  - name: source_lease
    description: 'Required if the source file has an active lease. Value can be a
      ShareLeaseClient object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: destination_lease
    description: 'Required if the destination file has an active lease. Value can
      be a ShareLeaseClient object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  return:
    description: The new File Client.
    types:
    - <xref:azure.storage.fileshare.ShareFileClient>
- uid: azure.storage.fileshare.ShareFileClient.resize_file
  name: resize_file
  summary: Resizes a file to the specified size.
  signature: 'resize_file(size: int, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: size
    description: Size to resize file to (in bytes)
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.ShareFileClient.set_file_metadata
  name: set_file_metadata
  summary: 'Sets user-defined metadata for the specified file as one or more

    name-value pairs.


    Each call to this operation replaces all existing metadata

    attached to the file. To remove all metadata from the file,

    call this operation with no metadata dict.'
  signature: 'set_file_metadata(metadata: Dict[str, Any] | None = None, **kwargs:
    Any) -> Dict[str, Any]'
  parameters:
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.fileshare.ShareFileClient.set_http_headers
  name: set_http_headers
  summary: Sets HTTP headers on the file.
  signature: 'set_http_headers(content_settings: ContentSettings, file_attributes:
    str | NTFSAttributes = ''preserve'', file_creation_time: str | datetime | None
    = ''preserve'', file_last_write_time: str | datetime | None = ''preserve'', file_permission:
    str | None = None, permission_key: str | None = None, **kwargs: Any) -> Dict[str,
    Any]'
  parameters:
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, indicates preservation of existing values.

      Here is an example for when the var type is str: ''Temporary|Archive'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: file_change_time
    description: 'Change time for the file. If not specified, change time will be
      set to the current date/time.


      New in version 12.8.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.fileshare.ShareFileClient.start_copy_from_url
  name: start_copy_from_url
  summary: 'Initiates the copying of data from a source URL into the file

    referenced by the client.


    The status of this copy operation can be found using the *get_properties*

    method.'
  signature: 'start_copy_from_url(source_url: str, **kwargs: Any) -> Any'
  parameters:
  - name: source_url
    description: Specifies the URL of the source file.
    isRequired: true
    types:
    - <xref:str>
  - name: file_permission
    description: 'If specified the permission (security descriptor) shall be set for
      the directory/file.

      This value can be set to "source" to copy the security descriptor from the source
      file.

      Otherwise if set, this value will be used to override the source value. If not
      set, permission value

      is inherited from the parent directory of the target file. This setting can
      be

      used if Permission size is <= 8KB, otherwise permission_key shall be used.

      If SDDL is specified as input, it must have owner, group and dacl.

      Note: Only one of the file_permission or permission_key should be specified.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the directory/file.

      This value can be set to "source" to copy the security descriptor from the source
      file.

      Otherwise if set, this value will be used to override the source value. If not
      set, permission value

      is inherited from the parent directory of the target file.

      Note: Only one of the file_permission or permission_key should be specified.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
  - name: file_attributes
    description: 'This value can be set to "source" to copy file attributes from the
      source file to the target file,

      or to clear all attributes, it can be set to "None". Otherwise it can be set
      to a list of attributes

      to set on the target file. If this is not set, the default value is "Archive".


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'This value can be set to "source" to copy the creation time from
      the source file to the target file,

      or a datetime to set as creation time on the target file. This could also be
      a string in ISO 8601 format.

      If this is not set, creation time will be set to the date time value of the
      creation

      (or when it was overwritten) of the target file by copy engine.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'This value can be set to "source" to copy the last write time from
      the source file to the target file, or

      a datetime to set as the last write time on the target file. This could also
      be a string in ISO 8601 format.

      If this is not set, value will be the last write time to the file by the copy
      engine.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_change_time
    description: 'Change time for the file. If not specified, change time will be
      set to the current date/time.


      New in version 12.9.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: ignore_read_only
    description: 'Specifies the option to overwrite the target file if it already
      exists and has read-only attribute set.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:bool>
  - name: set_archive_attribute
    description: 'Specifies the option to set the archive attribute on the target
      file.

      True means the archive attribute will be set on the target file despite attribute

      overrides or the source file state.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:bool>
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
  examples:
  - "Copy a file from a URL<!--[!code-python[Main](les\\file_samples_client.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\
    \\82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   destination_file.start_copy_from_url(source_url=source_url)\n\n   ````\n"
- uid: azure.storage.fileshare.ShareFileClient.upload_file
  name: upload_file
  summary: "Uploads a new file.\n\n   param data:\n      Content of the file.\n\n\
    \   param int length:\n      Length of the file in bytes. Specify its maximum\
    \ size, up to 1 TiB.\n\n   param file_attributes:\n      The file system attributes\
    \ for files and directories.\n      If not set, the default value would be \"\
    None\" and the attributes will be set to \"Archive\".\n      Here is an example\
    \ for when the var type is str: 'Temporary|Archive'.\n      file_attributes value\
    \ is not case sensitive.\n\n   type file_attributes:\n      str or ~azure.storage.fileshare.NTFSAttributes\n\
    \n   param file_creation_time:\n      Creation time for the file\n      Default\
    \ value: Now.\n\n   type file_creation_time:\n      str or ~datetime.datetime\n\
    \n   param file_last_write_time:\n      Last write time for the file\n      Default\
    \ value: Now.\n\n   type file_last_write_time:\n      str or ~datetime.datetime\n\
    \n   param file_permission:\n      If specified the permission (security\n   \
    \   descriptor) shall be set for the directory/file. This header can be\n    \
    \  used if Permission size is <= 8KB, else x-ms-file-permission-key\n      header\
    \ shall be used. Default value: Inherit. If SDDL is specified as\n      input,\
    \ it must have owner, group and dacl. Note: Only one of the\n      x-ms-file-permission\
    \ or x-ms-file-permission-key should be specified.\n\n   type file_permission:\n\
    \      str\n\n   param permission_key:\n      Key of the permission to be set\
    \ for the\n      directory/file. Note: Only one of the x-ms-file-permission or\n\
    \      x-ms-file-permission-key should be specified.\n\n   type permission_key:\n\
    \      str"
  signature: 'upload_file(data: bytes | str | Iterable | IO, length: int | None =
    None, file_attributes: str | NTFSAttributes = ''none'', file_creation_time: str
    | datetime | None = ''now'', file_last_write_time: str | datetime | None = ''now'',
    file_permission: str | None = None, permission_key: str | None = None, **kwargs)
    -> Dict[str, Any]'
  parameters:
  - name: file_change_time
    description: "Change time for the file. If not specified, change time will be\
      \ set to the current date/time.\n\n   New in version 12.8.0: This parameter\
      \ was introduced in API version '2021-06-08'.\n\nparamtype file_change_time:\n\
      \   str or ~datetime.datetime\n\nkeyword dict(str,str) metadata:\n   Name-value\
      \ pairs associated with the file as metadata.\n\nkeyword ~azure.storage.fileshare.ContentSettings\
      \ content_settings:\n   ContentSettings object used to set file properties.\
      \ Used to set content type, encoding,\n   language, disposition, md5, and cache\
      \ control.\n\nkeyword bool validate_content:\n   If true, calculates an MD5\
      \ hash for each range of the file. The storage\n   service checks the hash of\
      \ the content that has arrived with the hash\n   that was sent. This is primarily\
      \ valuable for detecting bitflips on\n   the wire if using http instead of https\
      \ as https (the default) will\n   already validate. Note that this MD5 hash\
      \ is not stored with the\n   file.\n\nkeyword int max_concurrency:\n   Maximum\
      \ number of parallel connections to use.\n\nkeyword lease:\n   Required if the\
      \ file has an active lease. Value can be a ShareLeaseClient object\n   or the\
      \ lease ID as a string.\n\n   New in version 12.1.0.\n\nparamtype lease:\n \
      \  ~azure.storage.fileshare.ShareLeaseClient or str\n\nkeyword progress_hook:\n\
      \   A callback to track the progress of a long running upload. The signature\
      \ is\n   function(current: int, total: Optional[int]) where current is the number\
      \ of bytes transferred\n   so far, and total is the size of the blob or None\
      \ if the size is unknown.\n\nparamtype progress_hook:\n   Callable[[int, Optional[int]],\
      \ None]\n\nkeyword int timeout:\n   Sets the server-side timeout for the operation\
      \ in seconds. For more details see\n   [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).\n\
      \   This value is not tracked or validated on the client. To configure client-side\
      \ network timesouts\n   see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).\n\
      \nkeyword str encoding:\n   Defaults to UTF-8.\n\nreturns:\n   File-updated\
      \ property dict (Etag and last modified).\n\nrtype:\n   dict(str, Any)\n\n\n\
      \n## Example:Upload a file.<!--[!code-python[Main](les\\file_samples_client.py\
      \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [],\
      \ \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\\
      s\\\\dist_temp\\\\82\\\\azure-storage-file-share-12.13.0\\\\samples\\\\file_samples_client.py\"\
      , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
      highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
      \n   with open(SOURCE_FILE, \"rb\") as source:\n       my_file.upload_file(source)\n\
      \n   ````"
- uid: azure.storage.fileshare.ShareFileClient.upload_range
  name: upload_range
  summary: Upload a range of bytes to a file.
  signature: 'upload_range(data: bytes, offset: int, length: int, **kwargs) -> Dict[str,
    Any]'
  parameters:
  - name: data
    description: The data to upload.
    isRequired: true
    types:
    - <xref:bytes>
  - name: offset
    description: 'Start of byte range to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the page content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https as https (the default)

      will already validate. Note that this MD5 hash is not stored with the

      file.'
    types:
    - <xref:bool>
  - name: file_last_write_mode
    description: 'If the file last write time should be preserved or overwritten.
      Possible values

      are "preserve" or "now". If not specified, file last write time will be changed
      to

      the current date/time.


      New in version 12.8.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:Literal>[<xref:"preserve">, <xref:"now">]
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.ShareFileClient.upload_range_from_url
  name: upload_range_from_url
  summary: Writes the bytes from one Azure File endpoint into the specified range
    of another Azure File endpoint.
  signature: 'upload_range_from_url(source_url: str, offset: int, length: int, source_offset:
    int, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: source_url
    description: 'A URL of up to 2 KB in length that specifies an Azure file or blob.

      The value should be URL-encoded as it would appear in a request URI.

      If the source is in another account, the source must either be public

      or must be authenticated via a shared access signature. If the source

      is public, no authentication is required.

      Examples:

      [https://myaccount.file.core.windows.net/myshare/mydir/myfile](https://myaccount.file.core.windows.net/myshare/mydir/myfile)

      [https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken](https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken)'
    isRequired: true
    types:
    - <xref:str>
  - name: source_offset
    description: 'This indicates the start of the range of bytes(inclusive) that has
      to be taken from the copy source.

      The service will read the same number of bytes as the destination range (length-offset).'
    isRequired: true
    types:
    - <xref:int>
  - name: source_if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only if the source

      blob has been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only if the source blob

      has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_etag
    description: 'The source ETag value, or the wildcard character (*). Used to check
      if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: source_match_condition
    description: The source match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: file_last_write_mode
    description: 'If the file last write time should be preserved or overwritten.
      Possible values

      are "preserve" or "now". If not specified, file last write time will be changed
      to

      the current date/time.


      New in version 12.8.0: This parameter was introduced in API version ''2021-06-08''.'
    types:
    - <xref:Literal>[<xref:"preserve">, <xref:"now">]
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-file-share#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
