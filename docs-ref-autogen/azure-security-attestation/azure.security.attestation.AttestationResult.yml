### YamlMime:PythonClass
uid: azure.security.attestation.AttestationResult
name: AttestationResult
fullName: azure.security.attestation.AttestationResult
module: azure.security.attestation
inheritances:
- builtins.object
summary: 'Represents the claims returned from the attestation service as a result

  of a call to <xref:azure.security.attestation.AttestationClient.attest_sgx_enclave>,

  or <xref:azure.security.attestation.AttestationClient.attest_open_enclave>.'
constructor:
  syntax: 'AttestationResult(**kwargs: Any)'
  keywordOnlyParameters:
  - name: issuer
    description: Entity which issued the attestation token.
    types:
    - <xref:str>
  - name: unique_identifier
    description: Unique identifier for the token.
    types:
    - <xref:str>
    - <xref:None>
  - name: nonce
    description: Returns the input *nonce* attribute passed to the *Attest* API.
    types:
    - <xref:str>
    - <xref:None>
  - name: version
    description: Version of the token. Must be "1.0"
    types:
    - <xref:str>
  - name: runtime_claims
    description: Runtime claims passed in from the caller of the attest API.
    types:
    - <xref:dict>
    - <xref:None>
  - name: inittime_claims
    description: Inittime claims passed in from the caller of the attest API.
    types:
    - <xref:dict>
    - <xref:None>
  - name: enclave_held_data
    description: Runtime data passed in from the caller of the attest API.
    types:
    - <xref:bytes>
    - <xref:None>
  - name: policy_claims
    description: Attestation claims issued by policies.
    types:
    - <xref:dict>
    - <xref:None>
  - name: verifier_type
    description: Verifier which generated this token.
    types:
    - <xref:str>
  - name: policy_signer
    description: 'If the policy which processed the request is signed,

      this will be the certificate which signed the policy.'
    types:
    - <xref:azure.security.attestation.AttestationSigner>
    - <xref:None>
  - name: policy_hash
    description: 'The hash of the policy which processed the attestation

      evidence.'
    types:
    - <xref:str>
  - name: is_debuggable
    description: 'True if a debugger can be attached to the SGX enclave

      being attested.'
    types:
    - <xref:bool>
  - name: product_id
    description: Product ID for the SGX enclave being attested.
    types:
    - <xref:int>
  - name: mr_enclave
    description: MRENCLAVE value for the SGX enclave being attested.
    types:
    - <xref:str>
  - name: mr_signer
    description: MRSIGNER value for the SGX enclave being attested.
    types:
    - <xref:str>
  - name: svn
    description: Security version number for the SGX enclave being attested.
    types:
    - <xref:int>
  - name: sgx_collateral
    description: 'Collateral which identifies the collateral used to

      create the token.'
    types:
    - <xref:dict>
attributes:
- uid: azure.security.attestation.AttestationResult.enclave_held_data
  name: enclave_held_data
  summary: 'Returns the value of the runtime_data field specified as an input

    to the <xref:azure.security.attestation.AttestationClient.attest_sgx_enclave>
    or

    <xref:azure.security.attestation.AttestationClient.attest_open_enclave> API.


    > [!NOTE]

    > The enclave_held_data property will only be populated if the

    >

    > runtime_data parameter to the Attest API is specified.

    >'
  return:
    types:
    - <xref:bytes>
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.inittime_claims
  name: inittime_claims
  summary: 'Returns the inittime claims in the token.


    This value will match the input *inittime_json* property to the

    <xref:azure.security.attestation.AttestationClient.attest_sgx_enclave> or

    <xref:azure.security.attestation.AttestationClient.attest_open_enclave> API.


    > [!NOTE]

    > The inittime_claims property will only be populated if the

    >

    > inittime_json parameter to the Attest API is specified. It will

    >

    > not be populated if the inittime_data parameter is specified.

    >'
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.is_debuggable
  name: is_debuggable
  summary: 'Returns "True" if the source evidence being attested indicates

    that the TEE has debugging enabled.'
  return:
    types:
    - <xref:bool>
- uid: azure.security.attestation.AttestationResult.issuer
  name: issuer
  summary: 'Returns the issuer of the attestation token.


    The issuer for the token MUST be the same as the *endpoint* associated

    with the <xref:azure.security.attestation.AttestationClient> object.

    If it is not, then the token should be rejected.


    See [RFC 7519 Section 4.1.1](https://www.rfc-editor.org/rfc/rfc7519.html#section-4.1.1)
    for details.'
  return:
    types:
    - <xref:str>
- uid: azure.security.attestation.AttestationResult.mr_enclave
  name: mr_enclave
  summary: Returns HEX encoded *mr-enclave* value of the SGX enclave being attested.
  return:
    types:
    - <xref:str>
- uid: azure.security.attestation.AttestationResult.mr_signer
  name: mr_signer
  summary: Returns HEX encoded *mr-signer* value of the SGX enclave being attested.
  return:
    types:
    - <xref:str>
- uid: azure.security.attestation.AttestationResult.nonce
  name: nonce
  summary: Returns the value of the "nonce" input to the attestation request.
  return:
    types:
    - <xref:str>
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.policy_claims
  name: policy_claims
  summary: Returns the claims for the token generated by attestation policy.
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.policy_hash
  name: policy_hash
  summary: 'Returns the base64url encoded SHA256 hash of the base64url encoded

    attestation policy which was applied when generating this token.'
  return:
    types:
    - <xref:str>
- uid: azure.security.attestation.AttestationResult.policy_signer
  name: policy_signer
  summary: 'Returns the signing certificate which was used to sign the policy

    which was applied when the token was generated.'
  return:
    types:
    - <xref:azure.security.attestation.AttestationSigner>
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.product_id
  name: product_id
  summary: Returns the product id associated with the SGX enclave being attested.
  return:
    types:
    - <xref:float>
- uid: azure.security.attestation.AttestationResult.runtime_claims
  name: runtime_claims
  summary: 'Returns the runtime claims in the token.


    This value will match the input *runtime_json* property to the

    <xref:azure.security.attestation.AttestationClient.attest_sgx_enclave> or

    <xref:azure.security.attestation.AttestationClient.attest_open_enclave> API.


    > [!NOTE]

    > The runtime_claims property will only be populated if the

    >

    > runtime_json parameter to the Attest API is specified. It will

    >

    > not be populated if the runtime_data parameter is specified.

    >'
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.sgx_collateral
  name: sgx_collateral
  summary: 'Returns a set of information describing the complete set of inputs

    to the *oe_verify_evidence*'
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
- uid: azure.security.attestation.AttestationResult.svn
  name: svn
  summary: Returns the *svn* value of the SGX enclave being attested.
  return:
    types:
    - <xref:int>
- uid: azure.security.attestation.AttestationResult.unique_id
  name: unique_id
  summary: 'Returns a unique ID claim for the attestation token.


    If present, the unique_id property can be used to distinguish between

    different attestation tokens.


    See [RFC 7519 Section 4.1.7](https://rfc-editor.org/rfc/rfc7519.html#section-4.1.7)
    for details.'
  return:
    types:
    - <xref:str>
    - <xref:None>
- uid: azure.security.attestation.AttestationResult.verifier_type
  name: verifier_type
  summary: Returns the verifier which generated this attestation token.
  return:
    types:
    - <xref:str>
- uid: azure.security.attestation.AttestationResult.version
  name: version
  summary: Returns the version of the information returned in the token.
  return:
    types:
    - <xref:str>
