### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations
name: CloudServiceRoleInstancesOperations
fullName: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations
module: azure.mgmt.compute.v2022_04_04.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.compute.v2022_04_04.aio.ComputeManagementClient>'s\n\
  >\n> <xref:cloud_service_role_instances> attribute.\n>"
constructor:
  syntax: CloudServiceRoleInstancesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.begin_delete
  name: begin_delete
  summary: Deletes a role instance from a cloud service.
  signature: 'async begin_delete(role_instance_name: str, resource_group_name: str,
    cloud_service_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.begin_rebuild
  name: begin_rebuild
  summary: 'The Rebuild Role Instance asynchronous operation reinstalls the operating
    system on instances

    of web roles or worker roles and initializes the storage resources that are used
    by them. If

    you do not want to initialize storage resources, you can use Reimage Role Instance.'
  signature: 'async begin_rebuild(role_instance_name: str, resource_group_name: str,
    cloud_service_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.begin_reimage
  name: begin_reimage
  summary: 'The Reimage Role Instance asynchronous operation reinstalls the operating
    system on instances

    of web roles or worker roles.'
  signature: 'async begin_reimage(role_instance_name: str, resource_group_name: str,
    cloud_service_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.begin_restart
  name: begin_restart
  summary: 'The Reboot Role Instance asynchronous operation requests a reboot of a
    role instance in the

    cloud service.'
  signature: 'async begin_restart(role_instance_name: str, resource_group_name: str,
    cloud_service_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.get
  name: get
  summary: Gets a role instance from a cloud service.
  signature: 'async get(role_instance_name: str, resource_group_name: str, cloud_service_name:
    str, *, expand: str | InstanceViewTypes | None = None, **kwargs: Any) -> RoleInstance'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: expand
    description: 'The expand expression to apply to the operation. ''UserData'' is
      not supported

      for cloud services. Known values are: "instanceView" and "userData". Default
      value is None.'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_04_04.models.InstanceViewTypes>
  return:
    description: RoleInstance or the result of cls(response)
    types:
    - <xref:azure.mgmt.compute.v2022_04_04.models.RoleInstance>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.get_instance_view
  name: get_instance_view
  summary: Retrieves information about the run-time state of a role instance in a
    cloud service.
  signature: 'async get_instance_view(role_instance_name: str, resource_group_name:
    str, cloud_service_name: str, **kwargs: Any) -> RoleInstanceView'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RoleInstanceView or the result of cls(response)
    types:
    - <xref:azure.mgmt.compute.v2022_04_04.models.RoleInstanceView>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.get_remote_desktop_file
  name: get_remote_desktop_file
  summary: Gets a remote desktop file for a role instance in a cloud service.
  signature: 'async get_remote_desktop_file(role_instance_name: str, resource_group_name:
    str, cloud_service_name: str, **kwargs: Any) -> AsyncIterator[bytes]'
  parameters:
  - name: role_instance_name
    description: Name of the role instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AsyncIterator[bytes] or the result of cls(response)
    types:
    - <xref:typing.AsyncIterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.list
  name: list
  summary: 'Gets the list of all role instances in a cloud service. Use nextLink property
    in the response

    to get the next page of role instances. Do this till nextLink is null to fetch
    all the role

    instances.'
  signature: 'list(resource_group_name: str, cloud_service_name: str, *, expand: str
    | InstanceViewTypes | None = None, **kwargs: Any) -> AsyncIterable[RoleInstance]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cloud_service_name
    description: Name of the cloud service. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: expand
    description: 'The expand expression to apply to the operation. ''UserData'' is
      not supported

      for cloud services. Known values are: "instanceView" and "userData". Default
      value is None.'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_04_04.models.InstanceViewTypes>
  return:
    description: An iterator like instance of either RoleInstance or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.compute.v2022_04_04.models.RoleInstance>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.compute.v2022_04_04.aio.operations.CloudServiceRoleInstancesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.compute.v2022_04_04.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\compute\\v2022_04_04\\models\\__init__.py'>
