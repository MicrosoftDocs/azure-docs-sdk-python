### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2020_06_01.models.DedicatedHost
  fullName: azure.mgmt.compute.v2020_06_01.models.DedicatedHost
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.compute.v2020_06_01.models._models_py3.Resource
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.models
  name: DedicatedHost
  summary: 'Specifies information about the Dedicated host.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'DedicatedHost(*, location: str, sku, tags=None, platform_fault_domain:
      int = None, auto_replace_on_failure: bool = None, license_type=None, **kwargs)
      -> None'
    parameters:
    - description: Required. Resource location
      id: location
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'Fault domain of the dedicated host within a

        dedicated host group.'
      id: platform_fault_domain
      type:
      - int
    - description: 'Specifies whether the dedicated host

        should be replaced automatically in case of a failure. The value is

        defaulted to ''true'' when not provided.'
      id: auto_replace_on_failure
      type:
      - bool
    - description: 'Specifies the software license type that will be

        applied to the VMs deployed on the dedicated host. <br><br> Possible

        values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br>

        **Windows_Server_Perpetual** <br><br> Default: **None**. Possible values

        include: ''None'', ''Windows_Server_Hybrid'', ''Windows_Server_Perpetual'''
      id: license_type
      type:
      - str
      - azure.mgmt.compute.v2020_06_01.models.DedicatedHostLicenseTypes
    - description: 'Required. SKU of the dedicated host for Hardware Generation

        and VM family. Only name is required to be set. List Microsoft.Compute

        SKUs for a list of possible values.'
      id: sku
      type:
      - azure.mgmt.compute.v2020_06_01.models.Sku
    variables:
    - description: Resource Id
      id: id
      type:
      - str
    - description: Resource name
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
    - description: 'A unique id generated and assigned to the dedicated host by

        the platform. <br><br> Does not change throughout the lifetime of the

        host.'
      id: host_id
      type:
      - str
    - description: 'A list of references to all virtual machines in

        the Dedicated Host.'
      id: virtual_machines
      type:
      - list[azure.mgmt.compute.v2020_06_01.models.SubResourceReadOnly]
    - description: The date when the host was first provisioned.
      id: provisioning_time
      type:
      - datetime
    - description: 'The provisioning state, which only appears in

        the response.'
      id: provisioning_state
      type:
      - str
    - description: The dedicated host instance view.
      id: instance_view
      type:
      - azure.mgmt.compute.v2020_06_01.models.DedicatedHostInstanceView
  type: class
  uid: azure.mgmt.compute.v2020_06_01.models.DedicatedHost
references:
- fullName: list[azure.mgmt.compute.v2020_06_01.models.SubResourceReadOnly]
  name: list[SubResourceReadOnly]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.SubResourceReadOnly
    name: SubResourceReadOnly
    uid: azure.mgmt.compute.v2020_06_01.models.SubResourceReadOnly
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.compute.v2020_06_01.models.SubResourceReadOnly]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
