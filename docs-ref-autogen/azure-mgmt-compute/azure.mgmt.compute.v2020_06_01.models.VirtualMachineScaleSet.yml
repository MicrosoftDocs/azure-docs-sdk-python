### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSet
  fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSet
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.compute.v2020_06_01.models._models_py3.Resource
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.models
  name: VirtualMachineScaleSet
  summary: 'Describes a Virtual Machine Scale Set.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'VirtualMachineScaleSet(*, location: str, tags=None, sku=None, plan=None,
      upgrade_policy=None, automatic_repairs_policy=None, virtual_machine_profile=None,
      overprovision: bool = None, do_not_run_extensions_on_overprovisioned_vms: bool
      = None, single_placement_group: bool = None, zone_balance: bool = None, platform_fault_domain_count:
      int = None, proximity_placement_group=None, host_group=None, additional_capabilities=None,
      scale_in_policy=None, identity=None, zones=None, **kwargs) -> None'
    parameters:
    - description: Required. Resource location
      id: location
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: The virtual machine scale set sku.
      id: sku
      type:
      - azure.mgmt.compute.v2020_06_01.models.Sku
    - description: 'Specifies information about the marketplace image used to

        create the virtual machine. This element is only used for marketplace

        images. Before you can use a marketplace image from an API, you must

        enable the image for programmatic use.  In the Azure portal, find the

        marketplace image that you want to use and then click **Want to deploy

        programmatically, Get Started ->**. Enter any required information and

        then click **Save**.'
      id: plan
      type:
      - azure.mgmt.compute.v2020_06_01.models.Plan
    - description: The upgrade policy.
      id: upgrade_policy
      type:
      - azure.mgmt.compute.v2020_06_01.models.UpgradePolicy
    - description: Policy for automatic repairs.
      id: automatic_repairs_policy
      type:
      - azure.mgmt.compute.v2020_06_01.models.AutomaticRepairsPolicy
    - description: The virtual machine profile.
      id: virtual_machine_profile
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetVMProfile
    - description: 'Specifies whether the Virtual Machine Scale Set

        should be overprovisioned.'
      id: overprovision
      type:
      - bool
    - description: 'When Overprovision is

        enabled, extensions are launched only on the requested number of VMs which

        are finally kept. This property will hence ensure that the extensions do

        not run on the extra overprovisioned VMs.'
      id: do_not_run_extensions_on_overprovisioned_vms
      type:
      - bool
    - description: 'When true this limits the scale set to a

        single placement group, of max size 100 virtual machines. NOTE: If

        singlePlacementGroup is true, it may be modified to false. However, if

        singlePlacementGroup is false, it may not be modified to true.'
      id: single_placement_group
      type:
      - bool
    - description: 'Whether to force strictly even Virtual Machine

        distribution cross x-zones in case there is zone outage.'
      id: zone_balance
      type:
      - bool
    - description: 'Fault Domain count for each placement

        group.'
      id: platform_fault_domain_count
      type:
      - int
    - description: 'Specifies information about the

        proximity placement group that the virtual machine scale set should be

        assigned to. <br><br>Minimum api-version: 2018-04-01.'
      id: proximity_placement_group
      type:
      - azure.mgmt.compute.v2020_06_01.models.SubResource
    - description: 'Specifies information about the dedicated host group

        that the virtual machine scale set resides in. <br><br>Minimum

        api-version: 2020-06-01.'
      id: host_group
      type:
      - azure.mgmt.compute.v2020_06_01.models.SubResource
    - description: 'Specifies additional capabilities enabled

        or disabled on the Virtual Machines in the Virtual Machine Scale Set. For

        instance: whether the Virtual Machines have the capability to support

        attaching managed data disks with UltraSSD_LRS storage account type.'
      id: additional_capabilities
      type:
      - azure.mgmt.compute.v2020_06_01.models.AdditionalCapabilities
    - description: 'Specifies the scale-in policy that decides which

        virtual machines are chosen for removal when a Virtual Machine Scale Set

        is scaled-in.'
      id: scale_in_policy
      type:
      - azure.mgmt.compute.v2020_06_01.models.ScaleInPolicy
    - description: 'The identity of the virtual machine scale set, if

        configured.'
      id: identity
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIdentity
    - description: 'The virtual machine scale set zones. NOTE: Availability

        zones can only be set when you create the scale set'
      id: zones
      type:
      - list[str]
    variables:
    - description: Resource Id
      id: id
      type:
      - str
    - description: Resource name
      id: name
      type:
      - str
    - description: Resource type
      id: type
      type:
      - str
    - description: 'The provisioning state, which only appears in

        the response.'
      id: provisioning_state
      type:
      - str
    - description: 'Specifies the ID which uniquely identifies a Virtual

        Machine Scale Set.'
      id: unique_id
      type:
      - str
  type: class
  uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSet
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
