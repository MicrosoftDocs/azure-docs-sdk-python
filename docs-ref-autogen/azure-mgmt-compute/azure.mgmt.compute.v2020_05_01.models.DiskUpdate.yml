### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2020_05_01.models.DiskUpdate
  fullName: azure.mgmt.compute.v2020_05_01.models.DiskUpdate
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.compute.v2020_05_01.models
  name: DiskUpdate
  summary: Disk update resource.
  syntax:
    content: 'DiskUpdate(*, os_type=None, disk_size_gb: int = None, encryption_settings_collection=None,
      disk_iops_read_write: int = None, disk_mbps_read_write: int = None, disk_iops_read_only:
      int = None, disk_mbps_read_only: int = None, max_shares: int = None, encryption=None,
      network_access_policy=None, disk_access_id: str = None, tags=None, sku=None,
      **kwargs) -> None'
    parameters:
    - description: 'the Operating System type. Possible values include:

        ''Windows'', ''Linux'''
      id: os_type
      type:
      - str
      - azure.mgmt.compute.v2020_05_01.models.OperatingSystemTypes
    - description: 'If creationData.createOption is Empty, this field is

        mandatory and it indicates the size of the disk to create. If this field

        is present for updates or creation with other options, it indicates a

        resize. Resizes are only allowed if the disk is not attached to a running

        VM, and can only increase the disk''s size.'
      id: disk_size_gb
      type:
      - int
    - description: 'Encryption settings collection used

        be Azure Disk Encryption, can contain multiple encryption settings per

        disk or snapshot.'
      id: encryption_settings_collection
      type:
      - azure.mgmt.compute.v2020_05_01.models.EncryptionSettingsCollection
    - description: 'The number of IOPS allowed for this disk;

        only settable for UltraSSD disks. One operation can transfer between 4k

        and 256k bytes.'
      id: disk_iops_read_write
      type:
      - long
    - description: 'The bandwidth allowed for this disk; only

        settable for UltraSSD disks. MBps means millions of bytes per second - MB

        here uses the ISO notation, of powers of 10.'
      id: disk_mbps_read_write
      type:
      - long
    - description: 'The total number of IOPS that will be allowed

        across all VMs mounting the shared disk as ReadOnly. One operation can

        transfer between 4k and 256k bytes.'
      id: disk_iops_read_only
      type:
      - long
    - description: 'The total throughput (MBps) that will be

        allowed across all VMs mounting the shared disk as ReadOnly. MBps means

        millions of bytes per second - MB here uses the ISO notation, of powers of

        10.'
      id: disk_mbps_read_only
      type:
      - long
    - description: 'The maximum number of VMs that can attach to the disk

        at the same time. Value greater than one indicates a disk that can be

        mounted on multiple VMs at the same time.'
      id: max_shares
      type:
      - int
    - description: 'Encryption property can be used to encrypt data at rest

        with customer managed keys or platform managed keys.'
      id: encryption
      type:
      - azure.mgmt.compute.v2020_05_01.models.Encryption
    - description: 'Possible values include: ''AllowAll'',

        ''AllowPrivate'', ''DenyAll'''
      id: network_access_policy
      type:
      - str
      - azure.mgmt.compute.v2020_05_01.models.NetworkAccessPolicy
    - description: 'ARM id of the DiskAccess resource for using private

        endpoints on disks.'
      id: disk_access_id
      type:
      - str
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: ''
      id: sku
      type:
      - azure.mgmt.compute.v2020_05_01.models.DiskSku
  type: class
  uid: azure.mgmt.compute.v2020_05_01.models.DiskUpdate
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
