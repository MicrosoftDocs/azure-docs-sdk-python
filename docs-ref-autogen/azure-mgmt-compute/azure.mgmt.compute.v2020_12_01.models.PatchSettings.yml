### YamlMime:PythonClass
uid: azure.mgmt.compute.v2020_12_01.models.PatchSettings
name: PatchSettings
fullName: azure.mgmt.compute.v2020_12_01.models.PatchSettings
module: azure.mgmt.compute.v2020_12_01.models
inheritances:
- msrest.serialization.Model
summary: Specifies settings related to VM Guest Patching on Windows.
constructor:
  syntax: 'PatchSettings(*, patch_mode: Optional[Union[str, azure.mgmt.compute.v2020_12_01.models._compute_management_client_enums.WindowsVMGuestPatchMode]]
    = None, enable_hotpatching: Optional[bool] = None, **kwargs)'
  parameters:
  - name: patch_mode
    description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine.:code:*<br

      />*`<br />` Possible values are:`<br />``<br />` **Manual** - You  control

      the application of patches to a virtual machine. You do this by applying patches
      manually

      inside the VM. In this mode, automatic updates are disabled; the property

      WindowsConfiguration.enableAutomaticUpdates must be false:code:*<br />*`<br
      />`

      **AutomaticByOS** - The virtual machine will automatically be updated by the
      OS. The property

      WindowsConfiguration.enableAutomaticUpdates must be true. `<br />``<br />`

      **AutomaticByPlatform** - the virtual machine will automatically updated by
      the platform. The

      properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates
      must be true.

      Possible values include: "Manual", "AutomaticByOS", "AutomaticByPlatform".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_12_01.models.WindowsVMGuestPatchMode>
  - name: enable_hotpatching
    description: 'Enables customers to patch their Azure VMs without requiring a

      reboot. For enableHotpatching, the ''provisionVMAgent'' must be set to true
      and ''patchMode'' must

      be set to ''AutomaticByPlatform''.'
    isRequired: true
    types:
    - <xref:bool>
