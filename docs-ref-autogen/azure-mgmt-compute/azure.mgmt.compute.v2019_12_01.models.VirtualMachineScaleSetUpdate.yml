### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetUpdate
  fullName: azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetUpdate
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.compute.v2019_12_01.models._models_py3.UpdateResource
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.models
  name: VirtualMachineScaleSetUpdate
  summary: Describes a Virtual Machine Scale Set.
  syntax:
    content: 'VirtualMachineScaleSetUpdate(*, tags=None, sku=None, plan=None, upgrade_policy=None,
      automatic_repairs_policy=None, virtual_machine_profile=None, overprovision:
      bool = None, do_not_run_extensions_on_overprovisioned_vms: bool = None, single_placement_group:
      bool = None, additional_capabilities=None, scale_in_policy=None, proximity_placement_group=None,
      identity=None, **kwargs) -> None'
    parameters:
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: The virtual machine scale set sku.
      id: sku
      type:
      - azure.mgmt.compute.v2019_12_01.models.Sku
    - description: 'The purchase plan when deploying a virtual machine scale set

        from VM Marketplace images.'
      id: plan
      type:
      - azure.mgmt.compute.v2019_12_01.models.Plan
    - description: The upgrade policy.
      id: upgrade_policy
      type:
      - azure.mgmt.compute.v2019_12_01.models.UpgradePolicy
    - description: Policy for automatic repairs.
      id: automatic_repairs_policy
      type:
      - azure.mgmt.compute.v2019_12_01.models.AutomaticRepairsPolicy
    - description: The virtual machine profile.
      id: virtual_machine_profile
      type:
      - azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetUpdateVMProfile
    - description: 'Specifies whether the Virtual Machine Scale Set

        should be overprovisioned.'
      id: overprovision
      type:
      - bool
    - description: 'When Overprovision is

        enabled, extensions are launched only on the requested number of VMs which

        are finally kept. This property will hence ensure that the extensions do

        not run on the extra overprovisioned VMs.'
      id: do_not_run_extensions_on_overprovisioned_vms
      type:
      - bool
    - description: 'When true this limits the scale set to a

        single placement group, of max size 100 virtual machines. NOTE: If

        singlePlacementGroup is true, it may be modified to false. However, if

        singlePlacementGroup is false, it may not be modified to true.'
      id: single_placement_group
      type:
      - bool
    - description: 'Specifies additional capabilities enabled

        or disabled on the Virtual Machines in the Virtual Machine Scale Set. For

        instance: whether the Virtual Machines have the capability to support

        attaching managed data disks with UltraSSD_LRS storage account type.'
      id: additional_capabilities
      type:
      - azure.mgmt.compute.v2019_12_01.models.AdditionalCapabilities
    - description: 'Specifies the scale-in policy that decides which

        virtual machines are chosen for removal when a Virtual Machine Scale Set

        is scaled-in.'
      id: scale_in_policy
      type:
      - azure.mgmt.compute.v2019_12_01.models.ScaleInPolicy
    - description: 'Specifies information about the

        proximity placement group that the virtual machine scale set should be

        assigned to. <br><br>Minimum api-version: 2018-04-01.'
      id: proximity_placement_group
      type:
      - azure.mgmt.compute.v2019_12_01.models.SubResource
    - description: 'The identity of the virtual machine scale set, if

        configured.'
      id: identity
      type:
      - azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetIdentity
  type: class
  uid: azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetUpdate
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
