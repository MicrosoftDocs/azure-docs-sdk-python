### YamlMime:PythonClass
uid: azure.servicefabric.models.ProvisionApplicationTypeDescription
name: ProvisionApplicationTypeDescription
fullName: azure.servicefabric.models.ProvisionApplicationTypeDescription
module: azure.servicefabric.models
inheritances:
- azure.servicefabric.models._models_py3.ProvisionApplicationTypeDescriptionBase
summary: 'Describes the operation to register or provision an application type using

  an application package uploaded to the Service Fabric image store.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ProvisionApplicationTypeDescription(*, async_property: bool, application_type_build_path:
    str, application_package_cleanup_policy=None, **kwargs)'
  parameters:
  - name: async_property
    description: 'Required. Indicates whether or not provisioning

      should occur asynchronously. When set to true, the provision operation

      returns when the request is accepted by the system, and the provision

      operation continues without any timeout limit. The default value is false.

      For large application packages, we recommend setting the value to true.'
    isRequired: true
    types:
    - <xref:bool>
  - name: kind
    description: Required. Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: application_type_build_path
    description: 'Required. The relative path for the

      application package in the image store specified during the prior upload

      operation.'
    isRequired: true
    types:
    - <xref:str>
  - name: application_package_cleanup_policy
    description: 'The kind of action that needs

      to be taken for cleaning up the application package after successful

      provision. Possible values include: ''Invalid'', ''Default'', ''Automatic'',

      ''Manual'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.ApplicationPackageCleanupPolicy>
  keywordOnlyParameters:
  - name: async_property
    isRequired: true
  - name: application_type_build_path
    isRequired: true
  - name: application_package_cleanup_policy
    isRequired: true
methods:
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ProvisionApplicationTypeDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
