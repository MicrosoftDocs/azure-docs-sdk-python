### YamlMime:PythonClass
uid: azure.servicefabric.models.ChaosTargetFilter
name: ChaosTargetFilter
fullName: azure.servicefabric.models.ChaosTargetFilter
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Defines all filters for targeted Chaos faults, for example, faulting only

  certain node types or faulting only certain applications.

  If ChaosTargetFilter is not used, Chaos faults all cluster entities. If

  ChaosTargetFilter is used, Chaos faults only the entities that meet the

  ChaosTargetFilter

  specification. NodeTypeInclusionList and ApplicationInclusionList allow a

  union semantics only. It is not possible to specify an intersection

  of NodeTypeInclusionList and ApplicationInclusionList. For example, it is

  not possible to specify "fault this application only when it is on that

  node type."

  Once an entity is included in either NodeTypeInclusionList or

  ApplicationInclusionList, that entity cannot be excluded using

  ChaosTargetFilter. Even if

  applicationX does not appear in ApplicationInclusionList, in some Chaos

  iteration applicationX can be faulted because it happens to be on a node of

  nodeTypeY that is included

  in NodeTypeInclusionList. If both NodeTypeInclusionList and

  ApplicationInclusionList are null or empty, an ArgumentException is thrown.'
constructor:
  syntax: ChaosTargetFilter(*, node_type_inclusion_list=None, application_inclusion_list=None,
    **kwargs)
  parameters:
  - name: node_type_inclusion_list
    description: 'A list of node types to include in Chaos

      faults.

      All types of faults (restart node, restart code package, remove replica,

      restart replica, move primary, and move secondary) are enabled for the

      nodes of these node types.

      If a node type (say NodeTypeX) does not appear in the

      NodeTypeInclusionList, then node level faults (like NodeRestart) will

      never be enabled for the nodes of

      NodeTypeX, but code package and replica faults can still be enabled for

      NodeTypeX if an application in the ApplicationInclusionList.

      happens to reside on a node of NodeTypeX.

      At most 100 node type names can be included in this list, to increase this

      number, a config upgrade is required for

      MaxNumberOfNodeTypesInChaosEntityFilter configuration.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: application_inclusion_list
    description: 'A list of application URIs to include

      in Chaos faults.

      All replicas belonging to services of these applications are amenable to

      replica faults (restart replica, remove replica, move primary, and move

      secondary) by Chaos.

      Chaos may restart a code package only if the code package hosts replicas

      of these applications only.

      If an application does not appear in this list, it can still be faulted in

      some Chaos iteration if the application ends up on a node of a node type

      that is included in NodeTypeInclusionList.

      However, if applicationX is tied to nodeTypeY through placement

      constraints and applicationX is absent from ApplicationInclusionList and

      nodeTypeY is absent from NodeTypeInclusionList, then applicationX will

      never be faulted.

      At most 1000 application names can be included in this list, to increase

      this number, a config upgrade is required for

      MaxNumberOfApplicationsInChaosEntityFilter configuration.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  keywordOnlyParameters:
  - name: node_type_inclusion_list
    isRequired: true
  - name: application_inclusion_list
    isRequired: true
methods:
- uid: azure.servicefabric.models.ChaosTargetFilter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ChaosTargetFilter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ChaosTargetFilter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ChaosTargetFilter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ChaosTargetFilter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ChaosTargetFilter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ChaosTargetFilter.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
