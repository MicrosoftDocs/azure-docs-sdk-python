### YamlMime:PythonClass
uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription
name: ClusterConfigurationUpgradeDescription
fullName: azure.servicefabric.models.ClusterConfigurationUpgradeDescription
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Describes the parameters for a standalone cluster configuration upgrade.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ClusterConfigurationUpgradeDescription(*, cluster_config: str, health_check_retry_timeout=''PT0H0M0S'',
    health_check_wait_duration_in_seconds=''PT0H0M0S'', health_check_stable_duration_in_seconds=''PT0H0M0S'',
    upgrade_domain_timeout_in_seconds=''PT0H0M0S'', upgrade_timeout_in_seconds=''PT0H0M0S'',
    max_percent_unhealthy_applications: int = 0, max_percent_unhealthy_nodes: int
    = 0, max_percent_delta_unhealthy_nodes: int = 0, max_percent_upgrade_domain_delta_unhealthy_nodes:
    int = 0, application_health_policies=None, **kwargs)'
  parameters:
  - name: cluster_config
    description: 'Required. The cluster configuration as a JSON

      string. For example, [this

      file](https://github.com/Azure-Samples/service-fabric-dotnet-standalone-cluster-configuration/blob/master/Samples/ClusterConfig.Unsecure.DevCluster.json)

      contains JSON describing the [nodes and other properties of the

      cluster](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-manifest).'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_retry_timeout
    description: 'The length of time between attempts to

      perform health checks if the application or cluster is not healthy.

      Default value: "PT0H0M0S" .'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: health_check_wait_duration_in_seconds
    description: 'The length of time to wait

      after completing an upgrade domain before starting the health checks

      process. Default value: "PT0H0M0S" .'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: health_check_stable_duration_in_seconds
    description: 'The length of time that

      the application or cluster must remain healthy before the upgrade proceeds

      to the next upgrade domain. Default value: "PT0H0M0S" .'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: upgrade_domain_timeout_in_seconds
    description: 'The timeout for the upgrade

      domain. Default value: "PT0H0M0S" .'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: upgrade_timeout_in_seconds
    description: 'The upgrade timeout. Default value:

      "PT0H0M0S" .'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: max_percent_unhealthy_applications
    description: 'The maximum allowed percentage

      of unhealthy applications during the upgrade. Allowed values are integer

      values from zero to 100. Default value: 0 .'
    isRequired: true
    types:
    - <xref:int>
  - name: max_percent_unhealthy_nodes
    description: 'The maximum allowed percentage of

      unhealthy nodes during the upgrade. Allowed values are integer values from

      zero to 100. Default value: 0 .'
    isRequired: true
    types:
    - <xref:int>
  - name: max_percent_delta_unhealthy_nodes
    description: 'The maximum allowed percentage

      of delta health degradation during the upgrade. Allowed values are integer

      values from zero to 100. Default value: 0 .'
    isRequired: true
    types:
    - <xref:int>
  - name: max_percent_upgrade_domain_delta_unhealthy_nodes
    description: 'The maximum

      allowed percentage of upgrade domain delta health degradation during the

      upgrade. Allowed values are integer values from zero to 100. Default

      value: 0 .'
    isRequired: true
    types:
    - <xref:int>
  - name: application_health_policies
    description: 'Defines the application health policy

      map used to evaluate the health of an application or one of its children

      entities.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ApplicationHealthPolicies>
  keywordOnlyParameters:
  - name: cluster_config
    isRequired: true
  - name: health_check_retry_timeout
    defaultValue: PT0H0M0S
  - name: health_check_wait_duration_in_seconds
    defaultValue: PT0H0M0S
  - name: health_check_stable_duration_in_seconds
    defaultValue: PT0H0M0S
  - name: upgrade_domain_timeout_in_seconds
    defaultValue: PT0H0M0S
  - name: upgrade_timeout_in_seconds
    defaultValue: PT0H0M0S
  - name: max_percent_unhealthy_applications
    isRequired: true
  - name: max_percent_unhealthy_nodes
    isRequired: true
  - name: max_percent_delta_unhealthy_nodes
    isRequired: true
  - name: max_percent_upgrade_domain_delta_unhealthy_nodes
    isRequired: true
  - name: application_health_policies
    isRequired: true
methods:
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterConfigurationUpgradeDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
