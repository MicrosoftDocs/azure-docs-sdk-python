### YamlMime:PythonClass
uid: azure.servicefabric.models.ApplicationCapacityDescription
name: ApplicationCapacityDescription
fullName: azure.servicefabric.models.ApplicationCapacityDescription
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Describes capacity information for services of this application. This

  description can be used for describing the following.

  - Reserving the capacity for the services on the nodes

  - Limiting the total number of nodes that services of this application can

  run on

  - Limiting the custom capacity metrics to limit the total consumption of

  this metric by the services of this application.'
constructor:
  syntax: 'ApplicationCapacityDescription(*, minimum_nodes: int = None, maximum_nodes:
    int = 0, application_metrics=None, **kwargs)'
  parameters:
  - name: minimum_nodes
    description: 'The minimum number of nodes where Service Fabric

      will reserve capacity for this application. Note that this does not mean

      that the services of this application will be placed on all of those

      nodes. If this property is set to zero, no capacity will be reserved. The

      value of this property cannot be more than the value of the MaximumNodes

      property.'
    isRequired: true
    types:
    - <xref:long>
  - name: maximum_nodes
    description: 'The maximum number of nodes where Service Fabric

      will reserve capacity for this application. Note that this does not mean

      that the services of this application will be placed on all of those

      nodes. By default, the value of this property is zero and it means that

      the services can be placed on any node. Default value: 0 .'
    isRequired: true
    types:
    - <xref:long>
  - name: application_metrics
    description: 'List of application capacity metric

      description.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ApplicationMetricDescription>]
  keywordOnlyParameters:
  - name: minimum_nodes
    isRequired: true
  - name: maximum_nodes
    isRequired: true
  - name: application_metrics
    isRequired: true
methods:
- uid: azure.servicefabric.models.ApplicationCapacityDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ApplicationCapacityDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ApplicationCapacityDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ApplicationCapacityDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ApplicationCapacityDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ApplicationCapacityDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ApplicationCapacityDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
