### YamlMime:PythonClass
uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription
name: ClusterHealthChunkQueryDescription
fullName: azure.servicefabric.models.ClusterHealthChunkQueryDescription
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'The cluster health chunk query description, which can specify the health

  policies to evaluate cluster health and very expressive filters to select

  which cluster entities to include in response.'
constructor:
  syntax: ClusterHealthChunkQueryDescription(*, node_filters=None, application_filters=None,
    cluster_health_policy=None, application_health_policies=None, **kwargs)
  parameters:
  - name: node_filters
    description: 'Defines a list of filters that specify which nodes to

      be included in the returned cluster health chunk.

      If no filters are specified, no nodes are returned. All the nodes are used

      to evaluate the cluster''s aggregated health state, regardless of the input

      filters.

      The cluster health chunk query may specify multiple node filters.

      For example, it can specify a filter to return all nodes with health state

      Error and another filter to always include a node identified by its

      NodeName.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.NodeHealthStateFilter>]
  - name: application_filters
    description: 'Defines a list of filters that specify which

      applications to be included in the returned cluster health chunk.

      If no filters are specified, no applications are returned. All the

      applications are used to evaluate the cluster''s aggregated health state,

      regardless of the input filters.

      The cluster health chunk query may specify multiple application filters.

      For example, it can specify a filter to return all applications with

      health state Error and another filter to always include applications of a

      specified application type.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ApplicationHealthStateFilter>]
  - name: cluster_health_policy
    description: 'Defines a health policy used to evaluate the

      health of the cluster or of a cluster node.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ClusterHealthPolicy>
  - name: application_health_policies
    description: 'Defines the application health policy

      map used to evaluate the health of an application or one of its children

      entities.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ApplicationHealthPolicies>
  keywordOnlyParameters:
  - name: node_filters
    isRequired: true
  - name: application_filters
    isRequired: true
  - name: cluster_health_policy
    isRequired: true
  - name: application_health_policies
    isRequired: true
methods:
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterHealthChunkQueryDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
