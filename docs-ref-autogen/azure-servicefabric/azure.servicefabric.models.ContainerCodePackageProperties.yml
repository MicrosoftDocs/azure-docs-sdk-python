### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.servicefabric.models.ContainerCodePackageProperties
  fullName: azure.servicefabric.models.ContainerCodePackageProperties
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.servicefabric.models
  name: ContainerCodePackageProperties
  summary: 'Describes a container and its runtime properties.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'ContainerCodePackageProperties(*, name: str, image: str, resources,
      image_registry_credential=None, entry_point: str = None, commands=None, environment_variables=None,
      settings=None, labels=None, endpoints=None, volume_refs=None, volumes=None,
      diagnostics=None, reliable_collections_refs=None, liveness_probe=None, readiness_probe=None,
      **kwargs) -> None'
    parameters:
    - description: Required. The name of the code package.
      id: name
      type:
      - str
    - description: Required. The Container image to use.
      id: image
      type:
      - str
    - description: Image registry credential.
      id: image_registry_credential
      type:
      - azure.servicefabric.models.ImageRegistryCredential
    - description: Override for the default entry point in the container.
      id: entry_point
      type:
      - str
    - description: 'Command array to execute within the container in exec

        form.'
      id: commands
      type:
      - list[str]
    - description: 'The environment variables to set in this

        container'
      id: environment_variables
      type:
      - list[azure.servicefabric.models.EnvironmentVariable]
    - description: 'The settings to set in this container. The setting file

        path can be fetched from environment variable "Fabric_SettingPath". The

        path for Windows container is "C:\secrets". The path for Linux

        container is "/var/secrets".'
      id: settings
      type:
      - list[azure.servicefabric.models.Setting]
    - description: The labels to set in this container.
      id: labels
      type:
      - list[azure.servicefabric.models.ContainerLabel]
    - description: The endpoints exposed by this container.
      id: endpoints
      type:
      - list[azure.servicefabric.models.EndpointProperties]
    - description: Required. The resources required by this container.
      id: resources
      type:
      - azure.servicefabric.models.ResourceRequirements
    - description: 'Volumes to be attached to the container. The lifetime

        of these volumes is independent of the application''s lifetime.'
      id: volume_refs
      type:
      - list[azure.servicefabric.models.VolumeReference]
    - description: 'Volumes to be attached to the container. The lifetime of

        these volumes is scoped to the application''s lifetime.'
      id: volumes
      type:
      - list[azure.servicefabric.models.ApplicationScopedVolume]
    - description: Reference to sinks in DiagnosticsDescription.
      id: diagnostics
      type:
      - azure.servicefabric.models.DiagnosticsRef
    - description: 'A list of ReliableCollection resources

        used by this particular code package. Please refer to

        ReliableCollectionsRef for more details.'
      id: reliable_collections_refs
      type:
      - list[azure.servicefabric.models.ReliableCollectionsRef]
    - description: 'An array of liveness probes for a code package. It

        determines when to restart a code package.'
      id: liveness_probe
      type:
      - list[azure.servicefabric.models.Probe]
    - description: 'An array of readiness probes for a code package.

        It determines when to unpublish an endpoint.'
      id: readiness_probe
      type:
      - list[azure.servicefabric.models.Probe]
    variables:
    - description: Runtime information of a container instance.
      id: instance_view
      type:
      - azure.servicefabric.models.ContainerInstanceView
  type: class
  uid: azure.servicefabric.models.ContainerCodePackageProperties
references:
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.servicefabric.models.EnvironmentVariable]
  name: list[EnvironmentVariable]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.EnvironmentVariable
    name: EnvironmentVariable
    uid: azure.servicefabric.models.EnvironmentVariable
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.EnvironmentVariable]
- fullName: list[azure.servicefabric.models.Setting]
  name: list[Setting]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.Setting
    name: Setting
    uid: azure.servicefabric.models.Setting
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.Setting]
- fullName: list[azure.servicefabric.models.ContainerLabel]
  name: list[ContainerLabel]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ContainerLabel
    name: ContainerLabel
    uid: azure.servicefabric.models.ContainerLabel
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ContainerLabel]
- fullName: list[azure.servicefabric.models.EndpointProperties]
  name: list[EndpointProperties]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.EndpointProperties
    name: EndpointProperties
    uid: azure.servicefabric.models.EndpointProperties
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.EndpointProperties]
- fullName: list[azure.servicefabric.models.VolumeReference]
  name: list[VolumeReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.VolumeReference
    name: VolumeReference
    uid: azure.servicefabric.models.VolumeReference
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.VolumeReference]
- fullName: list[azure.servicefabric.models.ApplicationScopedVolume]
  name: list[ApplicationScopedVolume]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ApplicationScopedVolume
    name: ApplicationScopedVolume
    uid: azure.servicefabric.models.ApplicationScopedVolume
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ApplicationScopedVolume]
- fullName: list[azure.servicefabric.models.ReliableCollectionsRef]
  name: list[ReliableCollectionsRef]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ReliableCollectionsRef
    name: ReliableCollectionsRef
    uid: azure.servicefabric.models.ReliableCollectionsRef
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ReliableCollectionsRef]
- fullName: list[azure.servicefabric.models.Probe]
  name: list[Probe]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.Probe
    name: Probe
    uid: azure.servicefabric.models.Probe
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.Probe]
- fullName: list[azure.servicefabric.models.Probe]
  name: list[Probe]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.Probe
    name: Probe
    uid: azure.servicefabric.models.Probe
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.Probe]
