### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.servicefabric.models.StatelessServiceDescription
  fullName: azure.servicefabric.models.StatelessServiceDescription
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.servicefabric.models._models_py3.ServiceDescription
  langs:
  - python
  module: azure.servicefabric.models
  name: StatelessServiceDescription
  summary: 'Describes a stateless service.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'StatelessServiceDescription(*, service_name: str, service_type_name:
      str, partition_description, instance_count: int, application_name: str = None,
      initialization_data=None, placement_constraints: str = None, correlation_scheme=None,
      service_load_metrics=None, service_placement_policies=None, default_move_cost=None,
      is_default_move_cost_specified: bool = None, service_package_activation_mode=None,
      service_dns_name: str = None, scaling_policies=None, min_instance_count: int
      = None, min_instance_percentage: int = None, flags: int = None, instance_close_delay_duration_seconds:
      int = None, **kwargs) -> None'
    parameters:
    - description: 'The name of the application, including the

        ''fabric:'' URI scheme.'
      id: application_name
      type:
      - str
    - description: 'Required. The full name of the service with ''fabric:''

        URI scheme.'
      id: service_name
      type:
      - str
    - description: 'Required. Name of the service type as specified

        in the service manifest.'
      id: service_type_name
      type:
      - str
    - description: 'The initialization data as an array of bytes.

        Initialization data is passed to service instances or replicas when they

        are created.'
      id: initialization_data
      type:
      - list[int]
    - description: 'Required. The partition description as an

        object.'
      id: partition_description
      type:
      - azure.servicefabric.models.PartitionSchemeDescription
    - description: 'The placement constraints as a string.

        Placement constraints are boolean expressions on node properties and allow

        for restricting a service to particular nodes based on the service

        requirements. For example, to place a service on nodes where NodeType is

        blue specify the following: "NodeColor == blue)".'
      id: placement_constraints
      type:
      - str
    - description: The correlation scheme.
      id: correlation_scheme
      type:
      - list[azure.servicefabric.models.ServiceCorrelationDescription]
    - description: The service load metrics.
      id: service_load_metrics
      type:
      - list[azure.servicefabric.models.ServiceLoadMetricDescription]
    - description: The service placement policies.
      id: service_placement_policies
      type:
      - list[azure.servicefabric.models.ServicePlacementPolicyDescription]
    - description: 'The move cost for the service. Possible values

        include: ''Zero'', ''Low'', ''Medium'', ''High'', ''VeryHigh'''
      id: default_move_cost
      type:
      - str
      - azure.servicefabric.models.MoveCost
    - description: 'Indicates if the DefaultMoveCost

        property is specified.'
      id: is_default_move_cost_specified
      type:
      - bool
    - description: 'The activation mode of service

        package to be used for a service. Possible values include:

        ''SharedProcess'', ''ExclusiveProcess'''
      id: service_package_activation_mode
      type:
      - str
      - azure.servicefabric.models.ServicePackageActivationMode
    - description: 'The DNS name of the service. It requires the DNS

        system service to be enabled in Service Fabric cluster.'
      id: service_dns_name
      type:
      - str
    - description: Scaling policies for this service.
      id: scaling_policies
      type:
      - list[azure.servicefabric.models.ScalingPolicyDescription]
    - description: Required. Constant filled by server.
      id: service_kind
      type:
      - str
    - description: Required. The instance count.
      id: instance_count
      type:
      - int
    - description: 'MinInstanceCount is the minimum number of

        instances that must be up to meet the EnsureAvailability safety check

        during operations like upgrade or deactivate node.

        The actual number that is used is max( MinInstanceCount, ceil(

        MinInstancePercentage/100.0 * InstanceCount) ).

        Note, if InstanceCount is set to -1, during MinInstanceCount computation

        -1 is first converted into the number of nodes on which the instances are

        allowed to be placed according to the placement constraints on the

        service.'
      id: min_instance_count
      type:
      - int
    - description: 'MinInstancePercentage is the minimum

        percentage of InstanceCount that must be up to meet the EnsureAvailability

        safety check during operations like upgrade or deactivate node.

        The actual number that is used is max( MinInstanceCount, ceil(

        MinInstancePercentage/100.0 * InstanceCount) ).

        Note, if InstanceCount is set to -1, during MinInstancePercentage

        computation, -1 is first converted into the number of nodes on which the

        instances are allowed to be placed according to the placement constraints

        on the service.'
      id: min_instance_percentage
      type:
      - int
    - description: 'Flags indicating whether other properties are set. Each of

        the associated properties corresponds to a flag, specified below, which,

        if set, indicate that the property is specified.

        This property can be a combination of those flags obtained using bitwise

        ''OR'' operator.

        For example, if the provided value is 1 then the flags for

        InstanceCloseDelayDuration is set.

        - None - Does not indicate any other properties are set. The value is

        zero.

        - InstanceCloseDelayDuration - Indicates the InstanceCloseDelayDuration

        property is set. The value is 1.'
      id: flags
      type:
      - int
    - description: 'Duration in seconds, to wait

        before a stateless instance is closed, to allow the active requests to

        drain gracefully. This would be effective when the instance is closing

        during the application/cluster upgrade and disabling node.

        The endpoint exposed on this instance is removed prior to starting the

        delay, which prevents new connections to this instance.

        In addition, clients that have subscribed to service endpoint change

        events([https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync](https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync)),

        can do

        the following upon receiving the endpoint removal notification:

        - Stop sending new requests to this instance.

        - Close existing connections after in-flight requests have completed.

        - Connect to a different instance of the service partition for future

        requests.

        Note, the default value of InstanceCloseDelayDuration is 0, which

        indicates that there won''t be any delay or removal of the endpoint prior

        to closing the instance.'
      id: instance_close_delay_duration_seconds
      type:
      - long
  type: class
  uid: azure.servicefabric.models.StatelessServiceDescription
references:
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
- fullName: list[azure.servicefabric.models.ServiceCorrelationDescription]
  name: list[ServiceCorrelationDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ServiceCorrelationDescription
    name: ServiceCorrelationDescription
    uid: azure.servicefabric.models.ServiceCorrelationDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ServiceCorrelationDescription]
- fullName: list[azure.servicefabric.models.ServiceLoadMetricDescription]
  name: list[ServiceLoadMetricDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ServiceLoadMetricDescription
    name: ServiceLoadMetricDescription
    uid: azure.servicefabric.models.ServiceLoadMetricDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ServiceLoadMetricDescription]
- fullName: list[azure.servicefabric.models.ServicePlacementPolicyDescription]
  name: list[ServicePlacementPolicyDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ServicePlacementPolicyDescription
    name: ServicePlacementPolicyDescription
    uid: azure.servicefabric.models.ServicePlacementPolicyDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ServicePlacementPolicyDescription]
- fullName: list[azure.servicefabric.models.ScalingPolicyDescription]
  name: list[ScalingPolicyDescription]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ScalingPolicyDescription
    name: ScalingPolicyDescription
    uid: azure.servicefabric.models.ScalingPolicyDescription
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ScalingPolicyDescription]
