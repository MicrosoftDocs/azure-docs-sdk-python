### YamlMime:PythonClass
uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject
name: ClusterUpgradeDescriptionObject
fullName: azure.servicefabric.models.ClusterUpgradeDescriptionObject
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: Represents a ServiceFabric cluster upgrade.
constructor:
  syntax: 'ClusterUpgradeDescriptionObject(*, config_version: str = None, code_version:
    str = None, upgrade_kind=''Rolling'', rolling_upgrade_mode=''UnmonitoredAuto'',
    upgrade_replica_set_check_timeout_in_seconds: int = None, force_restart: bool
    = None, sort_order=''Default'', enable_delta_health_evaluation: bool = None, monitoring_policy=None,
    cluster_health_policy=None, cluster_upgrade_health_policy=None, application_health_policy_map=None,
    **kwargs)'
  parameters:
  - name: config_version
    description: 'The cluster configuration version (specified in the

      cluster manifest).'
    isRequired: true
    types:
    - <xref:str>
  - name: code_version
    description: The ServiceFabric code version of the cluster.
    isRequired: true
    types:
    - <xref:str>
  - name: upgrade_kind
    description: 'The kind of upgrade out of the following possible

      values. Possible values include: ''Invalid'', ''Rolling''. Default value:

      "Rolling" .'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.UpgradeKind>
  - name: rolling_upgrade_mode
    description: 'The mode used to monitor health during a

      rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual,

      Monitored, and UnmonitoredDeferred. Possible values include: ''Invalid'',

      ''UnmonitoredAuto'', ''UnmonitoredManual'', ''Monitored'',

      ''UnmonitoredDeferred''. Default value: "UnmonitoredAuto" .'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.UpgradeMode>
  - name: upgrade_replica_set_check_timeout_in_seconds
    description: 'The maximum amount of

      time to block processing of an upgrade domain and prevent loss of

      availability when there are unexpected issues. When this timeout expires,

      processing of the upgrade domain will proceed regardless of availability

      loss issues. The timeout is reset at the start of each upgrade domain.

      Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit

      integer).'
    isRequired: true
    types:
    - <xref:long>
  - name: force_restart
    description: 'If true, then processes are forcefully restarted

      during upgrade even when the code version has not changed (the upgrade

      only changes configuration or data).'
    isRequired: true
    types:
    - <xref:bool>
  - name: sort_order
    description: 'Defines the order in which an upgrade proceeds through

      the cluster. Possible values include: ''Invalid'', ''Default'', ''Numeric'',

      ''Lexicographical'', ''ReverseNumeric'', ''ReverseLexicographical''. Default

      value: "Default" .'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.UpgradeSortOrder>
  - name: enable_delta_health_evaluation
    description: 'When true, enables delta health

      evaluation rather than absolute health evaluation after completion of each

      upgrade domain.'
    isRequired: true
    types:
    - <xref:bool>
  - name: monitoring_policy
    description: 'Describes the parameters for monitoring an

      upgrade in Monitored mode.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.MonitoringPolicyDescription>
  - name: cluster_health_policy
    description: 'Defines a health policy used to evaluate the

      health of the cluster or of a cluster node.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ClusterHealthPolicy>
  - name: cluster_upgrade_health_policy
    description: 'Defines a health policy used to

      evaluate the health of the cluster during a cluster upgrade.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ClusterUpgradeHealthPolicyObject>
  - name: application_health_policy_map
    description: 'Represents the map of application

      health policies for a ServiceFabric cluster upgrade'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.ApplicationHealthPolicyMapObject>
  keywordOnlyParameters:
  - name: config_version
    isRequired: true
  - name: code_version
    isRequired: true
  - name: upgrade_kind
    defaultValue: Rolling
  - name: rolling_upgrade_mode
    defaultValue: UnmonitoredAuto
  - name: upgrade_replica_set_check_timeout_in_seconds
    isRequired: true
  - name: force_restart
    isRequired: true
  - name: sort_order
    defaultValue: Default
  - name: enable_delta_health_evaluation
    isRequired: true
  - name: monitoring_policy
    isRequired: true
  - name: cluster_health_policy
    isRequired: true
  - name: cluster_upgrade_health_policy
    isRequired: true
  - name: application_health_policy_map
    isRequired: true
methods:
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ClusterUpgradeDescriptionObject.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
