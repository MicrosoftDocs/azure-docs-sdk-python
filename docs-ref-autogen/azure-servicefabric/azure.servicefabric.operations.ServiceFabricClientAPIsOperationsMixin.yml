### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.add_configuration_parameter_overrides
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.backup_partition
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_operation
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_repair_task
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.commit_image_store_upload_session
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.copy_image_store_content
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_application
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_backup_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_compose_deployment
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_repair_task
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service_from_template
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_application
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_backup_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_content
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_upload_session
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_property
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_repair_task
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_service
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.deploy_service_package_to_node
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_application_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_node
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_partition_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_service_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_application_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_node
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_partition_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_service_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.force_approve_repair_task
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_aad_metadata
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_all_entities_backed_up_by_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_configuration_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_load_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_manifest
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_name_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list_by_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_applications_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_by_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backups_from_backup_location
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_events
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_schedule
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration_upgrade_status
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk_using_policy_and_advanced_filters
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_load
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_manifest
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_upgrade_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_version
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_upgrade_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_configuration_overrides
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_container_logs_deployed_on_node
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_containers_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_correlated_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_data_loss_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_code_package_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list_by_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info_by_partition_id
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_by_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_fault_operation_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_content
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_folder_size
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_content
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_folder_size
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_id
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_path
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_name_exists_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_load_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_transition_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_nodes_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_configuration_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_load_information
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replica_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replicas_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restart_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restore_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partitions_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_code_version_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_config_version_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_quorum_loss_progress
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_repair_task_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_configuration_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_description
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health_using_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_manifest
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_name_info
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_by_name
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_services_event_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_sub_name_info_list
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_unplaced_replica_information
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_upgrade_orchestration_service_state
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_container_api
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_command
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_query
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_primary_replica
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_secondary_replica
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.post_chaos_schedule
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_application_type
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_cluster
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.put_property
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_all_partitions
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_partition
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_service_partitions
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_system_partitions
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_compose_deployment
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_configuration_overrides
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_node_state
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_replica
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_application_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_cluster_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_application_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_service_package_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_node_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_partition_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_replica_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_service_health
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.reset_partition_load
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resolve_service
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_deployed_code_package
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_node
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_replica
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restore_partition
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_cluster_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_partition_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_service_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_application_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_cluster_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.set_upgrade_orchestration_service_state
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_application_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_chaos
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_configuration_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_compose_deployment_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_data_loss
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_node_transition
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_partition_restart
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_quorum_loss
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_rollback_compose_deployment_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.stop_chaos
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.submit_property_batch
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_application_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_partition_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_service_backup
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.toggle_verbose_service_placement_health_reporting
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_application_type
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_cluster
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_application_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_backup_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_cluster_upgrade
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_execution_state
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_task_health_policy
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_service
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file
  - azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file_chunk
  class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicefabric.operations
  name: ServiceFabricClientAPIsOperationsMixin
  summary: ''
  syntax: {}
  type: class
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.add_configuration_parameter_overrides
  langs:
  - python
  module: azure.servicefabric.operations
  name: add_configuration_parameter_overrides(node_name, config_parameter_override_list,
    force=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add_configuration_parameter_overrides
  summary: 'Adds the list of configuration overrides on the specified node.


    This api allows adding all existing configuration overrides on the

    specified node.'
  syntax:
    content: add_configuration_parameter_overrides(node_name, config_parameter_override_list,
      force=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'Description for adding list of

        configuration overrides.'
      id: config_parameter_override_list
      isRequired: true
      type:
      - list[azure.servicefabric.models.ConfigParameterOverride]
    - defaultValue: None
      description: Force adding configuration overrides on specified nodes.
      id: force
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.add_configuration_parameter_overrides
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.backup_partition
  langs:
  - python
  module: azure.servicefabric.operations
  name: backup_partition(partition_id, backup_timeout=10, timeout=60, backup_storage=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: backup_partition
  summary: 'Triggers backup of the partition''s state.


    Creates a backup of the stateful persisted partition''s state. In case

    the partition is already being periodically backed up, then by default

    the new backup is created at the same backup storage. One can also

    override the same by specifying the backup storage details as part of

    the request body. Once the backup is initiated, its progress can be

    tracked using the GetBackupProgress operation.

    In case, the operation times out, specify a greater backup timeout

    value in the query parameter.'
  syntax:
    content: backup_partition(partition_id, backup_timeout=10, timeout=60, backup_storage=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '10'
      description: 'Specifies the maximum amount of time, in

        minutes, to wait for the backup operation to complete. Post that, the

        operation completes with timeout error. However, in certain corner

        cases it could be that though the operation returns back timeout, the

        backup actually goes through. In case of timeout error, its

        recommended to invoke this operation again with a greater timeout

        value. The default value for the same is 10 minutes.'
      id: backup_timeout
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'Specifies the details of the backup storage

        where to save the backup.'
      id: backup_storage
      type:
      - azure.servicefabric.models.BackupStorageDescription
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.backup_partition
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_operation
  langs:
  - python
  module: azure.servicefabric.operations
  name: cancel_operation(operation_id, force=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: cancel_operation
  summary: 'Cancels a user-induced fault operation.


    The following APIs start fault operations that may be cancelled by

    using CancelOperation: StartDataLoss, StartQuorumLoss,

    StartPartitionRestart, StartNodeTransition.

    If force is false, then the specified user-induced operation will be

    gracefully stopped and cleaned up.  If force is true, the command will

    be aborted, and some internal state

    may be left behind.  Specifying force as true should be used with care.

    Calling this API with force set to true is not allowed until this API

    has already

    been called on the same test command with force set to false first, or

    unless the test command already has an OperationState of

    OperationState.RollingBack.

    Clarification: OperationState.RollingBack means that the system will

    be/is cleaning up internal system state caused by executing the

    command.  It will not restore data if the

    test command was to cause data loss.  For example, if you call

    StartDataLoss then call this API, the system will only clean up

    internal state from running the command.

    It will not restore the target partition''s data, if the command

    progressed far enough to cause data loss.

    Important note:  if this API is invoked with force==true, internal

    state may be left behind.'
  syntax:
    content: cancel_operation(operation_id, force=False, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Indicates whether to gracefully roll back and clean up

        internal system state modified by executing the user-induced

        operation.'
      id: force
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_operation
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_repair_task
  langs:
  - python
  module: azure.servicefabric.operations
  name: cancel_repair_task(repair_task_cancel_description, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: cancel_repair_task
  summary: 'Requests the cancellation of the given repair task.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: cancel_repair_task(repair_task_cancel_description, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Describes the repair task to be

        cancelled.'
      id: repair_task_cancel_description
      isRequired: true
      type:
      - azure.servicefabric.models.RepairTaskCancelDescription
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RepairTaskUpdateInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RepairTaskUpdateInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_repair_task
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.commit_image_store_upload_session
  langs:
  - python
  module: azure.servicefabric.operations
  name: commit_image_store_upload_session(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: commit_image_store_upload_session
  summary: 'Commit an image store upload session.


    When all file chunks have been uploaded, the upload session needs to be

    committed explicitly to complete the upload. Image store preserves the

    upload session until the expiration time, which is 30 minutes after the

    last chunk received. .'
  syntax:
    content: commit_image_store_upload_session(session_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'A GUID generated by the user for a file uploading.

        It identifies an image store upload session which keeps track of all

        file chunks until it is committed.'
      id: session_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.commit_image_store_upload_session
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.copy_image_store_content
  langs:
  - python
  module: azure.servicefabric.operations
  name: copy_image_store_content(image_store_copy_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: copy_image_store_content
  summary: 'Copies image store content internally.


    Copies the image store content from the source image store relative

    path to the destination image store relative path.'
  syntax:
    content: copy_image_store_content(image_store_copy_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Describes the copy description

        for the image store.'
      id: image_store_copy_description
      isRequired: true
      type:
      - azure.servicefabric.models.ImageStoreCopyDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.copy_image_store_content
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_application
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_application(application_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create_application
  summary: 'Creates a Service Fabric application.


    Creates a Service Fabric application using the specified description.'
  syntax:
    content: create_application(application_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Description for creating an

        application.'
      id: application_description
      isRequired: true
      type:
      - azure.servicefabric.models.ApplicationDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_application
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_backup_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_backup_policy(backup_policy_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create_backup_policy
  summary: 'Creates a backup policy.


    Creates a backup policy which can be associated later with a Service

    Fabric application, service or a partition for periodic backup.'
  syntax:
    content: create_backup_policy(backup_policy_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Describes the backup policy.
      id: backup_policy_description
      isRequired: true
      type:
      - azure.servicefabric.models.BackupPolicyDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_backup_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_compose_deployment
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_compose_deployment(create_compose_deployment_description, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_compose_deployment
  summary: 'Creates a Service Fabric compose deployment.


    Compose is a file format that describes multi-container applications.

    This API allows deploying container based applications defined in

    compose format in a Service Fabric cluster. Once the deployment is

    created, its status can be tracked via the *GetComposeDeploymentStatus*

    API.'
  syntax:
    content: create_compose_deployment(create_compose_deployment_description, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Describes the compose

        deployment that needs to be created.'
      id: create_compose_deployment_description
      isRequired: true
      type:
      - azure.servicefabric.models.CreateComposeDeploymentDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_compose_deployment
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_name(name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_name
  summary: 'Creates a Service Fabric name.


    Creates the specified Service Fabric name.'
  syntax:
    content: create_name(name, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, including the ''fabric:'' URI

        scheme.'
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_repair_task
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_repair_task(repair_task, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_repair_task
  summary: 'Creates a new repair task.


    For clusters that have the Repair Manager Service configured,

    this API provides a way to create repair tasks that run automatically

    or manually.

    For repair tasks that run automatically, an appropriate repair executor

    must be running for each repair action to run automatically.

    These are currently only available in specially-configured Azure Cloud

    Services.

    To create a manual repair task, provide the set of impacted node names

    and the

    expected impact. When the state of the created repair task changes to

    approved,

    you can safely perform repair actions on those nodes.

    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: create_repair_task(repair_task, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Describes the repair task to be created or

        updated.'
      id: repair_task
      isRequired: true
      type:
      - azure.servicefabric.models.RepairTask
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RepairTaskUpdateInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RepairTaskUpdateInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_repair_task
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_service(application_id, service_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create_service
  summary: 'Creates the specified Service Fabric service.


    This api allows creating a new Service Fabric stateless or stateful

    service under a specified Service Fabric application. The description

    for creating the service includes partitioning information and optional

    properties for placement and load balancing. Some of the properties can

    later be modified using *UpdateService* API.'
  syntax:
    content: create_service(application_id, service_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The information necessary to create a

        service.'
      id: service_description
      isRequired: true
      type:
      - azure.servicefabric.models.ServiceDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service_from_template
  langs:
  - python
  module: azure.servicefabric.operations
  name: create_service_from_template(application_id, service_from_template_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: create_service_from_template
  summary: 'Creates a Service Fabric service from the service template.


    Creates a Service Fabric service from the service template defined in

    the application manifest. A service template contains the properties

    that will be same for the service instance of the same type. The API

    allows overriding the properties that are usually different for

    different services of the same service type.'
  syntax:
    content: create_service_from_template(application_id, service_from_template_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Describes the service that

        needs to be created from the template defined in the application

        manifest.'
      id: service_from_template_description
      isRequired: true
      type:
      - azure.servicefabric.models.ServiceFromTemplateDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service_from_template
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_application
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_application(application_id, force_remove=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_application
  summary: 'Deletes an existing Service Fabric application.


    An application must be created before it can be deleted. Deleting an

    application will delete all services that are part of that application.

    By default, Service Fabric will try to close service replicas in a

    graceful manner and then delete the service. However, if a service is

    having issues closing the replica gracefully, the delete operation may

    take a long time or get stuck. Use the optional ForceRemove flag to

    skip the graceful close sequence and forcefully delete the application

    and all of its services.'
  syntax:
    content: delete_application(application_id, force_remove=None, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Remove a Service Fabric application or service

        forcefully without going through the graceful shutdown sequence. This

        parameter can be used to forcefully delete an application or service

        for which delete is timing out due to issues in the service code that

        prevents graceful close of replicas.'
      id: force_remove
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_application
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_backup_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_backup_policy(backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_backup_policy
  summary: 'Deletes the backup policy.


    Deletes an existing backup policy. A backup policy must be created

    before it can be deleted. A currently active backup policy, associated

    with any Service Fabric application, service or partition, cannot be

    deleted without first deleting the mapping.'
  syntax:
    content: delete_backup_policy(backup_policy_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the backup policy.
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_backup_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_content
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_image_store_content(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_image_store_content
  summary: 'Deletes existing image store content.


    Deletes existing image store content being found within the given image

    store relative path. This command can be used to delete uploaded

    application packages once they are provisioned.'
  syntax:
    content: delete_image_store_content(content_path, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_content
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_upload_session
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_image_store_upload_session(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_image_store_upload_session
  summary: 'Cancels an image store upload session.


    The DELETE request will cause the existing upload session to expire and

    remove any previously uploaded file chunks.'
  syntax:
    content: delete_image_store_upload_session(session_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'A GUID generated by the user for a file uploading.

        It identifies an image store upload session which keeps track of all

        file chunks until it is committed.'
      id: session_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_upload_session
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_name(name_id, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_name
  summary: 'Deletes a Service Fabric name.


    Deletes the specified Service Fabric name. A name must be created

    before it can be deleted. Deleting a name with child properties will

    fail.'
  syntax:
    content: delete_name(name_id, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_property
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_property(name_id, property_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: delete_property
  summary: 'Deletes the specified Service Fabric property.


    Deletes the specified Service Fabric property under a given name. A

    property must be created before it can be deleted.'
  syntax:
    content: delete_property(name_id, property_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - description: Specifies the name of the property to get.
      id: property_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_property
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_repair_task
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_repair_task(task_id, version=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: delete_repair_task
  summary: 'Deletes a completed repair task.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: delete_repair_task(task_id, version=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The ID of the completed repair task to be deleted.
      id: task_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The current version number of the repair task. If

        non-zero, then the request will only succeed if this value matches the

        actual current version of the repair task. If zero, then no version

        check is performed.'
      id: version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_repair_task
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_service
  langs:
  - python
  module: azure.servicefabric.operations
  name: delete_service(service_id, force_remove=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: delete_service
  summary: 'Deletes an existing Service Fabric service.


    A service must be created before it can be deleted. By default, Service

    Fabric will try to close service replicas in a graceful manner and then

    delete the service. However, if the service is having issues closing

    the replica gracefully, the delete operation may take a long time or

    get stuck. Use the optional ForceRemove flag to skip the graceful close

    sequence and forcefully delete the service.'
  syntax:
    content: delete_service(service_id, force_remove=None, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Remove a Service Fabric application or service

        forcefully without going through the graceful shutdown sequence. This

        parameter can be used to forcefully delete an application or service

        for which delete is timing out due to issues in the service code that

        prevents graceful close of replicas.'
      id: force_remove
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_service
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.deploy_service_package_to_node
  langs:
  - python
  module: azure.servicefabric.operations
  name: deploy_service_package_to_node(node_name, deploy_service_package_to_node_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: deploy_service_package_to_node
  summary: 'Downloads all of the code packages associated with specified service

    manifest on the specified node.


    This API provides a way to download code packages including the

    container images on a specific node outside of the normal application

    deployment and upgrade path. This is useful for the large code packages

    and container images to be present on the node before the actual

    application deployment and upgrade, thus significantly reducing the

    total time required for the deployment or upgrade.'
  syntax:
    content: deploy_service_package_to_node(node_name, deploy_service_package_to_node_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'Describes

        information for deploying a service package to a Service Fabric node.'
      id: deploy_service_package_to_node_description
      isRequired: true
      type:
      - azure.servicefabric.models.DeployServicePackageToNodeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.deploy_service_package_to_node
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_application_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: disable_application_backup(application_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: disable_application_backup
  summary: 'Disables periodic backup of Service Fabric application.


    Disables periodic backup of Service Fabric application which was

    previously enabled.'
  syntax:
    content: disable_application_backup(application_id, clean_backup, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Boolean flag to delete backups. It can be set to

        true for deleting all the backups which were created for the backup

        entity that is getting disabled for backup.'
      id: clean_backup
      isRequired: true
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_application_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_node
  langs:
  - python
  module: azure.servicefabric.operations
  name: disable_node(node_name, timeout=60, deactivation_intent=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: disable_node
  summary: 'Deactivate a Service Fabric cluster node with the specified

    deactivation intent.


    Deactivate a Service Fabric cluster node with the specified

    deactivation intent. Once the deactivation is in progress, the

    deactivation intent can be increased, but not decreased (for example, a

    node that is deactivated with the Pause intent can be deactivated

    further with Restart, but not the other way around. Nodes may be

    reactivated using the Activate a node operation any time after they are

    deactivated. If the deactivation is not complete, this will cancel the

    deactivation. A node that goes down and comes back up while deactivated

    will still need to be reactivated before services will be placed on

    that node.'
  syntax:
    content: disable_node(node_name, timeout=60, deactivation_intent=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'Describes the intent or reason for

        deactivating the node. The possible values are following. Possible

        values include: ''Pause'', ''Restart'', ''RemoveData'''
      id: deactivation_intent
      type:
      - str
      - azure.servicefabric.models.DeactivationIntent
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_node
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_partition_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: disable_partition_backup(partition_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: disable_partition_backup
  summary: 'Disables periodic backup of Service Fabric partition which was

    previously enabled.


    Disables periodic backup of partition which was previously enabled.

    Backup must be explicitly enabled before it can be disabled.

    In case the backup is enabled for the Service Fabric application or

    service, which this partition is part of, this partition would continue

    to be periodically backed up as per the policy mapped at the higher

    level entity.'
  syntax:
    content: disable_partition_backup(partition_id, clean_backup, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'Boolean flag to delete backups. It can be set to

        true for deleting all the backups which were created for the backup

        entity that is getting disabled for backup.'
      id: clean_backup
      isRequired: true
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_partition_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_service_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: disable_service_backup(service_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: disable_service_backup
  summary: 'Disables periodic backup of Service Fabric service which was previously

    enabled.


    Disables periodic backup of Service Fabric service which was previously

    enabled. Backup must be explicitly enabled before it can be disabled.

    In case the backup is enabled for the Service Fabric application, which

    this service is part of, this service would continue to be periodically

    backed up as per the policy mapped at the application level.'
  syntax:
    content: disable_service_backup(service_id, clean_backup, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: 'Boolean flag to delete backups. It can be set to

        true for deleting all the backups which were created for the backup

        entity that is getting disabled for backup.'
      id: clean_backup
      isRequired: true
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_service_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_application_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: enable_application_backup(application_id, backup_policy_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: enable_application_backup
  summary: 'Enables periodic backup of stateful partitions under this Service

    Fabric application.


    Enables periodic backup of stateful partitions which are part of this

    Service Fabric application. Each partition is backed up individually as

    per the specified backup policy description.

    Note only C# based Reliable Actor and Reliable Stateful services are

    currently supported for periodic backup.'
  syntax:
    content: enable_application_backup(application_id, backup_policy_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Name of the backup policy to be used for

        enabling periodic backups.'
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_application_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_node
  langs:
  - python
  module: azure.servicefabric.operations
  name: enable_node(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: enable_node
  summary: 'Activate a Service Fabric cluster node that is currently deactivated.


    Activates a Service Fabric cluster node that is currently deactivated.

    Once activated, the node will again become a viable target for placing

    new replicas, and any deactivated replicas remaining on the node will

    be reactivated.'
  syntax:
    content: enable_node(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_node
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_partition_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: enable_partition_backup(partition_id, backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: enable_partition_backup
  summary: 'Enables periodic backup of the stateful persisted partition.


    Enables periodic backup of stateful persisted partition. Each partition

    is backed up as per the specified backup policy description. In case

    the application or service, which is partition is part of, is already

    enabled for backup then this operation would override the policy being

    used to take the periodic backup of this partition.

    Note only C# based Reliable Actor and Reliable Stateful services are

    currently supported for periodic backup.'
  syntax:
    content: enable_partition_backup(partition_id, backup_policy_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'Name of the backup policy to be used for

        enabling periodic backups.'
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_partition_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_service_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: enable_service_backup(service_id, backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: enable_service_backup
  summary: 'Enables periodic backup of stateful partitions under this Service

    Fabric service.


    Enables periodic backup of stateful partitions which are part of this

    Service Fabric service. Each partition is backed up individually as per

    the specified backup policy description. In case the application, which

    the service is part of, is already enabled for backup then this

    operation would override the policy being used to take the periodic

    backup for this service and its partitions (unless explicitly

    overridden at the partition level).

    Note only C# based Reliable Actor and Reliable Stateful services are

    currently supported for periodic backup.'
  syntax:
    content: enable_service_backup(service_id, backup_policy_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: 'Name of the backup policy to be used for

        enabling periodic backups.'
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_service_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.force_approve_repair_task
  langs:
  - python
  module: azure.servicefabric.operations
  name: force_approve_repair_task(task_id, version=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: force_approve_repair_task
  summary: 'Forces the approval of the given repair task.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: force_approve_repair_task(task_id, version=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The ID of the repair task.
      id: task_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The current version number of the repair task. If

        non-zero, then the request will only succeed if this value matches the

        actual current version of the repair task. If zero, then no version

        check is performed.'
      id: version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RepairTaskUpdateInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RepairTaskUpdateInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.force_approve_repair_task
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_aad_metadata
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_aad_metadata(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_aad_metadata
  summary: 'Gets the Azure Active Directory metadata used for secured connection to

    cluster.


    Gets the Azure Active Directory metadata used for secured connection to

    cluster.

    This API is not supposed to be called separately. It provides

    information needed to set up an Azure Active Directory secured

    connection with a Service Fabric cluster.'
  syntax:
    content: get_aad_metadata(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: AadMetadataObject or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.AadMetadataObject
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_aad_metadata
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_all_entities_backed_up_by_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_all_entities_backed_up_by_policy(backup_policy_name, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_all_entities_backed_up_by_policy
  summary: 'Gets the list of backup entities that are associated with this policy.


    Returns a list of Service Fabric application, service or partition

    which are associated with this backup policy.'
  syntax:
    content: get_all_entities_backed_up_by_policy(backup_policy_name, continuation_token=None,
      max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the backup policy.
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedBackupEntityList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedBackupEntityList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_all_entities_backed_up_by_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_configuration_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_backup_configuration_info(application_id, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_backup_configuration_info
  summary: 'Gets the Service Fabric application backup configuration information.


    Gets the Service Fabric backup configuration information for the

    application and the services and partitions under this application.'
  syntax:
    content: get_application_backup_configuration_info(application_id, continuation_token=None,
      max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedBackupConfigurationInfoList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedBackupConfigurationInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_configuration_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_backup_list(application_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, continuation_token=None, max_results=0, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_application_backup_list
  summary: 'Gets the list of backups available for every partition in this

    application.


    Returns a list of backups available for every partition in this Service

    Fabric application. The server enumerates all the backups available at

    the backup location configured in the backup policy. It also allows

    filtering of the result based on start and end datetime or just

    fetching the latest available backup for every partition.'
  syntax:
    content: get_application_backup_list(application_id, timeout=60, latest=False,
      start_date_time_filter=None, end_date_time_filter=None, continuation_token=None,
      max_results=0, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Specifies whether to get only the most recent backup

        available for a partition for the specified time range.'
      id: latest
      type:
      - bool
    - defaultValue: None
      description: 'Specify the start date time from which

        to enumerate backups, in datetime format. The date time must be

        specified in ISO8601 format. This is an optional parameter. If not

        specified, all backups from the beginning are enumerated.'
      id: start_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: 'Specify the end date time till which to

        enumerate backups, in datetime format. The date time must be specified

        in ISO8601 format. This is an optional parameter. If not specified,

        enumeration is done till the most recent backup.'
      id: end_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedBackupInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedBackupInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_event_list(application_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_event_list
  summary: 'Gets an Application-related events.


    The response is list of ApplicationEvent objects.'
  syntax:
    content: get_application_event_list(application_id, start_time_utc, end_time_utc,
      timeout=60, events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ApplicationEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_health(application_id, events_health_state_filter=0, deployed_applications_health_state_filter=0,
    services_health_state_filter=0, exclude_health_statistics=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_application_health
  summary: 'Gets the health of the service fabric application.


    Returns the heath state of the service fabric application. The response

    reports either Ok, Error or Warning health state. If the entity is not

    found in the health store, it will return Error.'
  syntax:
    content: get_application_health(application_id, events_health_state_filter=0,
      deployed_applications_health_state_filter=0, services_health_state_filter=0,
      exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of

        the deployed applications health state objects returned in the result

        of application health query based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states. Only deployed applications that match the

        filter will be returned.

        All deployed applications are used to evaluate the aggregated health

        state. If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values, obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of deployed

        applications with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: deployed_applications_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the services

        health state objects returned in the result of services health query

        based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only services that match the filter are returned. All services are

        used to evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values,

        obtained using bitwise ''OR'' operator. For example, if the provided

        value is 6 then health state of services with HealthState value of OK

        (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: services_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_health_using_policy(application_id, events_health_state_filter=0,
    deployed_applications_health_state_filter=0, services_health_state_filter=0, exclude_health_statistics=False,
    application_health_policy=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_health_using_policy
  summary: 'Gets the health of a Service Fabric application using the specified

    policy.


    Gets the health of a Service Fabric application. Use

    EventsHealthStateFilter to filter the collection of health events

    reported on the node based on the health state. Use

    ClusterHealthPolicies to override the health policies used to evaluate

    the health.'
  syntax:
    content: get_application_health_using_policy(application_id, events_health_state_filter=0,
      deployed_applications_health_state_filter=0, services_health_state_filter=0,
      exclude_health_statistics=False, application_health_policy=None, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of

        the deployed applications health state objects returned in the result

        of application health query based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states. Only deployed applications that match the

        filter will be returned.

        All deployed applications are used to evaluate the aggregated health

        state. If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values, obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of deployed

        applications with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: deployed_applications_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the services

        health state objects returned in the result of services health query

        based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only services that match the filter are returned. All services are

        used to evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values,

        obtained using bitwise ''OR'' operator. For example, if the provided

        value is 6 then health state of services with HealthState value of OK

        (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: services_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_info(application_id, exclude_application_parameters=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_info
  summary: 'Gets information about a Service Fabric application.


    Returns the information about the application that was created or in

    the process of being created in the Service Fabric cluster and whose

    name matches the one specified as the parameter. The response includes

    the name, type, status, parameters, and other details about the

    application.'
  syntax:
    content: get_application_info(application_id, exclude_application_parameters=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'The flag that specifies whether

        application parameters will be excluded from the result.'
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_info_list(application_definition_kind_filter=0, application_type_name=None,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_info_list
  summary: 'Gets the list of applications created in the Service Fabric cluster

    that match the specified filters.


    Gets the information about the applications that were created or in the

    process of being created in the Service Fabric cluster and match the

    specified filters. The response includes the name, type, status,

    parameters, and other details about the application. If the

    applications do not fit in a page, one page of results is returned as

    well as a continuation token, which can be used to get the next page.

    Filters ApplicationTypeName and ApplicationDefinitionKindFilter cannot

    be specified at the same time.'
  syntax:
    content: get_application_info_list(application_definition_kind_filter=0, application_type_name=None,
      exclude_application_parameters=False, continuation_token=None, max_results=0,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '0'
      description: 'Used to filter on

        ApplicationDefinitionKind, which is the mechanism used to define a

        Service Fabric application.

        - Default - Default value, which performs the same function as

        selecting "All". The value is 0.

        - All - Filter that matches input with any ApplicationDefinitionKind

        value. The value is 65535.

        - ServiceFabricApplicationDescription - Filter that matches input with

        ApplicationDefinitionKind value ServiceFabricApplicationDescription.

        The value is 1.

        - Compose - Filter that matches input with ApplicationDefinitionKind

        value Compose. The value is 2.'
      id: application_definition_kind_filter
      type:
      - int
    - defaultValue: None
      description: 'The application type name used to filter

        the applications to query for. This value should not contain the

        application type version.'
      id: application_type_name
      type:
      - str
    - defaultValue: 'False'
      description: 'The flag that specifies whether

        application parameters will be excluded from the result.'
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedApplicationInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedApplicationInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_load_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_load_info(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_application_load_info
  summary: 'Gets load information about a Service Fabric application.


    Returns the load information about the application that was created or

    in the process of being created in the Service Fabric cluster and whose

    name matches the one specified as the parameter. The response includes

    the name, minimum nodes, maximum nodes, the number of nodes the

    application is occupying currently, and application load metric

    information about the application.'
  syntax:
    content: get_application_load_info(application_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationLoadInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationLoadInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_load_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_manifest
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_manifest(application_type_name, application_type_version,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_manifest
  summary: 'Gets the manifest describing an application type.


    The response contains the application manifest XML as a string.'
  syntax:
    content: get_application_manifest(application_type_name, application_type_version,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - description: The version of the application type.
      id: application_type_version
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationTypeManifest or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationTypeManifest
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_manifest
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_name_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_name_info(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_application_name_info
  summary: 'Gets the name of the Service Fabric application for a service.


    Gets the name of the application for the specified service. A 404

    FABRIC_E_SERVICE_DOES_NOT_EXIST error is returned if a service with the

    provided service ID does not exist.'
  syntax:
    content: get_application_name_info(service_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicationNameInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ApplicationNameInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_name_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_type_info_list(application_type_definition_kind_filter=0,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_type_info_list
  summary: 'Gets the list of application types in the Service Fabric cluster.


    Returns the information about the application types that are

    provisioned or in the process of being provisioned in the Service

    Fabric cluster. Each version of an application type is returned as one

    application type. The response includes the name, version, status, and

    other details about the application type. This is a paged query,

    meaning that if not all of the application types fit in a page, one

    page of results is returned as well as a continuation token, which can

    be used to get the next page. For example, if there are 10 application

    types but a page only fits the first three application types, or if max

    results is set to 3, then three is returned. To access the rest of the

    results, retrieve subsequent pages by using the returned continuation

    token in the next query. An empty continuation token is returned if

    there are no subsequent pages.'
  syntax:
    content: get_application_type_info_list(application_type_definition_kind_filter=0,
      exclude_application_parameters=False, continuation_token=None, max_results=0,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '0'
      description: 'Used to filter on

        ApplicationTypeDefinitionKind which is the mechanism used to define a

        Service Fabric application type.

        - Default - Default value, which performs the same function as

        selecting "All". The value is 0.

        - All - Filter that matches input with any

        ApplicationTypeDefinitionKind value. The value is 65535.

        - ServiceFabricApplicationPackage - Filter that matches input with

        ApplicationTypeDefinitionKind value ServiceFabricApplicationPackage.

        The value is 1.

        - Compose - Filter that matches input with

        ApplicationTypeDefinitionKind value Compose. The value is 2.'
      id: application_type_definition_kind_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'The flag that specifies whether

        application parameters will be excluded from the result.'
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedApplicationTypeInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedApplicationTypeInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list_by_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_type_info_list_by_name(application_type_name, application_type_version=None,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_application_type_info_list_by_name
  summary: 'Gets the list of application types in the Service Fabric cluster

    matching exactly the specified name.


    Returns the information about the application types that are

    provisioned or in the process of being provisioned in the Service

    Fabric cluster. These results are of application types whose name match

    exactly the one specified as the parameter, and which comply with the

    given query parameters. All versions of the application type matching

    the application type name are returned, with each version returned as

    one application type. The response includes the name, version, status,

    and other details about the application type. This is a paged query,

    meaning that if not all of the application types fit in a page, one

    page of results is returned as well as a continuation token, which can

    be used to get the next page. For example, if there are 10 application

    types but a page only fits the first three application types, or if max

    results is set to 3, then three is returned. To access the rest of the

    results, retrieve subsequent pages by using the returned continuation

    token in the next query. An empty continuation token is returned if

    there are no subsequent pages.'
  syntax:
    content: get_application_type_info_list_by_name(application_type_name, application_type_version=None,
      exclude_application_parameters=False, continuation_token=None, max_results=0,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The version of the application type.
      id: application_type_version
      type:
      - str
    - defaultValue: 'False'
      description: 'The flag that specifies whether

        application parameters will be excluded from the result.'
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedApplicationTypeInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedApplicationTypeInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list_by_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_application_upgrade(application_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_application_upgrade
  summary: 'Gets details for the latest upgrade performed on this application.


    Returns information about the state of the latest application upgrade

    along with details to aid debugging application health issues.'
  syntax:
    content: get_application_upgrade(application_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'ApplicationUpgradeProgressInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.ApplicationUpgradeProgressInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_applications_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_applications_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_applications_event_list
  summary: 'Gets all Applications-related events.


    The response is list of ApplicationEvent objects.'
  syntax:
    content: get_applications_event_list(start_time_utc, end_time_utc, timeout=60,
      events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ApplicationEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_applications_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_by_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_backup_policy_by_name(backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_backup_policy_by_name
  summary: 'Gets a particular backup policy by name.


    Gets a particular backup policy identified by {backupPolicyName}.'
  syntax:
    content: get_backup_policy_by_name(backup_policy_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the backup policy.
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: BackupPolicyDescription or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.BackupPolicyDescription
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_by_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_backup_policy_list(continuation_token=None, max_results=0, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_backup_policy_list
  summary: 'Gets all the backup policies configured.


    Get a list of all the backup policies configured.'
  syntax:
    content: get_backup_policy_list(continuation_token=None, max_results=0, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedBackupPolicyDescriptionList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedBackupPolicyDescriptionList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backups_from_backup_location
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_backups_from_backup_location(get_backup_by_storage_query_description,
    timeout=60, continuation_token=None, max_results=0, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_backups_from_backup_location
  summary: 'Gets the list of backups available for the specified backed up entity

    at the specified backup location.


    Gets the list of backups available for the specified backed up entity

    (Application, Service or Partition) at the specified backup location

    (FileShare or Azure Blob Storage).'
  syntax:
    content: get_backups_from_backup_location(get_backup_by_storage_query_description,
      timeout=60, continuation_token=None, max_results=0, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Describes the filters

        and backup storage details to be used for enumerating backups.'
      id: get_backup_by_storage_query_description
      isRequired: true
      type:
      - azure.servicefabric.models.GetBackupByStorageQueryDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedBackupInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedBackupInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backups_from_backup_location
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_chaos
  summary: 'Get the status of Chaos.


    Get the status of Chaos indicating whether or not Chaos is running, the

    Chaos parameters used for running Chaos and the status of the Chaos

    Schedule.'
  syntax:
    content: get_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Chaos or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.Chaos
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_events
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_chaos_events(continuation_token=None, start_time_utc=None, end_time_utc=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_chaos_events
  summary: 'Gets the next segment of the Chaos events based on the continuation

    token or the time range.


    To get the next segment of the Chaos events, you can specify the

    ContinuationToken. To get the start of a new segment of Chaos events,

    you can specify the time range

    through StartTimeUtc and EndTimeUtc. You cannot specify both the

    ContinuationToken and the time range in the same call.

    When there are more than 100 Chaos events, the Chaos events are

    returned in multiple segments where a segment contains no more than 100

    Chaos events and to get the next segment you make a call to this API

    with the continuation token.'
  syntax:
    content: get_chaos_events(continuation_token=None, start_time_utc=None, end_time_utc=None,
      max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: None
      description: 'The Windows file time representing the start

        time of the time range for which a Chaos report is to be generated.

        Consult [DateTime.ToFileTimeUtc

        Method]([https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx](https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx))

        for details.'
      id: start_time_utc
      type:
      - str
    - defaultValue: None
      description: 'The Windows file time representing the end time

        of the time range for which a Chaos report is to be generated. Consult

        [DateTime.ToFileTimeUtc

        Method]([https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx](https://msdn.microsoft.com/library/system.datetime.tofiletimeutc(v=vs.110).aspx))

        for details.'
      id: end_time_utc
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ChaosEventsSegment or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ChaosEventsSegment
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_events
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_schedule
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_chaos_schedule(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_chaos_schedule
  summary: 'Get the Chaos Schedule defining when and how to run Chaos.


    Gets the version of the Chaos Schedule in use and the Chaos Schedule

    that defines when and how to run Chaos.'
  syntax:
    content: get_chaos_schedule(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ChaosScheduleDescription or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ChaosScheduleDescription
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_schedule
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_configuration(configuration_api_version, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_cluster_configuration
  summary: 'Get the Service Fabric standalone cluster configuration.


    The cluster configuration contains properties of the cluster that

    include different node types on the cluster,

    security configurations, fault, and upgrade domain topologies, etc.'
  syntax:
    content: get_cluster_configuration(configuration_api_version, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The API version of the Standalone

        cluster json configuration.'
      id: configuration_api_version
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterConfiguration or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterConfiguration
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration_upgrade_status
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_configuration_upgrade_status(timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_cluster_configuration_upgrade_status
  summary: 'Get the cluster configuration upgrade status of a Service Fabric

    standalone cluster.


    Get the cluster configuration upgrade status details of a Service

    Fabric standalone cluster.'
  syntax:
    content: get_cluster_configuration_upgrade_status(timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'ClusterConfigurationUpgradeStatusInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.ClusterConfigurationUpgradeStatusInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration_upgrade_status
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_cluster_event_list
  summary: 'Gets all Cluster-related events.


    The response is list of ClusterEvent objects.'
  syntax:
    content: get_cluster_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
      exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ClusterEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_health(nodes_health_state_filter=0, applications_health_state_filter=0,
    events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_health
  summary: 'Gets the health of a Service Fabric cluster.


    Use EventsHealthStateFilter to filter the collection of health events

    reported on the cluster based on the health state.

    Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter

    to filter the collection of nodes and applications returned based on

    their aggregated health state.'
  syntax:
    content: get_cluster_health(nodes_health_state_filter=0, applications_health_state_filter=0,
      events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '0'
      description: 'Allows filtering of the node health

        state objects returned in the result of cluster health query

        based on their health state. The possible values for this parameter

        include integer value of one of the

        following health states. Only nodes that match the filter are

        returned. All nodes are used to evaluate the aggregated health state.

        If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of nodes

        with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: nodes_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the

        application health state objects returned in the result of cluster

        health

        query based on their health state.

        The possible values for this parameter include integer value obtained

        from members or bitwise operations

        on members of HealthStateFilter enumeration. Only applications that

        match the filter are returned.

        All applications are used to evaluate the aggregated health state. If

        not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of

        applications with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: applications_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: 'False'
      description: 'Indicates whether

        the health statistics should include the fabric:/System application

        health statistics. False by default.

        If IncludeSystemApplicationHealthStatistics is set to true, the health

        statistics include the entities that belong to the fabric:/System

        application.

        Otherwise, the query result includes health statistics only for user

        applications.

        The health statistics must be included in the query result for this

        parameter to be applied.'
      id: include_system_application_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_health_chunk(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_health_chunk
  summary: 'Gets the health of a Service Fabric cluster using health chunks.


    Gets the health of a Service Fabric cluster using health chunks.

    Includes the aggregated health state of the cluster, but none of the

    cluster entities.

    To expand the cluster health and get the health state of all or some of

    the entities, use the POST URI and specify the cluster health chunk

    query description.'
  syntax:
    content: get_cluster_health_chunk(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterHealthChunk or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterHealthChunk
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk_using_policy_and_advanced_filters
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_health_chunk_using_policy_and_advanced_filters(cluster_health_chunk_query_description=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_health_chunk_using_policy_and_advanced_filters
  summary: 'Gets the health of a Service Fabric cluster using health chunks.


    Gets the health of a Service Fabric cluster using health chunks. The

    health evaluation is done based on the input cluster health chunk query

    description.

    The query description allows users to specify health policies for

    evaluating the cluster and its children.

    Users can specify very flexible filters to select which cluster

    entities to return. The selection can be done based on the entities

    health state and based on the hierarchy.

    The query can return multi-level children of the entities based on the

    specified filters. For example, it can return one application with a

    specified name, and for this application, return

    only services that are in Error or Warning, and all partitions and

    replicas for one of these services.'
  syntax:
    content: get_cluster_health_chunk_using_policy_and_advanced_filters(cluster_health_chunk_query_description=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'Describes the cluster

        and application health policies used to evaluate the cluster health

        and the filters to select which cluster entities to be returned.

        If the cluster health policy is present, it is used to evaluate the

        cluster events and the cluster nodes. If not present, the health

        evaluation uses the cluster health policy defined in the cluster

        manifest or the default cluster health policy.

        By default, each application is evaluated using its specific

        application health policy, defined in the application manifest, or the

        default health policy, if no policy is defined in manifest.

        If the application health policy map is specified, and it has an entry

        for an application, the specified application health policy

        is used to evaluate the application health.

        Users can specify very flexible filters to select which cluster

        entities to include in response. The selection can be done based on

        the entities health state and based on the hierarchy.

        The query can return multi-level children of the entities based on the

        specified filters. For example, it can return one application with a

        specified name, and for this application, return

        only services that are in Error or Warning, and all partitions and

        replicas for one of these services.'
      id: cluster_health_chunk_query_description
      type:
      - azure.servicefabric.models.ClusterHealthChunkQueryDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterHealthChunk or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterHealthChunk
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk_using_policy_and_advanced_filters
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_health_using_policy(nodes_health_state_filter=0, applications_health_state_filter=0,
    events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
    timeout=60, application_health_policy_map=None, cluster_health_policy=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_cluster_health_using_policy
  summary: 'Gets the health of a Service Fabric cluster using the specified policy.


    Use EventsHealthStateFilter to filter the collection of health events

    reported on the cluster based on the health state.

    Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter

    to filter the collection of nodes and applications returned based on

    their aggregated health state.

    Use ClusterHealthPolicies to override the health policies used to

    evaluate the health.'
  syntax:
    content: get_cluster_health_using_policy(nodes_health_state_filter=0, applications_health_state_filter=0,
      events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
      timeout=60, application_health_policy_map=None, cluster_health_policy=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '0'
      description: 'Allows filtering of the node health

        state objects returned in the result of cluster health query

        based on their health state. The possible values for this parameter

        include integer value of one of the

        following health states. Only nodes that match the filter are

        returned. All nodes are used to evaluate the aggregated health state.

        If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of nodes

        with HealthState value of OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: nodes_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the

        application health state objects returned in the result of cluster

        health

        query based on their health state.

        The possible values for this parameter include integer value obtained

        from members or bitwise operations

        on members of HealthStateFilter enumeration. Only applications that

        match the filter are returned.

        All applications are used to evaluate the aggregated health state. If

        not specified, all entries are returned.

        The state values are flag-based enumeration, so the value could be a

        combination of these values obtained using bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of

        applications with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: applications_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: 'False'
      description: 'Indicates whether

        the health statistics should include the fabric:/System application

        health statistics. False by default.

        If IncludeSystemApplicationHealthStatistics is set to true, the health

        statistics include the entities that belong to the fabric:/System

        application.

        Otherwise, the query result includes health statistics only for user

        applications.

        The health statistics must be included in the query result for this

        parameter to be applied.'
      id: include_system_application_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'Defines a map that contains

        specific application health policies for different applications.

        Each entry specifies as key the application name and as value an

        ApplicationHealthPolicy used to evaluate the application health.

        If an application is not specified in the map, the application health

        evaluation uses the ApplicationHealthPolicy found in its application

        manifest or the default application health policy (if no health policy

        is defined in the manifest).

        The map is empty by default.'
      id: application_health_policy_map
      type:
      - list[azure.servicefabric.models.ApplicationHealthPolicyMapItem]
    - defaultValue: None
      description: 'Defines a health policy used to evaluate

        the health of the cluster or of a cluster node.'
      id: cluster_health_policy
      type:
      - azure.servicefabric.models.ClusterHealthPolicy
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_load
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_load(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_load
  summary: 'Gets the load of a Service Fabric cluster.


    Retrieves the load information of a Service Fabric cluster for all the

    metrics that have load or capacity defined.'
  syntax:
    content: get_cluster_load(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterLoadInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterLoadInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_load
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_manifest
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_manifest(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_manifest
  summary: 'Get the Service Fabric cluster manifest.


    Get the Service Fabric cluster manifest. The cluster manifest contains

    properties of the cluster that include different node types on the

    cluster,

    security configurations, fault, and upgrade domain topologies, etc.

    These properties are specified as part of the ClusterConfig.JSON file

    while deploying a stand-alone cluster. However, most of the information

    in the cluster manifest

    is generated internally by service fabric during cluster deployment in

    other deployment scenarios (e.g. when using Azure portal).

    The contents of the cluster manifest are for informational purposes

    only and users are not expected to take a dependency on the format of

    the file contents or its interpretation.'
  syntax:
    content: get_cluster_manifest(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterManifest or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterManifest
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_manifest
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_upgrade_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_upgrade_progress(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_upgrade_progress
  summary: 'Gets the progress of the current cluster upgrade.


    Gets the current progress of the ongoing cluster upgrade. If no upgrade

    is currently in progress, get the last state of the previous cluster

    upgrade.'
  syntax:
    content: get_cluster_upgrade_progress(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterUpgradeProgressObject or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterUpgradeProgressObject
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_upgrade_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_version
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_cluster_version(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_cluster_version
  summary: 'Get the current Service Fabric cluster version.


    If a cluster upgrade is happening, then this API will return the lowest

    (older) version of the current and target cluster runtime versions.'
  syntax:
    content: get_cluster_version(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ClusterVersion or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ClusterVersion
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_version
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_compose_deployment_status(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_compose_deployment_status
  summary: 'Gets information about a Service Fabric compose deployment.


    Returns the status of the compose deployment that was created or in the

    process of being created in the Service Fabric cluster and whose name

    matches the one specified as the parameter. The response includes the

    name, status, and other details about the deployment.'
  syntax:
    content: get_compose_deployment_status(deployment_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ComposeDeploymentStatusInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ComposeDeploymentStatusInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_compose_deployment_status_list(continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_compose_deployment_status_list
  summary: 'Gets the list of compose deployments created in the Service Fabric

    cluster.


    Gets the status about the compose deployments that were created or in

    the process of being created in the Service Fabric cluster. The

    response includes the name, status, and other details about the compose

    deployments. If the list of deployments do not fit in a page, one page

    of results is returned as well as a continuation token, which can be

    used to get the next page.'
  syntax:
    content: get_compose_deployment_status_list(continuation_token=None, max_results=0,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedComposeDeploymentStatusInfoList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedComposeDeploymentStatusInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_upgrade_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_compose_deployment_upgrade_progress(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_compose_deployment_upgrade_progress
  summary: 'Gets details for the latest upgrade performed on this Service Fabric

    compose deployment.


    Returns the information about the state of the compose deployment

    upgrade along with details to aid debugging application health issues.'
  syntax:
    content: get_compose_deployment_upgrade_progress(deployment_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'ComposeDeploymentUpgradeProgressInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.ComposeDeploymentUpgradeProgressInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_upgrade_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_configuration_overrides
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_configuration_overrides(node_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_configuration_overrides
  summary: 'Gets the list of configuration overrides on the specified node.


    This api allows getting all existing configuration overrides on the

    specified node.'
  syntax:
    content: get_configuration_overrides(node_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ConfigParameterOverride]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_configuration_overrides
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_container_logs_deployed_on_node
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_container_logs_deployed_on_node(node_name, application_id, service_manifest_name,
    code_package_name, tail=None, previous=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_container_logs_deployed_on_node
  summary: 'Gets the container logs for container deployed on a Service Fabric

    node.


    Gets the container logs for container deployed on a Service Fabric node

    for the given code package.'
  syntax:
    content: get_container_logs_deployed_on_node(node_name, application_id, service_manifest_name,
      code_package_name, tail=None, previous=False, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The name of a service manifest

        registered as part of an application type in a Service Fabric cluster.'
      id: service_manifest_name
      isRequired: true
      type:
      - str
    - description: 'The name of code package specified in

        service manifest registered as part of an application type in a

        Service Fabric cluster.'
      id: code_package_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Number of lines to show from the end of the logs. Default

        is 100. ''all'' to show the complete logs.'
      id: tail
      type:
      - str
    - defaultValue: 'False'
      description: 'Specifies whether to get container logs from

        exited/dead containers of the code package instance.'
      id: previous
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ContainerLogs or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ContainerLogs
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_container_logs_deployed_on_node
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_containers_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_containers_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_containers_event_list
  summary: 'Gets all Containers-related events.


    The response is list of ContainerInstanceEvent objects.'
  syntax:
    content: get_containers_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
      exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ContainerInstanceEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_containers_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_correlated_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_correlated_event_list(event_instance_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_correlated_event_list
  summary: 'Gets all correlated events for a given event.


    The response is list of FabricEvents.'
  syntax:
    content: get_correlated_event_list(event_instance_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The EventInstanceId.
      id: event_instance_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.FabricEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_correlated_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_data_loss_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_data_loss_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_data_loss_progress
  summary: 'Gets the progress of a partition data loss operation started using the

    StartDataLoss API.


    Gets the progress of a data loss operation started with StartDataLoss,

    using the OperationId.'
  syntax:
    content: get_data_loss_progress(service_id, partition_id, operation_id, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionDataLossProgress or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionDataLossProgress
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_data_loss_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_application_health(node_name, application_id, events_health_state_filter=0,
    deployed_service_packages_health_state_filter=0, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_application_health
  summary: 'Gets the information about health of an application deployed on a

    Service Fabric node.


    Gets the information about health of an application deployed on a

    Service Fabric node. Use EventsHealthStateFilter to optionally filter

    for the collection of HealthEvent objects reported on the deployed

    application based on health state. Use

    DeployedServicePackagesHealthStateFilter to optionally filter for

    DeployedServicePackageHealth children based on health state.'
  syntax:
    content: get_deployed_application_health(node_name, application_id, events_health_state_filter=0,
      deployed_service_packages_health_state_filter=0, exclude_health_statistics=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering

        of the deployed service package health state objects returned in the

        result of deployed application health query based on their health

        state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only deployed service packages that match the filter are returned. All

        deployed service packages are used to evaluate the aggregated health

        state of the deployed application.

        If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value can be a

        combination of these values, obtained using the bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of service

        packages with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: deployed_service_packages_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeployedApplicationHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.DeployedApplicationHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_application_health_using_policy(node_name, application_id, events_health_state_filter=0,
    deployed_service_packages_health_state_filter=0, application_health_policy=None,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_application_health_using_policy
  summary: 'Gets the information about health of an application deployed on a

    Service Fabric node. using the specified policy.


    Gets the information about health of an application deployed on a

    Service Fabric node using the specified policy. Use

    EventsHealthStateFilter to optionally filter for the collection of

    HealthEvent objects reported on the deployed application based on

    health state. Use DeployedServicePackagesHealthStateFilter to

    optionally filter for DeployedServicePackageHealth children based on

    health state. Use ApplicationHealthPolicy to optionally override the

    health policies used to evaluate the health. This API only uses

    ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy. The rest

    of the fields are ignored while evaluating the health of the deployed

    application.'
  syntax:
    content: get_deployed_application_health_using_policy(node_name, application_id,
      events_health_state_filter=0, deployed_service_packages_health_state_filter=0,
      application_health_policy=None, exclude_health_statistics=False, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering

        of the deployed service package health state objects returned in the

        result of deployed application health query based on their health

        state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only deployed service packages that match the filter are returned. All

        deployed service packages are used to evaluate the aggregated health

        state of the deployed application.

        If not specified, all entries are returned.

        The state values are flag-based enumeration, so the value can be a

        combination of these values, obtained using the bitwise ''OR'' operator.

        For example, if the provided value is 6 then health state of service

        packages with HealthState value of OK (2) and Warning (4) are

        returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: deployed_service_packages_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeployedApplicationHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.DeployedApplicationHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_application_info(node_name, application_id, timeout=60, include_health_state=False,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_application_info
  summary: 'Gets the information about an application deployed on a Service Fabric

    node.


    This query returns system application information if the application ID

    provided is for system application. Results encompass deployed

    applications in active, activating, and downloading states. This query

    requires that the node name corresponds to a node on the cluster. The

    query fails if the provided node name does not point to any active

    Service Fabric nodes on the cluster.'
  syntax:
    content: get_deployed_application_info(node_name, application_id, timeout=60,
      include_health_state=False, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Include the health state of an entity.

        If this parameter is false or not specified, then the health state

        returned is "Unknown".

        When set to true, the query goes in parallel to the node and the

        health system service before the results are merged.

        As a result, the query is more expensive and may take a longer time.'
      id: include_health_state
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeployedApplicationInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.DeployedApplicationInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_application_info_list(node_name, timeout=60, include_health_state=False,
    continuation_token=None, max_results=0, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_application_info_list
  summary: 'Gets the list of applications deployed on a Service Fabric node.


    Gets the list of applications deployed on a Service Fabric node. The

    results do not include information about deployed system applications

    unless explicitly queried for by ID. Results encompass deployed

    applications in active, activating, and downloading states. This query

    requires that the node name corresponds to a node on the cluster. The

    query fails if the provided node name does not point to any active

    Service Fabric nodes on the cluster.'
  syntax:
    content: get_deployed_application_info_list(node_name, timeout=60, include_health_state=False,
      continuation_token=None, max_results=0, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Include the health state of an entity.

        If this parameter is false or not specified, then the health state

        returned is "Unknown".

        When set to true, the query goes in parallel to the node and the

        health system service before the results are merged.

        As a result, the query is more expensive and may take a longer time.'
      id: include_health_state
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedDeployedApplicationInfoList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedDeployedApplicationInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_code_package_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_code_package_info_list(node_name, application_id, service_manifest_name=None,
    code_package_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_code_package_info_list
  summary: 'Gets the list of code packages deployed on a Service Fabric node.


    Gets the list of code packages deployed on a Service Fabric node for

    the given application.'
  syntax:
    content: get_deployed_code_package_info_list(node_name, application_id, service_manifest_name=None,
      code_package_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The name of a service manifest

        registered as part of an application type in a Service Fabric cluster.'
      id: service_manifest_name
      type:
      - str
    - defaultValue: None
      description: 'The name of code package specified in

        service manifest registered as part of an application type in a

        Service Fabric cluster.'
      id: code_package_name
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedCodePackageInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_code_package_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_package_health(node_name, application_id, service_package_name,
    events_health_state_filter=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_package_health
  summary: 'Gets the information about health of a service package for a specific

    application deployed for a Service Fabric node and application.


    Gets the information about health of a service package for a specific

    application deployed on a Service Fabric node. Use

    EventsHealthStateFilter to optionally filter for the collection of

    HealthEvent objects reported on the deployed service package based on

    health state.'
  syntax:
    content: get_deployed_service_package_health(node_name, application_id, service_package_name,
      events_health_state_filter=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: The name of the service package.
      id: service_package_name
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeployedServicePackageHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.DeployedServicePackageHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_package_health_using_policy(node_name, application_id,
    service_package_name, events_health_state_filter=0, application_health_policy=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_package_health_using_policy
  summary: 'Gets the information about health of service package for a specific

    application deployed on a Service Fabric node using the specified

    policy.


    Gets the information about health of a service package for a specific

    application deployed on a Service Fabric node. using the specified

    policy. Use EventsHealthStateFilter to optionally filter for the

    collection of HealthEvent objects reported on the deployed service

    package based on health state. Use ApplicationHealthPolicy to

    optionally override the health policies used to evaluate the health.

    This API only uses ''ConsiderWarningAsError'' field of the

    ApplicationHealthPolicy. The rest of the fields are ignored while

    evaluating the health of the deployed service package.'
  syntax:
    content: get_deployed_service_package_health_using_policy(node_name, application_id,
      service_package_name, events_health_state_filter=0, application_health_policy=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: The name of the service package.
      id: service_package_name
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: DeployedServicePackageHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.DeployedServicePackageHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_package_info_list(node_name, application_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_package_info_list
  summary: 'Gets the list of service packages deployed on a Service Fabric node.


    Returns the information about the service packages deployed on a

    Service Fabric node for the given application.'
  syntax:
    content: get_deployed_service_package_info_list(node_name, application_id, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedServicePackageInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list_by_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_package_info_list_by_name(node_name, application_id,
    service_package_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_package_info_list_by_name
  summary: 'Gets the list of service packages deployed on a Service Fabric node

    matching exactly the specified name.


    Returns the information about the service packages deployed on a

    Service Fabric node for the given application. These results are of

    service packages whose name match exactly the service package name

    specified as the parameter.'
  syntax:
    content: get_deployed_service_package_info_list_by_name(node_name, application_id,
      service_package_name, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: The name of the service package.
      id: service_package_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedServicePackageInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list_by_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_replica_detail_info(node_name, partition_id, replica_id,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_replica_detail_info
  summary: 'Gets the details of replica deployed on a Service Fabric node.


    Gets the details of the replica deployed on a Service Fabric node. The

    information includes service kind, service name, current service

    operation, current service operation start date time, partition ID,

    replica/instance ID, reported load, and other information.'
  syntax:
    content: get_deployed_service_replica_detail_info(node_name, partition_id, replica_id,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'DeployedServiceReplicaDetailInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.DeployedServiceReplicaDetailInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info_by_partition_id
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_replica_detail_info_by_partition_id(node_name, partition_id,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_replica_detail_info_by_partition_id
  summary: 'Gets the details of replica deployed on a Service Fabric node.


    Gets the details of the replica deployed on a Service Fabric node. The

    information includes service kind, service name, current service

    operation, current service operation start date time, partition ID,

    replica/instance ID, reported load, and other information.'
  syntax:
    content: get_deployed_service_replica_detail_info_by_partition_id(node_name, partition_id,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'DeployedServiceReplicaDetailInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.DeployedServiceReplicaDetailInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info_by_partition_id
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_replica_info_list(node_name, application_id, partition_id=None,
    service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_replica_info_list
  summary: 'Gets the list of replicas deployed on a Service Fabric node.


    Gets the list containing the information about replicas deployed on a

    Service Fabric node. The information include partition ID, replica ID,

    status of the replica, name of the service, name of the service type,

    and other information. Use PartitionId or ServiceManifestName query

    parameters to return information about the deployed replicas matching

    the specified values for those parameters.'
  syntax:
    content: get_deployed_service_replica_info_list(node_name, application_id, partition_id=None,
      service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: 'The name of a service manifest

        registered as part of an application type in a Service Fabric cluster.'
      id: service_manifest_name
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedServiceReplicaInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_by_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_type_info_by_name(node_name, application_id, service_type_name,
    service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_type_info_by_name
  summary: 'Gets the information about a specified service type of the application

    deployed on a node in a Service Fabric cluster.


    Gets the list containing the information about a specific service type

    from the applications deployed on a node in a Service Fabric cluster.

    The response includes the name of the service type, its registration

    status, the code package that registered it and activation ID of the

    service package. Each entry represents one activation of a service

    type, differentiated by the activation ID.'
  syntax:
    content: get_deployed_service_type_info_by_name(node_name, application_id, service_type_name,
      service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Specifies the name of a Service Fabric

        service type.'
      id: service_type_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The name of the service manifest to

        filter the list of deployed service type information. If specified,

        the response will only contain the information about service types

        that are defined in this service manifest.'
      id: service_manifest_name
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedServiceTypeInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_by_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_deployed_service_type_info_list(node_name, application_id, service_manifest_name=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_deployed_service_type_info_list
  summary: 'Gets the list containing the information about service types from the

    applications deployed on a node in a Service Fabric cluster.


    Gets the list containing the information about service types from the

    applications deployed on a node in a Service Fabric cluster. The

    response includes the name of the service type, its registration

    status, the code package that registered it and activation ID of the

    service package.'
  syntax:
    content: get_deployed_service_type_info_list(node_name, application_id, service_manifest_name=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The name of the service manifest to

        filter the list of deployed service type information. If specified,

        the response will only contain the information about service types

        that are defined in this service manifest.'
      id: service_manifest_name
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.DeployedServiceTypeInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_fault_operation_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_fault_operation_list(type_filter=65535, state_filter=65535, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_fault_operation_list
  summary: 'Gets a list of user-induced fault operations filtered by provided

    input.


    Gets the list of user-induced fault operations filtered by provided

    input.'
  syntax:
    content: get_fault_operation_list(type_filter=65535, state_filter=65535, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '65535'
      description: 'Used to filter on OperationType for user-induced

        operations.

        - 65535 - select all

        - 1 - select PartitionDataLoss.

        - 2 - select PartitionQuorumLoss.

        - 4 - select PartitionRestart.

        - 8 - select NodeTransition.'
      id: type_filter
      type:
      - int
    - defaultValue: '65535'
      description: 'Used to filter on OperationState''s for

        user-induced operations.

        - 65535 - select All

        - 1 - select Running

        - 2 - select RollingBack

        - 8 - select Completed

        - 16 - select Faulted

        - 32 - select Cancelled

        - 64 - select ForceCancelled'
      id: state_filter
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.OperationStatus]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_fault_operation_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_content
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_content(content_path, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_image_store_content
  summary: 'Gets the image store content information.


    Returns the information about the image store content at the specified

    contentPath. The contentPath is relative to the root of the image

    store.'
  syntax:
    content: get_image_store_content(content_path, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ImageStoreContent or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ImageStoreContent
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_content
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_folder_size
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_folder_size(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_image_store_folder_size
  summary: 'Get the size of a folder in image store.


    Gets the total size of file under a image store folder, specified by

    contentPath. The contentPath is relative to the root of the image

    store.'
  syntax:
    content: get_image_store_folder_size(content_path, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: FolderSizeInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.FolderSizeInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_folder_size
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_info(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_image_store_info
  summary: 'Gets the overall ImageStore information.


    Returns information about the primary ImageStore replica, such as disk

    capacity and available disk space at the node it is on, and several

    categories of the ImageStore''s file system usage.'
  syntax:
    content: get_image_store_info(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ImageStoreInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ImageStoreInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_content
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_root_content(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_image_store_root_content
  summary: 'Gets the content information at the root of the image store.


    Returns the information about the image store content at the root of

    the image store.'
  syntax:
    content: get_image_store_root_content(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ImageStoreContent or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ImageStoreContent
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_content
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_folder_size
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_root_folder_size(timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_image_store_root_folder_size
  summary: 'Get the folder size at the root of the image store.


    Returns the total size of files at the root and children folders in

    image store.'
  syntax:
    content: get_image_store_root_folder_size(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: FolderSizeInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.FolderSizeInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_folder_size
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_id
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_upload_session_by_id(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_image_store_upload_session_by_id
  summary: 'Get the image store upload session by ID.


    Gets the image store upload session identified by the given ID. User

    can query the upload session at any time during uploading. .'
  syntax:
    content: get_image_store_upload_session_by_id(session_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'A GUID generated by the user for a file uploading.

        It identifies an image store upload session which keeps track of all

        file chunks until it is committed.'
      id: session_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: UploadSession or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.UploadSession
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_id
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_path
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_image_store_upload_session_by_path(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_image_store_upload_session_by_path
  summary: 'Get the image store upload session by relative path.


    Gets the image store upload session associated with the given image

    store relative path. User can query the upload session at any time

    during uploading. .'
  syntax:
    content: get_image_store_upload_session_by_path(content_path, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: UploadSession or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.UploadSession
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_path
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_name_exists_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_name_exists_info(name_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_name_exists_info
  summary: 'Returns whether the Service Fabric name exists.


    Returns whether the specified Service Fabric name exists.'
  syntax:
    content: get_name_exists_info(name_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_name_exists_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_event_list(node_name, start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_node_event_list
  summary: 'Gets a Node-related events.


    The response is list of NodeEvent objects.'
  syntax:
    content: get_node_event_list(node_name, start_time_utc, end_time_utc, timeout=60,
      events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.NodeEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_health(node_name, events_health_state_filter=0, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_node_health
  summary: 'Gets the health of a Service Fabric node.


    Gets the health of a Service Fabric node. Use EventsHealthStateFilter

    to filter the collection of health events reported on the node based on

    the health state. If the node that you specify by name does not exist

    in the health store, this returns an error.'
  syntax:
    content: get_node_health(node_name, events_health_state_filter=0, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.NodeHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_health_using_policy(node_name, events_health_state_filter=0, cluster_health_policy=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_node_health_using_policy
  summary: 'Gets the health of a Service Fabric node, by using the specified health

    policy.


    Gets the health of a Service Fabric node. Use EventsHealthStateFilter

    to filter the collection of health events reported on the node based on

    the health state. Use ClusterHealthPolicy in the POST body to override

    the health policies used to evaluate the health. If the node that you

    specify by name does not exist in the health store, this returns an

    error.'
  syntax:
    content: get_node_health_using_policy(node_name, events_health_state_filter=0,
      cluster_health_policy=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used to

        evaluate the health of a cluster or node. If not present, the health

        evaluation uses the health policy from cluster manifest or the default

        health policy.'
      id: cluster_health_policy
      type:
      - azure.servicefabric.models.ClusterHealthPolicy
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.NodeHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_info(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_node_info
  summary: 'Gets the information about a specific node in the Service Fabric

    cluster.


    The response includes the name, status, ID, health, uptime, and other

    details about the node.'
  syntax:
    content: get_node_info(node_name, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.NodeInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_info_list(continuation_token=None, node_status_filter='default',
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_node_info_list
  summary: 'Gets the list of nodes in the Service Fabric cluster.


    The response includes the name, status, ID, health, uptime, and other

    details about the nodes.'
  syntax:
    content: get_node_info_list(continuation_token=None, node_status_filter='default',
      max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: default
      description: 'Allows filtering the nodes based on the

        NodeStatus. Only the nodes that are matching the specified filter

        value will be returned. The filter value can be one of the following.

        Possible values include: ''default'', ''all'', ''up'', ''down'', ''enabling'',

        ''disabling'', ''disabled'', ''unknown'', ''removed'''
      id: node_status_filter
      type:
      - str
      - azure.servicefabric.models.NodeStatusFilter
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedNodeInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedNodeInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_load_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_load_info(node_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_node_load_info
  summary: 'Gets the load information of a Service Fabric node.


    Retrieves the load information of a Service Fabric node for all the

    metrics that have load or capacity defined.'
  syntax:
    content: get_node_load_info(node_name, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeLoadInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.NodeLoadInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_load_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_transition_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_node_transition_progress(node_name, operation_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_node_transition_progress
  summary: 'Gets the progress of an operation started using StartNodeTransition.


    Gets the progress of an operation started with StartNodeTransition

    using the provided OperationId.'
  syntax:
    content: get_node_transition_progress(node_name, operation_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeTransitionProgress or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.NodeTransitionProgress
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_transition_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_nodes_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_nodes_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_nodes_event_list
  summary: 'Gets all Nodes-related Events.


    The response is list of NodeEvent objects.'
  syntax:
    content: get_nodes_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
      exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.NodeEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_nodes_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_configuration_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_backup_configuration_info(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partition_backup_configuration_info
  summary: 'Gets the partition backup configuration information.


    Gets the Service Fabric Backup configuration information for the

    specified partition.'
  syntax:
    content: get_partition_backup_configuration_info(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PartitionBackupConfigurationInfo or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PartitionBackupConfigurationInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_configuration_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_backup_list(partition_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_backup_list
  summary: 'Gets the list of backups available for the specified partition.


    Returns a list of backups available for the specified partition. The

    server enumerates all the backups available in the backup store

    configured in the backup policy. It also allows filtering of the result

    based on start and end datetime or just fetching the latest available

    backup for the partition.'
  syntax:
    content: get_partition_backup_list(partition_id, timeout=60, latest=False, start_date_time_filter=None,
      end_date_time_filter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Specifies whether to get only the most recent backup

        available for a partition for the specified time range.'
      id: latest
      type:
      - bool
    - defaultValue: None
      description: 'Specify the start date time from which

        to enumerate backups, in datetime format. The date time must be

        specified in ISO8601 format. This is an optional parameter. If not

        specified, all backups from the beginning are enumerated.'
      id: start_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: 'Specify the end date time till which to

        enumerate backups, in datetime format. The date time must be specified

        in ISO8601 format. This is an optional parameter. If not specified,

        enumeration is done till the most recent backup.'
      id: end_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedBackupInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedBackupInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_backup_progress(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partition_backup_progress
  summary: 'Gets details for the latest backup triggered for this partition.


    Returns information about the state of the latest backup along with

    details or failure reason in case of completion.'
  syntax:
    content: get_partition_backup_progress(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: BackupProgressInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.BackupProgressInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_event_list(partition_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_event_list
  summary: 'Gets a Partition-related events.


    The response is list of PartitionEvent objects.'
  syntax:
    content: get_partition_event_list(partition_id, start_time_utc, end_time_utc,
      timeout=60, events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.PartitionEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_health(partition_id, events_health_state_filter=0, replicas_health_state_filter=0,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_health
  summary: 'Gets the health of the specified Service Fabric partition.


    Use EventsHealthStateFilter to filter the collection of health events

    reported on the service based on the health state.

    Use ReplicasHealthStateFilter to filter the collection of

    ReplicaHealthState objects on the partition.

    If you specify a partition that does not exist in the health store,

    this request returns an error.'
  syntax:
    content: get_partition_health(partition_id, events_health_state_filter=0, replicas_health_state_filter=0,
      exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering the collection

        of ReplicaHealthState objects on the partition. The value can be

        obtained from members or bitwise operations on members of

        HealthStateFilter. Only replicas that match the filter will be

        returned. All replicas will be used to evaluate the aggregated health

        state. If not specified, all entries will be returned.The state values

        are flag-based enumeration, so the value could be a combination of

        these values obtained using bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) will be returned. The possible values for this

        parameter include integer value of one of the following health states.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: replicas_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_health_using_policy(partition_id, events_health_state_filter=0,
    replicas_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_health_using_policy
  summary: 'Gets the health of the specified Service Fabric partition, by using the

    specified health policy.


    Gets the health information of the specified partition.

    If the application health policy is specified, the health evaluation

    uses it to get the aggregated health state.

    If the policy is not specified, the health evaluation uses the

    application health policy defined in the application manifest, or the

    default health policy, if no policy is defined in the manifest.

    Use EventsHealthStateFilter to filter the collection of health events

    reported on the partition based on the health state.

    Use ReplicasHealthStateFilter to filter the collection of

    ReplicaHealthState objects on the partition. Use

    ApplicationHealthPolicy in the POST body to override the health

    policies used to evaluate the health.

    If you specify a partition that does not exist in the health store,

    this request returns an error.'
  syntax:
    content: get_partition_health_using_policy(partition_id, events_health_state_filter=0,
      replicas_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering the collection

        of ReplicaHealthState objects on the partition. The value can be

        obtained from members or bitwise operations on members of

        HealthStateFilter. Only replicas that match the filter will be

        returned. All replicas will be used to evaluate the aggregated health

        state. If not specified, all entries will be returned.The state values

        are flag-based enumeration, so the value could be a combination of

        these values obtained using bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) will be returned. The possible values for this

        parameter include integer value of one of the following health states.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: replicas_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_info(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_partition_info
  summary: 'Gets the information about a Service Fabric partition.


    Gets the information about the specified partition. The response

    includes the partition ID, partitioning scheme information, keys

    supported by the partition, status, health, and other details about the

    partition.'
  syntax:
    content: get_partition_info(partition_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServicePartitionInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServicePartitionInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_info_list(service_id, continuation_token=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partition_info_list
  summary: 'Gets the list of partitions of a Service Fabric service.


    The response includes the partition ID, partitioning scheme

    information, keys supported by the partition, status, health, and other

    details about the partition.'
  syntax:
    content: get_partition_info_list(service_id, continuation_token=None, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedServicePartitionInfoList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedServicePartitionInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_load_information
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_load_information(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partition_load_information
  summary: 'Gets the load information of the specified Service Fabric partition.


    Returns information about the load of a specified partition.

    The response includes a list of load reports for a Service Fabric

    partition.

    Each report includes the load metric name, value, and last reported

    time in UTC.'
  syntax:
    content: get_partition_load_information(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionLoadInformation or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionLoadInformation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_load_information
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replica_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_replica_event_list(partition_id, replica_id, start_time_utc,
    end_time_utc, timeout=60, events_types_filter=None, exclude_analysis_events=None,
    skip_correlation_lookup=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_replica_event_list
  summary: 'Gets a Partition Replica-related events.


    The response is list of ReplicaEvent objects.'
  syntax:
    content: get_partition_replica_event_list(partition_id, replica_id, start_time_utc,
      end_time_utc, timeout=60, events_types_filter=None, exclude_analysis_events=None,
      skip_correlation_lookup=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ReplicaEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replica_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replicas_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_replicas_event_list(partition_id, start_time_utc, end_time_utc,
    timeout=60, events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_replicas_event_list
  summary: 'Gets all Replicas-related events for a Partition.


    The response is list of ReplicaEvent objects.'
  syntax:
    content: get_partition_replicas_event_list(partition_id, start_time_utc, end_time_utc,
      timeout=60, events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ReplicaEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replicas_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restart_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_restart_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_partition_restart_progress
  summary: 'Gets the progress of a PartitionRestart operation started using

    StartPartitionRestart.


    Gets the progress of a PartitionRestart started with

    StartPartitionRestart using the provided OperationId.'
  syntax:
    content: get_partition_restart_progress(service_id, partition_id, operation_id,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionRestartProgress or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionRestartProgress
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restart_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restore_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partition_restore_progress(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partition_restore_progress
  summary: 'Gets details for the latest restore operation triggered for this

    partition.


    Returns information about the state of the latest restore operation

    along with details or failure reason in case of completion.'
  syntax:
    content: get_partition_restore_progress(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RestoreProgressInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RestoreProgressInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restore_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partitions_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_partitions_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_partitions_event_list
  summary: 'Gets all Partitions-related events.


    The response is list of PartitionEvent objects.'
  syntax:
    content: get_partitions_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
      exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.PartitionEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partitions_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_property_info(name_id, property_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_property_info
  summary: 'Gets the specified Service Fabric property.


    Gets the specified Service Fabric property under a given name. This

    will always return both value and metadata.'
  syntax:
    content: get_property_info(name_id, property_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - description: Specifies the name of the property to get.
      id: property_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PropertyInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PropertyInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_property_info_list(name_id, include_values=False, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_property_info_list
  summary: 'Gets information on all Service Fabric properties under a given name.


    A Service Fabric name can have one or more named properties that store

    custom information. This operation gets the information about these

    properties in a paged list. The information includes name, value, and

    metadata about each of the properties.'
  syntax:
    content: get_property_info_list(name_id, include_values=False, continuation_token=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Allows specifying whether to include the values

        of the properties returned. True if values should be returned with the

        metadata; False to return only property metadata.'
      id: include_values
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedPropertyInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedPropertyInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_code_version_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_provisioned_fabric_code_version_info_list(code_version=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_provisioned_fabric_code_version_info_list
  summary: 'Gets a list of fabric code versions that are provisioned in a Service

    Fabric cluster.


    Gets a list of information about fabric code versions that are

    provisioned in the cluster. The parameter CodeVersion can be used to

    optionally filter the output to only that particular version.'
  syntax:
    content: get_provisioned_fabric_code_version_info_list(code_version=None, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: The product version of Service Fabric.
      id: code_version
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.FabricCodeVersionInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_code_version_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_config_version_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_provisioned_fabric_config_version_info_list(config_version=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_provisioned_fabric_config_version_info_list
  summary: 'Gets a list of fabric config versions that are provisioned in a Service

    Fabric cluster.


    Gets a list of information about fabric config versions that are

    provisioned in the cluster. The parameter ConfigVersion can be used to

    optionally filter the output to only that particular version.'
  syntax:
    content: get_provisioned_fabric_config_version_info_list(config_version=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: The config version of Service Fabric.
      id: config_version
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.FabricConfigVersionInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_config_version_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_quorum_loss_progress
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_quorum_loss_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_quorum_loss_progress
  summary: 'Gets the progress of a quorum loss operation on a partition started

    using the StartQuorumLoss API.


    Gets the progress of a quorum loss operation started with

    StartQuorumLoss, using the provided OperationId.'
  syntax:
    content: get_quorum_loss_progress(service_id, partition_id, operation_id, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PartitionQuorumLossProgress or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PartitionQuorumLossProgress
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_quorum_loss_progress
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_repair_task_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_repair_task_list(task_id_filter=None, state_filter=None, executor_filter=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_repair_task_list
  summary: 'Gets a list of repair tasks matching the given filters.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: get_repair_task_list(task_id_filter=None, state_filter=None, executor_filter=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: The repair task ID prefix to be matched.
      id: task_id_filter
      type:
      - str
    - defaultValue: None
      description: 'A bitwise-OR of the following values, specifying

        which task states should be included in the result list.

        - 1 - Created

        - 2 - Claimed

        - 4 - Preparing

        - 8 - Approved

        - 16 - Executing

        - 32 - Restoring

        - 64 - Completed'
      id: state_filter
      type:
      - int
    - defaultValue: None
      description: 'The name of the repair executor whose claimed

        tasks should be included in the list.'
      id: executor_filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.RepairTask]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_repair_task_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_replica_health(partition_id, replica_id, events_health_state_filter=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_replica_health
  summary: 'Gets the health of a Service Fabric stateful service replica or

    stateless service instance.


    Gets the health of a Service Fabric replica.

    Use EventsHealthStateFilter to filter the collection of health events

    reported on the replica based on the health state.'
  syntax:
    content: get_replica_health(partition_id, replica_id, events_health_state_filter=0,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ReplicaHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ReplicaHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_replica_health_using_policy(partition_id, replica_id, events_health_state_filter=0,
    application_health_policy=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_replica_health_using_policy
  summary: 'Gets the health of a Service Fabric stateful service replica or

    stateless service instance using the specified policy.


    Gets the health of a Service Fabric stateful service replica or

    stateless service instance.

    Use EventsHealthStateFilter to filter the collection of health events

    reported on the cluster based on the health state.

    Use ApplicationHealthPolicy to optionally override the health policies

    used to evaluate the health. This API only uses

    ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy. The rest

    of the fields are ignored while evaluating the health of the replica.'
  syntax:
    content: get_replica_health_using_policy(partition_id, replica_id, events_health_state_filter=0,
      application_health_policy=None, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ReplicaHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ReplicaHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_replica_info(partition_id, replica_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_replica_info
  summary: 'Gets the information about a replica of a Service Fabric partition.


    The response includes the ID, role, status, health, node name, uptime,

    and other details about the replica.'
  syntax:
    content: get_replica_info(partition_id, replica_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ReplicaInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ReplicaInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_replica_info_list(partition_id, continuation_token=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_replica_info_list
  summary: 'Gets the information about replicas of a Service Fabric service

    partition.


    The GetReplicas endpoint returns information about the replicas of the

    specified partition. The response includes the ID, role, status,

    health, node name, uptime, and other details about the replica.'
  syntax:
    content: get_replica_info_list(partition_id, continuation_token=None, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedReplicaInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedReplicaInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_configuration_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_backup_configuration_info(service_id, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_backup_configuration_info
  summary: 'Gets the Service Fabric service backup configuration information.


    Gets the Service Fabric backup configuration information for the

    service and the partitions under this service.'
  syntax:
    content: get_service_backup_configuration_info(service_id, continuation_token=None,
      max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'PagedBackupConfigurationInfoList or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.PagedBackupConfigurationInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_configuration_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_backup_list(service_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, continuation_token=None, max_results=0, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_service_backup_list
  summary: 'Gets the list of backups available for every partition in this service.


    Returns a list of backups available for every partition in this Service

    Fabric service. The server enumerates all the backups available in the

    backup store configured in the backup policy. It also allows filtering

    of the result based on start and end datetime or just fetching the

    latest available backup for every partition.'
  syntax:
    content: get_service_backup_list(service_id, timeout=60, latest=False, start_date_time_filter=None,
      end_date_time_filter=None, continuation_token=None, max_results=0, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Specifies whether to get only the most recent backup

        available for a partition for the specified time range.'
      id: latest
      type:
      - bool
    - defaultValue: None
      description: 'Specify the start date time from which

        to enumerate backups, in datetime format. The date time must be

        specified in ISO8601 format. This is an optional parameter. If not

        specified, all backups from the beginning are enumerated.'
      id: start_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: 'Specify the end date time till which to

        enumerate backups, in datetime format. The date time must be specified

        in ISO8601 format. This is an optional parameter. If not specified,

        enumeration is done till the most recent backup.'
      id: end_date_time_filter
      type:
      - datetime
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '0'
      description: 'The maximum number of results to be returned as

        part of the paged queries. This parameter defines the upper bound on

        the number of results returned. The results returned can be less than

        the specified maximum results if they do not fit in the message as per

        the max message size restrictions defined in the configuration. If

        this parameter is zero or not specified, the paged query includes as

        many results as possible that fit in the return message.'
      id: max_results
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedBackupInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedBackupInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_description
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_description(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_service_description
  summary: 'Gets the description of an existing Service Fabric service.


    Gets the description of an existing Service Fabric service. A service

    must be created before its description can be obtained.'
  syntax:
    content: get_service_description(service_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceDescription or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceDescription
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_description
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_event_list(service_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_event_list
  summary: 'Gets a Service-related events.


    The response is list of ServiceEvent objects.'
  syntax:
    content: get_service_event_list(service_id, start_time_utc, end_time_utc, timeout=60,
      events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ServiceEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_health(service_id, events_health_state_filter=0, partitions_health_state_filter=0,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_health
  summary: 'Gets the health of the specified Service Fabric service.


    Gets the health information of the specified service.

    Use EventsHealthStateFilter to filter the collection of health events

    reported on the service based on the health state.

    Use PartitionsHealthStateFilter to filter the collection of partitions

    returned.

    If you specify a service that does not exist in the health store, this

    request returns an error.'
  syntax:
    content: get_service_health(service_id, events_health_state_filter=0, partitions_health_state_filter=0,
      exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the

        partitions health state objects returned in the result of service

        health query based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only partitions that match the filter are returned. All partitions are

        used to evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        value

        obtained using bitwise ''OR'' operator. For example, if the provided

        value is 6 then health state of partitions with HealthState value of

        OK (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: partitions_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health_using_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_health_using_policy(service_id, events_health_state_filter=0,
    partitions_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_health_using_policy
  summary: 'Gets the health of the specified Service Fabric service, by using the

    specified health policy.


    Gets the health information of the specified service.

    If the application health policy is specified, the health evaluation

    uses it to get the aggregated health state.

    If the policy is not specified, the health evaluation uses the

    application health policy defined in the application manifest, or the

    default health policy, if no policy is defined in the manifest.

    Use EventsHealthStateFilter to filter the collection of health events

    reported on the service based on the health state.

    Use PartitionsHealthStateFilter to filter the collection of partitions

    returned.

    If you specify a service that does not exist in the health store, this

    request returns an error.'
  syntax:
    content: get_service_health_using_policy(service_id, events_health_state_filter=0,
      partitions_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'Allows filtering the collection of

        HealthEvent objects returned based on health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only events that match the filter are returned. All events are used to

        evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        values, obtained using the bitwise ''OR'' operator. For example, If the

        provided value is 6 then all of the events with HealthState value of

        OK (2) and Warning (4) are returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '0'
      description: 'Allows filtering of the

        partitions health state objects returned in the result of service

        health query based on their health state.

        The possible values for this parameter include integer value of one of

        the following health states.

        Only partitions that match the filter are returned. All partitions are

        used to evaluate the aggregated health state.

        If not specified, all entries are returned. The state values are

        flag-based enumeration, so the value could be a combination of these

        value

        obtained using bitwise ''OR'' operator. For example, if the provided

        value is 6 then health state of partitions with HealthState value of

        OK (2) and Warning (4) will be returned.

        - Default - Default value. Matches any HealthState. The value is zero.

        - None - Filter that doesn''t match any HealthState value. Used in

        order to return no results on a given collection of states. The value

        is 1.

        - Ok - Filter that matches input with HealthState value Ok. The value

        is 2.

        - Warning - Filter that matches input with HealthState value Warning.

        The value is 4.

        - Error - Filter that matches input with HealthState value Error. The

        value is 8.

        - All - Filter that matches input with any HealthState value. The

        value is 65535.'
      id: partitions_health_state_filter
      type:
      - int
    - defaultValue: None
      description: 'Describes the health policies used

        to evaluate the health of an application or one of its children.

        If not present, the health evaluation uses the health policy from

        application manifest or the default health policy.'
      id: application_health_policy
      type:
      - azure.servicefabric.models.ApplicationHealthPolicy
    - defaultValue: 'False'
      description: 'Indicates whether the health

        statistics should be returned as part of the query result. False by

        default.

        The statistics show the number of children entities in health state

        Ok, Warning, and Error.'
      id: exclude_health_statistics
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceHealth or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceHealth
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health_using_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_info(application_id, service_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_service_info
  summary: 'Gets the information about the specific service belonging to the

    Service Fabric application.


    Returns the information about the specified service belonging to the

    specified Service Fabric application.'
  syntax:
    content: get_service_info(application_id, service_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_info_list(application_id, service_type_name=None, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_info_list
  summary: 'Gets the information about all services belonging to the application

    specified by the application ID.


    Returns the information about all services belonging to the application

    specified by the application ID.'
  syntax:
    content: get_service_info_list(application_id, service_type_name=None, continuation_token=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The service type name used to filter the

        services to query for.'
      id: service_type_name
      type:
      - str
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedServiceInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedServiceInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_manifest
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_manifest(application_type_name, application_type_version, service_manifest_name,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_manifest
  summary: 'Gets the manifest describing a service type.


    Gets the manifest describing a service type. The response contains the

    service manifest XML as a string.'
  syntax:
    content: get_service_manifest(application_type_name, application_type_version,
      service_manifest_name, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - description: The version of the application type.
      id: application_type_version
      isRequired: true
      type:
      - str
    - description: 'The name of a service manifest

        registered as part of an application type in a Service Fabric cluster.'
      id: service_manifest_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceTypeManifest or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceTypeManifest
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_manifest
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_name_info
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_name_info(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_service_name_info
  summary: 'Gets the name of the Service Fabric service for a partition.


    Gets name of the service for the specified partition. A 404 error is

    returned if the partition ID does not exist in the cluster.'
  syntax:
    content: get_service_name_info(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceNameInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceNameInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_name_info
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_by_name
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_type_info_by_name(application_type_name, application_type_version,
    service_type_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_type_info_by_name
  summary: 'Gets the information about a specific service type that is supported by

    a provisioned application type in a Service Fabric cluster.


    Gets the information about a specific service type that is supported by

    a provisioned application type in a Service Fabric cluster. The

    provided application type must exist. Otherwise, a 404 status is

    returned. A 204 response is returned if the specified service type is

    not found in the cluster.'
  syntax:
    content: get_service_type_info_by_name(application_type_name, application_type_version,
      service_type_name, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - description: The version of the application type.
      id: application_type_version
      isRequired: true
      type:
      - str
    - description: 'Specifies the name of a Service Fabric

        service type.'
      id: service_type_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceTypeInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ServiceTypeInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_by_name
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_service_type_info_list(application_type_name, application_type_version,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_type_info_list
  summary: 'Gets the list containing the information about service types that are

    supported by a provisioned application type in a Service Fabric

    cluster.


    Gets the list containing the information about service types that are

    supported by a provisioned application type in a Service Fabric

    cluster. The provided application type must exist. Otherwise, a 404

    status is returned.'
  syntax:
    content: get_service_type_info_list(application_type_name, application_type_version,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - description: The version of the application type.
      id: application_type_version
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ServiceTypeInfo]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_services_event_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_services_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_services_event_list
  summary: 'Gets all Services-related events.


    The response is list of ServiceEvent objects.'
  syntax:
    content: get_services_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
      exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The start time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: start_time_utc
      isRequired: true
      type:
      - str
    - description: 'The end time of a lookup query in ISO UTC

        yyyy-MM-ddTHH:mm:ssZ.'
      id: end_time_utc
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'This is a comma separated string

        specifying the types of FabricEvents that should only be included in

        the response.'
      id: events_types_filter
      type:
      - str
    - defaultValue: None
      description: 'This param disables the retrieval of

        AnalysisEvents if true is passed.'
      id: exclude_analysis_events
      type:
      - bool
    - defaultValue: None
      description: 'This param disables the search of

        CorrelatedEvents information if true is passed. otherwise the

        CorrelationEvents get processed and HasCorrelatedEvents field in every

        FabricEvent gets populated.'
      id: skip_correlation_lookup
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.servicefabric.models.ServiceEvent]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_services_event_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_sub_name_info_list
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_sub_name_info_list(name_id, recursive=False, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_sub_name_info_list
  summary: 'Enumerates all the Service Fabric names under a given name.


    Enumerates all the Service Fabric names under a given name. If the

    subnames do not fit in a page, one page of results is returned as well

    as a continuation token, which can be used to get the next page.

    Querying a name that doesn''t exist will fail.'
  syntax:
    content: get_sub_name_info_list(name_id, recursive=False, continuation_token=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Allows specifying that the search performed should

        be recursive.'
      id: recursive
      type:
      - bool
    - defaultValue: None
      description: 'The continuation token parameter is used to

        obtain next set of results. A continuation token with a non-empty

        value is included in the response of the API when the results from the

        system do not fit in a single response. When this value is passed to

        the next API call, the API returns next set of results. If there are

        no further results, then the continuation token does not contain a

        value. The value of this parameter should not be URL encoded.'
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PagedSubNameInfoList or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PagedSubNameInfoList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_sub_name_info_list
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_unplaced_replica_information
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_unplaced_replica_information(service_id, partition_id=None, only_query_primaries=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_unplaced_replica_information
  summary: 'Gets the information about unplaced replica of the service.


    Returns the information about the unplaced replicas of the service.

    If PartitionId is specified, then result will contain information only

    about unplaced replicas for that partition.

    If PartitionId is not specified, then result will contain information

    about unplaced replicas for all partitions of that service.

    If OnlyQueryPrimaries is set to true, then result will contain

    information only about primary replicas, and will ignore unplaced

    secondary replicas.'
  syntax:
    content: get_unplaced_replica_information(service_id, partition_id=None, only_query_primaries=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: 'False'
      description: 'Indicates that unplaced replica

        information will be queries only for primary replicas.'
      id: only_query_primaries
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: UnplacedReplicaInformation or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.UnplacedReplicaInformation
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_unplaced_replica_information
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_upgrade_orchestration_service_state
  langs:
  - python
  module: azure.servicefabric.operations
  name: get_upgrade_orchestration_service_state(timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: get_upgrade_orchestration_service_state
  summary: 'Get the service state of Service Fabric Upgrade Orchestration Service.


    Get the service state of Service Fabric Upgrade Orchestration Service.

    This API is internally used for support purposes.'
  syntax:
    content: get_upgrade_orchestration_service_state(timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'UpgradeOrchestrationServiceState or ClientRawResponse if

        raw=true'
      type:
      - azure.servicefabric.models.UpgradeOrchestrationServiceState
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_upgrade_orchestration_service_state
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_container_api
  langs:
  - python
  module: azure.servicefabric.operations
  name: invoke_container_api(node_name, application_id, service_manifest_name, code_package_name,
    code_package_instance_id, container_api_request_body, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: invoke_container_api
  summary: 'Invoke container API on a container deployed on a Service Fabric node.


    Invoke container API on a container deployed on a Service Fabric node

    for the given code package.'
  syntax:
    content: invoke_container_api(node_name, application_id, service_manifest_name,
      code_package_name, code_package_instance_id, container_api_request_body, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The name of a service manifest

        registered as part of an application type in a Service Fabric cluster.'
      id: service_manifest_name
      isRequired: true
      type:
      - str
    - description: 'The name of code package specified in

        service manifest registered as part of an application type in a

        Service Fabric cluster.'
      id: code_package_name
      isRequired: true
      type:
      - str
    - description: 'ID that uniquely identifies a code

        package instance deployed on a service fabric node.'
      id: code_package_instance_id
      isRequired: true
      type:
      - str
    - description: 'Parameters for making container API

        call'
      id: container_api_request_body
      isRequired: true
      type:
      - azure.servicefabric.models.ContainerApiRequestBody
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ContainerApiResponse or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ContainerApiResponse
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_container_api
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_command
  langs:
  - python
  module: azure.servicefabric.operations
  name: invoke_infrastructure_command(command, service_id=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: invoke_infrastructure_command
  summary: 'Invokes an administrative command on the given Infrastructure Service

    instance.


    For clusters that have one or more instances of the Infrastructure

    Service configured,

    this API provides a way to send infrastructure-specific commands to a

    particular

    instance of the Infrastructure Service.

    Available commands and their corresponding response formats vary

    depending upon

    the infrastructure on which the cluster is running.

    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: invoke_infrastructure_command(command, service_id=None, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The text of the command to be invoked. The content of

        the command is infrastructure-specific.'
      id: command
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The identity of the infrastructure service. This is

        the full name of the infrastructure service without the ''fabric:'' URI

        scheme. This parameter required only for the cluster that has more

        than one instance of infrastructure service running.'
      id: service_id
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: str or ClientRawResponse if raw=true
      type:
      - str
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_command
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_query
  langs:
  - python
  module: azure.servicefabric.operations
  name: invoke_infrastructure_query(command, service_id=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: invoke_infrastructure_query
  summary: 'Invokes a read-only query on the given infrastructure service instance.


    For clusters that have one or more instances of the Infrastructure

    Service configured,

    this API provides a way to send infrastructure-specific queries to a

    particular

    instance of the Infrastructure Service.

    Available commands and their corresponding response formats vary

    depending upon

    the infrastructure on which the cluster is running.

    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: invoke_infrastructure_query(command, service_id=None, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The text of the command to be invoked. The content of

        the command is infrastructure-specific.'
      id: command
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The identity of the infrastructure service. This is

        the full name of the infrastructure service without the ''fabric:'' URI

        scheme. This parameter required only for the cluster that has more

        than one instance of infrastructure service running.'
      id: service_id
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: str or ClientRawResponse if raw=true
      type:
      - str
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_query
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_primary_replica
  langs:
  - python
  module: azure.servicefabric.operations
  name: move_primary_replica(partition_id, node_name=None, ignore_constraints=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: move_primary_replica
  summary: 'Moves the primary replica of a partition of a stateful service.


    This command moves the primary replica of a partition of a stateful

    service, respecting all constraints.

    If NodeName parameter is specified, primary will be moved to the

    specified node (if constraints allow it).

    If NodeName parameter is not specified, primary replica will be moved

    to a random node in the cluster.

    If IgnoreConstraints parameter is specified and set to true, then

    primary will be moved regardless of the constraints.'
  syntax:
    content: move_primary_replica(partition_id, node_name=None, ignore_constraints=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: 'False'
      description: 'Ignore constraints when moving a replica.

        If this parameter is not specified, all constraints are honored.'
      id: ignore_constraints
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_primary_replica
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_secondary_replica
  langs:
  - python
  module: azure.servicefabric.operations
  name: move_secondary_replica(partition_id, current_node_name, new_node_name=None,
    ignore_constraints=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: move_secondary_replica
  summary: 'Moves the secondary replica of a partition of a stateful service.


    This command moves the secondary replica of a partition of a stateful

    service, respecting all constraints.

    CurrentNodeName parameter must be specified to identify the replica

    that is moved.

    Source node name must be specified, but new node name can be omitted,

    and in that case replica is moved to a random node.

    If IgnoreConstraints parameter is specified and set to true, then

    secondary will be moved regardless of the constraints.'
  syntax:
    content: move_secondary_replica(partition_id, current_node_name, new_node_name=None,
      ignore_constraints=False, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'The name of the source node for secondary

        replica move.'
      id: current_node_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The name of the target node for secondary

        replica move. If not specified, replica is moved to a random node.'
      id: new_node_name
      type:
      - str
    - defaultValue: 'False'
      description: 'Ignore constraints when moving a replica.

        If this parameter is not specified, all constraints are honored.'
      id: ignore_constraints
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_secondary_replica
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.post_chaos_schedule
  langs:
  - python
  module: azure.servicefabric.operations
  name: post_chaos_schedule(timeout=60, version=None, schedule=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: post_chaos_schedule
  summary: 'Set the schedule used by Chaos.


    Chaos will automatically schedule runs based on the Chaos Schedule.

    The Chaos Schedule will be updated if the provided version matches the

    version on the server.

    When updating the Chaos Schedule, the version on the server is

    incremented by 1.

    The version on the server will wrap back to 0 after reaching a large

    number.

    If Chaos is running when this call is made, the call will fail.'
  syntax:
    content: post_chaos_schedule(timeout=60, version=None, schedule=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: The version number of the Schedule.
      id: version
      type:
      - int
    - defaultValue: None
      description: Defines the schedule used by Chaos.
      id: schedule
      type:
      - azure.servicefabric.models.ChaosSchedule
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.post_chaos_schedule
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_application_type
  langs:
  - python
  module: azure.servicefabric.operations
  name: provision_application_type(provision_application_type_description_base_required_body_param,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: provision_application_type
  summary: "Provisions or registers a Service Fabric application type with the\ncluster\
    \ using the '.sfpkg' package in the external store or using the\napplication package\
    \ in the image store.\n\nProvisions a Service Fabric application type with the\
    \ cluster. The\nprovision is required before any new applications can be instantiated.\n\
    The provision operation can be performed either on the application\npackage specified\
    \ by the relativePathInImageStore, or by using the URI\nof the external '.sfpkg'.\n\
    \n:param\n   provision_application_type_description_base_required_body_param:\
    \ The\n   base type of provision application type description which supports\n\
    \   either image store-based provision or external store-based provision."
  syntax:
    content: provision_application_type(provision_application_type_description_base_required_body_param,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      isRequired: true
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_application_type
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_cluster
  langs:
  - python
  module: azure.servicefabric.operations
  name: provision_cluster(timeout=60, code_file_path=None, cluster_manifest_file_path=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: provision_cluster
  summary: 'Provision the code or configuration packages of a Service Fabric

    cluster.


    Validate and provision the code or configuration packages of a Service

    Fabric cluster.'
  syntax:
    content: provision_cluster(timeout=60, code_file_path=None, cluster_manifest_file_path=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: The cluster code package file path.
      id: code_file_path
      type:
      - str
    - defaultValue: None
      description: The cluster manifest file path.
      id: cluster_manifest_file_path
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_cluster
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.put_property
  langs:
  - python
  module: azure.servicefabric.operations
  name: put_property(name_id, property_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: put_property
  summary: 'Creates or updates a Service Fabric property.


    Creates or updates the specified Service Fabric property under a given

    name.'
  syntax:
    content: put_property(name_id, property_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - description: 'Describes the Service Fabric property to

        be created.'
      id: property_description
      isRequired: true
      type:
      - azure.servicefabric.models.PropertyDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.put_property
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_all_partitions
  langs:
  - python
  module: azure.servicefabric.operations
  name: recover_all_partitions(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: recover_all_partitions
  summary: 'Indicates to the Service Fabric cluster that it should attempt to

    recover any services (including system services) which are currently

    stuck in quorum loss.


    This operation should only be performed if it is known that the

    replicas that are down cannot be recovered. Incorrect use of this API

    can cause potential data loss.'
  syntax:
    content: recover_all_partitions(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_all_partitions
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_partition
  langs:
  - python
  module: azure.servicefabric.operations
  name: recover_partition(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: recover_partition
  summary: 'Indicates to the Service Fabric cluster that it should attempt to

    recover a specific partition that is currently stuck in quorum loss.


    This operation should only be performed if it is known that the

    replicas that are down cannot be recovered. Incorrect use of this API

    can cause potential data loss.'
  syntax:
    content: recover_partition(partition_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_partition
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_service_partitions
  langs:
  - python
  module: azure.servicefabric.operations
  name: recover_service_partitions(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: recover_service_partitions
  summary: 'Indicates to the Service Fabric cluster that it should attempt to

    recover the specified service that is currently stuck in quorum loss.


    Indicates to the Service Fabric cluster that it should attempt to

    recover the specified service that is currently stuck in quorum loss.

    This operation should only be performed if it is known that the

    replicas that are down cannot be recovered. Incorrect use of this API

    can cause potential data loss.'
  syntax:
    content: recover_service_partitions(service_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_service_partitions
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_system_partitions
  langs:
  - python
  module: azure.servicefabric.operations
  name: recover_system_partitions(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: recover_system_partitions
  summary: 'Indicates to the Service Fabric cluster that it should attempt to

    recover the system services that are currently stuck in quorum loss.


    Indicates to the Service Fabric cluster that it should attempt to

    recover the system services that are currently stuck in quorum loss.

    This operation should only be performed if it is known that the

    replicas that are down cannot be recovered. Incorrect use of this API

    can cause potential data loss.'
  syntax:
    content: recover_system_partitions(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_system_partitions
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_compose_deployment
  langs:
  - python
  module: azure.servicefabric.operations
  name: remove_compose_deployment(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: remove_compose_deployment
  summary: 'Deletes an existing Service Fabric compose deployment from cluster.


    Deletes an existing Service Fabric compose deployment.'
  syntax:
    content: remove_compose_deployment(deployment_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_compose_deployment
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_configuration_overrides
  langs:
  - python
  module: azure.servicefabric.operations
  name: remove_configuration_overrides(node_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: remove_configuration_overrides
  summary: 'Removes configuration overrides on the specified node.


    This api allows removing all existing configuration overrides on

    specified node.'
  syntax:
    content: remove_configuration_overrides(node_name, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_configuration_overrides
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_node_state
  langs:
  - python
  module: azure.servicefabric.operations
  name: remove_node_state(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: remove_node_state
  summary: 'Notifies Service Fabric that the persisted state on a node has been

    permanently removed or lost.


    This implies that it is not possible to recover the persisted state of

    that node. This generally happens if a hard disk has been wiped clean,

    or if a hard disk crashes. The node has to be down for this operation

    to be successful. This operation lets Service Fabric know that the

    replicas on that node no longer exist, and that Service Fabric should

    stop waiting for those replicas to come back up. Do not run this cmdlet

    if the state on the node has not been removed and the node can come

    back up with its state intact. Starting from Service Fabric 6.5, in

    order to use this API for seed nodes, please change the seed nodes to

    regular (non-seed) nodes and then invoke this API to remove the node

    state. If the cluster is running on Azure, after the seed node goes

    down, Service Fabric will try to change it to a non-seed node

    automatically. To make this happen, make sure the number of non-seed

    nodes in the primary node type is no less than the number of Down seed

    nodes. If necessary, add more nodes to the primary node type to achieve

    this. For standalone cluster, if the Down seed node is not expected to

    come back up with its state intact, please remove the node from the

    cluster, see

    [https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-windows-server-add-remove-nodes](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-windows-server-add-remove-nodes).'
  syntax:
    content: remove_node_state(node_name, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_node_state
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_replica
  langs:
  - python
  module: azure.servicefabric.operations
  name: remove_replica(node_name, partition_id, replica_id, force_remove=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: remove_replica
  summary: 'Removes a service replica running on a node.


    This API simulates a Service Fabric replica failure by removing a

    replica from a Service Fabric cluster. The removal closes the replica,

    transitions the replica to the role None, and then removes all of the

    state information of the replica from the cluster. This API tests the

    replica state removal path, and simulates the report fault permanent

    path through client APIs. Warning - There are no safety checks

    performed when this API is used. Incorrect use of this API can lead to

    data loss for stateful services. In addition, the forceRemove flag

    impacts all other replicas hosted in the same process.'
  syntax:
    content: remove_replica(node_name, partition_id, replica_id, force_remove=None,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Remove a Service Fabric application or service

        forcefully without going through the graceful shutdown sequence. This

        parameter can be used to forcefully delete an application or service

        for which delete is timing out due to issues in the service code that

        prevents graceful close of replicas.'
      id: force_remove
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_replica
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_application_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_application_health(application_id, health_information, immediate=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_application_health
  summary: 'Sends a health report on the Service Fabric application.


    Reports health state of the specified Service Fabric application. The

    report must contain the information about the source of the health

    report and property on which it is reported.

    The report is sent to a Service Fabric gateway Application, which

    forwards to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, get

    application health and check that the report appears in the

    HealthEvents section.'
  syntax:
    content: report_application_health(application_id, health_information, immediate=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_application_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_cluster_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_cluster_health(health_information, immediate=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: report_cluster_health
  summary: 'Sends a health report on the Service Fabric cluster.


    Sends a health report on a Service Fabric cluster. The report must

    contain the information about the source of the health report and

    property on which it is reported.

    The report is sent to a Service Fabric gateway node, which forwards to

    the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, run

    GetClusterHealth and check that the report appears in the HealthEvents

    section.'
  syntax:
    content: report_cluster_health(health_information, immediate=False, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_cluster_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_application_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_deployed_application_health(node_name, application_id, health_information,
    immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_deployed_application_health
  summary: 'Sends a health report on the Service Fabric application deployed on a

    Service Fabric node.


    Reports health state of the application deployed on a Service Fabric

    node. The report must contain the information about the source of the

    health report and property on which it is reported.

    The report is sent to a Service Fabric gateway Service, which forwards

    to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, get deployed

    application health and check that the report appears in the

    HealthEvents section.'
  syntax:
    content: report_deployed_application_health(node_name, application_id, health_information,
      immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_application_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_service_package_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_deployed_service_package_health(node_name, application_id, service_package_name,
    health_information, immediate=False, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: report_deployed_service_package_health
  summary: 'Sends a health report on the Service Fabric deployed service package.


    Reports health state of the service package of the application deployed

    on a Service Fabric node. The report must contain the information about

    the source of the health report and property on which it is reported.

    The report is sent to a Service Fabric gateway Service, which forwards

    to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, get deployed

    service package health and check that the report appears in the

    HealthEvents section.'
  syntax:
    content: report_deployed_service_package_health(node_name, application_id, service_package_name,
      health_information, immediate=False, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: The name of the service package.
      id: service_package_name
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_service_package_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_node_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_node_health(node_name, health_information, immediate=False, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_node_health
  summary: 'Sends a health report on the Service Fabric node.


    Reports health state of the specified Service Fabric node. The report

    must contain the information about the source of the health report and

    property on which it is reported.

    The report is sent to a Service Fabric gateway node, which forwards to

    the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, run

    GetNodeHealth and check that the report appears in the HealthEvents

    section.'
  syntax:
    content: report_node_health(node_name, health_information, immediate=False, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_node_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_partition_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_partition_health(partition_id, health_information, immediate=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_partition_health
  summary: 'Sends a health report on the Service Fabric partition.


    Reports health state of the specified Service Fabric partition. The

    report must contain the information about the source of the health

    report and property on which it is reported.

    The report is sent to a Service Fabric gateway Partition, which

    forwards to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, run

    GetPartitionHealth and check that the report appears in the

    HealthEvents section.'
  syntax:
    content: report_partition_health(partition_id, health_information, immediate=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_partition_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_replica_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_replica_health(partition_id, replica_id, health_information, service_kind='Stateful',
    immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_replica_health
  summary: 'Sends a health report on the Service Fabric replica.


    Reports health state of the specified Service Fabric replica. The

    report must contain the information about the source of the health

    report and property on which it is reported.

    The report is sent to a Service Fabric gateway Replica, which forwards

    to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, run

    GetReplicaHealth and check that the report appears in the HealthEvents

    section.'
  syntax:
    content: report_replica_health(partition_id, replica_id, health_information, service_kind='Stateful',
      immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - description: 'The kind of service replica (Stateless or

        Stateful) for which the health is being reported. Following are the

        possible values. Possible values include: ''Stateless'', ''Stateful'''
      id: service_kind
      isRequired: true
      type:
      - str
      - azure.servicefabric.models.ReplicaHealthReportServiceKind
    - defaultValue: Stateful
      description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_replica_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_service_health
  langs:
  - python
  module: azure.servicefabric.operations
  name: report_service_health(service_id, health_information, immediate=False, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: report_service_health
  summary: 'Sends a health report on the Service Fabric service.


    Reports health state of the specified Service Fabric service. The

    report must contain the information about the source of the health

    report and property on which it is reported.

    The report is sent to a Service Fabric gateway Service, which forwards

    to the health store.

    The report may be accepted by the gateway, but rejected by the health

    store after extra validation.

    For example, the health store may reject the report because of an

    invalid parameter, like a stale sequence number.

    To see whether the report was applied in the health store, run

    GetServiceHealth and check that the report appears in the HealthEvents

    section.'
  syntax:
    content: report_service_health(service_id, health_information, immediate=False,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: 'Describes the health information for the

        health report. This information needs to be present in all of the

        health reports sent to the health manager.'
      id: health_information
      isRequired: true
      type:
      - azure.servicefabric.models.HealthInformation
    - defaultValue: 'False'
      description: 'A flag that indicates whether the report should be

        sent immediately.

        A health report is sent to a Service Fabric gateway Application, which

        forwards to the health store.

        If Immediate is set to true, the report is sent immediately from HTTP

        Gateway to the health store, regardless of the fabric client settings

        that the HTTP Gateway Application is using.

        This is useful for critical reports that should be sent as soon as

        possible.

        Depending on timing and other conditions, sending the report may still

        fail, for example if the HTTP Gateway is closed or the message doesn''t

        reach the Gateway.

        If Immediate is set to false, the report is sent based on the health

        client settings from the HTTP Gateway. Therefore, it will be batched

        according to the HealthReportSendInterval configuration.

        This is the recommended setting because it allows the health client to

        optimize health reporting messages to health store as well as health

        report processing.

        By default, reports are not sent immediately.'
      id: immediate
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_service_health
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.reset_partition_load
  langs:
  - python
  module: azure.servicefabric.operations
  name: reset_partition_load(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: reset_partition_load
  summary: 'Resets the current load of a Service Fabric partition.


    Resets the current load of a Service Fabric partition to the default

    load for the service.'
  syntax:
    content: reset_partition_load(partition_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.reset_partition_load
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resolve_service
  langs:
  - python
  module: azure.servicefabric.operations
  name: resolve_service(service_id, partition_key_type=None, partition_key_value=None,
    previous_rsp_version=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: resolve_service
  summary: 'Resolve a Service Fabric partition.


    Resolve a Service Fabric service partition to get the endpoints of the

    service replicas.'
  syntax:
    content: resolve_service(service_id, partition_key_type=None, partition_key_value=None,
      previous_rsp_version=None, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Key type for the partition. This parameter

        is required if the partition scheme for the service is Int64Range or

        Named. The possible values are following.

        - None (1) - Indicates that the PartitionKeyValue parameter is not

        specified. This is valid for the partitions with partitioning scheme

        as Singleton. This is the default value. The value is 1.

        - Int64Range (2) - Indicates that the PartitionKeyValue parameter is

        an int64 partition key. This is valid for the partitions with

        partitioning scheme as Int64Range. The value is 2.

        - Named (3) - Indicates that the PartitionKeyValue parameter is a name

        of the partition. This is valid for the partitions with partitioning

        scheme as Named. The value is 3.'
      id: partition_key_type
      type:
      - int
    - defaultValue: None
      description: 'Partition key. This is required if the

        partition scheme for the service is Int64Range or Named.

        This is not the partition ID, but rather, either the integer key

        value, or the name of the partition ID.

        For example, if your service is using ranged partitions from 0 to 10,

        then they PartitionKeyValue would be an

        integer in that range. Query service description to see the range or

        name.'
      id: partition_key_value
      type:
      - str
    - defaultValue: None
      description: 'The value in the Version field of the

        response that was received previously. This is required if the user

        knows that the result that was gotten previously is stale.'
      id: previous_rsp_version
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ResolvedServicePartition or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.ResolvedServicePartition
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resolve_service
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_deployed_code_package
  langs:
  - python
  module: azure.servicefabric.operations
  name: restart_deployed_code_package(node_name, application_id, restart_deployed_code_package_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: restart_deployed_code_package
  summary: 'Restarts a code package deployed on a Service Fabric node in a cluster.


    Restarts a code package deployed on a Service Fabric node in a cluster.

    This aborts the code package process, which will restart all the user

    service replicas hosted in that process.'
  syntax:
    content: restart_deployed_code_package(node_name, application_id, restart_deployed_code_package_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Describes the

        deployed code package on Service Fabric node to restart.'
      id: restart_deployed_code_package_description
      isRequired: true
      type:
      - azure.servicefabric.models.RestartDeployedCodePackageDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_deployed_code_package
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_node
  langs:
  - python
  module: azure.servicefabric.operations
  name: restart_node(node_name, node_instance_id='0', timeout=60, create_fabric_dump='False',
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: restart_node
  summary: 'Restarts a Service Fabric cluster node.


    Restarts a Service Fabric cluster node that is already started.'
  syntax:
    content: restart_node(node_name, node_instance_id='0', timeout=60, create_fabric_dump='False',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - defaultValue: '0'
      description: 'The instance ID of the target node. If

        instance ID is specified the node is restarted only if it matches with

        the current instance of the node. A default value of "0" would match

        any instance ID. The instance ID can be obtained using get node query.'
      id: node_instance_id
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Specify True to create a dump of the fabric

        node process. This is case-sensitive. Possible values include:

        ''False'', ''True'''
      id: create_fabric_dump
      type:
      - str
      - azure.servicefabric.models.CreateFabricDump
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_node
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_replica
  langs:
  - python
  module: azure.servicefabric.operations
  name: restart_replica(node_name, partition_id, replica_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: restart_replica
  summary: 'Restarts a service replica of a persisted service running on a node.


    Restarts a service replica of a persisted service running on a node.

    Warning - There are no safety checks performed when this API is used.

    Incorrect use of this API can lead to availability loss for stateful

    services.'
  syntax:
    content: restart_replica(node_name, partition_id, replica_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: The identifier of the replica.
      id: replica_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_replica
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restore_partition
  langs:
  - python
  module: azure.servicefabric.operations
  name: restore_partition(partition_id, restore_partition_description, restore_timeout=10,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: restore_partition
  summary: 'Triggers restore of the state of the partition using the specified

    restore partition description.


    Restores the state of a of the stateful persisted partition using the

    specified backup point. In case the partition is already being

    periodically backed up, then by default the backup point is looked for

    in the storage specified in backup policy. One can also override the

    same by specifying the backup storage details as part of the restore

    partition description in body. Once the restore is initiated, its

    progress can be tracked using the GetRestoreProgress operation.

    In case, the operation times out, specify a greater restore timeout

    value in the query parameter.'
  syntax:
    content: restore_partition(partition_id, restore_partition_description, restore_timeout=10,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'Describes the parameters to

        restore the partition.'
      id: restore_partition_description
      isRequired: true
      type:
      - azure.servicefabric.models.RestorePartitionDescription
    - defaultValue: '10'
      description: 'Specifies the maximum amount of time to wait,

        in minutes, for the restore operation to complete. Post that, the

        operation returns back with timeout error. However, in certain corner

        cases it could be that the restore operation goes through even though

        it completes with timeout. In case of timeout error, its recommended

        to invoke this operation again with a greater timeout value. the

        default value for the same is 10 minutes.'
      id: restore_timeout
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restore_partition
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: resume_application_backup(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: resume_application_backup
  summary: 'Resumes periodic backup of a Service Fabric application which was

    previously suspended.


    The previously suspended Service Fabric application resumes taking

    periodic backup as per the backup policy currently configured for the

    same.'
  syntax:
    content: resume_application_backup(application_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: resume_application_upgrade(application_id, upgrade_domain_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: resume_application_upgrade
  summary: 'Resumes upgrading an application in the Service Fabric cluster.


    Resumes an unmonitored manual Service Fabric application upgrade.

    Service Fabric upgrades one upgrade domain at a time. For unmonitored

    manual upgrades, after Service Fabric finishes an upgrade domain, it

    waits for you to call this API before proceeding to the next upgrade

    domain.'
  syntax:
    content: resume_application_upgrade(application_id, upgrade_domain_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'The name of the upgrade domain in which to

        resume the upgrade.'
      id: upgrade_domain_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_cluster_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: resume_cluster_upgrade(upgrade_domain, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: resume_cluster_upgrade
  summary: 'Make the cluster upgrade move on to the next upgrade domain.


    Make the cluster code or configuration upgrade move on to the next

    upgrade domain if appropriate.'
  syntax:
    content: resume_cluster_upgrade(upgrade_domain, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The next upgrade domain for this cluster

        upgrade.'
      id: upgrade_domain
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_cluster_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_partition_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: resume_partition_backup(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: resume_partition_backup
  summary: 'Resumes periodic backup of partition which was previously suspended.


    The previously suspended partition resumes taking periodic backup as

    per the backup policy currently configured for the same.'
  syntax:
    content: resume_partition_backup(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_partition_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_service_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: resume_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: resume_service_backup
  summary: 'Resumes periodic backup of a Service Fabric service which was

    previously suspended.


    The previously suspended Service Fabric service resumes taking periodic

    backup as per the backup policy currently configured for the same.'
  syntax:
    content: resume_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_service_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_application_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: rollback_application_upgrade(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: rollback_application_upgrade
  summary: 'Starts rolling back the currently on-going upgrade of an application in

    the Service Fabric cluster.


    Starts rolling back the current application upgrade to the previous

    version. This API can only be used to roll back the current in-progress

    upgrade that is rolling forward to new version. If the application is

    not currently being upgraded use StartApplicationUpgrade API to upgrade

    it to desired version, including rolling back to a previous version.'
  syntax:
    content: rollback_application_upgrade(application_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_application_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_cluster_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: rollback_cluster_upgrade(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: rollback_cluster_upgrade
  summary: 'Roll back the upgrade of a Service Fabric cluster.


    Roll back the code or configuration upgrade of a Service Fabric

    cluster.'
  syntax:
    content: rollback_cluster_upgrade(timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_cluster_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.set_upgrade_orchestration_service_state
  langs:
  - python
  module: azure.servicefabric.operations
  name: set_upgrade_orchestration_service_state(timeout=60, service_state=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: set_upgrade_orchestration_service_state
  summary: 'Update the service state of Service Fabric Upgrade Orchestration

    Service.


    Update the service state of Service Fabric Upgrade Orchestration

    Service. This API is internally used for support purposes.'
  syntax:
    content: set_upgrade_orchestration_service_state(timeout=60, service_state=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'The state of Service Fabric Upgrade

        Orchestration Service.'
      id: service_state
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'UpgradeOrchestrationServiceStateSummary or ClientRawResponse

        if raw=true'
      type:
      - azure.servicefabric.models.UpgradeOrchestrationServiceStateSummary
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.set_upgrade_orchestration_service_state
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_application_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_application_upgrade(application_id, application_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_application_upgrade
  summary: 'Starts upgrading an application in the Service Fabric cluster.


    Validates the supplied application upgrade parameters and starts

    upgrading the application if the parameters are valid.'
  syntax:
    content: start_application_upgrade(application_id, application_upgrade_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Parameters for an application

        upgrade.'
      id: application_upgrade_description
      isRequired: true
      type:
      - azure.servicefabric.models.ApplicationUpgradeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_application_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_chaos
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_chaos(chaos_parameters, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: start_chaos
  summary: 'Starts Chaos in the cluster.


    If Chaos is not already running in the cluster, it starts Chaos with

    the passed in Chaos parameters.

    If Chaos is already running when this call is made, the call fails with

    the error code FABRIC_E_CHAOS_ALREADY_RUNNING.

    Refer to the article [Induce controlled Chaos in Service Fabric

    clusters]([https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos))

    for more details.'
  syntax:
    content: start_chaos(chaos_parameters, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Describes all the parameters to configure a

        Chaos run.'
      id: chaos_parameters
      isRequired: true
      type:
      - azure.servicefabric.models.ChaosParameters
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_chaos
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_configuration_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_cluster_configuration_upgrade(cluster_configuration_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_cluster_configuration_upgrade
  summary: 'Start upgrading the configuration of a Service Fabric standalone

    cluster.


    Validate the supplied configuration upgrade parameters and start

    upgrading the cluster configuration if the parameters are valid.'
  syntax:
    content: start_cluster_configuration_upgrade(cluster_configuration_upgrade_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Parameters for a

        standalone cluster configuration upgrade.'
      id: cluster_configuration_upgrade_description
      isRequired: true
      type:
      - azure.servicefabric.models.ClusterConfigurationUpgradeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_configuration_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_cluster_upgrade(start_cluster_upgrade_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: start_cluster_upgrade
  summary: 'Start upgrading the code or configuration version of a Service Fabric

    cluster.


    Validate the supplied upgrade parameters and start upgrading the code

    or configuration version of a Service Fabric cluster if the parameters

    are valid.'
  syntax:
    content: start_cluster_upgrade(start_cluster_upgrade_description, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Describes the parameters for

        starting a cluster upgrade.'
      id: start_cluster_upgrade_description
      isRequired: true
      type:
      - azure.servicefabric.models.StartClusterUpgradeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_compose_deployment_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_compose_deployment_upgrade(deployment_name, compose_deployment_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_compose_deployment_upgrade
  summary: 'Starts upgrading a compose deployment in the Service Fabric cluster.


    Validates the supplied upgrade parameters and starts upgrading the

    deployment if the parameters are valid.'
  syntax:
    content: start_compose_deployment_upgrade(deployment_name, compose_deployment_upgrade_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: 'Parameters for

        upgrading compose deployment.'
      id: compose_deployment_upgrade_description
      isRequired: true
      type:
      - azure.servicefabric.models.ComposeDeploymentUpgradeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_compose_deployment_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_data_loss
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_data_loss(service_id, partition_id, operation_id, data_loss_mode, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_data_loss
  summary: 'This API will induce data loss for the specified partition. It will

    trigger a call to the OnDataLossAsync API of the partition.


    This API will induce data loss for the specified partition. It will

    trigger a call to the OnDataLoss API of the partition.

    Actual data loss will depend on the specified DataLossMode.

    - PartialDataLoss - Only a quorum of replicas are removed and

    OnDataLoss is triggered for the partition but actual data loss depends

    on the presence of in-flight replication.

    - FullDataLoss - All replicas are removed hence all data is lost and

    OnDataLoss is triggered.

    This API should only be called with a stateful service as the target.

    Calling this API with a system service as the target is not advised.

    Note:  Once this API has been called, it cannot be reversed. Calling

    CancelOperation will only stop execution and clean up internal system

    state.

    It will not restore data if the command has progressed far enough to

    cause data loss.

    Call the GetDataLossProgress API with the same OperationId to return

    information on the operation started with this API.'
  syntax:
    content: start_data_loss(service_id, partition_id, operation_id, data_loss_mode,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - description: 'This enum is passed to the StartDataLoss API to

        indicate what type of data loss to induce. Possible values include:

        ''Invalid'', ''PartialDataLoss'', ''FullDataLoss'''
      id: data_loss_mode
      isRequired: true
      type:
      - str
      - azure.servicefabric.models.DataLossMode
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_data_loss
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_node_transition
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_node_transition(node_name, operation_id, node_transition_type, node_instance_id,
    stop_duration_in_seconds, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_node_transition
  summary: 'Starts or stops a cluster node.


    Starts or stops a cluster node.  A cluster node is a process, not the

    OS instance itself.  To start a node, pass in "Start" for the

    NodeTransitionType parameter.

    To stop a node, pass in "Stop" for the NodeTransitionType parameter.

    This API starts the operation - when the API returns the node may not

    have finished transitioning yet.

    Call GetNodeTransitionProgress with the same OperationId to get the

    progress of the operation.'
  syntax:
    content: start_node_transition(node_name, operation_id, node_transition_type,
      node_instance_id, stop_duration_in_seconds, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the node.
      id: node_name
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - description: 'Indicates the type of transition to

        perform.  NodeTransitionType.Start will start a stopped node.

        NodeTransitionType.Stop will stop a node that is up. Possible values

        include: ''Invalid'', ''Start'', ''Stop'''
      id: node_transition_type
      isRequired: true
      type:
      - str
      - azure.servicefabric.models.NodeTransitionType
    - description: 'The node instance ID of the target node.

        This can be determined through GetNodeInfo API.'
      id: node_instance_id
      isRequired: true
      type:
      - str
    - description: 'The duration, in seconds, to keep the

        node stopped.  The minimum value is 600, the maximum is 14400.  After

        this time expires, the node will automatically come back up.'
      id: stop_duration_in_seconds
      isRequired: true
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_node_transition
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_partition_restart
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_partition_restart(service_id, partition_id, operation_id, restart_partition_mode,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_partition_restart
  summary: 'This API will restart some or all replicas or instances of the

    specified partition.


    This API is useful for testing failover.

    If used to target a stateless service partition, RestartPartitionMode

    must be AllReplicasOrInstances.

    Call the GetPartitionRestartProgress API using the same OperationId to

    get the progress.'
  syntax:
    content: start_partition_restart(service_id, partition_id, operation_id, restart_partition_mode,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - description: 'Describe which partitions to restart.

        Possible values include: ''Invalid'', ''AllReplicasOrInstances'',

        ''OnlyActiveSecondaries'''
      id: restart_partition_mode
      isRequired: true
      type:
      - str
      - azure.servicefabric.models.RestartPartitionMode
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_partition_restart
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_quorum_loss
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_quorum_loss(service_id, partition_id, operation_id, quorum_loss_mode,
    quorum_loss_duration, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: start_quorum_loss
  summary: 'Induces quorum loss for a given stateful service partition.


    This API is useful for a temporary quorum loss situation on your

    service.

    Call the GetQuorumLossProgress API with the same OperationId to return

    information on the operation started with this API.

    This can only be called on stateful persisted (HasPersistedState==true)

    services.  Do not use this API on stateless services or stateful

    in-memory only services.'
  syntax:
    content: start_quorum_loss(service_id, partition_id, operation_id, quorum_loss_mode,
      quorum_loss_duration, timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - description: 'A GUID that identifies a call of this API.  This

        is passed into the corresponding GetProgress API'
      id: operation_id
      isRequired: true
      type:
      - str
    - description: 'This enum is passed to the StartQuorumLoss

        API to indicate what type of quorum loss to induce. Possible values

        include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas'''
      id: quorum_loss_mode
      isRequired: true
      type:
      - str
      - azure.servicefabric.models.QuorumLossMode
    - description: 'The amount of time for which the

        partition will be kept in quorum loss.  This must be specified in

        seconds.'
      id: quorum_loss_duration
      isRequired: true
      type:
      - int
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_quorum_loss
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_rollback_compose_deployment_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: start_rollback_compose_deployment_upgrade(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: start_rollback_compose_deployment_upgrade
  summary: 'Starts rolling back a compose deployment upgrade in the Service Fabric

    cluster.


    Rollback a service fabric compose deployment upgrade.'
  syntax:
    content: start_rollback_compose_deployment_upgrade(deployment_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The identity of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_rollback_compose_deployment_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.stop_chaos
  langs:
  - python
  module: azure.servicefabric.operations
  name: stop_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: stop_chaos
  summary: 'Stops Chaos if it is running in the cluster and put the Chaos Schedule

    in a stopped state.


    Stops Chaos from executing new faults. In-flight faults will continue

    to execute until they are complete. The current Chaos Schedule is put

    into a stopped state.

    Once a schedule is stopped, it will stay in the stopped state and not

    be used to Chaos Schedule new runs of Chaos. A new Chaos Schedule must

    be set in order to resume scheduling.'
  syntax:
    content: stop_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.stop_chaos
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.submit_property_batch
  langs:
  - python
  module: azure.servicefabric.operations
  name: submit_property_batch(name_id, timeout=60, operations=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: submit_property_batch
  summary: 'Submits a property batch.


    Submits a batch of property operations. Either all or none of the

    operations will be committed.'
  syntax:
    content: submit_property_batch(name_id, timeout=60, operations=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The Service Fabric name, without the ''fabric:'' URI

        scheme.'
      id: name_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'A list of the property batch operations to be

        executed.'
      id: operations
      type:
      - list[azure.servicefabric.models.PropertyBatchOperation]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PropertyBatchInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.PropertyBatchInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.submit_property_batch
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_application_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: suspend_application_backup(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: suspend_application_backup
  summary: 'Suspends periodic backup for the specified Service Fabric application.


    The application which is configured to take periodic backups, is

    suspended for taking further backups till it is resumed again. This

    operation applies to the entire application''s hierarchy. It means all

    the services and partitions under this application are now suspended

    for backup.'
  syntax:
    content: suspend_application_backup(application_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_application_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_partition_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: suspend_partition_backup(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: suspend_partition_backup
  summary: 'Suspends periodic backup for the specified partition.


    The partition which is configured to take periodic backups, is

    suspended for taking further backups till it is resumed again.'
  syntax:
    content: suspend_partition_backup(partition_id, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The identity of the partition.
      id: partition_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_partition_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_service_backup
  langs:
  - python
  module: azure.servicefabric.operations
  name: suspend_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: suspend_service_backup
  summary: 'Suspends periodic backup for the specified Service Fabric service.


    The service which is configured to take periodic backups, is suspended

    for taking further backups till it is resumed again. This operation

    applies to the entire service''s hierarchy. It means all the partitions

    under this service are now suspended for backup.'
  syntax:
    content: suspend_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_service_backup
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.toggle_verbose_service_placement_health_reporting
  langs:
  - python
  module: azure.servicefabric.operations
  name: toggle_verbose_service_placement_health_reporting(enabled, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: toggle_verbose_service_placement_health_reporting
  summary: 'Changes the verbosity of service placement health reporting.


    If verbosity is set to true, then detailed health reports will be

    generated when replicas cannot be placed or dropped.

    If verbosity is set to false, then no health reports will be generated

    when replicas cannot be placed or dropped.'
  syntax:
    content: toggle_verbose_service_placement_health_reporting(enabled, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The verbosity of service placement health reporting.
      id: enabled
      isRequired: true
      type:
      - bool
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.toggle_verbose_service_placement_health_reporting
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_application_type
  langs:
  - python
  module: azure.servicefabric.operations
  name: unprovision_application_type(application_type_name, application_type_version,
    timeout=60, async_parameter=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: unprovision_application_type
  summary: 'Removes or unregisters a Service Fabric application type from the

    cluster.


    This operation can only be performed if all application instances of

    the application type have been deleted. Once the application type is

    unregistered, no new application instances can be created for this

    particular application type.'
  syntax:
    content: unprovision_application_type(application_type_name, application_type_version,
      timeout=60, async_parameter=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the application type.
      id: application_type_name
      isRequired: true
      type:
      - str
    - description: 'The version of the application type

        as defined in the application manifest.'
      id: application_type_version
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: 'The flag indicating whether or not unprovision

        should occur asynchronously. When set to true, the unprovision

        operation returns when the request is accepted by the system, and the

        unprovision operation continues without any timeout limit. The default

        value is false. However, we recommend setting it to true for large

        application packages that were provisioned.'
      id: async_parameter
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_application_type
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_cluster
  langs:
  - python
  module: azure.servicefabric.operations
  name: unprovision_cluster(timeout=60, code_version=None, config_version=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: unprovision_cluster
  summary: 'Unprovision the code or configuration packages of a Service Fabric

    cluster.


    It is supported to unprovision code and configuration separately.'
  syntax:
    content: unprovision_cluster(timeout=60, code_version=None, config_version=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: The cluster code package version.
      id: code_version
      type:
      - str
    - defaultValue: None
      description: The cluster manifest version.
      id: config_version
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_cluster
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_application_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_application_upgrade(application_id, application_upgrade_update_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: update_application_upgrade
  summary: 'Updates an ongoing application upgrade in the Service Fabric cluster.


    Updates the parameters of an ongoing application upgrade from the ones

    specified at the time of starting the application upgrade. This may be

    required to mitigate stuck application upgrades due to incorrect

    parameters or issues in the application to make progress.'
  syntax:
    content: update_application_upgrade(application_id, application_upgrade_update_description,
      timeout=60, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The identity of the application. This is

        typically the full name of the application without the ''fabric:'' URI

        scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the application name is "fabric:/myapp/app1", the

        application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in

        previous versions.'
      id: application_id
      isRequired: true
      type:
      - str
    - description: 'Parameters for updating

        an existing application upgrade.'
      id: application_upgrade_update_description
      isRequired: true
      type:
      - azure.servicefabric.models.ApplicationUpgradeUpdateDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_application_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_backup_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_backup_policy(backup_policy_description, backup_policy_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: update_backup_policy
  summary: 'Updates the backup policy.


    Updates the backup policy identified by {backupPolicyName}.'
  syntax:
    content: update_backup_policy(backup_policy_description, backup_policy_name, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Describes the backup policy.
      id: backup_policy_description
      isRequired: true
      type:
      - azure.servicefabric.models.BackupPolicyDescription
    - description: The name of the backup policy.
      id: backup_policy_name
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_backup_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_cluster_upgrade
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_cluster_upgrade(update_cluster_upgrade_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update_cluster_upgrade
  summary: 'Update the upgrade parameters of a Service Fabric cluster upgrade.


    Update the upgrade parameters used during a Service Fabric cluster

    upgrade.'
  syntax:
    content: update_cluster_upgrade(update_cluster_upgrade_description, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Parameters for updating a

        cluster upgrade.'
      id: update_cluster_upgrade_description
      isRequired: true
      type:
      - azure.servicefabric.models.UpdateClusterUpgradeDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_cluster_upgrade
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_execution_state
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_repair_execution_state(repair_task, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: update_repair_execution_state
  summary: 'Updates the execution state of a repair task.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: update_repair_execution_state(repair_task, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Describes the repair task to be created or

        updated.'
      id: repair_task
      isRequired: true
      type:
      - azure.servicefabric.models.RepairTask
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RepairTaskUpdateInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RepairTaskUpdateInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_execution_state
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_task_health_policy
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_repair_task_health_policy(repair_task_update_health_policy_description,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: update_repair_task_health_policy
  summary: 'Updates the health policy of the given repair task.


    This API supports the Service Fabric platform; it is not meant to be

    used directly from your code.'
  syntax:
    content: update_repair_task_health_policy(repair_task_update_health_policy_description,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Describes the

        repair task healthy policy to be updated.'
      id: repair_task_update_health_policy_description
      isRequired: true
      type:
      - azure.servicefabric.models.RepairTaskUpdateHealthPolicyDescription
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RepairTaskUpdateInfo or ClientRawResponse if raw=true
      type:
      - azure.servicefabric.models.RepairTaskUpdateInfo
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_task_health_policy
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_service
  langs:
  - python
  module: azure.servicefabric.operations
  name: update_service(service_id, service_update_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update_service
  summary: 'Updates a Service Fabric service using the specified update

    description.


    This API allows updating properties of a running Service Fabric

    service. The set of properties that can be updated are a subset of the

    properties that were specified at the time of creating the service. The

    current set of properties can be obtained using *GetServiceDescription*

    API. Note that updating the properties of a running service is

    different than upgrading your application using

    *StartApplicationUpgrade* API. The upgrade is a long running background

    operation that involves moving the application from one version to

    another, one upgrade domain at a time, whereas update applies the new

    properties immediately to the service.'
  syntax:
    content: update_service(service_id, service_update_description, timeout=60, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The identity of the service. This ID is typically

        the full name of the service without the ''fabric:'' URI scheme.

        Starting from version 6.0, hierarchical names are delimited with the

        "~" character.

        For example, if the service name is "fabric:/myapp/app1/svc1", the

        service identity would be "myapp~app1~svc1" in 6.0+ and

        "myapp/app1/svc1" in previous versions.'
      id: service_id
      isRequired: true
      type:
      - str
    - description: 'The information necessary to update

        a service.'
      id: service_update_description
      isRequired: true
      type:
      - azure.servicefabric.models.ServiceUpdateDescription
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_service
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file
  langs:
  - python
  module: azure.servicefabric.operations
  name: upload_file(content_path, timeout=60, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: upload_file
  summary: 'Uploads contents of the file to the image store.


    Uploads contents of the file to the image store. Use this API if the

    file is small enough to upload again if the connection fails. The

    file''s data needs to be added to the request body. The contents will be

    uploaded to the specified path. Image store service uses a mark file to

    indicate the availability of the folder. The mark file is an empty file

    named "_.dir". The mark file is generated by the image store service

    when all files in a folder are uploaded. When using File-by-File

    approach to upload application package in REST, the image store service

    isn''t aware of the file hierarchy of the application package; you need

    to create a mark file per folder and upload it last, to let the image

    store service know that the folder is complete.'
  syntax:
    content: upload_file(content_path, timeout=60, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file
- class: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  exceptions:
  - type: azure.servicefabric.models.FabricErrorException
  fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file_chunk
  langs:
  - python
  module: azure.servicefabric.operations
  name: upload_file_chunk(content_path, session_id, content_range, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: upload_file_chunk
  summary: 'Uploads a file chunk to the image store relative path.


    Uploads a file chunk to the image store with the specified upload

    session ID and image store relative path. This API allows user to

    resume the file upload operation. user doesn''t have to restart the file

    upload from scratch whenever there is a network interruption. Use this

    option if the file size is large.

    To perform a resumable file upload, user need to break the file into

    multiple chunks and upload these chunks to the image store one-by-one.

    Chunks don''t have to be uploaded in order. If the file represented by

    the image store relative path already exists, it will be overwritten

    when the upload session commits.'
  syntax:
    content: upload_file_chunk(content_path, session_id, content_range, timeout=60,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Relative path to file or folder in the image

        store from its root.'
      id: content_path
      isRequired: true
      type:
      - str
    - description: 'A GUID generated by the user for a file uploading.

        It identifies an image store upload session which keeps track of all

        file chunks until it is committed.'
      id: session_id
      isRequired: true
      type:
      - str
    - description: 'When uploading file chunks to the image store,

        the Content-Range header field need to be configured and sent with a

        request. The format should looks like "bytes

        {First-Byte-Position}-{Last-Byte-Position}/{File-Length}". For

        example, Content-Range:bytes 300-5000/20000 indicates that user is

        sending bytes 300 through 5,000 and the total file length is 20,000

        bytes.'
      id: content_range
      isRequired: true
      type:
      - str
    - defaultValue: '60'
      description: 'The server timeout for performing the operation in

        seconds. This timeout specifies the time duration that the client is

        willing to wait for the requested operation to complete. The default

        value for this parameter is 60 seconds.'
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file_chunk
references:
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.add_configuration_parameter_overrides
  isExternal: false
  name: add_configuration_parameter_overrides(node_name, config_parameter_override_list,
    force=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.add_configuration_parameter_overrides
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.backup_partition
  isExternal: false
  name: backup_partition(partition_id, backup_timeout=10, timeout=60, backup_storage=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.backup_partition
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_operation
  isExternal: false
  name: cancel_operation(operation_id, force=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_operation
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_repair_task
  isExternal: false
  name: cancel_repair_task(repair_task_cancel_description, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.cancel_repair_task
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.commit_image_store_upload_session
  isExternal: false
  name: commit_image_store_upload_session(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.commit_image_store_upload_session
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.copy_image_store_content
  isExternal: false
  name: copy_image_store_content(image_store_copy_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.copy_image_store_content
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_application
  isExternal: false
  name: create_application(application_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_application
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_backup_policy
  isExternal: false
  name: create_backup_policy(backup_policy_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_backup_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_compose_deployment
  isExternal: false
  name: create_compose_deployment(create_compose_deployment_description, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_compose_deployment
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_name
  isExternal: false
  name: create_name(name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_repair_task
  isExternal: false
  name: create_repair_task(repair_task, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_repair_task
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service
  isExternal: false
  name: create_service(application_id, service_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service_from_template
  isExternal: false
  name: create_service_from_template(application_id, service_from_template_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.create_service_from_template
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_application
  isExternal: false
  name: delete_application(application_id, force_remove=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_application
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_backup_policy
  isExternal: false
  name: delete_backup_policy(backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_backup_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_content
  isExternal: false
  name: delete_image_store_content(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_content
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_upload_session
  isExternal: false
  name: delete_image_store_upload_session(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_image_store_upload_session
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_name
  isExternal: false
  name: delete_name(name_id, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_property
  isExternal: false
  name: delete_property(name_id, property_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_property
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_repair_task
  isExternal: false
  name: delete_repair_task(task_id, version=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_repair_task
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_service
  isExternal: false
  name: delete_service(service_id, force_remove=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.delete_service
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.deploy_service_package_to_node
  isExternal: false
  name: deploy_service_package_to_node(node_name, deploy_service_package_to_node_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.deploy_service_package_to_node
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_application_backup
  isExternal: false
  name: disable_application_backup(application_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_application_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_node
  isExternal: false
  name: disable_node(node_name, timeout=60, deactivation_intent=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_node
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_partition_backup
  isExternal: false
  name: disable_partition_backup(partition_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_partition_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_service_backup
  isExternal: false
  name: disable_service_backup(service_id, clean_backup, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.disable_service_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_application_backup
  isExternal: false
  name: enable_application_backup(application_id, backup_policy_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_application_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_node
  isExternal: false
  name: enable_node(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_node
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_partition_backup
  isExternal: false
  name: enable_partition_backup(partition_id, backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_partition_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_service_backup
  isExternal: false
  name: enable_service_backup(service_id, backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.enable_service_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.force_approve_repair_task
  isExternal: false
  name: force_approve_repair_task(task_id, version=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.force_approve_repair_task
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_aad_metadata
  isExternal: false
  name: get_aad_metadata(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_aad_metadata
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_all_entities_backed_up_by_policy
  isExternal: false
  name: get_all_entities_backed_up_by_policy(backup_policy_name, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_all_entities_backed_up_by_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_configuration_info
  isExternal: false
  name: get_application_backup_configuration_info(application_id, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_configuration_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_list
  isExternal: false
  name: get_application_backup_list(application_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, continuation_token=None, max_results=0, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_backup_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_event_list
  isExternal: false
  name: get_application_event_list(application_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health
  isExternal: false
  name: get_application_health(application_id, events_health_state_filter=0, deployed_applications_health_state_filter=0,
    services_health_state_filter=0, exclude_health_statistics=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health_using_policy
  isExternal: false
  name: get_application_health_using_policy(application_id, events_health_state_filter=0,
    deployed_applications_health_state_filter=0, services_health_state_filter=0, exclude_health_statistics=False,
    application_health_policy=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info
  isExternal: false
  name: get_application_info(application_id, exclude_application_parameters=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info_list
  isExternal: false
  name: get_application_info_list(application_definition_kind_filter=0, application_type_name=None,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_load_info
  isExternal: false
  name: get_application_load_info(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_load_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_manifest
  isExternal: false
  name: get_application_manifest(application_type_name, application_type_version,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_manifest
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_name_info
  isExternal: false
  name: get_application_name_info(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_name_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list
  isExternal: false
  name: get_application_type_info_list(application_type_definition_kind_filter=0,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list_by_name
  isExternal: false
  name: get_application_type_info_list_by_name(application_type_name, application_type_version=None,
    exclude_application_parameters=False, continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_type_info_list_by_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_upgrade
  isExternal: false
  name: get_application_upgrade(application_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_application_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_applications_event_list
  isExternal: false
  name: get_applications_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_applications_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_by_name
  isExternal: false
  name: get_backup_policy_by_name(backup_policy_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_by_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_list
  isExternal: false
  name: get_backup_policy_list(continuation_token=None, max_results=0, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backup_policy_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backups_from_backup_location
  isExternal: false
  name: get_backups_from_backup_location(get_backup_by_storage_query_description,
    timeout=60, continuation_token=None, max_results=0, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_backups_from_backup_location
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos
  isExternal: false
  name: get_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_events
  isExternal: false
  name: get_chaos_events(continuation_token=None, start_time_utc=None, end_time_utc=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_events
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_schedule
  isExternal: false
  name: get_chaos_schedule(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_chaos_schedule
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration
  isExternal: false
  name: get_cluster_configuration(configuration_api_version, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration_upgrade_status
  isExternal: false
  name: get_cluster_configuration_upgrade_status(timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_configuration_upgrade_status
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_event_list
  isExternal: false
  name: get_cluster_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health
  isExternal: false
  name: get_cluster_health(nodes_health_state_filter=0, applications_health_state_filter=0,
    events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk
  isExternal: false
  name: get_cluster_health_chunk(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk_using_policy_and_advanced_filters
  isExternal: false
  name: get_cluster_health_chunk_using_policy_and_advanced_filters(cluster_health_chunk_query_description=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_chunk_using_policy_and_advanced_filters
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_using_policy
  isExternal: false
  name: get_cluster_health_using_policy(nodes_health_state_filter=0, applications_health_state_filter=0,
    events_health_state_filter=0, exclude_health_statistics=False, include_system_application_health_statistics=False,
    timeout=60, application_health_policy_map=None, cluster_health_policy=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_load
  isExternal: false
  name: get_cluster_load(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_load
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_manifest
  isExternal: false
  name: get_cluster_manifest(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_manifest
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_upgrade_progress
  isExternal: false
  name: get_cluster_upgrade_progress(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_upgrade_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_version
  isExternal: false
  name: get_cluster_version(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_cluster_version
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status
  isExternal: false
  name: get_compose_deployment_status(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status_list
  isExternal: false
  name: get_compose_deployment_status_list(continuation_token=None, max_results=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_status_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_upgrade_progress
  isExternal: false
  name: get_compose_deployment_upgrade_progress(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_compose_deployment_upgrade_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_configuration_overrides
  isExternal: false
  name: get_configuration_overrides(node_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_configuration_overrides
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_container_logs_deployed_on_node
  isExternal: false
  name: get_container_logs_deployed_on_node(node_name, application_id, service_manifest_name,
    code_package_name, tail=None, previous=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_container_logs_deployed_on_node
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_containers_event_list
  isExternal: false
  name: get_containers_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_containers_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_correlated_event_list
  isExternal: false
  name: get_correlated_event_list(event_instance_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_correlated_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_data_loss_progress
  isExternal: false
  name: get_data_loss_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_data_loss_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health
  isExternal: false
  name: get_deployed_application_health(node_name, application_id, events_health_state_filter=0,
    deployed_service_packages_health_state_filter=0, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health_using_policy
  isExternal: false
  name: get_deployed_application_health_using_policy(node_name, application_id, events_health_state_filter=0,
    deployed_service_packages_health_state_filter=0, application_health_policy=None,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info
  isExternal: false
  name: get_deployed_application_info(node_name, application_id, timeout=60, include_health_state=False,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info_list
  isExternal: false
  name: get_deployed_application_info_list(node_name, timeout=60, include_health_state=False,
    continuation_token=None, max_results=0, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_application_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_code_package_info_list
  isExternal: false
  name: get_deployed_code_package_info_list(node_name, application_id, service_manifest_name=None,
    code_package_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_code_package_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health
  isExternal: false
  name: get_deployed_service_package_health(node_name, application_id, service_package_name,
    events_health_state_filter=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health_using_policy
  isExternal: false
  name: get_deployed_service_package_health_using_policy(node_name, application_id,
    service_package_name, events_health_state_filter=0, application_health_policy=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list
  isExternal: false
  name: get_deployed_service_package_info_list(node_name, application_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list_by_name
  isExternal: false
  name: get_deployed_service_package_info_list_by_name(node_name, application_id,
    service_package_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_package_info_list_by_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info
  isExternal: false
  name: get_deployed_service_replica_detail_info(node_name, partition_id, replica_id,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info_by_partition_id
  isExternal: false
  name: get_deployed_service_replica_detail_info_by_partition_id(node_name, partition_id,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_detail_info_by_partition_id
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_info_list
  isExternal: false
  name: get_deployed_service_replica_info_list(node_name, application_id, partition_id=None,
    service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_replica_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_by_name
  isExternal: false
  name: get_deployed_service_type_info_by_name(node_name, application_id, service_type_name,
    service_manifest_name=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_by_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_list
  isExternal: false
  name: get_deployed_service_type_info_list(node_name, application_id, service_manifest_name=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_deployed_service_type_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_fault_operation_list
  isExternal: false
  name: get_fault_operation_list(type_filter=65535, state_filter=65535, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_fault_operation_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_content
  isExternal: false
  name: get_image_store_content(content_path, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_content
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_folder_size
  isExternal: false
  name: get_image_store_folder_size(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_folder_size
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_info
  isExternal: false
  name: get_image_store_info(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_content
  isExternal: false
  name: get_image_store_root_content(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_content
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_folder_size
  isExternal: false
  name: get_image_store_root_folder_size(timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_root_folder_size
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_id
  isExternal: false
  name: get_image_store_upload_session_by_id(session_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_id
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_path
  isExternal: false
  name: get_image_store_upload_session_by_path(content_path, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_image_store_upload_session_by_path
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_name_exists_info
  isExternal: false
  name: get_name_exists_info(name_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_name_exists_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_event_list
  isExternal: false
  name: get_node_event_list(node_name, start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health
  isExternal: false
  name: get_node_health(node_name, events_health_state_filter=0, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health_using_policy
  isExternal: false
  name: get_node_health_using_policy(node_name, events_health_state_filter=0, cluster_health_policy=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info
  isExternal: false
  name: get_node_info(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info_list
  isExternal: false
  name: get_node_info_list(continuation_token=None, node_status_filter='default',
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_load_info
  isExternal: false
  name: get_node_load_info(node_name, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_load_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_transition_progress
  isExternal: false
  name: get_node_transition_progress(node_name, operation_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_node_transition_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_nodes_event_list
  isExternal: false
  name: get_nodes_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_nodes_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_configuration_info
  isExternal: false
  name: get_partition_backup_configuration_info(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_configuration_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_list
  isExternal: false
  name: get_partition_backup_list(partition_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_progress
  isExternal: false
  name: get_partition_backup_progress(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_backup_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_event_list
  isExternal: false
  name: get_partition_event_list(partition_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health
  isExternal: false
  name: get_partition_health(partition_id, events_health_state_filter=0, replicas_health_state_filter=0,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health_using_policy
  isExternal: false
  name: get_partition_health_using_policy(partition_id, events_health_state_filter=0,
    replicas_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info
  isExternal: false
  name: get_partition_info(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info_list
  isExternal: false
  name: get_partition_info_list(service_id, continuation_token=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_load_information
  isExternal: false
  name: get_partition_load_information(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_load_information
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replica_event_list
  isExternal: false
  name: get_partition_replica_event_list(partition_id, replica_id, start_time_utc,
    end_time_utc, timeout=60, events_types_filter=None, exclude_analysis_events=None,
    skip_correlation_lookup=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replica_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replicas_event_list
  isExternal: false
  name: get_partition_replicas_event_list(partition_id, start_time_utc, end_time_utc,
    timeout=60, events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_replicas_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restart_progress
  isExternal: false
  name: get_partition_restart_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restart_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restore_progress
  isExternal: false
  name: get_partition_restore_progress(partition_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partition_restore_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partitions_event_list
  isExternal: false
  name: get_partitions_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_partitions_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info
  isExternal: false
  name: get_property_info(name_id, property_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info_list
  isExternal: false
  name: get_property_info_list(name_id, include_values=False, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_property_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_code_version_info_list
  isExternal: false
  name: get_provisioned_fabric_code_version_info_list(code_version=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_code_version_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_config_version_info_list
  isExternal: false
  name: get_provisioned_fabric_config_version_info_list(config_version=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_provisioned_fabric_config_version_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_quorum_loss_progress
  isExternal: false
  name: get_quorum_loss_progress(service_id, partition_id, operation_id, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_quorum_loss_progress
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_repair_task_list
  isExternal: false
  name: get_repair_task_list(task_id_filter=None, state_filter=None, executor_filter=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_repair_task_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health
  isExternal: false
  name: get_replica_health(partition_id, replica_id, events_health_state_filter=0,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health_using_policy
  isExternal: false
  name: get_replica_health_using_policy(partition_id, replica_id, events_health_state_filter=0,
    application_health_policy=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info
  isExternal: false
  name: get_replica_info(partition_id, replica_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info_list
  isExternal: false
  name: get_replica_info_list(partition_id, continuation_token=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_replica_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_configuration_info
  isExternal: false
  name: get_service_backup_configuration_info(service_id, continuation_token=None,
    max_results=0, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_configuration_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_list
  isExternal: false
  name: get_service_backup_list(service_id, timeout=60, latest=False, start_date_time_filter=None,
    end_date_time_filter=None, continuation_token=None, max_results=0, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_backup_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_description
  isExternal: false
  name: get_service_description(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_description
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_event_list
  isExternal: false
  name: get_service_event_list(service_id, start_time_utc, end_time_utc, timeout=60,
    events_types_filter=None, exclude_analysis_events=None, skip_correlation_lookup=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health
  isExternal: false
  name: get_service_health(service_id, events_health_state_filter=0, partitions_health_state_filter=0,
    exclude_health_statistics=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health_using_policy
  isExternal: false
  name: get_service_health_using_policy(service_id, events_health_state_filter=0,
    partitions_health_state_filter=0, application_health_policy=None, exclude_health_statistics=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_health_using_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info
  isExternal: false
  name: get_service_info(application_id, service_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info_list
  isExternal: false
  name: get_service_info_list(application_id, service_type_name=None, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_manifest
  isExternal: false
  name: get_service_manifest(application_type_name, application_type_version, service_manifest_name,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_manifest
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_name_info
  isExternal: false
  name: get_service_name_info(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_name_info
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_by_name
  isExternal: false
  name: get_service_type_info_by_name(application_type_name, application_type_version,
    service_type_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_by_name
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_list
  isExternal: false
  name: get_service_type_info_list(application_type_name, application_type_version,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_service_type_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_services_event_list
  isExternal: false
  name: get_services_event_list(start_time_utc, end_time_utc, timeout=60, events_types_filter=None,
    exclude_analysis_events=None, skip_correlation_lookup=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_services_event_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_sub_name_info_list
  isExternal: false
  name: get_sub_name_info_list(name_id, recursive=False, continuation_token=None,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_sub_name_info_list
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_unplaced_replica_information
  isExternal: false
  name: get_unplaced_replica_information(service_id, partition_id=None, only_query_primaries=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_unplaced_replica_information
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_upgrade_orchestration_service_state
  isExternal: false
  name: get_upgrade_orchestration_service_state(timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.get_upgrade_orchestration_service_state
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_container_api
  isExternal: false
  name: invoke_container_api(node_name, application_id, service_manifest_name, code_package_name,
    code_package_instance_id, container_api_request_body, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_container_api
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_command
  isExternal: false
  name: invoke_infrastructure_command(command, service_id=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_command
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_query
  isExternal: false
  name: invoke_infrastructure_query(command, service_id=None, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.invoke_infrastructure_query
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_primary_replica
  isExternal: false
  name: move_primary_replica(partition_id, node_name=None, ignore_constraints=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_primary_replica
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_secondary_replica
  isExternal: false
  name: move_secondary_replica(partition_id, current_node_name, new_node_name=None,
    ignore_constraints=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.move_secondary_replica
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.post_chaos_schedule
  isExternal: false
  name: post_chaos_schedule(timeout=60, version=None, schedule=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.post_chaos_schedule
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_application_type
  isExternal: false
  name: provision_application_type(provision_application_type_description_base_required_body_param,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_application_type
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_cluster
  isExternal: false
  name: provision_cluster(timeout=60, code_file_path=None, cluster_manifest_file_path=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.provision_cluster
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.put_property
  isExternal: false
  name: put_property(name_id, property_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.put_property
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_all_partitions
  isExternal: false
  name: recover_all_partitions(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_all_partitions
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_partition
  isExternal: false
  name: recover_partition(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_partition
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_service_partitions
  isExternal: false
  name: recover_service_partitions(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_service_partitions
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_system_partitions
  isExternal: false
  name: recover_system_partitions(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.recover_system_partitions
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_compose_deployment
  isExternal: false
  name: remove_compose_deployment(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_compose_deployment
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_configuration_overrides
  isExternal: false
  name: remove_configuration_overrides(node_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_configuration_overrides
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_node_state
  isExternal: false
  name: remove_node_state(node_name, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_node_state
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_replica
  isExternal: false
  name: remove_replica(node_name, partition_id, replica_id, force_remove=None, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.remove_replica
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_application_health
  isExternal: false
  name: report_application_health(application_id, health_information, immediate=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_application_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_cluster_health
  isExternal: false
  name: report_cluster_health(health_information, immediate=False, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_cluster_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_application_health
  isExternal: false
  name: report_deployed_application_health(node_name, application_id, health_information,
    immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_application_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_service_package_health
  isExternal: false
  name: report_deployed_service_package_health(node_name, application_id, service_package_name,
    health_information, immediate=False, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_deployed_service_package_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_node_health
  isExternal: false
  name: report_node_health(node_name, health_information, immediate=False, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_node_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_partition_health
  isExternal: false
  name: report_partition_health(partition_id, health_information, immediate=False,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_partition_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_replica_health
  isExternal: false
  name: report_replica_health(partition_id, replica_id, health_information, service_kind='Stateful',
    immediate=False, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_replica_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_service_health
  isExternal: false
  name: report_service_health(service_id, health_information, immediate=False, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.report_service_health
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.reset_partition_load
  isExternal: false
  name: reset_partition_load(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.reset_partition_load
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resolve_service
  isExternal: false
  name: resolve_service(service_id, partition_key_type=None, partition_key_value=None,
    previous_rsp_version=None, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resolve_service
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_deployed_code_package
  isExternal: false
  name: restart_deployed_code_package(node_name, application_id, restart_deployed_code_package_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_deployed_code_package
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_node
  isExternal: false
  name: restart_node(node_name, node_instance_id='0', timeout=60, create_fabric_dump='False',
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_node
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_replica
  isExternal: false
  name: restart_replica(node_name, partition_id, replica_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restart_replica
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restore_partition
  isExternal: false
  name: restore_partition(partition_id, restore_partition_description, restore_timeout=10,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.restore_partition
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_backup
  isExternal: false
  name: resume_application_backup(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_upgrade
  isExternal: false
  name: resume_application_upgrade(application_id, upgrade_domain_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_application_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_cluster_upgrade
  isExternal: false
  name: resume_cluster_upgrade(upgrade_domain, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_cluster_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_partition_backup
  isExternal: false
  name: resume_partition_backup(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_partition_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_service_backup
  isExternal: false
  name: resume_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.resume_service_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_application_upgrade
  isExternal: false
  name: rollback_application_upgrade(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_application_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_cluster_upgrade
  isExternal: false
  name: rollback_cluster_upgrade(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.rollback_cluster_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.set_upgrade_orchestration_service_state
  isExternal: false
  name: set_upgrade_orchestration_service_state(timeout=60, service_state=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.set_upgrade_orchestration_service_state
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_application_upgrade
  isExternal: false
  name: start_application_upgrade(application_id, application_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_application_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_chaos
  isExternal: false
  name: start_chaos(chaos_parameters, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_chaos
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_configuration_upgrade
  isExternal: false
  name: start_cluster_configuration_upgrade(cluster_configuration_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_configuration_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_upgrade
  isExternal: false
  name: start_cluster_upgrade(start_cluster_upgrade_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_cluster_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_compose_deployment_upgrade
  isExternal: false
  name: start_compose_deployment_upgrade(deployment_name, compose_deployment_upgrade_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_compose_deployment_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_data_loss
  isExternal: false
  name: start_data_loss(service_id, partition_id, operation_id, data_loss_mode, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_data_loss
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_node_transition
  isExternal: false
  name: start_node_transition(node_name, operation_id, node_transition_type, node_instance_id,
    stop_duration_in_seconds, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_node_transition
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_partition_restart
  isExternal: false
  name: start_partition_restart(service_id, partition_id, operation_id, restart_partition_mode,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_partition_restart
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_quorum_loss
  isExternal: false
  name: start_quorum_loss(service_id, partition_id, operation_id, quorum_loss_mode,
    quorum_loss_duration, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_quorum_loss
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_rollback_compose_deployment_upgrade
  isExternal: false
  name: start_rollback_compose_deployment_upgrade(deployment_name, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.start_rollback_compose_deployment_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.stop_chaos
  isExternal: false
  name: stop_chaos(timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.stop_chaos
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.submit_property_batch
  isExternal: false
  name: submit_property_batch(name_id, timeout=60, operations=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.submit_property_batch
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_application_backup
  isExternal: false
  name: suspend_application_backup(application_id, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_application_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_partition_backup
  isExternal: false
  name: suspend_partition_backup(partition_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_partition_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_service_backup
  isExternal: false
  name: suspend_service_backup(service_id, timeout=60, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.suspend_service_backup
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.toggle_verbose_service_placement_health_reporting
  isExternal: false
  name: toggle_verbose_service_placement_health_reporting(enabled, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.toggle_verbose_service_placement_health_reporting
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_application_type
  isExternal: false
  name: unprovision_application_type(application_type_name, application_type_version,
    timeout=60, async_parameter=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_application_type
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_cluster
  isExternal: false
  name: unprovision_cluster(timeout=60, code_version=None, config_version=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.unprovision_cluster
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_application_upgrade
  isExternal: false
  name: update_application_upgrade(application_id, application_upgrade_update_description,
    timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_application_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_backup_policy
  isExternal: false
  name: update_backup_policy(backup_policy_description, backup_policy_name, timeout=60,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_backup_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_cluster_upgrade
  isExternal: false
  name: update_cluster_upgrade(update_cluster_upgrade_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_cluster_upgrade
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_execution_state
  isExternal: false
  name: update_repair_execution_state(repair_task, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_execution_state
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_task_health_policy
  isExternal: false
  name: update_repair_task_health_policy(repair_task_update_health_policy_description,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_repair_task_health_policy
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_service
  isExternal: false
  name: update_service(service_id, service_update_description, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.update_service
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file
  isExternal: false
  name: upload_file(content_path, timeout=60, custom_headers=None, raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file
- fullName: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file_chunk
  isExternal: false
  name: upload_file_chunk(content_path, session_id, content_range, timeout=60, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin
  uid: azure.servicefabric.operations.ServiceFabricClientAPIsOperationsMixin.upload_file_chunk
- fullName: list[azure.servicefabric.models.ConfigParameterOverride]
  name: list[ConfigParameterOverride]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ConfigParameterOverride
    name: ConfigParameterOverride
    uid: azure.servicefabric.models.ConfigParameterOverride
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ConfigParameterOverride]
- fullName: list[azure.servicefabric.models.ApplicationEvent]
  name: list[ApplicationEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ApplicationEvent
    name: ApplicationEvent
    uid: azure.servicefabric.models.ApplicationEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ApplicationEvent]
- fullName: list[azure.servicefabric.models.ClusterEvent]
  name: list[ClusterEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ClusterEvent
    name: ClusterEvent
    uid: azure.servicefabric.models.ClusterEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ClusterEvent]
- fullName: list[azure.servicefabric.models.ApplicationHealthPolicyMapItem]
  name: list[ApplicationHealthPolicyMapItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ApplicationHealthPolicyMapItem
    name: ApplicationHealthPolicyMapItem
    uid: azure.servicefabric.models.ApplicationHealthPolicyMapItem
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ApplicationHealthPolicyMapItem]
- fullName: list[azure.servicefabric.models.ContainerInstanceEvent]
  name: list[ContainerInstanceEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ContainerInstanceEvent
    name: ContainerInstanceEvent
    uid: azure.servicefabric.models.ContainerInstanceEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ContainerInstanceEvent]
- fullName: list[azure.servicefabric.models.FabricEvent]
  name: list[FabricEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.FabricEvent
    name: FabricEvent
    uid: azure.servicefabric.models.FabricEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.FabricEvent]
- fullName: list[azure.servicefabric.models.DeployedCodePackageInfo]
  name: list[DeployedCodePackageInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.DeployedCodePackageInfo
    name: DeployedCodePackageInfo
    uid: azure.servicefabric.models.DeployedCodePackageInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.DeployedCodePackageInfo]
- fullName: list[azure.servicefabric.models.DeployedServicePackageInfo]
  name: list[DeployedServicePackageInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.DeployedServicePackageInfo
    name: DeployedServicePackageInfo
    uid: azure.servicefabric.models.DeployedServicePackageInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.DeployedServicePackageInfo]
- fullName: list[azure.servicefabric.models.DeployedServiceReplicaInfo]
  name: list[DeployedServiceReplicaInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.DeployedServiceReplicaInfo
    name: DeployedServiceReplicaInfo
    uid: azure.servicefabric.models.DeployedServiceReplicaInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.DeployedServiceReplicaInfo]
- fullName: list[azure.servicefabric.models.DeployedServiceTypeInfo]
  name: list[DeployedServiceTypeInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.DeployedServiceTypeInfo
    name: DeployedServiceTypeInfo
    uid: azure.servicefabric.models.DeployedServiceTypeInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.DeployedServiceTypeInfo]
- fullName: list[azure.servicefabric.models.OperationStatus]
  name: list[OperationStatus]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.OperationStatus
    name: OperationStatus
    uid: azure.servicefabric.models.OperationStatus
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.OperationStatus]
- fullName: list[azure.servicefabric.models.NodeEvent]
  name: list[NodeEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.NodeEvent
    name: NodeEvent
    uid: azure.servicefabric.models.NodeEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.NodeEvent]
- fullName: list[azure.servicefabric.models.PartitionEvent]
  name: list[PartitionEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.PartitionEvent
    name: PartitionEvent
    uid: azure.servicefabric.models.PartitionEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.PartitionEvent]
- fullName: list[azure.servicefabric.models.ReplicaEvent]
  name: list[ReplicaEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ReplicaEvent
    name: ReplicaEvent
    uid: azure.servicefabric.models.ReplicaEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ReplicaEvent]
- fullName: list[azure.servicefabric.models.FabricCodeVersionInfo]
  name: list[FabricCodeVersionInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.FabricCodeVersionInfo
    name: FabricCodeVersionInfo
    uid: azure.servicefabric.models.FabricCodeVersionInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.FabricCodeVersionInfo]
- fullName: list[azure.servicefabric.models.FabricConfigVersionInfo]
  name: list[FabricConfigVersionInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.FabricConfigVersionInfo
    name: FabricConfigVersionInfo
    uid: azure.servicefabric.models.FabricConfigVersionInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.FabricConfigVersionInfo]
- fullName: list[azure.servicefabric.models.RepairTask]
  name: list[RepairTask]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.RepairTask
    name: RepairTask
    uid: azure.servicefabric.models.RepairTask
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.RepairTask]
- fullName: list[azure.servicefabric.models.ServiceEvent]
  name: list[ServiceEvent]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ServiceEvent
    name: ServiceEvent
    uid: azure.servicefabric.models.ServiceEvent
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ServiceEvent]
- fullName: list[azure.servicefabric.models.ServiceTypeInfo]
  name: list[ServiceTypeInfo]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.ServiceTypeInfo
    name: ServiceTypeInfo
    uid: azure.servicefabric.models.ServiceTypeInfo
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.ServiceTypeInfo]
- fullName: list[azure.servicefabric.models.PropertyBatchOperation]
  name: list[PropertyBatchOperation]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicefabric.models.PropertyBatchOperation
    name: PropertyBatchOperation
    uid: azure.servicefabric.models.PropertyBatchOperation
  - fullName: ']'
    name: ']'
  uid: list[azure.servicefabric.models.PropertyBatchOperation]
