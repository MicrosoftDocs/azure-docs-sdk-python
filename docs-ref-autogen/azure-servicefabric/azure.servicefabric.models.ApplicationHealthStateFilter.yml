### YamlMime:PythonClass
uid: azure.servicefabric.models.ApplicationHealthStateFilter
name: ApplicationHealthStateFilter
fullName: azure.servicefabric.models.ApplicationHealthStateFilter
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Defines matching criteria to determine whether a application should be

  included in the cluster health chunk.

  One filter can match zero, one or multiple applications, depending on its

  properties.'
constructor:
  syntax: 'ApplicationHealthStateFilter(*, application_name_filter: str = None, application_type_name_filter:
    str = None, health_state_filter: int = 0, service_filters=None, deployed_application_filters=None,
    **kwargs)'
  parameters:
  - name: application_name_filter
    description: 'The name of the application that matches

      the filter, as a fabric uri. The filter is applied only to the specified

      application, if it exists.

      If the application doesn''t exist, no application is returned in the

      cluster health chunk based on this filter.

      If the application exists, it is included in the cluster health chunk if

      it respects the other filter properties.

      If not specified, all applications are matched against the other filter

      members, like health state filter.'
    isRequired: true
    types:
    - <xref:str>
  - name: application_type_name_filter
    description: 'The name of the application type that

      matches the filter.

      If specified, the filter is applied only to applications of the selected

      application type, if any exists.

      If no applications of the specified application type exists, no

      application is returned in the cluster health chunk based on this filter.

      Each application of the specified application type is included in the

      cluster health chunk if it respects the other filter properties.

      If not specified, all applications are matched against the other filter

      members, like health state filter.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_state_filter
    description: 'The filter for the health state of the

      applications. It allows selecting applications if they match the desired

      health states.

      The possible values are integer value of one of the following health

      states. Only applications that match the filter are returned. All

      applications are used to evaluate the cluster aggregated health state.

      If not specified, default value is None, unless the application name or

      the application type name are specified. If the filter has default value

      and application name is specified, the matching application is returned.

      The state values are flag-based enumeration, so the value could be a

      combination of these values obtained using bitwise ''OR'' operator.

      For example, if the provided value is 6, it matches applications with

      HealthState value of OK (2) and Warning (4).

      - Default - Default value. Matches any HealthState. The value is zero.

      - None - Filter that doesn''t match any HealthState value. Used in order to

      return no results on a given collection of states. The value is 1.

      - Ok - Filter that matches input with HealthState value Ok. The value is

      2.

      - Warning - Filter that matches input with HealthState value Warning. The

      value is 4.

      - Error - Filter that matches input with HealthState value Error. The

      value is 8.

      - All - Filter that matches input with any HealthState value. The value is

      65535. Default value: 0 .'
    isRequired: true
    types:
    - <xref:int>
  - name: service_filters
    description: 'Defines a list of filters that specify which

      services to be included in the returned cluster health chunk as children

      of the application. The services are returned only if the parent

      application matches a filter.

      If the list is empty, no services are returned. All the services are used

      to evaluate the parent application aggregated health state, regardless of

      the input filters.

      The application filter may specify multiple service filters.

      For example, it can specify a filter to return all services with health

      state Error and another filter to always include a service identified by

      its service name.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ServiceHealthStateFilter>]
  - name: deployed_application_filters
    description: 'Defines a list of filters that

      specify which deployed applications to be included in the returned cluster

      health chunk as children of the application. The deployed applications are

      returned only if the parent application matches a filter.

      If the list is empty, no deployed applications are returned. All the

      deployed applications are used to evaluate the parent application

      aggregated health state, regardless of the input filters.

      The application filter may specify multiple deployed application filters.

      For example, it can specify a filter to return all deployed applications

      with health state Error and another filter to always include a deployed

      application on a specified node.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.DeployedApplicationHealthStateFilter>]
  keywordOnlyParameters:
  - name: application_name_filter
    isRequired: true
  - name: application_type_name_filter
    isRequired: true
  - name: health_state_filter
    isRequired: true
  - name: service_filters
    isRequired: true
  - name: deployed_application_filters
    isRequired: true
methods:
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.ApplicationHealthStateFilter.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
