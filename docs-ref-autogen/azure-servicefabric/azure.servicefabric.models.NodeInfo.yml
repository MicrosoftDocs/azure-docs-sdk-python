### YamlMime:PythonClass
uid: azure.servicefabric.models.NodeInfo
name: NodeInfo
fullName: azure.servicefabric.models.NodeInfo
module: azure.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: Information about a node in Service Fabric cluster.
constructor:
  syntax: 'NodeInfo(*, name: str = None, ip_address_or_fqdn: str = None, type: str
    = None, code_version: str = None, config_version: str = None, node_status=None,
    node_up_time_in_seconds: str = None, health_state=None, is_seed_node: bool = None,
    upgrade_domain: str = None, fault_domain: str = None, id=None, instance_id: str
    = None, node_deactivation_info=None, is_stopped: bool = None, node_down_time_in_seconds:
    str = None, node_up_at=None, node_down_at=None, node_tags=None, is_node_by_node_upgrade_in_progress:
    bool = None, infrastructure_placement_id: str = None, **kwargs)'
  parameters:
  - name: name
    description: The name of a Service Fabric node.
    isRequired: true
    types:
    - <xref:str>
  - name: ip_address_or_fqdn
    description: 'The IP address or fully qualified domain name

      of the node.'
    isRequired: true
    types:
    - <xref:str>
  - name: type
    description: The type of the node.
    isRequired: true
    types:
    - <xref:str>
  - name: code_version
    description: 'The version of Service Fabric binaries that the node

      is running.'
    isRequired: true
    types:
    - <xref:str>
  - name: config_version
    description: 'The version of Service Fabric cluster manifest that

      the node is using.'
    isRequired: true
    types:
    - <xref:str>
  - name: node_status
    description: 'The status of the node. Possible values include:

      ''Invalid'', ''Up'', ''Down'', ''Enabling'', ''Disabling'', ''Disabled'', ''Unknown'',

      ''Removed'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.NodeStatus>
  - name: node_up_time_in_seconds
    description: 'Time in seconds since the node has been in

      NodeStatus Up. Value zero indicates that the node is not Up.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_state
    description: 'The health state of a Service Fabric entity such as

      Cluster, Node, Application, Service, Partition, Replica etc. Possible

      values include: ''Invalid'', ''Ok'', ''Warning'', ''Error'', ''Unknown'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.HealthState>
  - name: is_seed_node
    description: 'Indicates if the node is a seed node or not. Returns

      true if the node is a seed node, otherwise false. A quorum of seed nodes

      are required for proper operation of Service Fabric cluster.'
    isRequired: true
    types:
    - <xref:bool>
  - name: upgrade_domain
    description: The upgrade domain of the node.
    isRequired: true
    types:
    - <xref:str>
  - name: fault_domain
    description: The fault domain of the node.
    isRequired: true
    types:
    - <xref:str>
  - name: id
    description: 'An internal ID used by Service Fabric to uniquely identify a

      node. Node Id is deterministically generated from node name.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.NodeId>
  - name: instance_id
    description: 'The ID representing the node instance. While the ID of

      the node is deterministically generated from the node name and remains

      same across restarts, the InstanceId changes every time node restarts.'
    isRequired: true
    types:
    - <xref:str>
  - name: node_deactivation_info
    description: 'Information about the node deactivation.

      This information is valid for a node that is undergoing deactivation or

      has already been deactivated.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.NodeDeactivationInfo>
  - name: is_stopped
    description: 'Indicates if the node is stopped by calling stop node

      API or not. Returns true if the node is stopped, otherwise false.'
    isRequired: true
    types:
    - <xref:bool>
  - name: node_down_time_in_seconds
    description: 'Time in seconds since the node has been

      in NodeStatus Down. Value zero indicates node is not NodeStatus Down.'
    isRequired: true
    types:
    - <xref:str>
  - name: node_up_at
    description: 'Date time in UTC when the node came up. If the node has

      never been up then this value will be zero date time.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: node_down_at
    description: 'Date time in UTC when the node went down. If node has

      never been down then this value will be zero date time.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: node_tags
    description: 'List that contains tags, which will be applied to the

      nodes.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: is_node_by_node_upgrade_in_progress
    description: 'Indicates if a node-by-node

      upgrade is currently being performed on this node.'
    isRequired: true
    types:
    - <xref:bool>
  - name: infrastructure_placement_id
    description: 'PlacementID used by the

      InfrastructureService.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: name
    isRequired: true
  - name: ip_address_or_fqdn
    isRequired: true
  - name: type
    isRequired: true
  - name: code_version
    isRequired: true
  - name: config_version
    isRequired: true
  - name: node_status
    isRequired: true
  - name: node_up_time_in_seconds
    isRequired: true
  - name: health_state
    isRequired: true
  - name: is_seed_node
    isRequired: true
  - name: upgrade_domain
    isRequired: true
  - name: fault_domain
    isRequired: true
  - name: id
    isRequired: true
  - name: instance_id
    isRequired: true
  - name: node_deactivation_info
    isRequired: true
  - name: is_stopped
    isRequired: true
  - name: node_down_time_in_seconds
    isRequired: true
  - name: node_up_at
    isRequired: true
  - name: node_down_at
    isRequired: true
  - name: node_tags
    isRequired: true
  - name: is_node_by_node_upgrade_in_progress
    isRequired: true
  - name: infrastructure_placement_id
    isRequired: true
methods:
- uid: azure.servicefabric.models.NodeInfo.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.NodeInfo.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.NodeInfo.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.NodeInfo.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.NodeInfo.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.NodeInfo.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.NodeInfo.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
