### YamlMime:PythonClass
uid: azure.servicefabric.models.StatelessServiceUpdateDescription
name: StatelessServiceUpdateDescription
fullName: azure.servicefabric.models.StatelessServiceUpdateDescription
module: azure.servicefabric.models
inheritances:
- azure.servicefabric.models._models_py3.ServiceUpdateDescription
summary: 'Describes an update for a stateless service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'StatelessServiceUpdateDescription(*, flags: str = None, placement_constraints:
    str = None, correlation_scheme=None, load_metrics=None, service_placement_policies=None,
    default_move_cost=None, scaling_policies=None, service_dns_name: str = None, tags_for_placement=None,
    tags_for_running=None, instance_count: int = None, min_instance_count: int = None,
    min_instance_percentage: int = None, instance_close_delay_duration_seconds: str
    = None, instance_lifecycle_description=None, instance_restart_wait_duration_seconds:
    str = None, **kwargs)'
  parameters:
  - name: flags
    description: 'Flags indicating whether other properties are set. Each of

      the associated properties corresponds to a flag, specified below, which,

      if set, indicate that the property is specified.

      This property can be a combination of those flags obtained using bitwise

      ''OR'' operator.

      For example, if the provided value is 6 then the flags for

      ReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.

      - None - Does not indicate any other properties are set. The value is

      zero.

      - TargetReplicaSetSize/InstanceCount - Indicates whether the

      TargetReplicaSetSize property (for Stateful services) or the InstanceCount

      property (for Stateless services) is set. The value is 1.

      - ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration

      property is set. The value is  2.

      - QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property

      is set. The value is 4.

      - StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration

      property is set. The value is 8.

      - MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The

      value is 16.

      - PlacementConstraints - Indicates the PlacementConstraints property is

      set. The value is 32.

      - PlacementPolicyList - Indicates the ServicePlacementPolicies property is

      set. The value is 64.

      - Correlation - Indicates the CorrelationScheme property is set. The value

      is 128.

      - Metrics - Indicates the ServiceLoadMetrics property is set. The value is

      256.

      - DefaultMoveCost - Indicates the DefaultMoveCost property is set. The

      value is 512.

      - ScalingPolicy - Indicates the ScalingPolicies property is set. The value

      is 1024.

      - ServicePlacementTimeLimit - Indicates the ServicePlacementTimeLimit

      property is set. The value is 2048.

      - MinInstanceCount - Indicates the MinInstanceCount property is set. The

      value is 4096.

      - MinInstancePercentage - Indicates the MinInstancePercentage property is

      set. The value is 8192.

      - InstanceCloseDelayDuration - Indicates the InstanceCloseDelayDuration

      property is set. The value is 16384.

      - InstanceRestartWaitDuration - Indicates the InstanceCloseDelayDuration

      property is set. The value is 32768.

      - DropSourceReplicaOnMove - Indicates the DropSourceReplicaOnMove property

      is set. The value is 65536.

      - ServiceDnsName - Indicates the ServiceDnsName property is set. The value

      is 131072.

      - TagsForPlacement - Indicates the TagsForPlacement property is set. The

      value is 1048576.

      - TagsForRunning - Indicates the TagsForRunning property is set. The value

      is 2097152.'
    isRequired: true
    types:
    - <xref:str>
  - name: placement_constraints
    description: 'The placement constraints as a string.

      Placement constraints are boolean expressions on node properties and allow

      for restricting a service to particular nodes based on the service

      requirements. For example, to place a service on nodes where NodeType is

      blue specify the following: "NodeColor == blue)".'
    isRequired: true
    types:
    - <xref:str>
  - name: correlation_scheme
    description: The correlation scheme.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ServiceCorrelationDescription>]
  - name: load_metrics
    description: The service load metrics.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ServiceLoadMetricDescription>]
  - name: service_placement_policies
    description: The service placement policies.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ServicePlacementPolicyDescription>]
  - name: default_move_cost
    description: 'The move cost for the service. Possible values

      include: ''Zero'', ''Low'', ''Medium'', ''High'', ''VeryHigh'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.servicefabric.models.MoveCost>
  - name: scaling_policies
    description: Scaling policies for this service.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.servicefabric.models.ScalingPolicyDescription>]
  - name: service_dns_name
    description: The DNS name of the service.
    isRequired: true
    types:
    - <xref:str>
  - name: tags_for_placement
    description: Tags for placement of this service.
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.NodeTagsDescription>
  - name: tags_for_running
    description: Tags for running of this service.
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.NodeTagsDescription>
  - name: service_kind
    description: Required. Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: instance_count
    description: The instance count.
    isRequired: true
    types:
    - <xref:int>
  - name: min_instance_count
    description: 'MinInstanceCount is the minimum number of

      instances that must be up to meet the EnsureAvailability safety check

      during operations like upgrade or deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(

      MinInstancePercentage/100.0 * InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstanceCount computation

      -1 is first converted into the number of nodes on which the instances are

      allowed to be placed according to the placement constraints on the

      service.'
    isRequired: true
    types:
    - <xref:int>
  - name: min_instance_percentage
    description: 'MinInstancePercentage is the minimum

      percentage of InstanceCount that must be up to meet the EnsureAvailability

      safety check during operations like upgrade or deactivate node.

      The actual number that is used is max( MinInstanceCount, ceil(

      MinInstancePercentage/100.0 * InstanceCount) ).

      Note, if InstanceCount is set to -1, during MinInstancePercentage

      computation, -1 is first converted into the number of nodes on which the

      instances are allowed to be placed according to the placement constraints

      on the service.'
    isRequired: true
    types:
    - <xref:int>
  - name: instance_close_delay_duration_seconds
    description: 'Duration in seconds, to wait

      before a stateless instance is closed, to allow the active requests to

      drain gracefully. This would be effective when the instance is closing

      during the application/cluster upgrade and disabling node.

      The endpoint exposed on this instance is removed prior to starting the

      delay, which prevents new connections to this instance.

      In addition, clients that have subscribed to service endpoint change

      events([https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync](https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync)),

      can do

      the following upon receiving the endpoint removal notification:

      - Stop sending new requests to this instance.

      - Close existing connections after in-flight requests have completed.

      - Connect to a different instance of the service partition for future

      requests.'
    isRequired: true
    types:
    - <xref:str>
  - name: instance_lifecycle_description
    description: 'Defines how instances of this

      service will behave during their lifecycle.'
    isRequired: true
    types:
    - <xref:azure.servicefabric.models.InstanceLifecycleDescription>
  - name: instance_restart_wait_duration_seconds
    description: 'When a stateless instance

      goes down, this timer starts. When it expires Service Fabric will create a

      new instance on any node in the cluster.

      This configuration is to reduce unnecessary creation of a new instance in

      situations where the instance going down is likely to recover in a short

      time. For example, during an upgrade.

      The default value is 0, which indicates that when stateless instance goes

      down, Service Fabric will immediately start building its replacement.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: flags
    isRequired: true
  - name: placement_constraints
    isRequired: true
  - name: correlation_scheme
    isRequired: true
  - name: load_metrics
    isRequired: true
  - name: service_placement_policies
    isRequired: true
  - name: default_move_cost
    isRequired: true
  - name: scaling_policies
    isRequired: true
  - name: service_dns_name
    isRequired: true
  - name: tags_for_placement
    isRequired: true
  - name: tags_for_running
    isRequired: true
  - name: instance_count
    isRequired: true
  - name: min_instance_count
    isRequired: true
  - name: min_instance_percentage
    isRequired: true
  - name: instance_close_delay_duration_seconds
    isRequired: true
  - name: instance_lifecycle_description
    isRequired: true
  - name: instance_restart_wait_duration_seconds
    isRequired: true
methods:
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.servicefabric.models.StatelessServiceUpdateDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
