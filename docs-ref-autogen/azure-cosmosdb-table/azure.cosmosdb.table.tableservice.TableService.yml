### YamlMime:PythonClass
uid: azure.cosmosdb.table.tableservice.TableService
name: TableService
fullName: azure.cosmosdb.table.tableservice.TableService
module: azure.cosmosdb.table.tableservice
inheritances:
- azure.cosmosdb.table.common.storageclient.StorageClient
summary: 'This is the main class managing Azure Table resources.


  The Azure Table service offers structured storage in the form of tables. Tables

  store data as collections of entities. Entities are similar to rows. An entity

  has a primary key and a set of properties. A property is a name, typed-value pair,

  similar to a column. The Table service does not enforce any schema for tables,

  so two entities in the same table may have different sets of properties. Developers

  may choose to enforce a schema on the client side. A table may contain any number

  of entities.'
constructor:
  syntax: TableService(account_name=None, account_key=None, sas_token=None, is_emulated=False,
    protocol='https', endpoint_suffix='core.windows.net', request_session=None, connection_string=None,
    socket_timeout=None)
variables:
- description: "The key-encryption-key optionally provided by the user. If provided,\
    \ will be used to\nencrypt/decrypt in supported methods.\nFor methods requiring\
    \ decryption, either the key_encryption_key OR the resolver must be provided.\n\
    If both are provided, the resolver will take precedence.\nMust implement the following\
    \ methods for APIs requiring encryption:\nwrap_key(key)\u2013wraps the specified\
    \ key (bytes) using an algorithm of the user's choice. Returns the encrypted key\
    \ as bytes.\nget_key_wrap_algorithm()\u2013returns the algorithm used to wrap\
    \ the specified symmetric key.\nget_kid()\u2013returns a string key id for this\
    \ key-encryption-key.\nMust implement the following methods for APIs requiring\
    \ decryption:\nunwrap_key(key, algorithm)\u2013returns the unwrapped form of the\
    \ specified symmetric key using the string-specified algorithm.\nget_kid()\u2013\
    returns a string key id for this key-encryption-key."
  name: key_encryption_key
  types:
  - <xref:object>
- description: 'A function to resolve keys optionally provided by the user. If provided,
    will be used to decrypt in supported methods.

    For methods requiring decryption, either the key_encryption_key OR

    the resolver must be provided. If both are provided, the resolver will take precedence.

    It uses the kid string to return a key-encryption-key implementing the interface
    defined above.'
  name: key_resolver_function
  types:
  - '<xref:kid>)<xref: >(<xref:function>'
- description: 'A function that takes in an entity''s partition key, row key, and
    property name and returns

    a boolean that indicates whether that property should be encrypted.'
  name: row_key, property_name) encryption_resolver_functions
  types:
  - <xref:function>(<xref:partition_key,>
- description: 'A flag that may be set to ensure that all messages successfully uploaded
    to the queue and all those downloaded and

    successfully read from the queue are/were encrypted while on the server. If this
    flag is set, all required

    parameters for encryption/decryption must be provided. See the above comments
    on the key_encryption_key and resolver.'
  name: require_encryption
  types:
  - <xref:bool>
methods:
- uid: azure.cosmosdb.table.tableservice.TableService.batch
  name: batch
  summary: Creates a batch object which can be used as a context manager. Commits
    the batch on exit.
  signature: batch(table_name, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to commit the batch to.
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    types:
    - <xref:int>
- uid: azure.cosmosdb.table.tableservice.TableService.commit_batch
  name: commit_batch
  summary: Commits a <xref:azure.storage.table.TableBatch> request.
  signature: commit_batch(table_name, batch, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to commit the batch to.
    isRequired: true
    types:
    - <xref:str>
  - name: batch
    description: The batch to commit.
    isRequired: true
    types:
    - <xref:azure.cosmosdb.table.tablebatch.TableBatch>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: 'A list of the batch responses corresponding to the requests in the
      batch.

      The items could either be an etag, in case of success, or an error object in
      case of failure.'
    types:
    - <xref:list>(<xref:azure.storage.table.models.AzureBatchOperationError>, <xref:str>)
- uid: azure.cosmosdb.table.tableservice.TableService.create_table
  name: create_table
  summary: Creates a new table in the storage account.
  signature: create_table(table_name, fail_on_exist=False, timeout=None)
  parameters:
  - name: table_name
    description: 'The name of the table to create. The table name may contain only

      alphanumeric characters and cannot begin with a numeric character.

      It is case-insensitive and must be from 3 to 63 characters long.'
    isRequired: true
    types:
    - <xref:str>
  - name: fail_on_exist
    description: Specifies whether to throw an exception if the table already exists.
    isRequired: true
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: 'A boolean indicating whether the table was created. If fail_on_exist

      was set to True, this will throw instead of returning false.'
    types:
    - <xref:bool>
- uid: azure.cosmosdb.table.tableservice.TableService.delete_entity
  name: delete_entity
  summary: 'Deletes an existing entity in a table. Throws if the entity does not exist.


    When an entity is successfully deleted, the entity is immediately marked

    for deletion and is no longer accessible to clients. The entity is later

    removed from the Table service during garbage collection.'
  signature: delete_entity(table_name, partition_key, row_key, if_match='*', timeout=None)
  parameters:
  - name: table_name
    description: The name of the table containing the entity to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: partition_key
    description: The PartitionKey of the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: row_key
    description: The RowKey of the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'The client may specify the ETag for the entity on the

      request in order to compare to the ETag maintained by the service

      for the purpose of optimistic concurrency. The delete operation

      will be performed only if the ETag sent by the client matches the

      value maintained by the server, indicating that the entity has

      not been modified since it was retrieved by the client. To force

      an unconditional delete, set If-Match to the wildcard character (*).'
    isRequired: true
    defaultValue: '*'
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
- uid: azure.cosmosdb.table.tableservice.TableService.delete_table
  name: delete_table
  summary: 'Deletes the specified table and any data it contains.


    When a table is successfully deleted, it is immediately marked for deletion

    and is no longer accessible to clients. The table is later removed from

    the Table service during garbage collection.


    Note that deleting a table is likely to take at least 40 seconds to complete.

    If an operation is attempted against the table while it was being deleted,

    an <xref:azure.cosmosdb.table.tableservice.AzureConflictHttpError> will be thrown.'
  signature: delete_table(table_name, fail_not_exist=False, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: fail_not_exist
    description: Specifies whether to throw an exception if the table doesn't exist.
    isRequired: true
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: 'A boolean indicating whether the table was deleted. If fail_not_exist

      was set to True, this will throw instead of returning false.'
    types:
    - <xref:bool>
- uid: azure.cosmosdb.table.tableservice.TableService.exists
  name: exists
  summary: Returns a boolean indicating whether the table exists.
  signature: exists(table_name, timeout=None)
  parameters:
  - name: table_name
    description: The name of table to check for existence.
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: A boolean indicating whether the table exists.
    types:
    - <xref:bool>
- uid: azure.cosmosdb.table.tableservice.TableService.generate_account_shared_access_signature
  name: generate_account_shared_access_signature
  summary: 'Generates a shared access signature for the table service.

    Use the returned signature with the sas_token parameter of TableService.'
  signature: generate_account_shared_access_signature(resource_types, permission,
    expiry, start=None, ip=None, protocol=None)
  parameters:
  - name: resource_types
    description: Specifies the resource types that are accessible with the account
      SAS.
    isRequired: true
    types:
    - <xref:azure.cosmosdb.table.common.models.ResourceTypes>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    isRequired: true
    types:
    - <xref:azure.cosmosdb.table.common.models.AccountPermissions>
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    isRequired: true
    types:
    - <xref:datetime>
    - <xref:str>
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime>
    - <xref:str>
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying sip=168.1.5.65 or sip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: protocol
    description: 'Specifies the protocol permitted for a request made. The default
      value

      is https,http. See <xref:azure.cosmosdb.table.common.models.Protocol> for possible
      values.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.generate_table_shared_access_signature
  name: generate_table_shared_access_signature
  summary: 'Generates a shared access signature for the table.

    Use the returned signature with the sas_token parameter of TableService.'
  signature: generate_table_shared_access_signature(table_name, permission=None, expiry=None,
    start=None, id=None, ip=None, protocol=None, start_pk=None, start_rk=None, end_pk=None,
    end_rk=None)
  parameters:
  - name: table_name
    description: The name of the table to create a SAS token for.
    isRequired: true
    types:
    - <xref:str>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.cosmosdb.table.models.TablePermissions>
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime>
    - <xref:str>
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime>
    - <xref:str>
  - name: id
    description: 'A unique value up to 64 characters in length that correlates to
      a

      stored access policy. To create a stored access policy, use <xref:azure.cosmosdb.table.tableservice.TableService.set_table_acl>.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying sip=''168.1.5.65'' or sip=''168.1.5.60-168.1.5.70''
      on the SAS

      restricts the request to those IP addresses.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: protocol
    description: 'Specifies the protocol permitted for a request made. The default
      value

      is https,http. See <xref:azure.cosmosdb.table.common.models.Protocol> for possible
      values.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: start_pk
    description: 'The minimum partition key accessible with this shared access

      signature. startpk must accompany startrk. Key values are inclusive.

      If omitted, there is no lower bound on the table entities that can

      be accessed.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: start_rk
    description: 'The minimum row key accessible with this shared access signature.

      startpk must accompany startrk. Key values are inclusive. If

      omitted, there is no lower bound on the table entities that can be

      accessed.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: end_pk
    description: 'The maximum partition key accessible with this shared access

      signature. endpk must accompany endrk. Key values are inclusive. If

      omitted, there is no upper bound on the table entities that can be

      accessed.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: end_rk
    description: 'The maximum row key accessible with this shared access signature.

      endpk must accompany endrk. Key values are inclusive. If omitted,

      there is no upper bound on the table entities that can be accessed.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.get_entity
  name: get_entity
  summary: Get an entity from the specified table. Throws if the entity does not exist.
  signature: get_entity(table_name, partition_key, row_key, select=None, accept='application/json;odata=minimalmetadata',
    property_resolver=None, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to get the entity from.
    isRequired: true
    types:
    - <xref:str>
  - name: partition_key
    description: The PartitionKey of the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: row_key
    description: The RowKey of the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: select
    description: Returns only the desired properties of an entity from the set.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: accept
    description: 'Specifies the accepted content type of the response payload. See

      <xref:azure.storage.table.models.TablePayloadFormat> for possible

      values.'
    isRequired: true
    defaultValue: application/json;odata=minimalmetadata
    types:
    - <xref:str>
  - name: property_resolver
    description: 'A function which given the partition key, row key, property name,

      property value, and the property EdmType if returned by the service,

      returns the EdmType of the property. Generally used if accept is set

      to JSON_NO_METADATA.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:func>(<xref:pk>, <xref:rk>, <xref:prop_name>, <xref:prop_value>, <xref:service_edm_type>)
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The retrieved entity.
    types:
    - <xref:azure.storage.table.models.Entity>
- uid: azure.cosmosdb.table.tableservice.TableService.get_table_acl
  name: get_table_acl
  summary: 'Returns details about any stored access policies specified on the

    table that may be used with Shared Access Signatures.'
  signature: get_table_acl(table_name, timeout=None)
  parameters:
  - name: table_name
    description: The name of an existing table.
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: A dictionary of access policies associated with the table.
    types:
    - <xref:dict>(<xref:str>, <xref:azure.cosmosdb.table.common.models.AccessPolicy>)
- uid: azure.cosmosdb.table.tableservice.TableService.get_table_service_properties
  name: get_table_service_properties
  summary: 'Gets the properties of a storage account''s Table service, including

    logging, analytics and CORS rules.'
  signature: get_table_service_properties(timeout=None)
  parameters:
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The table service properties.
    types:
    - <xref:azure.cosmosdb.table.common.models.ServiceProperties>
- uid: azure.cosmosdb.table.tableservice.TableService.get_table_service_stats
  name: get_table_service_stats
  summary: 'Retrieves statistics related to replication for the Table service. It
    is

    only available when read-access geo-redundant replication is enabled for

    the storage account.


    With geo-redundant replication, Azure Storage maintains your data durable

    in two locations. In both locations, Azure Storage constantly maintains

    multiple healthy replicas of your data. The location where you read,

    create, update, or delete data is the primary storage account location.

    The primary location exists in the region you choose at the time you

    create an account via the Azure Management Azure classic portal, for

    example, North Central US. The location to which your data is replicated

    is the secondary location. The secondary location is automatically

    determined based on the location of the primary; it is in a second data

    center that resides in the same region as the primary location. Read-only

    access is available from the secondary location, if read-access geo-redundant

    replication is enabled for your storage account.'
  signature: get_table_service_stats(timeout=None)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The table service stats.
    types:
    - <xref:azure.cosmosdb.table.common.models.ServiceStats>
- uid: azure.cosmosdb.table.tableservice.TableService.insert_entity
  name: insert_entity
  summary: 'Inserts a new entity into the table. Throws if an entity with the same

    PartitionKey and RowKey already exists.


    When inserting an entity into a table, you must specify values for the

    PartitionKey and RowKey system properties. Together, these properties

    form the primary key and must be unique within the table. Both the

    PartitionKey and RowKey values must be string values; each key value may

    be up to 64 KB in size. If you are using an integer value for the key

    value, you should convert the integer to a fixed-width string, because

    they are canonically sorted. For example, you should convert the value

    1 to 0000001 to ensure proper sorting.'
  signature: insert_entity(table_name, entity, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to insert the entity into.
    isRequired: true
    types:
    - <xref:str>
  - name: entity
    description: 'The entity to insert. Could be a dict or an entity object.

      Must contain a PartitionKey and a RowKey.'
    isRequired: true
    types:
    - <xref:dict>
    - <xref:azure.storage.table.models.Entity>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The etag of the inserted entity.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.insert_or_merge_entity
  name: insert_or_merge_entity
  summary: 'Merges an existing entity or inserts a new entity if it does not exist

    in the table.


    If insert_or_merge_entity is used to merge an entity, any properties from

    the previous entity will be retained if the request does not define or

    include them.'
  signature: insert_or_merge_entity(table_name, entity, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table in which to insert or merge the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: entity
    description: 'The entity to insert or merge. Could be a dict or an entity object.

      Must contain a PartitionKey and a RowKey.'
    isRequired: true
    types:
    - <xref:dict>
    - <xref:azure.storage.table.models.Entity>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The etag of the entity.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.insert_or_replace_entity
  name: insert_or_replace_entity
  summary: 'Replaces an existing entity or inserts a new entity if it does not

    exist in the table. Because this operation can insert or update an

    entity, it is also known as an "upsert" operation.


    If insert_or_replace_entity is used to replace an entity, any properties

    from the previous entity will be removed if the new entity does not define

    them.'
  signature: insert_or_replace_entity(table_name, entity, timeout=None)
  parameters:
  - name: table_name
    description: The name of the table in which to insert or replace the entity.
    isRequired: true
    types:
    - <xref:str>
  - name: entity
    description: 'The entity to insert or replace. Could be a dict or an entity object.

      Must contain a PartitionKey and a RowKey.'
    isRequired: true
    types:
    - <xref:dict>
    - <xref:azure.storage.table.models.Entity>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The etag of the entity.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.list_tables
  name: list_tables
  summary: 'Returns a generator to list the tables. The generator will lazily follow

    the continuation tokens returned by the service and stop when all tables

    have been returned or num_results is reached.


    If num_results is specified and the account has more than that number of

    tables, the generator will have a populated next_marker field once it

    finishes. This marker can be used to create a new generator if more

    results are desired.'
  signature: list_tables(num_results=None, marker=None, timeout=None)
  parameters:
  - name: num_results
    description: The maximum number of tables to return.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: marker
    description: 'An opaque continuation object. This value can be retrieved from
      the

      next_marker field of a previous generator object if num_results was

      specified and that generator has finished enumerating results. If

      specified, this generator will begin returning results from the point

      where the previous generator stopped.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:obj>
  - name: timeout
    description: 'The server timeout, expressed in seconds. This function may make
      multiple

      calls to the service in which case the timeout value specified will be

      applied to each individual call.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: A generator which produces <xref:azure.cosmosdb.table.common.models.table.Table>
      objects.
    types:
    - '<xref:azure.cosmosdb.table.common.models.ListGenerator>:'
- uid: azure.cosmosdb.table.tableservice.TableService.merge_entity
  name: merge_entity
  summary: 'Updates an existing entity by merging the entity''s properties. Throws

    if the entity does not exist.


    This operation does not replace the existing entity as the update_entity

    operation does. A property cannot be removed with merge_entity.


    Any properties with null values are ignored. All other properties will be

    updated or added.'
  signature: merge_entity(table_name, entity, if_match='*', timeout=None)
  parameters:
  - name: table_name
    description: The name of the table containing the entity to merge.
    isRequired: true
    types:
    - <xref:str>
  - name: entity
    description: 'The entity to merge. Could be a dict or an entity object.

      Must contain a PartitionKey and a RowKey.'
    isRequired: true
    types:
    - <xref:dict>
    - <xref:azure.storage.table.models.Entity>
  - name: if_match
    description: 'The client may specify the ETag for the entity on the

      request in order to compare to the ETag maintained by the service

      for the purpose of optimistic concurrency. The merge operation

      will be performed only if the ETag sent by the client matches the

      value maintained by the server, indicating that the entity has

      not been modified since it was retrieved by the client. To force

      an unconditional merge, set If-Match to the wildcard character (*).'
    isRequired: true
    defaultValue: '*'
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The etag of the entity.
    types:
    - <xref:str>
- uid: azure.cosmosdb.table.tableservice.TableService.query_entities
  name: query_entities
  summary: 'Returns a generator to list the entities in the table specified. The

    generator will lazily follow the continuation tokens returned by the

    service and stop when all entities have been returned or num_results is

    reached.


    If num_results is specified and the account has more than that number of

    entities, the generator will have a populated next_marker field once it

    finishes. This marker can be used to create a new generator if more

    results are desired.'
  signature: query_entities(table_name, filter=None, select=None, num_results=None,
    marker=None, accept='application/json;odata=minimalmetadata', property_resolver=None,
    timeout=None)
  parameters:
  - name: table_name
    description: The name of the table to query.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'Returns only entities that satisfy the specified filter. Note that

      no more than 15 discrete comparisons are permitted within a $filter

      string. See [http://msdn.microsoft.com/en-us/library/windowsazure/dd894031.aspx](http://msdn.microsoft.com/en-us/library/windowsazure/dd894031.aspx)

      for more information on constructing filters.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: Returns only the desired properties of an entity from the set.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: num_results
    description: The maximum number of entities to return.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: marker
    description: 'An opaque continuation object. This value can be retrieved from
      the

      next_marker field of a previous generator object if max_results was

      specified and that generator has finished enumerating results. If

      specified, this generator will begin returning results from the point

      where the previous generator stopped.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:obj>
  - name: accept
    description: 'Specifies the accepted content type of the response payload. See

      <xref:azure.storage.table.models.TablePayloadFormat> for possible

      values.'
    isRequired: true
    defaultValue: application/json;odata=minimalmetadata
    types:
    - <xref:str>
  - name: property_resolver
    description: 'A function which given the partition key, row key, property name,

      property value, and the property EdmType if returned by the service,

      returns the EdmType of the property. Generally used if accept is set

      to JSON_NO_METADATA.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:func>(<xref:pk>, <xref:rk>, <xref:prop_name>, <xref:prop_value>, <xref:service_edm_type>)
  - name: timeout
    description: 'The server timeout, expressed in seconds. This function may make
      multiple

      calls to the service in which case the timeout value specified will be

      applied to each individual call.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: A generator which produces <xref:azure.storage.table.models.Entity>
      objects.
    types:
    - <xref:azure.cosmosdb.table.common.models.ListGenerator>
- uid: azure.cosmosdb.table.tableservice.TableService.set_table_acl
  name: set_table_acl
  summary: 'Sets stored access policies for the table that may be used with Shared

    Access Signatures.


    When you set permissions for a table, the existing permissions are replaced.

    To update the table''s permissions, call <xref:azure.cosmosdb.table.tableservice.TableService.get_table_acl>
    to fetch

    all access policies associated with the table, modify the access policy

    that you wish to change, and then call this function with the complete

    set of data to perform the update.


    When you establish a stored access policy on a table, it may take up to

    30 seconds to take effect. During this interval, a shared access signature

    that is associated with the stored access policy will throw an

    <xref:azure.cosmosdb.table.tableservice.AzureHttpError> until the access policy
    becomes active.'
  signature: set_table_acl(table_name, signed_identifiers=None, timeout=None)
  parameters:
  - name: table_name
    description: The name of an existing table.
    isRequired: true
    types:
    - <xref:str>
  - name: signed_identifiers
    description: 'A dictionary of access policies to associate with the table. The

      dictionary may contain up to 5 elements. An empty dictionary

      will clear the access policies set on the service.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:dict>(<xref:str>, <xref:azure.cosmosdb.table.common.models.AccessPolicy>)
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
- uid: azure.cosmosdb.table.tableservice.TableService.set_table_service_properties
  name: set_table_service_properties
  summary: 'Sets the properties of a storage account''s Table service, including

    Azure Storage Analytics. If an element (ex Logging) is left as None, the

    existing settings on the service for that functionality are preserved.

    For more information on Azure Storage Analytics, see

    [https://msdn.microsoft.com/en-us/library/azure/hh343270.aspx](https://msdn.microsoft.com/en-us/library/azure/hh343270.aspx).'
  signature: set_table_service_properties(logging=None, hour_metrics=None, minute_metrics=None,
    cors=None, timeout=None)
  parameters:
  - name: logging
    description: The logging settings provide request logs.
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.cosmosdb.table.common.models.Logging>
  - name: hour_metrics
    description: 'The hour metrics settings provide a summary of request

      statistics grouped by API in hourly aggregates for tables.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.cosmosdb.table.common.models.Metrics>
  - name: minute_metrics
    description: 'The minute metrics settings provide request statistics

      for each minute for tables.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.cosmosdb.table.common.models.Metrics>
  - name: cors
    description: 'You can include up to five CorsRule elements in the

      list. If an empty list is specified, all CORS rules will be deleted,

      and CORS will be disabled for the service. For detailed information

      about CORS rules and evaluation logic, see

      [https://msdn.microsoft.com/en-us/library/azure/dn535601.aspx](https://msdn.microsoft.com/en-us/library/azure/dn535601.aspx).'
    isRequired: true
    defaultValue: None
    types:
    - <xref:list>(<xref:azure.cosmosdb.table.common.models.CorsRule>)
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
- uid: azure.cosmosdb.table.tableservice.TableService.update_entity
  name: update_entity
  summary: 'Updates an existing entity in a table. Throws if the entity does not exist.

    The update_entity operation replaces the entire entity and can be used to

    remove properties.'
  signature: update_entity(table_name, entity, if_match='*', timeout=None)
  parameters:
  - name: table_name
    description: The name of the table containing the entity to update.
    isRequired: true
    types:
    - <xref:str>
  - name: entity
    description: 'The entity to update. Could be a dict or an entity object.

      Must contain a PartitionKey and a RowKey.'
    isRequired: true
    types:
    - <xref:dict>
    - <xref:azure.storage.table.models.Entity>
  - name: if_match
    description: 'The client may specify the ETag for the entity on the

      request in order to compare to the ETag maintained by the service

      for the purpose of optimistic concurrency. The update operation

      will be performed only if the ETag sent by the client matches the

      value maintained by the server, indicating that the entity has

      not been modified since it was retrieved by the client. To force

      an unconditional update, set If-Match to the wildcard character (*).'
    isRequired: true
    defaultValue: '*'
    types:
    - <xref:str>
  - name: timeout
    description: The server timeout, expressed in seconds.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The etag of the entity.
    types:
    - <xref:str>
