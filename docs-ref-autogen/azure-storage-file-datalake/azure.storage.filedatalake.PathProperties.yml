### YamlMime:PythonClass
uid: azure.storage.filedatalake.PathProperties
name: PathProperties
fullName: azure.storage.filedatalake.PathProperties
module: azure.storage.filedatalake
inheritances:
- azure.storage.filedatalake._shared.models.DictMixin
summary: Path properties listed by get_paths api.
constructor:
  syntax: PathProperties(**kwargs)
variables:
- description: The full path for a file or directory.
  name: name
  types:
  - <xref:str>
- description: The owner of the file or directory.
  name: owner
  types:
  - <xref:str>
- description: The owning group of the file or directory.
  name: group
  types:
  - <xref:str>
- description: 'The permissions that are set for user, group, and other on the file
    or directory.

    Each individual permission is in [r,w,x,-]{3} format.'
  name: permissions
  types:
  - <xref:str>
- description: A datetime object representing the last time the directory/file was
    modified.
  name: last_modified
  types:
  - <xref:datetime>
- description: Is the path a directory or not.
  name: is_directory
  types:
  - <xref:bool>
- description: 'The ETag contains a value that you can use to perform operations

    conditionally.'
  name: etag
  types:
  - <xref:str>
- description: The size of file if the path is a file.
  name: content_length
  types:
  - <xref:int>
- description: The creation time of the file/directory.
  name: creation_time
  types:
  - <xref:datetime>
- description: The expiry time of the file/directory.
  name: expiry_time
  types:
  - <xref:datetime>
- description: 'A predefined encryption scope used to encrypt the data on the service.
    An encryption

    scope can be created using the Management API and referenced here by name. If
    a default

    encryption scope has been defined at the file system, this value will override
    it if the

    file system level scope is configured to allow overrides. Otherwise an error will
    be raised.'
  name: encryption_scope
  types:
  - <xref:str>
- description: Specifies the encryption context to set on the file.
  name: encryption_context
  types:
  - <xref:str>
methods:
- uid: azure.storage.filedatalake.PathProperties.get
  name: get
  signature: get(key, default=None)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.storage.filedatalake.PathProperties.has_key
  name: has_key
  signature: has_key(k)
  parameters:
  - name: k
    isRequired: true
- uid: azure.storage.filedatalake.PathProperties.items
  name: items
  signature: items()
- uid: azure.storage.filedatalake.PathProperties.keys
  name: keys
  signature: keys()
- uid: azure.storage.filedatalake.PathProperties.update
  name: update
  signature: update(*args, **kwargs)
- uid: azure.storage.filedatalake.PathProperties.values
  name: values
  signature: values()
