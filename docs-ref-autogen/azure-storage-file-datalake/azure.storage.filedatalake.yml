### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.filedatalake.DataLakeServiceClient
  - azure.storage.filedatalake.FileSystemClient
  - azure.storage.filedatalake.DataLakeFileClient
  - azure.storage.filedatalake.DataLakeDirectoryClient
  - azure.storage.filedatalake.DataLakeLeaseClient
  - azure.storage.filedatalake.ExponentialRetry
  - azure.storage.filedatalake.LinearRetry
  - azure.storage.filedatalake.LocationMode
  - azure.storage.filedatalake.PublicAccess
  - azure.storage.filedatalake.AccessPolicy
  - azure.storage.filedatalake.ResourceTypes
  - azure.storage.filedatalake.StorageErrorCode
  - azure.storage.filedatalake.UserDelegationKey
  - azure.storage.filedatalake.FileSystemProperties
  - azure.storage.filedatalake.FileSystemPropertiesPaged
  - azure.storage.filedatalake.DirectoryProperties
  - azure.storage.filedatalake.FileProperties
  - azure.storage.filedatalake.PathProperties
  - azure.storage.filedatalake.PathPropertiesPaged
  - azure.storage.filedatalake.LeaseProperties
  - azure.storage.filedatalake.ContentSettings
  - azure.storage.filedatalake.AccountSasPermissions
  - azure.storage.filedatalake.FileSystemSasPermissions
  - azure.storage.filedatalake.DirectorySasPermissions
  - azure.storage.filedatalake.FileSasPermissions
  - azure.storage.filedatalake.generate_account_sas
  - azure.storage.filedatalake.generate_file_system_sas
  - azure.storage.filedatalake.generate_directory_sas
  - azure.storage.filedatalake.generate_file_sas
  - azure.storage.filedatalake.StorageStreamDownloader
  - azure.storage.filedatalake.aio
  fullName: azure.storage.filedatalake
  kind: import
  langs:
  - python
  module: azure.storage.filedatalake
  name: filedatalake
  type: package
  uid: azure.storage.filedatalake
- fullName: azure.storage.filedatalake.generate_account_sas
  langs:
  - python
  module: azure.storage.filedatalake
  name: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, **kwargs)
  summary: 'Generates a shared access signature for the DataLake service.


    Use the returned signature as the credential parameter of any DataLakeServiceClient,

    FileSystemClient, DataLakeDirectoryClient or DataLakeFileClient.'
  syntax:
    content: generate_account_sas(account_name, account_key, resource_types, permission,
      expiry, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The access key to generate the shared access signature.
      id: account_key
      type:
      - str
    - description: Specifies the resource types that are accessible with the account
        SAS.
      id: resource_types
      type:
      - str
      - azure.storage.filedatalake.ResourceTypes
    - description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.filedatalake.AccountSasPermissions
    - description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.filedatalake.generate_account_sas
- fullName: azure.storage.filedatalake.generate_file_system_sas
  langs:
  - python
  module: azure.storage.filedatalake
  name: generate_file_system_sas(account_name, file_system_name, credential, permission=None,
    expiry=None, **kwargs)
  summary: 'Generates a shared access signature for a file system.


    Use the returned signature with the credential parameter of any DataLakeServiceClient,

    FileSystemClient, DataLakeDirectoryClient or DataLakeFileClient.'
  syntax:
    content: generate_file_system_sas(account_name, file_system_name, credential,
      permission=None, expiry=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The name of the file system.
      id: file_system_name
      type:
      - str
    - description: 'Credential could be either account key or user delegation key.

        If use account key is used as credential, then the credential type should
        be a str.

        Instead of an account key, the user could also pass in a user delegation key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished

        by calling <xref:azure.storage.filedatalake.DataLakeServiceClient.get_user_delegation_key>.

        When present, the SAS is signed with the user delegation key instead.'
      id: credential
      type:
      - str
      - azure.storage.filedatalake.UserDelegationKey
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.filedatalake.FileSystemSasPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime
      - str
    - description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime
      - str
    - description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.filedatalake.generate_file_system_sas
- fullName: azure.storage.filedatalake.generate_directory_sas
  langs:
  - python
  module: azure.storage.filedatalake
  name: generate_directory_sas(account_name, file_system_name, directory_name, credential,
    permission=None, expiry=None, **kwargs)
  summary: 'Generates a shared access signature for a directory.


    Use the returned signature with the credential parameter of any DataLakeServiceClient,

    FileSystemClient, DataLakeDirectoryClient or DataLakeFileClient.'
  syntax:
    content: generate_directory_sas(account_name, file_system_name, directory_name,
      credential, permission=None, expiry=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The name of the file system.
      id: file_system_name
      type:
      - str
    - description: The name of the directory.
      id: directory_name
      type:
      - str
    - description: 'Credential could be either account key or user delegation key.

        If use account key is used as credential, then the credential type should
        be a str.

        Instead of an account key, the user could also pass in a user delegation key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished

        by calling <xref:azure.storage.filedatalake.DataLakeServiceClient.get_user_delegation_key>.

        When present, the SAS is signed with the user delegation key instead.'
      id: credential
      type:
      - str
      - azure.storage.filedatalake.UserDelegationKey
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.filedatalake.FileSasPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.filedatalake.generate_directory_sas
- fullName: azure.storage.filedatalake.generate_file_sas
  langs:
  - python
  module: azure.storage.filedatalake
  name: generate_file_sas(account_name, file_system_name, directory_name, file_name,
    credential, permission=None, expiry=None, **kwargs)
  summary: 'Generates a shared access signature for a file.


    Use the returned signature with the credential parameter of any BDataLakeServiceClient,

    FileSystemClient, DataLakeDirectoryClient or DataLakeFileClient.'
  syntax:
    content: generate_file_sas(account_name, file_system_name, directory_name, file_name,
      credential, permission=None, expiry=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The name of the file system.
      id: file_system_name
      type:
      - str
    - description: The name of the directory.
      id: directory_name
      type:
      - str
    - description: The name of the file.
      id: file_name
      type:
      - str
    - description: 'Credential could be either account key or user delegation key.

        If use account key is used as credential, then the credential type should
        be a str.

        Instead of an account key, the user could also pass in a user delegation key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished

        by calling <xref:azure.storage.filedatalake.DataLakeServiceClient.get_user_delegation_key>.

        When present, the SAS is signed with the user delegation key instead.'
      id: credential
      type:
      - str
      - azure.storage.filedatalake.UserDelegationKey
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.filedatalake.FileSasPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.filedatalake.generate_file_sas
references:
- fullName: azure.storage.filedatalake.DataLakeServiceClient
  isExternal: false
  name: DataLakeServiceClient
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DataLakeServiceClient
- fullName: azure.storage.filedatalake.FileSystemClient
  isExternal: false
  name: FileSystemClient
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileSystemClient
- fullName: azure.storage.filedatalake.DataLakeFileClient
  isExternal: false
  name: DataLakeFileClient
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DataLakeFileClient
- fullName: azure.storage.filedatalake.DataLakeDirectoryClient
  isExternal: false
  name: DataLakeDirectoryClient
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DataLakeDirectoryClient
- fullName: azure.storage.filedatalake.DataLakeLeaseClient
  isExternal: false
  name: DataLakeLeaseClient
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DataLakeLeaseClient
- fullName: azure.storage.filedatalake.ExponentialRetry
  isExternal: false
  name: ExponentialRetry
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.ExponentialRetry
- fullName: azure.storage.filedatalake.LinearRetry
  isExternal: false
  name: LinearRetry
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.LinearRetry
- fullName: azure.storage.filedatalake.LocationMode
  isExternal: false
  name: LocationMode
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.LocationMode
- fullName: azure.storage.filedatalake.PublicAccess
  isExternal: false
  name: PublicAccess
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.PublicAccess
- fullName: azure.storage.filedatalake.AccessPolicy
  isExternal: false
  name: AccessPolicy
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.AccessPolicy
- fullName: azure.storage.filedatalake.ResourceTypes
  isExternal: false
  name: ResourceTypes
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.ResourceTypes
- fullName: azure.storage.filedatalake.StorageErrorCode
  isExternal: false
  name: StorageErrorCode
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.StorageErrorCode
- fullName: azure.storage.filedatalake.UserDelegationKey
  isExternal: false
  name: UserDelegationKey
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.UserDelegationKey
- fullName: azure.storage.filedatalake.FileSystemProperties
  isExternal: false
  name: FileSystemProperties
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileSystemProperties
- fullName: azure.storage.filedatalake.FileSystemPropertiesPaged
  isExternal: false
  name: FileSystemPropertiesPaged
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileSystemPropertiesPaged
- fullName: azure.storage.filedatalake.DirectoryProperties
  isExternal: false
  name: DirectoryProperties
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DirectoryProperties
- fullName: azure.storage.filedatalake.FileProperties
  isExternal: false
  name: FileProperties
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileProperties
- fullName: azure.storage.filedatalake.PathProperties
  isExternal: false
  name: PathProperties
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.PathProperties
- fullName: azure.storage.filedatalake.PathPropertiesPaged
  isExternal: false
  name: PathPropertiesPaged
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.PathPropertiesPaged
- fullName: azure.storage.filedatalake.LeaseProperties
  isExternal: false
  name: LeaseProperties
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.LeaseProperties
- fullName: azure.storage.filedatalake.ContentSettings
  isExternal: false
  name: ContentSettings
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.ContentSettings
- fullName: azure.storage.filedatalake.AccountSasPermissions
  isExternal: false
  name: AccountSasPermissions
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.AccountSasPermissions
- fullName: azure.storage.filedatalake.FileSystemSasPermissions
  isExternal: false
  name: FileSystemSasPermissions
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileSystemSasPermissions
- fullName: azure.storage.filedatalake.DirectorySasPermissions
  isExternal: false
  name: DirectorySasPermissions
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.DirectorySasPermissions
- fullName: azure.storage.filedatalake.FileSasPermissions
  isExternal: false
  name: FileSasPermissions
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.FileSasPermissions
- fullName: azure.storage.filedatalake.generate_account_sas
  isExternal: false
  name: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, **kwargs)
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.generate_account_sas
- fullName: azure.storage.filedatalake.generate_file_system_sas
  isExternal: false
  name: generate_file_system_sas(account_name, file_system_name, credential, permission=None,
    expiry=None, **kwargs)
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.generate_file_system_sas
- fullName: azure.storage.filedatalake.generate_directory_sas
  isExternal: false
  name: generate_directory_sas(account_name, file_system_name, directory_name, credential,
    permission=None, expiry=None, **kwargs)
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.generate_directory_sas
- fullName: azure.storage.filedatalake.generate_file_sas
  isExternal: false
  name: generate_file_sas(account_name, file_system_name, directory_name, file_name,
    credential, permission=None, expiry=None, **kwargs)
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.generate_file_sas
- fullName: azure.storage.filedatalake.StorageStreamDownloader
  isExternal: false
  name: StorageStreamDownloader
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.StorageStreamDownloader
- fullName: azure.storage.filedatalake.aio
  isExternal: false
  name: aio
  parent: azure.storage.filedatalake
  uid: azure.storage.filedatalake.aio
