### YamlMime:PythonClass
uid: azure.storage.filedatalake.DataLakeLeaseClient
name: DataLakeLeaseClient
fullName: azure.storage.filedatalake.DataLakeLeaseClient
module: azure.storage.filedatalake
inheritances:
- builtins.object
summary: 'Creates a new DataLakeLeaseClient.


  This client provides lease operations on a FileSystemClient, DataLakeDirectoryClient
  or DataLakeFileClient.'
constructor:
  syntax: DataLakeLeaseClient(client, lease_id=None)
  parameters:
  - name: client
    description: The client of the file system, directory, or file to lease.
    isRequired: true
    types:
    - <xref:azure.storage.filedatalake.FileSystemClient>
    - <xref:azure.storage.filedatalake.DataLakeDirectoryClient>
    - <xref:azure.storage.filedatalake.DataLakeFileClient>
  - name: lease_id
    description: 'A string representing the lease ID of an existing lease. This value
      does not

      need to be specified in order to acquire a new lease, or break one.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: 'The ID of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired.'
  name: id
  types:
  - <xref:str>
- description: 'The ETag of the lease currently being maintained. This will be *None*
    if no

    lease has yet been acquired or modified.'
  name: etag
  types:
  - <xref:str>
- description: 'The last modified timestamp of the lease currently being maintained.

    This will be *None* if no lease has yet been acquired or modified.'
  name: last_modified
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.storage.filedatalake.DataLakeLeaseClient.acquire
  name: acquire
  summary: 'Requests a new lease.


    If the file/file system does not have an active lease, the DataLake service creates
    a

    lease on the file/file system and returns a new lease ID.'
  signature: acquire(lease_duration=-1, **kwargs)
  parameters:
  - name: lease_duration
    description: 'Specifies the duration of the lease, in seconds, or negative one

      (-1) for a lease that never expires. A non-infinite lease can be

      between 15 and 60 seconds. A lease duration cannot be changed

      using renew or change. Default is -1 (infinite lease).'
    isRequired: true
    defaultValue: '-1'
    types:
    - <xref:int>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.filedatalake.DataLakeLeaseClient.break_lease
  name: break_lease
  summary: 'Break the lease, if the file system or file has an active lease.


    Once a lease is broken, it cannot be renewed. Any authorized request can break
    the lease;

    the request is not required to specify a matching lease ID. When a lease

    is broken, the lease break period is allowed to elapse, during which time

    no lease operation except break and release can be performed on the file system
    or file.

    When a lease is successfully broken, the response indicates the interval

    in seconds until a new lease can be acquired.'
  signature: break_lease(lease_break_period=None, **kwargs)
  parameters:
  - name: lease_break_period
    description: 'This is the proposed duration of seconds that the lease

      should continue before it is broken, between 0 and 60 seconds. This

      break period is only used if it is shorter than the time remaining

      on the lease. If longer, the time remaining on the lease is used.

      A new lease will not be available before the break period has

      expired, but the lease may be held for longer than the break

      period. If this header does not appear with a break

      operation, a fixed-duration lease breaks after the remaining lease

      period elapses, and an infinite lease breaks immediately.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: Approximate time remaining in the lease period, in seconds.
    types:
    - <xref:int>
- uid: azure.storage.filedatalake.DataLakeLeaseClient.change
  name: change
  summary: Change the lease ID of an active lease.
  signature: change(proposed_lease_id, **kwargs)
  parameters:
  - name: proposed_lease_id
    description: 'Proposed lease ID, in a GUID string format. The DataLake service
      returns 400

      (Invalid request) if the proposed lease ID is not in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
- uid: azure.storage.filedatalake.DataLakeLeaseClient.release
  name: release
  summary: 'Release the lease.


    The lease may be released if the client lease id specified matches

    that associated with the file system or file. Releasing the lease allows another
    client

    to immediately acquire the lease for the file system or file as soon as the release
    is complete.'
  signature: release(**kwargs)
  parameters:
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
- uid: azure.storage.filedatalake.DataLakeLeaseClient.renew
  name: renew
  summary: 'Renews the lease.


    The lease can be renewed if the lease ID specified in the

    lease client matches that associated with the file system or file. Note that

    the lease may be renewed even if it has expired as long as the file system

    or file has not been leased again since the expiration of that lease. When you

    renew a lease, the lease duration clock resets.'
  signature: renew(**kwargs)
  parameters:
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: None
