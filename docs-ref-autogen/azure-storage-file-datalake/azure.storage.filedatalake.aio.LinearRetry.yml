### YamlMime:PythonClass
uid: azure.storage.filedatalake.aio.LinearRetry
name: LinearRetry
fullName: azure.storage.filedatalake.aio.LinearRetry
module: azure.storage.filedatalake.aio
inheritances:
- azure.storage.filedatalake._shared.policies_async.AsyncStorageRetryPolicy
summary: 'Linear retry.


  Constructs a Linear retry object.'
constructor:
  syntax: LinearRetry(backoff=15, retry_total=3, retry_to_secondary=False, random_jitter_range=3,
    **kwargs)
  parameters:
  - name: backoff
    description: The backoff interval, in seconds, between retries.
    defaultValue: '15'
    types:
    - <xref:int>
  - name: max_attempts
    description: The maximum number of retry attempts.
    isRequired: true
    types:
    - <xref:int>
  - name: retry_to_secondary
    description: 'Whether the request should be retried to secondary, if able. This
      should

      only be enabled of RA-GRS accounts are used and potentially stale data

      can be handled.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: random_jitter_range
    description: 'A number in seconds which indicates a range to jitter/randomize
      for the back-off interval.

      For example, a random_jitter_range of 3 results in the back-off interval x to
      vary between x+3 and x-3.'
    defaultValue: '3'
    types:
    - <xref:int>
  - name: retry_total
    defaultValue: '3'
methods:
- uid: azure.storage.filedatalake.aio.LinearRetry.configure_retries
  name: configure_retries
  signature: configure_retries(request)
  parameters:
  - name: request
    isRequired: true
- uid: azure.storage.filedatalake.aio.LinearRetry.get_backoff_time
  name: get_backoff_time
  summary: Calculates how long to sleep before retrying.
  signature: get_backoff_time(settings)
  parameters:
  - name: settings
    description: The configurable values pertaining to the backoff time.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  return:
    description: 'An integer indicating how long to wait before retrying the request,

      or None to indicate no retry should be performed.'
    types:
    - <xref:int>
    - <xref:None>
- uid: azure.storage.filedatalake.aio.LinearRetry.increment
  name: increment
  summary: Increment the retry counters.
  signature: increment(settings, request, response=None, error=None)
  parameters:
  - name: settings
    description: The configurable values pertaining to the increment operation.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: request
    description: A pipeline request object.
    isRequired: true
    types:
    - <xref:<xref:"PipelineRequest">>
  - name: '"PipelineResponse"'
    description: A pipeline response object.
    isRequired: true
  - name: error
    description: 'An error encountered during the request, or

      None if the response was received successfully.'
    defaultValue: None
  - name: response
    defaultValue: None
  return:
    description: Whether the retry attempts are exhausted.
    types:
    - <xref:bool>
- uid: azure.storage.filedatalake.aio.LinearRetry.send
  name: send
  signature: async send(request)
  parameters:
  - name: request
    isRequired: true
- uid: azure.storage.filedatalake.aio.LinearRetry.sleep
  name: sleep
  signature: async sleep(settings, transport)
  parameters:
  - name: settings
    isRequired: true
  - name: transport
    isRequired: true
attributes:
- uid: azure.storage.filedatalake.aio.LinearRetry.next
  name: next
  summary: Pointer to the next policy or a transport (wrapped as a policy). Will be
    set at pipeline creation.
  signature: 'next: HTTPPolicy[HTTPRequestType, HTTPResponseType]'
