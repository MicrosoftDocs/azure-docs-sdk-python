### YamlMime:PythonClass
uid: azure.identity.UsernamePasswordCredential
name: UsernamePasswordCredential
fullName: azure.identity.UsernamePasswordCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Authenticates a user with a username and password.


  In general, Microsoft doesn''t recommend this kind of authentication, because it''s
  less secure than other

  authentication flows.


  Authentication with this credential is not interactive, so it is **not compatible
  with any form of

  multi-factor authentication or consent prompting**. The application must already
  have consent from the user or

  a directory admin.


  This credential can only authenticate work and school accounts; Microsoft accounts
  are not supported.

  See [Microsoft Entra ID documentation](https://learn.microsoft.com/entra/fundamentals/sign-up-organization)
  for more information about

  account types.'
constructor:
  syntax: 'UsernamePasswordCredential(client_id: str, username: str, password: str,
    **kwargs: Any)'
  parameters:
  - name: client_id
    description: The application's client ID
    isRequired: true
    types:
    - <xref:str>
  - name: username
    description: The user's username (usually an email address)
    isRequired: true
    types:
    - <xref:str>
  - name: password
    description: The user's password
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: authority
    description: 'Authority of a Microsoft Entra endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'Tenant ID or a domain associated with a tenant. If not provided,
      defaults to the

      "organizations" tenant, which supports only Microsoft Entra work or school accounts.'
    types:
    - <xref:str>
  - name: cache_persistence_options
    description: 'Configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:typing.List>[<xref:str>]
  - name: enable_support_logging
    description: 'Enables additional support logging in the underlying MSAL library.

      This logging potentially contains personally identifiable information and is
      intended to be used only for

      troubleshooting purposes.'
    types:
    - <xref:bool>
examples:
- "Create a UsernamePasswordCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\47\\\\azure-identity-1.16.0\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity import UsernamePasswordCredential\n\
  \n   credential = UsernamePasswordCredential(\n       client_id=\"<client_id>\"\
  ,\n       username=\"<username>\",\n       password=\"<password>\",\n   )\n\n  \
  \ ````\n"
methods:
- uid: azure.identity.UsernamePasswordCredential.authenticate
  name: authenticate
  summary: Interactively authenticate a user.
  signature: 'authenticate(*, scopes: Iterable[str] | None = None, claims: str | None
    = None, **kwargs: Any) -> AuthenticationRecord'
  keywordOnlyParameters:
  - name: scopes
    description: 'scopes to request during authentication, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.scopes>. If provided, successful
      authentication will cache an access token

      for these scopes.'
    types:
    - <xref:typing.Iterable>[<xref:str>]
  - name: claims
    description: 'additional claims required in the token, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.claims>'
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.identity.AuthenticationRecord>
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
- uid: azure.identity.UsernamePasswordCredential.close
  name: close
  signature: close() -> None
- uid: azure.identity.UsernamePasswordCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, claims: str | None = None, tenant_id: str |
    None = None, enable_cae: bool = False, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure'
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  - name: enable_cae
    description: 'indicates whether to enable Continuous Access Evaluation (CAE) for
      the requested

      token. Defaults to False.'
    types:
    - <xref:bool>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential is unable to attempt authentication because it lacks

      required data, state, or platform support'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
  - type: azure.identity.AuthenticationRequiredError
    description: 'user interaction is necessary to acquire a token, and the credential
      is

      configured not to begin this automatically. Call'
  - type: azure.identity.UsernamePasswordCredential.authenticate
    description: to begin interactive authentication.
