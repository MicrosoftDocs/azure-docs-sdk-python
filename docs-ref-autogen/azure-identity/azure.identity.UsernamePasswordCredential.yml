### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.UsernamePasswordCredential.get_token
  class: azure.identity.UsernamePasswordCredential
  fullName: azure.identity.UsernamePasswordCredential
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      type: azure.identity._internal.msal_credentials.MsalCredential
    type: azure.identity._internal.msal_credentials.PublicClientCredential
  langs:
  - python
  module: azure.identity
  name: UsernamePasswordCredential
  summary: 'Authenticates a user with a username and password.


    In general, Microsoft doesn''t recommend this kind of authentication, because
    it''s less secure than other

    authentication flows.


    Authentication with this credential is not interactive, so it is **not compatible
    with any form of

    multi-factor authentication or consent prompting**. The application must already
    have consent from the user or

    a directory admin.


    This credential can only authenticate work and school accounts; Microsoft accounts
    are not supported.

    See this document for more information about account types:

    [https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/sign-up-organization](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/sign-up-organization)'
  syntax:
    content: UsernamePasswordCredential(client_id, username, password, **kwargs)
    parameters:
    - description: the application's client ID
      id: client_id
      type:
      - str
    - description: the user's username (usually an email address)
      id: username
      type:
      - str
    - description: the user's password
      id: password
      type:
      - str
    - description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

        the authority for Azure Public Cloud (which is the default). <xref:azure.identity.KnownAuthorities>

        defines authorities for other clouds.'
      id: authority
      type:
      - str
    - description: 'tenant ID or a domain associated with a tenant. If not provided,
        defaults to the

        ''organizations'' tenant, which supports only Azure Active Directory work
        or school accounts.'
      id: tenant_id
      type:
      - str
  type: class
  uid: azure.identity.UsernamePasswordCredential
- class: azure.identity.UsernamePasswordCredential
  exceptions:
  - description: 'authentication failed. The error''s `message`

      attribute gives a reason. Any error response from Azure Active Directory is
      available as the error''s

      `response` attribute.'
    type: ~azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.UsernamePasswordCredential.get_token
  langs:
  - python
  module: azure.identity
  name: get_token(*scopes, **kwargs)
  namewithoutparameters: get_token
  summary: 'Request an access token for *scopes*.



    > [!NOTE]

    > This method is called by Azure SDK clients. It isn''t intended for use in application
    code.

    >'
  syntax:
    content: get_token(*scopes, **kwargs)
    parameters:
    - description: desired scopes for the token
      id: scopes
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.core.credentials.AccessToken
  type: method
  uid: azure.identity.UsernamePasswordCredential.get_token
references:
- fullName: azure.identity.UsernamePasswordCredential.get_token
  isExternal: false
  name: get_token(*scopes, **kwargs)
  parent: azure.identity.UsernamePasswordCredential
  uid: azure.identity.UsernamePasswordCredential.get_token
