### YamlMime:PythonClass
uid: azure.identity.AzureCliCredential
name: AzureCliCredential
fullName: azure.identity.AzureCliCredential
module: azure.identity
summary: 'Authenticates by requesting a token from the Azure CLI.


  This requires previously logging in to Azure via "az login", and will use the CLI''s
  currently logged in identity.'
constructor:
  syntax: 'AzureCliCredential(*, tenant_id: str = '''', subscription: str | None =
    None, additionally_allowed_tenants: List[str] | None = None, process_timeout:
    int = 10)'
  keywordOnlyParameters:
  - name: tenant_id
    description: Optional tenant to include in the token request.
    types:
    - <xref:str>
  - name: subscription
    description: 'The name or ID of a subscription. Set this to acquire tokens for
      an account other

      than the Azure CLI''s current account.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    defaultValue: None
    types:
    - <xref:typing.List>[<xref:str>]
  - name: process_timeout
    description: Seconds to wait for the Azure CLI process to respond. Defaults to
      10 seconds.
    defaultValue: '10'
    types:
    - <xref:int>
examples:
- "Create an AzureCliCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.10\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\56\\\\azure_identity-1.21.0\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity import AzureCliCredential\n\
  \n   credential = AzureCliCredential()\n\n   ````\n"
methods:
- uid: azure.identity.AzureCliCredential.close
  name: close
  summary: Calling this method is unnecessary.
  signature: close() -> None
- uid: azure.identity.AzureCliCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients. Applications calling
    this method directly must

    also handle token caching because this credential doesn''t cache the tokens it
    acquires.'
  signature: 'get_token(*scopes: str, claims: str | None = None, tenant_id: str |
    None = None, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scope for the access token. This credential allows only
      one scope per request.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: not used by this credential; any value provided will be ignored.
    defaultValue: None
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: the credential was unable to invoke the Azure CLI.
  - type: azure.core.exceptions.ClientAuthenticationError
    description: 'the credential invoked the Azure CLI but didn''t

      receive an access token.'
- uid: azure.identity.AzureCliCredential.get_token_info
  name: get_token_info
  summary: 'Request an access token for *scopes*.


    This is an alternative to *get_token* to enable certain scenarios that require
    additional properties

    on the token. This method is called automatically by Azure SDK clients. Applications
    calling this method

    directly must also handle token caching because this credential doesn''t cache
    the tokens it acquires.'
  signature: 'get_token_info(*scopes: str, options: TokenRequestOptions | None = None)
    -> AccessTokenInfo'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This credential allows only
      one scope per request.

      For more information about scopes, see [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: options
    description: A dictionary of options for the token request. Unknown options will
      be ignored. Optional.
    defaultValue: None
    types:
    - <xref:azure.core.credentials.TokenRequestOptions>
  return:
    description: An AccessTokenInfo instance containing information about the token.
    types:
    - <xref:azure.core.credentials.AccessTokenInfo>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: the credential was unable to invoke the Azure CLI.
  - type: azure.core.exceptions.ClientAuthenticationError
    description: 'the credential invoked the Azure CLI but didn''t

      receive an access token.'
