### YamlMime:PythonClass
uid: azure.identity.InteractiveBrowserCredential
name: InteractiveBrowserCredential
fullName: azure.identity.InteractiveBrowserCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Opens a browser to interactively authenticate a user.


  <xref:azure.identity.InteractiveBrowserCredential.get_token> opens a browser to
  a login URL provided by Microsoft Entra ID and authenticates a user

  there with the authorization code flow, using PKCE (Proof Key for Code Exchange)
  internally to protect the code.'
constructor:
  syntax: 'InteractiveBrowserCredential(**kwargs: Any)'
  keywordOnlyParameters:
  - name: authority
    description: 'Authority of a Microsoft Entra endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'a Microsoft Entra tenant ID. Defaults to the "organizations" tenant,
      which can

      authenticate work or school accounts.'
    types:
    - <xref:str>
  - name: client_id
    description: 'Client ID of the Microsoft Entra application users will sign in
      to. If

      unspecified, users will authenticate to an Azure development application.'
    types:
    - <xref:str>
  - name: login_hint
    description: 'a username suggestion to pre-fill the login page''s username/email
      address field. A user

      may still log in with a different username.'
    types:
    - <xref:str>
  - name: redirect_uri
    description: 'a redirect URI for the application identified by *client_id* as
      configured in Azure

      Active Directory, for example "[http://localhost:8400](http://localhost:8400)".
      This is only required when passing a value for

      **client_id**, and must match a redirect URI in the application''s registration.
      The credential must be able to

      bind a socket to this URI.'
    types:
    - <xref:str>
  - name: authentication_record
    description: <xref:azure.identity.AuthenticationRecord> returned by <xref:azure.identity.InteractiveBrowserCredential.authenticate>
    types:
    - <xref:azure.identity.AuthenticationRecord>
  - name: disable_automatic_authentication
    description: 'if True, <xref:azure.identity.InteractiveBrowserCredential.get_token>
      will raise

      <xref:azure.identity.AuthenticationRequiredError> when user interaction is required
      to acquire a token. Defaults to False.'
    types:
    - <xref:bool>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: timeout
    description: seconds to wait for the user to complete authentication. Defaults
      to 300 (5 minutes).
    types:
    - <xref:int>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
  - name: enable_support_logging
    description: 'Enables additional support logging in the underlying MSAL library.

      This logging potentially contains personally identifiable information and is
      intended to be used only for

      troubleshooting purposes.'
    types:
    - <xref:bool>
examples:
- "Create an InteractiveBrowserCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\47\\\\azure-identity-1.16.0\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity import InteractiveBrowserCredential\n\
  \n   credential = InteractiveBrowserCredential(\n       client_id=\"<client_id>\"\
  ,\n   )\n\n   ````\n"
methods:
- uid: azure.identity.InteractiveBrowserCredential.authenticate
  name: authenticate
  summary: Interactively authenticate a user.
  signature: 'authenticate(*, scopes: Iterable[str] | None = None, claims: str | None
    = None, **kwargs: Any) -> AuthenticationRecord'
  keywordOnlyParameters:
  - name: scopes
    description: 'scopes to request during authentication, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.scopes>. If provided, successful
      authentication will cache an access token

      for these scopes.'
    types:
    - <xref:typing.Iterable>[<xref:str>]
  - name: claims
    description: 'additional claims required in the token, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.claims>'
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.identity.AuthenticationRecord>
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
- uid: azure.identity.InteractiveBrowserCredential.close
  name: close
  signature: close() -> None
- uid: azure.identity.InteractiveBrowserCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, claims: str | None = None, tenant_id: str |
    None = None, enable_cae: bool = False, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure'
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  - name: enable_cae
    description: 'indicates whether to enable Continuous Access Evaluation (CAE) for
      the requested

      token. Defaults to False.'
    types:
    - <xref:bool>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential is unable to attempt authentication because it lacks

      required data, state, or platform support'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
  - type: azure.identity.AuthenticationRequiredError
    description: 'user interaction is necessary to acquire a token, and the credential
      is

      configured not to begin this automatically. Call'
  - type: azure.identity.InteractiveBrowserCredential.authenticate
    description: to begin interactive authentication.
