### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.aio.CertificateCredential.close
  - azure.identity.aio.CertificateCredential.get_token
  class: azure.identity.aio.CertificateCredential
  fullName: azure.identity.aio.CertificateCredential
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: azure.identity._base.CertificateCredentialBase
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: azure.identity.aio._credentials.base.AsyncCredentialBase
  langs:
  - python
  module: azure.identity.aio
  name: CertificateCredential
  summary: Authenticates as a service principal using a certificate.
  syntax:
    content: CertificateCredential(tenant_id, client_id, certificate_path, **kwargs)
    parameters:
    - description: ID of the service principal's tenant. Also called its 'directory'
        ID.
      id: tenant_id
      type:
      - str
    - description: the service principal's client ID
      id: client_id
      type:
      - str
    - description: path to a PEM-encoded certificate file including the private key
      id: certificate_path
      type:
      - str
    - description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

        the authority for Azure Public Cloud (which is the default). <xref:azure.identity.KnownAuthorities>

        defines authorities for other clouds.'
      id: authority
      type:
      - str
    - description: 'The certificate''s password. If a unicode string, it will be encoded
        as UTF-8. If the certificate

        requires a different encoding, pass appropriately encoded bytes instead.'
      id: password
      type:
      - str
      - bytes
  type: class
  uid: azure.identity.aio.CertificateCredential
- class: azure.identity.aio.CertificateCredential
  fullName: azure.identity.aio.CertificateCredential.close
  langs:
  - python
  module: azure.identity.aio
  name: close()
  namewithoutparameters: close
  summary: Close the credential's transport session.
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.identity.aio.CertificateCredential.close
- class: azure.identity.aio.CertificateCredential
  exceptions:
  - description: 'authentication failed. The error''s `message`

      attribute gives a reason. Any error response from Azure Active Directory is
      available as the error''s

      `response` attribute.'
    type: ~azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.aio.CertificateCredential.get_token
  langs:
  - python
  module: azure.identity.aio
  name: get_token
  namewithoutparameters: get_token
  summary: 'Asynchronously request an access token for *scopes*.



    > [!NOTE]

    > This method is called by Azure SDK clients. It isn''t intended for use in application
    code.

    >'
  syntax:
    parameters:
    - description: desired scopes for the token
      id: scopes
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.core.credentials.AccessToken
  type: method
  uid: azure.identity.aio.CertificateCredential.get_token
references:
- fullName: azure.identity.aio.CertificateCredential.close
  isExternal: false
  name: close()
  parent: azure.identity.aio.CertificateCredential
  uid: azure.identity.aio.CertificateCredential.close
- fullName: azure.identity.aio.CertificateCredential.get_token
  isExternal: false
  name: get_token
  parent: azure.identity.aio.CertificateCredential
  uid: azure.identity.aio.CertificateCredential.get_token
