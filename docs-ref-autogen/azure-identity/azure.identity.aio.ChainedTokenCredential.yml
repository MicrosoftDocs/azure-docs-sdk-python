### YamlMime:PythonClass
uid: azure.identity.aio.ChainedTokenCredential
name: ChainedTokenCredential
fullName: azure.identity.aio.ChainedTokenCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
summary: 'A sequence of credentials that is itself a credential.


  Its <xref:azure.identity.aio.ChainedTokenCredential.get_token> method calls `get_token`
  on each credential in the sequence, in order, returning the first

  valid token received.'
constructor:
  syntax: 'ChainedTokenCredential(*credentials: AsyncTokenCredential)'
  parameters:
  - name: credentials
    description: credential instances to form the chain
    isRequired: true
    types:
    - <xref:azure.core.credentials.AsyncTokenCredential>
examples:
- "Create a ChainedTokenCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\47\\\\azure-identity-1.16.0\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity.aio import\
  \ ChainedTokenCredential, EnvironmentCredential, AzureCliCredential\n\n   credential_chain\
  \ = (\n       # Try EnvironmentCredential first\n       EnvironmentCredential(),\n\
  \       # Fallback to Azure CLI if EnvironmentCredential fails\n       AzureCliCredential(),\n\
  \   )\n   credential = ChainedTokenCredential(*credential_chain)\n\n   ````\n"
methods:
- uid: azure.identity.aio.ChainedTokenCredential.close
  name: close
  summary: Close the transport sessions of all credentials in the chain.
  signature: async close() -> None
- uid: azure.identity.aio.ChainedTokenCredential.get_token
  name: get_token
  summary: 'Asynchronously request a token from each credential, in order, returning
    the first token received.


    If no credential provides a token, raises <xref:azure.core.exceptions.ClientAuthenticationError>

    with an error message from each credential.


    This method is called automatically by Azure SDK clients.'
  signature: 'async get_token(*scopes: str, claims: str | None = None, tenant_id:
    str | None = None, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure.'
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
    description: no credential in the chain provided a token
