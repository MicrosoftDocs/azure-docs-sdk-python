### YamlMime:PythonClass
uid: azure.identity.aio.DefaultAzureCredential
name: DefaultAzureCredential
fullName: azure.identity.aio.DefaultAzureCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._credentials.chained.ChainedTokenCredential
summary: "A default credential capable of handling most Azure SDK authentication scenarios.\n\
  \nThe identity it uses depends on the environment. When an access token is needed,\
  \ it requests one using these\nidentities in turn, stopping when one provides a\
  \ token:\n\n1. A service principal configured by environment variables. See <xref:azure.identity.aio.EnvironmentCredential>\
  \ for more details. \n\n2. An Azure managed identity. See <xref:azure.identity.aio.ManagedIdentityCredential>\
  \ for more details. \n\n3. On Windows only: a user who has signed in with a Microsoft\
  \ application, such as Visual Studio. If multiple identities are in the cache, then\
  \ the value of  the environment variable `AZURE_USERNAME` is used to select which\
  \ identity to use. See <xref:azure.identity.aio.SharedTokenCacheCredential> for\
  \ more details. \n\n4. The user currently signed in to Visual Studio Code. \n\n\
  5. The identity currently logged in to the Azure CLI. \n\n6. The identity currently\
  \ logged in to Azure PowerShell. \n\nThis default behavior is configurable with\
  \ keyword arguments."
constructor:
  syntax: 'DefaultAzureCredential(**kwargs: Any)'
  parameters:
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds. Managed identities ignore this because
      they reside in a single cloud.'
    types:
    - <xref:str>
  - name: exclude_cli_credential
    description: Whether to exclude the Azure CLI from the credential. Defaults to
      **False**.
    types:
    - <xref:bool>
  - name: exclude_environment_credential
    description: 'Whether to exclude a service principal configured by environment

      variables from the credential. Defaults to **False**.'
    types:
    - <xref:bool>
  - name: exclude_powershell_credential
    description: Whether to exclude Azure PowerShell. Defaults to **False**.
    types:
    - <xref:bool>
  - name: exclude_visual_studio_code_credential
    description: 'Whether to exclude stored credential from VS Code.

      Defaults to **False**.'
    types:
    - <xref:bool>
  - name: exclude_managed_identity_credential
    description: 'Whether to exclude managed identity from the credential.

      Defaults to **False**.'
    types:
    - <xref:bool>
  - name: exclude_shared_token_cache_credential
    description: 'Whether to exclude the shared token cache. Defaults to

      **False**.'
    types:
    - <xref:bool>
  - name: managed_identity_client_id
    description: 'The client ID of a user-assigned managed identity. Defaults to the
      value

      of the environment variable AZURE_CLIENT_ID, if any. If not specified, a system-assigned
      identity will be used.'
    types:
    - <xref:str>
  - name: shared_cache_username
    description: 'Preferred username for <xref:azure.identity.aio.SharedTokenCacheCredential>.

      Defaults to the value of environment variable AZURE_USERNAME, if any.'
    types:
    - <xref:str>
  - name: shared_cache_tenant_id
    description: 'Preferred tenant for <xref:azure.identity.aio.SharedTokenCacheCredential>.

      Defaults to the value of environment variable AZURE_TENANT_ID, if any.'
    types:
    - <xref:str>
  - name: visual_studio_code_tenant_id
    description: 'Tenant ID to use when authenticating with

      <xref:azure.identity.aio.VisualStudioCodeCredential>. Defaults to the "Azure:
      Tenant" setting in VS Code''s

      user settings or, when that setting has no value, the "organizations" tenant,
      which supports only Azure Active

      Directory work or school accounts.'
    types:
    - <xref:str>
methods:
- uid: azure.identity.aio.DefaultAzureCredential.get_token
  name: get_token
  summary: 'Asynchronously request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - description: 'authentication failed. The exception has a

      *message* attribute listing each authentication attempt and its error message.'
    type: azure.core.exceptions.ClientAuthenticationError
