### YamlMime:PythonClass
uid: azure.identity.AzureDeveloperCliCredential
name: AzureDeveloperCliCredential
fullName: azure.identity.AzureDeveloperCliCredential
module: azure.identity
summary: "Authenticates by requesting a token from the Azure Developer CLI.\n\nAzure\
  \ Developer CLI is a command-line interface tool that allows developers to create,\
  \ manage, and deploy\nresources in Azure. It's built on top of the Azure CLI and\
  \ provides additional functionality specific\nto Azure developers. It allows users\
  \ to authenticate as a user and/or a service principal against\n[Microsoft Entra\
  \ ID](\"https://learn.microsoft.com/entra/fundamentals/\").\nThe AzureDeveloperCliCredential\
  \ authenticates in a development environment and acquires a token on behalf of\n\
  the logged-in user or service principal in Azure Developer CLI. It acts as the Azure\
  \ Developer CLI logged-in user\nor service principal and executes an Azure CLI command\
  \ underneath to authenticate the application against\nMicrosoft Entra ID.\n\nTo\
  \ use this credential, the developer needs to authenticate locally in Azure Developer\
  \ CLI using one of the\ncommands below:\n\n   * Run \"azd auth login\" in Azure\
  \ Developer CLI to authenticate interactively as a user. \n\n   * Run \"azd auth\
  \ login \u2013client-id 'client_id' \u2013client-secret 'client_secret' \u2013tenant-id\
  \ 'tenant_id'\" to authenticate as a service principal. \n\nYou may need to repeat\
  \ this process after a certain time period, depending on the refresh token validity\
  \ in your\norganization. Generally, the refresh token validity period is a few weeks\
  \ to a few months.\nAzureDeveloperCliCredential will prompt you to sign in again."
constructor:
  syntax: 'AzureDeveloperCliCredential(*, tenant_id: str = '''', additionally_allowed_tenants:
    List[str] | None = None, process_timeout: int = 10)'
  keywordOnlyParameters:
  - name: tenant_id
    description: Optional tenant to include in the token request.
    types:
    - <xref:str>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    defaultValue: None
    types:
    - <xref:typing.List>[<xref:str>]
  - name: process_timeout
    description: 'Seconds to wait for the Azure Developer CLI process to respond.
      Defaults

      to 10 seconds.'
    defaultValue: '10'
    types:
    - <xref:int>
examples:
- "Create an AzureDeveloperCliCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.10\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\56\\\\azure_identity-1.21.0\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity import AzureDeveloperCliCredential\n\
  \n   credential = AzureDeveloperCliCredential()\n\n   ````\n"
methods:
- uid: azure.identity.AzureDeveloperCliCredential.close
  name: close
  summary: Calling this method is unnecessary.
  signature: close() -> None
- uid: azure.identity.AzureDeveloperCliCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients. Applications calling
    this method directly must

    also handle token caching because this credential doesn''t cache the tokens it
    acquires.'
  signature: 'get_token(*scopes: str, claims: str | None = None, tenant_id: str |
    None = None, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scope for the access token. This credential allows only
      one scope per request.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: not used by this credential; any value provided will be ignored.
    defaultValue: None
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential was unable to invoke

      the Azure Developer CLI.'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: 'the credential invoked

      the Azure Developer CLI but didn''t receive an access token.'
- uid: azure.identity.AzureDeveloperCliCredential.get_token_info
  name: get_token_info
  summary: 'Request an access token for *scopes*.


    This is an alternative to *get_token* to enable certain scenarios that require
    additional properties

    on the token. This method is called automatically by Azure SDK clients. Applications
    calling this method

    directly must also handle token caching because this credential doesn''t cache
    the tokens it acquires.'
  signature: 'get_token_info(*scopes: str, options: TokenRequestOptions | None = None)
    -> AccessTokenInfo'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: options
    description: A dictionary of options for the token request. Unknown options will
      be ignored. Optional.
    defaultValue: None
    types:
    - <xref:azure.core.credentials.TokenRequestOptions>
  return:
    description: An AccessTokenInfo instance containing information about the token.
    types:
    - <xref:azure.core.credentials.AccessTokenInfo>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential was unable to invoke

      the Azure Developer CLI.'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: 'the credential invoked

      the Azure Developer CLI but didn''t receive an access token.'
