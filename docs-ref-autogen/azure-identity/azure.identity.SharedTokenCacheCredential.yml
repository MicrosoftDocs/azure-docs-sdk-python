### YamlMime:PythonClass
uid: azure.identity.SharedTokenCacheCredential
name: SharedTokenCacheCredential
fullName: azure.identity.SharedTokenCacheCredential
module: azure.identity
inheritances:
- azure.identity._internal.shared_token_cache.SharedTokenCacheBase
summary: Authenticates using tokens in the local cache shared between Microsoft applications.
constructor:
  syntax: SharedTokenCacheCredential(username=None, **kwargs)
  parameters:
  - name: username
    description: 'Username (typically an email address) of the user to authenticate
      as. This is used when the local cache

      contains tokens for multiple identities.'
    isRequired: true
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'an Azure Active Directory tenant ID. Used to select an account when
      the cache contains

      tokens for multiple identities.'
    types:
    - <xref:str>
  - name: authentication_record
    description: 'an authentication record returned by a user credential such as

      <xref:azure.identity.DeviceCodeCredential> or <xref:azure.identity.InteractiveBrowserCredential>'
    types:
    - <xref:azure.identity.AuthenticationRecord>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If not provided, the
      credential

      will use the persistent cache shared by Microsoft development applications'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
methods:
- uid: azure.identity.SharedTokenCacheCredential.get_token
  name: get_token
  summary: 'Get an access token for *scopes* from the shared cache.


    If no access token is cached, attempt to acquire one using a cached refresh token.


    This method is called automatically by Azure SDK clients.'
  signature: get_token(*scopes, **kwargs)
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - <xref:str>
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure'
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - description: the cache is unavailable or contains insufficient user information
    type: azure.identity.CredentialUnavailableError
  - description: authentication failed. The error's `message` attribute gives a reason.
    type: azure.core.exceptions.ClientAuthenticationError
