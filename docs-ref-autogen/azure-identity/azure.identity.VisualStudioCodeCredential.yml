### YamlMime:PythonClass
uid: azure.identity.VisualStudioCodeCredential
name: VisualStudioCodeCredential
fullName: azure.identity.VisualStudioCodeCredential
module: azure.identity
summary: 'Authenticates as the Azure user signed in to Visual Studio Code via the
  ''Azure Resources'' extension.


  This currently only works in Windows/WSL environments and requires the ''azure-identity-broker''

  package to be installed.'
constructor:
  syntax: 'VisualStudioCodeCredential(**kwargs: Any)'
  keywordOnlyParameters:
  - name: tenant_id
    description: 'A Microsoft Entra tenant ID. Defaults to the tenant specified in
      the authentication

      record file used by the Azure Resources extension.'
    types:
    - <xref:str>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:typing.List>[<xref:str>]
methods:
- uid: azure.identity.VisualStudioCodeCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: close() -> None
- uid: azure.identity.VisualStudioCodeCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes* as the user currently signed in to
    Visual Studio Code.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, claims: str | None = None, tenant_id: str |
    None = None, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential cannot retrieve user details from Visual

      Studio Code'
- uid: azure.identity.VisualStudioCodeCredential.get_token_info
  name: get_token_info
  summary: 'Request an access token for *scopes* as the user currently signed in to
    Visual Studio Code.


    This is an alternative to *get_token* to enable certain scenarios that require
    additional properties

    on the token. This method is called automatically by Azure SDK clients.'
  signature: 'get_token_info(*scopes: str, options: TokenRequestOptions | None = None)
    -> AccessTokenInfo'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: options
    description: A dictionary of options for the token request. Unknown options will
      be ignored. Optional.
    defaultValue: None
    types:
    - <xref:azure.core.credentials.TokenRequestOptions>
  return:
    description: An AccessTokenInfo instance containing information about the token.
    types:
    - <xref:azure.core.credentials.AccessTokenInfo>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential cannot retrieve user details from Visual

      Studio Code.'
