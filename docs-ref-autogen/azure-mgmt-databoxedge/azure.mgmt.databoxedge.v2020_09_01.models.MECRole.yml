### YamlMime:PythonClass
uid: azure.mgmt.databoxedge.v2020_09_01.models.MECRole
name: MECRole
fullName: azure.mgmt.databoxedge.v2020_09_01.models.MECRole
module: azure.mgmt.databoxedge.v2020_09_01.models
inheritances:
- azure.mgmt.databoxedge.v2020_09_01.models._models_py3.Role
summary: 'MEC role.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'MECRole(*, connection_string: Optional[azure.mgmt.databoxedge.v2020_09_01.models._models_py3.AsymmetricEncryptedSecret]
    = None, role_status: Optional[Union[str, azure.mgmt.databoxedge.v2020_09_01.models._data_box_edge_management_client_enums.RoleStatus]]
    = None, **kwargs)'
  parameters:
  - name: kind
    description: 'Required. Role type.Constant filled by server.  Possible values
      include: "IOT",

      "ASA", "Functions", "Cognitive", "MEC", "CloudEdgeManagement", "Kubernetes".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.databoxedge.v2020_09_01.models.RoleTypes>
  - name: connection_string
    description: Activation key of the MEC.
    isRequired: true
    types:
    - <xref:azure.mgmt.databoxedge.v2020_09_01.models.AsymmetricEncryptedSecret>
  - name: role_status
    description: 'Role status. Possible values include: "Enabled", "Disabled".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.databoxedge.v2020_09_01.models.RoleStatus>
variables:
- description: The path ID that uniquely identifies the object.
  name: id
  types:
  - <xref:str>
- description: The object name.
  name: name
  types:
  - <xref:str>
- description: The hierarchical type of the object.
  name: type
  types:
  - <xref:str>
- description: Role configured on ASE resource.
  name: system_data
  types:
  - <xref:azure.mgmt.databoxedge.v2020_09_01.models.SystemData>
