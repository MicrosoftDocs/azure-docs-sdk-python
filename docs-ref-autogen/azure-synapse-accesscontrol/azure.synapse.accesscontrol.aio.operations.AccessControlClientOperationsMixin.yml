### YamlMime:PythonClass
uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin
name: AccessControlClientOperationsMixin
fullName: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin
module: azure.synapse.accesscontrol.aio.operations
inheritances:
- builtins.object
methods:
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.create_role_assignment
  name: create_role_assignment
  summary: Create role assignment.
  signature: 'create_role_assignment(create_role_assignment_options: azure.synapse.accesscontrol.models._models_py3.RoleAssignmentOptions,
    **kwargs) -> azure.synapse.accesscontrol.models._models_py3.RoleAssignmentDetails'
  parameters:
  - name: create_role_assignment_options
    description: Details of role id and object id.
    isRequired: true
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentOptions>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.delete_role_assignment_by_id
  name: delete_role_assignment_by_id
  summary: Delete role assignment by role assignment Id.
  signature: 'delete_role_assignment_by_id(role_assignment_id: str, **kwargs) -> None'
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.get_caller_role_assignments
  name: get_caller_role_assignments
  summary: List role assignments of the caller.
  signature: get_caller_role_assignments(**kwargs) -> typing.List[str]
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: list of str, or the result of cls(response)
    types:
    - <xref:list>[<xref:str>]
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.get_role_assignment_by_id
  name: get_role_assignment_by_id
  summary: Get role assignment by role assignment Id.
  signature: 'get_role_assignment_by_id(role_assignment_id: str, **kwargs) -> azure.synapse.accesscontrol.models._models_py3.RoleAssignmentDetails'
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.get_role_assignments
  name: get_role_assignments
  summary: List role assignments.
  signature: 'get_role_assignments(role_id: typing.Union[str, NoneType] = None, principal_id:
    typing.Union[str, NoneType] = None, continuation_token_parameter: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.List[_ForwardRef(''_models.RoleAssignmentDetails'')]'
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    defaultValue: None
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    defaultValue: None
    types:
    - <xref:str>
  - name: continuation_token_parameter
    description: Continuation token.
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: list of RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:list>[<xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>]
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.get_role_definition_by_id
  name: get_role_definition_by_id
  summary: Get role by role Id.
  signature: 'get_role_definition_by_id(role_id: str, **kwargs) -> azure.synapse.accesscontrol.models._models_py3.SynapseRole'
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: SynapseRole, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.SynapseRole>
- uid: azure.synapse.accesscontrol.aio.operations.AccessControlClientOperationsMixin.get_role_definitions
  name: get_role_definitions
  summary: List roles.
  signature: get_role_definitions(**kwargs) -> typing.AsyncIterable[_ForwardRef('_models.RolesListResponse')]
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RolesListResponse or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.synapse.accesscontrol.models.RolesListResponse>]
