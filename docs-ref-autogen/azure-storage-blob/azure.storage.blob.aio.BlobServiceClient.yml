### YamlMime:PythonClass
uid: azure.storage.blob.aio.BlobServiceClient
name: BlobServiceClient
fullName: azure.storage.blob.aio.BlobServiceClient
module: azure.storage.blob.aio
inheritances:
- azure.storage.blob._shared.base_client_async.AsyncStorageAccountHostsMixin
- azure.storage.blob._blob_service_client.BlobServiceClient
- azure.storage.blob._encryption.StorageEncryptionMixin
summary: 'A client to interact with the Blob Service at the account level.


  This client provides operations to retrieve and configure the account properties

  as well as list, create and delete containers within the account.

  For operations relating to a specific container or blob, clients for those entities

  can also be retrieved using the *get_client* functions.'
constructor:
  syntax: 'BlobServiceClient(account_url: str, credential: str | Dict[str, str] |
    AzureNamedKeyCredential | AzureSasCredential | AsyncTokenCredential | None = None,
    **kwargs: Any)'
  parameters:
  - name: account_url
    description: 'The URL to the blob storage account. Any other entities included

      in the URL path (e.g. container or blob) will be discarded. This URL can be
      optionally

      authenticated with a SAS token.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential or AzureNamedKeyCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.

      If using an instance of AzureNamedKeyCredential, "name" should be the storage
      account name, and "key"

      should be the storage account key.'
    defaultValue: None
  - name: api_version
    description: 'The Storage API version to use for requests. Default value is the
      most recent service version that is

      compatible with the current SDK. Setting to an older version may result in reduced
      feature compatibility.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: secondary_hostname
    description: The hostname of the secondary endpoint.
    types:
    - <xref:str>
  - name: max_block_size
    description: 'The maximum chunk size for uploading a block blob in chunks.

      Defaults to 4*1024*1024, or 4MB.'
    types:
    - <xref:int>
  - name: max_single_put_size
    description: 'If the blob size is less than or equal max_single_put_size, then
      the blob will be

      uploaded with only one http PUT request. If the blob size is larger than max_single_put_size,

      the blob will be uploaded in chunks. Defaults to 64*1024*1024, or 64MB.'
    types:
    - <xref:int>
  - name: min_large_block_upload_threshold
    description: 'The minimum chunk size required to use the memory efficient

      algorithm when uploading a block blob. Defaults to 4*1024*1024+1.'
    types:
    - <xref:int>
  - name: use_byte_buffer
    description: Use a byte buffer for block blob uploads. Defaults to False.
    types:
    - <xref:bool>
  - name: max_page_size
    description: The maximum chunk size for uploading a page blob. Defaults to 4*1024*1024,
      or 4MB.
    types:
    - <xref:int>
  - name: max_single_get_size
    description: 'The maximum size for a blob to be downloaded in a single call,

      the exceeded part will be downloaded in chunks (could be parallel). Defaults
      to 32*1024*1024, or 32MB.'
    types:
    - <xref:int>
  - name: max_chunk_get_size
    description: 'The maximum chunk size used for downloading a blob. Defaults to
      4*1024*1024,

      or 4MB.'
    types:
    - <xref:int>
methods:
- uid: azure.storage.blob.aio.BlobServiceClient.create_container
  name: create_container
  summary: 'Creates a new container under the specified account.


    If the container with the same name already exists, a ResourceExistsError will

    be raised. This method returns a client with which to interact with the newly

    created container.'
  signature: 'async create_container(name: str, metadata: Dict[str, str] | None =
    None, public_access: PublicAccess | str | None = None, **kwargs) -> ContainerClient'
  parameters:
  - name: name
    description: The name of the container to create.
    isRequired: true
    types:
    - <xref:str>
  - name: metadata
    description: 'A dict with name-value pairs to associate with the

      container as metadata. Example: *{''Category'':''test''}*'
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: public_access
    description: 'Possible values include: ''container'', ''blob''.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.PublicAccess>
  - name: container_encryption_scope
    description: 'Specifies the default encryption scope to set on the container and
      use for

      all future writes.


      New in version 12.2.0.'
    types:
    - <xref:dict>
    - <xref:azure.storage.blob.ContainerEncryptionScope>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:azure.storage.blob.aio.ContainerClient>
- uid: azure.storage.blob.aio.BlobServiceClient.delete_container
  name: delete_container
  summary: 'Marks the specified container for deletion.


    The container and any blobs contained within it are later deleted during garbage
    collection.

    If the container is not found, a ResourceNotFoundError will be raised.'
  signature: 'async delete_container(container: ContainerProperties | str, lease:
    BlobLeaseClient | str | None = None, **kwargs) -> None'
  parameters:
  - name: container
    description: 'The container to delete. This can either be the name of the container,

      or an instance of ContainerProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.ContainerProperties>
  - name: lease
    description: 'If specified, delete_container only succeeds if the

      container''s lease is active and matches this ID.

      Required if the container has an active lease.'
    isRequired: true
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobServiceClient.find_blobs_by_tags
  name: find_blobs_by_tags
  summary: 'The Filter Blobs operation enables callers to list blobs across all

    containers whose tags match a given search expression.  Filter blobs

    searches across all containers within a storage account but can be

    scoped within the expression to a single container.'
  signature: 'find_blobs_by_tags(filter_expression: str, **kwargs: Any) -> AsyncItemPaged[FilteredBlob]'
  parameters:
  - name: filter_expression
    description: 'The expression to find blobs whose tags matches the specified condition.

      eg. ""yourtagname"=''firsttag'' and "yourtagname2"=''secondtag''"

      To specify a container, eg. "@container=''containerName'' and "Name"=''C''"'
    isRequired: true
    types:
    - <xref:str>
  - name: results_per_page
    description: The max result per page when paginating.
    types:
    - <xref:int>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: An iterable (auto-paging) response of BlobProperties.
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.storage.blob.FilteredBlob>]
- uid: azure.storage.blob.aio.BlobServiceClient.get_account_information
  name: get_account_information
  summary: 'Gets information related to the storage account.


    The information can also be retrieved if the user has a SAS to a container or
    blob.

    The keys in the returned dictionary include ''sku_name'' and ''account_kind''.'
  signature: 'async get_account_information(**kwargs: Any) -> Dict[str, str]'
  return:
    description: A dict of account information (SKU and account type).
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
- uid: azure.storage.blob.aio.BlobServiceClient.get_blob_client
  name: get_blob_client
  summary: 'Get a client to interact with the specified blob.


    The blob need not already exist.'
  signature: 'get_blob_client(container: ContainerProperties | str, blob: BlobProperties
    | str, snapshot: Dict[str, Any] | str | None = None) -> BlobClient'
  parameters:
  - name: container
    description: 'The container that the blob is in. This can either be the name of
      the container,

      or an instance of ContainerProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.ContainerProperties>
  - name: blob
    description: 'The blob with which to interact. This can either be the name of
      the blob,

      or an instance of BlobProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.BlobProperties>
  - name: snapshot
    description: 'The optional blob snapshot on which to operate. This can either
      be the ID of the snapshot,

      or a dictionary output returned by

      <xref:azure.storage.blob.aio.BlobClient.create_snapshot>.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:dict>(<xref:str>, <xref:Any>)
  return:
    description: A BlobClient.
    types:
    - <xref:azure.storage.blob.aio.BlobClient>
- uid: azure.storage.blob.aio.BlobServiceClient.get_container_client
  name: get_container_client
  summary: 'Get a client to interact with the specified container.


    The container need not already exist.'
  signature: 'get_container_client(container: ContainerProperties | str) -> ContainerClient'
  parameters:
  - name: container
    description: 'The container. This can either be the name of the container,

      or an instance of ContainerProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.ContainerProperties>
  return:
    description: A ContainerClient.
    types:
    - <xref:azure.storage.blob.aio.ContainerClient>
- uid: azure.storage.blob.aio.BlobServiceClient.get_service_properties
  name: get_service_properties
  summary: 'Gets the properties of a storage account''s Blob service, including

    Azure Storage Analytics.'
  signature: 'async get_service_properties(**kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'An object containing blob service properties such as

      analytics logging, hour/minute metrics, cors rules, etc.'
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobServiceClient.get_service_stats
  name: get_service_stats
  summary: 'Retrieves statistics related to replication for the Blob service.


    It is only available when read-access geo-redundant replication is enabled for

    the storage account.


    With geo-redundant replication, Azure Storage maintains your data durable

    in two locations. In both locations, Azure Storage constantly maintains

    multiple healthy replicas of your data. The location where you read,

    create, update, or delete data is the primary storage account location.

    The primary location exists in the region you choose at the time you

    create an account via the Azure Management Azure classic portal, for

    example, North Central US. The location to which your data is replicated

    is the secondary location. The secondary location is automatically

    determined based on the location of the primary; it is in a second data

    center that resides in the same region as the primary location. Read-only

    access is available from the secondary location, if read-access geo-redundant

    replication is enabled for your storage account.'
  signature: 'async get_service_stats(**kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: The blob service stats.
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobServiceClient.get_user_delegation_key
  name: get_user_delegation_key
  summary: 'Obtain a user delegation key for the purpose of signing SAS tokens.

    A token credential must be present on the service object for this request to succeed.'
  signature: 'async get_user_delegation_key(key_start_time: datetime, key_expiry_time:
    datetime, **kwargs: Any) -> UserDelegationKey'
  parameters:
  - name: key_start_time
    description: A DateTime value. Indicates when the key becomes valid.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: key_expiry_time
    description: A DateTime value. Indicates when the key stops being valid.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: The user delegation key.
    types:
    - <xref:azure.storage.blob.UserDelegationKey>
- uid: azure.storage.blob.aio.BlobServiceClient.list_containers
  name: list_containers
  summary: 'Returns a generator to list the containers under the specified account.


    The generator will lazily follow the continuation tokens returned by

    the service and stop when all containers have been returned.'
  signature: 'list_containers(name_starts_with: str | None = None, include_metadata:
    bool | None = False, **kwargs) -> AsyncItemPaged[ContainerProperties]'
  parameters:
  - name: name_starts_with
    description: 'Filters the results to return only containers whose names

      begin with the specified prefix.'
    isRequired: true
    types:
    - <xref:str>
  - name: include_metadata
    description: 'Specifies that container metadata to be returned in the response.

      The default value is *False*.'
    isRequired: true
    types:
    - <xref:bool>
  - name: include_deleted
    description: 'Specifies that deleted containers to be returned in the response.
      This is for container restore enabled

      account. The default value is *False*.

      .. versionadded:: 12.4.0'
    types:
    - <xref:bool>
  - name: include_system
    description: 'Flag specifying that system containers should be included.

      .. versionadded:: 12.10.0'
    types:
    - <xref:bool>
  - name: results_per_page
    description: 'The maximum number of container names to retrieve per API

      call. If the request does not specify the server will return up to 5,000 items.'
    types:
    - <xref:int>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: An iterable (auto-paging) of ContainerProperties.
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.storage.blob.ContainerProperties>]
- uid: azure.storage.blob.aio.BlobServiceClient.set_service_properties
  name: set_service_properties
  summary: 'Sets the properties of a storage account''s Blob service, including

    Azure Storage Analytics.


    If an element (e.g. analytics_logging) is left as None, the

    existing settings on the service for that functionality are preserved.'
  signature: 'async set_service_properties(analytics_logging: BlobAnalyticsLogging
    | None = None, hour_metrics: Metrics | None = None, minute_metrics: Metrics |
    None = None, cors: List[CorsRule] | None = None, target_version: str | None =
    None, delete_retention_policy: RetentionPolicy | None = None, static_website:
    StaticWebsite | None = None, **kwargs) -> None'
  parameters:
  - name: analytics_logging
    description: Groups the Azure Analytics Logging settings.
    isRequired: true
    types:
    - <xref:azure.storage.blob.BlobAnalyticsLogging>
  - name: hour_metrics
    description: 'The hour metrics settings provide a summary of request

      statistics grouped by API in hourly aggregates for blobs.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.Metrics>
  - name: minute_metrics
    description: 'The minute metrics settings provide request statistics

      for each minute for blobs.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.Metrics>
  - name: cors
    description: 'You can include up to five CorsRule elements in the

      list. If an empty list is specified, all CORS rules will be deleted,

      and CORS will be disabled for the service.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.storage.blob.CorsRule>]
  - name: target_version
    description: 'Indicates the default version to use for requests if an incoming

      request''s version is not specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: delete_retention_policy
    description: 'The delete retention policy specifies whether to retain deleted
      blobs.

      It also specifies the number of days and versions of blob to keep.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.RetentionPolicy>
  - name: static_website
    description: 'Specifies whether the static website feature is enabled,

      and if yes, indicates the index document and 404 error document to use.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.StaticWebsite>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobServiceClient.undelete_container
  name: undelete_container
  summary: 'Restores soft-deleted container.


    Operation will only be successful if used within the specified number of days

    set in the delete retention policy.


    New in version 12.4.0: This operation was introduced in API version ''2019-12-12''.'
  signature: 'async undelete_container(deleted_container_name: str, deleted_container_version:
    str, **kwargs: Any) -> ContainerClient'
  parameters:
  - name: deleted_container_name
    description: Specifies the name of the deleted container to restore.
    isRequired: true
    types:
    - <xref:str>
  - name: deleted_container_version
    description: Specifies the version of the deleted container to restore.
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:azure.storage.blob.aio.ContainerClient>
