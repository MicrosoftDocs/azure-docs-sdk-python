### YamlMime:PythonClass
uid: azure.storage.blob.aio.StorageStreamDownloader
name: StorageStreamDownloader
fullName: azure.storage.blob.aio.StorageStreamDownloader
module: azure.storage.blob.aio
summary: A streaming object to download from Azure Storage.
constructor:
  syntax: 'StorageStreamDownloader(clients: AzureBlobStorage = None, config: StorageConfiguration
    = None, start_range: int | None = None, end_range: int | None = None, validate_content:
    bool = None, encryption_options: Dict[str, Any] = None, max_concurrency: int =
    1, name: str = None, container: str = None, encoding: str | None = None, download_cls:
    Callable | None = None, **kwargs: Any)'
  parameters:
  - name: clients
    defaultValue: None
  - name: config
    defaultValue: None
  - name: start_range
    defaultValue: None
  - name: end_range
    defaultValue: None
  - name: validate_content
    defaultValue: None
  - name: encryption_options
    defaultValue: None
  - name: max_concurrency
    defaultValue: '1'
  - name: name
    defaultValue: None
  - name: container
    defaultValue: None
  - name: encoding
    defaultValue: None
  - name: download_cls
    defaultValue: None
methods:
- uid: azure.storage.blob.aio.StorageStreamDownloader.chunks
  name: chunks
  summary: 'Iterate over chunks in the download stream. Note, the iterator returned
    will

    iterate over the entire download content, regardless of any data that was

    previously read.


    NOTE: If the stream has been partially read, some data may be re-downloaded by
    the iterator.'
  signature: chunks() -> AsyncIterator[bytes]
  return:
    description: An async iterator of the chunks in the download stream.
    types:
    - <xref:typing.AsyncIterator>[<xref:bytes>]
- uid: azure.storage.blob.aio.StorageStreamDownloader.content_as_bytes
  name: content_as_bytes
  summary: 'DEPRECATED: Download the contents of this file.


    This operation is blocking until all data is downloaded.


    This method is deprecated, use func:*readall* instead.'
  signature: async content_as_bytes(max_concurrency=1)
  parameters:
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    defaultValue: '1'
    types:
    - <xref:int>
  return:
    description: The contents of the file as bytes.
    types:
    - <xref:bytes>
- uid: azure.storage.blob.aio.StorageStreamDownloader.content_as_text
  name: content_as_text
  summary: 'DEPRECATED: Download the contents of this blob, and decode as text.


    This operation is blocking until all data is downloaded.


    This method is deprecated, use func:*readall* instead.'
  signature: async content_as_text(max_concurrency=1, encoding='UTF-8')
  parameters:
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    defaultValue: '1'
    types:
    - <xref:int>
  - name: encoding
    description: Test encoding to decode the downloaded bytes. Default is UTF-8.
    defaultValue: UTF-8
    types:
    - <xref:str>
  return:
    description: The content of the file as a str.
    types:
    - <xref:str>
- uid: azure.storage.blob.aio.StorageStreamDownloader.download_to_stream
  name: download_to_stream
  summary: 'DEPRECATED: Download the contents of this blob to a stream.


    This method is deprecated, use func:*readinto* instead.'
  signature: async download_to_stream(stream, max_concurrency=1)
  parameters:
  - name: stream
    description: 'The stream to download to. This can be an open file-handle,

      or any writable stream. The stream must be seekable if the download

      uses more than one parallel connection.'
    isRequired: true
    types:
    - <xref:typing.IO>[<xref:T>]
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    defaultValue: '1'
    types:
    - <xref:int>
  return:
    description: The properties of the downloaded blob.
    types:
    - <xref:typing.Any>
- uid: azure.storage.blob.aio.StorageStreamDownloader.read
  name: read
  summary: 'Read the specified bytes or chars from the stream. If *encoding*

    was specified on *download_blob*, it is recommended to use the

    chars parameter to read a specific number of chars to avoid decoding

    errors. If size/chars is unspecified or negative all bytes will be read.'
  signature: 'async read(size: int = -1) -> T'
  parameters:
  - name: size
    description: 'The number of bytes to download from the stream. Leave unspecified

      or set negative to download all bytes.'
    defaultValue: '-1'
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: chars
    description: 'The number of chars to download from the stream. Leave unspecified

      or set negative to download all chars. Note, this can only be used

      when encoding is specified on *download_blob*.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:int>]
  return:
    description: 'The requested data as bytes or a string if encoding was specified.
      If

      the return value is empty, there is no more data to read.'
    types:
    - <xref:T>
- uid: azure.storage.blob.aio.StorageStreamDownloader.readall
  name: readall
  summary: 'Read the entire contents of this blob.

    This operation is blocking until all data is downloaded.'
  signature: async readall() -> T
  return:
    description: The requested data as bytes or a string if encoding was specified.
    types:
    - <xref:T>
- uid: azure.storage.blob.aio.StorageStreamDownloader.readinto
  name: readinto
  summary: Download the contents of this blob to a stream.
  signature: 'async readinto(stream: IO[bytes]) -> int'
  parameters:
  - name: stream
    description: 'The stream to download to. This can be an open file-handle,

      or any writable stream. The stream must be seekable if the download

      uses more than one parallel connection.'
    isRequired: true
    types:
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: The number of bytes read.
    types:
    - <xref:int>
attributes:
- uid: azure.storage.blob.aio.StorageStreamDownloader.container
  name: container
  summary: The name of the container where the blob is.
  signature: 'container: str'
- uid: azure.storage.blob.aio.StorageStreamDownloader.name
  name: name
  summary: The name of the blob being downloaded.
  signature: 'name: str'
- uid: azure.storage.blob.aio.StorageStreamDownloader.properties
  name: properties
  summary: 'The properties of the blob being downloaded. If only a range of the data
    is being

    downloaded, this will be reflected in the properties.'
  signature: 'properties: BlobProperties'
- uid: azure.storage.blob.aio.StorageStreamDownloader.size
  name: size
  summary: 'The size of the total data in the stream. This will be the byte range
    if specified,

    otherwise the total size of the blob.'
  signature: 'size: int'
