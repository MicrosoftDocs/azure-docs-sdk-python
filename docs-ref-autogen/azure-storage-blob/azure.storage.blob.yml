### YamlMime:PythonPackage
uid: azure.storage.blob
name: blob
fullName: azure.storage.blob
type: import
functions:
- uid: azure.storage.blob.download_blob_from_url
  name: download_blob_from_url
  summary: Download the contents of a blob to a local file or stream.
  signature: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  parameters:
  - name: blob_url
    description: The full URI to the blob. This can also include a SAS token.
    isRequired: true
    types:
    - <xref:str>
  - name: output
    description: 'Where the data should be downloaded to. This could be either a file
      path to write to,

      or an open IO handle to write to.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:writable stream.>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      blob URL already has a SAS token or the blob is public. The value can be a SAS
      token string,

      an instance of a AzureSasCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.'
    isRequired: true
    defaultValue: None
  - name: overwrite
    description: 'Whether the local file should be overwritten if it already exists.
      The default value is

      *False* - in which case a ValueError will be raised if the file already exists.
      If set to

      *True*, an attempt will be made to write to the existing file. If a stream handle
      is passed

      in, this value is ignored.'
    types:
    - <xref:bool>
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    types:
    - <xref:int>
  - name: offset
    description: 'Start of byte range to use for downloading a section of the blob.

      Must be set if length is provided.'
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the blob. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https as https (the default) will

      already validate. Note that this MD5 hash is not stored with the

      blob. Also note that if enabled, the memory-efficient upload algorithm

      will not be used, because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.generate_account_sas
  name: generate_account_sas
  summary: 'Generates a shared access signature for the blob service.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, start=None, ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    isRequired: true
    types:
    - <xref:str>
  - name: account_key
    description: The account key, also called shared key or access key, to generate
      the shared access signature.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_types
    description: Specifies the resource types that are accessible with the account
      SAS.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.ResourceTypes>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.AccountSasPermissions>
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    isRequired: true
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: protocol
    description: Specifies the protocol permitted for a request made. The default
      value is https.
    types:
    - <xref:str>
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - <xref:str>
  examples:
  - "Generating a shared access signature.<!--[!code-python[Main](les\\blob_samples_authentication.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\88\\\\azure-storage-blob-12.8.1\\\\samples\\\\blob_samples_authentication.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Create a SAS token to use to authenticate a new client\n   from datetime\
    \ import datetime, timedelta\n   from azure.storage.blob import ResourceTypes,\
    \ AccountSasPermissions, generate_account_sas\n\n   sas_token = generate_account_sas(\n\
    \       blob_service_client.account_name,\n       account_key=blob_service_client.credential.account_key,\n\
    \       resource_types=ResourceTypes(object=True),\n       permission=AccountSasPermissions(read=True),\n\
    \       expiry=datetime.utcnow() + timedelta(hours=1)\n   )\n\n   ````\n"
- uid: azure.storage.blob.generate_blob_sas
  name: generate_blob_sas
  summary: 'Generates a shared access signature for a blob.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_blob_sas(account_name, container_name, blob_name, snapshot=None,
    account_key=None, user_delegation_key=None, permission=None, expiry=None, start=None,
    policy_id=None, ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: The name of the container.
    isRequired: true
    types:
    - <xref:str>
  - name: blob_name
    description: The name of the blob.
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: An optional blob snapshot ID.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: account_key
    description: 'The account key, also called shared key or access key, to generate
      the shared access signature.

      Either *account_key* or *user_delegation_key* must be specified.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: user_delegation_key
    description: 'Instead of an account shared key, the user could pass in a user
      delegation key.

      A user delegation key can be obtained from the service by authenticating with
      an AAD identity;

      this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

      When present, the SAS is signed with the user delegation key instead.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.storage.blob.UserDelegationKey>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Permissions must be ordered read, write, delete, list.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.storage.blob.BlobSasPermissions>
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: policy_id
    description: 'A unique value up to 64 characters in length that correlates to
      a

      stored access policy. To create a stored access policy, use

      <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: version_id
    description: 'An optional blob version ID. This parameter is only for versioning
      enabled account


      New in version 12.4.0: This keyword argument was introduced in API version ''2019-12-12''.'
    types:
    - <xref:str>
  - name: protocol
    description: Specifies the protocol permitted for a request made. The default
      value is https.
    types:
    - <xref:str>
  - name: cache_control
    description: 'Response header value for Cache-Control when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_disposition
    description: 'Response header value for Content-Disposition when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_encoding
    description: 'Response header value for Content-Encoding when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_language
    description: 'Response header value for Content-Language when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Response header value for Content-Type when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - <xref:str>
- uid: azure.storage.blob.generate_container_sas
  name: generate_container_sas
  summary: 'Generates a shared access signature for a container.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_container_sas(account_name, container_name, account_key=None,
    user_delegation_key=None, permission=None, expiry=None, start=None, policy_id=None,
    ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: The name of the container.
    isRequired: true
    types:
    - <xref:str>
  - name: account_key
    description: 'The account key, also called shared key or access key, to generate
      the shared access signature.

      Either *account_key* or *user_delegation_key* must be specified.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: user_delegation_key
    description: 'Instead of an account shared key, the user could pass in a user
      delegation key.

      A user delegation key can be obtained from the service by authenticating with
      an AAD identity;

      this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

      When present, the SAS is signed with the user delegation key instead.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.storage.blob.UserDelegationKey>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Permissions must be ordered read, write, delete, list.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.storage.blob.ContainerSasPermissions>
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:datetime.datetime>
    - <xref:str>
  - name: policy_id
    description: 'A unique value up to 64 characters in length that correlates to
      a

      stored access policy. To create a stored access policy, use

      <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: protocol
    description: Specifies the protocol permitted for a request made. The default
      value is https.
    types:
    - <xref:str>
  - name: cache_control
    description: 'Response header value for Cache-Control when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_disposition
    description: 'Response header value for Content-Disposition when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_encoding
    description: 'Response header value for Content-Encoding when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_language
    description: 'Response header value for Content-Language when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Response header value for Content-Type when resource is accessed

      using this shared access signature.'
    types:
    - <xref:str>
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - <xref:str>
  examples:
  - "Generating a sas token.<!--[!code-python[Main](les\\blob_samples_containers.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\88\\\\azure-storage-blob-12.8.1\\\\samples\\\\blob_samples_containers.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Use access policy to generate a sas token\n   from azure.storage.blob import\
    \ generate_container_sas\n\n   sas_token = generate_container_sas(\n       container_client.account_name,\n\
    \       container_client.container_name,\n       account_key=container_client.credential.account_key,\n\
    \       policy_id='my-access-policy-id'\n   )\n\n   ````\n"
- uid: azure.storage.blob.upload_blob_to_url
  name: upload_blob_to_url
  summary: 'Upload data to a given URL


    The data will be uploaded as a block blob.'
  signature: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  parameters:
  - name: blob_url
    description: The full URI to the blob. This can also include a SAS token.
    isRequired: true
    types:
    - <xref:str>
  - name: data
    description: The data to upload. This can be bytes, text, an iterable or a file-like
      object.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:str>
    - <xref:Iterable>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      blob URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential from azure.core.credentials, an account

      shared access key, or an instance of a TokenCredentials class from azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.'
    isRequired: true
    defaultValue: None
  - name: overwrite
    description: 'Whether the blob to be uploaded should overwrite the current data.

      If True, upload_blob_to_url will overwrite any existing data. If set to False,
      the

      operation will fail with a ResourceExistsError.'
    types:
    - <xref:bool>
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    types:
    - <xref:int>
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    types:
    - <xref:dict>(<xref:str,str>)
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the blob. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https as https (the default) will

      already validate. Note that this MD5 hash is not stored with the

      blob. Also note that if enabled, the memory-efficient upload algorithm

      will not be used, because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: encoding
    description: Encoding to use if text is supplied as input. Defaults to UTF-8.
    types:
    - <xref:str>
  return:
    description: Blob-updated property dict (Etag and last modified)
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
classes:
- azure.storage.blob.AccessPolicy
- azure.storage.blob.AccountSasPermissions
- azure.storage.blob.ArrowDialect
- azure.storage.blob.BlobAnalyticsLogging
- azure.storage.blob.BlobBlock
- azure.storage.blob.BlobClient
- azure.storage.blob.BlobLeaseClient
- azure.storage.blob.BlobPrefix
- azure.storage.blob.BlobProperties
- azure.storage.blob.BlobQueryError
- azure.storage.blob.BlobQueryReader
- azure.storage.blob.BlobSasPermissions
- azure.storage.blob.BlobServiceClient
- azure.storage.blob.ContainerClient
- azure.storage.blob.ContainerEncryptionScope
- azure.storage.blob.ContainerProperties
- azure.storage.blob.ContainerSasPermissions
- azure.storage.blob.ContentSettings
- azure.storage.blob.CopyProperties
- azure.storage.blob.CorsRule
- azure.storage.blob.CustomerProvidedEncryptionKey
- azure.storage.blob.DelimitedJsonDialect
- azure.storage.blob.DelimitedTextDialect
- azure.storage.blob.ExponentialRetry
- azure.storage.blob.FilteredBlob
- azure.storage.blob.LeaseProperties
- azure.storage.blob.LinearRetry
- azure.storage.blob.LocationMode
- azure.storage.blob.Metrics
- azure.storage.blob.ObjectReplicationPolicy
- azure.storage.blob.ObjectReplicationRule
- azure.storage.blob.PageRange
- azure.storage.blob.PartialBatchErrorException
- azure.storage.blob.ResourceTypes
- azure.storage.blob.RetentionPolicy
- azure.storage.blob.StaticWebsite
- azure.storage.blob.StorageStreamDownloader
- azure.storage.blob.UserDelegationKey
packages:
- azure.storage.blob.aio
enums:
- azure.storage.blob.ArrowType
- azure.storage.blob.BlobType
- azure.storage.blob.BlockState
- azure.storage.blob.PremiumPageBlobTier
- azure.storage.blob.PublicAccess
- azure.storage.blob.RehydratePriority
- azure.storage.blob.SequenceNumberAction
- azure.storage.blob.StandardBlobTier
- azure.storage.blob.StorageErrorCode
