### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.aio.BlobClient.abort_copy
  - azure.storage.blob.aio.BlobClient.acquire_lease
  - azure.storage.blob.aio.BlobClient.append_block
  - azure.storage.blob.aio.BlobClient.append_block_from_url
  - azure.storage.blob.aio.BlobClient.clear_page
  - azure.storage.blob.aio.BlobClient.commit_block_list
  - azure.storage.blob.aio.BlobClient.create_append_blob
  - azure.storage.blob.aio.BlobClient.create_page_blob
  - azure.storage.blob.aio.BlobClient.create_snapshot
  - azure.storage.blob.aio.BlobClient.delete_blob
  - azure.storage.blob.aio.BlobClient.download_blob
  - azure.storage.blob.aio.BlobClient.get_account_information
  - azure.storage.blob.aio.BlobClient.get_blob_properties
  - azure.storage.blob.aio.BlobClient.get_block_list
  - azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
  - azure.storage.blob.aio.BlobClient.get_page_ranges
  - azure.storage.blob.aio.BlobClient.resize_blob
  - azure.storage.blob.aio.BlobClient.set_blob_metadata
  - azure.storage.blob.aio.BlobClient.set_http_headers
  - azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
  - azure.storage.blob.aio.BlobClient.set_sequence_number
  - azure.storage.blob.aio.BlobClient.set_standard_blob_tier
  - azure.storage.blob.aio.BlobClient.stage_block
  - azure.storage.blob.aio.BlobClient.stage_block_from_url
  - azure.storage.blob.aio.BlobClient.start_copy_from_url
  - azure.storage.blob.aio.BlobClient.undelete_blob
  - azure.storage.blob.aio.BlobClient.upload_blob
  - azure.storage.blob.aio.BlobClient.upload_page
  - azure.storage.blob.aio.BlobClient.upload_pages_from_url
  class: azure.storage.blob.aio.BlobClient
  example:
  - "Creating the BlobClient from a URL to a public blob (no auth needed).<!--[!code-python[Main](les\\\
    blob_samples_authentication_async.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\90\\\\azure-storage-blob-12.3.2\\\\samples\\\
    \\blob_samples_authentication_async.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n   from azure.storage.blob.aio import BlobClient\n   blob_client\
    \ = BlobClient.from_blob_url(blob_url=\"https://account.blob.core.windows.net/container/blob-name\"\
    )\n\n   ````\n\nCreating the BlobClient from a SAS URL to a blob.<!--[!code-python[Main](les\\\
    blob_samples_authentication_async.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\90\\\\azure-storage-blob-12.3.2\\\\samples\\\
    \\blob_samples_authentication_async.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n   from azure.storage.blob.aio import BlobClient\n\n   sas_url\
    \ = \"https://account.blob.core.windows.net/container/blob-name?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D\"\
    \n   blob_client = BlobClient.from_blob_url(sas_url)\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.blob._shared.base_client_async.AsyncStorageAccountHostsMixin
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.storage.blob._shared.base_client.StorageAccountHostsMixin
    type: azure.storage.blob._blob_client.BlobClient
  langs:
  - python
  module: azure.storage.blob.aio
  name: BlobClient
  summary: A client to interact with a specific blob, although that blob may not yet
    exist.
  syntax:
    content: BlobClient(account_url, container_name, blob_name, snapshot=None, credential=None,
      **kwargs)
    parameters:
    - description: 'The URI to the storage account. In order to create a client given
        the full URI to the blob,

        use the <xref:azure.storage.blob.aio.from_blob_url> classmethod.'
      id: account_url
      type:
      - str
    - description: The container name for the blob.
      id: container_name
      type:
      - str
    - description: 'The name of the blob with which to interact. If specified, this
        value will override

        a blob value specified in the blob URL.'
      id: blob_name
      type:
      - str
    - description: 'The optional blob snapshot on which to operate. This can be the
        snapshot ID string

        or the response returned from <xref:azure.storage.blob.aio.BlobClient.create_snapshot>.'
      id: snapshot
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string,
        an account

        shared access key, or an instance of a TokenCredentials class from azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    - description: 'The Storage API version to use for requests. Default value is
        ''2019-07-07''.

        Setting to an older version may result in reduced feature compatibility.


        New in version 12.2.0.'
      id: api_version
      type:
      - str
    - description: The hostname of the secondary endpoint.
      id: secondary_hostname
      type:
      - str
    - description: 'The maximum chunk size for uploading a block blob in chunks.

        Defaults to 4*1024*1024, or 4MB.'
      id: max_block_size
      type:
      - int
    - description: 'If the blob size is less than max_single_put_size, then the blob
        will be

        uploaded with only one http PUT request. If the blob size is larger than max_single_put_size,

        the blob will be uploaded in chunks. Defaults to 64*1024*1024, or 64MB.'
      id: max_single_put_size
      type:
      - int
    - description: 'The minimum chunk size required to use the memory efficient

        algorithm when uploading a block blob. Defaults to 4*1024*1024+1.'
      id: min_large_block_upload_threshold
      type:
      - int
    - description: Use a byte buffer for block blob uploads. Defaults to False.
      id: use_byte_buffer
      type:
      - bool
    - description: The maximum chunk size for uploading a page blob. Defaults to 4*1024*1024,
        or 4MB.
      id: max_page_size
      type:
      - int
    - description: 'The maximum size for a blob to be downloaded in a single call,

        the exceeded part will be downloaded in chunks (could be parallel). Defaults
        to 32*1024*1024, or 32MB.'
      id: max_single_get_size
      type:
      - int
    - description: 'The maximum chunk size used for downloading a blob. Defaults to
        4*1024*1024,

        or 4MB.'
      id: max_chunk_get_size
      type:
      - int
  type: class
  uid: azure.storage.blob.aio.BlobClient
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Abort copying a blob from URL.<!--[!code-python[Main](les\\blob_samples_common_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Passing in copy\
    \ id to abort copy operation\n   await copied_blob.abort_copy(copy_id)\n\n   #\
    \ check copy status\n   props = await copied_blob.get_blob_properties()\n   print(props.copy.status)\n\
    \n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.abort_copy
  langs:
  - python
  module: azure.storage.blob.aio
  name: abort_copy(copy_id, **kwargs)
  namewithoutparameters: abort_copy
  summary: 'Abort an ongoing copy operation.


    This will leave a destination blob with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  syntax:
    content: abort_copy(copy_id, **kwargs)
    parameters:
    - description: 'The copy operation to abort. This can be either an ID, or an

        instance of BlobProperties.'
      id: copy_id
      isRequired: true
      type:
      - str
      - azure.storage.blob.BlobProperties
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.abort_copy
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Acquiring a lease on a blob.<!--[!code-python[Main](les\\blob_samples_common_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Get the blob\
    \ client\n   blob_client = blob_service_client.get_blob_client(\"leasemyblobscontainerasync\"\
    , \"my_blob\")\n\n   # Acquire a lease on the blob\n   lease = await blob_client.acquire_lease()\n\
    \n   # Delete blob by passing in the lease\n   await blob_client.delete_blob(lease=lease)\n\
    \n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.acquire_lease
  langs:
  - python
  module: azure.storage.blob.aio
  name: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
  namewithoutparameters: acquire_lease
  summary: 'Requests a new lease.


    If the blob does not have an active lease, the Blob

    Service creates a lease on the blob and returns a new lease.'
  syntax:
    content: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
    parameters:
    - description: 'Specifies the duration of the lease, in seconds, or negative one

        (-1) for a lease that never expires. A non-infinite lease can be

        between 15 and 60 seconds. A lease duration cannot be changed

        using renew or change. Default is -1 (infinite lease).'
      id: lease_duration
      isRequired: true
      type:
      - int
    - description: 'Proposed lease ID, in a GUID string format. The Blob Service

        returns 400 (Invalid request) if the proposed lease ID is not

        in the correct format.'
      id: lease_id
      isRequired: true
      type:
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: A BlobLeaseClient object.
      type:
      - azure.storage.blob.aio.BlobLeaseClient
  type: method
  uid: azure.storage.blob.aio.BlobClient.acquire_lease
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.append_block
  langs:
  - python
  module: azure.storage.blob.aio
  name: append_block(data, length=None, **kwargs)
  namewithoutparameters: append_block
  summary: Commits a new block of data to the end of the existing append blob.
  syntax:
    content: append_block(data, length=None, **kwargs)
    parameters:
    - description: Content of the block.
      id: data
      isRequired: true
    - description: Size of the block in bytes.
      id: length
      isRequired: true
      type:
      - int
    - description: 'If true, calculates an MD5 hash of the block content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https, as https (the default),

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      isRequired: true
      type:
      - int
    - description: 'Optional conditional header, used only for the Append Block operation.

        A number indicating the byte offset to compare. Append Block will

        succeed only if the append position is equal to this number. If it

        is not, the request will fail with the AppendPositionConditionNotMet error

        (HTTP status code 412 - Precondition Failed).'
      id: appendpos_condition
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: Defaults to UTF-8.
      id: encoding
      isRequired: true
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag, last modified, append offset,
        committed block count).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.append_block
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.append_block_from_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: append_block_from_url(copy_source_url, source_offset=None, source_length=None,
    **kwargs)
  namewithoutparameters: append_block_from_url
  summary: Creates a new block to be committed as part of a blob, where the contents
    are read from a source url.
  syntax:
    content: append_block_from_url(copy_source_url, source_offset=None, source_length=None,
      **kwargs)
    parameters:
    - description: 'The URL of the source data. It can point to any Azure Blob or
        File, that is either public or has a

        shared access signature attached.'
      id: copy_source_url
      isRequired: true
      type:
      - str
    - description: This indicates the start of the range of bytes(inclusive) that
        has to be taken from the copy source.
      id: source_offset
      isRequired: true
      type:
      - int
    - description: This indicates the end of the range of bytes that has to be taken
        from the copy source.
      id: source_length
      isRequired: true
      type:
      - int
    - description: If given, the service will calculate the MD5 hash of the block
        content and compare against this value.
      id: source_content_md5
      isRequired: true
      type:
      - bytearray
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      isRequired: true
      type:
      - int
    - description: 'Optional conditional header, used only for the Append Block operation.

        A number indicating the byte offset to compare. Append Block will

        succeed only if the append position is equal to this number. If it

        is not, the request will fail with the

        AppendPositionConditionNotMet error

        (HTTP status code 412 - Precondition Failed).'
      id: appendpos_condition
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The destination ETag value, or the wildcard character (*). Used
        to check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The destination match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the source resource has been modified since the specified time.'
      id: source_if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the source resource has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The source ETag value, or the wildcard character (*). Used to
        check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: source_etag
      isRequired: true
      type:
      - str
    - description: The source match condition to use upon the etag.
      id: source_match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
  type: method
  uid: azure.storage.blob.aio.BlobClient.append_block_from_url
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.clear_page
  langs:
  - python
  module: azure.storage.blob.aio
  name: clear_page(offset, length, **kwargs)
  namewithoutparameters: clear_page
  summary: Clears a range of pages.
  syntax:
    content: clear_page(offset, length, **kwargs)
    parameters:
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length  must be a modulus of

        512.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      isRequired: true
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.clear_page
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.commit_block_list
  langs:
  - python
  module: azure.storage.blob.aio
  name: commit_block_list(block_list, content_settings=None, metadata=None, **kwargs)
  namewithoutparameters: commit_block_list
  summary: 'The Commit Block List operation writes a blob by specifying the list of

    block IDs that make up the blob.'
  syntax:
    content: commit_block_list(block_list, content_settings=None, metadata=None, **kwargs)
    parameters:
    - description: List of Blockblobs.
      id: block_list
      isRequired: true
      type:
      - list
    - description: 'ContentSettings object used to set blob properties. Used to set
        content type, encoding,

        language, disposition, md5, and cache control.'
      id: content_settings
      isRequired: true
      type:
      - azure.storage.blob.ContentSettings
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      isRequired: true
      type:
      - dict[str, str]
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'If true, calculates an MD5 hash of the page content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https, as https (the default),

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'A standard blob tier value to set the blob to. For this version
        of the library,

        this is only applicable to block blobs on standard storage accounts.'
      id: standard_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.StandardBlobTier
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.commit_block_list
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.create_append_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: create_append_blob(content_settings=None, metadata=None, **kwargs)
  namewithoutparameters: create_append_blob
  summary: Creates a new Append Blob.
  syntax:
    content: create_append_blob(content_settings=None, metadata=None, **kwargs)
    parameters:
    - description: 'ContentSettings object used to set blob properties. Used to set
        content type, encoding,

        language, disposition, md5, and cache control.'
      id: content_settings
      isRequired: true
      type:
      - azure.storage.blob.ContentSettings
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.aio.BlobClient.create_append_blob
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.create_page_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: create_page_blob(size, content_settings=None, metadata=None, premium_page_blob_tier=None,
    **kwargs)
  namewithoutparameters: create_page_blob
  summary: Creates a new Page Blob of the specified size.
  syntax:
    content: create_page_blob(size, content_settings=None, metadata=None, premium_page_blob_tier=None,
      **kwargs)
    parameters:
    - description: 'This specifies the maximum size for the page blob, up to 1 TB.

        The page blob size must be aligned to a 512-byte boundary.'
      id: size
      isRequired: true
      type:
      - int
    - description: 'ContentSettings object used to set blob properties. Used to set
        content type, encoding,

        language, disposition, md5, and cache control.'
      id: content_settings
      isRequired: true
      type:
      - azure.storage.blob.ContentSettings
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.PremiumPageBlobTier
    - description: 'Only for Page blobs. The sequence number is a user-controlled
        value that you can use to

        track requests. The value of the sequence number must be between 0

        and 2^63 - 1.The default value is 0.'
      id: sequence_number
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.aio.BlobClient.create_page_blob
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Create a snapshot of the blob.<!--[!code-python[Main](les\\blob_samples_common_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Create a read-only\
    \ snapshot of the blob at this point in time\n   snapshot_blob = await blob_client.create_snapshot()\n\
    \n   # Get the snapshot ID\n   print(snapshot_blob.get('snapshot'))\n\n   # Delete\
    \ only the snapshot (blob itself is retained)\n   await blob_client.delete_blob(delete_snapshots=\"\
    only\")\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.create_snapshot
  langs:
  - python
  module: azure.storage.blob.aio
  name: create_snapshot(metadata=None, **kwargs)
  namewithoutparameters: create_snapshot
  summary: 'Creates a snapshot of the blob.


    A snapshot is a read-only version of a blob that''s taken at a point in time.

    It can be read, copied, or deleted, but not modified. Snapshots provide a way

    to back up a blob as it appears at a moment in time.


    A snapshot of a blob has the same name as the base blob from which the snapshot

    is taken, with a DateTime value appended to indicate the time at which the

    snapshot was taken.'
  syntax:
    content: create_snapshot(metadata=None, **kwargs)
    parameters:
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Snapshot ID, Etag, and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.aio.BlobClient.create_snapshot
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Delete a blob.<!--[!code-python[Main](les\\blob_samples_hello_world_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_hello_world_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   await blob_client.delete_blob()\n\
    \n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.delete_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: delete_blob(delete_snapshots=False, **kwargs)
  namewithoutparameters: delete_blob
  summary: 'Marks the specified blob for deletion.


    The blob is later deleted during garbage collection.

    Note that in order to delete a blob, you must delete all of its

    snapshots. You can delete both at the same time with the delete_blob()

    operation.


    If a delete retention policy is enabled for the service, then this operation soft
    deletes the blob

    and retains the blob for a specified number of days.

    After the specified number of days, the blob''s data is removed from the service
    during garbage collection.

    Soft deleted blob is accessible through <xref:azure.storage.blob.aio.ContainerClient.list_blobs>
    specifying *include=[''deleted'']*

    option. Soft-deleted blob can be restored using <xref:azure.storage.blob.aio.undelete>
    operation.'
  syntax:
    content: delete_blob(delete_snapshots=False, **kwargs)
    parameters:
    - description: "Required if the blob has associated snapshots. Values include:\n\
        \   * \"only\": Deletes only the blobs snapshots. \n\n   * \"include\": Deletes\
        \ the blob along with all snapshots."
      id: delete_snapshots
      isRequired: true
      type:
      - str
    - description: 'Required if the blob has an active lease. If specified, delete_blob
        only

        succeeds if the blob''s lease is active and matches this ID. Value can be
        a

        BlobLeaseClient object or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.delete_blob
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Download a blob.<!--[!code-python[Main](les\\blob_samples_hello_world_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_hello_world_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   with open(DEST_FILE,\
    \ \"wb\") as my_blob:\n       stream = await blob_client.download_blob()\n   \
    \    data = await stream.readall()\n       my_blob.write(data)\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.download_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: download_blob(offset=None, length=None, **kwargs)
  namewithoutparameters: download_blob
  summary: 'Downloads a blob to the StorageStreamDownloader. The readall() method
    must

    be used to read all the content or readinto() must be used to download the blob
    into

    a stream.'
  syntax:
    content: download_blob(offset=None, length=None, **kwargs)
    parameters:
    - description: 'Start of byte range to use for downloading a section of the blob.

        Must be set if length is provided.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https, as https (the default), will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'Required if the blob has an active lease. If specified, download_blob
        only

        succeeds if the blob''s lease is active and matches this ID. Value can be
        a

        BlobLeaseClient object or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: The number of parallel connections with which to download.
      id: max_concurrency
      isRequired: true
      type:
      - int
    - description: Encoding to decode the downloaded bytes. Default is None, i.e.
        no decoding.
      id: encoding
      isRequired: true
      type:
      - str
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: A streaming object (StorageStreamDownloader)
      type:
      - azure.storage.blob.aio.StorageStreamDownloader
  type: method
  uid: azure.storage.blob.aio.BlobClient.download_blob
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.get_account_information
  langs:
  - python
  module: azure.storage.blob.aio
  name: get_account_information(**kwargs)
  namewithoutparameters: get_account_information
  summary: 'Gets information related to the storage account in which the blob resides.


    The information can also be retrieved if the user has a SAS to a container or
    blob.

    The keys in the returned dictionary include ''sku_name'' and ''account_kind''.'
  syntax:
    content: get_account_information(**kwargs)
    return:
      description: A dict of account information (SKU and account type).
      type:
      - dict(str, str)
  type: method
  uid: azure.storage.blob.aio.BlobClient.get_account_information
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Getting the properties for a blob.<!--[!code-python[Main](les\\blob_samples_common_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   properties = await\
    \ blob_client.get_blob_properties()\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.get_blob_properties
  langs:
  - python
  module: azure.storage.blob.aio
  name: get_blob_properties(**kwargs)
  namewithoutparameters: get_blob_properties
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the blob. It does not return the content of the blob.'
  syntax:
    content: get_blob_properties(**kwargs)
    parameters:
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: BlobProperties
      type:
      - azure.storage.blob.BlobProperties
  type: method
  uid: azure.storage.blob.aio.BlobClient.get_blob_properties
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.get_block_list
  langs:
  - python
  module: azure.storage.blob.aio
  name: get_block_list(block_list_type='committed', **kwargs)
  namewithoutparameters: get_block_list
  summary: 'The Get Block List operation retrieves the list of blocks that have

    been uploaded as part of a block blob.'
  syntax:
    content: get_block_list(block_list_type='committed', **kwargs)
    parameters:
    - description: 'Specifies whether to return the list of committed

        blocks, the list of uncommitted blocks, or both lists together.

        Possible values include: ''committed'', ''uncommitted'', ''all'''
      id: block_list_type
      isRequired: true
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: A tuple of two lists - committed and uncommitted blocks
      type:
      - tuple(list(azure.storage.blob.BlobBlock), list(azure.storage.blob.BlobBlock))
  type: method
  uid: azure.storage.blob.aio.BlobClient.get_block_list
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
  langs:
  - python
  module: azure.storage.blob.aio
  name: get_page_range_diff_for_managed_disk(previous_snapshot_url, offset=None, length=None,
    **kwargs)
  namewithoutparameters: get_page_range_diff_for_managed_disk
  summary: 'Returns the list of valid page ranges for a managed disk or snapshot.



    > [!NOTE]

    > This operation is only available for managed disk accounts.

    >


    New in version 12.2.0: This operation was introduced in API version ''2019-07-07''.'
  syntax:
    content: get_page_range_diff_for_managed_disk(previous_snapshot_url, offset=None,
      length=None, **kwargs)
    parameters:
    - description: 'Specifies the URL of a previous snapshot of the managed disk.

        The response will only contain pages that were changed between the target
        blob and

        its previous snapshot.'
      id: previous_snapshot_url
      isRequired: true
    - description: 'Start of byte range to use for getting valid page ranges.

        If no length is given, all bytes after the offset will be searched.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to use for getting valid page ranges.

        If length is given, offset must be provided.

        This range will return valid page ranges from the offset start up to

        the specified length.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: 'A tuple of two lists of page ranges as dictionaries with ''start''
        and ''end'' keys.

        The first element are filled page ranges, the 2nd element is cleared page
        ranges.'
      type:
      - tuple(list(dict(str, str), list(dict(str, str))
  type: method
  uid: azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.get_page_ranges
  langs:
  - python
  module: azure.storage.blob.aio
  name: get_page_ranges(offset=None, length=None, previous_snapshot_diff=None, **kwargs)
  namewithoutparameters: get_page_ranges
  summary: 'Returns the list of valid page ranges for a Page Blob or snapshot

    of a page blob.'
  syntax:
    content: get_page_ranges(offset=None, length=None, previous_snapshot_diff=None,
      **kwargs)
    parameters:
    - description: 'Start of byte range to use for getting valid page ranges.

        If no length is given, all bytes after the offset will be searched.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to use for getting valid page ranges.

        If length is given, offset must be provided.

        This range will return valid page ranges from the offset start up to

        the specified length.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'The snapshot diff parameter that contains an opaque DateTime value
        that

        specifies a previous blob snapshot to be compared

        against a more recent snapshot or the current blob.'
      id: previous_snapshot_diff
      isRequired: true
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: 'A tuple of two lists of page ranges as dictionaries with ''start''
        and ''end'' keys.

        The first element are filled page ranges, the 2nd element is cleared page
        ranges.'
      type:
      - tuple(list(dict(str, str), list(dict(str, str))
  type: method
  uid: azure.storage.blob.aio.BlobClient.get_page_ranges
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.resize_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: resize_blob(size, **kwargs)
  namewithoutparameters: resize_blob
  summary: 'Resizes a page blob to the specified size.


    If the specified value is less than the current size of the blob,

    then all pages above the specified value are cleared.'
  syntax:
    content: resize_blob(size, **kwargs)
    parameters:
    - description: 'Size used to resize blob. Maximum size for a page blob is up to
        1 TB.

        The page blob size must be aligned to a 512-byte boundary.'
      id: size
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.PremiumPageBlobTier
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.resize_blob
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.set_blob_metadata
  langs:
  - python
  module: azure.storage.blob.aio
  name: set_blob_metadata(metadata=None, **kwargs)
  namewithoutparameters: set_blob_metadata
  summary: Sets user-defined metadata for the blob as one or more name-value pairs.
  syntax:
    content: set_blob_metadata(metadata=None, **kwargs)
    parameters:
    - description: 'Dict containing name and value pairs. Each call to this operation

        replaces all existing metadata attached to the blob. To remove all

        metadata from the blob, call this operation with no metadata headers.'
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
  type: method
  uid: azure.storage.blob.aio.BlobClient.set_blob_metadata
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.set_http_headers
  langs:
  - python
  module: azure.storage.blob.aio
  name: set_http_headers(content_settings=None, **kwargs)
  namewithoutparameters: set_http_headers
  summary: 'Sets system properties on the blob.


    If one property is set for the content_settings, all properties will be overridden.'
  syntax:
    content: set_http_headers(content_settings=None, **kwargs)
    parameters:
    - description: 'ContentSettings object used to set blob properties. Used to set
        content type, encoding,

        language, disposition, md5, and cache control.'
      id: content_settings
      isRequired: true
      type:
      - azure.storage.blob.ContentSettings
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - Dict[str, Any]
  type: method
  uid: azure.storage.blob.aio.BlobClient.set_http_headers
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
  langs:
  - python
  module: azure.storage.blob.aio
  name: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
  namewithoutparameters: set_premium_page_blob_tier
  summary: Sets the page blob tiers on the blob. This API is only supported for page
    blobs on premium accounts.
  syntax:
    content: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
    parameters:
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.PremiumPageBlobTier
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.set_sequence_number
  langs:
  - python
  module: azure.storage.blob.aio
  name: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
  namewithoutparameters: set_sequence_number
  summary: Sets the blob sequence number.
  syntax:
    content: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
    parameters:
    - description: 'This property indicates how the service should modify the blob''s
        sequence

        number. See <xref:azure.storage.blob.SequenceNumberAction> for more information.'
      id: sequence_number_action
      isRequired: true
      type:
      - str
    - description: 'This property sets the blob''s sequence number. The sequence number
        is a

        user-controlled property that you can use to track requests and manage

        concurrency issues.'
      id: sequence_number
      isRequired: true
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.set_sequence_number
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.set_standard_blob_tier
  langs:
  - python
  module: azure.storage.blob.aio
  name: set_standard_blob_tier(standard_blob_tier, **kwargs)
  namewithoutparameters: set_standard_blob_tier
  summary: 'This operation sets the tier on a block blob.


    A block blob''s tier determines Hot/Cool/Archive storage type.

    This operation does not update the blob''s ETag.'
  syntax:
    content: set_standard_blob_tier(standard_blob_tier, **kwargs)
    parameters:
    - description: 'Indicates the tier to be set on the blob. Options include ''Hot'',
        ''Cool'',

        ''Archive''. The hot tier is optimized for storing data that is accessed

        frequently. The cool storage tier is optimized for storing data that

        is infrequently accessed and stored for at least a month. The archive

        tier is optimized for storing data that is rarely accessed and stored

        for at least six months with flexible latency requirements.'
      id: standard_blob_tier
      isRequired: true
      type:
      - str
      - azure.storage.blob.StandardBlobTier
    - description: Indicates the priority with which to rehydrate an archived blob
      id: rehydrate_priority
      isRequired: true
      type:
      - azure.storage.blob.RehydratePriority
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.set_standard_blob_tier
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.stage_block
  langs:
  - python
  module: azure.storage.blob.aio
  name: stage_block(block_id, data, length=None, **kwargs)
  namewithoutparameters: stage_block
  summary: Creates a new block to be committed as part of a blob.
  syntax:
    content: stage_block(block_id, data, length=None, **kwargs)
    parameters:
    - description: 'A valid Base64 string value that identifies the

        block. Prior to encoding, the string must be less than or equal to 64

        bytes in size. For a given blob, the length of the value specified for

        the block_id parameter must be the same size for each block.'
      id: block_id
      isRequired: true
      type:
      - str
    - description: The blob data.
      id: data
      isRequired: true
    - description: Size of the block.
      id: length
      isRequired: true
      type:
      - int
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https, as https (the default), will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: Defaults to UTF-8.
      id: encoding
      isRequired: true
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.stage_block
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.stage_block_from_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
    source_content_md5=None, **kwargs)
  namewithoutparameters: stage_block_from_url
  summary: 'Creates a new block to be committed as part of a blob where

    the contents are read from a URL.'
  syntax:
    content: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
      source_content_md5=None, **kwargs)
    parameters:
    - description: 'A valid Base64 string value that identifies the

        block. Prior to encoding, the string must be less than or equal to 64

        bytes in size. For a given blob, the length of the value specified for

        the block_id parameter must be the same size for each block.'
      id: block_id
      isRequired: true
      type:
      - str
    - description: The URL.
      id: source_url
      isRequired: true
      type:
      - str
    - description: 'Start of byte range to use for the block.

        Must be set if source length is provided.'
      id: source_offset
      isRequired: true
      type:
      - int
    - description: The size of the block in bytes.
      id: source_length
      isRequired: true
      type:
      - int
    - description: 'Specify the md5 calculated for the range of

        bytes that must be read from the copy source.'
      id: source_content_md5
      isRequired: true
      type:
      - bytearray
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.stage_block_from_url
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Copy a blob from a URL.<!--[!code-python[Main](les\\blob_samples_common_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Get the blob\
    \ client with the source blob\n   source_blob = \"http://www.gutenberg.org/files/59466/59466-0.txt\"\
    \n   copied_blob = blob_service_client.get_blob_client(\"copyblobcontainerasync\"\
    , '59466-0.txt')\n\n   # start copy and check copy status\n   copy = await copied_blob.start_copy_from_url(source_blob)\n\
    \   props = await copied_blob.get_blob_properties()\n   print(props.copy.status)\n\
    \n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.start_copy_from_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: start_copy_from_url(source_url, metadata=None, incremental_copy=False, **kwargs)
  namewithoutparameters: start_copy_from_url
  summary: 'Copies a blob asynchronously.


    This operation returns a copy operation

    object that can be used to wait on the completion of the operation,

    as well as check status or abort the copy operation.

    The Blob service copies blobs on a best-effort basis.


    The source blob for a copy operation may be a block blob, an append blob,

    or a page blob. If the destination blob already exists, it must be of the

    same blob type as the source blob. Any existing destination blob will be

    overwritten. The destination blob cannot be modified while a copy operation

    is in progress.


    When copying from a page blob, the Blob service creates a destination page

    blob of the source blob''s length, initially containing all zeroes. Then

    the source page ranges are enumerated, and non-empty ranges are copied.


    For a block blob or an append blob, the Blob service creates a committed

    blob of zero length before returning from this operation. When copying

    from a block blob, all committed blocks and their block IDs are copied.

    Uncommitted blocks are not copied. At the end of the copy operation, the

    destination blob will have the same committed block count as the source.


    When copying from an append blob, all committed blocks are copied. At the

    end of the copy operation, the destination blob will have the same committed

    block count as the source.


    For all blob types, you can call status() on the returned polling object

    to check the status of the copy operation, or wait() to block until the

    operation is complete. The final blob will be committed when the copy completes.'
  syntax:
    content: start_copy_from_url(source_url, metadata=None, incremental_copy=False,
      **kwargs)
    parameters:
    - description: 'A URL of up to 2 KB in length that specifies a file or blob.

        The value should be URL-encoded as it would appear in a request URI.

        If the source is in another account, the source must either be public

        or must be authenticated via a shared access signature. If the source

        is public, no authentication is required.

        Examples:

        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)


        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)?snapshot=<DateTime>


        [https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken](https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken)'
      id: source_url
      isRequired: true
      type:
      - str
    - description: 'Name-value pairs associated with the blob as metadata. If no name-value

        pairs are specified, the operation will copy the metadata from the

        source blob or file to the destination blob. If one or more name-value

        pairs are specified, the destination blob is created with the specified

        metadata, and metadata is not copied from the source blob or file.'
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'Copies the snapshot of the source page blob to a destination page
        blob.

        The snapshot is copied such that only the differential changes between

        the previously copied snapshot are transferred to the destination.

        The copied snapshots are complete copies of the original snapshot and

        can be read or copied from as usual. Defaults to False.'
      id: incremental_copy
      isRequired: true
      type:
      - bool
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source

        blob has been modified since the specified date/time.'
      id: source_if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source blob

        has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The source ETag value, or the wildcard character (*). Used to
        check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: source_etag
      isRequired: true
      type:
      - str
    - description: The source match condition to use upon the etag.
      id: source_match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has been modified since the specified date/time.

        If the destination blob has not been modified, the Blob service returns

        status code 412 (Precondition Failed).'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has not been modified since the specified

        date/time. If the destination blob has been modified, the Blob service

        returns status code 412 (Precondition Failed).'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The destination ETag value, or the wildcard character (*). Used
        to check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The destination match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'The lease ID specified for this header must match the lease ID
        of the

        destination blob. If the request does not include the lease ID or it is not

        valid, the operation fails with status code 412 (Precondition Failed).'
      id: destination_lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'Specify this to perform the Copy Blob operation only if

        the lease ID given matches the active lease ID of the source blob.'
      id: source_lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.PremiumPageBlobTier
    - description: 'A standard blob tier value to set the blob to. For this version
        of the library,

        this is only applicable to block blobs on standard storage accounts.'
      id: standard_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.StandardBlobTier
    - description: Indicates the priority with which to rehydrate an archived blob
      id: rehydrate_priority
      isRequired: true
      type:
      - azure.storage.blob.RehydratePriority
    - description: Enforces that the service will not return a response until the
        copy is complete.
      id: requires_sync
      isRequired: true
      type:
      - bool
    return:
      description: A dictionary of copy properties (etag, last_modified, copy_id,
        copy_status).
      type:
      - dict[str, str
      - datetime.datetime]
  type: method
  uid: azure.storage.blob.aio.BlobClient.start_copy_from_url
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Undeleting a blob.<!--[!code-python[Main](les\\blob_samples_common_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\90\\\\\
    azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_common_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Undelete the blob before the\
    \ retention policy expires\n   await blob_client.undelete_blob()\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.undelete_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: undelete_blob(**kwargs)
  namewithoutparameters: undelete_blob
  summary: 'Restores soft-deleted blobs or snapshots.


    Operation will only be successful if used within the specified number of days

    set in the delete retention policy.'
  syntax:
    content: undelete_blob(**kwargs)
    parameters:
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.aio.BlobClient.undelete_blob
- class: azure.storage.blob.aio.BlobClient
  example:
  - "Upload a blob to the container.<!--[!code-python[Main](les\\blob_samples_hello_world_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\90\\\\azure-storage-blob-12.3.2\\\\samples\\\\blob_samples_hello_world_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Upload content\
    \ to block blob\n   with open(SOURCE_FILE, \"rb\") as data:\n       await blob_client.upload_blob(data,\
    \ blob_type=\"BlockBlob\")\n\n   ````\n"
  fullName: azure.storage.blob.aio.BlobClient.upload_blob
  langs:
  - python
  module: azure.storage.blob.aio
  name: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, length=None,
    metadata=None, **kwargs)'
  namewithoutparameters: upload_blob
  summary: Creates a new blob from a data source with automatic chunking.
  syntax:
    content: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, length=None,
      metadata=None, **kwargs)'
    parameters:
    - description: The blob data to upload.
      id: data
      isRequired: true
    - description: 'The type of the blob. This can be

        either BlockBlob, PageBlob or AppendBlob. The default value is BlockBlob.'
      id: blob_type
      isRequired: true
      type:
      - azure.storage.blob.BlobType
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      isRequired: true
      type:
      - int
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      isRequired: true
      type:
      - dict(str, str)
    - description: 'Whether the blob to be uploaded should overwrite the current data.

        If True, upload_blob will overwrite the existing data. If set to False, the

        operation will fail with ResourceExistsError. The exception to the above is
        with Append

        blob types: if set to False and the data already exists, an error will not
        be raised

        and the data will be appended to the existing blob. If set overwrite=True,
        then the existing

        append blob will be deleted, and a new one created. Defaults to False.'
      id: overwrite
      isRequired: true
      type:
      - bool
    - description: 'ContentSettings object used to set blob properties. Used to set
        content type, encoding,

        language, disposition, md5, and cache control.'
      id: content_settings
      isRequired: true
      type:
      - azure.storage.blob.ContentSettings
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https, as https (the default), will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'If specified, upload_blob only succeeds if the

        blob''s lease is active and matches this ID.

        Required if the blob has an active lease.'
      id: lease
      isRequired: true
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.PremiumPageBlobTier
    - description: 'A standard blob tier value to set the blob to. For this version
        of the library,

        this is only applicable to block blobs on standard storage accounts.'
      id: standard_blob_tier
      isRequired: true
      type:
      - azure.storage.blob.StandardBlobTier
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      isRequired: true
      type:
      - int
    - description: 'Maximum number of parallel connections to use when the blob size
        exceeds

        64MB.'
      id: max_concurrency
      isRequired: true
      type:
      - int
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: Defaults to UTF-8.
      id: encoding
      isRequired: true
      type:
      - str
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.aio.BlobClient.upload_blob
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.upload_page
  langs:
  - python
  module: azure.storage.blob.aio
  name: upload_page(page, offset, length, **kwargs)
  namewithoutparameters: upload_page
  summary: The Upload Pages operation writes a range of pages to a page blob.
  syntax:
    content: upload_page(page, offset, length, **kwargs)
    parameters:
    - description: Content of the page.
      id: page
      isRequired: true
      type:
      - bytes
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'If true, calculates an MD5 hash of the page content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https, as https (the default),

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      isRequired: true
      type:
      - bool
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      isRequired: true
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'An ETag value, or the wildcard character (*). Used to check if
        the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: Defaults to UTF-8.
      id: encoding
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.aio.BlobClient.upload_page
- class: azure.storage.blob.aio.BlobClient
  fullName: azure.storage.blob.aio.BlobClient.upload_pages_from_url
  langs:
  - python
  module: azure.storage.blob.aio
  name: upload_pages_from_url(source_url, offset, length, source_offset, **kwargs)
  namewithoutparameters: upload_pages_from_url
  summary: 'The Upload Pages operation writes a range of pages to a page blob where

    the contents are read from a URL.'
  syntax:
    content: upload_pages_from_url(source_url, offset, length, source_offset, **kwargs)
    parameters:
    - description: 'The URL of the source data. It can point to any Azure Blob or
        File, that is either public or has a

        shared access signature attached.'
      id: source_url
      isRequired: true
      type:
      - str
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length  must be a modulus of

        512.'
      id: offset
      isRequired: true
      type:
      - int
    - description: 'Number of bytes to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the length must be a modulus of

        512.'
      id: length
      isRequired: true
      type:
      - int
    - description: 'This indicates the start of the range of bytes(inclusive) that
        has to be taken from the copy source.

        The service will read the same number of bytes as the destination range (length-offset).'
      id: source_offset
      isRequired: true
      type:
      - int
    - description: If given, the service will calculate the MD5 hash of the block
        content and compare against this value.
      id: source_content_md5
      isRequired: true
      type:
      - bytes
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the source resource has been modified since the specified time.'
      id: source_if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the source resource has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The source ETag value, or the wildcard character (*). Used to
        check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: source_etag
      isRequired: true
      type:
      - str
    - description: The source match condition to use upon the etag.
      id: source_match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
        object

        or the lease ID as a string.'
      id: lease
      isRequired: true
      type:
      - azure.storage.blob.aio.BlobLeaseClient
      - str
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      isRequired: true
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      isRequired: true
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      isRequired: true
      type:
      - datetime.datetime
    - description: 'The destination ETag value, or the wildcard character (*). Used
        to check if the resource has changed,

        and act according to the condition specified by the *match_condition* parameter.'
      id: etag
      isRequired: true
      type:
      - str
    - description: The destination match condition to use upon the etag.
      id: match_condition
      isRequired: true
      type:
      - azure.core.MatchConditions
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      isRequired: true
      type:
      - azure.storage.blob.CustomerProvidedEncryptionKey
    - description: 'A predefined encryption scope used to encrypt the data on the
        service. An encryption

        scope can be created using the Management API and referenced here by name.
        If a default

        encryption scope has been defined at the container, this value will override
        it if the

        container-level scope is configured to allow overrides. Otherwise an error
        will be raised.


        New in version 12.2.0.'
      id: encryption_scope
      isRequired: true
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      isRequired: true
      type:
      - int
  type: method
  uid: azure.storage.blob.aio.BlobClient.upload_pages_from_url
references:
- fullName: azure.storage.blob.aio.BlobClient.abort_copy
  isExternal: false
  name: abort_copy(copy_id, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.abort_copy
- fullName: azure.storage.blob.aio.BlobClient.acquire_lease
  isExternal: false
  name: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.acquire_lease
- fullName: azure.storage.blob.aio.BlobClient.append_block
  isExternal: false
  name: append_block(data, length=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.append_block
- fullName: azure.storage.blob.aio.BlobClient.append_block_from_url
  isExternal: false
  name: append_block_from_url(copy_source_url, source_offset=None, source_length=None,
    **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.append_block_from_url
- fullName: azure.storage.blob.aio.BlobClient.clear_page
  isExternal: false
  name: clear_page(offset, length, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.clear_page
- fullName: azure.storage.blob.aio.BlobClient.commit_block_list
  isExternal: false
  name: commit_block_list(block_list, content_settings=None, metadata=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.commit_block_list
- fullName: azure.storage.blob.aio.BlobClient.create_append_blob
  isExternal: false
  name: create_append_blob(content_settings=None, metadata=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.create_append_blob
- fullName: azure.storage.blob.aio.BlobClient.create_page_blob
  isExternal: false
  name: create_page_blob(size, content_settings=None, metadata=None, premium_page_blob_tier=None,
    **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.create_page_blob
- fullName: azure.storage.blob.aio.BlobClient.create_snapshot
  isExternal: false
  name: create_snapshot(metadata=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.create_snapshot
- fullName: azure.storage.blob.aio.BlobClient.delete_blob
  isExternal: false
  name: delete_blob(delete_snapshots=False, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.delete_blob
- fullName: azure.storage.blob.aio.BlobClient.download_blob
  isExternal: false
  name: download_blob(offset=None, length=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.download_blob
- fullName: azure.storage.blob.aio.BlobClient.get_account_information
  isExternal: false
  name: get_account_information(**kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.get_account_information
- fullName: azure.storage.blob.aio.BlobClient.get_blob_properties
  isExternal: false
  name: get_blob_properties(**kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.get_blob_properties
- fullName: azure.storage.blob.aio.BlobClient.get_block_list
  isExternal: false
  name: get_block_list(block_list_type='committed', **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.get_block_list
- fullName: azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
  isExternal: false
  name: get_page_range_diff_for_managed_disk(previous_snapshot_url, offset=None, length=None,
    **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
- fullName: azure.storage.blob.aio.BlobClient.get_page_ranges
  isExternal: false
  name: get_page_ranges(offset=None, length=None, previous_snapshot_diff=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.get_page_ranges
- fullName: azure.storage.blob.aio.BlobClient.resize_blob
  isExternal: false
  name: resize_blob(size, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.resize_blob
- fullName: azure.storage.blob.aio.BlobClient.set_blob_metadata
  isExternal: false
  name: set_blob_metadata(metadata=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.set_blob_metadata
- fullName: azure.storage.blob.aio.BlobClient.set_http_headers
  isExternal: false
  name: set_http_headers(content_settings=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.set_http_headers
- fullName: azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
  isExternal: false
  name: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
- fullName: azure.storage.blob.aio.BlobClient.set_sequence_number
  isExternal: false
  name: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.set_sequence_number
- fullName: azure.storage.blob.aio.BlobClient.set_standard_blob_tier
  isExternal: false
  name: set_standard_blob_tier(standard_blob_tier, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.set_standard_blob_tier
- fullName: azure.storage.blob.aio.BlobClient.stage_block
  isExternal: false
  name: stage_block(block_id, data, length=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.stage_block
- fullName: azure.storage.blob.aio.BlobClient.stage_block_from_url
  isExternal: false
  name: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
    source_content_md5=None, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.stage_block_from_url
- fullName: azure.storage.blob.aio.BlobClient.start_copy_from_url
  isExternal: false
  name: start_copy_from_url(source_url, metadata=None, incremental_copy=False, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.start_copy_from_url
- fullName: azure.storage.blob.aio.BlobClient.undelete_blob
  isExternal: false
  name: undelete_blob(**kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.undelete_blob
- fullName: azure.storage.blob.aio.BlobClient.upload_blob
  isExternal: false
  name: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, length=None,
    metadata=None, **kwargs)'
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.upload_blob
- fullName: azure.storage.blob.aio.BlobClient.upload_page
  isExternal: false
  name: upload_page(page, offset, length, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.upload_page
- fullName: azure.storage.blob.aio.BlobClient.upload_pages_from_url
  isExternal: false
  name: upload_pages_from_url(source_url, offset, length, source_offset, **kwargs)
  parent: azure.storage.blob.aio.BlobClient
  uid: azure.storage.blob.aio.BlobClient.upload_pages_from_url
- fullName: dict(str, Any)
  name: dict(str, Any)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: )
    name: )
  uid: dict(str, Any)
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: dict[str, Any]
  name: dict[str, Any]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: dict[str, Any]
- fullName: tuple(list(azure.storage.blob.BlobBlock), list(azure.storage.blob.BlobBlock))
  name: tuple(list(BlobBlock), list(BlobBlock))
  spec.python:
  - fullName: tuple
    name: tuple
    uid: tuple
  - fullName: (
    name: (
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: azure.storage.blob.BlobBlock
    name: BlobBlock
    uid: azure.storage.blob.BlobBlock
  - fullName: )
    name: )
  - fullName: ', '
    name: ', '
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: azure.storage.blob.BlobBlock
    name: BlobBlock
    uid: azure.storage.blob.BlobBlock
  - fullName: )
    name: )
  - fullName: )
    name: )
  uid: tuple(list(azure.storage.blob.BlobBlock), list(azure.storage.blob.BlobBlock))
- fullName: tuple(list(dict(str, str), list(dict(str, str))
  name: tuple(list(dict(str, str), list(dict(str, str))
  spec.python:
  - fullName: tuple
    name: tuple
    uid: tuple
  - fullName: (
    name: (
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  - fullName: ', '
    name: ', '
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  - fullName: )
    name: )
  uid: tuple(list(dict(str, str), list(dict(str, str))
- fullName: Dict[str, Any]
  name: Dict[str, Any]
  spec.python:
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: Dict[str, Any]
- fullName: dict[str, str
  name: dict[str, str
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  uid: dict[str, str
- fullName: datetime.datetime]
  name: datetime]
  spec.python:
  - fullName: datetime.datetime
    name: datetime
    uid: datetime.datetime
  - fullName: ']'
    name: ']'
  uid: datetime.datetime]
