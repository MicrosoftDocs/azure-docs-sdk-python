### YamlMime:PythonClass
uid: azure.storage.blob.aio.BlobClient
name: BlobClient
fullName: azure.storage.blob.aio.BlobClient
module: azure.storage.blob.aio
inheritances:
- azure.storage.blob._shared.base_client_async.AsyncStorageAccountHostsMixin
- azure.storage.blob._blob_client.BlobClient
- azure.storage.blob._encryption.StorageEncryptionMixin
summary: A client to interact with a specific blob, although that blob may not yet
  exist.
constructor:
  syntax: 'BlobClient(account_url: str, container_name: str, blob_name: str, snapshot:
    str | Dict[str, Any] | None = None, credential: str | Dict[str, str] | AzureNamedKeyCredential
    | AzureSasCredential | AsyncTokenCredential | None = None, **kwargs: Any)'
  parameters:
  - name: account_url
    description: 'The URI to the storage account. In order to create a client given
      the full URI to the blob,

      use the <xref:azure.storage.blob.aio.from_blob_url> classmethod.'
    isRequired: true
    types:
    - <xref:str>
  - name: container_name
    description: The container name for the blob.
    isRequired: true
    types:
    - <xref:str>
  - name: blob_name
    description: 'The name of the blob with which to interact. If specified, this
      value will override

      a blob value specified in the blob URL.'
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'The optional blob snapshot on which to operate. This can be the
      snapshot ID string

      or the response returned from <xref:azure.storage.blob.aio.BlobClient.create_snapshot>.'
    defaultValue: None
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential or AzureNamedKeyCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.

      If using an instance of AzureNamedKeyCredential, "name" should be the storage
      account name, and "key"

      should be the storage account key.'
    defaultValue: None
  - name: api_version
    description: 'The Storage API version to use for requests. Default value is the
      most recent service version that is

      compatible with the current SDK. Setting to an older version may result in reduced
      feature compatibility.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: secondary_hostname
    description: The hostname of the secondary endpoint.
    types:
    - <xref:str>
  - name: max_block_size
    description: 'The maximum chunk size for uploading a block blob in chunks.

      Defaults to 4*1024*1024, or 4MB.'
    types:
    - <xref:int>
  - name: max_single_put_size
    description: 'If the blob size is less than or equal max_single_put_size, then
      the blob will be

      uploaded with only one http PUT request. If the blob size is larger than max_single_put_size,

      the blob will be uploaded in chunks. Defaults to 64*1024*1024, or 64MB.'
    types:
    - <xref:int>
  - name: min_large_block_upload_threshold
    description: 'The minimum chunk size required to use the memory efficient

      algorithm when uploading a block blob. Defaults to 4*1024*1024+1.'
    types:
    - <xref:int>
  - name: use_byte_buffer
    description: Use a byte buffer for block blob uploads. Defaults to False.
    types:
    - <xref:bool>
  - name: max_page_size
    description: The maximum chunk size for uploading a page blob. Defaults to 4*1024*1024,
      or 4MB.
    types:
    - <xref:int>
  - name: max_single_get_size
    description: 'The maximum size for a blob to be downloaded in a single call,

      the exceeded part will be downloaded in chunks (could be parallel). Defaults
      to 32*1024*1024, or 32MB.'
    types:
    - <xref:int>
  - name: max_chunk_get_size
    description: 'The maximum chunk size used for downloading a blob. Defaults to
      4*1024*1024,

      or 4MB.'
    types:
    - <xref:int>
methods:
- uid: azure.storage.blob.aio.BlobClient.abort_copy
  name: abort_copy
  summary: 'Abort an ongoing copy operation.


    This will leave a destination blob with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  signature: 'async abort_copy(copy_id: str | Dict[str, Any] | BlobProperties, **kwargs:
    Any) -> None'
  parameters:
  - name: copy_id
    description: 'The copy operation to abort. This can be either an ID, or an

      instance of BlobProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.BlobProperties>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.acquire_lease
  name: acquire_lease
  summary: 'Requests a new lease.


    If the blob does not have an active lease, the Blob

    Service creates a lease on the blob and returns a new lease.'
  signature: 'async acquire_lease(lease_duration: int = -1, lease_id: str | None =
    None, **kwargs: Any) -> BlobLeaseClient'
  parameters:
  - name: lease_duration
    description: 'Specifies the duration of the lease, in seconds, or negative one

      (-1) for a lease that never expires. A non-infinite lease can be

      between 15 and 60 seconds. A lease duration cannot be changed

      using renew or change. Default is -1 (infinite lease).'
    isRequired: true
    types:
    - <xref:int>
  - name: lease_id
    description: 'Proposed lease ID, in a GUID string format. The Blob Service

      returns 400 (Invalid request) if the proposed lease ID is not

      in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: A BlobLeaseClient object.
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
- uid: azure.storage.blob.aio.BlobClient.append_block
  name: append_block
  summary: Commits a new block of data to the end of the existing append blob.
  signature: 'async append_block(data: bytes | str | Iterable[AnyStr] | IO[AnyStr],
    length: int | None = None, **kwargs) -> Dict[str, str | datetime | int]'
  parameters:
  - name: data
    description: Content of the block.
    isRequired: true
  - name: length
    description: Size of the block in bytes.
    isRequired: true
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the block content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https, as https (the default),

      will already validate. Note that this MD5 hash is not stored with the

      blob.'
    types:
    - <xref:bool>
  - name: maxsize_condition
    description: 'Optional conditional header. The max length in bytes permitted for

      the append blob. If the Append Block operation would cause the blob

      to exceed that limit or if the blob size is already greater than the

      value specified in this header, the request will fail with

      MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: appendpos_condition
    description: 'Optional conditional header, used only for the Append Block operation.

      A number indicating the byte offset to compare. Append Block will

      succeed only if the append position is equal to this number. If it

      is not, the request will fail with the AppendPositionConditionNotMet error

      (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag, last modified, append offset, committed
      block count).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.append_block_from_url
  name: append_block_from_url
  summary: Creates a new block to be committed as part of a blob, where the contents
    are read from a source url.
  signature: 'async append_block_from_url(copy_source_url: str, source_offset: int
    | None = None, source_length: int | None = None, **kwargs) -> Dict[str, str |
    datetime | int]'
  parameters:
  - name: copy_source_url
    description: 'The URL of the source data. It can point to any Azure Blob or File,
      that is either public or has a

      shared access signature attached.'
    isRequired: true
    types:
    - <xref:str>
  - name: source_offset
    description: This indicates the start of the range of bytes(inclusive) that has
      to be taken from the copy source.
    isRequired: true
    types:
    - <xref:int>
  - name: source_length
    description: This indicates the end of the range of bytes that has to be taken
      from the copy source.
    isRequired: true
    types:
    - <xref:int>
  - name: source_content_md5
    description: If given, the service will calculate the MD5 hash of the block content
      and compare against this value.
    types:
    - <xref:bytearray>
  - name: maxsize_condition
    description: 'Optional conditional header. The max length in bytes permitted for

      the append blob. If the Append Block operation would cause the blob

      to exceed that limit or if the blob size is already greater than the

      value specified in this header, the request will fail with

      MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: appendpos_condition
    description: 'Optional conditional header, used only for the Append Block operation.

      A number indicating the byte offset to compare. Append Block will

      succeed only if the append position is equal to this number. If it

      is not, the request will fail with the

      AppendPositionConditionNotMet error

      (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'The destination ETag value, or the wildcard character (*). Used
      to check if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The destination match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: source_if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the source resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: source_if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the source resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_etag
    description: 'The source ETag value, or the wildcard character (*). Used to check
      if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: source_match_condition
    description: The source match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
- uid: azure.storage.blob.aio.BlobClient.clear_page
  name: clear_page
  summary: Clears a range of pages.
  signature: 'async clear_page(offset: int, length: int, **kwargs: Any) -> Dict[str,
    str | datetime]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length  must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_sequence_number_lte
    description: 'If the blob''s sequence number is less than or equal to

      the specified value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_lt
    description: 'If the blob''s sequence number is less than the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_eq
    description: 'If the blob''s sequence number is equal to the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.commit_block_list
  name: commit_block_list
  summary: 'The Commit Block List operation writes a blob by specifying the list of

    block IDs that make up the blob.'
  signature: 'async commit_block_list(block_list: List[BlobBlock], content_settings:
    ContentSettings | None = None, metadata: Dict[str, str] | None = None, **kwargs)
    -> Dict[str, str | datetime]'
  parameters:
  - name: block_list
    description: List of Blockblobs.
    isRequired: true
    types:
    - <xref:list>
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)


      New in version 12.4.0.'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: legal_hold
    description: 'Specified if a legal hold should be set on the blob.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:bool>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the page content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https, as https (the default),

      will already validate. Note that this MD5 hash is not stored with the

      blob.'
    types:
    - <xref:bool>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: standard_blob_tier
    description: 'A standard blob tier value to set the blob to. For this version
      of the library,

      this is only applicable to block blobs on standard storage accounts.'
    types:
    - <xref:azure.storage.blob.StandardBlobTier>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.create_append_blob
  name: create_append_blob
  summary: Creates a new Append Blob.
  signature: 'async create_append_blob(content_settings: ContentSettings | None =
    None, metadata: Dict[str, str] | None = None, **kwargs: Any) -> Dict[str, str
    | datetime]'
  parameters:
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)


      New in version 12.4.0.'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: legal_hold
    description: 'Specified if a legal hold should be set on the blob.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.create_page_blob
  name: create_page_blob
  summary: Creates a new Page Blob of the specified size.
  signature: 'async create_page_blob(size: int, content_settings: ContentSettings
    | None = None, metadata: Dict[str, str] | None = None, premium_page_blob_tier:
    str | PremiumPageBlobTier | None = None, **kwargs) -> Dict[str, str | datetime]'
  parameters:
  - name: size
    description: 'This specifies the maximum size for the page blob, up to 1 TB.

      The page blob size must be aligned to a 512-byte boundary.'
    isRequired: true
    types:
    - <xref:int>
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: premium_page_blob_tier
    description: 'A page blob tier value to set the blob to. The tier correlates to
      the size of the

      blob and number of allowed IOPS. This is only applicable to page blobs on

      premium storage accounts.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.PremiumPageBlobTier>
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)


      New in version 12.4.0.'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: sequence_number
    description: 'Only for Page blobs. The sequence number is a user-controlled value
      that you can use to

      track requests. The value of the sequence number must be between 0

      and 2^63 - 1.The default value is 0.'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: legal_hold
    description: 'Specified if a legal hold should be set on the blob.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:bool>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.create_snapshot
  name: create_snapshot
  summary: 'Creates a snapshot of the blob.


    A snapshot is a read-only version of a blob that''s taken at a point in time.

    It can be read, copied, or deleted, but not modified. Snapshots provide a way

    to back up a blob as it appears at a moment in time.


    A snapshot of a blob has the same name as the base blob from which the snapshot

    is taken, with a DateTime value appended to indicate the time at which the

    snapshot was taken.'
  signature: 'async create_snapshot(metadata: Dict[str, str] | None = None, **kwargs:
    Any) -> Dict[str, str | datetime]'
  parameters:
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Snapshot ID, Etag, and last modified).
    types:
    - <xref:dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.delete_blob
  name: delete_blob
  summary: 'Marks the specified blob for deletion.


    The blob is later deleted during garbage collection.

    Note that in order to delete a blob, you must delete all of its

    snapshots. You can delete both at the same time with the delete_blob()

    operation.


    If a delete retention policy is enabled for the service, then this operation soft
    deletes the blob

    and retains the blob for a specified number of days.

    After the specified number of days, the blob''s data is removed from the service
    during garbage collection.

    Soft deleted blob is accessible through <xref:azure.storage.blob.aio.ContainerClient.list_blobs>
    specifying *include=[''deleted'']*

    option. Soft-deleted blob can be restored using <xref:azure.storage.blob.aio.undelete>
    operation.'
  signature: 'async delete_blob(delete_snapshots: str = None, **kwargs: Any) -> None'
  parameters:
  - name: delete_snapshots
    description: "Required if the blob has associated snapshots. Values include:\n\
      \   * \"only\": Deletes only the blobs snapshots. \n\n   * \"include\": Deletes\
      \ the blob along with all snapshots."
    isRequired: true
    types:
    - <xref:str>
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to delete.


      New in version 12.4.0.


      This keyword argument was introduced in API version ''2019-12-12''.'
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. If specified, delete_blob
      only

      succeeds if the blob''s lease is active and matches this ID. Value can be a

      BlobLeaseClient object or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.delete_immutability_policy
  name: delete_immutability_policy
  summary: 'The Delete Immutability Policy operation deletes the immutability policy
    on the blob.


    New in version 12.10.0: This operation was introduced in API version ''2020-10-02''.'
  signature: 'async delete_immutability_policy(**kwargs: Any) -> None'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Key value pairs of blob tags.
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
- uid: azure.storage.blob.aio.BlobClient.download_blob
  name: download_blob
  summary: 'Downloads a blob to the StorageStreamDownloader. The readall() method
    must

    be used to read all the content or readinto() must be used to download the blob
    into

    a stream. Using chunks() returns an async iterator which allows the user to iterate
    over the content in chunks.'
  signature: 'async download_blob(offset: int = None, length: int = None, *, encoding:
    str, **kwargs) -> StorageStreamDownloader[str]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for downloading a section of the blob.

      Must be set if length is provided.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    isRequired: true
    types:
    - <xref:int>
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to download.


      New in version 12.4.0.


      This keyword argument was introduced in API version ''2019-12-12''.'
    types:
    - <xref:str>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the blob. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https, as https (the default), will

      already validate. Note that this MD5 hash is not stored with the

      blob. Also note that if enabled, the memory-efficient upload algorithm

      will not be used because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the blob has an active lease. If specified, download_blob
      only

      succeeds if the blob''s lease is active and matches this ID. Value can be a

      BlobLeaseClient object or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: max_concurrency
    description: The number of parallel connections with which to download.
    types:
    - <xref:int>
  - name: encoding
    description: Encoding to decode the downloaded bytes. Default is None, i.e. no
      decoding.
    types:
    - <xref:str>
  - name: progress_hook
    description: 'An async callback to track the progress of a long running download.
      The signature is

      function(current: int, total: int) where current is the number of bytes transfered

      so far, and total is the total size of the download.'
    types:
    - <xref:Callable>[[<xref:int>, <xref:int>], <xref:Awaitable>[<xref:None>]]
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).
      This method may make multiple calls to the service and

      the timeout will apply to each call individually.

      multiple calls to the Azure service and the timeout will apply to

      each call individually.'
    types:
    - <xref:int>
  return:
    description: A streaming object (StorageStreamDownloader)
    types:
    - <xref:azure.storage.blob.aio.StorageStreamDownloader>
- uid: azure.storage.blob.aio.BlobClient.exists
  name: exists
  summary: 'Returns True if a blob exists with the defined parameters, and returns

    False otherwise.'
  signature: 'async exists(**kwargs: Any) -> bool'
  parameters:
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to check if it exists.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: boolean
- uid: azure.storage.blob.aio.BlobClient.get_account_information
  name: get_account_information
  summary: 'Gets information related to the storage account in which the blob resides.


    The information can also be retrieved if the user has a SAS to a container or
    blob.

    The keys in the returned dictionary include ''sku_name'' and ''account_kind''.'
  signature: 'async get_account_information(**kwargs: int | None) -> Dict[str, str]'
  return:
    description: A dict of account information (SKU and account type).
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
- uid: azure.storage.blob.aio.BlobClient.get_blob_properties
  name: get_blob_properties
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the blob. It does not return the content of the blob.'
  signature: 'async get_blob_properties(**kwargs: Any) -> BlobProperties'
  parameters:
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to get properties.


      New in version 12.4.0.


      This keyword argument was introduced in API version ''2019-12-12''.'
    types:
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: BlobProperties
    types:
    - <xref:azure.storage.blob.BlobProperties>
- uid: azure.storage.blob.aio.BlobClient.get_blob_tags
  name: get_blob_tags
  summary: 'The Get Tags operation enables users to get tags on a blob or specific
    blob version, but not snapshot.


    New in version 12.4.0: This operation was introduced in API version ''2019-12-12''.'
  signature: 'async get_blob_tags(**kwargs: Any) -> Dict[str, str]'
  parameters:
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to add tags to.'
    types:
    - <xref:str>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`'
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Key value pairs of blob tags.
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
- uid: azure.storage.blob.aio.BlobClient.get_block_list
  name: get_block_list
  summary: 'The Get Block List operation retrieves the list of blocks that have

    been uploaded as part of a block blob.'
  signature: 'async get_block_list(block_list_type: str | None = ''committed'', **kwargs:
    Any) -> Tuple[List[BlobBlock], List[BlobBlock]]'
  parameters:
  - name: block_list_type
    description: 'Specifies whether to return the list of committed

      blocks, the list of uncommitted blocks, or both lists together.

      Possible values include: ''committed'', ''uncommitted'', ''all'''
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: A tuple of two lists - committed and uncommitted blocks
    types:
    - <xref:tuple>(<xref:list>(<xref:azure.storage.blob.BlobBlock>), <xref:list>(<xref:azure.storage.blob.BlobBlock>))
- uid: azure.storage.blob.aio.BlobClient.get_page_range_diff_for_managed_disk
  name: get_page_range_diff_for_managed_disk
  summary: 'Returns the list of valid page ranges for a managed disk or snapshot.


    > [!NOTE]

    > This operation is only available for managed disk accounts.

    >


    New in version 12.2.0: This operation was introduced in API version ''2019-07-07''.'
  signature: 'async get_page_range_diff_for_managed_disk(previous_snapshot_url: str,
    offset: int | None = None, length: int | None = None, **kwargs) -> Tuple[List[Dict[str,
    int]], List[Dict[str, int]]]'
  parameters:
  - name: previous_snapshot_url
    description: 'Specifies the URL of a previous snapshot of the managed disk.

      The response will only contain pages that were changed between the target blob
      and

      its previous snapshot.'
    isRequired: true
  - name: offset
    description: 'Start of byte range to use for getting valid page ranges.

      If no length is given, all bytes after the offset will be searched.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for getting valid page ranges.

      If length is given, offset must be provided.

      This range will return valid page ranges from the offset start up to

      the specified length.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'A tuple of two lists of page ranges as dictionaries with ''start''
      and ''end'' keys.

      The first element are filled page ranges, the 2nd element is cleared page ranges.'
    types:
    - <xref:tuple>(<xref:list>(<xref:dict>(<xref:str>, <xref:str>), <xref:list>(<xref:dict>(<xref:str>,
      <xref:str>))
- uid: azure.storage.blob.aio.BlobClient.get_page_ranges
  name: get_page_ranges
  summary: 'DEPRECATED: Returns the list of valid page ranges for a Page Blob or snapshot

    of a page blob.'
  signature: 'async get_page_ranges(offset: int | None = None, length: int | None
    = None, previous_snapshot_diff: str | Dict[str, Any] | None = None, **kwargs)
    -> Tuple[List[Dict[str, int]], List[Dict[str, int]]]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for getting valid page ranges.

      If no length is given, all bytes after the offset will be searched.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for getting valid page ranges.

      If length is given, offset must be provided.

      This range will return valid page ranges from the offset start up to

      the specified length.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: previous_snapshot_diff
    description: 'The snapshot diff parameter that contains an opaque DateTime value
      that

      specifies a previous blob snapshot to be compared

      against a more recent snapshot or the current blob.'
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: 'A tuple of two lists of page ranges as dictionaries with ''start''
      and ''end'' keys.

      The first element are filled page ranges, the 2nd element is cleared page ranges.'
    types:
    - <xref:tuple>(<xref:list>(<xref:dict>(<xref:str>, <xref:str>), <xref:list>(<xref:dict>(<xref:str>,
      <xref:str>))
- uid: azure.storage.blob.aio.BlobClient.list_page_ranges
  name: list_page_ranges
  summary: 'Returns the list of valid page ranges for a Page Blob or snapshot

    of a page blob. If *previous_snapshot* is specified, the result will be

    a diff of changes between the target blob and the previous snapshot.'
  signature: 'list_page_ranges(*, offset: int | None = None, length: int | None =
    None, previous_snapshot: str | Dict[str, Any] | None = None, **kwargs: Any) ->
    AsyncItemPaged[PageRange]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for getting valid page ranges.

      If no length is given, all bytes after the offset will be searched.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for getting valid page ranges.

      If length is given, offset must be provided.

      This range will return valid page ranges from the offset start up to

      the specified length.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    types:
    - <xref:int>
  - name: previous_snapshot
    description: 'A snapshot value that specifies that the response will contain only
      pages that were changed

      between target blob and previous snapshot. Changed pages include both updated
      and cleared

      pages. The target blob may be a snapshot, as long as the snapshot specified
      by *previous_snapshot*

      is the older of the two.'
    types:
    - <xref:str>
    - <xref:Dict>[<xref:str>, <xref:Any>]
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: results_per_page
    description: The maximum number of page ranges to retrieve per API call.
    types:
    - <xref:int>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: An iterable (auto-paging) of PageRange.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.storage.blob.PageRange>]
- uid: azure.storage.blob.aio.BlobClient.resize_blob
  name: resize_blob
  summary: 'Resizes a page blob to the specified size.


    If the specified value is less than the current size of the blob,

    then all pages above the specified value are cleared.'
  signature: 'async resize_blob(size: int, **kwargs: Any) -> Dict[str, str | datetime]'
  parameters:
  - name: size
    description: 'Size used to resize blob. Maximum size for a page blob is up to
      1 TB.

      The page blob size must be aligned to a 512-byte boundary.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: premium_page_blob_tier
    description: 'A page blob tier value to set the blob to. The tier correlates to
      the size of the

      blob and number of allowed IOPS. This is only applicable to page blobs on

      premium storage accounts.'
    types:
    - <xref:azure.storage.blob.PremiumPageBlobTier>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.seal_append_blob
  name: seal_append_blob
  summary: "The Seal operation seals the Append Blob to make it read-only.\n\n   New\
    \ in version 12.4.0."
  signature: async seal_append_blob(**kwargs) -> Dict[str, str | datetime | int]
  parameters:
  - name: appendpos_condition
    description: 'Optional conditional header, used only for the Append Block operation.

      A number indicating the byte offset to compare. Append Block will

      succeed only if the append position is equal to this number. If it

      is not, the request will fail with the AppendPositionConditionNotMet error

      (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag, last modified, append offset, committed
      block count).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.set_blob_metadata
  name: set_blob_metadata
  summary: Sets user-defined metadata for the blob as one or more name-value pairs.
  signature: 'async set_blob_metadata(metadata: Dict[str, str] | None = None, **kwargs:
    Any) -> Dict[str, str | datetime]'
  parameters:
  - name: metadata
    description: 'Dict containing name and value pairs. Each call to this operation

      replaces all existing metadata attached to the blob. To remove all

      metadata from the blob, call this operation with no metadata headers.'
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified)
- uid: azure.storage.blob.aio.BlobClient.set_blob_tags
  name: set_blob_tags
  summary: "The Set Tags operation enables users to set tags on a blob or specific\
    \ blob version, but not snapshot.\n   Each call to this operation replaces all\
    \ existing tags attached to the blob. To remove all\n   tags from the blob, call\
    \ this operation with no tags set.\n\nNew in version 12.4.0: This operation was\
    \ introduced in API version '2019-12-12'."
  signature: 'async set_blob_tags(tags: Dict[str, str] | None = None, **kwargs: Any)
    -> Dict[str, Any]'
  parameters:
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)'
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: version_id
    description: 'The version id parameter is an opaque DateTime

      value that, when present, specifies the version of the blob to delete.'
    types:
    - <xref:str>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the tags content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https, as https (the default),

      will already validate. Note that this MD5 hash is not stored with the

      blob.'
    types:
    - <xref:bool>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`'
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified)
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.set_http_headers
  name: set_http_headers
  summary: 'Sets system properties on the blob.


    If one property is set for the content_settings, all properties will be overridden.'
  signature: 'async set_http_headers(content_settings: ContentSettings | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified)
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.set_immutability_policy
  name: set_immutability_policy
  summary: 'The Set Immutability Policy operation sets the immutability policy on
    the blob.


    New in version 12.10.0: This operation was introduced in API version ''2020-10-02''.'
  signature: 'async set_immutability_policy(immutability_policy: ImmutabilityPolicy,
    **kwargs: Any) -> Dict[str, str]'
  parameters:
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Key value pairs of blob tags.
    types:
    - <xref:Dict>[<xref:str>, <xref:str>]
- uid: azure.storage.blob.aio.BlobClient.set_legal_hold
  name: set_legal_hold
  summary: 'The Set Legal Hold operation sets a legal hold on the blob.


    New in version 12.10.0: This operation was introduced in API version ''2020-10-02''.'
  signature: 'async set_legal_hold(legal_hold: bool, **kwargs: Any) -> Dict[str, str
    | datetime | bool]'
  parameters:
  - name: legal_hold
    description: Specified if a legal hold should be set on the blob.
    isRequired: true
    types:
    - <xref:bool>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Key value pairs of blob tags.
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:datetime>, <xref:bool>]]
- uid: azure.storage.blob.aio.BlobClient.set_premium_page_blob_tier
  name: set_premium_page_blob_tier
  summary: Sets the page blob tiers on the blob. This API is only supported for page
    blobs on premium accounts.
  signature: 'async set_premium_page_blob_tier(premium_page_blob_tier: str | PremiumPageBlobTier,
    **kwargs: Any) -> None'
  parameters:
  - name: premium_page_blob_tier
    description: 'A page blob tier value to set the blob to. The tier correlates to
      the size of the

      blob and number of allowed IOPS. This is only applicable to page blobs on

      premium storage accounts.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.PremiumPageBlobTier>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.set_sequence_number
  name: set_sequence_number
  summary: Sets the blob sequence number.
  signature: 'async set_sequence_number(sequence_number_action: str | SequenceNumberAction,
    sequence_number: str | None = None, **kwargs) -> Dict[str, str | datetime]'
  parameters:
  - name: sequence_number_action
    description: 'This property indicates how the service should modify the blob''s
      sequence

      number. See <xref:azure.storage.blob.SequenceNumberAction> for more information.'
    isRequired: true
    types:
    - <xref:str>
  - name: sequence_number
    description: 'This property sets the blob''s sequence number. The sequence number
      is a

      user-controlled property that you can use to track requests and manage

      concurrency issues.'
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.set_standard_blob_tier
  name: set_standard_blob_tier
  summary: 'This operation sets the tier on a block blob.


    A block blob''s tier determines Hot/Cool/Archive storage type.

    This operation does not update the blob''s ETag.'
  signature: 'async set_standard_blob_tier(standard_blob_tier: str | StandardBlobTier,
    **kwargs: Any) -> None'
  parameters:
  - name: standard_blob_tier
    description: 'Indicates the tier to be set on the blob. Options include ''Hot'',
      ''Cool'',

      ''Archive''. The hot tier is optimized for storing data that is accessed

      frequently. The cool storage tier is optimized for storing data that

      is infrequently accessed and stored for at least a month. The archive

      tier is optimized for storing data that is rarely accessed and stored

      for at least six months with flexible latency requirements.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.blob.StandardBlobTier>
  - name: rehydrate_priority
    description: Indicates the priority with which to rehydrate an archived blob
    types:
    - <xref:azure.storage.blob.RehydratePriority>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.stage_block
  name: stage_block
  summary: Creates a new block to be committed as part of a blob.
  signature: 'async stage_block(block_id: str, data: Iterable | IO, length: int |
    None = None, **kwargs) -> None'
  parameters:
  - name: block_id
    description: 'A string value that identifies the block.

      The string should be less than or equal to 64 bytes in size.

      For a given blob, the block_id must be the same size for each block.'
    isRequired: true
    types:
    - <xref:str>
  - name: data
    description: The blob data.
    isRequired: true
  - name: length
    description: Size of the block.
    isRequired: true
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the blob. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https, as https (the default), will

      already validate. Note that this MD5 hash is not stored with the

      blob. Also note that if enabled, the memory-efficient upload algorithm

      will not be used because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.stage_block_from_url
  name: stage_block_from_url
  summary: 'Creates a new block to be committed as part of a blob where

    the contents are read from a URL.'
  signature: 'async stage_block_from_url(block_id: str | int, source_url: str, source_offset:
    int | None = None, source_length: int | None = None, source_content_md5: bytes
    | bytearray | None = None, **kwargs) -> None'
  parameters:
  - name: block_id
    description: 'A string value that identifies the block.

      The string should be less than or equal to 64 bytes in size.

      For a given blob, the block_id must be the same size for each block.'
    isRequired: true
    types:
    - <xref:str>
  - name: source_url
    description: The URL.
    isRequired: true
    types:
    - <xref:str>
  - name: source_offset
    description: 'Start of byte range to use for the block.

      Must be set if source length is provided.'
    isRequired: true
    types:
    - <xref:int>
  - name: source_length
    description: The size of the block in bytes.
    isRequired: true
    types:
    - <xref:int>
  - name: source_content_md5
    description: 'Specify the md5 calculated for the range of

      bytes that must be read from the copy source.'
    isRequired: true
    types:
    - <xref:bytearray>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.start_copy_from_url
  name: start_copy_from_url
  summary: 'Copies a blob from the given URL.


    This operation returns a dictionary containing *copy_status* and *copy_id*,

    which can be used to check the status of or abort the copy operation.

    *copy_status* will be ''success'' if the copy completed synchronously or

    ''pending'' if the copy has been started asynchronously. For asynchronous copies,

    the status can be checked by polling the <xref:azure.storage.blob.aio.BlobClient.get_blob_properties>
    method and

    checking the copy status. Set *requires_sync* to True to force the copy to be
    synchronous.

    The Blob service copies blobs on a best-effort basis.


    The source blob for a copy operation may be a block blob, an append blob,

    or a page blob. If the destination blob already exists, it must be of the

    same blob type as the source blob. Any existing destination blob will be

    overwritten. The destination blob cannot be modified while a copy operation

    is in progress.


    When copying from a page blob, the Blob service creates a destination page

    blob of the source blob''s length, initially containing all zeroes. Then

    the source page ranges are enumerated, and non-empty ranges are copied.


    For a block blob or an append blob, the Blob service creates a committed

    blob of zero length before returning from this operation. When copying

    from a block blob, all committed blocks and their block IDs are copied.

    Uncommitted blocks are not copied. At the end of the copy operation, the

    destination blob will have the same committed block count as the source.


    When copying from an append blob, all committed blocks are copied. At the

    end of the copy operation, the destination blob will have the same committed

    block count as the source.'
  signature: 'async start_copy_from_url(source_url: str, metadata: Dict[str, str]
    | None = None, incremental_copy: bool = False, **kwargs: Any) -> Dict[str, str
    | datetime]'
  parameters:
  - name: source_url
    description: 'A URL of up to 2 KB in length that specifies a file or blob.

      The value should be URL-encoded as it would appear in a request URI.

      If the source is in another account, the source must either be public

      or must be authenticated via a shared access signature. If the source

      is public, no authentication is required.

      Examples:

      [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)


      [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)?snapshot=<DateTime>


      [https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken](https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken)'
    isRequired: true
    types:
    - <xref:str>
  - name: metadata
    description: 'Name-value pairs associated with the blob as metadata. If no name-value

      pairs are specified, the operation will copy the metadata from the

      source blob or file to the destination blob. If one or more name-value

      pairs are specified, the destination blob is created with the specified

      metadata, and metadata is not copied from the source blob or file.'
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: incremental_copy
    description: 'Copies the snapshot of the source page blob to a destination page
      blob.

      The snapshot is copied such that only the differential changes between

      the previously copied snapshot are transferred to the destination.

      The copied snapshots are complete copies of the original snapshot and

      can be read or copied from as usual. Defaults to False.'
    isRequired: true
    types:
    - <xref:bool>
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_).


      The (case-sensitive) literal "COPY" can instead be passed to copy tags from
      the source blob.

      This option is only available when *incremental_copy=False* and *requires_sync=True*.


      New in version 12.4.0.'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
    - <xref:Literal>[<xref:"COPY">]
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: legal_hold
    description: 'Specified if a legal hold should be set on the blob.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:bool>
  - name: source_if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only if the source

      blob has been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only if the source blob

      has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_etag
    description: 'The source ETag value, or the wildcard character (*). Used to check
      if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: source_match_condition
    description: The source match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only

      if the destination blob has been modified since the specified date/time.

      If the destination blob has not been modified, the Blob service returns

      status code 412 (Precondition Failed).'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this conditional header to copy the blob only

      if the destination blob has not been modified since the specified

      date/time. If the destination blob has been modified, the Blob service

      returns status code 412 (Precondition Failed).'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'The destination ETag value, or the wildcard character (*). Used
      to check if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The destination match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: destination_lease
    description: 'The lease ID specified for this header must match the lease ID of
      the

      destination blob. If the request does not include the lease ID or it is not

      valid, the operation fails with status code 412 (Precondition Failed).'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: source_lease
    description: 'Specify this to perform the Copy Blob operation only if

      the lease ID given matches the active lease ID of the source blob.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: premium_page_blob_tier
    description: 'A page blob tier value to set the blob to. The tier correlates to
      the size of the

      blob and number of allowed IOPS. This is only applicable to page blobs on

      premium storage accounts.'
    types:
    - <xref:azure.storage.blob.PremiumPageBlobTier>
  - name: standard_blob_tier
    description: 'A standard blob tier value to set the blob to. For this version
      of the library,

      this is only applicable to block blobs on standard storage accounts.'
    types:
    - <xref:azure.storage.blob.StandardBlobTier>
  - name: rehydrate_priority
    description: Indicates the priority with which to rehydrate an archived blob
    types:
    - <xref:azure.storage.blob.RehydratePriority>
  - name: seal_destination_blob
    description: 'Seal the destination append blob. This operation is only for append
      blob.


      New in version 12.4.0.'
    types:
    - <xref:bool>
  - name: requires_sync
    description: Enforces that the service will not return a response until the copy
      is complete.
    types:
    - <xref:bool>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string. This option is only available
      when *incremental_copy* is

      set to False and *requires_sync* is set to True.


      New in version 12.9.0.'
    types:
    - <xref:str>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the sync
      copied blob. An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.10.0.'
    types:
    - <xref:str>
  return:
    description: A dictionary of copy properties (etag, last_modified, copy_id, copy_status).
    types:
    - <xref:dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:datetime.datetime>]]
- uid: azure.storage.blob.aio.BlobClient.undelete_blob
  name: undelete_blob
  summary: 'Restores soft-deleted blobs or snapshots.


    Operation will only be successful if used within the specified number of days

    set in the delete retention policy.


    If blob versioning is enabled, the base blob cannot be restored using this

    method. Instead use <xref:azure.storage.blob.aio.BlobClient.start_copy_from_url>
    with the URL of the blob version

    you wish to promote to the current version.'
  signature: 'async undelete_blob(**kwargs: Any) -> None'
  parameters:
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.blob.aio.BlobClient.upload_blob
  name: upload_blob
  summary: Creates a new blob from a data source with automatic chunking.
  signature: 'async upload_blob(data: bytes | str | Iterable | AsyncIterable | IO,
    blob_type: str | BlobType = BlobType.BLOCKBLOB, length: int | None = None, metadata:
    Dict[str, str] | None = None, **kwargs) -> Dict[str, Any]'
  parameters:
  - name: data
    description: The blob data to upload.
    isRequired: true
  - name: blob_type
    description: 'The type of the blob. This can be

      either BlockBlob, PageBlob or AppendBlob. The default value is BlockBlob.'
    isRequired: true
    types:
    - <xref:azure.storage.blob.BlobType>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    isRequired: true
    types:
    - <xref:int>
  - name: metadata
    description: Name-value pairs associated with the blob as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)


      New in version 12.4.0.'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: overwrite
    description: 'Whether the blob to be uploaded should overwrite the current data.

      If True, upload_blob will overwrite the existing data. If set to False, the

      operation will fail with ResourceExistsError. The exception to the above is
      with Append

      blob types: if set to False and the data already exists, an error will not be
      raised

      and the data will be appended to the existing blob. If set overwrite=True, then
      the existing

      append blob will be deleted, and a new one created. Defaults to False.'
    types:
    - <xref:bool>
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the blob. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https, as https (the default), will

      already validate. Note that this MD5 hash is not stored with the

      blob. Also note that if enabled, the memory-efficient upload algorithm

      will not be used because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: lease
    description: 'If specified, upload_blob only succeeds if the

      blob''s lease is active and matches this ID.

      Required if the blob has an active lease.'
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: premium_page_blob_tier
    description: 'A page blob tier value to set the blob to. The tier correlates to
      the size of the

      blob and number of allowed IOPS. This is only applicable to page blobs on

      premium storage accounts.'
    types:
    - <xref:azure.storage.blob.PremiumPageBlobTier>
  - name: immutability_policy
    description: 'Specifies the immutability policy of a blob, blob snapshot or blob
      version.

      Currently this parameter of upload_blob() API is for BlockBlob only.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:azure.storage.blob.ImmutabilityPolicy>
  - name: legal_hold
    description: 'Specified if a legal hold should be set on the blob.

      Currently this parameter of upload_blob() API is for BlockBlob only.


      New in version 12.10.0: This was introduced in API version ''2020-10-02''.'
    types:
    - <xref:bool>
  - name: standard_blob_tier
    description: 'A standard blob tier value to set the blob to. For this version
      of the library,

      this is only applicable to block blobs on standard storage accounts.'
    types:
    - <xref:azure.storage.blob.StandardBlobTier>
  - name: maxsize_condition
    description: 'Optional conditional header. The max length in bytes permitted for

      the append blob. If the Append Block operation would cause the blob

      to exceed that limit or if the blob size is already greater than the

      value specified in this header, the request will fail with

      MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
    types:
    - <xref:int>
  - name: max_concurrency
    description: 'Maximum number of parallel connections to use when the blob size
      exceeds

      64MB.'
    types:
    - <xref:int>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  - name: progress_hook
    description: 'An async callback to track the progress of a long running upload.
      The signature is

      function(current: int, total: Optional[int]) where current is the number of
      bytes transfered

      so far, and total is the size of the blob or None if the size is unknown.'
    types:
    - <xref:Callable>[[<xref:int>, <xref:Optional>[<xref:int>]], <xref:Awaitable>[<xref:None>]]
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).
      This method may make multiple calls to the service and

      the timeout will apply to each call individually.

      multiple calls to the Azure service and the timeout will apply to

      each call individually.'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified)
    types:
    - <xref:dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.blob.aio.BlobClient.upload_blob_from_url
  name: upload_blob_from_url
  summary: 'Creates a new Block Blob where the content of the blob is read from a
    given URL.

    The content of an existing blob is overwritten with the new blob.'
  signature: 'async upload_blob_from_url(source_url: str, **kwargs: Any) -> Dict[str,
    Any]'
  parameters:
  - name: source_url
    description: 'A URL of up to 2 KB in length that specifies a file or blob.

      The value should be URL-encoded as it would appear in a request URI.

      If the source is in another account, the source must either be public

      or must be authenticated via a shared access signature. If the source

      is public, no authentication is required.

      Examples:

      [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)


      [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)?snapshot=<DateTime>


      [https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken](https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken)'
    isRequired: true
    types:
    - <xref:str>
  - name: overwrite
    description: 'Whether the blob to be uploaded should overwrite the current data.

      If True, upload_blob will overwrite the existing data. If set to False, the

      operation will fail with ResourceExistsError.'
    types:
    - <xref:bool>
  - name: include_source_blob_properties
    description: Indicates if properties from the source blob should be copied. Defaults
      to True.
    types:
    - <xref:bool>
  - name: tags
    description: 'Name-value pairs associated with the blob as tag. Tags are case-sensitive.

      The tag set may contain at most 10 tags.  Tag keys must be between 1 and 128
      characters,

      and tag values must be between 0 and 256 characters.

      Valid tag key and value characters include: lowercase and uppercase letters,
      digits (0-9),

      space (` >>`<<), plus (+), minus (-), period (.), solidus (/), colon (:), equals
      (=), underscore (_)'
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: source_content_md5
    description: Specify the md5 that is used to verify the integrity of the source
      bytes.
    types:
    - <xref:bytearray>
  - name: source_if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the source resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: source_if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the source resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_etag
    description: 'The source ETag value, or the wildcard character (*). Used to check
      if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: source_match_condition
    description: The source match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'The destination ETag value, or the wildcard character (*). Used
      to check if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The destination match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: destination_lease
    description: 'The lease ID specified for this header must match the lease ID of
      the

      destination blob. If the request does not include the lease ID or it is not

      valid, the operation fails with status code 412 (Precondition Failed).'
    types:
    - <xref:azure.storage.blob.BlobLeaseClient>
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: content_settings
    description: 'ContentSettings object used to set blob properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    types:
    - <xref:azure.storage.blob.ContentSettings>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.'
    types:
    - <xref:str>
  - name: standard_blob_tier
    description: 'A standard blob tier value to set the blob to. For this version
      of the library,

      this is only applicable to block blobs on standard storage accounts.'
    types:
    - <xref:azure.storage.blob.StandardBlobTier>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
- uid: azure.storage.blob.aio.BlobClient.upload_page
  name: upload_page
  summary: The Upload Pages operation writes a range of pages to a page blob.
  signature: 'async upload_page(page: bytes, offset: int, length: int, **kwargs) ->
    Dict[str, str | datetime]'
  parameters:
  - name: page
    description: Content of the page.
    isRequired: true
    types:
    - <xref:bytes>
  - name: offset
    description: 'Start of byte range to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the page content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https, as https (the default),

      will already validate. Note that this MD5 hash is not stored with the

      blob.'
    types:
    - <xref:bool>
  - name: if_sequence_number_lte
    description: 'If the blob''s sequence number is less than or equal to

      the specified value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_lt
    description: 'If the blob''s sequence number is less than the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_eq
    description: 'If the blob''s sequence number is equal to the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  return:
    description: Blob-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.blob.aio.BlobClient.upload_pages_from_url
  name: upload_pages_from_url
  summary: 'The Upload Pages operation writes a range of pages to a page blob where

    the contents are read from a URL.'
  signature: 'async upload_pages_from_url(source_url: str, offset: int, length: int,
    source_offset: int, **kwargs) -> Dict[str, Any]'
  parameters:
  - name: source_url
    description: 'The URL of the source data. It can point to any Azure Blob or File,
      that is either public or has a

      shared access signature attached.'
    isRequired: true
    types:
    - <xref:str>
  - name: offset
    description: 'Start of byte range to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length  must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for writing to a section of the blob.

      Pages must be aligned with 512-byte boundaries, the start offset

      must be a modulus of 512 and the length must be a modulus of

      512.'
    isRequired: true
    types:
    - <xref:int>
  - name: source_offset
    description: 'This indicates the start of the range of bytes(inclusive) that has
      to be taken from the copy source.

      The service will read the same number of bytes as the destination range (length-offset).'
    isRequired: true
    types:
    - <xref:int>
  - name: source_content_md5
    description: If given, the service will calculate the MD5 hash of the block content
      and compare against this value.
    types:
    - <xref:bytes>
  - name: source_if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the source resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: source_if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the source resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: source_etag
    description: 'The source ETag value, or the wildcard character (*). Used to check
      if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: source_match_condition
    description: The source match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: lease
    description: 'Required if the blob has an active lease. Value can be a BlobLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.blob.aio.BlobLeaseClient>
    - <xref:str>
  - name: if_sequence_number_lte
    description: 'If the blob''s sequence number is less than or equal to

      the specified value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_lt
    description: 'If the blob''s sequence number is less than the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_sequence_number_eq
    description: 'If the blob''s sequence number is equal to the specified

      value, the request proceeds; otherwise it fails.'
    types:
    - <xref:int>
  - name: if_modified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only

      if the resource has been modified since the specified time.'
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A DateTime value. Azure expects the date value passed in to be UTC.

      If timezone is included, any non-UTC datetimes will be converted to UTC.

      If a date is passed in without timezone info, it is assumed to be UTC.

      Specify this header to perform the operation only if

      the resource has not been modified since the specified date/time.'
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'The destination ETag value, or the wildcard character (*). Used
      to check if the resource has changed,

      and act according to the condition specified by the *match_condition* parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The destination match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: if_tags_match_condition
    description: 'Specify a SQL where clause on blob tags to operate only on blob
      with a matching value.

      eg. `"\"tagname\"=''my tag''"`


      New in version 12.4.0.'
    types:
    - <xref:str>
  - name: cpk
    description: 'Encrypts the data on the service-side with the given key.

      Use of customer-provided keys must be done over HTTPS.

      As the encryption key itself is provided in the request,

      a secure connection must be established to transfer the key.'
    types:
    - <xref:azure.storage.blob.CustomerProvidedEncryptionKey>
  - name: encryption_scope
    description: 'A predefined encryption scope used to encrypt the data on the service.
      An encryption

      scope can be created using the Management API and referenced here by name. If
      a default

      encryption scope has been defined at the container, this value will override
      it if the

      container-level scope is configured to allow overrides. Otherwise an error will
      be raised.


      New in version 12.2.0.'
    types:
    - <xref:str>
  - name: timeout
    description: 'Sets the server-side timeout for the operation in seconds. For more
      details see

      [https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations](https://learn.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations).

      This value is not tracked or validated on the client. To configure client-side
      network timesouts

      see [here](https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/storage/azure-storage-blob#other-client--per-operation-configuration).'
    types:
    - <xref:int>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
