### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.check_name_availability
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.create
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.delete
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.export_data
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.force_reboot
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.get
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.import_data
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.list
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.list_by_resource_group
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.list_keys
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.list_upgrade_notifications
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.regenerate_key
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.update
  - azure.mgmt.redis.operations.redis_operations.RedisOperations.models
  class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: RedisOperations
  summary: RedisOperations operations.
  syntax:
    content: RedisOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client Api Version. Constant value: "2018-03-01".'
      id: api_version
  type: class
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: check_name_availability(name, type, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: check_name_availability
  summary: Checks that the redis cache name is valid and is not already in use.
  syntax:
    content: check_name_availability(name, type, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Resource name.
      id: name
      isRequired: true
      type:
      - str
    - description: 'Resource type. The only legal value of this property for

        checking redis cache name availability is ''Microsoft.Cache/redis''.'
      id: type
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.check_name_availability
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.create
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: create(resource_group_name, name, parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: create
  summary: 'Create or replace (overwrite/recreate, with potential downtime) an

    existing Redis cache.'
  syntax:
    content: create(resource_group_name, name, parameters, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Create Redis operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.redis.models.RedisCreateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns RedisResource or

        ClientRawResponse<RedisResource> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.redis.models.RedisResource]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.redis.models.RedisResource]]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.create
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.delete
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: delete(resource_group_name, name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  namewithoutparameters: delete
  summary: Deletes a Redis cache.
  syntax:
    content: delete(resource_group_name, name, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.delete
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.export_data
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: export_data(resource_group_name, name, parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: export_data
  summary: Export data from the redis cache to blobs in a container.
  syntax:
    content: export_data(resource_group_name, name, parameters, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: Parameters for Redis export operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.redis.models.ExportRDBParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.export_data
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.force_reboot
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: force_reboot(resource_group_name, name, reboot_type, shard_id=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: force_reboot
  summary: 'Reboot specified Redis node(s). This operation requires write

    permission to the cache resource. There can be potential data loss.'
  syntax:
    content: force_reboot(resource_group_name, name, reboot_type, shard_id=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: 'Which Redis node(s) to reboot. Depending on this

        value data loss is possible. Possible values include: ''PrimaryNode'',

        ''SecondaryNode'', ''AllNodes'''
      id: reboot_type
      isRequired: true
      type:
      - str
      - azure.mgmt.redis.models.RebootType
    - defaultValue: None
      description: 'If clustering is enabled, the ID of the shard to be

        rebooted.'
      id: shard_id
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RedisForceRebootResponse or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.RedisForceRebootResponse
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.force_reboot
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.get
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: get(resource_group_name, name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Gets a Redis cache (resource description).
  syntax:
    content: get(resource_group_name, name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RedisResource or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.RedisResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.get
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.import_data
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: import_data(resource_group_name, name, files, format=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: import_data
  summary: Import data into Redis cache.
  syntax:
    content: import_data(resource_group_name, name, files, format=None, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: files to import.
      id: files
      isRequired: true
      type:
      - list[str]
    - defaultValue: None
      description: File format.
      id: format
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.import_data
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: list(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: Gets all Redis caches in the specified subscription.
  syntax:
    content: list(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of RedisResource
      type:
      - azure.mgmt.redis.models.RedisResourcePaged[azure.mgmt.redis.models.RedisResource]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: list_by_resource_group
  summary: Lists all Redis caches in a resource group.
  syntax:
    content: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of RedisResource
      type:
      - azure.mgmt.redis.models.RedisResourcePaged[azure.mgmt.redis.models.RedisResource]
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_by_resource_group
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_keys
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: list_keys(resource_group_name, name, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_keys
  summary: 'Retrieve a Redis cache''s access keys. This operation requires write

    permission to the cache resource.'
  syntax:
    content: list_keys(resource_group_name, name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RedisAccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.RedisAccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_keys
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_upgrade_notifications
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: list_upgrade_notifications(resource_group_name, name, history, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_upgrade_notifications
  summary: Gets any upgrade notifications for a Redis cache.
  syntax:
    content: list_upgrade_notifications(resource_group_name, name, history, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: 'how many minutes in past to look for upgrade

        notifications'
      id: history
      isRequired: true
      type:
      - float
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NotificationListResponse or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.NotificationListResponse
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_upgrade_notifications
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.regenerate_key
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: regenerate_key(resource_group_name, name, key_type, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: regenerate_key
  summary: 'Regenerate Redis cache''s access keys. This operation requires write

    permission to the cache resource.'
  syntax:
    content: regenerate_key(resource_group_name, name, key_type, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: 'The Redis access key to regenerate. Possible values

        include: ''Primary'', ''Secondary'''
      id: key_type
      isRequired: true
      type:
      - str
      - azure.mgmt.redis.models.RedisKeyType
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RedisAccessKeys or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.RedisAccessKeys
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.regenerate_key
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.update
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: update(resource_group_name, name, parameters, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: update
  summary: Update an existing Redis cache.
  syntax:
    content: update(resource_group_name, name, parameters, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Redis cache.
      id: name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Update Redis operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.redis.models.RedisUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RedisResource or ClientRawResponse if raw=true
      type:
      - azure.mgmt.redis.models.RedisResource
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.update
- class: azure.mgmt.redis.operations.redis_operations.RedisOperations
  fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.models
  langs:
  - python
  module: azure.mgmt.redis.operations.redis_operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.redis.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\redis\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.models
references:
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.check_name_availability
  isExternal: false
  name: check_name_availability(name, type, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.check_name_availability
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.create
  isExternal: false
  name: create(resource_group_name, name, parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.create
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.delete
  isExternal: false
  name: delete(resource_group_name, name, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.delete
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.export_data
  isExternal: false
  name: export_data(resource_group_name, name, parameters, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.export_data
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.force_reboot
  isExternal: false
  name: force_reboot(resource_group_name, name, reboot_type, shard_id=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.force_reboot
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.get
  isExternal: false
  name: get(resource_group_name, name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.get
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.import_data
  isExternal: false
  name: import_data(resource_group_name, name, files, format=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.import_data
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list
  isExternal: false
  name: list(custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_by_resource_group
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_keys
  isExternal: false
  name: list_keys(resource_group_name, name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_keys
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_upgrade_notifications
  isExternal: false
  name: list_upgrade_notifications(resource_group_name, name, history, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.list_upgrade_notifications
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.regenerate_key
  isExternal: false
  name: regenerate_key(resource_group_name, name, key_type, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.regenerate_key
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.update
  isExternal: false
  name: update(resource_group_name, name, parameters, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.update
- fullName: azure.mgmt.redis.operations.redis_operations.RedisOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.redis.operations.redis_operations.RedisOperations
  uid: azure.mgmt.redis.operations.redis_operations.RedisOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.redis.models.RedisResource]
  name: AzureOperationPoller[RedisResource]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.redis.models.RedisResource
    name: RedisResource
    uid: azure.mgmt.redis.models.RedisResource
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.redis.models.RedisResource]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.redis.models.RedisResource]]
  name: AzureOperationPoller[ClientRawResponse[RedisResource]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.redis.models.RedisResource
    name: RedisResource
    uid: azure.mgmt.redis.models.RedisResource
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.redis.models.RedisResource]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: azure.mgmt.redis.models.RedisResourcePaged[azure.mgmt.redis.models.RedisResource]
  name: RedisResourcePaged[RedisResource]
  spec.python:
  - fullName: azure.mgmt.redis.models.RedisResourcePaged
    name: RedisResourcePaged
    uid: azure.mgmt.redis.models.RedisResourcePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.redis.models.RedisResource
    name: RedisResource
    uid: azure.mgmt.redis.models.RedisResource
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.redis.models.RedisResourcePaged[azure.mgmt.redis.models.RedisResource]
