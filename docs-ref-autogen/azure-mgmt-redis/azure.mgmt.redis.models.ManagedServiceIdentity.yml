### YamlMime:PythonClass
uid: azure.mgmt.redis.models.ManagedServiceIdentity
name: ManagedServiceIdentity
fullName: azure.mgmt.redis.models.ManagedServiceIdentity
module: azure.mgmt.redis.models
inheritances:
- msrest.serialization.Model
summary: 'Managed service identity (system assigned and/or user assigned identities).


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ManagedServiceIdentity(*, type: Union[str, azure.mgmt.redis.models._redis_management_client_enums.ManagedServiceIdentityType],
    user_assigned_identities: Optional[Dict[str, azure.mgmt.redis.models._models_py3.UserAssignedIdentity]]
    = None, **kwargs)'
variables:
- description: 'The service principal ID of the system assigned identity. This property

    will only be provided for a system assigned identity.'
  name: principal_id
  types:
  - <xref:str>
- description: 'The tenant ID of the system assigned identity. This property will
    only be

    provided for a system assigned identity.'
  name: tenant_id
  types:
  - <xref:str>
- description: 'Required. Type of managed service identity (where both SystemAssigned
    and

    UserAssigned types are allowed). Possible values include: "None", "SystemAssigned",

    "UserAssigned", "SystemAssigned, UserAssigned".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.mgmt.redis.models.ManagedServiceIdentityType>
- description: 'The set of user assigned identities associated with the

    resource. The userAssignedIdentities dictionary keys will be ARM resource ids
    in the form:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.

    The dictionary values can be empty objects ({}) in requests.'
  name: user_assigned_identities
  types:
  - <xref:dict>[<xref:str>, <xref:azure.mgmt.redis.models.UserAssignedIdentity>]
