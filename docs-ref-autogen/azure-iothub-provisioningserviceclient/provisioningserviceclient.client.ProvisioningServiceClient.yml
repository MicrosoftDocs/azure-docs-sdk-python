### YamlMime:PythonClass
uid: provisioningserviceclient.client.ProvisioningServiceClient
name: ProvisioningServiceClient
fullName: provisioningserviceclient.client.ProvisioningServiceClient
module: provisioningserviceclient.client
inheritances:
- builtins.object
summary: API for connecting to, and conducting operations on a Device Provisioning
  Service
constructor:
  syntax: ProvisioningServiceClient(host_name, shared_access_key_name, shared_access_key)
  parameters:
  - name: host_name
    description: The host name of the Device Provisioning Service
    isRequired: true
    types:
    - <xref:str>
  - name: shared_access_key_name
    description: 'The shared access key name of the

      Device Provisioning Service'
    isRequired: true
    types:
    - <xref:str>
  - name: shared_access_key
    description: The shared access key of the Device Provisioning Service
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: provisioningserviceclient.client.ProvisioningServiceClient.create_enrollment_group_query
  name: create_enrollment_group_query
  summary: 'Create a Query object to access results of a Provisioning Service query

    for Enrollment Groups'
  signature: create_enrollment_group_query(query_spec, page_size=None)
  parameters:
  - name: query_spec
    description: The specification for the query
    isRequired: true
    types:
    - <xref:provisioningserviceclient.QuerySpecification>
  - name: page_size
    description: The max results per page (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: Query object that can iterate over results of the query
    types:
    - <xref:provisioningserviceclient.Query>
- uid: provisioningserviceclient.client.ProvisioningServiceClient.create_from_connection_string
  name: create_from_connection_string
  summary: Create a Provisioning Service Client from a connection string
  signature: create_from_connection_string(connection_string)
  parameters:
  - name: connection_string
    description: The connection string for the Device Provisioning Service
    isRequired: true
    types:
    - <xref:str>
  - name: connection_string
    isRequired: true
  return:
    description: A new instance of <xref:provisioningserviceclient.ProvisioningServiceClient>
    types:
    - <xref:provisioningserviceclient.ProvisioningServiceClient>
  exceptions:
  - type: ValueError if connection string is invalid
- uid: provisioningserviceclient.client.ProvisioningServiceClient.create_individual_enrollment_query
  name: create_individual_enrollment_query
  summary: 'Create a Query object to access results of a Provisioning Service query

    for Individual Enrollments'
  signature: create_individual_enrollment_query(query_spec, page_size=None)
  parameters:
  - name: query_spec
    description: The specification for the query
    isRequired: true
    types:
    - <xref:provisioningserviceclient.QuerySpecification>
  - name: page_size
    description: The max results per page (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: Query object that can iterate over results of the query
    types:
    - <xref:provisioningserviceclient.Query>
- uid: provisioningserviceclient.client.ProvisioningServiceClient.create_or_update
  name: create_or_update
  summary: Create or update an object on the Provisioning Service
  signature: create_or_update(provisioning_model)
  parameters:
  - name: provisioning_model
    description: The model of the object to be created/updated
    isRequired: true
    types:
    - <xref:provisioningserviceclient.models.IndividualEnrollment>
    - <xref:provisioningserviceclient.models.EnrollmentGroup>
  return:
    description: The model of the created/updated object as stored on the Provisiong
      Service
    types:
    - <xref:provisioningserviceclient.models.IndividualEnrollment>
    - <xref:provisioningserviceclient.models.EnrollmentGroup>
  exceptions:
  - type: 'TypeError if invalid provisioning model type or provisioningserviceclient.ProvisioningServiceError
      if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.create_registration_state_query
  name: create_registration_state_query
  summary: 'Create a Query object to access results of a Provisioning Service query

    for Device Registration States'
  signature: create_registration_state_query(reg_id, page_size=None)
  parameters:
  - name: query_spec
    description: The specification for the query
    isRequired: true
    types:
    - <xref:provisioningserviceclient.QuerySpecification>
  - name: page_size
    description: The max results per page (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: Query object that can iterate over results of the query
    types:
    - <xref:provisioningserviceclient.Query>
- uid: provisioningserviceclient.client.ProvisioningServiceClient.delete
  name: delete
  summary: Delete an object on the Provisioning Service
  signature: delete(provisioning_model)
  parameters:
  - name: provisioning_model
    description: The model of the object to be deleted
    isRequired: true
    types:
    - <xref:provisioningserviceclient.models.IndividualEnrollment>
    - <xref:provisioningserviceclient.models.EnrollmentGroup>
    - <xref:provisioningserviceclient.models.DeviceRegistrationState>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.delete_enrollment_group_by_param
  name: delete_enrollment_group_by_param
  summary: Delete an Enrollment Group on the Provisioning Service
  signature: delete_enrollment_group_by_param(group_id, etag=None)
  parameters:
  - name: group_id
    description: The registration id of the Individual Enrollment to be deleted
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag of the Individual Enrollment to be deleted (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.delete_individual_enrollment_by_param
  name: delete_individual_enrollment_by_param
  summary: Delete an Individual Enrollment on the Provisioning Service
  signature: delete_individual_enrollment_by_param(registration_id, etag=None)
  parameters:
  - name: registration_id
    description: The registration id of the Individual Enrollment to be deleted
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag of the Individual Enrollment to be deleted (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.delete_registration_state_by_param
  name: delete_registration_state_by_param
  summary: Delete a Device Registration State on the Provisioning Service
  signature: delete_registration_state_by_param(registration_id, etag=None)
  parameters:
  - name: registration_id
    description: 'The registration id of the Device Registration State to be

      deleted'
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag of the Device Registration State to be deleted (optional)
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.get_enrollment_group
  name: get_enrollment_group
  summary: Retrieve an Enrollment Group from the Provisioning Service
  signature: get_enrollment_group(group_id)
  parameters:
  - name: group_id
    description: The group id of the target Enrollment Group
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'Enrollment Group from the Provisioning Service corresponding to
      the given

      group id'
    types:
    - <xref:provisioningserviceclient.models.EnrollmentGroup>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.get_enrollment_group_attestation_mechanism
  name: get_enrollment_group_attestation_mechanism
  summary: Retrieve an Enrollment Group's Attestation Mechanism from the Provisioning
    Service
  signature: get_enrollment_group_attestation_mechanism(enrollment_group_id)
  parameters:
  - name: enrollment_group_id
    description: The group id of the target Individual Enrollment
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'The Attestation Mechanism of the Enrollment Group from the Provisioning
      Service

      corresponding to the given group id'
    types:
    - "<xref:class:\n   *AttestationMechanism<provisioningserviceclient.models.AttestationMechanism*>"
  exceptions:
  - type: 'provisioningserviceclient.ProvisioningServiceError if an error occurs on
      the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.get_individual_enrollment
  name: get_individual_enrollment
  summary: Retrieve an Individual Enrollment from the Provisioning Service
  signature: get_individual_enrollment(registration_id)
  parameters:
  - name: registration_id
    description: The registration id of the target Individual Enrollment
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'Individual Enrollment from the Provisioning Service corresponding
      to the given

      registration id'
    types:
    - <xref:provisioningserviceclient.models.IndividualEnrollment>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.get_individual_enrollment_attestation_mechanism
  name: get_individual_enrollment_attestation_mechanism
  summary: Retrieve an Individual Enrollment's Attestation Mechanism from the Provisioning
    Service
  signature: get_individual_enrollment_attestation_mechanism(registration_id)
  parameters:
  - name: registration_id
    description: The registration id of the target Individual Enrollment
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'The Attestation Mechanism of the Individual Enrollment from the
      Provisioning Service

      corresponding to the given registration id'
    types:
    - "<xref:class:\n   *AttestationMechanism<provisioningserviceclient.models.AttestationMechanism*>"
  exceptions:
  - type: 'provisioningserviceclient.ProvisioningServiceError if an error occurs on
      the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.get_registration_state
  name: get_registration_state
  summary: Retrieve a Device Registration State from the Provisioning Service
  signature: get_registration_state(registration_id)
  parameters:
  - name: registration_id
    description: The registration id of the target Device Registration State
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'The Device Registration State from the Provisioning Service corresponding
      to the

      given registration id'
    types:
    - <xref:provisioningserviceclient.models.DeviceRegistrationState>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.run_bulk_operation
  name: run_bulk_operation
  summary: Run a Bulk Enrollment Operation on the Provisioning Service
  signature: run_bulk_operation(bulk_op)
  parameters:
  - name: bulk_op
    description: Details of the operations to be run
    isRequired: true
    types:
    - '<xref:provisioningserviceclient.client.BulkEnrollmentOperation>

      <provisioningserviceclient.BulkEnrollmentOperation>`'
  return:
    description: 'Bulk Enrollment Operation Result describing results of the

      Bulk Enrollment Operation'
    types:
    - <xref:provisioningserviceclient.BulkEnrollmentOperationResult>
  exceptions:
  - type: ':class:ProvisioningServiceError

      <provisioningserviceclient.ProvisioningServiceError` if an error occurs on the

      Provisioning Service'
attributes:
- uid: provisioningserviceclient.client.ProvisioningServiceClient.authorization_header
  name: authorization_header
  signature: authorization_header = 'Authorization'
- uid: provisioningserviceclient.client.ProvisioningServiceClient.err_msg
  name: err_msg
  signature: err_msg = 'Service Error {} - {}'
