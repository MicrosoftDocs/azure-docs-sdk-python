### YamlMime:UniversalReference
api_name: []
items:
- children:
  - provisioningserviceclient.utils.sastoken.SasToken.refresh
  class: provisioningserviceclient.utils.sastoken.SasToken
  fullName: provisioningserviceclient.utils.sastoken.SasToken
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: provisioningserviceclient.utils.sastoken
  name: SasToken
  summary: 'Shared Access Signature Token used to authenticate a request


    Parameters:

    uri (str): URI of the resouce to be accessed

    key_name (str): Shared Access Key Name

    key (str): Shared Access Key (base64 encoded)

    ttl (int)[default 3600]: Time to live for the token, in seconds


    Data Attributes:

    expiry_time (int): Time that token will expire (in UTC, since epoch)

    ttl (int): Time to live for the token, in seconds


    Raises:

    SasTokenError if trying to build a SasToken from invalid values'
  syntax:
    content: SasToken(uri, key, key_name=None, ttl=3600)
  type: class
  uid: provisioningserviceclient.utils.sastoken.SasToken
- class: provisioningserviceclient.utils.sastoken.SasToken
  fullName: provisioningserviceclient.utils.sastoken.SasToken.refresh
  langs:
  - python
  module: provisioningserviceclient.utils.sastoken
  name: refresh()
  namewithoutparameters: refresh
  summary: Refresh the SasToken lifespan, giving it a new expiry time
  syntax:
    content: refresh()
    parameters: []
  type: method
  uid: provisioningserviceclient.utils.sastoken.SasToken.refresh
references:
- fullName: provisioningserviceclient.utils.sastoken.SasToken.refresh
  isExternal: false
  name: refresh()
  parent: provisioningserviceclient.utils.sastoken.SasToken
  uid: provisioningserviceclient.utils.sastoken.SasToken.refresh
