### YamlMime:PythonClass
uid: azure.cosmos.ConnectionRetryPolicy
name: ConnectionRetryPolicy
fullName: azure.cosmos.ConnectionRetryPolicy
module: azure.cosmos
inheritances:
- azure.core.pipeline.policies._retry.RetryPolicy
constructor:
  syntax: ConnectionRetryPolicy(**kwargs)
methods:
- uid: azure.cosmos.ConnectionRetryPolicy.configure_retries
  name: configure_retries
  summary: Configures the retry settings.
  signature: 'configure_retries(options: Dict[str, Any]) -> Dict[str, Any]'
  parameters:
  - name: options
    description: keyword arguments from context.
    isRequired: true
    types:
    - <xref:dict>
  return:
    description: A dict containing settings and history for retries.
    types:
    - <xref:dict>
- uid: azure.cosmos.ConnectionRetryPolicy.get_backoff_time
  name: get_backoff_time
  summary: Returns the current backoff time.
  signature: 'get_backoff_time(settings: Dict[str, Any]) -> float'
  parameters:
  - name: settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
  return:
    description: The current backoff value.
    types:
    - <xref:float>
- uid: azure.cosmos.ConnectionRetryPolicy.get_retry_after
  name: get_retry_after
  summary: Get the value of Retry-After in seconds.
  signature: 'get_retry_after(response: PipelineResponse[Any, AllHttpResponseType])
    -> float | None'
  parameters:
  - name: response
    description: The PipelineResponse object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  return:
    description: Value of Retry-After in seconds.
    types:
    - <xref:float>
    - <xref:None>
- uid: azure.cosmos.ConnectionRetryPolicy.increment
  name: increment
  summary: Increment the retry counters.
  signature: 'increment(settings: Dict[str, Any], response: PipelineRequest[HTTPRequestType]
    | PipelineResponse[HTTPRequestType, AllHttpResponseType] | None = None, error:
    Exception | None = None) -> bool'
  parameters:
  - name: settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
  - name: response
    description: A pipeline response object.
    defaultValue: None
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  - name: error
    description: 'An error encountered during the request, or

      None if the response was received successfully.'
    defaultValue: None
    types:
    - <xref:azure.core.exceptions.AzureError>
  return:
    description: 'Whether any retry attempt is available

      True if more retry attempts available, False otherwise'
    types:
    - <xref:bool>
- uid: azure.cosmos.ConnectionRetryPolicy.is_exhausted
  name: is_exhausted
  summary: Checks if any retries left.
  signature: 'is_exhausted(settings: Dict[str, Any]) -> bool'
  parameters:
  - name: settings
    description: the retry settings
    isRequired: true
    types:
    - <xref:dict>
  return:
    description: False if have more retries. True if retries exhausted.
    types:
    - <xref:bool>
- uid: azure.cosmos.ConnectionRetryPolicy.is_retry
  name: is_retry
  summary: 'Checks if method/status code is retryable.


    Based on allowlists and control variables such as the number of

    total retries to allow, whether to respect the Retry-After header,

    whether this header is present, and whether the returned status

    code is on the list of status codes to be retried upon on the

    presence of the aforementioned header.


    The behavior is:

    -       If status_code < 400: don''t retry

    -       Else if Retry-After present: retry

    -       Else: retry based on the safe status code list ([408, 429, 500, 502, 503,
    504])'
  signature: 'is_retry(settings: Dict[str, Any], response: PipelineResponse[HTTPRequestType,
    AllHttpResponseType]) -> bool'
  parameters:
  - name: settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
  - name: response
    description: The PipelineResponse object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  return:
    description: True if method/status code is retryable. False if not retryable.
    types:
    - <xref:bool>
- uid: azure.cosmos.ConnectionRetryPolicy.no_retries
  name: no_retries
  summary: Disable retries.
  signature: no_retries() -> ClsRetryPolicy
  return:
    description: A retry policy with retries disabled.
    types:
    - <xref:azure.core.pipeline.policies.RetryPolicy>
    - <xref:azure.core.pipeline.policies.AsyncRetryPolicy>
- uid: azure.cosmos.ConnectionRetryPolicy.parse_retry_after
  name: parse_retry_after
  summary: Helper to parse Retry-After and get value in seconds.
  signature: 'parse_retry_after(retry_after: str) -> float'
  parameters:
  - name: retry_after
    description: Retry-After header
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Value of Retry-After in seconds.
    types:
    - <xref:float>
- uid: azure.cosmos.ConnectionRetryPolicy.send
  name: send
  summary: 'Sends the PipelineRequest object to the next policy. Uses retry settings
    if necessary.

    Also enforces an absolute client-side timeout that spans multiple retry attempts.'
  signature: send(request)
  parameters:
  - name: request
    description: The PipelineRequest object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineRequest>
  return:
    description: Returns the PipelineResponse or raises error if maximum retries exceeded.
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  exceptions:
  - type: azure.core.exceptions.AzureError
    description: Maximum retries exceeded.
  - type: azure.cosmos.exceptions.CosmosClientTimeoutError
    description: Specified timeout exceeded.
  - type: azure.core.exceptions.ClientAuthenticationError
    description: Authentication failed.
- uid: azure.cosmos.ConnectionRetryPolicy.sleep
  name: sleep
  summary: 'Sleep between retry attempts.


    This method will respect a server''s `Retry-After` response header

    and sleep the duration of the time requested. If that is not present, it

    will use an exponential backoff. By default, the backoff factor is 0 and

    this method will return immediately.'
  signature: 'sleep(settings: Dict[str, Any], transport: HttpTransport[HTTPRequestType,
    HTTPResponseType], response: PipelineResponse[HTTPRequestType, HTTPResponseType]
    | None = None) -> None'
  parameters:
  - name: settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
  - name: transport
    description: The HTTP transport type.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.transport.HttpTransport>
  - name: response
    description: The PipelineResponse object.
    defaultValue: None
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
- uid: azure.cosmos.ConnectionRetryPolicy.update_context
  name: update_context
  summary: Updates retry history in pipeline context.
  signature: 'update_context(context: PipelineContext, retry_settings: Dict[str, Any])
    -> None'
  parameters:
  - name: context
    description: The pipeline context.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineContext>
  - name: retry_settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
attributes:
- uid: azure.cosmos.ConnectionRetryPolicy.BACKOFF_MAX
  name: BACKOFF_MAX
  summary: Maximum backoff time.
  signature: BACKOFF_MAX = 120
- uid: azure.cosmos.ConnectionRetryPolicy.next
  name: next
  summary: Pointer to the next policy or a transport (wrapped as a policy). Will be
    set at pipeline creation.
  signature: 'next: HTTPPolicy[HTTPRequestType, HTTPResponseType]'
