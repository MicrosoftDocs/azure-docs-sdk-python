### YamlMime:PythonClass
uid: azure.cosmos.container.ContainerProxy
name: ContainerProxy
fullName: azure.cosmos.container.ContainerProxy
module: azure.cosmos.container
inheritances:
- builtins.object
summary: 'An interface to interact with a specific DB Container.


  This class should not be instantiated directly. Instead, use the

  <xref:azure.cosmos.database.DatabaseProxy.get_container_client> method to get an
  existing

  container, or the <xref:azure.cosmos.database.DatabaseProxy.create_container> method
  to create a

  new container.


  A container in an Azure Cosmos DB SQL API database is a collection of

  documents, each of which is represented as an Item.'
constructor:
  syntax: 'ContainerProxy(client_connection: CosmosClientConnection, database_link:
    str, id: str, properties: Dict[str, Any] | None = None)'
  parameters:
  - name: client_connection
    isRequired: true
  - name: database_link
    isRequired: true
  - name: id
    isRequired: true
  - name: properties
    defaultValue: None
variables:
- description: ID (name) of the container.
  name: id
  types:
  - <xref:str>
- description: The URL path of the container.
  name: container_link
  types:
  - <xref:str>
methods:
- uid: azure.cosmos.container.ContainerProxy.create_item
  name: create_item
  summary: 'Create an item in the container.


    To update or replace an existing item, use the

    <xref:azure.cosmos.container.ContainerProxy.upsert_item> method.'
  signature: 'create_item(body: Dict[str, Any], populate_query_metrics: bool | None
    = None, pre_trigger_include: str | None = None, post_trigger_include: str | None
    = None, indexing_directive: int | None = None, *, enable_automatic_id_generation:
    bool = False, session_token: str | None = None, initial_headers: Dict[str, str]
    | None = None, etag: str | None = None, match_condition: MatchConditions | None
    = None, priority: Literal[''High'', ''Low''] | None = None, **kwargs: Any) ->
    Dict[str, Any]'
  parameters:
  - name: body
    description: A dict-like object representing the item to create.
    isRequired: true
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    isRequired: true
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    isRequired: true
    types:
    - <xref:str>
  - name: indexing_directive
    description: 'Enumerates the possible values to indicate whether the document
      should

      be omitted from indexing. Possible values include: 0 for Default, 1 for Exclude,
      or 2 for Include.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:int>, <xref:azure.cosmos.documents.IndexingDirective>]
  keywordOnlyParameters:
  - name: enable_automatic_id_generation
    description: Enable automatic id generation if no id present.
    types:
    - <xref:bool>
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: A dict representing the new item.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: Item with the given ID already exists.
- uid: azure.cosmos.container.ContainerProxy.delete_all_items_by_partition_key
  name: delete_all_items_by_partition_key
  summary: 'The delete by partition key feature is an asynchronous, background operation
    that allows you to delete all

    documents with the same logical partition key value, using the Cosmos SDK. The
    delete by partition key

    operation is constrained to consume at most 10% of the total

    available RU/s on the container each second. This helps in limiting the resources
    used by

    this background task.'
  signature: 'delete_all_items_by_partition_key(partition_key: str | int | float |
    bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    *, pre_trigger_include: str | None = None, post_trigger_include: str | None =
    None, session_token: str | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: partition_key
    description: Partition key for the items to be deleted.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  keywordOnlyParameters:
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    types:
    - <xref:str>
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    types:
    - <xref:None>
- uid: azure.cosmos.container.ContainerProxy.delete_conflict
  name: delete_conflict
  summary: 'Delete a specified conflict from the container.


    If the conflict does not already exist in the container, an exception is raised.'
  signature: 'delete_conflict(conflict: str | Mapping[str, Any], partition_key: str
    | int | float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    **kwargs: Any) -> None'
  parameters:
  - name: conflict
    description: The ID (name) or dict representing the conflict to be deleted.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: partition_key
    description: Partition key for the conflict to delete.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    types:
    - <xref:None>
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The conflict wasn't deleted successfully.
  - type: azure.cosmos.exceptions.CosmosResourceNotFoundError
    description: The conflict does not exist in the container.
- uid: azure.cosmos.container.ContainerProxy.delete_item
  name: delete_item
  summary: 'Delete the specified item from the container.


    If the item does not already exist in the container, an exception is raised.'
  signature: 'delete_item(item: Mapping[str, Any] | str, partition_key: str | int
    | float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    populate_query_metrics: bool | None = None, pre_trigger_include: str | None =
    None, post_trigger_include: str | None = None, *, session_token: str | None =
    None, initial_headers: Dict[str, str] | None = None, etag: str | None = None,
    match_condition: MatchConditions | None = None, priority: Literal[''High'', ''Low'']
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: item
    description: The ID (name) or dict representing item to be deleted.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: partition_key
    description: Specifies the partition key value for the item.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    isRequired: true
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    types:
    - <xref:None>
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The item wasn't deleted successfully.
  - type: azure.cosmos.exceptions.CosmosResourceNotFoundError
    description: The item does not exist in the container.
- uid: azure.cosmos.container.ContainerProxy.execute_item_batch
  name: execute_item_batch
  summary: Executes the transactional batch for the specified partition key.
  signature: 'execute_item_batch(batch_operations: Sequence[Tuple[str, Tuple[Any,
    ...]] | Tuple[str, Tuple[Any, ...], Dict[str, Any]]], partition_key: str | int
    | float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    *, pre_trigger_include: str | None = None, post_trigger_include: str | None =
    None, session_token: str | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, priority: Literal[''High'', ''Low''] | None = None,
    **kwargs: Any) -> List[Dict[str, Any]]'
  parameters:
  - name: batch_operations
    description: The batch of operations to be executed.
    isRequired: true
    types:
    - <xref:typing.List>[<xref:typing.Tuple>[<xref:typing.Any>]]
  - name: partition_key
    description: The partition key value of the batch operations.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  keywordOnlyParameters:
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    types:
    - <xref:str>
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: A list representing the item after the batch operations went through.
    types:
    - <xref:typing.List>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The batch failed to execute.
  - type: azure.cosmos.exceptions.CosmosBatchOperationError
    description: A transactional batch operation failed in the batch.
- uid: azure.cosmos.container.ContainerProxy.get_conflict
  name: get_conflict
  summary: Get the conflict identified by *conflict*.
  signature: 'get_conflict(conflict: str | Mapping[str, Any], partition_key: str |
    int | float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: conflict
    description: The ID (name) or dict representing the conflict to retrieve.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: partition_key
    description: Partition key for the conflict to retrieve.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: A dict representing the retrieved conflict.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The given conflict couldn't be retrieved.
- uid: azure.cosmos.container.ContainerProxy.get_throughput
  name: get_throughput
  summary: 'Get the ThroughputProperties object for this container.


    If no ThroughputProperties already exist for the container, an exception is raised.'
  signature: 'get_throughput(**kwargs: Any) -> ThroughputProperties'
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: Throughput for the container.
    types:
    - <xref:azure.cosmos.ThroughputProperties>
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'No throughput properties exists for the container or

      the throughput properties could not be retrieved.'
- uid: azure.cosmos.container.ContainerProxy.list_conflicts
  name: list_conflicts
  summary: List all the conflicts in the container.
  signature: 'list_conflicts(max_item_count: int | None = None, **kwargs: Any) ->
    ItemPaged[Dict[str, Any]]'
  parameters:
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: An Iterable of conflicts (dicts).
    types:
    - <xref:typing.Iterable>[<xref:dict>[<xref:str>, <xref:typing.Any>]]
- uid: azure.cosmos.container.ContainerProxy.patch_item
  name: patch_item
  summary: "Patches the specified item with the provided operations if it\n   exists\
    \ in the container.\n\nIf the item does not already exist in the container, an\
    \ exception is raised."
  signature: 'patch_item(item: str | Dict[str, Any], partition_key: str | int | float
    | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    patch_operations: List[Dict[str, Any]], *, filter_predicate: str | None = None,
    pre_trigger_include: str | None = None, post_trigger_include: str | None = None,
    session_token: str | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, priority: Literal[''High'', ''Low''] | None = None, **kwargs: Any)
    -> Dict[str, Any]'
  parameters:
  - name: item
    description: The ID (name) or dict representing item to be patched.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: partition_key
    description: The partition key of the object to patch.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: patch_operations
    description: The list of patch operations to apply to the item.
    isRequired: true
    types:
    - <xref:typing.List>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  keywordOnlyParameters:
  - name: filter_predicate
    description: conditional filter to apply to Patch operations.
    types:
    - <xref:str>
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    types:
    - <xref:str>
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: A dict representing the item after the patch operations went through.
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'The patch operations failed or the item with

      given id does not exist.'
- uid: azure.cosmos.container.ContainerProxy.query_conflicts
  name: query_conflicts
  summary: Return all conflicts matching a given *query*.
  signature: 'query_conflicts(query: str, parameters: List[Dict[str, object]] | None
    = None, enable_cross_partition_query: bool | None = None, partition_key: str |
    int | float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue]
    | None = None, max_item_count: int | None = None, **kwargs: Any) -> ItemPaged[Dict[str,
    Any]]'
  parameters:
  - name: query
    description: The Azure Cosmos DB SQL query to execute.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Optional array of parameters to the query. Ignored if no query is
      provided.
    isRequired: true
    types:
    - <xref:typing.List>[<xref:typing.Dict>[<xref:str>, <xref:object>]]
  - name: enable_cross_partition_query
    description: 'Allows sending of more than one request to execute

      the query in the Azure Cosmos DB service.

      More than one request is necessary if the query is not scoped to single partition
      key value.'
    isRequired: true
    types:
    - <xref:bool>
  - name: partition_key
    description: Specifies the partition key value for the item.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: An Iterable of conflicts (dicts).
    types:
    - <xref:typing.Iterable>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
- uid: azure.cosmos.container.ContainerProxy.query_items
  name: query_items
  summary: 'Return all results matching the given *query*.


    You can use any value for the container name in the FROM clause, but

    often the container name is used. In the examples below, the container

    name is "products," and is aliased as "p" for easier referencing in

    the WHERE clause.'
  signature: 'query_items(query: str, parameters: List[Dict[str, object]] | None =
    None, partition_key: str | int | float | bool | Sequence[str | int | float | bool
    | None] | Type[NonePartitionKeyValue] | None = None, enable_cross_partition_query:
    bool | None = None, max_item_count: int | None = None, enable_scan_in_query: bool
    | None = None, populate_query_metrics: bool | None = None, *, populate_index_metrics:
    bool | None = None, session_token: str | None = None, initial_headers: Dict[str,
    str] | None = None, max_integrated_cache_staleness_in_ms: int | None = None, priority:
    Literal[''High'', ''Low''] | None = None, continuation_token_limit: int | None
    = None, **kwargs: Any) -> ItemPaged[Dict[str, Any]]'
  parameters:
  - name: query
    description: The Azure Cosmos DB SQL query to execute.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Optional array of parameters to the query.

      Each parameter is a dict() with ''name'' and ''value'' keys.

      Ignored if no query is provided.'
    isRequired: true
    types:
    - '[<xref:typing.List>[<xref:typing.Dict>[<xref:str>, <xref:object>]]]'
  - name: partition_key
    description: partition key at which the query request is targeted.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: enable_cross_partition_query
    description: 'Allows sending of more than one request to

      execute the query in the Azure Cosmos DB service.

      More than one request is necessary if the query is not scoped to single partition
      key value.'
    isRequired: true
    types:
    - <xref:bool>
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  - name: enable_scan_in_query
    description: 'Allow scan on the queries which couldn''t be served as

      indexing was opted out on the requested paths.'
    isRequired: true
    types:
    - <xref:bool>
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: continuation_token_limit
    description: 'The size limit in kb of the response continuation token in the query

      response. Valid values are positive integers.

      A value of 0 is the same as not passing a value (default no limit).'
    types:
    - <xref:int>
  - name: max_integrated_cache_staleness_in_ms
    description: 'The max cache staleness for the integrated cache in

      milliseconds. For accounts configured to use the integrated cache, using Session
      or Eventual consistency,

      responses are guaranteed to be no staler than this value.'
    types:
    - <xref:int>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  - name: populate_index_metrics
    description: 'Used to obtain the index metrics to understand how the query engine
      used

      existing indexes and how it could use potential new indexes. Please note that
      this options will incur

      overhead, so it should be enabled only when debugging slow queries.'
    types:
    - <xref:bool>
  return:
    description: An Iterable of items (dicts).
    types:
    - <xref:ItemPaged>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  examples:
  - "Get all products that have not been discontinued:<!--[!code-python[Main](les\\\
    examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\"\
    : [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\
    \\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\
    \\37\\\\azure-cosmos-4.6.0\\\\samples\\\\examples.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   import json\n\n   for item in\
    \ container.query_items(\n       query='SELECT * FROM products p WHERE p.productModel\
    \ <> \"DISCONTINUED\"',\n       enable_cross_partition_query=True,\n   ):\n  \
    \     print(json.dumps(item, indent=True))\n\n   ````\n\nParameterized query to\
    \ get all products that have been discontinued:<!--[!code-python[Main](les\\examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    37\\\\azure-cosmos-4.6.0\\\\samples\\\\examples.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   discontinued_items = container.query_items(\n\
    \       query='SELECT * FROM products p WHERE p.productModel = @model AND p.productName=\"\
    Widget\"',\n       parameters=[dict(name=\"@model\", value=\"DISCONTINUED\")],\n\
    \   )\n   for item in discontinued_items:\n       print(json.dumps(item, indent=True))\n\
    \n   ````\n"
- uid: azure.cosmos.container.ContainerProxy.query_items_change_feed
  name: query_items_change_feed
  summary: Get a sorted list of items that were changed, in the order in which they
    were modified.
  signature: 'query_items_change_feed(partition_key_range_id: str | None = None, is_start_from_beginning:
    bool = False, continuation: str | None = None, max_item_count: int | None = None,
    *, partition_key: str | int | float | bool | Sequence[str | int | float | bool
    | None] | Type[NonePartitionKeyValue] | None = None, priority: Literal[''High'',
    ''Low''] | None = None, **kwargs: Any) -> ItemPaged[Dict[str, Any]]'
  parameters:
  - name: partition_key_range_id
    description: 'ChangeFeed requests can be executed against specific partition key
      ranges.

      This is used to process the change feed in parallel across multiple consumers.'
    isRequired: true
    types:
    - <xref:str>
  - name: is_start_from_beginning
    description: 'Get whether change feed should start from

      beginning (true) or from current (false). By default, it''s start from current
      (false).'
    isRequired: true
    types:
    - <xref:bool>
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  - name: continuation
    description: e_tag value to be used as continuation for reading change feed.
    isRequired: true
    types:
    - <xref:str>
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
  keywordOnlyParameters:
  - name: partition_key
    description: partition key at which ChangeFeed requests are targeted.
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: An Iterable of items (dicts).
    types:
    - <xref:typing.Iterable>[<xref:dict>[<xref:str>, <xref:typing.Any>]]
- uid: azure.cosmos.container.ContainerProxy.read
  name: read
  summary: Read the container properties.
  signature: 'read(populate_query_metrics: bool | None = None, populate_partition_key_range_statistics:
    bool | None = None, populate_quota_info: bool | None = None, *, session_token:
    str | None = None, priority: Literal[''High'', ''Low''] | None = None, initial_headers:
    Dict[str, str] | None = None, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: populate_partition_key_range_statistics
    description: 'Enable returning partition key

      range statistics in response headers.'
    isRequired: true
    types:
    - <xref:bool>
  - name: populate_quota_info
    description: Enable returning collection storage quota information in response
      headers.
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: Dict representing the retrieved container.
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'Raised if the container couldn''t be retrieved.

      This includes if the container does not exist.'
- uid: azure.cosmos.container.ContainerProxy.read_all_items
  name: read_all_items
  summary: List all the items in the container.
  signature: 'read_all_items(max_item_count: int | None = None, populate_query_metrics:
    bool | None = None, *, session_token: str | None = None, initial_headers: Dict[str,
    str] | None = None, max_integrated_cache_staleness_in_ms: int | None = None, priority:
    Literal[''High'', ''Low''] | None = None, **kwargs: Any) -> ItemPaged[Dict[str,
    Any]]'
  parameters:
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: max_integrated_cache_staleness_in_ms
    description: 'The max cache staleness for the integrated cache in

      milliseconds. For accounts configured to use the integrated cache, using Session
      or Eventual consistency,

      responses are guaranteed to be no staler than this value.'
    types:
    - <xref:int>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: An Iterable of items (dicts).
    types:
    - <xref:typing.Iterable>[<xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
- uid: azure.cosmos.container.ContainerProxy.read_item
  name: read_item
  summary: Get the item identified by *item*.
  signature: 'read_item(item: str | Mapping[str, Any], partition_key: str | int |
    float | bool | Sequence[str | int | float | bool | None] | Type[NonePartitionKeyValue],
    populate_query_metrics: bool | None = None, post_trigger_include: str | None =
    None, *, session_token: str | None = None, initial_headers: Dict[str, str] | None
    = None, max_integrated_cache_staleness_in_ms: int | None = None, priority: Literal[''High'',
    ''Low''] | None = None, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: item
    description: The ID (name) or dict representing item to retrieve.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: partition_key
    description: Partition key for the item to retrieve.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>, <xref:float>, <xref:bool>, <xref:typing.List>[<xref:typing.Union>[<xref:str>,
      <xref:int>, <xref:float>, <xref:bool>]]]
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: max_integrated_cache_staleness_in_ms
    description: 'The max cache staleness for the integrated cache in

      milliseconds. For accounts configured to use the integrated cache, using Session
      or Eventual consistency,

      responses are guaranteed to be no staler than this value.'
    types:
    - <xref:int>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: Dict representing the item to be retrieved.
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The given item couldn't be retrieved.
  examples:
  - "Get an item from the database and update one of its properties:<!--[!code-python[Main](les\\\
    examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\"\
    : [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\
    \\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\
    \\37\\\\azure-cosmos-4.6.0\\\\samples\\\\examples.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   item = container.read_item(\"\
    item2\", partition_key=\"Widget\")\n   item[\"productModel\"] = \"DISCONTINUED\"\
    \n   updated_item = container.upsert_item(item)\n\n   ````\n"
- uid: azure.cosmos.container.ContainerProxy.read_offer
  name: read_offer
  summary: 'Get the ThroughputProperties object for this container.

    If no ThroughputProperties already exist for the container, an exception is raised.'
  signature: 'read_offer(**kwargs: Any) -> ThroughputProperties'
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: Throughput for the container.
    types:
    - <xref:azure.cosmos.ThroughputProperties>
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'No throughput properties exists for the container or

      the throughput properties could not be retrieved.'
- uid: azure.cosmos.container.ContainerProxy.replace_item
  name: replace_item
  summary: 'Replaces the specified item if it exists in the container.


    If the item does not already exist in the container, an exception is raised.'
  signature: 'replace_item(item: str | Mapping[str, Any], body: Dict[str, Any], populate_query_metrics:
    bool | None = None, pre_trigger_include: str | None = None, post_trigger_include:
    str | None = None, *, session_token: str | None = None, initial_headers: Dict[str,
    str] | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, priority: Literal[''High'', ''Low''] | None = None, **kwargs: Any)
    -> Dict[str, Any]'
  parameters:
  - name: item
    description: The ID (name) or dict representing item to be replaced.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]]
  - name: body
    description: A dict representing the item to replace.
    isRequired: true
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    isRequired: true
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: A dict representing the item after replace went through.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'The replace operation failed or the item with

      given id does not exist.'
- uid: azure.cosmos.container.ContainerProxy.replace_throughput
  name: replace_throughput
  summary: 'Replace the container''s throughput.


    If no ThroughputProperties already exist for the container, an exception is raised.'
  signature: 'replace_throughput(throughput: int | ThroughputProperties, **kwargs:
    Any) -> ThroughputProperties'
  parameters:
  - name: throughput
    description: The throughput to be set.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:int>, <xref:azure.cosmos.ThroughputProperties>]
  keywordOnlyParameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  return:
    description: ThroughputProperties for the container, updated with new throughput.
    types:
    - <xref:azure.cosmos.ThroughputProperties>
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: 'No throughput properties exist for the container

      or the throughput properties could not be updated.'
- uid: azure.cosmos.container.ContainerProxy.upsert_item
  name: upsert_item
  summary: 'Insert or update the specified item.


    If the item already exists in the container, it is replaced. If the item

    does not already exist, it is inserted.'
  signature: 'upsert_item(body: Dict[str, Any], populate_query_metrics: bool | None
    = None, pre_trigger_include: str | None = None, post_trigger_include: str | None
    = None, *, session_token: str | None = None, initial_headers: Dict[str, str] |
    None = None, etag: str | None = None, match_condition: MatchConditions | None
    = None, priority: Literal[''High'', ''Low''] | None = None, **kwargs: Any) ->
    Dict[str, Any]'
  parameters:
  - name: body
    description: A dict-like object representing the item to update or insert.
    isRequired: true
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  - name: pre_trigger_include
    description: trigger id to be used as pre operation trigger.
    isRequired: true
    types:
    - <xref:str>
  - name: post_trigger_include
    description: trigger id to be used as post operation trigger.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: session_token
    description: Token for use with Session consistency.
    types:
    - <xref:str>
  - name: initial_headers
    description: Initial headers to be sent as part of the request.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:str>]
  - name: etag
    description: 'An ETag value, or the wildcard character (*). Used to check if the
      resource

      has changed, and act according to the condition specified by the *match_condition*
      parameter.'
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag.
    types:
    - <xref:azure.core.MatchConditions>
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:typing.Callable>
  - name: priority
    description: 'Priority based execution allows users to set a priority for each

      request. Once the user has reached their provisioned throughput, low priority
      requests are throttled

      before high priority requests start getting throttled. Feature must first be
      enabled at the account level.'
    types:
    - <xref:typing.Literal>["High", "Low"]
  return:
    description: A dict representing the upserted item.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  exceptions:
  - type: azure.cosmos.exceptions.CosmosHttpResponseError
    description: The given item could not be upserted.
attributes:
- uid: azure.cosmos.container.ContainerProxy.is_system_key
  name: is_system_key
- uid: azure.cosmos.container.ContainerProxy.scripts
  name: scripts
