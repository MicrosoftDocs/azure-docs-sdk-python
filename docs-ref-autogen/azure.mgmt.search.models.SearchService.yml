### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.search.models.SearchService
  fullName: azure.mgmt.search.models.SearchService
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.search.models.resource.Resource
  langs:
  - python
  module: azure.mgmt.search.models
  name: SearchService
  source:
    id: SearchService
    path: azure-mgmt-search\azure\mgmt\search\models\search_service.py
    remote:
      branch: master
      path: azure-mgmt-search\azure\mgmt\search\models\search_service.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Describes an Azure Search service and its current state.


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: SearchService(location, sku, tags=None, replica_count=1, partition_count=1,
      hosting_mode='default')
    parameters:
    - description: 'The geographic location of the resource. This must be one

        of the supported and registered Azure Geo Regions (for example, West US,

        East US, Southeast Asia, and so forth).

        '
      id: location
      type:
      - str
    - description: 'Tags to help categorize the resource in the Azure portal.

        '
      id: tags
      type:
      - dict
    - description: 'The number of replicas in the Search service. If

        specified, it must be a value between 1 and 12 inclusive for standard SKUs

        or between 1 and 3 inclusive for basic SKU. Default value: 1 .

        '
      id: replica_count
      type:
      - int
    - description: 'The number of partitions in the Search service; if

        specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only

        valid for standard SKUs. For ''standard3'' services with hostingMode set to

        ''highDensity'', the allowed values are between 1 and 3. Default value: 1
        .

        '
      id: partition_count
      type:
      - int
    - description: 'Applicable only for the standard3 SKU. You can set

        this property to enable up to 3 high density partitions that allow up to

        1000 indexes, which is much higher than the maximum indexes allowed for

        any other SKU. For the standard3 SKU, the value is either ''default'' or

        ''highDensity''. For all other SKUs, this value must be ''default''. Possible

        values include: ''default'', ''highDensity''. Default value: "default" .

        '
      id: hosting_mode
      type:
      - 'str or @azure.mgmt.search.models.HostingMode

        '
    - description: 'The SKU of the Search Service, which determines price tier and

        capacity limits.

        '
      id: sku
      type:
      - azure.mgmt.search.models.Sku
    variables:
    - description: 'The ID of the resource. This can be used with the Azure Resource

        Manager to link resources together.

        '
      id: id
      type:
      - str
    - description: 'The name of the resource.

        '
      id: name
      type:
      - str
    - description: 'The resource type.

        '
      id: type
      type:
      - str
    - description: 'The status of the Search service. Possible values include:

        ''running'': The Search service is running and no provisioning operations

        are underway. ''provisioning'': The Search service is being provisioned or

        scaled up or down. ''deleting'': The Search service is being deleted.

        ''degraded'': The Search service is degraded. This can occur when the

        underlying search units are not healthy. The Search service is most likely

        operational, but performance might be slow and some requests might be

        dropped. ''disabled'': The Search service is disabled. In this state, the

        service will reject all API requests. ''error'': The Search service is in
        an

        error state. If your service is in the degraded, disabled, or error

        states, it means the Azure Search team is actively investigating the

        underlying issue. Dedicated services in these states are still chargeable

        based on the number of search units provisioned. Possible values include:

        ''running'', ''provisioning'', ''deleting'', ''degraded'', ''disabled'', ''error''

        '
      id: status
      type:
      - 'str or @azure.mgmt.search.models.SearchServiceStatus

        '
    - description: 'The details of the Search service status.

        '
      id: status_details
      type:
      - str
    - description: 'The state of the last provisioning operation

        performed on the Search service. Provisioning is an intermediate state

        that occurs while service capacity is being established. After capacity is

        set up, provisioningState changes to either ''succeeded'' or ''failed''.

        Client applications can poll provisioning status (the recommended polling

        interval is from 30 seconds to one minute) by using the Get Search Service

        operation to see when an operation is completed. If you are using the free

        service, this value tends to come back as ''succeeded'' directly in the call

        to Create Search service. This is because the free service uses capacity

        that is already set up. Possible values include: ''succeeded'',

        ''provisioning'', ''failed''

        '
      id: provisioning_state
      type:
      - 'str or @azure.mgmt.search.models.ProvisioningState

        '
  type: class
  uid: azure.mgmt.search.models.SearchService
references: []
