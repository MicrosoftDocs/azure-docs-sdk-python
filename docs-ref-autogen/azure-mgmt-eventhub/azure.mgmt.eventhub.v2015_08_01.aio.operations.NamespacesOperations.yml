### YamlMime:PythonClass
uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations
name: NamespacesOperations
fullName: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations
module: azure.mgmt.eventhub.v2015_08_01.aio.operations
inheritances:
- builtins.object
summary: 'NamespacesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: NamespacesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates or updates a namespace. Once created, this namespace''s resource
    manifest is immutable.

    This operation is idempotent.'
  signature: 'begin_create_or_update(resource_group_name: str, namespace_name: str,
    parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceCreateOrUpdateParameters,
    **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for creating a namespace resource.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceCreateOrUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either NamespaceResource
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.begin_delete
  name: begin_delete
  summary: 'Deletes an existing namespace. This operation also removes all associated
    resources under the

    namespace.'
  signature: 'begin_delete(resource_group_name: str, namespace_name: str, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.check_name_availability
  name: check_name_availability
  summary: Check the give Namespace name availability.
  signature: 'check_name_availability(parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.CheckNameAvailabilityParameter,
    **kwargs: Any) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.CheckNameAvailabilityResult'
  parameters:
  - name: parameters
    description: Parameters to check availability of the given Namespace name.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.CheckNameAvailabilityParameter>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CheckNameAvailabilityResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.CheckNameAvailabilityResult>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.create_or_update_authorization_rule
  name: create_or_update_authorization_rule
  summary: Creates or updates an AuthorizationRule for a Namespace.
  signature: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleCreateOrUpdateParameters,
    **kwargs: Any) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The shared access AuthorizationRule.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SharedAccessAuthorizationRuleResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleResource>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.delete_authorization_rule
  name: delete_authorization_rule
  summary: Deletes an AuthorizationRule for a Namespace.
  signature: 'delete_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.get
  name: get
  summary: Gets the description of the specified namespace.
  signature: 'get(resource_group_name: str, namespace_name: str, **kwargs: Any) ->
    azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NamespaceResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.get_authorization_rule
  name: get_authorization_rule
  summary: Gets an AuthorizationRule for a Namespace by rule name.
  signature: 'get_authorization_rule(resource_group_name: str, namespace_name: str,
    authorization_rule_name: str, **kwargs: Any) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SharedAccessAuthorizationRuleResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleResource>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.list_authorization_rules
  name: list_authorization_rules
  summary: Gets a list of authorization rules for a Namespace.
  signature: 'list_authorization_rules(resource_group_name: str, namespace_name: str,
    **kwargs: Any) -> AsyncIterable[azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleListResult]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either SharedAccessAuthorizationRuleListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Lists the available Namespaces within a resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> AsyncIterable[azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceListResult]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NamespaceListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.list_by_subscription
  name: list_by_subscription
  summary: Lists all the available Namespaces within a subscription, irrespective
    of the resource groups.
  signature: 'list_by_subscription(**kwargs: Any) -> AsyncIterable[azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceListResult]'
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NamespaceListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.list_keys
  name: list_keys
  summary: Gets the primary and secondary connection strings for the Namespace.
  signature: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs: Any) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ResourceListKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.ResourceListKeys>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.regenerate_keys
  name: regenerate_keys
  summary: Regenerates the primary or secondary connection strings for the specified
    Namespace.
  signature: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.RegenerateKeysParameters,
    **kwargs: Any) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters required to regenerate the connection string.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.RegenerateKeysParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ResourceListKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.ResourceListKeys>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.update
  name: update
  summary: 'Creates or updates a namespace. Once created, this namespace''s resource
    manifest is immutable.

    This operation is idempotent.'
  signature: 'update(resource_group_name: str, namespace_name: str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceUpdateParameter,
    **kwargs: Any) -> Optional[azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for updating a namespace resource.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceUpdateParameter>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NamespaceResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource>
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations.NamespacesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventhub.v2015_08_01.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\eventhub\\v2015_08_01\\models\\__init__.py'>
