### YamlMime:PythonClass
uid: azure.mgmt.security.v2020_01_01_preview.models.AuthenticationDetailsProperties
name: AuthenticationDetailsProperties
fullName: azure.mgmt.security.v2020_01_01_preview.models.AuthenticationDetailsProperties
module: azure.mgmt.security.v2020_01_01_preview.models
inheritances:
- azure.mgmt.security._serialization.Model
summary: 'Settings for cloud authentication management.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  AwAssumeRoleAuthenticationDetailsProperties, AwsCredsAuthenticationDetailsProperties,

  GcpCredentialsDetailsProperties


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: AuthenticationDetailsProperties(**kwargs)
variables:
- description: 'State of the multi-cloud connector. Known values are:

    "Valid", "Invalid", "Expired", and "IncorrectPolicy".'
  name: authentication_provisioning_state
  types:
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.str>
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.AuthenticationProvisioningState>
- description: The permissions detected in the cloud account.
  name: granted_permissions
  types:
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.list>[<xref:azure.mgmt.security.v2020_01_01_preview.models.str>
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.PermissionProperty>]
- description: 'Connect to your cloud account, for AWS use either account

    credentials or role-based authentication. For GCP use account organization credentials.

    Required. Known values are: "awsCreds", "awsAssumeRole", and "gcpCredentials".'
  name: authentication_type
  types:
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.str>
  - <xref:azure.mgmt.security.v2020_01_01_preview.models.AuthenticationType>
