### YamlMime:PythonClass
uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations
name: GovernanceRulesOperations
fullName: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations
module: azure.mgmt.security.v2022_01_01_preview.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.security.v2022_01_01_preview.aio.SecurityCenter>'s\n\
  >\n> <xref:governance_rules> attribute.\n>"
constructor:
  syntax: GovernanceRulesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.begin_rule_id_execute_single_security_connector
  name: begin_rule_id_execute_single_security_connector
  summary: Execute a security GovernanceRule on the given security connector.
  signature: 'async begin_rule_id_execute_single_security_connector(resource_group_name:
    str, security_connector_name: str, rule_id: str, execute_governance_rule_params:
    _models.ExecuteGovernanceRuleParams | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: security_connector_name
    description: The security connector name. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: rule_id
    description: 'The security GovernanceRule key - unique key for the standard GovernanceRule.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: execute_governance_rule_params
    description: 'GovernanceRule over a subscription scope. Is either a

      model type or a IO type. Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.models.ExecuteGovernanceRuleParams>
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.begin_rule_id_execute_single_subscription
  name: begin_rule_id_execute_single_subscription
  summary: Execute a security GovernanceRule on the given subscription.
  signature: 'async begin_rule_id_execute_single_subscription(rule_id: str, execute_governance_rule_params:
    _models.ExecuteGovernanceRuleParams | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: rule_id
    description: 'The security GovernanceRule key - unique key for the standard GovernanceRule.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: execute_governance_rule_params
    description: 'GovernanceRule over a subscription scope. Is either a

      model type or a IO type. Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.models.ExecuteGovernanceRuleParams>
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.create_or_update
  name: create_or_update
  summary: Creates or update a security GovernanceRule on the given subscription.
  signature: 'async create_or_update(rule_id: str, governance_rule: _models.GovernanceRule,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.GovernanceRule'
  parameters:
  - name: rule_id
    description: 'The security GovernanceRule key - unique key for the standard GovernanceRule.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: governance_rule
    description: 'GovernanceRule over a subscription scope. Is either a model type
      or a

      IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.models.GovernanceRule>
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: GovernanceRule or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.models.GovernanceRule>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.delete
  name: delete
  summary: Delete a GovernanceRule over a given scope.
  signature: 'async delete(rule_id: str, **kwargs: Any) -> None'
  parameters:
  - name: rule_id
    description: 'The security GovernanceRule key - unique key for the standard GovernanceRule.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.get
  name: get
  summary: Get a specific governanceRule for the requested scope by ruleId.
  signature: 'async get(rule_id: str, **kwargs: Any) -> GovernanceRule'
  parameters:
  - name: rule_id
    description: 'The security GovernanceRule key - unique key for the standard GovernanceRule.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.aio.operations.str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: GovernanceRule or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.v2022_01_01_preview.models.GovernanceRule>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.security.v2022_01_01_preview.aio.operations.GovernanceRulesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.security.v2022_01_01_preview.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.1\\x64\\Lib\\site-packages\\azure\\mgmt\\security\\v2022_01_01_preview\\models\\__init__.py'>
