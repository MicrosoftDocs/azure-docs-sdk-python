### YamlMime:PythonClass
uid: azure.mgmt.security.models.AuthenticationDetailsProperties
name: AuthenticationDetailsProperties
fullName: azure.mgmt.security.models.AuthenticationDetailsProperties
module: azure.mgmt.security.models
inheritances:
- msrest.serialization.Model
summary: 'Settings for cloud authentication management.


  You probably want to use the sub-classes and not this class directly. Known

  sub-classes are: AwAssumeRoleAuthenticationDetailsProperties, AwsCredsAuthenticationDetailsProperties,
  GcpCredentialsDetailsProperties.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: AuthenticationDetailsProperties(**kwargs)
  parameters:
  - name: authentication_type
    description: 'Required. Connect to your cloud account, for AWS use either account

      credentials or role-based authentication. For GCP use account organization credentials.Constant

      filled by server.  Possible values include: "awsCreds", "awsAssumeRole", "gcpCredentials".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.security.models.AuthenticationType>
variables:
- description: 'State of the multi-cloud connector. Possible values

    include: "Valid", "Invalid", "Expired", "IncorrectPolicy".'
  name: authentication_provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.security.models.AuthenticationProvisioningState>
- description: The permissions detected in the cloud account.
  name: granted_permissions
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.security.models.PermissionProperty>]
