### YamlMime:PythonClass
uid: azure.monitor.ingestion.aio.LogsIngestionClient
name: LogsIngestionClient
fullName: azure.monitor.ingestion.aio.LogsIngestionClient
module: azure.monitor.ingestion.aio
inheritances:
- azure.monitor.ingestion.aio._client.LogsIngestionClient
summary: The asynchronous client for uploading logs to Azure Monitor.
constructor:
  syntax: 'LogsIngestionClient(endpoint: str, credential: AsyncTokenCredential, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: 'The Data Collection Endpoint for the Data Collection Rule, for example

      [https://dce-name.eastus-2.ingest.monitor.azure.com](https://dce-name.eastus-2.ingest.monitor.azure.com).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version. Default value is "2023-01-01". Note that overriding

      this default value may result in unsupported behavior.'
    types:
    - <xref:str>
examples:
- "Creating the LogsIngestionClient for use with a sovereign cloud (i.e. non-public\
  \ cloud).<!--[!code-python[Main](les\\async_samples\\sample_authentication_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\227\\\\azure-monitor-ingestion-1.0.4\\\
  \\samples\\\\async_samples\\\\sample_authentication_async.py\", \"xml:space\": \"\
  preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\": {\"\
  linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity\
  \ import AzureAuthorityHosts\n   from azure.identity.aio import DefaultAzureCredential\n\
  \   from azure.monitor.ingestion.aio import LogsIngestionClient\n\n   credential\
  \ = DefaultAzureCredential(authority=AzureAuthorityHosts.AZURE_GOVERNMENT)\n   endpoint\
  \ = \"https://example.ingest.monitor.azure.us\"\n   client = LogsIngestionClient(endpoint,\
  \ credential, credential_scopes=[\"https://monitor.azure.us/.default\"])\n\n   ````\n"
methods:
- uid: azure.monitor.ingestion.aio.LogsIngestionClient.close
  name: close
  signature: async close() -> None
- uid: azure.monitor.ingestion.aio.LogsIngestionClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
- uid: azure.monitor.ingestion.aio.LogsIngestionClient.upload
  name: upload
  summary: 'Ingestion API used to directly ingest data using Data Collection Rules.


    A list of logs is divided into chunks of 1MB or less, then each chunk is gzip-compressed
    and uploaded.

    If an I/O stream is passed in, the stream is uploaded as-is.'
  signature: 'async upload(rule_id: str, stream_name: str, logs: List[MutableMapping[str,
    Any]] | IO[bytes], *, on_error: Callable[[LogsUploadError], Awaitable[None]] |
    None = None, **kwargs: Any) -> None'
  parameters:
  - name: rule_id
    description: The immutable ID of the Data Collection Rule resource.
    isRequired: true
    types:
    - <xref:str>
  - name: stream_name
    description: The streamDeclaration name as defined in the Data Collection Rule.
    isRequired: true
    types:
    - <xref:str>
  - name: logs
    description: An array of objects matching the schema defined by the provided stream.
    isRequired: true
    types:
    - <xref:list>[<xref:JSON>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: on_error
    description: 'The callback function that is called when a chunk of logs fails
      to upload.

      This function should expect one argument that corresponds to an "LogsUploadError"
      object.

      If no function is provided, then the first exception encountered will be raised.'
    types:
    - <xref:typing.Optional>[<xref:typing.Callable>[[<xref:azure.monitor.ingestion.LogsUploadError>],
      <xref:None>]]
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
