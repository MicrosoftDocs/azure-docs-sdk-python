### YamlMime:PythonModule
uid: azureml.featurestore.feature_set_spec
name: feature_set_spec
fullName: azureml.featurestore.feature_set_spec
functions:
- uid: azureml.featurestore.feature_set_spec.create_feature_set_spec
  name: create_feature_set_spec
  summary: 'Utility for creating a FeatureSetSpec.


    If infer schema is True, infer the type for every column that is not an index
    column or timestamp column.

    Add all these columns and their column type to the Feature list of the returned
    FeatureSetSpec.


    :type FeatureSource, optional

    :param features: List of Feature object to be included in feature set spec result

    :type features: List[Feature], optional

    :param index_columns: List of Index Column object to be included in feature set
    spec result

    :type index_columns: List[Column], optional

    :param transformation_code: Transformation code to be included in feature set
    spec result

    :type transformation_code: TransformationCode, optional, Deprecated

    :param feature_transformation: Transformation logic to be applied to the feature
    set, can be UDF or DSL

    :type feature_transformation: FeatureTransformation, optional

    :param source_lookback: source lookback to be included in feature set spec result

    :type source_lookback: DateTimeOffset, optional

    :param temporal_join_lookback: temporal join lookback to be included in feature
    set spec result

    :type temporal_join_lookback: DateTimeOffset, optional

    :returns: Featureset Spec

    :rtype: FeaturesetSpec'
  signature: 'create_feature_set_spec(*, infer_schema: bool | None = False, spec_path:
    str | PathLike | IO[str] | None = None, source: FeatureSource | FeatureSourceBase
    | None = None, features: List[Feature] | None = None, index_columns: List[Column]
    | None = None, transformation_code: TransformationCode | None = None, feature_transformation:
    FeatureTransformation | None = None, source_lookback: DateTimeOffset | None =
    None, temporal_join_lookback: DateTimeOffset | None = None) -> FeatureSetSpec'
  parameters:
  - name: infer_schema
    description: whether to infer the schema
    isRequired: true
    types:
    - '<xref:bool>, <xref:default: False>'
  - name: spec_path
    description: 'feature set spec path to infer from, required if other objects are
      not provided,

      will override other objects if provided.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:PathLike>, <xref:typing.IO>[<xref:str>]],
      <xref:optional>
  - name: source
    description: FeatureSource object to be included in feature set spec result
    isRequired: true
classes:
- azureml.featurestore.feature_set_spec.FeatureSetSpec
