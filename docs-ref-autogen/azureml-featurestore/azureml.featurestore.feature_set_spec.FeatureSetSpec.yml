### YamlMime:PythonClass
uid: azureml.featurestore.feature_set_spec.FeatureSetSpec
name: FeatureSetSpec
fullName: azureml.featurestore.feature_set_spec.FeatureSetSpec
module: azureml.featurestore.feature_set_spec
inheritances:
- builtins.object
summary: 'Represents a feature set specification.


  Initialize a feature set specification.'
constructor:
  syntax: 'FeatureSetSpec(*, source: FeatureSourceBase | FeatureSource, index_columns:
    List[Column], features: List[Feature] | None = None, feature_transformation_code:
    TransformationCode | None = None, feature_transformation: FeatureTransformation
    | None = None, source_lookback: DateTimeOffset | None = None, temporal_join_lookback:
    DateTimeOffset | None = None, base_path=None, **kwargs)'
  parameters:
  - name: source
    description: The underlying source data for this feature set
    isRequired: true
    types:
    - <xref:azureml.featurestore.feature_source.feature_source_base.FeatureSourceBase>
  - name: features
    description: Features in this feature set
    isRequired: true
    types:
    - <xref:typing.List>[<xref:azureml.featurestore.contracts.feature.Feature>]
  - name: index_columns
    description: Index columns for this feature set
    isRequired: true
    types:
    - <xref:typing.List>[<xref:DataColumn>]
  - name: feature_transformation_code
    description: Transformation logic to be applied to the feature set, deprecated
    isRequired: true
    types:
    - <xref:Code>, <xref:optional>
  - name: feature_transformation
    description: Transformation logic to be applied to the feature set, can be UDF
      or DSL
    isRequired: true
    types:
    - <xref:azureml.featurestore.contracts.feature_transformation.FeatureTransformation>,
      <xref:optional>
  - name: source_lookback
    description: 'A datetime representing window of source data fed to the feature
      transformation function.

      This is needed for e.g. to calculate 30 day aggregate'
    isRequired: true
    types:
    - <xref:Datetime>, <xref:optional>
  - name: temporal_join_lookback
    description: 'A datetime representing tolerance of the temporal join when the

      event data is joined with feature set'
    isRequired: true
    types:
    - <xref:Datetime>, <xref:optional>
  - name: source
    description: The underlying source data for this feature set
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:azureml.featurestore.feature_source.feature_source_base.FeatureSourceBase>,
      <xref:azureml.featurestore.contracts.FeatureSource>]
  - name: features
    description: Features in this feature set
    isRequired: true
    types:
    - <xref:typing.List>[<xref:azureml.featurestore.contracts.feature.Feature>]
  - name: index_columns
    description: Index columns for this feature set
    isRequired: true
    types:
    - <xref:typing.List>[<xref:azureml.featurestore.contracts.Column>]
  - name: feature_transformation_code
    description: Transformation logic to be applied to the feature set, deprecated
    isRequired: true
    types:
    - <xref:Code>, <xref:optional>
  - name: feature_transformation
    description: Transformation logic to be applied to the feature set, can be UDF
      or DSL
    isRequired: true
    types:
    - <xref:azureml.featurestore.contracts.feature_transformation.FeatureTransformation>,
      <xref:optional>
  - name: source_lookback
    description: 'A datetime representing window of source data fed to the feature
      transformation function

      This is needed for e.g. to calculate 30 day aggregate.'
    isRequired: true
    types:
    - <xref:Datetime>, <xref:optional>
  - name: temporal_join_lookback
    description: 'A datetime representing tolerance of the temporal join when the

      event data is joined with feature set'
    isRequired: true
    types:
    - <xref:Datetime>, <xref:optional>
  keywordOnlyParameters:
  - name: source
    isRequired: true
  - name: index_columns
    isRequired: true
  - name: features
    isRequired: true
  - name: feature_transformation_code
    isRequired: true
  - name: feature_transformation
    isRequired: true
  - name: source_lookback
    isRequired: true
  - name: temporal_join_lookback
    isRequired: true
  - name: base_path
    isRequired: true
methods:
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.dump
  name: dump
  summary: 'Dump the feature set spec into a file in yaml format. Destination can
    be a folder or a spec file path.


    If the destination is a folder path, the spec file name is assumed as FeatureSetSpec.yaml.


    If the destination is a yaml file path, the spec file name will be the same as
    the file name provided.


    If there is a transformation code path specified, it will be copied to the destination
    folder.


    If there is a source transformation code path specified, it will be copied to
    destination folder, and

    an exception is raised if code folder exists.


    An exception will be thrown if the destination already exists if overwrite ==
    False

    :param dest: The folder path destination to receive this spec.

    :type dest: Union[PathLike, str]

    :param overwrite: Whether to overwrite the destination folder

    :type overwrite: bool, default is False'
  signature: 'dump(dest: str | PathLike, overwrite: bool = False, **kwargs) -> None'
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.from_config
  name: from_config
  summary: "Load a feature set spec from yaml config. Spec path must be a folder path,\
    \ the spec file name is assumed as\n   FeatureSetSpec.yaml"
  signature: 'from_config(spec_path: str | PathLike, datastore_operations: DatastoreOperations
    = None) -> FeatureSetSpec'
  parameters:
  - name: spec_path
    description: The path to fetch this spec.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:PathLike>]
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.get_feature
  name: get_feature
  signature: 'get_feature(name: str)'
  parameters:
  - name: name
    isRequired: true
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.get_index_columns
  name: get_index_columns
  signature: get_index_columns()
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.get_timestamp_column
  name: get_timestamp_column
  signature: get_timestamp_column()
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.to_spark_dataframe
  name: to_spark_dataframe
  summary: 'Display a feature set in a spark dataframe format, after performing necessary
    transformation

    :param feature_window_start_date_time: The start data time of feature window

    :type feature_window_start_date_time: datetime

    :param feature_window_end_date_time: The end data time of feature window

    :type feature_window_end_date_time: datetime

    :param features: List of feature names to show

    :type features: List[str]

    :return: feature set dataframe

    :rtype: DataFrame'
  signature: 'to_spark_dataframe(*, feature_window_start_date_time: datetime | None
    = None, feature_window_end_date_time: datetime | None = None, features: List[str]
    | None = None, dedup: bool = False, **kwargs)'
attributes:
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.name
  name: name
- uid: azureml.featurestore.feature_set_spec.FeatureSetSpec.version
  name: version
