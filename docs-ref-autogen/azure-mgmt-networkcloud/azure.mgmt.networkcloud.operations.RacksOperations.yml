### YamlMime:PythonClass
uid: azure.mgmt.networkcloud.operations.RacksOperations
name: RacksOperations
fullName: azure.mgmt.networkcloud.operations.RacksOperations
module: azure.mgmt.networkcloud.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.networkcloud.NetworkCloudMgmtClient>'s\n\
  >\n> <xref:racks> attribute.\n>"
constructor:
  syntax: RacksOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.networkcloud.operations.RacksOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update the rack.


    Create a new rack or update properties of the existing one.

    All customer initiated requests will be rejected as the life cycle of this resource
    is managed

    by the system.'
  signature: 'begin_create_or_update(resource_group_name: str, rack_name: str, rack_parameters:
    _models.Rack, if_match: str | None = None, if_none_match: str | None = None, *,
    content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.Rack]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: rack_name
    description: The name of the rack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: rack_parameters
    description: The request body. Is either a Rack type or a IO[bytes] type. Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.networkcloud.models.Rack>
    - <xref:typing.IO>[<xref:bytes>]
  - name: if_match
    description: 'The ETag of the transformation. Omit this value to always overwrite
      the

      current resource. Specify the last-seen ETag value to prevent accidentally overwriting

      concurrent changes. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: if_none_match
    description: 'Set to ''*'' to allow a new record set to be created, but to prevent

      updating an existing resource. Other values will result in error from server
      as they are not

      supported. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either Rack or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.networkcloud.models.Rack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.networkcloud.operations.RacksOperations.begin_delete
  name: begin_delete
  summary: 'Delete the rack.


    Delete the provided rack.

    All customer initiated requests will be rejected as the life cycle of this resource
    is managed

    by the system.'
  signature: 'begin_delete(resource_group_name: str, rack_name: str, if_match: str
    | None = None, if_none_match: str | None = None, **kwargs: Any) -> LROPoller[OperationStatusResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: rack_name
    description: The name of the rack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'The ETag of the transformation. Omit this value to always overwrite
      the

      current resource. Specify the last-seen ETag value to prevent accidentally overwriting

      concurrent changes. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: if_none_match
    description: 'Set to ''*'' to allow a new record set to be created, but to prevent

      updating an existing resource. Other values will result in error from server
      as they are not

      supported. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either OperationStatusResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.networkcloud.models.OperationStatusResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.networkcloud.operations.RacksOperations.begin_update
  name: begin_update
  summary: 'Patch the rack.


    Patch properties of the provided rack, or update the tags associated with the
    rack. Properties

    and tag updates can be done independently.'
  signature: 'begin_update(resource_group_name: str, rack_name: str, if_match: str
    | None = None, if_none_match: str | None = None, rack_update_parameters: _models.RackPatchParameters
    | None = None, *, content_type: str = ''application/json'', **kwargs: Any) ->
    LROPoller[_models.Rack]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: rack_name
    description: The name of the rack. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: if_match
    description: 'The ETag of the transformation. Omit this value to always overwrite
      the

      current resource. Specify the last-seen ETag value to prevent accidentally overwriting

      concurrent changes. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: if_none_match
    description: 'Set to ''*'' to allow a new record set to be created, but to prevent

      updating an existing resource. Other values will result in error from server
      as they are not

      supported. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: rack_update_parameters
    description: 'The request body. Is either a RackPatchParameters type or a

      IO[bytes] type. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.networkcloud.models.RackPatchParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Rack or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.networkcloud.models.Rack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.networkcloud.operations.RacksOperations.get
  name: get
  summary: 'Retrieve the rack.


    Get properties of the provided rack.'
  signature: 'get(resource_group_name: str, rack_name: str, **kwargs: Any) -> Rack'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: rack_name
    description: The name of the rack. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Rack or the result of cls(response)
    types:
    - <xref:azure.mgmt.networkcloud.models.Rack>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.networkcloud.operations.RacksOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'List racks in the resource group.


    Get a list of racks in the provided resource group.'
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[Rack]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either Rack or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.networkcloud.models.Rack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.networkcloud.operations.RacksOperations.list_by_subscription
  name: list_by_subscription
  summary: 'List racks in the subscription.


    Get a list of racks in the provided subscription.'
  signature: 'list_by_subscription(**kwargs: Any) -> Iterable[Rack]'
  return:
    description: An iterator like instance of either Rack or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.networkcloud.models.Rack>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.networkcloud.operations.RacksOperations.models
  name: models
  signature: models = <module 'azure.mgmt.networkcloud.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv176\\Lib\\site-packages\\azure\\mgmt\\networkcloud\\models\\__init__.py'>
