### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
name: SearchIndexerDataSourceConnection
fullName: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection
module: azure.search.documents.indexes.models
summary: 'Represents a datasource connection definition, which can be used to configure
  an indexer.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SearchIndexerDataSourceConnection(*, name: str, description: str | None
    = None, type: str, connection_string: str, container: SearchIndexerDataContainer,
    data_change_detection_policy: DataChangeDetectionPolicy | None = None, data_deletion_detection_policy:
    DataDeletionDetectionPolicy | None = None, e_tag: str | None = None, encryption_key:
    SearchResourceEncryptionKey | None = None, **kwargs)'
  keywordOnlyParameters:
  - name: name
    isRequired: true
  - name: description
    defaultValue: None
  - name: type
    isRequired: true
  - name: connection_string
    isRequired: true
  - name: container
    isRequired: true
  - name: data_change_detection_policy
    defaultValue: None
  - name: data_deletion_detection_policy
    defaultValue: None
  - name: e_tag
    defaultValue: None
  - name: encryption_key
    defaultValue: None
variables:
- description: Required. The name of the datasource connection.
  name: name
  types:
  - <xref:str>
- description: The description of the datasource connection.
  name: description
  types:
  - <xref:str>
- description: 'Required. The type of the datasource connection. Possible values include:
    "azuresql",

    "cosmosdb", "azureblob", "azuretable", "mysql", "adlsgen2".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.search.documents.indexes.models.SearchIndexerDataSourceType>
- description: The connection string for the datasource connection.
  name: connection_string
  types:
  - <xref:str>
- description: Required. The data container for the datasource connection.
  name: container
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerDataContainer>
- description: The data change detection policy for the datasource connection.
  name: data_change_detection_policy
  types:
  - <xref:azure.search.documents.models.DataChangeDetectionPolicy>
- description: The data deletion detection policy for the datasource connection.
  name: data_deletion_detection_policy
  types:
  - <xref:azure.search.documents.models.DataDeletionDetectionPolicy>
- description: The ETag of the data source.
  name: e_tag
  types:
  - <xref:str>
- description: 'A description of an encryption key that you create in Azure Key Vault.

    This key is used to provide an additional level of encryption-at-rest for your
    datasource

    definition when you want full assurance that no one, not even Microsoft, can decrypt
    your data

    source definition in Azure Cognitive Search. Once you have encrypted your data
    source

    definition, it will always remain encrypted. Azure Cognitive Search will ignore
    attempts to set

    this property to null. You can change this property as needed if you want to rotate
    your

    encryption key; Your datasource definition will be unaffected. Encryption with
    customer-managed

    keys is not available for free search services, and is only available for paid
    services created

    on or after January 1, 2019.'
  name: encryption_key
  types:
  - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
methods:
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.as_dict
  name: as_dict
  summary: Return a dict that can be serialized using json.dump.
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A callable that will transform the key of the dict
    types:
    - <xref:typing.Callable>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a SearchIndexerDataSourceConnection
    instance.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchIndexerDataSourceConnection instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A callable that will extract a key from a dict
    defaultValue: None
    types:
    - <xref:typing.Callable>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchIndexerDataSourceConnection instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.SearchIndexerDataSourceConnection.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.

    :param bool keep_readonly: If you want to serialize the readonly attributes

    :returns: A dict JSON compatible object

    :rtype: dict'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    defaultValue: 'False'
