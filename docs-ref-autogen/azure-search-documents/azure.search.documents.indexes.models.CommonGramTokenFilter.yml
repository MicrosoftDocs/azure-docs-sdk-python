### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.CommonGramTokenFilter
name: CommonGramTokenFilter
fullName: azure.search.documents.indexes.models.CommonGramTokenFilter
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated.models._models_py3.TokenFilter
summary: 'Construct bigrams for frequently occurring terms while indexing. Single
  terms are still indexed too, with bigrams overlaid. This token filter is implemented
  using Apache Lucene.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'CommonGramTokenFilter(*, name: str, common_words: List[str], ignore_case:
    Optional[bool] = False, use_query_mode: Optional[bool] = False, **kwargs)'
  parameters:
  - name: odata_type
    description: 'Required. Identifies the concrete type of the token filter.Constant
      filled

      by server.'
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: 'Required. The name of the token filter. It must only contain letters,
      digits,

      spaces, dashes or underscores, can only start and end with alphanumeric characters,
      and is

      limited to 128 characters.'
    isRequired: true
    types:
    - <xref:str>
  - name: common_words
    description: Required. The set of common words.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: ignore_case
    description: 'A value indicating whether common words matching will be case insensitive.

      Default is false.'
    isRequired: true
    types:
    - <xref:bool>
  - name: use_query_mode
    description: 'A value that indicates whether the token filter is in query mode.
      When

      in query mode, the token filter generates bigrams and then removes common words
      and single

      terms followed by a common word. Default is false.'
    isRequired: true
    types:
    - <xref:bool>
