### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchIndexerSkillset
name: SearchIndexerSkillset
fullName: azure.search.documents.indexes.models.SearchIndexerSkillset
module: azure.search.documents.indexes.models
summary: 'A list of skills.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SearchIndexerSkillset(*, name: str, skills: List[SearchIndexerSkill], description:
    str | None = None, cognitive_services_account: CognitiveServicesAccount | None
    = None, knowledge_store: SearchIndexerKnowledgeStore | None = None, index_projection:
    SearchIndexerIndexProjection | None = None, e_tag: str | None = None, encryption_key:
    SearchResourceEncryptionKey | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    isRequired: true
  - name: skills
    isRequired: true
  - name: description
    defaultValue: None
  - name: cognitive_services_account
    defaultValue: None
  - name: knowledge_store
    defaultValue: None
  - name: index_projection
    defaultValue: None
  - name: e_tag
    defaultValue: None
  - name: encryption_key
    defaultValue: None
variables:
- description: The name of the skillset. Required.
  name: name
  types:
  - <xref:str>
- description: The description of the skillset.
  name: description
  types:
  - <xref:str>
- description: A list of skills in the skillset. Required.
  name: skills
  types:
  - <xref:list>[<xref:azure.search.documents.indexes.models.SearchIndexerSkill>]
- description: 'Details about the Azure AI service to be used when running

    skills.'
  name: cognitive_services_account
  types:
  - <xref:azure.search.documents.indexes.models.CognitiveServicesAccount>
- description: 'Definition of additional projections to Azure blob, table, or files,
    of

    enriched data.'
  name: knowledge_store
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerKnowledgeStore>
- description: Definition of additional projections to secondary search index(es).
  name: index_projection
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerIndexProjection>
- description: The ETag of the skillset.
  name: e_tag
  types:
  - <xref:str>
- description: 'A description of an encryption key that you create in Azure Key Vault.

    This key is used to provide an additional level of encryption-at-rest for your
    skillset

    definition when you want full assurance that no one, not even Microsoft, can decrypt
    your

    skillset definition. Once you have encrypted your skillset definition, it will
    always remain

    encrypted. The search service will ignore attempts to set this property to null.
    You can change

    this property as needed if you want to rotate your encryption key; Your skillset
    definition

    will be unaffected. Encryption with customer-managed keys is not available for
    free search

    services, and is only available for paid services created on or after January
    1, 2019.'
  name: encryption_key
  types:
  - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
methods:
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.as_dict
  name: as_dict
  summary: Return a dict that can be serialized using json.dump.
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A callable that will transform the key of the dict
    types:
    - <xref:typing.Callable>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a SearchIndexerSkillset
    instance.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchIndexerSkillset instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A callable that will extract a key from a dict
    defaultValue: None
    types:
    - <xref:typing.Callable>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchIndexerSkillset instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.SearchIndexerSkillset.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.

    :param bool keep_readonly: If you want to serialize the readonly attributes

    :returns: A dict JSON compatible object

    :rtype: dict'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    defaultValue: 'False'
