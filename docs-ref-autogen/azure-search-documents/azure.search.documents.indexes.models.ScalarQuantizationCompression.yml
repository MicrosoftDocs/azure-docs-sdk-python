### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.ScalarQuantizationCompression
name: ScalarQuantizationCompression
fullName: azure.search.documents.indexes.models.ScalarQuantizationCompression
module: azure.search.documents.indexes.models
summary: "Contains configuration options specific to the scalar quantization compression\
  \ method used\n   during indexing and querying.\n\n   All required parameters must\
  \ be populated in order to send to server.\n\n   ivar compression_name:\n      The\
  \ name to associate with this particular configuration. Required.\n\n   vartype\
  \ compression_name:\n      str\n\n   ivar kind:\n      The name of the kind of compression\
  \ method being configured for use with vector\n      search. Required. Known values\
  \ are: \"scalarQuantization\" and \"binaryQuantization\".\n\n   vartype kind:\n\
  \      str or ~azure.search.documents.indexes.models.VectorSearchCompressionKind\n\
  \n   ivar rescoring_options:\n      Contains the options for rescoring.\n\n   vartype\
  \ rescoring_options:\n      ~azure.search.documents.indexes.models.RescoringOptions\n\
  \n   ivar truncation_dimension:\n      The number of dimensions to truncate the\
  \ vectors to. Truncating the\n      vectors reduces the size of the vectors and\
  \ the amount of data that needs to be transferred\n      during search. This can\
  \ save storage cost and improve search performance at the expense of\n      recall.\
  \ It should be only used for embeddings trained with Matryoshka Representation Learning\n\
  \      (MRL) such as OpenAI text-embedding-3-large (small). The default value is\
  \ null, which means no\n      truncation.\n\n   vartype truncation_dimension:\n\
  \      int\n\n   ivar rerank_with_original_vectors:\n      If set to true, once\
  \ the ordered set of results calculated\n      using compressed vectors are obtained,\
  \ they will be reranked again by recalculating the\n      full-precision similarity\
  \ scores. This will improve recall at the expense of latency.\n\nFor use with only\
  \ service version 2024-07-01. If using 2025-09-01 or later, use\n      RescoringOptions.rescoringEnabled.\n\
  \n   vartype rerank_with_original_vectors:\n      bool\n\n   ivar default_oversampling:\n\
  \      Default oversampling factor. Oversampling will internally request\n     \
  \ more documents (specified by this multiplier) in the initial search. This increases\
  \ the set of\n      results that will be reranked using recomputed similarity scores\
  \ from full-precision vectors.\n      Minimum value is 1, meaning no oversampling\
  \ (1x). This parameter can only be set when\n      rerankWithOriginalVectors is\
  \ true. Higher values improve recall at the expense of latency.\n\nFor use with\
  \ only service version 2024-07-01. If using 2025-09-01 or later, use\n      RescoringOptions.defaultOversampling.\n\
  \n   vartype default_oversampling:\n      float\n\n   ivar parameters:\n      Contains\
  \ the parameters specific to Scalar Quantization.\n\n   vartype parameters:\n  \
  \    ~azure.search.documents.indexes.models.ScalarQuantizationParameters\n\n   \
  \   keyword compression_name:\n         The name to associate with this particular\
  \ configuration. Required.\n\n      paramtype compression_name:\n         str\n\n\
  \      keyword rescoring_options:\n         Contains the options for rescoring.\n\
  \n      paramtype rescoring_options:\n         ~azure.search.documents.indexes.models.RescoringOptions\n\
  \n      keyword truncation_dimension:\n         The number of dimensions to truncate\
  \ the vectors to. Truncating\n         the vectors reduces the size of the vectors\
  \ and the amount of data that needs to be transferred\n         during search. This\
  \ can save storage cost and improve search performance at the expense of\n     \
  \    recall. It should be only used for embeddings trained with Matryoshka Representation\
  \ Learning\n         (MRL) such as OpenAI text-embedding-3-large (small). The default\
  \ value is null, which means no\n         truncation.\n\n      paramtype truncation_dimension:\n\
  \         int\n\n      keyword rerank_with_original_vectors:\n         If set to\
  \ true, once the ordered set of results\n         calculated using compressed vectors\
  \ are obtained, they will be reranked again by recalculating\n         the full-precision\
  \ similarity scores. This will improve recall at the expense of latency.\n\nFor\
  \ use with only service version 2024-07-01. If using 2025-09-01 or later, use\n\
  \      RescoringOptions.rescoringEnabled.\n\n   paramtype rerank_with_original_vectors:\n\
  \      bool\n\n   keyword default_oversampling:\n      Default oversampling factor.\
  \ Oversampling will internally\n      request more documents (specified by this\
  \ multiplier) in the initial search. This increases the\n      set of results that\
  \ will be reranked using recomputed similarity scores from full-precision\n    \
  \  vectors. Minimum value is 1, meaning no oversampling (1x). This parameter can\
  \ only be set when\n      rerankWithOriginalVectors is true. Higher values improve\
  \ recall at the expense of latency.\n\nFor use with only service version 2024-07-01.\
  \ If using 2025-09-01 or later, use\n      RescoringOptions.defaultOversampling.\n\
  \n   paramtype default_oversampling:\n      float\n\n   keyword parameters:\n  \
  \    Contains the parameters specific to Scalar Quantization.\n\n   paramtype parameters:\n\
  \      ~azure.search.documents.indexes.models.ScalarQuantizationParameters"
constructor:
  syntax: 'ScalarQuantizationCompression(*, compression_name: str, rescoring_options:
    _models.RescoringOptions | None = None, truncation_dimension: int | None = None,
    rerank_with_original_vectors: bool | None = None, default_oversampling: float
    | None = None, parameters: _models.ScalarQuantizationParameters | None = None,
    **kwargs: Any)'
  keywordOnlyParameters:
  - name: compression_name
    isRequired: true
  - name: rescoring_options
    defaultValue: None
  - name: truncation_dimension
    defaultValue: None
  - name: rerank_with_original_vectors
    defaultValue: None
  - name: default_oversampling
    defaultValue: None
  - name: parameters
    defaultValue: None
methods:
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    dict[str, typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A key extractor function.
    defaultValue: None
    types:
    - <xref:function>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.ScalarQuantizationCompression.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
