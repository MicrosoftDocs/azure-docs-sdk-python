### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.search.documents.indexes.models.IndexingParameters
  fullName: azure.search.documents.indexes.models.IndexingParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.search.documents.indexes.models
  name: IndexingParameters
  summary: Represents parameters for indexer execution.
  syntax:
    content: 'IndexingParameters(*, batch_size: typing.Union[int, NoneType] = None,
      max_failed_items: typing.Union[int, NoneType] = 0, max_failed_items_per_batch:
      typing.Union[int, NoneType] = 0, configuration: typing.Union[typing.Dict[str,
      object], NoneType] = None, **kwargs)'
    parameters:
    - description: 'The number of items that are read from the data source and indexed
        as a

        single batch in order to improve performance. The default depends on the data
        source type.'
      id: batch_size
      type:
      - int
    - description: 'The maximum number of items that can fail indexing for indexer

        execution to still be considered successful. -1 means no limit. Default is
        0.'
      id: max_failed_items
      type:
      - int
    - description: 'The maximum number of items in a single batch that can fail

        indexing for the batch to still be considered successful. -1 means no limit.
        Default is 0.'
      id: max_failed_items_per_batch
      type:
      - int
    - description: 'A dictionary of indexer-specific configuration properties. Each
        name is

        the name of a specific property. Each value must be of a primitive type.'
      id: configuration
      type:
      - dict[str, object]
  type: class
  uid: azure.search.documents.indexes.models.IndexingParameters
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
