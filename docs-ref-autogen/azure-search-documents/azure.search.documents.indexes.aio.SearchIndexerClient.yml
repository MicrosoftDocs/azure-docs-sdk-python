### YamlMime:PythonClass
uid: azure.search.documents.indexes.aio.SearchIndexerClient
name: SearchIndexerClient
fullName: azure.search.documents.indexes.aio.SearchIndexerClient
module: azure.search.documents.indexes.aio
inheritances:
- azure.search.documents._headers_mixin.HeadersMixin
summary: A client to interact with Azure search service Indexers.
constructor:
  syntax: 'SearchIndexerClient(endpoint: str, credential: AzureKeyCredential | AsyncTokenCredential,
    **kwargs)'
  parameters:
  - name: endpoint
    description: The URL endpoint of an Azure search service
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: A credential to authorize search client requests
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: The Search API version to use for requests.
    types:
    - <xref:str>
  - name: audience
    description: 'sets the Audience to use for authentication with Azure Active Directory
      (AAD). The

      audience is not considered when using a shared key. If audience is not provided,
      the public cloud audience

      will be assumed.'
    types:
    - <xref:str>
methods:
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.close
  name: close
  summary: Close the <xref:azure.search.documents.indexes.aio.SearchIndexerClient>
    session.
  signature: async close() -> None
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_data_source_connection
  name: create_data_source_connection
  summary: 'Creates a new data source connection.

    :param data_source_connection: The definition of the data source connection to
    create.

    :type data_source_connection: ~azure.search.documents.indexes.models.SearchIndexerDataSourceConnection

    :return: The created SearchIndexerDataSourceConnection

    :rtype: ~azure.search.documents.indexes.models.SearchIndexerDataSourceConnection'
  signature: 'async create_data_source_connection(data_source_connection: SearchIndexerDataSourceConnection,
    **kwargs: Any) -> SearchIndexerDataSourceConnection'
  examples:
  - "Create a SearchIndexerDataSourceConnection<!--[!code-python[Main](les\\async_samples\\\
    sample_data_source_operations_async.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\219\\\\azure-search-documents-11.4.0\\\\samples\\\\\
    async_samples\\\\sample_data_source_operations_async.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   container = SearchIndexerDataContainer(name=\"\
    searchcontainer\")\n   data_source = SearchIndexerDataSourceConnection(\n    \
    \   name=\"async-sample-data-source-connection\",\n       type=\"azureblob\",\n\
    \       connection_string=connection_string,\n       container=container,\n  \
    \ )\n   result = await client.create_data_source_connection(data_source)\n   print(\"\
    Create new Data Source Connection - async-sample-data-source-connection\")\n\n\
    \   ````\n"
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_indexer
  name: create_indexer
  summary: Creates a new SearchIndexer.
  signature: 'async create_indexer(indexer: SearchIndexer, **kwargs: Any) -> SearchIndexer'
  parameters:
  - name: indexer
    description: The definition of the indexer to create.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
  return:
    description: The created SearchIndexer
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_or_update_data_source_connection
  name: create_or_update_data_source_connection
  summary: 'Creates a new data source connection or updates a data source connection
    if it already exists.

    :param data_source_connection: The definition of the data source connection to
    create or update.

    :type data_source_connection: ~azure.search.documents.indexes.models.SearchIndexerDataSourceConnection

    :keyword match_condition: The match condition to use upon the etag

    :paramtype match_condition: ~azure.core.MatchConditions

    :return: The created SearchIndexerDataSourceConnection

    :rtype: ~azure.search.documents.indexes.models.SearchIndexerDataSourceConnection'
  signature: 'async create_or_update_data_source_connection(data_source_connection:
    SearchIndexerDataSourceConnection, *, match_condition: MatchConditions = MatchConditions.Unconditionally,
    **kwargs: Any) -> SearchIndexerDataSourceConnection'
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_or_update_indexer
  name: create_or_update_indexer
  summary: Creates a new indexer or updates a indexer if it already exists.
  signature: 'async create_or_update_indexer(indexer: SearchIndexer, *, match_condition:
    MatchConditions = MatchConditions.Unconditionally, **kwargs: Any) -> SearchIndexer'
  parameters:
  - name: indexer
    description: The definition of the indexer to create or update.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
  return:
    description: The created SearchIndexer
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_or_update_skillset
  name: create_or_update_skillset
  summary: 'Create a new SearchIndexerSkillset in an Azure Search service, or update
    an

    existing one.'
  signature: 'async create_or_update_skillset(skillset: SearchIndexerSkillset, *,
    match_condition: MatchConditions = MatchConditions.Unconditionally, **kwargs:
    Any) -> SearchIndexerSkillset'
  parameters:
  - name: skillset
    description: The SearchIndexerSkillset object to create or update
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  keywordOnlyParameters:
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: The created or updated SearchIndexerSkillset
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.create_skillset
  name: create_skillset
  summary: Create a new SearchIndexerSkillset in an Azure Search service
  signature: 'async create_skillset(skillset: SearchIndexerSkillset, **kwargs: Any)
    -> SearchIndexerSkillset'
  parameters:
  - name: skillset
    description: The SearchIndexerSkillset object to create
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  return:
    description: The created SearchIndexerSkillset
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.delete_data_source_connection
  name: delete_data_source_connection
  summary: 'Deletes a data source connection. To use access conditions, the

    SearchIndexerDataSourceConnection model must be provided instead of the name.

    It is enough to provide the name of the data source connection to delete unconditionally'
  signature: 'async delete_data_source_connection(data_source_connection: str | SearchIndexerDataSourceConnection,
    *, match_condition: MatchConditions = MatchConditions.Unconditionally, **kwargs:
    Any) -> None'
  parameters:
  - name: data_source_connection
    description: The data source connection to delete.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>
  keywordOnlyParameters:
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.delete_indexer
  name: delete_indexer
  summary: 'Deletes an indexer. To use access conditions, the SearchIndexer model

    must be provided instead of the name. It is enough to provide

    the name of the indexer to delete unconditionally.'
  signature: 'async delete_indexer(indexer: str | SearchIndexer, *, match_condition:
    MatchConditions = MatchConditions.Unconditionally, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The name or the indexer object to delete.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
  keywordOnlyParameters:
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.delete_skillset
  name: delete_skillset
  summary: 'Delete a named SearchIndexerSkillset in an Azure Search service. To use
    access conditions,

    the SearchIndexerSkillset model must be provided instead of the name. It is enough
    to provide

    the name of the skillset to delete unconditionally'
  signature: 'async delete_skillset(skillset: str | SearchIndexerSkillset, *, match_condition:
    MatchConditions = MatchConditions.Unconditionally, **kwargs: Any) -> None'
  parameters:
  - name: skillset
    description: The SearchIndexerSkillset to delete
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  keywordOnlyParameters:
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_data_source_connection
  name: get_data_source_connection
  summary: Retrieves a data source connection definition.
  signature: 'async get_data_source_connection(name: str, *, select: List[str] | None
    = None, **kwargs: Any) -> SearchIndexerDataSourceConnection'
  parameters:
  - name: name
    description: The name of the data source connection to retrieve.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: The SearchIndexerDataSourceConnection that is fetched.
    types:
    - '<xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection><xref:Retrieve>
      <xref:a> <xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>  <xref:result>
      = <xref:await> <xref:client.get_data_source_connection>("<xref:async>-<xref:sample>-<xref:data>-<xref:source>-<xref:connection>")
      <xref:print>("<xref:Retrived> <xref:Data> <xref:Source> <xref:Connection> ''<xref:async>-<xref:sample>-<xref:data>-<xref:source>-<xref:connection>''")
      <xref:return> <xref:result> '
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_data_source_connection_names
  name: get_data_source_connection_names
  summary: Lists all data source connection names available for a search service.
  signature: async get_data_source_connection_names(**kwargs) -> Sequence[str]
  return:
    description: List of all the data source connection names.
    types:
    - <xref:list>[<xref:str>]
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_data_source_connections
  name: get_data_source_connections
  summary: Lists all data source connections available for a search service.
  signature: 'async get_data_source_connections(**kwargs: Any) -> Sequence[SearchIndexerDataSourceConnection]'
  return:
    description: List of all the data source connections.
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.SearchIndexerDataSourceConnection>]
  examples:
  - "List all SearchIndexerDataSourceConnections<!--[!code-python[Main](les\\async_samples\\\
    sample_data_source_operations_async.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\219\\\\azure-search-documents-11.4.0\\\\samples\\\\\
    async_samples\\\\sample_data_source_operations_async.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   result = await client.get_data_source_connections()\n\
    \   names = [x.name for x in result]\n   print(\"Found {} Data Source Connections\
    \ in the service: {}\".format(len(result), \", \".join(names)))\n\n   ````\n"
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_indexer
  name: get_indexer
  summary: Retrieves a indexer definition.
  signature: 'async get_indexer(name: str, **kwargs: Any) -> SearchIndexer'
  parameters:
  - name: name
    description: The name of the indexer to retrieve.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The SearchIndexer that is fetched.
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexer>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_indexer_names
  name: get_indexer_names
  summary: Lists all indexer names available for a search service.
  signature: async get_indexer_names(**kwargs) -> Sequence[str]
  return:
    description: List of all the SearchIndexer names.
    types:
    - <xref:list>[<xref:str>]
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_indexer_status
  name: get_indexer_status
  summary: Get the status of the indexer.
  signature: 'async get_indexer_status(name: str, **kwargs: Any) -> SearchIndexerStatus'
  parameters:
  - name: name
    description: The name of the indexer to fetch the status.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SearchIndexerStatus
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerStatus>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_indexers
  name: get_indexers
  summary: Lists all indexers available for a search service.
  signature: 'async get_indexers(*, select: List[str] | None = None, **kwargs) ->
    Sequence[SearchIndexer]'
  keywordOnlyParameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: List of all the SearchIndexers.
    types:
    - <xref:list>[~<xref:azure.search.documents.indexes.models.SearchIndexer>]
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_skillset
  name: get_skillset
  summary: Retrieve a named SearchIndexerSkillset in an Azure Search service
  signature: 'async get_skillset(name: str, **kwargs) -> SearchIndexerSkillset'
  parameters:
  - name: name
    description: The name of the SearchIndexerSkillset to get
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The retrieved SearchIndexerSkillset
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerSkillset>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_skillset_names
  name: get_skillset_names
  summary: List the SearchIndexerSkillset names in an Azure Search service.
  signature: async get_skillset_names(**kwargs) -> List[str]
  return:
    description: List of SearchIndexerSkillset names
    types:
    - <xref:list>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.get_skillsets
  name: get_skillsets
  summary: List the SearchIndexerSkillsets in an Azure Search service.
  signature: 'async get_skillsets(*, select: List[str] | None = None, **kwargs) ->
    List[SearchIndexerSkillset]'
  keywordOnlyParameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: List of SearchIndexerSkillsets
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.SearchIndexerSkillset>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.reset_indexer
  name: reset_indexer
  summary: Resets the change tracking state associated with an indexer.
  signature: 'async reset_indexer(name: str, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The name of the indexer to reset.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.search.documents.indexes.aio.SearchIndexerClient.run_indexer
  name: run_indexer
  summary: Run an indexer.
  signature: 'async run_indexer(name: str, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The name of the indexer to run.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
