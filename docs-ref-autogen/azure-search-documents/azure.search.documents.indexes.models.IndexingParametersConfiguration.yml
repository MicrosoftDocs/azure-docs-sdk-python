### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.IndexingParametersConfiguration
name: IndexingParametersConfiguration
fullName: azure.search.documents.indexes.models.IndexingParametersConfiguration
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated._serialization.Model
summary: 'A dictionary of indexer-specific configuration properties. Each name is
  the name of a specific

  property. Each value must be of a primitive type.'
constructor:
  syntax: 'IndexingParametersConfiguration(*, additional_properties: Dict[str, Any]
    | None = None, parsing_mode: str | _models.BlobIndexerParsingMode = ''default'',
    excluded_file_name_extensions: str = '''', indexed_file_name_extensions: str =
    '''', fail_on_unsupported_content_type: bool = False, fail_on_unprocessable_document:
    bool = False, index_storage_metadata_only_for_oversized_documents: bool = False,
    delimited_text_headers: str | None = None, delimited_text_delimiter: str | None
    = None, first_line_contains_headers: bool = True, document_root: str | None =
    None, data_to_extract: str | _models.BlobIndexerDataToExtract = ''contentAndMetadata'',
    image_action: str | _models.BlobIndexerImageAction = ''none'', allow_skillset_to_read_file_data:
    bool = False, pdf_text_rotation_algorithm: str | _models.BlobIndexerPDFTextRotationAlgorithm
    = ''none'', execution_environment: str | _models.IndexerExecutionEnvironment =
    ''standard'', query_timeout: str = ''00:05:00'', **kwargs: Any)'
  keywordOnlyParameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:any>]
  - name: parsing_mode
    description: 'Represents the parsing mode for indexing from an Azure blob data
      source.

      Known values are: "default", "text", "delimitedText", "json", "jsonArray", and
      "jsonLines".'
    defaultValue: default
    types:
    - <xref:str>
    - <xref:search_service_client.models.BlobIndexerParsingMode>
  - name: excluded_file_name_extensions
    description: 'Comma-delimited list of filename extensions to ignore

      when processing from Azure blob storage.  For example, you could exclude ".png,
      .mp4" to skip

      over those files during indexing.'
    types:
    - <xref:str>
  - name: indexed_file_name_extensions
    description: 'Comma-delimited list of filename extensions to select

      when processing from Azure blob storage.  For example, you could focus indexing
      on specific

      application files ".docx, .pptx, .msg" to specifically include those file types.'
    types:
    - <xref:str>
  - name: fail_on_unsupported_content_type
    description: 'For Azure blobs, set to false if you want to

      continue indexing when an unsupported content type is encountered, and you don''t
      know all the

      content types (file extensions) in advance.'
    types:
    - <xref:bool>
  - name: fail_on_unprocessable_document
    description: 'For Azure blobs, set to false if you want to continue

      indexing if a document fails indexing.'
    types:
    - <xref:bool>
  - name: index_storage_metadata_only_for_oversized_documents
    description: 'For Azure blobs, set this

      property to true to still index storage metadata for blob content that is too
      large to process.

      Oversized blobs are treated as errors by default. For limits on blob size, see

      [https://docs.microsoft.com/azure/search/search-limits-quotas-capacity](https://docs.microsoft.com/azure/search/search-limits-quotas-capacity).'
    types:
    - <xref:bool>
  - name: delimited_text_headers
    description: 'For CSV blobs, specifies a comma-delimited list of column

      headers, useful for mapping source fields to destination fields in an index.'
    types:
    - <xref:str>
  - name: delimited_text_delimiter
    description: 'For CSV blobs, specifies the end-of-line single-character

      delimiter for CSV files where each line starts a new document (for example,
      "|").'
    types:
    - <xref:str>
  - name: first_line_contains_headers
    description: 'For CSV blobs, indicates that the first (non-blank) line

      of each blob contains headers.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: document_root
    description: 'For JSON arrays, given a structured or semi-structured document,
      you

      can specify a path to the array using this property.'
    types:
    - <xref:str>
  - name: data_to_extract
    description: 'Specifies the data to extract from Azure blob storage and tells
      the

      indexer which data to extract from image content when "imageAction" is set to
      a value other

      than "none".  This applies to embedded image content in a .PDF or other application,
      or image

      files such as .jpg and .png, in Azure blobs. Known values are: "storageMetadata",

      "allMetadata", and "contentAndMetadata".'
    defaultValue: contentAndMetadata
    types:
    - <xref:str>
    - <xref:search_service_client.models.BlobIndexerDataToExtract>
  - name: image_action
    description: 'Determines how to process embedded images and image files in Azure
      blob

      storage.  Setting the "imageAction" configuration to any value other than "none"
      requires that

      a skillset also be attached to that indexer. Known values are: "none",

      "generateNormalizedImages", and "generateNormalizedImagePerPage".'
    defaultValue: none
    types:
    - <xref:str>
    - <xref:search_service_client.models.BlobIndexerImageAction>
  - name: allow_skillset_to_read_file_data
    description: 'If true, will create a path //document//file_data

      that is an object representing the original file data downloaded from your blob
      data source.

      This allows you to pass the original file data to a custom skill for processing
      within the

      enrichment pipeline, or to the Document Extraction skill.'
    types:
    - <xref:bool>
  - name: pdf_text_rotation_algorithm
    description: 'Determines algorithm for text extraction from PDF files

      in Azure blob storage. Known values are: "none" and "detectAngles".'
    defaultValue: none
    types:
    - <xref:str>
    - <xref:search_service_client.models.BlobIndexerPDFTextRotationAlgorithm>
  - name: execution_environment
    description: 'Specifies the environment in which the indexer should execute.

      Known values are: "standard" and "private".'
    defaultValue: standard
    types:
    - <xref:str>
    - <xref:search_service_client.models.IndexerExecutionEnvironment>
  - name: query_timeout
    description: 'Increases the timeout beyond the 5-minute default for Azure SQL

      database data sources, specified in the format "hh:mm:ss".'
    defaultValue: 00:05:00
    types:
    - <xref:str>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: 'Represents the parsing mode for indexing from an Azure blob data source.

    Known values are: "default", "text", "delimitedText", "json", "jsonArray", and
    "jsonLines".'
  name: parsing_mode
  types:
  - <xref:str>
  - <xref:search_service_client.models.BlobIndexerParsingMode>
- description: 'Comma-delimited list of filename extensions to ignore when

    processing from Azure blob storage.  For example, you could exclude ".png, .mp4"
    to skip over

    those files during indexing.'
  name: excluded_file_name_extensions
  types:
  - <xref:str>
- description: 'Comma-delimited list of filename extensions to select when

    processing from Azure blob storage.  For example, you could focus indexing on
    specific

    application files ".docx, .pptx, .msg" to specifically include those file types.'
  name: indexed_file_name_extensions
  types:
  - <xref:str>
- description: 'For Azure blobs, set to false if you want to continue

    indexing when an unsupported content type is encountered, and you don''t know
    all the content

    types (file extensions) in advance.'
  name: fail_on_unsupported_content_type
  types:
  - <xref:bool>
- description: 'For Azure blobs, set to false if you want to continue

    indexing if a document fails indexing.'
  name: fail_on_unprocessable_document
  types:
  - <xref:bool>
- description: 'For Azure blobs, set this property

    to true to still index storage metadata for blob content that is too large to
    process.

    Oversized blobs are treated as errors by default. For limits on blob size, see

    [https://docs.microsoft.com/azure/search/search-limits-quotas-capacity](https://docs.microsoft.com/azure/search/search-limits-quotas-capacity).'
  name: index_storage_metadata_only_for_oversized_documents
  types:
  - <xref:bool>
- description: 'For CSV blobs, specifies a comma-delimited list of column

    headers, useful for mapping source fields to destination fields in an index.'
  name: delimited_text_headers
  types:
  - <xref:str>
- description: 'For CSV blobs, specifies the end-of-line single-character

    delimiter for CSV files where each line starts a new document (for example, "|").'
  name: delimited_text_delimiter
  types:
  - <xref:str>
- description: 'For CSV blobs, indicates that the first (non-blank) line of

    each blob contains headers.'
  name: first_line_contains_headers
  types:
  - <xref:bool>
- description: 'For JSON arrays, given a structured or semi-structured document, you
    can

    specify a path to the array using this property.'
  name: document_root
  types:
  - <xref:str>
- description: 'Specifies the data to extract from Azure blob storage and tells the

    indexer which data to extract from image content when "imageAction" is set to
    a value other

    than "none".  This applies to embedded image content in a .PDF or other application,
    or image

    files such as .jpg and .png, in Azure blobs. Known values are: "storageMetadata",

    "allMetadata", and "contentAndMetadata".'
  name: data_to_extract
  types:
  - <xref:str>
  - <xref:search_service_client.models.BlobIndexerDataToExtract>
- description: 'Determines how to process embedded images and image files in Azure
    blob

    storage.  Setting the "imageAction" configuration to any value other than "none"
    requires that

    a skillset also be attached to that indexer. Known values are: "none",

    "generateNormalizedImages", and "generateNormalizedImagePerPage".'
  name: image_action
  types:
  - <xref:str>
  - <xref:search_service_client.models.BlobIndexerImageAction>
- description: 'If true, will create a path //document//file_data that

    is an object representing the original file data downloaded from your blob data
    source.  This

    allows you to pass the original file data to a custom skill for processing within
    the

    enrichment pipeline, or to the Document Extraction skill.'
  name: allow_skillset_to_read_file_data
  types:
  - <xref:bool>
- description: 'Determines algorithm for text extraction from PDF files in

    Azure blob storage. Known values are: "none" and "detectAngles".'
  name: pdf_text_rotation_algorithm
  types:
  - <xref:str>
  - <xref:search_service_client.models.BlobIndexerPDFTextRotationAlgorithm>
- description: 'Specifies the environment in which the indexer should execute.

    Known values are: "standard" and "private".'
  name: execution_environment
  types:
  - <xref:str>
  - <xref:search_service_client.models.IndexerExecutionEnvironment>
- description: 'Increases the timeout beyond the 5-minute default for Azure SQL database

    data sources, specified in the format "hh:mm:ss".'
  name: query_timeout
  types:
  - <xref:str>
methods:
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.IndexingParametersConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
