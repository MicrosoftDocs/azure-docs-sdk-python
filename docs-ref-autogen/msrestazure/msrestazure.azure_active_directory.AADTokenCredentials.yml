### YamlMime:PythonClass
uid: msrestazure.azure_active_directory.AADTokenCredentials
name: AADTokenCredentials
fullName: msrestazure.azure_active_directory.AADTokenCredentials
module: msrestazure.azure_active_directory
inheritances:
- msrestazure.azure_active_directory.AADMixin
summary: "Credentials objects for AAD token retrieved through external process\ne.g.\
  \ Python ADAL lib.\n\nIf you just provide \"token\", refresh will be done on Public\
  \ Azure with\ndefault public Azure \"resource\". You can set \"cloud_environment\"\
  ,\n\"tenant\", \"resource\" and \"client_id\" to change that behavior.\n\nOptional\
  \ kwargs may include:\n\n* cloud_environment (msrestazure.azure_cloud.Cloud): A\
  \ targeted cloud environment \n\n* china (bool): Configure auth for China-based\
  \ service, default is 'False'. \n\n* tenant (str): Alternative tenant, default is\
  \ 'common'. \n\n* resource (str): Alternative authentication resource, default is\
  \ '[https://management.core.windows.net/](https://management.core.windows.net/)'.\
  \ \n\n* verify (bool): Verify secure connection, default is 'True'. \n\n* cache\
  \ (adal.TokenCache): A adal.TokenCache, see ADAL configuration \n\nfor details.\
  \ This parameter is not used here and directly passed to ADAL."
constructor:
  syntax: AADTokenCredentials(token, client_id=None, **kwargs)
  parameters:
  - name: token
    description: Authentication token.
    isRequired: true
    types:
    - <xref:dict>
  - name: client_id
    description: 'Client ID, if not set, Xplat Client ID

      will be used.'
    isRequired: true
    types:
    - <xref:str>
