### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msrestazure.azure_active_directory.UserPassCredentials.set_token
  class: msrestazure.azure_active_directory.UserPassCredentials
  fullName: msrestazure.azure_active_directory.UserPassCredentials
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: msrest.authentication.Authentication
        type: msrest.authentication.BasicTokenAuthentication
      type: msrest.authentication.OAuthTokenAuthentication
    type: msrestazure.azure_active_directory.AADMixin
  langs:
  - python
  module: msrestazure.azure_active_directory
  name: UserPassCredentials
  summary: "Credentials object for Headless Authentication,\ni.e. AAD authentication\
    \ via username and password.\n\nHeadless Auth requires an AAD login (no a Live\
    \ ID) that already has\npermission to access the resource e.g. an organization\
    \ account, and\nthat 2-factor auth be disabled.\n\nOptional kwargs may include:\n\
    \n* cloud_environment (msrestazure.azure_cloud.Cloud): A targeted cloud environment\
    \ \n\n* china (bool): Configure auth for China-based service, default is 'False'.\
    \ \n\n* tenant (str): Alternative tenant, default is 'common'. \n\n* resource\
    \ (str): Alternative authentication resource, default is '[https://management.core.windows.net/](https://management.core.windows.net/)'.\
    \ \n\n* verify (bool): Verify secure connection, default is 'True'. \n\n* timeout\
    \ (int): Timeout of the request in seconds. \n\n* proxies (dict): Dictionary mapping\
    \ protocol or protocol and hostname to the URL of the proxy. \n\n* cache (adal.TokenCache):\
    \ A adal.TokenCache, see ADAL configuration \n\n\nfor details. This parameter\
    \ is not used here and directly passed to ADAL."
  syntax:
    content: UserPassCredentials(username, password, client_id=None, secret=None,
      **kwargs)
    parameters:
    - description: Account username.
      id: username
      type:
      - str
    - description: Account password.
      id: password
      type:
      - str
    - description: 'Client ID, if not set, Xplat Client ID

        will be used.'
      id: client_id
      type:
      - str
    - description: Client secret, only if required by server.
      id: secret
      type:
      - str
  type: class
  uid: msrestazure.azure_active_directory.UserPassCredentials
- class: msrestazure.azure_active_directory.UserPassCredentials
  fullName: msrestazure.azure_active_directory.UserPassCredentials.set_token
  langs:
  - python
  module: msrestazure.azure_active_directory
  name: set_token()
  namewithoutparameters: set_token
  summary: Get token using Username/Password credentials.
  syntax:
    content: set_token()
    parameters: []
  type: method
  uid: msrestazure.azure_active_directory.UserPassCredentials.set_token
references:
- fullName: msrestazure.azure_active_directory.UserPassCredentials.set_token
  isExternal: false
  name: set_token()
  parent: msrestazure.azure_active_directory.UserPassCredentials
  uid: msrestazure.azure_active_directory.UserPassCredentials.set_token
