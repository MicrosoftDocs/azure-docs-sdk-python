### YamlMime:PythonClass
uid: azure.ai.contentsafety.models.ImageData
name: ImageData
fullName: azure.ai.contentsafety.models.ImageData
module: azure.ai.contentsafety.models
inheritances:
- azure.ai.contentsafety._model_base.Model
summary: 'The image can be either base64 encoded bytes or a blob URL. You can choose
  only one of these

  options. If both are provided, the request will be refused. The maximum image size
  is 2048 x

  2048 pixels and should not exceed 4 MB, while the minimum image size is 50 x 50
  pixels.'
constructor:
  syntax: 'ImageData(*args: Any, **kwargs: Any)'
variables:
- description: The Base64 encoding of the image.
  name: content
  types:
  - <xref:bytes>
- description: The blob url of the image.
  name: blob_url
  types:
  - <xref:str>
methods:
- uid: azure.ai.contentsafety.models.ImageData.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.contentsafety.models.ImageData.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.contentsafety.models.ImageData.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.contentsafety.models.ImageData.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.contentsafety.models.ImageData.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.contentsafety.models.ImageData.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.contentsafety.models.ImageData.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.ImageData.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.contentsafety.models.ImageData.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.ImageData.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.contentsafety.models.ImageData.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.contentsafety.models.ImageData.blob_url
  name: blob_url
  summary: The blob url of the image.
  signature: 'blob_url: str | None'
- uid: azure.ai.contentsafety.models.ImageData.content
  name: content
  summary: The Base64 encoding of the image.
  signature: 'content: bytes | None'
