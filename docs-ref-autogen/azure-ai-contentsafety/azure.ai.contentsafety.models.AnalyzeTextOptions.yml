### YamlMime:PythonClass
uid: azure.ai.contentsafety.models.AnalyzeTextOptions
name: AnalyzeTextOptions
fullName: azure.ai.contentsafety.models.AnalyzeTextOptions
module: azure.ai.contentsafety.models
inheritances:
- azure.ai.contentsafety._model_base.Model
summary: 'The text analysis request.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'AnalyzeTextOptions(*args: Any, **kwargs: Any)'
variables:
- description: 'The text needs to be analyzed. We support a maximum of 10k Unicode
    characters

    (Unicode code points) in the text of one request. Required.'
  name: text
  types:
  - <xref:str>
- description: 'The categories will be analyzed. If they are not assigned, a default
    set of

    analysis results for the categories will be returned.'
  name: categories
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.ai.contentsafety.models.TextCategory>]
- description: The names of blocklists.
  name: blocklist_names
  types:
  - <xref:list>[<xref:str>]
- description: 'When set to true, further analyses of harmful content will not be

    performed in cases where blocklists are hit. When set to false, all analyses of
    harmful content

    will be performed, whether or not blocklists are hit.'
  name: halt_on_blocklist_hit
  types:
  - <xref:bool>
- description: 'This refers to the type of text analysis output. If no value is assigned,

    the default value will be "FourSeverityLevels". Known values are: "FourSeverityLevels"
    and

    "EightSeverityLevels".'
  name: output_type
  types:
  - <xref:str>
  - <xref:azure.ai.contentsafety.models.AnalyzeTextOutputType>
methods:
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.blocklist_names
  name: blocklist_names
  summary: The names of blocklists.
  signature: 'blocklist_names: List[str] | None'
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.categories
  name: categories
  summary: 'The categories will be analyzed. If they are not assigned, a default set
    of analysis results

    for the categories will be returned.'
  signature: 'categories: List[str | _models.TextCategory] | None'
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.halt_on_blocklist_hit
  name: halt_on_blocklist_hit
  summary: 'When set to true, further analyses of harmful content will not be performed
    in cases where

    blocklists are hit. When set to false, all analyses of harmful content will be
    performed,

    whether or not blocklists are hit.'
  signature: 'halt_on_blocklist_hit: bool | None'
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.output_type
  name: output_type
  summary: 'This refers to the type of text analysis output. If no value is assigned,
    the default value

    will be "FourSeverityLevels". Known values are: "FourSeverityLevels" and

    "EightSeverityLevels".'
  signature: 'output_type: str | _models.AnalyzeTextOutputType | None'
- uid: azure.ai.contentsafety.models.AnalyzeTextOptions.text
  name: text
  summary: 'The text needs to be analyzed. We support a maximum of 10k Unicode characters
    (Unicode code

    points) in the text of one request. Required.'
  signature: 'text: str'
