### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.TaskAddParameter
  fullName: azure.batch.models.TaskAddParameter
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: TaskAddParameter
  source:
    id: TaskAddParameter
    path: azure-batch\azure\batch\models\task_add_parameter.py
    remote:
      branch: master
      path: azure-batch\azure\batch\models\task_add_parameter.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'An Azure Batch task to add.


    Batch will retry tasks when a recovery operation is triggered on a compute

    node. Examples of recovery operations include (but are not limited to) when

    an unhealthy compute node is rebooted or a compute node disappeared due to

    host failure. Retries due to recovery operations are independent of and are

    not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is

    0, an internal retry due to a recovery operation may occur. Because of

    this, all tasks should be idempotent. This means tasks need to tolerate

    being interrupted and restarted without causing any corruption or duplicate

    data. The best practice for long running tasks is to use some form of

    checkpointing.

    '
  syntax:
    content: TaskAddParameter(id, command_line, display_name=None, container_settings=None,
      exit_conditions=None, resource_files=None, output_files=None, environment_settings=None,
      affinity_info=None, constraints=None, user_identity=None, multi_instance_settings=None,
      depends_on=None, application_package_references=None, authentication_token_settings=None)
    parameters:
    - description: 'A string that uniquely identifies the task within the job. The

        ID can contain any combination of alphanumeric characters including

        hyphens and underscores, and cannot contain more than 64 characters. The

        ID is case-preserving and case-insensitive (that is, you may not have two

        IDs within a job that differ only by case).

        '
      id: id
      type:
      - str
    - description: 'A display name for the task. The display name need

        not be unique and can contain any Unicode characters up to a maximum

        length of 1024.

        '
      id: display_name
      type:
      - str
    - description: 'The command line of the task. For multi-instance

        tasks, the command line is executed as the primary task, after the primary

        task and all subtasks have finished executing the coordination command

        line. The command line does not run under a shell, and therefore cannot

        take advantage of shell features such as environment variable expansion.

        If you want to take advantage of such features, you should invoke the

        shell in the command line, for example using "cmd /c MyCommand" in Windows

        or "/bin/sh -c MyCommand" in Linux. If the command line refers to file

        paths, it should use a relative path (relative to the task working

        directory), or use the Batch provided environment variable

        ([https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables](https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)).

        '
      id: command_line
      type:
      - str
    - description: 'The settings for the container under which the

        task runs. If the pool that will run this task has containerConfiguration

        set, this must be set as well. If the pool that will run this task doesn''t

        have containerConfiguration set, this must not be set. When this is

        specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR

        (the root of Azure Batch directories on the node) are mapped into the

        container, all task environment variables are mapped into the container,

        and the task command line is executed in the container.

        '
      id: container_settings
      type:
      - azure.batch.models.TaskContainerSettings
    - description: 'How the Batch service should respond when the task

        completes.

        '
      id: exit_conditions
      type:
      - azure.batch.models.ExitConditions
    - description: 'A list of files that the Batch service will

        download to the compute node before running the command line. For

        multi-instance tasks, the resource files will only be downloaded to the

        compute node on which the primary task is executed.

        '
      id: resource_files
      type:
      - list[azure.batch.models.ResourceFile]
    - description: 'A list of files that the Batch service will upload

        from the compute node after running the command line. For multi-instance

        tasks, the files will only be uploaded from the compute node on which the

        primary task is executed.

        '
      id: output_files
      type:
      - list[azure.batch.models.OutputFile]
    - description: 'A list of environment variable settings for

        the task.

        '
      id: environment_settings
      type:
      - list[azure.batch.models.EnvironmentSetting]
    - description: 'A locality hint that can be used by the Batch

        service to select a compute node on which to start the new task.

        '
      id: affinity_info
      type:
      - azure.batch.models.AffinityInformation
    - description: 'The execution constraints that apply to this task. If

        you do not specify constraints, the maxTaskRetryCount is the

        maxTaskRetryCount specified for the job, and the maxWallClockTime and

        retentionTime are infinite.

        '
      id: constraints
      type:
      - azure.batch.models.TaskConstraints
    - description: 'The user identity under which the task runs. If

        omitted, the task runs as a non-administrative user unique to the task.

        '
      id: user_identity
      type:
      - azure.batch.models.UserIdentity
    - description: 'An object that indicates that the task is

        a multi-instance task, and contains information about how to run the

        multi-instance task.

        '
      id: multi_instance_settings
      type:
      - azure.batch.models.MultiInstanceSettings
    - description: 'The tasks that this task depends on. This task will not

        be scheduled until all tasks that it depends on have completed

        successfully. If any of those tasks fail and exhaust their retry counts,

        this task will never be scheduled. If the job does not have

        usesTaskDependencies set to true, and this element is present, the request

        fails with error code TaskDependenciesNotSpecifiedOnJob.

        '
      id: depends_on
      type:
      - azure.batch.models.TaskDependencies
    - description: 'A list of application packages that

        the Batch service will deploy to the compute node before running the

        command line. Application packages are downloaded and deployed to a shared

        directory, not the task working directory. Therefore, if a referenced

        package is already on the compute node, and is up to date, then it is not

        re-downloaded; the existing copy on the compute node is used. If a

        referenced application package cannot be installed, for example because

        the package has been deleted or because download failed, the task fails.

        '
      id: application_package_references
      type:
      - list[azure.batch.models.ApplicationPackageReference]
    - description: 'The settings for an authentication

        token that the task can use to perform Batch service operations. If this

        property is set, the Batch service provides the task with an

        authentication token which can be used to authenticate Batch service

        operations without requiring an account access key. The token is provided

        via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations

        that the task can carry out using the token depend on the settings. For

        example, a task can request job permissions in order to add other tasks to

        the job, or check the status of the job or of other tasks under the job.

        '
      id: authentication_token_settings
      type:
      - azure.batch.models.AuthenticationTokenSettings
  type: class
  uid: azure.batch.models.TaskAddParameter
references:
- fullName: list[azure.batch.models.ResourceFile]
  name: list[ResourceFile]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ResourceFile
    name: ResourceFile
    uid: azure.batch.models.ResourceFile
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ResourceFile]
- fullName: list[azure.batch.models.OutputFile]
  name: list[OutputFile]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.OutputFile
    name: OutputFile
    uid: azure.batch.models.OutputFile
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.OutputFile]
- fullName: list[azure.batch.models.EnvironmentSetting]
  name: list[EnvironmentSetting]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.EnvironmentSetting
    name: EnvironmentSetting
    uid: azure.batch.models.EnvironmentSetting
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.EnvironmentSetting]
- fullName: list[azure.batch.models.ApplicationPackageReference]
  name: list[ApplicationPackageReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ApplicationPackageReference
    name: ApplicationPackageReference
    uid: azure.batch.models.ApplicationPackageReference
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ApplicationPackageReference]
