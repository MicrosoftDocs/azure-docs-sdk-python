### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.batch.models.PoolAddParameter
  fullName: azure.batch.models.PoolAddParameter
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.batch.models
  name: PoolAddParameter
  source:
    id: PoolAddParameter
    path: azure-batch\azure\batch\models\pool_add_parameter.py
    remote:
      branch: master
      path: azure-batch\azure\batch\models\pool_add_parameter.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'A pool in the Azure Batch service to add.

    '
  syntax:
    content: PoolAddParameter(id, vm_size, display_name=None, cloud_service_configuration=None,
      virtual_machine_configuration=None, resize_timeout=None, target_dedicated_nodes=None,
      target_low_priority_nodes=None, enable_auto_scale=None, auto_scale_formula=None,
      auto_scale_evaluation_interval=None, enable_inter_node_communication=None, network_configuration=None,
      start_task=None, certificate_references=None, application_package_references=None,
      application_licenses=None, max_tasks_per_node=None, task_scheduling_policy=None,
      user_accounts=None, metadata=None)
    parameters:
    - description: 'A string that uniquely identifies the pool within the account.

        The ID can contain any combination of alphanumeric characters including

        hyphens and underscores, and cannot contain more than 64 characters. The

        ID is case-preserving and case-insensitive (that is, you may not have two

        pool IDs within an account that differ only by case).

        '
      id: id
      type:
      - str
    - description: 'The display name for the pool. The display name need

        not be unique and can contain any Unicode characters up to a maximum

        length of 1024.

        '
      id: display_name
      type:
      - str
    - description: 'The size of virtual machines in the pool. All virtual

        machines in a pool are the same size. For information about available

        sizes of virtual machines for Cloud Services pools (pools created with

        cloudServiceConfiguration), see Sizes for Cloud Services

        ([https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/](https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/)).

        Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and

        A2V2. For information about available VM sizes for pools using images from

        the Virtual Machines Marketplace (pools created with

        virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)

        ([https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/](https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/))

        or Sizes for Virtual Machines (Windows)

        ([https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/](https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/)).

        Batch supports all Azure VM sizes except STANDARD_A0 and those with

        premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).

        '
      id: vm_size
      type:
      - str
    - description: 'The cloud service configuration for

        the pool. This property and virtualMachineConfiguration are mutually

        exclusive and one of the properties must be specified. This property

        cannot be specified if the Batch account was created with its

        poolAllocationMode property set to ''UserSubscription''.

        '
      id: cloud_service_configuration
      type:
      - azure.batch.models.CloudServiceConfiguration
    - description: 'The virtual machine configuration

        for the pool. This property and cloudServiceConfiguration are mutually

        exclusive and one of the properties must be specified.

        '
      id: virtual_machine_configuration
      type:
      - azure.batch.models.VirtualMachineConfiguration
    - description: 'The timeout for allocation of compute nodes to the

        pool. This timeout applies only to manual scaling; it has no effect when

        enableAutoScale is set to true. The default value is 15 minutes. The

        minimum value is 5 minutes. If you specify a value less than 5 minutes,

        the Batch service returns an error; if you are calling the REST API

        directly, the HTTP status code is 400 (Bad Request).

        '
      id: resize_timeout
      type:
      - timedelta
    - description: 'The desired number of dedicated compute

        nodes in the pool. This property must not be specified if enableAutoScale

        is set to true. If enableAutoScale is set to false, then you must set

        either targetDedicatedNodes, targetLowPriorityNodes, or both.

        '
      id: target_dedicated_nodes
      type:
      - int
    - description: 'The desired number of low-priority

        compute nodes in the pool. This property must not be specified if

        enableAutoScale is set to true. If enableAutoScale is set to false, then

        you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.

        '
      id: target_low_priority_nodes
      type:
      - int
    - description: 'Whether the pool size should automatically

        adjust over time. If false, at least one of targetDedicateNodes and

        targetLowPriorityNodes must be specified. If true, the autoScaleFormula

        property is required and the pool automatically resizes according to the

        formula. The default value is false.

        '
      id: enable_auto_scale
      type:
      - bool
    - description: 'A formula for the desired number of compute

        nodes in the pool. This property must not be specified if enableAutoScale

        is set to false. It is required if enableAutoScale is set to true. The

        formula is checked for validity before the pool is created. If the formula

        is not valid, the Batch service rejects the request with detailed error

        information. For more information about specifying this formula, see

        ''Automatically scale compute nodes in an Azure Batch pool''

        ([https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/](https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/)).

        '
      id: auto_scale_formula
      type:
      - str
    - description: 'The time interval at which to

        automatically adjust the pool size according to the autoscale formula. The

        default value is 15 minutes. The minimum and maximum value are 5 minutes

        and 168 hours respectively. If you specify a value less than 5 minutes or

        greater than 168 hours, the Batch service returns an error; if you are

        calling the REST API directly, the HTTP status code is 400 (Bad Request).

        '
      id: auto_scale_evaluation_interval
      type:
      - timedelta
    - description: 'Whether the pool permits direct

        communication between nodes. Enabling inter-node communication limits the

        maximum size of the pool due to deployment restrictions on the nodes of

        the pool. This may result in the pool not reaching its desired size. The

        default value is false.

        '
      id: enable_inter_node_communication
      type:
      - bool
    - description: 'The network configuration for the pool.

        '
      id: network_configuration
      type:
      - azure.batch.models.NetworkConfiguration
    - description: 'A task specified to run on each compute node as it

        joins the pool. The task runs when the node is added to the pool or when

        the node is restarted.

        '
      id: start_task
      type:
      - azure.batch.models.StartTask
    - description: 'The list of certificates to be installed on

        each compute node in the pool. For Windows compute nodes, the Batch

        service installs the certificates to the specified certificate store and

        location. For Linux compute nodes, the certificates are stored in a

        directory inside the task working directory and an environment variable

        AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this

        location. For certificates with visibility of ''remoteUser'', a ''certs''

        directory is created in the user''s home directory (e.g.,

        /home/{user-name}/certs) and certificates are placed in that directory.

        '
      id: certificate_references
      type:
      - list[azure.batch.models.CertificateReference]
    - description: 'The list of application packages to

        be installed on each compute node in the pool.

        '
      id: application_package_references
      type:
      - list[azure.batch.models.ApplicationPackageReference]
    - description: 'The list of application licenses the Batch

        service will make available on each compute node in the pool. The list of

        application licenses must be a subset of available Batch service

        application licenses. If a license is requested which is not supported,

        pool creation will fail.

        '
      id: application_licenses
      type:
      - list[str]
    - description: 'The maximum number of tasks that can run

        concurrently on a single compute node in the pool. The default value is 1.

        The maximum value of this setting depends on the size of the compute nodes

        in the pool (the vmSize setting).

        '
      id: max_tasks_per_node
      type:
      - int
    - description: 'How tasks are distributed across compute

        nodes in a pool.

        '
      id: task_scheduling_policy
      type:
      - azure.batch.models.TaskSchedulingPolicy
    - description: 'The list of user accounts to be created on each node

        in the pool.

        '
      id: user_accounts
      type:
      - list[azure.batch.models.UserAccount]
    - description: 'A list of name-value pairs associated with the pool as

        metadata. The Batch service does not assign any meaning to metadata; it is

        solely for the use of user code.

        '
      id: metadata
      type:
      - list[azure.batch.models.MetadataItem]
  type: class
  uid: azure.batch.models.PoolAddParameter
references:
- fullName: list[azure.batch.models.CertificateReference]
  name: list[CertificateReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.CertificateReference
    name: CertificateReference
    uid: azure.batch.models.CertificateReference
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.CertificateReference]
- fullName: list[azure.batch.models.ApplicationPackageReference]
  name: list[ApplicationPackageReference]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.ApplicationPackageReference
    name: ApplicationPackageReference
    uid: azure.batch.models.ApplicationPackageReference
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.ApplicationPackageReference]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[azure.batch.models.UserAccount]
  name: list[UserAccount]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.UserAccount
    name: UserAccount
    uid: azure.batch.models.UserAccount
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.UserAccount]
- fullName: list[azure.batch.models.MetadataItem]
  name: list[MetadataItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.MetadataItem
    name: MetadataItem
    uid: azure.batch.models.MetadataItem
  - fullName: ']'
    name: ']'
  uid: list[azure.batch.models.MetadataItem]
