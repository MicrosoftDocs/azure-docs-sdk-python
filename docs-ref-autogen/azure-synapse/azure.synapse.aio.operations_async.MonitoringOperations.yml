### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.synapse.aio.operations_async.MonitoringOperations.get_application_details
  - azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_data
  - azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_diagnostic
  - azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_graph
  - azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_properties
  - azure.synapse.aio.operations_async.MonitoringOperations.get_spark_job_list
  - azure.synapse.aio.operations_async.MonitoringOperations.models
  class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: MonitoringOperations
  summary: 'MonitoringOperations async operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: MonitoringOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.synapse.aio.operations_async.MonitoringOperations
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_application_details
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_application_details(workspace_name: str, pool_name: str, livy_id: str,
    **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
  namewithoutparameters: get_application_details
  summary: Get one spark application details given the workspace name, pool name and
    livyid.
  syntax:
    content: 'get_application_details(workspace_name: str, pool_name: str, livy_id:
      str, **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: The spark pool name.
      id: pool_name
      isRequired: true
      type:
      - str
    - description: The livy id.
      id: livy_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkJobListViewResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.SparkJobListViewResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_application_details
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_data
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_history_server_data(workspace_name: str, pool_name: str, livy_id: str,
    app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDataResponse'
  namewithoutparameters: get_history_server_data
  summary: Get History Server Data for a given workspace, pool, livyid, appid and
    attemptId.
  syntax:
    content: 'get_history_server_data(workspace_name: str, pool_name: str, livy_id:
      str, app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDataResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: The spark pool name.
      id: pool_name
      isRequired: true
      type:
      - str
    - description: The livy id.
      id: livy_id
      isRequired: true
      type:
      - str
    - description: The application id.
      id: app_id
      isRequired: true
      type:
      - str
    - description: The attempt id.
      id: attempt_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: HistoryServerDataResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.HistoryServerDataResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_data
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_diagnostic
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_history_server_diagnostic(workspace_name: str, pool_name: str, livy_id:
    str, app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDiagnosticResponse'
  namewithoutparameters: get_history_server_diagnostic
  summary: Get History Server Diagnostic Data for a given workspace, pool, livyid,
    appid and attemptId.
  syntax:
    content: 'get_history_server_diagnostic(workspace_name: str, pool_name: str, livy_id:
      str, app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDiagnosticResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: The spark pool name.
      id: pool_name
      isRequired: true
      type:
      - str
    - description: The livy id.
      id: livy_id
      isRequired: true
      type:
      - str
    - description: The application id.
      id: app_id
      isRequired: true
      type:
      - str
    - description: The attempt id.
      id: attempt_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: HistoryServerDiagnosticResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.HistoryServerDiagnosticResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_diagnostic
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_graph
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_history_server_graph(workspace_name: str, pool_name: str, livy_id: str,
    app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerGraphResponse'
  namewithoutparameters: get_history_server_graph
  summary: Get History Server Graph Data for a given workspace, pool, livyid, appid
    and attemptId.
  syntax:
    content: 'get_history_server_graph(workspace_name: str, pool_name: str, livy_id:
      str, app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerGraphResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: The spark pool name.
      id: pool_name
      isRequired: true
      type:
      - str
    - description: The livy id.
      id: livy_id
      isRequired: true
      type:
      - str
    - description: The application id.
      id: app_id
      isRequired: true
      type:
      - str
    - description: The attempt id.
      id: attempt_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: HistoryServerGraphResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.HistoryServerGraphResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_graph
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_properties
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_history_server_properties(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerPropertiesResponse'
  namewithoutparameters: get_history_server_properties
  summary: Get History server properties.
  syntax:
    content: 'get_history_server_properties(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerPropertiesResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: HistoryServerPropertiesResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.HistoryServerPropertiesResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_properties
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_spark_job_list
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_spark_job_list(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
  namewithoutparameters: get_spark_job_list
  summary: Get list of spark applications for the workspace.
  syntax:
    content: 'get_spark_job_list(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkJobListViewResponse or  or the result of cls(response)
      type:
      - azure.synapse.models.SparkJobListViewResponse
      - None
  type: method
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_spark_job_list
- class: azure.synapse.aio.operations_async.MonitoringOperations
  fullName: azure.synapse.aio.operations_async.MonitoringOperations.models
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.synapse.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\models\\__init__.py'>
  type: attribute
  uid: azure.synapse.aio.operations_async.MonitoringOperations.models
references:
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_application_details
  isExternal: false
  name: 'get_application_details(workspace_name: str, pool_name: str, livy_id: str,
    **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_application_details
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_data
  isExternal: false
  name: 'get_history_server_data(workspace_name: str, pool_name: str, livy_id: str,
    app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDataResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_data
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_diagnostic
  isExternal: false
  name: 'get_history_server_diagnostic(workspace_name: str, pool_name: str, livy_id:
    str, app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerDiagnosticResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_diagnostic
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_graph
  isExternal: false
  name: 'get_history_server_graph(workspace_name: str, pool_name: str, livy_id: str,
    app_id: str, attempt_id: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerGraphResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_graph
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_properties
  isExternal: false
  name: 'get_history_server_properties(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.HistoryServerPropertiesResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_history_server_properties
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.get_spark_job_list
  isExternal: false
  name: 'get_spark_job_list(workspace_name: str, **kwargs) -> azure.synapse.models._models_py3.SparkJobListViewResponse'
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.get_spark_job_list
- fullName: azure.synapse.aio.operations_async.MonitoringOperations.models
  isExternal: false
  name: models
  parent: azure.synapse.aio.operations_async.MonitoringOperations
  uid: azure.synapse.aio.operations_async.MonitoringOperations.models
