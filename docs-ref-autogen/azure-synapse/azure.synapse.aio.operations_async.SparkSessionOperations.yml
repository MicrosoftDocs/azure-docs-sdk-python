### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.synapse.aio.operations_async.SparkSessionOperations.create
  - azure.synapse.aio.operations_async.SparkSessionOperations.create_statement
  - azure.synapse.aio.operations_async.SparkSessionOperations.delete
  - azure.synapse.aio.operations_async.SparkSessionOperations.delete_statement
  - azure.synapse.aio.operations_async.SparkSessionOperations.get
  - azure.synapse.aio.operations_async.SparkSessionOperations.get_statement
  - azure.synapse.aio.operations_async.SparkSessionOperations.list
  - azure.synapse.aio.operations_async.SparkSessionOperations.list_statements
  - azure.synapse.aio.operations_async.SparkSessionOperations.reset_timeout
  - azure.synapse.aio.operations_async.SparkSessionOperations.models
  class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: SparkSessionOperations
  summary: 'SparkSessionOperations async operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: SparkSessionOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.synapse.aio.operations_async.SparkSessionOperations
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.create
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'create(workspace_name: str, spark_pool_name: str, livy_request: azure.synapse.models._models_py3.ExtendedLivySessionRequest,
    detailed: typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
  namewithoutparameters: create
  summary: Create new spark session.
  syntax:
    content: 'create(workspace_name: str, spark_pool_name: str, livy_request: azure.synapse.models._models_py3.ExtendedLivySessionRequest,
      detailed: typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Livy compatible batch job request payload.
      id: livy_request
      isRequired: true
      type:
      - azure.synapse.models.ExtendedLivySessionRequest
    - description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      isRequired: true
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ExtendedLivySessionResponse or the result of cls(response)
      type:
      - azure.synapse.models.ExtendedLivySessionResponse
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.create
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.create_statement
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'create_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    livy_request: azure.synapse.models._models_py3.LivyStatementRequestBody, **kwargs)
    -> azure.synapse.models._models_py3.LivyStatementResponseBody'
  namewithoutparameters: create_statement
  summary: Create statement within a spark session.
  syntax:
    content: 'create_statement(workspace_name: str, spark_pool_name: str, session_id:
      int, livy_request: azure.synapse.models._models_py3.LivyStatementRequestBody,
      **kwargs) -> azure.synapse.models._models_py3.LivyStatementResponseBody'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Livy compatible batch job request payload.
      id: livy_request
      isRequired: true
      type:
      - azure.synapse.models.LivyStatementRequestBody
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: LivyStatementResponseBody or the result of cls(response)
      type:
      - azure.synapse.models.LivyStatementResponseBody
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.create_statement
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.delete
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'delete(workspace_name: str, spark_pool_name: str, session_id: int, **kwargs)
    -> None'
  namewithoutparameters: delete
  summary: Cancels a running spark session.
  syntax:
    content: 'delete(workspace_name: str, spark_pool_name: str, session_id: int, **kwargs)
      -> None'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.delete
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.delete_statement
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'delete_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementCancellationResponse'
  namewithoutparameters: delete_statement
  summary: Kill a statement within a session.
  syntax:
    content: 'delete_statement(workspace_name: str, spark_pool_name: str, session_id:
      int, statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementCancellationResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Identifier for the statement.
      id: statement_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: LivyStatementCancellationResponse or the result of cls(response)
      type:
      - azure.synapse.models.LivyStatementCancellationResponse
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.delete_statement
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.get
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get(workspace_name: str, spark_pool_name: str, session_id: int, detailed:
    typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
  namewithoutparameters: get
  summary: Gets a single spark session.
  syntax:
    content: 'get(workspace_name: str, spark_pool_name: str, session_id: int, detailed:
      typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      isRequired: true
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ExtendedLivySessionResponse or the result of cls(response)
      type:
      - azure.synapse.models.ExtendedLivySessionResponse
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.get
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.get_statement
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'get_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementResponseBody'
  namewithoutparameters: get_statement
  summary: Gets a single statement within a spark session.
  syntax:
    content: 'get_statement(workspace_name: str, spark_pool_name: str, session_id:
      int, statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementResponseBody'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Identifier for the statement.
      id: statement_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: LivyStatementResponseBody or the result of cls(response)
      type:
      - azure.synapse.models.LivyStatementResponseBody
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.get_statement
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.list
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'list(workspace_name: str, spark_pool_name: str, from_parameter: typing.Union[int,
    NoneType] = None, size: typing.Union[int, NoneType] = None, detailed: typing.Union[bool,
    NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivyListSessionResponse'
  namewithoutparameters: list
  summary: List all spark sessions which are running under a particular spark pool.
  syntax:
    content: 'list(workspace_name: str, spark_pool_name: str, from_parameter: typing.Union[int,
      NoneType] = None, size: typing.Union[int, NoneType] = None, detailed: typing.Union[bool,
      NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivyListSessionResponse'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Optional param specifying which index the list should begin from.
      id: from_parameter
      isRequired: true
      type:
      - int
    - description: 'Optional param specifying the size of the returned list.

        By default it is 20 and that is the maximum.'
      id: size
      isRequired: true
      type:
      - int
    - description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      isRequired: true
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ExtendedLivyListSessionResponse or the result of cls(response)
      type:
      - azure.synapse.models.ExtendedLivyListSessionResponse
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.list
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.list_statements
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'list_statements(workspace_name: str, spark_pool_name: str, session_id: int,
    **kwargs) -> azure.synapse.models._models_py3.LivyStatementsResponseBody'
  namewithoutparameters: list_statements
  summary: Gets a list of statements within a spark session.
  syntax:
    content: 'list_statements(workspace_name: str, spark_pool_name: str, session_id:
      int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementsResponseBody'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: LivyStatementsResponseBody or the result of cls(response)
      type:
      - azure.synapse.models.LivyStatementsResponseBody
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.list_statements
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.reset_timeout
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: 'reset_timeout(workspace_name: str, spark_pool_name: str, session_id: int,
    **kwargs) -> None'
  namewithoutparameters: reset_timeout
  summary: Sends a keep alive call to the current session to reset the session timeout.
  syntax:
    content: 'reset_timeout(workspace_name: str, spark_pool_name: str, session_id:
      int, **kwargs) -> None'
    parameters:
    - description: The name of the workspace to execute operations on.
      id: workspace_name
      isRequired: true
      type:
      - str
    - description: Name of the spark pool. "ondemand" targets the ondemand pool.
      id: spark_pool_name
      isRequired: true
      type:
      - str
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.reset_timeout
- class: azure.synapse.aio.operations_async.SparkSessionOperations
  fullName: azure.synapse.aio.operations_async.SparkSessionOperations.models
  langs:
  - python
  module: azure.synapse.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.synapse.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\models\\__init__.py'>
  type: attribute
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.models
references:
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.create
  isExternal: false
  name: 'create(workspace_name: str, spark_pool_name: str, livy_request: azure.synapse.models._models_py3.ExtendedLivySessionRequest,
    detailed: typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.create
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.create_statement
  isExternal: false
  name: 'create_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    livy_request: azure.synapse.models._models_py3.LivyStatementRequestBody, **kwargs)
    -> azure.synapse.models._models_py3.LivyStatementResponseBody'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.create_statement
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.delete
  isExternal: false
  name: 'delete(workspace_name: str, spark_pool_name: str, session_id: int, **kwargs)
    -> None'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.delete
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.delete_statement
  isExternal: false
  name: 'delete_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementCancellationResponse'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.delete_statement
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.get
  isExternal: false
  name: 'get(workspace_name: str, spark_pool_name: str, session_id: int, detailed:
    typing.Union[bool, NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivySessionResponse'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.get
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.get_statement
  isExternal: false
  name: 'get_statement(workspace_name: str, spark_pool_name: str, session_id: int,
    statement_id: int, **kwargs) -> azure.synapse.models._models_py3.LivyStatementResponseBody'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.get_statement
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.list
  isExternal: false
  name: 'list(workspace_name: str, spark_pool_name: str, from_parameter: typing.Union[int,
    NoneType] = None, size: typing.Union[int, NoneType] = None, detailed: typing.Union[bool,
    NoneType] = None, **kwargs) -> azure.synapse.models._models_py3.ExtendedLivyListSessionResponse'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.list
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.list_statements
  isExternal: false
  name: 'list_statements(workspace_name: str, spark_pool_name: str, session_id: int,
    **kwargs) -> azure.synapse.models._models_py3.LivyStatementsResponseBody'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.list_statements
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.reset_timeout
  isExternal: false
  name: 'reset_timeout(workspace_name: str, spark_pool_name: str, session_id: int,
    **kwargs) -> None'
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.reset_timeout
- fullName: azure.synapse.aio.operations_async.SparkSessionOperations.models
  isExternal: false
  name: models
  parent: azure.synapse.aio.operations_async.SparkSessionOperations
  uid: azure.synapse.aio.operations_async.SparkSessionOperations.models
