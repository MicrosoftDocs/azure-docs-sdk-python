### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.common.mixins.ServiceBusMixin.create_queue
  - azure.servicebus.common.mixins.ServiceBusMixin.create_subscription
  - azure.servicebus.common.mixins.ServiceBusMixin.create_topic
  - azure.servicebus.common.mixins.ServiceBusMixin.delete_queue
  - azure.servicebus.common.mixins.ServiceBusMixin.delete_subscription
  - azure.servicebus.common.mixins.ServiceBusMixin.delete_topic
  class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: ServiceBusMixin
  summary: ''
  syntax: {}
  type: class
  uid: azure.servicebus.common.mixins.ServiceBusMixin
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_queue
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: create_queue(queue_name, lock_duration=30, max_size_in_megabytes=None, requires_duplicate_detection=False,
    requires_session=False, default_message_time_to_live=None, dead_lettering_on_message_expiration=False,
    duplicate_detection_history_time_window=None, max_delivery_count=None, enable_batched_operations=None)
  namewithoutparameters: create_queue
  summary: Create a queue entity.
  syntax:
    content: create_queue(queue_name, lock_duration=30, max_size_in_megabytes=None,
      requires_duplicate_detection=False, requires_session=False, default_message_time_to_live=None,
      dead_lettering_on_message_expiration=False, duplicate_detection_history_time_window=None,
      max_delivery_count=None, enable_batched_operations=None)
    parameters:
    - description: The name of the new queue.
      id: queue_name
      isRequired: true
      type:
      - str
    - defaultValue: '30'
      description: The lock durection in seconds for each message in the queue.
      id: lock_duration
      type:
      - int
    - defaultValue: None
      description: The max size to allow the queue to grow to.
      id: max_size_in_megabytes
      type:
      - int
    - defaultValue: 'False'
      description: 'Whether the queue will require every message with

        a specified time frame to have a unique ID. Non-unique messages will be discarded.

        Default value is False.'
      id: requires_duplicate_detection
      type:
      - bool
    - defaultValue: 'False'
      description: 'Whether the queue will be sessionful, and therefore require all

        message to have a Session ID and be received by a sessionful receiver.

        Default value is False.'
      id: requires_session
      type:
      - bool
    - defaultValue: None
      description: 'The length of time a message will remain in the queue

        before it is either discarded or moved to the dead letter queue.'
      id: default_message_time_to_live
      type:
      - datetime.timedelta
    - defaultValue: 'False'
      description: 'Whether to move expired messages to the

        dead letter queue. Default value is False.'
      id: dead_lettering_on_message_expiration
      type:
      - bool
    - defaultValue: None
      description: 'The period within which all incoming messages

        must have a unique message ID.'
      id: duplicate_detection_history_time_window
      type:
      - datetime.timedelta
    - defaultValue: None
      description: 'The maximum number of times a message will attempt to be delivered

        before it is moved to the dead letter queue.'
      id: max_delivery_count
      type:
      - int
    - defaultValue: None
      description: ''
      id: enable_batched_operations
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_queue
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_subscription
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: create_subscription(topic_name, subscription_name, lock_duration=30, requires_session=None,
    default_message_time_to_live=None, dead_lettering_on_message_expiration=None,
    dead_lettering_on_filter_evaluation_exceptions=None, enable_batched_operations=None,
    max_delivery_count=None)
  namewithoutparameters: create_subscription
  summary: Create a subscription entity.
  syntax:
    content: create_subscription(topic_name, subscription_name, lock_duration=30,
      requires_session=None, default_message_time_to_live=None, dead_lettering_on_message_expiration=None,
      dead_lettering_on_filter_evaluation_exceptions=None, enable_batched_operations=None,
      max_delivery_count=None)
    parameters:
    - description: The name of the topic under which to create the subscription.
      id: topic_name
      isRequired: true
    - description: The name of the new subscription.
      id: subscription_name
      isRequired: true
      type:
      - str
    - defaultValue: '30'
      description: The lock durection in seconds for each message in the subscription.
      id: lock_duration
      type:
      - int
    - defaultValue: None
      description: 'Whether the subscription will be sessionful, and therefore require
        all

        message to have a Session ID and be received by a sessionful receiver.

        Default value is False.'
      id: requires_session
      type:
      - bool
    - defaultValue: None
      description: 'The length of time a message will remain in the subscription

        before it is either discarded or moved to the dead letter queue.'
      id: default_message_time_to_live
      type:
      - datetime.timedelta
    - defaultValue: None
      description: 'Whether to move expired messages to the

        dead letter queue. Default value is False.'
      id: dead_lettering_on_message_expiration
      type:
      - bool
    - defaultValue: None
      description: 'Whether to move messages that error on

        filtering into the dead letter queue. Default is False, and the messages will
        be discarded.'
      id: dead_lettering_on_filter_evaluation_exceptions
      type:
      - bool
    - defaultValue: None
      description: 'The maximum number of times a message will attempt to be delivered

        before it is moved to the dead letter queue.'
      id: max_delivery_count
      type:
      - int
    - defaultValue: None
      description: ''
      id: enable_batched_operations
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_subscription
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_topic
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: create_topic(topic_name, default_message_time_to_live=None, max_size_in_megabytes=None,
    requires_duplicate_detection=None, duplicate_detection_history_time_window=None,
    enable_batched_operations=None)
  namewithoutparameters: create_topic
  summary: Create a topic entity.
  syntax:
    content: create_topic(topic_name, default_message_time_to_live=None, max_size_in_megabytes=None,
      requires_duplicate_detection=None, duplicate_detection_history_time_window=None,
      enable_batched_operations=None)
    parameters:
    - description: The name of the new topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The max size to allow the topic to grow to.
      id: max_size_in_megabytes
      type:
      - int
    - defaultValue: None
      description: 'Whether the topic will require every message with

        a specified time frame to have a unique ID. Non-unique messages will be discarded.

        Default value is False.'
      id: requires_duplicate_detection
      type:
      - bool
    - defaultValue: None
      description: 'The length of time a message will remain in the topic

        before it is either discarded or moved to the dead letter queue.'
      id: default_message_time_to_live
      type:
      - datetime.timedelta
    - defaultValue: None
      description: 'The period within which all incoming messages

        must have a unique message ID.'
      id: duplicate_detection_history_time_window
      type:
      - datetime.timedelta
    - defaultValue: None
      description: ''
      id: enable_batched_operations
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_topic
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_queue
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: delete_queue(queue_name, fail_not_exist=False)
  namewithoutparameters: delete_queue
  summary: Delete a queue entity.
  syntax:
    content: delete_queue(queue_name, fail_not_exist=False)
    parameters:
    - description: The name of the queue to delete.
      id: queue_name
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Whether to raise an exception if the named queue is not

        found. If set to True, a ServiceBusResourceNotFound will be raised.

        Default value is False.'
      id: fail_not_exist
      type:
      - bool
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_queue
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_subscription
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: delete_subscription(topic_name, subscription_name, fail_not_exist=False)
  namewithoutparameters: delete_subscription
  summary: Delete a subscription entity.
  syntax:
    content: delete_subscription(topic_name, subscription_name, fail_not_exist=False)
    parameters:
    - description: The name of the topic where the subscription is.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The name of the subscription to delete.
      id: subscription_name
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Whether to raise an exception if the named subscription or

        topic is not found. If set to True, a ServiceBusResourceNotFound will be raised.

        Default value is False.'
      id: fail_not_exist
      type:
      - bool
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_subscription
- class: azure.servicebus.common.mixins.ServiceBusMixin
  fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_topic
  langs:
  - python
  module: azure.servicebus.common.mixins
  name: delete_topic(topic_name, fail_not_exist=False)
  namewithoutparameters: delete_topic
  summary: Delete a topic entity.
  syntax:
    content: delete_topic(topic_name, fail_not_exist=False)
    parameters:
    - description: The name of the topic to delete.
      id: topic_name
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'Whether to raise an exception if the named topic is not

        found. If set to True, a ServiceBusResourceNotFound will be raised.

        Default value is False.'
      id: fail_not_exist
      type:
      - bool
  type: method
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_topic
references:
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_queue
  isExternal: false
  name: create_queue(queue_name, lock_duration=30, max_size_in_megabytes=None, requires_duplicate_detection=False,
    requires_session=False, default_message_time_to_live=None, dead_lettering_on_message_expiration=False,
    duplicate_detection_history_time_window=None, max_delivery_count=None, enable_batched_operations=None)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_queue
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_subscription
  isExternal: false
  name: create_subscription(topic_name, subscription_name, lock_duration=30, requires_session=None,
    default_message_time_to_live=None, dead_lettering_on_message_expiration=None,
    dead_lettering_on_filter_evaluation_exceptions=None, enable_batched_operations=None,
    max_delivery_count=None)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_subscription
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.create_topic
  isExternal: false
  name: create_topic(topic_name, default_message_time_to_live=None, max_size_in_megabytes=None,
    requires_duplicate_detection=None, duplicate_detection_history_time_window=None,
    enable_batched_operations=None)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.create_topic
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_queue
  isExternal: false
  name: delete_queue(queue_name, fail_not_exist=False)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_queue
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_subscription
  isExternal: false
  name: delete_subscription(topic_name, subscription_name, fail_not_exist=False)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_subscription
- fullName: azure.servicebus.common.mixins.ServiceBusMixin.delete_topic
  isExternal: false
  name: delete_topic(topic_name, fail_not_exist=False)
  parent: azure.servicebus.common.mixins.ServiceBusMixin
  uid: azure.servicebus.common.mixins.ServiceBusMixin.delete_topic
