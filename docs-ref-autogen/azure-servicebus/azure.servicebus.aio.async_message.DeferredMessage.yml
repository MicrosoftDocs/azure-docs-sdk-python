### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.aio.async_message.DeferredMessage.abandon
  - azure.servicebus.aio.async_message.DeferredMessage.complete
  - azure.servicebus.aio.async_message.DeferredMessage.dead_letter
  - azure.servicebus.aio.async_message.DeferredMessage.defer
  class: azure.servicebus.aio.async_message.DeferredMessage
  fullName: azure.servicebus.aio.async_message.DeferredMessage
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.servicebus.common.message.Message
    type: azure.servicebus.aio.async_message.Message
  langs:
  - python
  module: azure.servicebus.aio.async_message
  name: DeferredMessage
  summary: 'A message that has been deferred.


    A deferred message can be completed,

    abandoned, or dead-lettered, however it cannot be deferred again.'
  syntax:
    content: DeferredMessage(deferred, mode)
  type: class
  uid: azure.servicebus.aio.async_message.DeferredMessage
- class: azure.servicebus.aio.async_message.DeferredMessage
  fullName: azure.servicebus.aio.async_message.DeferredMessage.abandon
  langs:
  - python
  module: azure.servicebus.aio.async_message
  name: abandon()
  namewithoutparameters: abandon
  summary: Abandon the message. This message will be returned to the queue to be reprocessed.
  syntax:
    content: abandon()
    parameters: []
  type: method
  uid: azure.servicebus.aio.async_message.DeferredMessage.abandon
- class: azure.servicebus.aio.async_message.DeferredMessage
  fullName: azure.servicebus.aio.async_message.DeferredMessage.complete
  langs:
  - python
  module: azure.servicebus.aio.async_message
  name: complete()
  namewithoutparameters: complete
  summary: 'Complete the message.


    This removes the message from the queue.'
  syntax:
    content: complete()
    parameters: []
  type: method
  uid: azure.servicebus.aio.async_message.DeferredMessage.complete
- class: azure.servicebus.aio.async_message.DeferredMessage
  fullName: azure.servicebus.aio.async_message.DeferredMessage.dead_letter
  langs:
  - python
  module: azure.servicebus.aio.async_message
  name: dead_letter(description=None)
  namewithoutparameters: dead_letter
  summary: 'Move the message to the Dead Letter queue.


    The Dead Letter queue is a sub-queue that can be

    used to store messages that failed to process correctly, or otherwise require
    further inspection

    or processing. The queue can also be configured to send expired messages to the
    Dead Letter queue.

    To receive dead-lettered messages, use *QueueClient.get_deadletter_receiver()*
    or

    *SubscriptionClient.get_deadletter_receiver()*.'
  syntax:
    content: dead_letter(description=None)
    parameters:
    - defaultValue: None
      description: The reason for dead-lettering the message.
      id: description
      type:
      - str
  type: method
  uid: azure.servicebus.aio.async_message.DeferredMessage.dead_letter
- class: azure.servicebus.aio.async_message.DeferredMessage
  fullName: azure.servicebus.aio.async_message.DeferredMessage.defer
  langs:
  - python
  module: azure.servicebus.aio.async_message
  name: defer()
  namewithoutparameters: defer
  summary: A DeferredMessage cannot be deferred. Raises *ValueError*.
  syntax:
    content: defer()
    parameters: []
  type: method
  uid: azure.servicebus.aio.async_message.DeferredMessage.defer
references:
- fullName: azure.servicebus.aio.async_message.DeferredMessage.abandon
  isExternal: false
  name: abandon()
  parent: azure.servicebus.aio.async_message.DeferredMessage
  uid: azure.servicebus.aio.async_message.DeferredMessage.abandon
- fullName: azure.servicebus.aio.async_message.DeferredMessage.complete
  isExternal: false
  name: complete()
  parent: azure.servicebus.aio.async_message.DeferredMessage
  uid: azure.servicebus.aio.async_message.DeferredMessage.complete
- fullName: azure.servicebus.aio.async_message.DeferredMessage.dead_letter
  isExternal: false
  name: dead_letter(description=None)
  parent: azure.servicebus.aio.async_message.DeferredMessage
  uid: azure.servicebus.aio.async_message.DeferredMessage.dead_letter
- fullName: azure.servicebus.aio.async_message.DeferredMessage.defer
  isExternal: false
  name: defer()
  parent: azure.servicebus.aio.async_message.DeferredMessage
  uid: azure.servicebus.aio.async_message.DeferredMessage.defer
