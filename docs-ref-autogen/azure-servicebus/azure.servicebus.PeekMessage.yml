### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.PeekMessage.abandon
  - azure.servicebus.PeekMessage.complete
  - azure.servicebus.PeekMessage.dead_letter
  - azure.servicebus.PeekMessage.defer
  - azure.servicebus.PeekMessage.renew_lock
  class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.servicebus.common.message.Message
  langs:
  - python
  module: azure.servicebus
  name: PeekMessage
  summary: 'A preview message.


    This message is still on the queue, and unlocked.

    A peeked message cannot be completed, abandoned, dead-lettered or deferred.

    It has no lock token or expiry.'
  syntax:
    content: PeekMessage(message)
  type: class
  uid: azure.servicebus.PeekMessage
- class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage.abandon
  langs:
  - python
  module: azure.servicebus
  name: abandon()
  namewithoutparameters: abandon
  summary: A PeekMessage cannot be abandoned. Raises *TypeError*.
  syntax:
    content: abandon()
    parameters: []
  type: method
  uid: azure.servicebus.PeekMessage.abandon
- class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage.complete
  langs:
  - python
  module: azure.servicebus
  name: complete()
  namewithoutparameters: complete
  summary: A PeekMessage cannot be completed Raises *TypeError*.
  syntax:
    content: complete()
    parameters: []
  type: method
  uid: azure.servicebus.PeekMessage.complete
- class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage.dead_letter
  langs:
  - python
  module: azure.servicebus
  name: dead_letter(description=None)
  namewithoutparameters: dead_letter
  summary: A PeekMessage cannot be dead-lettered. Raises *TypeError*.
  syntax:
    content: dead_letter(description=None)
    parameters:
    - defaultValue: None
      id: description
  type: method
  uid: azure.servicebus.PeekMessage.dead_letter
- class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage.defer
  langs:
  - python
  module: azure.servicebus
  name: defer()
  namewithoutparameters: defer
  summary: A PeekMessage cannot be deferred. Raises *TypeError*.
  syntax:
    content: defer()
    parameters: []
  type: method
  uid: azure.servicebus.PeekMessage.defer
- class: azure.servicebus.PeekMessage
  fullName: azure.servicebus.PeekMessage.renew_lock
  langs:
  - python
  module: azure.servicebus
  name: renew_lock()
  namewithoutparameters: renew_lock
  summary: A PeekMessage cannot be renewed. Raises *TypeError*.
  syntax:
    content: renew_lock()
    parameters: []
  type: method
  uid: azure.servicebus.PeekMessage.renew_lock
references:
- fullName: azure.servicebus.PeekMessage.abandon
  isExternal: false
  name: abandon()
  parent: azure.servicebus.PeekMessage
  uid: azure.servicebus.PeekMessage.abandon
- fullName: azure.servicebus.PeekMessage.complete
  isExternal: false
  name: complete()
  parent: azure.servicebus.PeekMessage
  uid: azure.servicebus.PeekMessage.complete
- fullName: azure.servicebus.PeekMessage.dead_letter
  isExternal: false
  name: dead_letter(description=None)
  parent: azure.servicebus.PeekMessage
  uid: azure.servicebus.PeekMessage.dead_letter
- fullName: azure.servicebus.PeekMessage.defer
  isExternal: false
  name: defer()
  parent: azure.servicebus.PeekMessage
  uid: azure.servicebus.PeekMessage.defer
- fullName: azure.servicebus.PeekMessage.renew_lock
  isExternal: false
  name: renew_lock()
  parent: azure.servicebus.PeekMessage
  uid: azure.servicebus.PeekMessage.renew_lock
