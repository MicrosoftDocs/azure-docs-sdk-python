### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.aio.ServiceBusClient.from_connection_string
  - azure.servicebus.aio.ServiceBusClient.get_queue
  - azure.servicebus.aio.ServiceBusClient.get_subscription
  - azure.servicebus.aio.ServiceBusClient.get_topic
  - azure.servicebus.aio.ServiceBusClient.list_queues
  - azure.servicebus.aio.ServiceBusClient.list_subscriptions
  - azure.servicebus.aio.ServiceBusClient.list_topics
  class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.servicebus.common.mixins.ServiceBusMixin
  langs:
  - python
  module: azure.servicebus.aio
  name: ServiceBusClient
  summary: A Service Bus client for a namespace with the specified SAS authentication
    settings.
  syntax:
    content: ServiceBusClient(*, service_namespace=None, host_base='.servicebus.windows.net',
      shared_access_key_name=None, shared_access_key_value=None, loop=None, http_request_timeout=65,
      http_request_session=None, debug=False)
    parameters:
    - description: Service Bus namespace, required for all operations.
      id: service_namespace
      type:
      - str
    - description: Optional. Live host base URL. Defaults to Azure URL.
      id: host_base
      type:
      - str
    - description: SAS authentication key name.
      id: shared_access_key_name
      type:
      - str
    - description: SAS authentication key value.
      id: shared_access_key_value
      type:
      - str
    - description: An async event loop.
      id: loop
    - description: Optional. Timeout for the HTTP request, in seconds.
      id: http_request_timeout
      type:
      - int
    - description: Optional. Session object to use for HTTP requests.
      id: http_request_session
    - description: Whether to output AMQP network trace to the logger.
      id: debug
      type:
      - bool
  type: class
  uid: azure.servicebus.aio.ServiceBusClient
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.from_connection_string
  langs:
  - python
  module: azure.servicebus.aio
  name: from_connection_string(conn_str, *, loop=None, **kwargs)
  namewithoutparameters: from_connection_string
  summary: Create a Service Bus client from a connection string.
  syntax:
    content: from_connection_string(conn_str, *, loop=None, **kwargs)
    parameters:
    - description: The connection string.
      id: conn_str
      isRequired: true
      type:
      - str
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.from_connection_string
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.get_queue
  langs:
  - python
  module: azure.servicebus.aio
  name: get_queue(queue_name)
  namewithoutparameters: get_queue
  summary: Get an async client for a queue entity.
  syntax:
    content: get_queue(queue_name)
    parameters:
    - description: The name of the queue.
      id: queue_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.aio.async_client.QueueClient
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.get_queue
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.get_subscription
  langs:
  - python
  module: azure.servicebus.aio
  name: get_subscription(topic_name, subscription_name)
  namewithoutparameters: get_subscription
  summary: Get an async client for a subscription entity.
  syntax:
    content: get_subscription(topic_name, subscription_name)
    parameters:
    - description: The name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: The name of the subscription.
      id: subscription_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.aio.async_client.SubscriptionClient
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.get_subscription
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.get_topic
  langs:
  - python
  module: azure.servicebus.aio
  name: get_topic(topic_name)
  namewithoutparameters: get_topic
  summary: Get an async client for a topic entity.
  syntax:
    content: get_topic(topic_name)
    parameters:
    - description: The name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.aio.async_client.TopicClient
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.get_topic
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.list_queues
  langs:
  - python
  module: azure.servicebus.aio
  name: list_queues()
  namewithoutparameters: list_queues
  summary: Get async clients for all queue entities in the namespace.
  syntax:
    content: list_queues()
    parameters: []
    return:
      type:
      - list[azure.servicebus.aio.async_client.QueueClient]
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.list_queues
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.list_subscriptions
  langs:
  - python
  module: azure.servicebus.aio
  name: list_subscriptions(topic_name)
  namewithoutparameters: list_subscriptions
  summary: Get an async client for all subscription entities in the topic.
  syntax:
    content: list_subscriptions(topic_name)
    parameters:
    - description: The topic to list subscriptions for.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      type:
      - list[azure.servicebus.aio.async_client.SubscriptionClient]
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.list_subscriptions
- class: azure.servicebus.aio.ServiceBusClient
  fullName: azure.servicebus.aio.ServiceBusClient.list_topics
  langs:
  - python
  module: azure.servicebus.aio
  name: list_topics()
  namewithoutparameters: list_topics
  summary: Get an async client for all topic entities in the namespace.
  syntax:
    content: list_topics()
    parameters: []
    return:
      type:
      - list[azure.servicebus.aio.async_client.TopicClient]
  type: method
  uid: azure.servicebus.aio.ServiceBusClient.list_topics
references:
- fullName: azure.servicebus.aio.ServiceBusClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, *, loop=None, **kwargs)
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.from_connection_string
- fullName: azure.servicebus.aio.ServiceBusClient.get_queue
  isExternal: false
  name: get_queue(queue_name)
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.get_queue
- fullName: azure.servicebus.aio.ServiceBusClient.get_subscription
  isExternal: false
  name: get_subscription(topic_name, subscription_name)
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.get_subscription
- fullName: azure.servicebus.aio.ServiceBusClient.get_topic
  isExternal: false
  name: get_topic(topic_name)
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.get_topic
- fullName: azure.servicebus.aio.ServiceBusClient.list_queues
  isExternal: false
  name: list_queues()
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.list_queues
- fullName: azure.servicebus.aio.ServiceBusClient.list_subscriptions
  isExternal: false
  name: list_subscriptions(topic_name)
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.list_subscriptions
- fullName: azure.servicebus.aio.ServiceBusClient.list_topics
  isExternal: false
  name: list_topics()
  parent: azure.servicebus.aio.ServiceBusClient
  uid: azure.servicebus.aio.ServiceBusClient.list_topics
- fullName: list[azure.servicebus.aio.async_client.QueueClient]
  name: list[QueueClient]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.aio.async_client.QueueClient
    name: QueueClient
    uid: azure.servicebus.aio.async_client.QueueClient
  - fullName: ']'
    name: ']'
  uid: list[azure.servicebus.aio.async_client.QueueClient]
- fullName: list[azure.servicebus.aio.async_client.SubscriptionClient]
  name: list[SubscriptionClient]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.aio.async_client.SubscriptionClient
    name: SubscriptionClient
    uid: azure.servicebus.aio.async_client.SubscriptionClient
  - fullName: ']'
    name: ']'
  uid: list[azure.servicebus.aio.async_client.SubscriptionClient]
- fullName: list[azure.servicebus.aio.async_client.TopicClient]
  name: list[TopicClient]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.aio.async_client.TopicClient
    name: TopicClient
    uid: azure.servicebus.aio.async_client.TopicClient
  - fullName: ']'
    name: ']'
  uid: list[azure.servicebus.aio.async_client.TopicClient]
