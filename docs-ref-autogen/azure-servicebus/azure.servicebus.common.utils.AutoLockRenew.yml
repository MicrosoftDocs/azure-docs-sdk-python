### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.common.utils.AutoLockRenew.register
  - azure.servicebus.common.utils.AutoLockRenew.shutdown
  class: azure.servicebus.common.utils.AutoLockRenew
  fullName: azure.servicebus.common.utils.AutoLockRenew
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus.common.utils
  name: AutoLockRenew
  summary: Auto renew locks for messages and sessions using a background thread pool.
  syntax:
    content: AutoLockRenew(executor=None, max_workers=None)
    parameters:
    - description: 'A user-specified thread pool. This cannot be combined with

        setting *max_workers*.'
      id: executor
      type:
      - concurrent.futures.ThreadPoolExecutor
    - description: 'Specifiy the maximum workers in the thread pool. If not

        specified the number used will be derived from the core count of the environment.

        This cannot be combined with *executor*.'
      id: max_workers
      type:
      - int
  type: class
  uid: azure.servicebus.common.utils.AutoLockRenew
- class: azure.servicebus.common.utils.AutoLockRenew
  fullName: azure.servicebus.common.utils.AutoLockRenew.register
  langs:
  - python
  module: azure.servicebus.common.utils
  name: register(renewable, timeout=300)
  namewithoutparameters: register
  summary: Register a renewable entity for automatic lock renewal.
  syntax:
    content: register(renewable, timeout=300)
    parameters:
    - description: A locked entity that needs to be renewed.
      id: renewable
      isRequired: true
      type:
      - azure.servicebus.common.message.Message
      - azure.servicebus.receive_handler.SessionReceiver
    - defaultValue: '300'
      description: 'A time in seconds that the lock should be maintained for.

        Default value is 300 (5 minutes).'
      id: timeout
      type:
      - int
  type: method
  uid: azure.servicebus.common.utils.AutoLockRenew.register
- class: azure.servicebus.common.utils.AutoLockRenew
  fullName: azure.servicebus.common.utils.AutoLockRenew.shutdown
  langs:
  - python
  module: azure.servicebus.common.utils
  name: shutdown(wait=True)
  namewithoutparameters: shutdown
  summary: Shutdown the thread pool to clean up any remaining lock renewal threads.
  syntax:
    content: shutdown(wait=True)
    parameters:
    - defaultValue: 'True'
      description: Whether to block until thread pool has shutdown. Default is *True*.
      id: wait
      type:
      - bool
  type: method
  uid: azure.servicebus.common.utils.AutoLockRenew.shutdown
references:
- fullName: azure.servicebus.common.utils.AutoLockRenew.register
  isExternal: false
  name: register(renewable, timeout=300)
  parent: azure.servicebus.common.utils.AutoLockRenew
  uid: azure.servicebus.common.utils.AutoLockRenew.register
- fullName: azure.servicebus.common.utils.AutoLockRenew.shutdown
  isExternal: false
  name: shutdown(wait=True)
  parent: azure.servicebus.common.utils.AutoLockRenew
  uid: azure.servicebus.common.utils.AutoLockRenew.shutdown
