### YamlMime:PythonClass
uid: azure.servicebus.AutoLockRenewer
name: AutoLockRenewer
fullName: azure.servicebus.AutoLockRenewer
module: azure.servicebus
inheritances:
- builtins.object
summary: 'Auto renew locks for messages and sessions using a background thread pool.


  Auto renew locks for messages and sessions using a background thread pool. It is
  recommended

  setting max_worker to a large number or passing ThreadPoolExecutor of large max_workers
  number when

  AutoLockRenewer is supposed to deal with multiple messages or sessions simultaneously.'
constructor:
  syntax: 'AutoLockRenewer(max_lock_renewal_duration: float = 300, on_lock_renew_failure:
    LockRenewFailureCallback | None = None, executor: ThreadPoolExecutor | None =
    None, max_workers: int | None = None)'
  parameters:
  - name: max_lock_renewal_duration
    description: 'A time in seconds that locks registered to this renewer

      should be maintained for. Default value is 300 (5 minutes).'
    defaultValue: '300'
    types:
    - <xref:float>
  - name: on_lock_renew_failure
    description: 'A callback may be specified to be called when the lock is lost on
      the renewable

      that is being registered. Default value is None (no callback).'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:LockRenewFailureCallback>]
  - name: executor
    description: 'A user-specified thread pool. This cannot be combined with

      setting *max_workers*.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:concurrent.futures.ThreadPoolExecutor>]
  - name: max_workers
    description: 'Specify the maximum workers in the thread pool. If not

      specified the number used will be derived from the core count of the environment.

      This cannot be combined with *executor*.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: max_lock_renewal_duration
    description: 'A time in seconds that locks registered to this renewer

      should be maintained for. Default value is 300 (5 minutes).'
    isRequired: true
    types:
    - <xref:float>
  - name: on_lock_renew_failure
    description: 'A callback may be specified to be called when the lock is lost on
      the renewable

      that is being registered. Default value is None (no callback).'
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:LockRenewFailureCallback>]
  - name: executor
    description: 'A user-specified thread pool. This cannot be combined with

      setting *max_workers*.'
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:concurrent.futures.ThreadPoolExecutor>]
  - name: max_workers
    description: 'Specify the maximum workers in the thread pool. If not

      specified the number used will be derived from the core count of the environment.

      This cannot be combined with *executor*.'
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:int>]
examples:
- "Automatically renew a message lock<!--[!code-python[Main](les\\sync_samples\\sample_code_servicebus.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\221\\\\azure-servicebus-7.12.1\\\
  \\samples\\\\sync_samples\\\\sample_code_servicebus.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.servicebus import AutoLockRenewer\n\
  \   lock_renewal = AutoLockRenewer(max_workers=4)\n   with servicebus_receiver:\n\
  \       for message in servicebus_receiver:\n           # Auto renew message for\
  \ 1 minute.\n           lock_renewal.register(servicebus_receiver, message, max_lock_renewal_duration=60)\n\
  \           process_message(message)\n           servicebus_receiver.complete_message(message)\n\
  \n   ````\n\nAutomatically renew a session lock<!--[!code-python[Main](les\\sync_samples\\\
  sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
  : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\
  \\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\
  \\221\\\\azure-servicebus-7.12.1\\\\samples\\\\sync_samples\\\\sample_code_servicebus.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n       from azure.servicebus\
  \ import AutoLockRenewer\n\n       lock_renewal = AutoLockRenewer(max_workers=4)\n\
  \       with servicebus_client.get_queue_receiver(queue_name=queue_name, session_id=session_id)\
  \ as receiver:\n           session = receiver.session\n           # Auto renew session\
  \ lock for 2 minutes\n           lock_renewal.register(receiver, session, max_lock_renewal_duration=120)\n\
  \           for message in receiver:\n               process_message(message)\n\
  \               receiver.complete_message(message)\n\n   ````\n"
methods:
- uid: azure.servicebus.AutoLockRenewer.close
  name: close
  summary: Cease autorenewal by shutting down the thread pool to clean up any remaining
    lock renewal threads.
  signature: 'close(wait: bool = True) -> None'
  parameters:
  - name: wait
    description: Whether to block until thread pool has shutdown. Default is *True*.
    defaultValue: 'True'
    types:
    - <xref:bool>
  return:
    types:
    - <xref:None>
- uid: azure.servicebus.AutoLockRenewer.register
  name: register
  summary: Register a renewable entity for automatic lock renewal.
  signature: 'register(receiver: ServiceBusReceiver, renewable: ServiceBusReceivedMessage
    | ServiceBusSession, max_lock_renewal_duration: float | None = None, on_lock_renew_failure:
    LockRenewFailureCallback | None = None) -> None'
  parameters:
  - name: receiver
    description: 'The ServiceBusReceiver instance that is associated with the message
      or the session to

      be auto-lock-renewed.'
    isRequired: true
    types:
    - <xref:azure.servicebus.ServiceBusReceiver>
  - name: renewable
    description: A locked entity that needs to be renewed.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:azure.servicebus.ServiceBusReceivedMessage>, <xref:azure.servicebus.ServiceBusSession>]
  - name: max_lock_renewal_duration
    description: 'A time in seconds that the lock should be maintained for.

      Default value is None. If specified, this value will override the default value
      specified at the constructor.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: on_lock_renew_failure
    description: 'A callback may be specified to be called when the lock is lost on
      the renewable

      that is being registered. Default value is None (no callback).'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:LockRenewFailureCallback>]
  return:
    types:
    - <xref:None>
