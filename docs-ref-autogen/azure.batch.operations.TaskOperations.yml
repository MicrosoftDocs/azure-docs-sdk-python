### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.batch.operations.TaskOperations.add
  - azure.batch.operations.TaskOperations.add_collection
  - azure.batch.operations.TaskOperations.delete
  - azure.batch.operations.TaskOperations.get
  - azure.batch.operations.TaskOperations.list
  - azure.batch.operations.TaskOperations.list_subtasks
  - azure.batch.operations.TaskOperations.reactivate
  - azure.batch.operations.TaskOperations.terminate
  - azure.batch.operations.TaskOperations.update
  class: azure.batch.operations.TaskOperations
  fullName: azure.batch.operations.TaskOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.batch.operations
  name: TaskOperations
  source:
    id: TaskOperations
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 18
  summary: 'TaskOperations operations.










    '
  syntax:
    content: TaskOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An objec model deserializer.

        '
      id: deserializer
    variables:
    - description: 'Client API Version. Constant value: "2017-06-01.5.1".

        '
      id: api_version
  type: class
  uid: azure.batch.operations.TaskOperations
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.add
  langs:
  - python
  module: azure.batch.operations
  name: add
  source:
    id: add
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 37
  summary: 'Adds a task to the specified job.

    '
  syntax:
    content: add(job_id, task, task_add_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the job to which the task is to be added.

        '
      id: job_id
      type:
      - str
    - description: 'The task to be added.

        '
      id: task
      type:
      - azure.batch.models.TaskAddParameter
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_add_options
      type:
      - azure.batch.models.TaskAddOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.add
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.add_collection
  langs:
  - python
  module: azure.batch.operations
  name: add_collection
  source:
    id: add_collection
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 235
  summary: 'Adds a collection of tasks to the specified job.


    Note that each task must have a unique ID. The Batch service may not

    return the results for each task in the same order the tasks were

    submitted in this request. If the server times out or the connection is

    closed during the request, the request may have been partially or fully

    processed, or not at all. In such cases, the user should re-issue the

    request. Note that it is up to the user to correctly handle failures

    when re-issuing a request. For example, you should use the same task

    ids during a retry so that if the prior operation succeeded, the retry

    will not create extra tasks unexpectedly.

    '
  syntax:
    content: add_collection(job_id, value, task_add_collection_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job to which the task collection is to be

        added.

        '
      id: job_id
      type:
      - str
    - description: 'The collection of tasks to add.

        '
      id: value
      type:
      - 'list of @azure.batch.models.TaskAddParameter

        '
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: task_add_collection_options
      type:
      - azure.batch.models.TaskAddCollectionOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.batch.models.TaskAddCollectionResult
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.add_collection
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.delete
  langs:
  - python
  module: azure.batch.operations
  name: delete
  source:
    id: delete
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 342
  summary: 'Deletes a task from the specified job.


    When a task is deleted, all of the files in its directory on the

    compute node where it ran are also deleted (regardless of the retention

    time). For multi-instance tasks, the delete task operation applies

    synchronously to the primary task; subtasks and their files are then

    deleted asynchronously in the background.

    '
  syntax:
    content: delete(job_id, task_id, task_delete_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job from which to delete the task.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task to delete.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_delete_options
      type:
      - azure.batch.models.TaskDeleteOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.delete
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.get
  langs:
  - python
  module: azure.batch.operations
  name: get
  source:
    id: get
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 448
  summary: 'Gets information about the specified task.


    For multi-instance tasks, information such as affinityId, executionInfo

    and nodeInfo refer to the primary task. Use the list subtasks API to

    retrieve information about subtasks.

    '
  syntax:
    content: get(job_id, task_id, task_get_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the job that contains the task.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task to get information about.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_get_options
      type:
      - azure.batch.models.TaskGetOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.batch.models.CloudTask
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.get
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.list
  langs:
  - python
  module: azure.batch.operations
  name: list
  source:
    id: list
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 124
  summary: 'Lists all of the tasks that are associated with the specified job.


    For multi-instance tasks, information such as affinityId, executionInfo

    and nodeInfo refer to the primary task. Use the list subtasks API to

    retrieve information about subtasks.

    '
  syntax:
    content: list(job_id, task_list_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The ID of the job.

        '
      id: job_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_list_options
      type:
      - azure.batch.models.TaskListOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.batch.models.CloudTaskPaged
  type: method
  uid: azure.batch.operations.TaskOperations.list
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.list_subtasks
  langs:
  - python
  module: azure.batch.operations
  name: list_subtasks
  source:
    id: list_subtasks
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 686
  summary: 'Lists all of the subtasks that are associated with the specified

    multi-instance task.


    If the task is not a multi-instance task then this returns an empty

    collection.

    '
  syntax:
    content: list_subtasks(job_id, task_id, task_list_subtasks_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: task_list_subtasks_options
      type:
      - azure.batch.models.TaskListSubtasksOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.batch.models.CloudTaskListSubtasksResult
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.list_subtasks
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.reactivate
  langs:
  - python
  module: azure.batch.operations
  name: reactivate
  source:
    id: reactivate
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 896
  summary: 'Reactivates the specified task.


    Reactivation makes a task eligible to be retried again up to its

    maximum retry count. The task''s state is changed to active. As the task

    is no longer in the completed state, any previous exit code or

    scheduling error is no longer available after reactivation. This will

    fail for tasks that are not completed or that previously completed

    successfully (with an exit code of 0). Additionally, this will fail if

    the job has completed (or is terminating or deleting).

    '
  syntax:
    content: reactivate(job_id, task_id, task_reactivate_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job containing the task.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task to reactivate.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation

        '
      id: task_reactivate_options
      type:
      - azure.batch.models.TaskReactivateOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.reactivate
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.terminate
  langs:
  - python
  module: azure.batch.operations
  name: terminate
  source:
    id: terminate
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 788
  summary: 'Terminates the specified task.


    When the task has been terminated, it moves to the completed state. For

    multi-instance tasks, the terminate task operation applies

    synchronously to the primary task; subtasks are then terminated

    asynchronously in the background.

    '
  syntax:
    content: terminate(job_id, task_id, task_terminate_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job containing the task.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task to terminate.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_terminate_options
      type:
      - azure.batch.models.TaskTerminateOptions
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.terminate
- class: azure.batch.operations.TaskOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.TaskOperations.update
  langs:
  - python
  module: azure.batch.operations
  name: update
  source:
    id: update
    path: azure-batch\azure\batch\operations\task_operations.py
    remote:
      branch: master
      path: azure-batch\azure\batch\operations\task_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 574
  summary: 'Updates the properties of the specified task.

    '
  syntax:
    content: update(job_id, task_id, task_update_options=None, constraints=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The ID of the job containing the task.

        '
      id: job_id
      type:
      - str
    - description: 'The ID of the task to update.

        '
      id: task_id
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the operation

        '
      id: task_update_options
      type:
      - azure.batch.models.TaskUpdateOptions
    - defaultValue: None
      description: 'Constraints that apply to this task. If omitted,

        the task is given the default constraints.

        '
      id: constraints
      type:
      - azure.batch.models.TaskConstraints
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.batch.operations.TaskOperations.update
references:
- fullName: azure.batch.operations.TaskOperations.add
  isExternal: false
  name: add
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.add
- fullName: azure.batch.operations.TaskOperations.add_collection
  isExternal: false
  name: add_collection
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.add_collection
- fullName: azure.batch.operations.TaskOperations.delete
  isExternal: false
  name: delete
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.delete
- fullName: azure.batch.operations.TaskOperations.get
  isExternal: false
  name: get
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.get
- fullName: azure.batch.operations.TaskOperations.list
  isExternal: false
  name: list
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.list
- fullName: azure.batch.operations.TaskOperations.list_subtasks
  isExternal: false
  name: list_subtasks
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.list_subtasks
- fullName: azure.batch.operations.TaskOperations.reactivate
  isExternal: false
  name: reactivate
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.reactivate
- fullName: azure.batch.operations.TaskOperations.terminate
  isExternal: false
  name: terminate
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.terminate
- fullName: azure.batch.operations.TaskOperations.update
  isExternal: false
  name: update
  parent: azure.batch.operations.TaskOperations
  uid: azure.batch.operations.TaskOperations.update
