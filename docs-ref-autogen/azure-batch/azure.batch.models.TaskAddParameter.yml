### YamlMime:PythonClass
uid: azure.batch.models.TaskAddParameter
name: TaskAddParameter
fullName: azure.batch.models.TaskAddParameter
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'An Azure Batch Task to add.


  Batch will retry Tasks when a recovery operation is triggered on a Node.

  Examples of recovery operations include (but are not limited to) when an

  unhealthy Node is rebooted or a Compute Node disappeared due to host

  failure. Retries due to recovery operations are independent of and are not

  counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0,

  an internal retry due to a recovery operation may occur. Because of this,

  all Tasks should be idempotent. This means Tasks need to tolerate being

  interrupted and restarted without causing any corruption or duplicate data.

  The best practice for long running Tasks is to use some form of

  checkpointing.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'TaskAddParameter(*, id: str, command_line: str, display_name: str = None,
    container_settings=None, exit_conditions=None, resource_files=None, output_files=None,
    environment_settings=None, affinity_info=None, constraints=None, required_slots:
    int = None, user_identity=None, multi_instance_settings=None, depends_on=None,
    application_package_references=None, authentication_token_settings=None, **kwargs)'
  parameters:
  - name: id
    description: 'Required. The ID can contain any combination of alphanumeric

      characters including hyphens and underscores, and cannot contain more than

      64 characters. The ID is case-preserving and case-insensitive (that is,

      you may not have two IDs within a Job that differ only by case).'
    isRequired: true
    types:
    - <xref:str>
  - name: display_name
    description: 'The display name need not be unique and can contain

      any Unicode characters up to a maximum length of 1024.'
    isRequired: true
    types:
    - <xref:str>
  - name: command_line
    description: 'Required. For multi-instance Tasks, the command line

      is executed as the primary Task, after the primary Task and all subtasks

      have finished executing the coordination command line. The command line

      does not run under a shell, and therefore cannot take advantage of shell

      features such as environment variable expansion. If you want to take

      advantage of such features, you should invoke the shell in the command

      line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c

      MyCommand" in Linux. If the command line refers to file paths, it should

      use a relative path (relative to the Task working directory), or use the

      Batch provided environment variable

      ([https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables](https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)).'
    isRequired: true
    types:
    - <xref:str>
  - name: container_settings
    description: 'The settings for the container under which the

      Task runs. If the Pool that will run this Task has containerConfiguration

      set, this must be set as well. If the Pool that will run this Task doesn''t

      have containerConfiguration set, this must not be set. When this is

      specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR

      (the root of Azure Batch directories on the node) are mapped into the

      container, all Task environment variables are mapped into the container,

      and the Task command line is executed in the container. Files produced in

      the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to

      the host disk, meaning that Batch file APIs will not be able to access

      those files.'
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskContainerSettings>
  - name: exit_conditions
    description: 'How the Batch service should respond when the Task

      completes.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ExitConditions>
  - name: resource_files
    description: 'For multi-instance Tasks, the resource files will

      only be downloaded to the Compute Node on which the primary Task is

      executed. There is a maximum size for the list of resource files.  When

      the max size is exceeded, the request will fail and the response error

      code will be RequestEntityTooLarge. If this occurs, the collection of

      ResourceFiles must be reduced in size. This can be achieved using .zip

      files, Application Packages, or Docker Containers.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.ResourceFile>]
  - name: output_files
    description: 'For multi-instance Tasks, the files will only be

      uploaded from the Compute Node on which the primary Task is executed.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.OutputFile>]
  - name: environment_settings
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.EnvironmentSetting>]
  - name: affinity_info
    description: 'A locality hint that can be used by the Batch

      service to select a Compute Node on which to start the new Task.'
    isRequired: true
    types:
    - <xref:azure.batch.models.AffinityInformation>
  - name: constraints
    description: 'The execution constraints that apply to this Task. If

      you do not specify constraints, the maxTaskRetryCount is the

      maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite,

      and the retentionTime is 7 days.'
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskConstraints>
  - name: required_slots
    description: 'The number of scheduling slots that the Task

      required to run. The default is 1. A Task can only be scheduled to run on

      a compute node if the node has enough free scheduling slots available. For

      multi-instance Tasks, this must be 1.'
    isRequired: true
    types:
    - <xref:int>
  - name: user_identity
    description: 'The user identity under which the Task runs. If

      omitted, the Task runs as a non-administrative user unique to the Task.'
    isRequired: true
    types:
    - <xref:azure.batch.models.UserIdentity>
  - name: multi_instance_settings
    description: 'An object that indicates that the Task is

      a multi-instance Task, and contains information about how to run the

      multi-instance Task.'
    isRequired: true
    types:
    - <xref:azure.batch.models.MultiInstanceSettings>
  - name: depends_on
    description: 'The Tasks that this Task depends on. This Task will not

      be scheduled until all Tasks that it depends on have completed

      successfully. If any of those Tasks fail and exhaust their retry counts,

      this Task will never be scheduled. If the Job does not have

      usesTaskDependencies set to true, and this element is present, the request

      fails with error code TaskDependenciesNotSpecifiedOnJob.'
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskDependencies>
  - name: application_package_references
    description: 'Application packages are downloaded

      and deployed to a shared directory, not the Task working directory.

      Therefore, if a referenced package is already on the Node, and is up to

      date, then it is not re-downloaded; the existing copy on the Compute Node

      is used. If a referenced Package cannot be installed, for example because

      the package has been deleted or because download failed, the Task fails.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.ApplicationPackageReference>]
  - name: authentication_token_settings
    description: 'The settings for an authentication

      token that the Task can use to perform Batch service operations. If this

      property is set, the Batch service provides the Task with an

      authentication token which can be used to authenticate Batch service

      operations without requiring an Account access key. The token is provided

      via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations

      that the Task can carry out using the token depend on the settings. For

      example, a Task can request Job permissions in order to add other Tasks to

      the Job, or check the status of the Job or of other Tasks under the Job.'
    isRequired: true
    types:
    - <xref:azure.batch.models.AuthenticationTokenSettings>
  keywordOnlyParameters:
  - name: id
    isRequired: true
  - name: command_line
    isRequired: true
  - name: display_name
    isRequired: true
  - name: container_settings
    isRequired: true
  - name: exit_conditions
    isRequired: true
  - name: resource_files
    isRequired: true
  - name: output_files
    isRequired: true
  - name: environment_settings
    isRequired: true
  - name: affinity_info
    isRequired: true
  - name: constraints
    isRequired: true
  - name: required_slots
    isRequired: true
  - name: user_identity
    isRequired: true
  - name: multi_instance_settings
    isRequired: true
  - name: depends_on
    isRequired: true
  - name: application_package_references
    isRequired: true
  - name: authentication_token_settings
    isRequired: true
methods:
- uid: azure.batch.models.TaskAddParameter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.TaskAddParameter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.TaskAddParameter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.TaskAddParameter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.TaskAddParameter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.TaskAddParameter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.TaskAddParameter.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
