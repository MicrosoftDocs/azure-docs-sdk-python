### YamlMime:PythonClass
uid: azure.batch.models.ExitConditions
name: ExitConditions
fullName: azure.batch.models.ExitConditions
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: Specifies how the Batch service should respond when the Task completes.
constructor:
  syntax: ExitConditions(*, exit_codes=None, exit_code_ranges=None, pre_processing_error=None,
    file_upload_error=None, default=None, **kwargs)
  parameters:
  - name: exit_codes
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.ExitCodeMapping>]
  - name: exit_code_ranges
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.ExitCodeRangeMapping>]
  - name: pre_processing_error
    description: 'How the Batch service should respond if the

      Task fails to start due to an error.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ExitOptions>
  - name: file_upload_error
    description: 'How the Batch service should respond if a file

      upload error occurs. If the Task exited with an exit code that was

      specified via exitCodes or exitCodeRanges, and then encountered a file

      upload error, then the action specified by the exit code takes precedence.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ExitOptions>
  - name: default
    description: 'How the Batch service should respond if the Task fails

      with an exit condition not covered by any of the other properties. This

      value is used if the Task exits with any nonzero exit code not listed in

      the exitCodes or exitCodeRanges collection, with a pre-processing error if

      the preProcessingError property is not present, or with a file upload

      error if the fileUploadError property is not present. If you want

      non-default behavior on exit code 0, you must list it explicitly using the

      exitCodes or exitCodeRanges collection.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ExitOptions>
