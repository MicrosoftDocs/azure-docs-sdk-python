### YamlMime:PythonClass
uid: azure.batch.operations.ComputeNodeOperations
name: ComputeNodeOperations
fullName: azure.batch.operations.ComputeNodeOperations
module: azure.batch.operations
inheritances:
- builtins.object
summary: 'ComputeNodeOperations operations.


  You should not instantiate directly this class, but create a Client instance that
  will create it for you and attach it as attribute.'
constructor:
  syntax: ComputeNodeOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: 'The API version to use for the request. Constant value: "2024-02-01.19.0".'
  name: api_version
methods:
- uid: azure.batch.operations.ComputeNodeOperations.add_user
  name: add_user
  summary: 'Adds a user Account to the specified Compute Node.


    You can add a user Account to a Compute Node only when it is in the

    idle or running state.'
  signature: add_user(pool_id, node_id, user, compute_node_add_user_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the machine on which you want to create a

      user Account.'
    isRequired: true
    types:
    - <xref:str>
  - name: user
    description: The user Account to be created.
    isRequired: true
    types:
    - <xref:azure.batch.models.ComputeNodeUser>
  - name: compute_node_add_user_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeAddUserOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.delete_user
  name: delete_user
  summary: 'Deletes a user Account from the specified Compute Node.


    You can delete a user Account to a Compute Node only when it is in the

    idle or running state.'
  signature: delete_user(pool_id, node_id, user_name, compute_node_delete_user_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the machine on which you want to delete a

      user Account.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_name
    description: The name of the user Account to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_delete_user_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeDeleteUserOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.disable_scheduling
  name: disable_scheduling
  summary: 'Disables Task scheduling on the specified Compute Node.


    You can disable Task scheduling on a Compute Node only if its current

    scheduling state is enabled.'
  signature: disable_scheduling(pool_id, node_id, node_disable_scheduling_option=None,
    compute_node_disable_scheduling_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node on which you want to

      disable Task scheduling.'
    isRequired: true
    types:
    - <xref:str>
  - name: node_disable_scheduling_option
    description: 'The default value is requeue.

      Possible values include: ''requeue'', ''terminate'', ''taskCompletion'''
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.batch.models.DisableComputeNodeSchedulingOption>
  - name: compute_node_disable_scheduling_options
    description: 'Additional parameters

      for the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeDisableSchedulingOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.enable_scheduling
  name: enable_scheduling
  summary: 'Enables Task scheduling on the specified Compute Node.


    You can enable Task scheduling on a Compute Node only if its current

    scheduling state is disabled.'
  signature: enable_scheduling(pool_id, node_id, compute_node_enable_scheduling_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node on which you want to enable

      Task scheduling.'
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_enable_scheduling_options
    description: 'Additional parameters

      for the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeEnableSchedulingOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.get
  name: get
  summary: Gets information about the specified Compute Node.
  signature: get(pool_id, node_id, compute_node_get_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node that you want to get

      information about.'
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_get_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeGetOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: ComputeNode or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.ComputeNode>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.get_remote_desktop
  name: get_remote_desktop
  summary: 'Gets the Remote Desktop Protocol file for the specified Compute Node.


    Before you can access a Compute Node by using the RDP file, you must

    create a user Account on the Compute Node. This API can only be invoked

    on Pools created with a cloud service configuration. For Pools created

    with a virtual machine configuration, see the GetRemoteLoginSettings

    API.'
  signature: get_remote_desktop(pool_id, node_id, compute_node_get_remote_desktop_options=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node for which you want to get

      the Remote Desktop Protocol file.'
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_get_remote_desktop_options
    description: 'Additional parameters

      for the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeGetRemoteDesktopOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: callback
    description: 'When specified, will be called with each chunk of

      data that is streamed. The callback should take two arguments, the

      bytes of the current chunk of data and the response object. If the

      data is uploading, response will be None.'
    defaultValue: None
    types:
    - <xref:typing.Callable>[<xref:Bytes>, <xref:response=None>]
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: object or ClientRawResponse if raw=true
    types:
    - <xref:typing.Generator>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.get_remote_login_settings
  name: get_remote_login_settings
  summary: 'Gets the settings required for remote login to a Compute Node.


    Before you can remotely login to a Compute Node using the remote login

    settings, you must create a user Account on the Compute Node. This API

    can be invoked only on Pools created with the virtual machine

    configuration property. For Pools created with a cloud service

    configuration, see the GetRemoteDesktop API.'
  signature: get_remote_login_settings(pool_id, node_id, compute_node_get_remote_login_settings_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node for which to obtain the

      remote login settings.'
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_get_remote_login_settings_options
    description: 'Additional

      parameters for the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeGetRemoteLoginSettingsOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: 'ComputeNodeGetRemoteLoginSettingsResult or ClientRawResponse

      if raw=true'
    types:
    - <xref:azure.batch.models.ComputeNodeGetRemoteLoginSettingsResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.list
  name: list
  summary: Lists the Compute Nodes in the specified Pool.
  signature: list(pool_id, compute_node_list_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: pool_id
    description: 'The ID of the Pool from which you want to list Compute

      Nodes.'
    isRequired: true
    types:
    - <xref:str>
  - name: compute_node_list_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeListOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of ComputeNode
    types:
    - <xref:azure.batch.models.ComputeNodePaged>[<xref:azure.batch.models.ComputeNode>]
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.reboot
  name: reboot
  summary: 'Restarts the specified Compute Node.


    You can restart a Compute Node only if it is in an idle or running

    state.'
  signature: reboot(pool_id, node_id, node_reboot_option=None, compute_node_reboot_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart.
    isRequired: true
    types:
    - <xref:str>
  - name: node_reboot_option
    description: 'The default value is requeue. Possible

      values include: ''requeue'', ''terminate'', ''taskCompletion'',

      ''retainedData'''
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.batch.models.ComputeNodeRebootOption>
  - name: compute_node_reboot_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeRebootOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.reimage
  name: reimage
  summary: 'Reinstalls the operating system on the specified Compute Node.


    You can reinstall the operating system on a Compute Node only if it is

    in an idle or running state. This API can be invoked only on Pools

    created with the cloud service configuration property.'
  signature: reimage(pool_id, node_id, node_reimage_option=None, compute_node_reimage_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart.
    isRequired: true
    types:
    - <xref:str>
  - name: node_reimage_option
    description: 'The default value is requeue. Possible

      values include: ''requeue'', ''terminate'', ''taskCompletion'',

      ''retainedData'''
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.batch.models.ComputeNodeReimageOption>
  - name: compute_node_reimage_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeReimageOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.update_user
  name: update_user
  summary: 'Updates the password and expiration time of a user Account on the

    specified Compute Node.


    This operation replaces of all the updatable properties of the Account.

    For example, if the expiryTime element is not specified, the current

    value is replaced with the default value, not left unmodified. You can

    update a user Account on a Compute Node only when it is in the idle or

    running state.'
  signature: update_user(pool_id, node_id, user_name, node_update_user_parameter,
    compute_node_update_user_options=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the machine on which you want to update a

      user Account.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_name
    description: The name of the user Account to update.
    isRequired: true
    types:
    - <xref:str>
  - name: node_update_user_parameter
    description: The parameters for the request.
    isRequired: true
    types:
    - <xref:azure.batch.models.NodeUpdateUserParameter>
  - name: compute_node_update_user_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeUpdateUserOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.ComputeNodeOperations.upload_batch_service_logs
  name: upload_batch_service_logs
  summary: 'Upload Azure Batch service log files from the specified Compute Node to

    Azure Blob Storage.


    This is for gathering Azure Batch service log files in an automated

    fashion from Compute Nodes if you are experiencing an error and wish to

    escalate to Azure support. The Azure Batch service log files should be

    shared with Azure support to aid in debugging issues with the Batch

    service.'
  signature: upload_batch_service_logs(pool_id, node_id, upload_batch_service_logs_configuration,
    compute_node_upload_batch_service_logs_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node from which you want to

      upload the Azure Batch service log files.'
    isRequired: true
    types:
    - <xref:str>
  - name: upload_batch_service_logs_configuration
    description: 'The Azure Batch

      service log files upload configuration.'
    isRequired: true
    types:
    - <xref:azure.batch.models.UploadBatchServiceLogsConfiguration>
  - name: compute_node_upload_batch_service_logs_options
    description: 'Additional

      parameters for the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.ComputeNodeUploadBatchServiceLogsOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: UploadBatchServiceLogsResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.UploadBatchServiceLogsResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
attributes:
- uid: azure.batch.operations.ComputeNodeOperations.models
  name: models
  signature: models = <module 'azure.batch.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\batch\\models\\__init__.py'>
