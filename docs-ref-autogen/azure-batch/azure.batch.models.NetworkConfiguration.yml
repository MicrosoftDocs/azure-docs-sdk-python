### YamlMime:PythonClass
uid: azure.batch.models.NetworkConfiguration
name: NetworkConfiguration
fullName: azure.batch.models.NetworkConfiguration
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: The network configuration for a Pool.
constructor:
  syntax: 'NetworkConfiguration(*, subnet_id: str = None, dynamic_vnet_assignment_scope=None,
    endpoint_configuration=None, public_ip_address_configuration=None, enable_accelerated_networking:
    bool = None, **kwargs)'
  parameters:
  - name: subnet_id
    description: 'The virtual network must be in the same region and

      subscription as the Azure Batch Account. The specified subnet should have

      enough free IP addresses to accommodate the number of Compute Nodes in the

      Pool. If the subnet doesn''t have enough free IP addresses, the Pool will

      partially allocate Nodes and a resize error will occur. The

      ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual

      Machine Contributor'' Role-Based Access Control (RBAC) role for the

      specified VNet. The specified subnet must allow communication from the

      Azure Batch service to be able to schedule Tasks on the Nodes. This can be

      verified by checking if the specified VNet has any associated Network

      Security Groups (NSG). If communication to the Nodes in the specified

      subnet is denied by an NSG, then the Batch service will set the state of

      the Compute Nodes to unusable. For Pools created with

      virtualMachineConfiguration only ARM virtual networks

      (''Microsoft.Network/virtualNetworks'') are supported, but for Pools created

      with cloudServiceConfiguration both ARM and classic virtual networks are

      supported. If the specified VNet has any associated Network Security

      Groups (NSG), then a few reserved system ports must be enabled for inbound

      communication. For Pools created with a virtual machine configuration,

      enable ports 29876 and 29877, as well as port 22 for Linux and port 3389

      for Windows. For Pools created with a cloud service configuration, enable

      ports 10100, 20100, and 30100. Also enable outbound connections to Azure

      Storage on port 443. For more details see:

      [https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration)'
    isRequired: true
    types:
    - <xref:str>
  - name: dynamic_vnet_assignment_scope
    description: 'Possible values include: ''none'',

      ''job'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.DynamicVNetAssignmentScope>
  - name: endpoint_configuration
    description: 'The configuration for endpoints on Compute

      Nodes in the Batch Pool. Pool endpoint configuration is only supported on

      Pools with the virtualMachineConfiguration property.'
    isRequired: true
    types:
    - <xref:azure.batch.models.PoolEndpointConfiguration>
  - name: public_ip_address_configuration
    description: 'The Public IPAddress configuration

      for Compute Nodes in the Batch Pool. Public IP configuration property is

      only supported on Pools with the virtualMachineConfiguration property.'
    isRequired: true
    types:
    - <xref:azure.batch.models.PublicIPAddressConfiguration>
  - name: enable_accelerated_networking
    description: 'Whether this pool should enable

      accelerated networking. Accelerated networking enables single root I/O

      virtualization (SR-IOV) to a VM, which may lead to improved networking

      performance. For more details, see:

      [https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview](https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview).'
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: subnet_id
    isRequired: true
  - name: dynamic_vnet_assignment_scope
    isRequired: true
  - name: endpoint_configuration
    isRequired: true
  - name: public_ip_address_configuration
    isRequired: true
  - name: enable_accelerated_networking
    isRequired: true
methods:
- uid: azure.batch.models.NetworkConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.NetworkConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.NetworkConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.NetworkConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.NetworkConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.NetworkConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.NetworkConfiguration.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
