### YamlMime:PythonClass
uid: azure.batch.operations.TaskOperations
name: TaskOperations
fullName: azure.batch.operations.TaskOperations
module: azure.batch.operations
inheritances:
- builtins.object
summary: 'TaskOperations operations.


  You should not instantiate directly this class, but create a Client instance that
  will create it for you and attach it as attribute.'
constructor:
  syntax: TaskOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: 'The API version to use for the request. Constant value: "2024-02-01.19.0".'
  name: api_version
methods:
- uid: azure.batch.operations.TaskOperations.add
  name: add
  summary: 'Adds a Task to the specified Job.


    The maximum lifetime of a Task from addition to completion is 180 days.

    If a Task has not completed within 180 days of being added it will be

    terminated by the Batch service and left in whatever state it was in at

    that time.'
  signature: add(job_id, task, task_add_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job to which the Task is to be added.
    isRequired: true
    types:
    - <xref:str>
  - name: task
    description: The Task to be added.
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskAddParameter>
  - name: task_add_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskAddOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.add_collection
  name: add_collection
  summary: 'Adds a collection of tasks to the specified job.


    Note that each task must have a unique ID. The Batch service may not

    return the results for each task in the same order the tasks were

    submitted in this request. If the server times out or the connection is

    closed during the request, the request may have been partially or fully

    processed, or not at all. In such cases, the user should re-issue the

    request. Note that it is up to the user to correctly handle failures

    when re-issuing a request. For example, you should use the same task

    IDs during a retry so that if the prior operation succeeded, the retry

    will not create extra tasks unexpectedly. If the response contains any

    tasks which failed to add, a client can retry the request. In a retry,

    it is most efficient to resubmit only tasks that failed to add, and to

    omit tasks that were successfully added on the first attempt. The

    maximum lifetime of a task from addition to completion is 180 days.

    If a task has not completed within 180 days of being added it will be

    terminated by the Batch service and left in whatever state it was in at

    that time.'
  signature: add_collection(job_id, value, task_add_collection_options=None, custom_headers=None,
    raw=False, threads=0, **operation_config)
  parameters:
  - name: job_id
    description: 'The ID of the job to which the task collection is to be

      added.'
    isRequired: true
    types:
    - <xref:str>
  - name: value
    description: 'The collection of tasks to add. The total serialized

      size of this collection must be less than 4MB. If it is greater than

      4MB (for example if each task has 100''s of resource files or

      environment variables), the request will fail with code

      ''RequestBodyTooLarge'' and should be retried again with fewer tasks.'
    isRequired: true
    types:
    - list of <xref:azure.batch.models.TaskAddParameter>
  - name: task_add_collection_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskAddCollectionOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: threads
    description: 'number of threads to use in parallel when adding tasks. If specified

      and greater than 0, will start additional threads to submit requests and wait
      for them to finish.

      Otherwise will submit add_collection requests sequentially on main thread'
    defaultValue: '0'
    types:
    - <xref:int>
  return:
    description: '<xref:azure.batch.models.TaskAddCollectionResult> or

      <xref:msrest.pipeline.ClientRawResponse> if

      raw=true'
    types:
    - <xref:azure.batch.models.TaskAddCollectionResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.custom.CreateTasksErrorException
- uid: azure.batch.operations.TaskOperations.delete
  name: delete
  summary: 'Deletes a Task from the specified Job.


    When a Task is deleted, all of the files in its directory on the

    Compute Node where it ran are also deleted (regardless of the retention

    time). For multi-instance Tasks, the delete Task operation applies

    synchronously to the primary task; subtasks and their files are then

    deleted asynchronously in the background.'
  signature: delete(job_id, task_id, task_delete_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job from which to delete the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: task_delete_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskDeleteOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.get
  name: get
  summary: 'Gets information about the specified Task.


    For multi-instance Tasks, information such as affinityId, executionInfo

    and nodeInfo refer to the primary Task. Use the list subtasks API to

    retrieve information about subtasks.'
  signature: get(job_id, task_id, task_get_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to get information about.
    isRequired: true
    types:
    - <xref:str>
  - name: task_get_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskGetOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CloudTask or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.CloudTask>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.list
  name: list
  summary: 'Lists all of the Tasks that are associated with the specified Job.


    For multi-instance Tasks, information such as affinityId, executionInfo

    and nodeInfo refer to the primary Task. Use the list subtasks API to

    retrieve information about subtasks.'
  signature: list(job_id, task_list_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job.
    isRequired: true
    types:
    - <xref:str>
  - name: task_list_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskListOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CloudTask
    types:
    - <xref:azure.batch.models.CloudTaskPaged>[<xref:azure.batch.models.CloudTask>]
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.list_subtasks
  name: list_subtasks
  summary: 'Lists all of the subtasks that are associated with the specified

    multi-instance Task.


    If the Task is not a multi-instance Task then this returns an empty

    collection.'
  signature: list_subtasks(job_id, task_id, task_list_subtasks_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_list_subtasks_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskListSubtasksOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CloudTaskListSubtasksResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.CloudTaskListSubtasksResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.reactivate
  name: reactivate
  summary: 'Reactivates a Task, allowing it to run again even if its retry count

    has been exhausted.


    Reactivation makes a Task eligible to be retried again up to its

    maximum retry count. The Task''s state is changed to active. As the Task

    is no longer in the completed state, any previous exit code or failure

    information is no longer available after reactivation. Each time a Task

    is reactivated, its retry count is reset to 0. Reactivation will fail

    for Tasks that are not completed or that previously completed

    successfully (with an exit code of 0). Additionally, it will fail if

    the Job has completed (or is terminating or deleting).'
  signature: reactivate(job_id, task_id, task_reactivate_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to reactivate.
    isRequired: true
    types:
    - <xref:str>
  - name: task_reactivate_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskReactivateOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.terminate
  name: terminate
  summary: 'Terminates the specified Task.


    When the Task has been terminated, it moves to the completed state. For

    multi-instance Tasks, the terminate Task operation applies

    synchronously to the primary task; subtasks are then terminated

    asynchronously in the background.'
  signature: terminate(job_id, task_id, task_terminate_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to terminate.
    isRequired: true
    types:
    - <xref:str>
  - name: task_terminate_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskTerminateOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.TaskOperations.update
  name: update
  summary: Updates the properties of the specified Task.
  signature: update(job_id, task_id, constraints=None, task_update_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to update.
    isRequired: true
    types:
    - <xref:str>
  - name: constraints
    description: 'Constraints that apply to this Task. If omitted,

      the Task is given the default constraints. For multi-instance Tasks,

      updating the retention time applies only to the primary Task and not

      subtasks.'
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskConstraints>
  - name: task_update_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.TaskUpdateOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
attributes:
- uid: azure.batch.operations.TaskOperations.models
  name: models
  signature: models = <module 'azure.batch.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\batch\\models\\__init__.py'>
