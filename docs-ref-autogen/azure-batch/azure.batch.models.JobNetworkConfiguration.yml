### YamlMime:PythonClass
uid: azure.batch.models.JobNetworkConfiguration
name: JobNetworkConfiguration
fullName: azure.batch.models.JobNetworkConfiguration
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'The network configuration for the Job.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'JobNetworkConfiguration(*, subnet_id: str, **kwargs)'
  parameters:
  - name: subnet_id
    description: 'Required. The virtual network must be in the same region

      and subscription as the Azure Batch Account. The specified subnet should

      have enough free IP addresses to accommodate the number of Compute Nodes

      which will run Tasks from the Job. This can be up to the number of Compute

      Nodes in the Pool. The ''MicrosoftAzureBatch'' service principal must have

      the ''Classic Virtual Machine Contributor'' Role-Based Access Control (RBAC)

      role for the specified VNet so that Azure Batch service can schedule Tasks

      on the Nodes. This can be verified by checking if the specified VNet has

      any associated Network Security Groups (NSG). If communication to the

      Nodes in the specified subnet is denied by an NSG, then the Batch service

      will set the state of the Compute Nodes to unusable. This is of the form

      /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

      If the specified VNet has any associated Network Security Groups (NSG),

      then a few reserved system ports must be enabled for inbound communication

      from the Azure Batch service. For Pools created with a Virtual Machine

      configuration, enable ports 29876 and 29877, as well as port 22 for Linux

      and port 3389 for Windows. Port 443 is also required to be open for

      outbound connections for communications to Azure Storage. For more details

      see:

      [https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration)'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: subnet_id
    isRequired: true
methods:
- uid: azure.batch.models.JobNetworkConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobNetworkConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobNetworkConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.JobNetworkConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobNetworkConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.JobNetworkConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobNetworkConfiguration.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
