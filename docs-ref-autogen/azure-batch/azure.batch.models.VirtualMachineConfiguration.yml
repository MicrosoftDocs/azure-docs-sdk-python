### YamlMime:PythonClass
uid: azure.batch.models.VirtualMachineConfiguration
name: VirtualMachineConfiguration
fullName: azure.batch.models.VirtualMachineConfiguration
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'The configuration for Compute Nodes in a Pool based on the Azure Virtual

  Machines infrastructure.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineConfiguration(*, image_reference, node_agent_sku_id: str,
    windows_configuration=None, data_disks=None, license_type: str = None, container_configuration=None,
    disk_encryption_configuration=None, node_placement_configuration=None, extensions=None,
    os_disk=None, security_profile=None, service_artifact_reference=None, **kwargs)'
  parameters:
  - name: image_reference
    description: 'Required. A reference to the Azure Virtual

      Machines Marketplace Image or the custom Virtual Machine Image to use.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ImageReference>
  - name: node_agent_sku_id
    description: 'Required. The Batch Compute Node agent is a

      program that runs on each Compute Node in the Pool, and provides the

      command-and-control interface between the Compute Node and the Batch

      service. There are different implementations of the Compute Node agent,

      known as SKUs, for different operating systems. You must specify a Compute

      Node agent SKU which matches the selected Image reference. To get the list

      of supported Compute Node agent SKUs along with their list of verified

      Image references, see the ''List supported Compute Node agent SKUs''

      operation.'
    isRequired: true
    types:
    - <xref:str>
  - name: windows_configuration
    description: 'Windows operating system settings on the

      virtual machine. This property must not be specified if the imageReference

      property specifies a Linux OS Image.'
    isRequired: true
    types:
    - <xref:azure.batch.models.WindowsConfiguration>
  - name: data_disks
    description: 'This property must be specified if the Compute Nodes in

      the Pool need to have empty data disks attached to them. This cannot be

      updated. Each Compute Node gets its own disk (the disk is not a file

      share). Existing disks cannot be attached, each attached disk is empty.

      When the Compute Node is removed from the Pool, the disk and all data

      associated with it is also deleted. The disk is not formatted after being

      attached, it must be formatted before use - for more information see

      [https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux)

      and

      [https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine).'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.DataDisk>]
  - name: license_type
    description: 'This only applies to Images that contain the Windows

      operating system, and should only be used when you hold valid on-premises

      licenses for the Compute Nodes which will be deployed. If omitted, no

      on-premises licensing discount is applied. Values are:

      Windows_Server - The on-premises license is for Windows Server.

      Windows_Client - The on-premises license is for Windows Client.'
    isRequired: true
    types:
    - <xref:str>
  - name: container_configuration
    description: 'The container configuration for the Pool.

      If specified, setup is performed on each Compute Node in the Pool to allow

      Tasks to run in containers. All regular Tasks and Job manager Tasks run on

      this Pool must specify the containerSettings property, and all other Tasks

      may specify it.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ContainerConfiguration>
  - name: disk_encryption_configuration
    description: 'The disk encryption configuration

      for the pool. If specified, encryption is performed on each node in the

      pool during node provisioning.'
    isRequired: true
    types:
    - <xref:azure.batch.models.DiskEncryptionConfiguration>
  - name: node_placement_configuration
    description: 'The node placement configuration for

      the pool. This configuration will specify rules on how nodes in the pool

      will be physically allocated.'
    isRequired: true
    types:
    - <xref:azure.batch.models.NodePlacementConfiguration>
  - name: extensions
    description: 'If specified, the extensions mentioned in this

      configuration will be installed on each node.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.VMExtension>]
  - name: os_disk
    description: 'Settings for the operating system disk of the Virtual

      Machine.'
    isRequired: true
    types:
    - <xref:azure.batch.models.OSDisk>
  - name: security_profile
    description: 'Specifies the security profile settings for the

      virtual machine or virtual machine scale set.'
    isRequired: true
    types:
    - <xref:azure.batch.models.SecurityProfile>
  - name: service_artifact_reference
    description: 'Specifies the service artifact

      reference id used to set same image version for all virtual machines in

      the scale set when using ''latest'' image version. The service artifact

      reference id in the form of

      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}'
    isRequired: true
    types:
    - <xref:azure.batch.models.ServiceArtifactReference>
  keywordOnlyParameters:
  - name: image_reference
    isRequired: true
  - name: node_agent_sku_id
    isRequired: true
  - name: windows_configuration
    isRequired: true
  - name: data_disks
    isRequired: true
  - name: license_type
    isRequired: true
  - name: container_configuration
    isRequired: true
  - name: disk_encryption_configuration
    isRequired: true
  - name: node_placement_configuration
    isRequired: true
  - name: extensions
    isRequired: true
  - name: os_disk
    isRequired: true
  - name: security_profile
    isRequired: true
  - name: service_artifact_reference
    isRequired: true
methods:
- uid: azure.batch.models.VirtualMachineConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.VirtualMachineConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.VirtualMachineConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.VirtualMachineConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.VirtualMachineConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.VirtualMachineConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.VirtualMachineConfiguration.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
