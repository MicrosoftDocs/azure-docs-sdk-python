### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.batch.operations.FileOperations.delete_from_compute_node
  - azure.batch.operations.FileOperations.delete_from_task
  - azure.batch.operations.FileOperations.get_from_compute_node
  - azure.batch.operations.FileOperations.get_from_task
  - azure.batch.operations.FileOperations.get_properties_from_compute_node
  - azure.batch.operations.FileOperations.get_properties_from_task
  - azure.batch.operations.FileOperations.list_from_compute_node
  - azure.batch.operations.FileOperations.list_from_task
  - azure.batch.operations.FileOperations.models
  class: azure.batch.operations.FileOperations
  fullName: azure.batch.operations.FileOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.batch.operations
  name: FileOperations
  summary: 'FileOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: FileOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API Version. Constant value: "2020-03-01.11.0".'
      id: api_version
  type: class
  uid: azure.batch.operations.FileOperations
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.delete_from_compute_node
  langs:
  - python
  module: azure.batch.operations
  name: delete_from_compute_node(pool_id, node_id, file_path, recursive=None, file_delete_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_from_compute_node
  summary: Deletes the specified file from the Compute Node.
  syntax:
    content: delete_from_compute_node(pool_id, node_id, file_path, recursive=None,
      file_delete_from_compute_node_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The ID of the Pool that contains the Compute Node.
      id: pool_id
      isRequired: true
      type:
      - str
    - description: 'The ID of the Compute Node from which you want to

        delete the file.'
      id: node_id
      isRequired: true
      type:
      - str
    - description: 'The path to the file or directory that you want to

        delete.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Whether to delete children of a directory. If the

        filePath parameter represents a directory instead of a file, you can

        set recursive to true to delete the directory and all of the files and

        subdirectories in it. If recursive is false then the directory must be

        empty or deletion will fail.'
      id: recursive
      type:
      - bool
    - defaultValue: None
      description: 'Additional parameters

        for the operation'
      id: file_delete_from_compute_node_options
      type:
      - azure.batch.models.FileDeleteFromComputeNodeOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.delete_from_compute_node
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.delete_from_task
  langs:
  - python
  module: azure.batch.operations
  name: delete_from_task(job_id, task_id, file_path, recursive=None, file_delete_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_from_task
  summary: 'Deletes the specified Task file from the Compute Node where the Task

    ran.'
  syntax:
    content: delete_from_task(job_id, task_id, file_path, recursive=None, file_delete_from_task_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job that contains the Task.
      id: job_id
      isRequired: true
      type:
      - str
    - description: The ID of the Task whose file you want to delete.
      id: task_id
      isRequired: true
      type:
      - str
    - description: 'The path to the Task file or directory that you want

        to delete.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Whether to delete children of a directory. If the

        filePath parameter represents a directory instead of a file, you can

        set recursive to true to delete the directory and all of the files and

        subdirectories in it. If recursive is false then the directory must be

        empty or deletion will fail.'
      id: recursive
      type:
      - bool
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: file_delete_from_task_options
      type:
      - azure.batch.models.FileDeleteFromTaskOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.delete_from_task
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.get_from_compute_node
  langs:
  - python
  module: azure.batch.operations
  name: get_from_compute_node(pool_id, node_id, file_path, file_get_from_compute_node_options=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  namewithoutparameters: get_from_compute_node
  summary: Returns the content of the specified Compute Node file.
  syntax:
    content: get_from_compute_node(pool_id, node_id, file_path, file_get_from_compute_node_options=None,
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: The ID of the Pool that contains the Compute Node.
      id: pool_id
      isRequired: true
      type:
      - str
    - description: The ID of the Compute Node that contains the file.
      id: node_id
      isRequired: true
      type:
      - str
    - description: 'The path to the Compute Node file that you want to

        get the content of.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for

        the operation'
      id: file_get_from_compute_node_options
      type:
      - azure.batch.models.FileGetFromComputeNodeOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: object or ClientRawResponse if raw=true
      type:
      - Generator
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.get_from_compute_node
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.get_from_task
  langs:
  - python
  module: azure.batch.operations
  name: get_from_task(job_id, task_id, file_path, file_get_from_task_options=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  namewithoutparameters: get_from_task
  summary: Returns the content of the specified Task file.
  syntax:
    content: get_from_task(job_id, task_id, file_path, file_get_from_task_options=None,
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: The ID of the Job that contains the Task.
      id: job_id
      isRequired: true
      type:
      - str
    - description: The ID of the Task whose file you want to retrieve.
      id: task_id
      isRequired: true
      type:
      - str
    - description: 'The path to the Task file that you want to get the

        content of.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: file_get_from_task_options
      type:
      - azure.batch.models.FileGetFromTaskOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: object or ClientRawResponse if raw=true
      type:
      - Generator
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.get_from_task
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.get_properties_from_compute_node
  langs:
  - python
  module: azure.batch.operations
  name: get_properties_from_compute_node(pool_id, node_id, file_path, file_get_properties_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_properties_from_compute_node
  summary: Gets the properties of the specified Compute Node file.
  syntax:
    content: get_properties_from_compute_node(pool_id, node_id, file_path, file_get_properties_from_compute_node_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Pool that contains the Compute Node.
      id: pool_id
      isRequired: true
      type:
      - str
    - description: The ID of the Compute Node that contains the file.
      id: node_id
      isRequired: true
      type:
      - str
    - description: 'The path to the Compute Node file that you want to

        get the properties of.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional

        parameters for the operation'
      id: file_get_properties_from_compute_node_options
      type:
      - azure.batch.models.FileGetPropertiesFromComputeNodeOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.get_properties_from_compute_node
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.get_properties_from_task
  langs:
  - python
  module: azure.batch.operations
  name: get_properties_from_task(job_id, task_id, file_path, file_get_properties_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_properties_from_task
  summary: Gets the properties of the specified Task file.
  syntax:
    content: get_properties_from_task(job_id, task_id, file_path, file_get_properties_from_task_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job that contains the Task.
      id: job_id
      isRequired: true
      type:
      - str
    - description: 'The ID of the Task whose file you want to get the

        properties of.'
      id: task_id
      isRequired: true
      type:
      - str
    - description: 'The path to the Task file that you want to get the

        properties of.'
      id: file_path
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters

        for the operation'
      id: file_get_properties_from_task_options
      type:
      - azure.batch.models.FileGetPropertiesFromTaskOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.FileOperations.get_properties_from_task
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.list_from_compute_node
  langs:
  - python
  module: azure.batch.operations
  name: list_from_compute_node(pool_id, node_id, recursive=None, file_list_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_from_compute_node
  summary: 'Lists all of the files in Task directories on the specified Compute

    Node.'
  syntax:
    content: list_from_compute_node(pool_id, node_id, recursive=None, file_list_from_compute_node_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Pool that contains the Compute Node.
      id: pool_id
      isRequired: true
      type:
      - str
    - description: 'The ID of the Compute Node whose files you want to

        list.'
      id: node_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Whether to list children of a directory.
      id: recursive
      type:
      - bool
    - defaultValue: None
      description: 'Additional parameters for

        the operation'
      id: file_list_from_compute_node_options
      type:
      - azure.batch.models.FileListFromComputeNodeOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of NodeFile
      type:
      - azure.batch.models.NodeFilePaged[azure.batch.models.NodeFile]
  type: method
  uid: azure.batch.operations.FileOperations.list_from_compute_node
- class: azure.batch.operations.FileOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.FileOperations.list_from_task
  langs:
  - python
  module: azure.batch.operations
  name: list_from_task(job_id, task_id, recursive=None, file_list_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_from_task
  summary: Lists the files in a Task's directory on its Compute Node.
  syntax:
    content: list_from_task(job_id, task_id, recursive=None, file_list_from_task_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job that contains the Task.
      id: job_id
      isRequired: true
      type:
      - str
    - description: The ID of the Task whose files you want to list.
      id: task_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Whether to list children of the Task directory. This

        parameter can be used in combination with the filter parameter to list

        specific type of files.'
      id: recursive
      type:
      - bool
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: file_list_from_task_options
      type:
      - azure.batch.models.FileListFromTaskOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of NodeFile
      type:
      - azure.batch.models.NodeFilePaged[azure.batch.models.NodeFile]
  type: method
  uid: azure.batch.operations.FileOperations.list_from_task
- class: azure.batch.operations.FileOperations
  fullName: azure.batch.operations.FileOperations.models
  langs:
  - python
  module: azure.batch.operations
  name: models
  syntax:
    content: models = <module 'azure.batch.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\batch\\models\\__init__.py'>
  type: attribute
  uid: azure.batch.operations.FileOperations.models
references:
- fullName: azure.batch.operations.FileOperations.delete_from_compute_node
  isExternal: false
  name: delete_from_compute_node(pool_id, node_id, file_path, recursive=None, file_delete_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.delete_from_compute_node
- fullName: azure.batch.operations.FileOperations.delete_from_task
  isExternal: false
  name: delete_from_task(job_id, task_id, file_path, recursive=None, file_delete_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.delete_from_task
- fullName: azure.batch.operations.FileOperations.get_from_compute_node
  isExternal: false
  name: get_from_compute_node(pool_id, node_id, file_path, file_get_from_compute_node_options=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.get_from_compute_node
- fullName: azure.batch.operations.FileOperations.get_from_task
  isExternal: false
  name: get_from_task(job_id, task_id, file_path, file_get_from_task_options=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.get_from_task
- fullName: azure.batch.operations.FileOperations.get_properties_from_compute_node
  isExternal: false
  name: get_properties_from_compute_node(pool_id, node_id, file_path, file_get_properties_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.get_properties_from_compute_node
- fullName: azure.batch.operations.FileOperations.get_properties_from_task
  isExternal: false
  name: get_properties_from_task(job_id, task_id, file_path, file_get_properties_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.get_properties_from_task
- fullName: azure.batch.operations.FileOperations.list_from_compute_node
  isExternal: false
  name: list_from_compute_node(pool_id, node_id, recursive=None, file_list_from_compute_node_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.list_from_compute_node
- fullName: azure.batch.operations.FileOperations.list_from_task
  isExternal: false
  name: list_from_task(job_id, task_id, recursive=None, file_list_from_task_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.list_from_task
- fullName: azure.batch.operations.FileOperations.models
  isExternal: false
  name: models
  parent: azure.batch.operations.FileOperations
  uid: azure.batch.operations.FileOperations.models
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: azure.batch.models.NodeFilePaged[azure.batch.models.NodeFile]
  name: NodeFilePaged[NodeFile]
  spec.python:
  - fullName: azure.batch.models.NodeFilePaged
    name: NodeFilePaged
    uid: azure.batch.models.NodeFilePaged
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.NodeFile
    name: NodeFile
    uid: azure.batch.models.NodeFile
  - fullName: ']'
    name: ']'
  uid: azure.batch.models.NodeFilePaged[azure.batch.models.NodeFile]
