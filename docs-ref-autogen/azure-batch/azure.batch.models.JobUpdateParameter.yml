### YamlMime:PythonClass
uid: azure.batch.models.JobUpdateParameter
name: JobUpdateParameter
fullName: azure.batch.models.JobUpdateParameter
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'The set of changes to be made to a Job.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'JobUpdateParameter(*, pool_info, priority: int = None, max_parallel_tasks:
    int = -1, allow_task_preemption: bool = None, constraints=None, metadata=None,
    on_all_tasks_complete=None, **kwargs)'
  parameters:
  - name: priority
    description: 'The priority of the Job. Priority values can range from

      -1000 to 1000, with -1000 being the lowest priority and 1000 being the

      highest priority. If omitted, it is set to the default value 0.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_parallel_tasks
    description: 'The maximum number of tasks that can be

      executed in parallel for the job. The value of maxParallelTasks must be -1

      or greater than 0 if specified. If not specified, the default value is -1,

      which means there''s no limit to the number of tasks that can be run at

      once. You can update a job''s maxParallelTasks after it has been created

      using the update job API. Default value: -1 .'
    isRequired: true
    types:
    - <xref:int>
  - name: allow_task_preemption
    description: 'Whether Tasks in this job can be preempted

      by other high priority jobs. If the value is set to True, other high

      priority jobs submitted to the system will take precedence and will be

      able requeue tasks from this job. You can update a job''s

      allowTaskPreemption after it has been created using the update job API.'
    isRequired: true
    types:
    - <xref:bool>
  - name: constraints
    description: 'The execution constraints for the Job. If omitted, the

      constraints are cleared.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobConstraints>
  - name: pool_info
    description: 'Required. The Pool on which the Batch service runs the

      Job''s Tasks. You may change the Pool for a Job only when the Job is

      disabled. The Update Job call will fail if you include the poolInfo

      element and the Job is not disabled. If you specify an

      autoPoolSpecification in the poolInfo, only the keepAlive property of the

      autoPoolSpecification can be updated, and then only if the

      autoPoolSpecification has a poolLifetimeOption of Job (other job

      properties can be updated as normal).'
    isRequired: true
    types:
    - <xref:azure.batch.models.PoolInformation>
  - name: metadata
    description: 'If omitted, it takes the default value of an empty list;

      in effect, any existing metadata is deleted.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.MetadataItem>]
  - name: on_all_tasks_complete
    description: 'The action the Batch service should take

      when all Tasks in the Job are in the completed state. If omitted, the

      completion behavior is set to noaction. If the current value is

      terminatejob, this is an error because a Job''s completion behavior may not

      be changed from terminatejob to noaction. You may not change the value

      from terminatejob to noaction - that is, once you have engaged automatic

      Job termination, you cannot turn it off again. If you try to do this, the

      request fails and Batch returns status code 400 (Bad Request) and an

      ''invalid property value'' error response. If you do not specify this

      element in a PUT request, it is equivalent to passing noaction. This is an

      error if the current value is terminatejob. Possible values include:

      ''noAction'', ''terminateJob'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.OnAllTasksComplete>
  keywordOnlyParameters:
  - name: pool_info
    isRequired: true
  - name: priority
    isRequired: true
  - name: max_parallel_tasks
    defaultValue: '-1'
  - name: allow_task_preemption
    isRequired: true
  - name: constraints
    isRequired: true
  - name: metadata
    isRequired: true
  - name: on_all_tasks_complete
    isRequired: true
methods:
- uid: azure.batch.models.JobUpdateParameter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobUpdateParameter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobUpdateParameter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.JobUpdateParameter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobUpdateParameter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.JobUpdateParameter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobUpdateParameter.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
