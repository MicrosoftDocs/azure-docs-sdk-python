### YamlMime:PythonClass
uid: azure.batch.models.CloudJob
name: CloudJob
fullName: azure.batch.models.CloudJob
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: An Azure Batch Job.
constructor:
  syntax: 'CloudJob(*, id: str = None, display_name: str = None, uses_task_dependencies:
    bool = None, url: str = None, e_tag: str = None, last_modified=None, creation_time=None,
    state=None, state_transition_time=None, previous_state=None, previous_state_transition_time=None,
    priority: int = None, allow_task_preemption: bool = None, max_parallel_tasks:
    int = -1, constraints=None, job_manager_task=None, job_preparation_task=None,
    job_release_task=None, common_environment_settings=None, pool_info=None, on_all_tasks_complete=None,
    on_task_failure=None, network_configuration=None, metadata=None, execution_info=None,
    stats=None, **kwargs)'
  parameters:
  - name: id
    description: 'The ID is case-preserving and case-insensitive (that is, you

      may not have two IDs within an Account that differ only by case).'
    isRequired: true
    types:
    - <xref:str>
  - name: display_name
    isRequired: true
    types:
    - <xref:str>
  - name: uses_task_dependencies
    description: 'Whether Tasks in the Job can define

      dependencies on each other. The default is false.'
    isRequired: true
    types:
    - <xref:bool>
  - name: url
    isRequired: true
    types:
    - <xref:str>
  - name: e_tag
    description: 'This is an opaque string. You can use it to detect whether

      the Job has changed between requests. In particular, you can be pass the

      ETag when updating a Job to specify that your changes should take effect

      only if nobody else has modified the Job in the meantime.'
    isRequired: true
    types:
    - <xref:str>
  - name: last_modified
    description: 'This is the last time at which the Job level data,

      such as the Job state or priority, changed. It does not factor in

      task-level changes such as adding new Tasks or Tasks changing state.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: creation_time
    isRequired: true
    types:
    - <xref:datetime>
  - name: state
    description: 'The current state of the Job. Possible values include:

      ''active'', ''disabling'', ''disabled'', ''enabling'', ''terminating'', ''completed'',

      ''deleting'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.JobState>
  - name: state_transition_time
    isRequired: true
    types:
    - <xref:datetime>
  - name: previous_state
    description: 'The previous state of the Job. This property is not

      set if the Job is in its initial Active state. Possible values include:

      ''active'', ''disabling'', ''disabled'', ''enabling'', ''terminating'', ''completed'',

      ''deleting'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.JobState>
  - name: previous_state_transition_time
    description: 'This property is not set if the Job

      is in its initial Active state.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: priority
    description: 'The priority of the Job. Priority values can range from

      -1000 to 1000, with -1000 being the lowest priority and 1000 being the

      highest priority. The default value is 0.'
    isRequired: true
    types:
    - <xref:int>
  - name: allow_task_preemption
    description: 'Whether Tasks in this job can be preempted

      by other high priority jobs. If the value is set to True, other high

      priority jobs submitted to the system will take precedence and will be

      able requeue tasks from this job. You can update a job''s

      allowTaskPreemption after it has been created using the update job API.'
    isRequired: true
    types:
    - <xref:bool>
  - name: max_parallel_tasks
    description: 'The maximum number of tasks that can be

      executed in parallel for the job. The value of maxParallelTasks must be -1

      or greater than 0 if specified. If not specified, the default value is -1,

      which means there''s no limit to the number of tasks that can be run at

      once. You can update a job''s maxParallelTasks after it has been created

      using the update job API. Default value: -1 .'
    isRequired: true
    types:
    - <xref:int>
  - name: constraints
    description: The execution constraints for the Job.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobConstraints>
  - name: job_manager_task
    description: 'Details of a Job Manager Task to be launched when

      the Job is started.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobManagerTask>
  - name: job_preparation_task
    description: 'The Job Preparation Task. The Job Preparation

      Task is a special Task run on each Compute Node before any other Task of

      the Job.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobPreparationTask>
  - name: job_release_task
    description: 'The Job Release Task. The Job Release Task is a

      special Task run at the end of the Job on each Compute Node that has run

      any other Task of the Job.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobReleaseTask>
  - name: common_environment_settings
    description: 'Individual Tasks can override an

      environment setting specified here by specifying the same setting name

      with a different value.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.EnvironmentSetting>]
  - name: pool_info
    description: The Pool settings associated with the Job.
    isRequired: true
    types:
    - <xref:azure.batch.models.PoolInformation>
  - name: on_all_tasks_complete
    description: 'The action the Batch service should take

      when all Tasks in the Job are in the completed state. The default is

      noaction. Possible values include: ''noAction'', ''terminateJob'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.OnAllTasksComplete>
  - name: on_task_failure
    description: 'The action the Batch service should take when any

      Task in the Job fails. A Task is considered to have failed if has a

      failureInfo. A failureInfo is set if the Task completes with a non-zero

      exit code after exhausting its retry count, or if there was an error

      starting the Task, for example due to a resource file download error. The

      default is noaction. Possible values include: ''noAction'',

      ''performExitOptionsJobAction'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.OnTaskFailure>
  - name: network_configuration
    description: The network configuration for the Job.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobNetworkConfiguration>
  - name: metadata
    description: 'The Batch service does not assign any meaning to

      metadata; it is solely for the use of user code.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.MetadataItem>]
  - name: execution_info
    description: The execution information for the Job.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobExecutionInformation>
  - name: stats
    description: 'Resource usage statistics for the entire lifetime of the

      Job. This property is populated only if the CloudJob was retrieved with an

      expand clause including the ''stats'' attribute; otherwise it is null. The

      statistics may not be immediately available. The Batch service performs

      periodic roll-up of statistics. The typical delay is about 30 minutes.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobStatistics>
  keywordOnlyParameters:
  - name: id
    isRequired: true
  - name: display_name
    isRequired: true
  - name: uses_task_dependencies
    isRequired: true
  - name: url
    isRequired: true
  - name: e_tag
    isRequired: true
  - name: last_modified
    isRequired: true
  - name: creation_time
    isRequired: true
  - name: state
    isRequired: true
  - name: state_transition_time
    isRequired: true
  - name: previous_state
    isRequired: true
  - name: previous_state_transition_time
    isRequired: true
  - name: priority
    isRequired: true
  - name: allow_task_preemption
    isRequired: true
  - name: max_parallel_tasks
    defaultValue: '-1'
  - name: constraints
    isRequired: true
  - name: job_manager_task
    isRequired: true
  - name: job_preparation_task
    isRequired: true
  - name: job_release_task
    isRequired: true
  - name: common_environment_settings
    isRequired: true
  - name: pool_info
    isRequired: true
  - name: on_all_tasks_complete
    isRequired: true
  - name: on_task_failure
    isRequired: true
  - name: network_configuration
    isRequired: true
  - name: metadata
    isRequired: true
  - name: execution_info
    isRequired: true
  - name: stats
    isRequired: true
methods:
- uid: azure.batch.models.CloudJob.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.CloudJob.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.CloudJob.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.CloudJob.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.CloudJob.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.CloudJob.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.CloudJob.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
