### YamlMime:PythonClass
uid: azure.batch.operations.JobOperations
name: JobOperations
fullName: azure.batch.operations.JobOperations
module: azure.batch.operations
inheritances:
- builtins.object
summary: 'JobOperations operations.


  You should not instantiate directly this class, but create a Client instance that
  will create it for you and attach it as attribute.'
constructor:
  syntax: JobOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: 'The API version to use for the request. Constant value: "2024-02-01.19.0".'
  name: api_version
methods:
- uid: azure.batch.operations.JobOperations.add
  name: add
  summary: 'Adds a Job to the specified Account.


    The Batch service supports two ways to control the work done as part of

    a Job. In the first approach, the user specifies a Job Manager Task.

    The Batch service launches this Task when it is ready to start the Job.

    The Job Manager Task controls all other Tasks that run under this Job,

    by using the Task APIs. In the second approach, the user directly

    controls the execution of Tasks under an active Job, by using the Task

    APIs. Also note: when naming Jobs, avoid including sensitive

    information such as user names or secret project names. This

    information may appear in telemetry logs accessible to Microsoft

    Support engineers.'
  signature: add(job, job_add_options=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job
    description: The Job to be added.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobAddParameter>
  - name: job_add_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobAddOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.delete
  name: delete
  summary: 'Deletes a Job.


    Deleting a Job also deletes all Tasks that are part of that Job, and

    all Job statistics. This also overrides the retention period for Task

    data; that is, if the Job contains Tasks which are still retained on

    Compute Nodes, the Batch services deletes those Tasks'' working

    directories and all their contents.  When a Delete Job request is

    received, the Batch service sets the Job to the deleting state. All

    update operations on a Job that is in deleting state will fail with

    status code 409 (Conflict), with additional information indicating that

    the Job is being deleted.'
  signature: delete(job_id, job_delete_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: job_delete_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobDeleteOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.disable
  name: disable
  summary: 'Disables the specified Job, preventing new Tasks from running.


    The Batch Service immediately moves the Job to the disabling state.

    Batch then uses the disableTasks parameter to determine what to do with

    the currently running Tasks of the Job. The Job remains in the

    disabling state until the disable operation is completed and all Tasks

    have been dealt with according to the disableTasks option; the Job then

    moves to the disabled state. No new Tasks are started under the Job

    until it moves back to active state. If you try to disable a Job that

    is in any state other than active, disabling, or disabled, the request

    fails with status code 409.'
  signature: disable(job_id, disable_tasks, job_disable_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job to disable.
    isRequired: true
    types:
    - <xref:str>
  - name: disable_tasks
    description: 'Possible values include: ''requeue'', ''terminate'',

      ''wait'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.DisableJobOption>
  - name: job_disable_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobDisableOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.enable
  name: enable
  summary: 'Enables the specified Job, allowing new Tasks to run.


    When you call this API, the Batch service sets a disabled Job to the

    enabling state. After the this operation is completed, the Job moves to

    the active state, and scheduling of new Tasks under the Job resumes.

    The Batch service does not allow a Task to remain in the active state

    for more than 180 days. Therefore, if you enable a Job containing

    active Tasks which were added more than 180 days ago, those Tasks will

    not run.'
  signature: enable(job_id, job_enable_options=None, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job to enable.
    isRequired: true
    types:
    - <xref:str>
  - name: job_enable_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobEnableOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.get
  name: get
  summary: Gets information about the specified Job.
  signature: get(job_id, job_get_options=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job.
    isRequired: true
    types:
    - <xref:str>
  - name: job_get_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobGetOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: CloudJob or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.CloudJob>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.get_task_counts
  name: get_task_counts
  summary: 'Gets the Task counts for the specified Job.


    Task counts provide a count of the Tasks by active, running or

    completed Task state, and a count of Tasks which succeeded or failed.

    Tasks in the preparing state are counted as running. Note that the

    numbers returned may not always be up to date. If you need exact task

    counts, use a list query.'
  signature: get_task_counts(job_id, job_get_task_counts_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job.
    isRequired: true
    types:
    - <xref:str>
  - name: job_get_task_counts_options
    description: 'Additional parameters for the

      operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobGetTaskCountsOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: TaskCountsResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.batch.models.TaskCountsResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.list
  name: list
  summary: Lists all of the Jobs in the specified Account.
  signature: list(job_list_options=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job_list_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobListOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CloudJob
    types:
    - <xref:azure.batch.models.CloudJobPaged>[<xref:azure.batch.models.CloudJob>]
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.list_from_job_schedule
  name: list_from_job_schedule
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  signature: list_from_job_schedule(job_schedule_id, job_list_from_job_schedule_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job_schedule_id
    description: 'The ID of the Job Schedule from which you want

      to get a list of Jobs.'
    isRequired: true
    types:
    - <xref:str>
  - name: job_list_from_job_schedule_options
    description: 'Additional parameters for

      the operation'
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobListFromJobScheduleOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: An iterator like instance of CloudJob
    types:
    - <xref:azure.batch.models.CloudJobPaged>[<xref:azure.batch.models.CloudJob>]
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.list_preparation_and_release_task_status
  name: list_preparation_and_release_task_status
  summary: 'Lists the execution status of the Job Preparation and Job Release Task

    for the specified Job across the Compute Nodes where the Job has run.


    This API returns the Job Preparation and Job Release Task status on all

    Compute Nodes that have run the Job Preparation or Job Release Task.

    This includes Compute Nodes which have since been removed from the

    Pool. If this API is invoked on a Job which has no Job Preparation or

    Job Release Task, the Batch service returns HTTP status code 409

    (Conflict) with an error code of JobPreparationTaskNotSpecified.'
  signature: list_preparation_and_release_task_status(job_id, job_list_preparation_and_release_task_status_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job.
    isRequired: true
    types:
    - <xref:str>
  - name: job_list_preparation_and_release_task_status_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobListPreparationAndReleaseTaskStatusOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: 'An iterator like instance of

      JobPreparationAndReleaseTaskExecutionInformation'
    types:
    - <xref:azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged>[<xref:azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation>]
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.patch
  name: patch
  summary: 'Updates the properties of the specified Job.


    This replaces only the Job properties specified in the request. For

    example, if the Job has constraints, and a request does not specify the

    constraints element, then the Job keeps the existing constraints.'
  signature: patch(job_id, job_patch_parameter, job_patch_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job whose properties you want to update.
    isRequired: true
    types:
    - <xref:str>
  - name: job_patch_parameter
    description: The parameters for the request.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobPatchParameter>
  - name: job_patch_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobPatchOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.terminate
  name: terminate
  summary: 'Terminates the specified Job, marking it as completed.


    When a Terminate Job request is received, the Batch service sets the

    Job to the terminating state. The Batch service then terminates any

    running Tasks associated with the Job and runs any required Job release

    Tasks. Then the Job moves into the completed state. If there are any

    Tasks in the Job in the active state, they will remain in the active

    state. Once a Job is terminated, new Tasks cannot be added and any

    remaining active Tasks will not be scheduled.'
  signature: terminate(job_id, terminate_reason=None, job_terminate_options=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job to terminate.
    isRequired: true
    types:
    - <xref:str>
  - name: terminate_reason
    defaultValue: None
    types:
    - <xref:str>
  - name: job_terminate_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobTerminateOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
- uid: azure.batch.operations.JobOperations.update
  name: update
  summary: 'Updates the properties of the specified Job.


    This fully replaces all the updatable properties of the Job. For

    example, if the Job has constraints associated with it and if

    constraints is not specified with this request, then the Batch service

    will remove the existing constraints.'
  signature: update(job_id, job_update_parameter, job_update_options=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: job_id
    description: The ID of the Job whose properties you want to update.
    isRequired: true
    types:
    - <xref:str>
  - name: job_update_parameter
    description: The parameters for the request.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobUpdateParameter>
  - name: job_update_options
    description: Additional parameters for the operation
    defaultValue: None
    types:
    - <xref:azure.batch.models.JobUpdateOptions>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.batch.models.BatchErrorException
attributes:
- uid: azure.batch.operations.JobOperations.models
  name: models
  signature: models = <module 'azure.batch.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\batch\\models\\__init__.py'>
