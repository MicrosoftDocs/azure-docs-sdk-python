### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.batch.operations.JobOperations.add
  - azure.batch.operations.JobOperations.delete
  - azure.batch.operations.JobOperations.disable
  - azure.batch.operations.JobOperations.enable
  - azure.batch.operations.JobOperations.get
  - azure.batch.operations.JobOperations.get_all_lifetime_statistics
  - azure.batch.operations.JobOperations.get_task_counts
  - azure.batch.operations.JobOperations.list
  - azure.batch.operations.JobOperations.list_from_job_schedule
  - azure.batch.operations.JobOperations.list_preparation_and_release_task_status
  - azure.batch.operations.JobOperations.patch
  - azure.batch.operations.JobOperations.terminate
  - azure.batch.operations.JobOperations.update
  - azure.batch.operations.JobOperations.models
  class: azure.batch.operations.JobOperations
  fullName: azure.batch.operations.JobOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.batch.operations
  name: JobOperations
  summary: 'JobOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: JobOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API Version. Constant value: "2020-03-01.11.0".'
      id: api_version
  type: class
  uid: azure.batch.operations.JobOperations
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.add
  langs:
  - python
  module: azure.batch.operations
  name: add(job, job_add_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: add
  summary: 'Adds a Job to the specified Account.


    The Batch service supports two ways to control the work done as part of

    a Job. In the first approach, the user specifies a Job Manager Task.

    The Batch service launches this Task when it is ready to start the Job.

    The Job Manager Task controls all other Tasks that run under this Job,

    by using the Task APIs. In the second approach, the user directly

    controls the execution of Tasks under an active Job, by using the Task

    APIs. Also note: when naming Jobs, avoid including sensitive

    information such as user names or secret project names. This

    information may appear in telemetry logs accessible to Microsoft

    Support engineers.'
  syntax:
    content: add(job, job_add_options=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The Job to be added.
      id: job
      isRequired: true
      type:
      - azure.batch.models.JobAddParameter
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_add_options
      type:
      - azure.batch.models.JobAddOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.add
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.delete
  langs:
  - python
  module: azure.batch.operations
  name: delete(job_id, job_delete_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes a Job.


    Deleting a Job also deletes all Tasks that are part of that Job, and

    all Job statistics. This also overrides the retention period for Task

    data; that is, if the Job contains Tasks which are still retained on

    Compute Nodes, the Batch services deletes those Tasks'' working

    directories and all their contents.  When a Delete Job request is

    received, the Batch service sets the Job to the deleting state. All

    update operations on a Job that is in deleting state will fail with

    status code 409 (Conflict), with additional information indicating that

    the Job is being deleted.'
  syntax:
    content: delete(job_id, job_delete_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The ID of the Job to delete.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_delete_options
      type:
      - azure.batch.models.JobDeleteOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.delete
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.disable
  langs:
  - python
  module: azure.batch.operations
  name: disable(job_id, disable_tasks, job_disable_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: disable
  summary: 'Disables the specified Job, preventing new Tasks from running.


    The Batch Service immediately moves the Job to the disabling state.

    Batch then uses the disableTasks parameter to determine what to do with

    the currently running Tasks of the Job. The Job remains in the

    disabling state until the disable operation is completed and all Tasks

    have been dealt with according to the disableTasks option; the Job then

    moves to the disabled state. No new Tasks are started under the Job

    until it moves back to active state. If you try to disable a Job that

    is in any state other than active, disabling, or disabled, the request

    fails with status code 409.'
  syntax:
    content: disable(job_id, disable_tasks, job_disable_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The ID of the Job to disable.
      id: job_id
      isRequired: true
      type:
      - str
    - description: 'What to do with active Tasks associated with the

        Job. Possible values include: ''requeue'', ''terminate'', ''wait'''
      id: disable_tasks
      isRequired: true
      type:
      - str
      - azure.batch.models.DisableJobOption
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_disable_options
      type:
      - azure.batch.models.JobDisableOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.disable
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.enable
  langs:
  - python
  module: azure.batch.operations
  name: enable(job_id, job_enable_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: enable
  summary: 'Enables the specified Job, allowing new Tasks to run.


    When you call this API, the Batch service sets a disabled Job to the

    enabling state. After the this operation is completed, the Job moves to

    the active state, and scheduling of new Tasks under the Job resumes.

    The Batch service does not allow a Task to remain in the active state

    for more than 180 days. Therefore, if you enable a Job containing

    active Tasks which were added more than 180 days ago, those Tasks will

    not run.'
  syntax:
    content: enable(job_id, job_enable_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The ID of the Job to enable.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_enable_options
      type:
      - azure.batch.models.JobEnableOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.enable
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.get
  langs:
  - python
  module: azure.batch.operations
  name: get(job_id, job_get_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get
  summary: Gets information about the specified Job.
  syntax:
    content: get(job_id, job_get_options=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_get_options
      type:
      - azure.batch.models.JobGetOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: CloudJob or ClientRawResponse if raw=true
      type:
      - azure.batch.models.CloudJob
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.get
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.get_all_lifetime_statistics
  langs:
  - python
  module: azure.batch.operations
  name: get_all_lifetime_statistics(job_get_all_lifetime_statistics_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_all_lifetime_statistics
  summary: 'Gets lifetime summary statistics for all of the Jobs in the specified

    Account.


    Statistics are aggregated across all Jobs that have ever existed in the

    Account, from Account creation to the last update time of the

    statistics. The statistics may not be immediately available. The Batch

    service performs periodic roll-up of statistics. The typical delay is

    about 30 minutes.'
  syntax:
    content: get_all_lifetime_statistics(job_get_all_lifetime_statistics_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'Additional parameters

        for the operation'
      id: job_get_all_lifetime_statistics_options
      type:
      - azure.batch.models.JobGetAllLifetimeStatisticsOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: JobStatistics or ClientRawResponse if raw=true
      type:
      - azure.batch.models.JobStatistics
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.get_all_lifetime_statistics
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.get_task_counts
  langs:
  - python
  module: azure.batch.operations
  name: get_task_counts(job_id, job_get_task_counts_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_task_counts
  summary: 'Gets the Task counts for the specified Job.


    Task counts provide a count of the Tasks by active, running or

    completed Task state, and a count of Tasks which succeeded or failed.

    Tasks in the preparing state are counted as running.'
  syntax:
    content: get_task_counts(job_id, job_get_task_counts_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The ID of the Job.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: job_get_task_counts_options
      type:
      - azure.batch.models.JobGetTaskCountsOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: TaskCounts or ClientRawResponse if raw=true
      type:
      - azure.batch.models.TaskCounts
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.get_task_counts
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.list
  langs:
  - python
  module: azure.batch.operations
  name: list(job_list_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: list(job_list_options=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_list_options
      type:
      - azure.batch.models.JobListOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of CloudJob
      type:
      - azure.batch.models.CloudJobPaged[azure.batch.models.CloudJob]
  type: method
  uid: azure.batch.operations.JobOperations.list
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.list_from_job_schedule
  langs:
  - python
  module: azure.batch.operations
  name: list_from_job_schedule(job_schedule_id, job_list_from_job_schedule_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_from_job_schedule
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: list_from_job_schedule(job_schedule_id, job_list_from_job_schedule_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The ID of the Job Schedule from which you want

        to get a list of Jobs.'
      id: job_schedule_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for

        the operation'
      id: job_list_from_job_schedule_options
      type:
      - azure.batch.models.JobListFromJobScheduleOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of CloudJob
      type:
      - azure.batch.models.CloudJobPaged[azure.batch.models.CloudJob]
  type: method
  uid: azure.batch.operations.JobOperations.list_from_job_schedule
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.list_preparation_and_release_task_status
  langs:
  - python
  module: azure.batch.operations
  name: list_preparation_and_release_task_status(job_id, job_list_preparation_and_release_task_status_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list_preparation_and_release_task_status
  summary: 'Lists the execution status of the Job Preparation and Job Release Task

    for the specified Job across the Compute Nodes where the Job has run.


    This API returns the Job Preparation and Job Release Task status on all

    Compute Nodes that have run the Job Preparation or Job Release Task.

    This includes Compute Nodes which have since been removed from the

    Pool. If this API is invoked on a Job which has no Job Preparation or

    Job Release Task, the Batch service returns HTTP status code 409

    (Conflict) with an error code of JobPreparationTaskNotSpecified.'
  syntax:
    content: list_preparation_and_release_task_status(job_id, job_list_preparation_and_release_task_status_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_list_preparation_and_release_task_status_options
      type:
      - azure.batch.models.JobListPreparationAndReleaseTaskStatusOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: 'An iterator like instance of

        JobPreparationAndReleaseTaskExecutionInformation'
      type:
      - azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged[azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation]
  type: method
  uid: azure.batch.operations.JobOperations.list_preparation_and_release_task_status
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.patch
  langs:
  - python
  module: azure.batch.operations
  name: patch(job_id, job_patch_parameter, job_patch_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: patch
  summary: 'Updates the properties of the specified Job.


    This replaces only the Job properties specified in the request. For

    example, if the Job has constraints, and a request does not specify the

    constraints element, then the Job keeps the existing constraints.'
  syntax:
    content: patch(job_id, job_patch_parameter, job_patch_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The ID of the Job whose properties you want to update.
      id: job_id
      isRequired: true
      type:
      - str
    - description: The parameters for the request.
      id: job_patch_parameter
      isRequired: true
      type:
      - azure.batch.models.JobPatchParameter
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_patch_options
      type:
      - azure.batch.models.JobPatchOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.patch
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.terminate
  langs:
  - python
  module: azure.batch.operations
  name: terminate(job_id, terminate_reason=None, job_terminate_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: terminate
  summary: 'Terminates the specified Job, marking it as completed.


    When a Terminate Job request is received, the Batch service sets the

    Job to the terminating state. The Batch service then terminates any

    running Tasks associated with the Job and runs any required Job release

    Tasks. Then the Job moves into the completed state. If there are any

    Tasks in the Job in the active state, they will remain in the active

    state. Once a Job is terminated, new Tasks cannot be added and any

    remaining active Tasks will not be scheduled.'
  syntax:
    content: terminate(job_id, terminate_reason=None, job_terminate_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The ID of the Job to terminate.
      id: job_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'The text you want to appear as the Job''s

        TerminateReason. The default is ''UserTerminate''.'
      id: terminate_reason
      type:
      - str
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_terminate_options
      type:
      - azure.batch.models.JobTerminateOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.terminate
- class: azure.batch.operations.JobOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.JobOperations.update
  langs:
  - python
  module: azure.batch.operations
  name: update(job_id, job_update_parameter, job_update_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: 'Updates the properties of the specified Job.


    This fully replaces all the updatable properties of the Job. For

    example, if the Job has constraints associated with it and if

    constraints is not specified with this request, then the Batch service

    will remove the existing constraints.'
  syntax:
    content: update(job_id, job_update_parameter, job_update_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The ID of the Job whose properties you want to update.
      id: job_id
      isRequired: true
      type:
      - str
    - description: The parameters for the request.
      id: job_update_parameter
      isRequired: true
      type:
      - azure.batch.models.JobUpdateParameter
    - defaultValue: None
      description: Additional parameters for the operation
      id: job_update_options
      type:
      - azure.batch.models.JobUpdateOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.JobOperations.update
- class: azure.batch.operations.JobOperations
  fullName: azure.batch.operations.JobOperations.models
  langs:
  - python
  module: azure.batch.operations
  name: models
  syntax:
    content: models = <module 'azure.batch.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\batch\\models\\__init__.py'>
  type: attribute
  uid: azure.batch.operations.JobOperations.models
references:
- fullName: azure.batch.operations.JobOperations.add
  isExternal: false
  name: add(job, job_add_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.add
- fullName: azure.batch.operations.JobOperations.delete
  isExternal: false
  name: delete(job_id, job_delete_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.delete
- fullName: azure.batch.operations.JobOperations.disable
  isExternal: false
  name: disable(job_id, disable_tasks, job_disable_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.disable
- fullName: azure.batch.operations.JobOperations.enable
  isExternal: false
  name: enable(job_id, job_enable_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.enable
- fullName: azure.batch.operations.JobOperations.get
  isExternal: false
  name: get(job_id, job_get_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.get
- fullName: azure.batch.operations.JobOperations.get_all_lifetime_statistics
  isExternal: false
  name: get_all_lifetime_statistics(job_get_all_lifetime_statistics_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.get_all_lifetime_statistics
- fullName: azure.batch.operations.JobOperations.get_task_counts
  isExternal: false
  name: get_task_counts(job_id, job_get_task_counts_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.get_task_counts
- fullName: azure.batch.operations.JobOperations.list
  isExternal: false
  name: list(job_list_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.list
- fullName: azure.batch.operations.JobOperations.list_from_job_schedule
  isExternal: false
  name: list_from_job_schedule(job_schedule_id, job_list_from_job_schedule_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.list_from_job_schedule
- fullName: azure.batch.operations.JobOperations.list_preparation_and_release_task_status
  isExternal: false
  name: list_preparation_and_release_task_status(job_id, job_list_preparation_and_release_task_status_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.list_preparation_and_release_task_status
- fullName: azure.batch.operations.JobOperations.patch
  isExternal: false
  name: patch(job_id, job_patch_parameter, job_patch_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.patch
- fullName: azure.batch.operations.JobOperations.terminate
  isExternal: false
  name: terminate(job_id, terminate_reason=None, job_terminate_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.terminate
- fullName: azure.batch.operations.JobOperations.update
  isExternal: false
  name: update(job_id, job_update_parameter, job_update_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.update
- fullName: azure.batch.operations.JobOperations.models
  isExternal: false
  name: models
  parent: azure.batch.operations.JobOperations
  uid: azure.batch.operations.JobOperations.models
- fullName: azure.batch.models.CloudJobPaged[azure.batch.models.CloudJob]
  name: CloudJobPaged[CloudJob]
  spec.python:
  - fullName: azure.batch.models.CloudJobPaged
    name: CloudJobPaged
    uid: azure.batch.models.CloudJobPaged
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.CloudJob
    name: CloudJob
    uid: azure.batch.models.CloudJob
  - fullName: ']'
    name: ']'
  uid: azure.batch.models.CloudJobPaged[azure.batch.models.CloudJob]
- fullName: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged[azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation]
  name: JobPreparationAndReleaseTaskExecutionInformationPaged[JobPreparationAndReleaseTaskExecutionInformation]
  spec.python:
  - fullName: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged
    name: JobPreparationAndReleaseTaskExecutionInformationPaged
    uid: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    uid: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation
  - fullName: ']'
    name: ']'
  uid: azure.batch.models.JobPreparationAndReleaseTaskExecutionInformationPaged[azure.batch.models.JobPreparationAndReleaseTaskExecutionInformation]
