### YamlMime:PythonClass
uid: azure.batch.models.PoolPatchParameter
name: PoolPatchParameter
fullName: azure.batch.models.PoolPatchParameter
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: The set of changes to be made to a Pool.
constructor:
  syntax: PoolPatchParameter(*, start_task=None, certificate_references=None, application_package_references=None,
    metadata=None, target_node_communication_mode=None, **kwargs)
  parameters:
  - name: start_task
    description: 'A Task to run on each Compute Node as it joins the

      Pool. The Task runs when the Compute Node is added to the Pool or when the

      Compute Node is restarted. If this element is present, it overwrites any

      existing StartTask. If omitted, any existing StartTask is left unchanged.'
    isRequired: true
    types:
    - <xref:azure.batch.models.StartTask>
  - name: certificate_references
    description: 'If this element is present, it replaces any

      existing Certificate references configured on the Pool. If omitted, any

      existing Certificate references are left unchanged. For Windows Nodes, the

      Batch service installs the Certificates to the specified Certificate store

      and location. For Linux Compute Nodes, the Certificates are stored in a

      directory inside the Task working directory and an environment variable

      AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this

      location. For Certificates with visibility of ''remoteUser'', a ''certs''

      directory is created in the user''s home directory (e.g.,

      /home/{user-name}/certs) and Certificates are placed in that directory.

      Warning: This property is deprecated and will be removed after February,

      2024. Please use the [Azure KeyVault

      Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)

      instead.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.CertificateReference>]
  - name: application_package_references
    description: 'Changes to Package references

      affect all new Nodes joining the Pool, but do not affect Compute Nodes

      that are already in the Pool until they are rebooted or reimaged. If this

      element is present, it replaces any existing Package references. If you

      specify an empty collection, then all Package references are removed from

      the Pool. If omitted, any existing Package references are left unchanged.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.ApplicationPackageReference>]
  - name: metadata
    description: 'If this element is present, it replaces any existing

      metadata configured on the Pool. If you specify an empty collection, any

      metadata is removed from the Pool. If omitted, any existing metadata is

      left unchanged.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.MetadataItem>]
  - name: target_node_communication_mode
    description: 'The desired node communication mode

      for the pool. If this element is present, it replaces the existing

      targetNodeCommunicationMode configured on the Pool. If omitted, any

      existing metadata is left unchanged. Possible values include: ''default'',

      ''classic'', ''simplified'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.NodeCommunicationMode>
  keywordOnlyParameters:
  - name: start_task
    isRequired: true
  - name: certificate_references
    isRequired: true
  - name: application_package_references
    isRequired: true
  - name: metadata
    isRequired: true
  - name: target_node_communication_mode
    isRequired: true
methods:
- uid: azure.batch.models.PoolPatchParameter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.PoolPatchParameter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.PoolPatchParameter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.PoolPatchParameter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.PoolPatchParameter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.PoolPatchParameter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.PoolPatchParameter.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
