### YamlMime:PythonClass
uid: azure.batch.models.JobSpecification
name: JobSpecification
fullName: azure.batch.models.JobSpecification
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'Specifies details of the Jobs to be created on a schedule.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'JobSpecification(*, pool_info, priority: int = None, allow_task_preemption:
    bool = None, max_parallel_tasks: int = -1, display_name: str = None, uses_task_dependencies:
    bool = None, on_all_tasks_complete=None, on_task_failure=None, network_configuration=None,
    constraints=None, job_manager_task=None, job_preparation_task=None, job_release_task=None,
    common_environment_settings=None, metadata=None, **kwargs)'
  parameters:
  - name: priority
    description: 'The priority of Jobs created under this schedule.

      Priority values can range from -1000 to 1000, with -1000 being the lowest

      priority and 1000 being the highest priority. The default value is 0. This

      priority is used as the default for all Jobs under the Job Schedule. You

      can update a Job''s priority after it has been created using by using the

      update Job API.'
    isRequired: true
    types:
    - <xref:int>
  - name: allow_task_preemption
    description: 'Whether Tasks in this job can be preempted

      by other high priority jobs. If the value is set to True, other high

      priority jobs submitted to the system will take precedence and will be

      able requeue tasks from this job. You can update a job''s

      allowTaskPreemption after it has been created using the update job API.'
    isRequired: true
    types:
    - <xref:bool>
  - name: max_parallel_tasks
    description: 'The maximum number of tasks that can be

      executed in parallel for the job. The value of maxParallelTasks must be -1

      or greater than 0 if specified. If not specified, the default value is -1,

      which means there''s no limit to the number of tasks that can be run at

      once. You can update a job''s maxParallelTasks after it has been created

      using the update job API. Default value: -1 .'
    isRequired: true
    types:
    - <xref:int>
  - name: display_name
    description: 'The name need not be unique and can contain any

      Unicode characters up to a maximum length of 1024.'
    isRequired: true
    types:
    - <xref:str>
  - name: uses_task_dependencies
    description: 'Whether Tasks in the Job can define

      dependencies on each other. The default is false.'
    isRequired: true
    types:
    - <xref:bool>
  - name: on_all_tasks_complete
    description: 'The action the Batch service should take

      when all Tasks in a Job created under this schedule are in the completed

      state. Note that if a Job contains no Tasks, then all Tasks are considered

      complete. This option is therefore most commonly used with a Job Manager

      task; if you want to use automatic Job termination without a Job Manager,

      you should initially set onAllTasksComplete to noaction and update the Job

      properties to set onAllTasksComplete to terminatejob once you have

      finished adding Tasks. The default is noaction. Possible values include:

      ''noAction'', ''terminateJob'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.OnAllTasksComplete>
  - name: on_task_failure
    description: 'The action the Batch service should take when any

      Task fails in a Job created under this schedule. A Task is considered to

      have failed if it have failed if has a failureInfo. A failureInfo is set

      if the Task completes with a non-zero exit code after exhausting its retry

      count, or if there was an error starting the Task, for example due to a

      resource file download error. The default is noaction. Possible values

      include: ''noAction'', ''performExitOptionsJobAction'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.OnTaskFailure>
  - name: network_configuration
    description: The network configuration for the Job.
    isRequired: true
    types:
    - <xref:azure.batch.models.JobNetworkConfiguration>
  - name: constraints
    description: 'The execution constraints for Jobs created under this

      schedule.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobConstraints>
  - name: job_manager_task
    description: 'The details of a Job Manager Task to be launched

      when a Job is started under this schedule. If the Job does not specify a

      Job Manager Task, the user must explicitly add Tasks to the Job using the

      Task API. If the Job does specify a Job Manager Task, the Batch service

      creates the Job Manager Task when the Job is created, and will try to

      schedule the Job Manager Task before scheduling other Tasks in the Job.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobManagerTask>
  - name: job_preparation_task
    description: 'The Job Preparation Task for Jobs created

      under this schedule. If a Job has a Job Preparation Task, the Batch

      service will run the Job Preparation Task on a Node before starting any

      Tasks of that Job on that Compute Node.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobPreparationTask>
  - name: job_release_task
    description: 'The Job Release Task for Jobs created under this

      schedule. The primary purpose of the Job Release Task is to undo changes

      to Nodes made by the Job Preparation Task. Example activities include

      deleting local files, or shutting down services that were started as part

      of Job preparation. A Job Release Task cannot be specified without also

      specifying a Job Preparation Task for the Job. The Batch service runs the

      Job Release Task on the Compute Nodes that have run the Job Preparation

      Task.'
    isRequired: true
    types:
    - <xref:azure.batch.models.JobReleaseTask>
  - name: common_environment_settings
    description: 'Individual Tasks can override an

      environment setting specified here by specifying the same setting name

      with a different value.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.EnvironmentSetting>]
  - name: pool_info
    description: 'Required. The Pool on which the Batch service runs the

      Tasks of Jobs created under this schedule.'
    isRequired: true
    types:
    - <xref:azure.batch.models.PoolInformation>
  - name: metadata
    description: 'The Batch service does not assign any meaning to

      metadata; it is solely for the use of user code.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.batch.models.MetadataItem>]
  keywordOnlyParameters:
  - name: pool_info
    isRequired: true
  - name: priority
    isRequired: true
  - name: allow_task_preemption
    isRequired: true
  - name: max_parallel_tasks
    defaultValue: '-1'
  - name: display_name
    isRequired: true
  - name: uses_task_dependencies
    isRequired: true
  - name: on_all_tasks_complete
    isRequired: true
  - name: on_task_failure
    isRequired: true
  - name: network_configuration
    isRequired: true
  - name: constraints
    isRequired: true
  - name: job_manager_task
    isRequired: true
  - name: job_preparation_task
    isRequired: true
  - name: job_release_task
    isRequired: true
  - name: common_environment_settings
    isRequired: true
  - name: metadata
    isRequired: true
methods:
- uid: azure.batch.models.JobSpecification.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobSpecification.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobSpecification.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.JobSpecification.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.JobSpecification.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.JobSpecification.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.JobSpecification.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
