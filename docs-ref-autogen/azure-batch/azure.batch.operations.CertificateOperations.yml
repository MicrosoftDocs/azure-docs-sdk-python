### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.batch.operations.CertificateOperations.add
  - azure.batch.operations.CertificateOperations.cancel_deletion
  - azure.batch.operations.CertificateOperations.delete
  - azure.batch.operations.CertificateOperations.get
  - azure.batch.operations.CertificateOperations.list
  - azure.batch.operations.CertificateOperations.models
  class: azure.batch.operations.CertificateOperations
  fullName: azure.batch.operations.CertificateOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.batch.operations
  name: CertificateOperations
  summary: 'CertificateOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: CertificateOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API Version. Constant value: "2020-03-01.11.0".'
      id: api_version
  type: class
  uid: azure.batch.operations.CertificateOperations
- class: azure.batch.operations.CertificateOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.CertificateOperations.add
  langs:
  - python
  module: azure.batch.operations
  name: add(certificate, certificate_add_options=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: add
  summary: Adds a Certificate to the specified Account.
  syntax:
    content: add(certificate, certificate_add_options=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: The Certificate to be added.
      id: certificate
      isRequired: true
      type:
      - azure.batch.models.CertificateAddParameter
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: certificate_add_options
      type:
      - azure.batch.models.CertificateAddOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.CertificateOperations.add
- class: azure.batch.operations.CertificateOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.CertificateOperations.cancel_deletion
  langs:
  - python
  module: azure.batch.operations
  name: cancel_deletion(thumbprint_algorithm, thumbprint, certificate_cancel_deletion_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: cancel_deletion
  summary: 'Cancels a failed deletion of a Certificate from the specified Account.


    If you try to delete a Certificate that is being used by a Pool or

    Compute Node, the status of the Certificate changes to deleteFailed. If

    you decide that you want to continue using the Certificate, you can use

    this operation to set the status of the Certificate back to active. If

    you intend to delete the Certificate, you do not need to run this

    operation after the deletion failed. You must make sure that the

    Certificate is not being used by any resources, and then you can try

    again to delete the Certificate.'
  syntax:
    content: cancel_deletion(thumbprint_algorithm, thumbprint, certificate_cancel_deletion_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The algorithm used to derive the

        thumbprint parameter. This must be sha1.'
      id: thumbprint_algorithm
      isRequired: true
      type:
      - str
    - description: The thumbprint of the Certificate being deleted.
      id: thumbprint
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for

        the operation'
      id: certificate_cancel_deletion_options
      type:
      - azure.batch.models.CertificateCancelDeletionOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.CertificateOperations.cancel_deletion
- class: azure.batch.operations.CertificateOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.CertificateOperations.delete
  langs:
  - python
  module: azure.batch.operations
  name: delete(thumbprint_algorithm, thumbprint, certificate_delete_options=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes a Certificate from the specified Account.


    You cannot delete a Certificate if a resource (Pool or Compute Node) is

    using it. Before you can delete a Certificate, you must therefore make

    sure that the Certificate is not associated with any existing Pools,

    the Certificate is not installed on any Nodes (even if you remove a

    Certificate from a Pool, it is not removed from existing Compute Nodes

    in that Pool until they restart), and no running Tasks depend on the

    Certificate. If you try to delete a Certificate that is in use, the

    deletion fails. The Certificate status changes to deleteFailed. You can

    use Cancel Delete Certificate to set the status back to active if you

    decide that you want to continue using the Certificate.'
  syntax:
    content: delete(thumbprint_algorithm, thumbprint, certificate_delete_options=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The algorithm used to derive the

        thumbprint parameter. This must be sha1.'
      id: thumbprint_algorithm
      isRequired: true
      type:
      - str
    - description: The thumbprint of the Certificate to be deleted.
      id: thumbprint
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: certificate_delete_options
      type:
      - azure.batch.models.CertificateDeleteOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.CertificateOperations.delete
- class: azure.batch.operations.CertificateOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.CertificateOperations.get
  langs:
  - python
  module: azure.batch.operations
  name: get(thumbprint_algorithm, thumbprint, certificate_get_options=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: Gets information about the specified Certificate.
  syntax:
    content: get(thumbprint_algorithm, thumbprint, certificate_get_options=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The algorithm used to derive the

        thumbprint parameter. This must be sha1.'
      id: thumbprint_algorithm
      isRequired: true
      type:
      - str
    - description: The thumbprint of the Certificate to get.
      id: thumbprint
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: certificate_get_options
      type:
      - azure.batch.models.CertificateGetOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Certificate or ClientRawResponse if raw=true
      type:
      - azure.batch.models.Certificate
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.batch.operations.CertificateOperations.get
- class: azure.batch.operations.CertificateOperations
  exceptions:
  - type: azure.batch.models.BatchErrorException
  fullName: azure.batch.operations.CertificateOperations.list
  langs:
  - python
  module: azure.batch.operations
  name: list(certificate_list_options=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: 'Lists all of the Certificates that have been added to the specified

    Account.'
  syntax:
    content: list(certificate_list_options=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'Additional parameters for the

        operation'
      id: certificate_list_options
      type:
      - azure.batch.models.CertificateListOptions
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of Certificate
      type:
      - azure.batch.models.CertificatePaged[azure.batch.models.Certificate]
  type: method
  uid: azure.batch.operations.CertificateOperations.list
- class: azure.batch.operations.CertificateOperations
  fullName: azure.batch.operations.CertificateOperations.models
  langs:
  - python
  module: azure.batch.operations
  name: models
  syntax:
    content: models = <module 'azure.batch.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\batch\\models\\__init__.py'>
  type: attribute
  uid: azure.batch.operations.CertificateOperations.models
references:
- fullName: azure.batch.operations.CertificateOperations.add
  isExternal: false
  name: add(certificate, certificate_add_options=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.add
- fullName: azure.batch.operations.CertificateOperations.cancel_deletion
  isExternal: false
  name: cancel_deletion(thumbprint_algorithm, thumbprint, certificate_cancel_deletion_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.cancel_deletion
- fullName: azure.batch.operations.CertificateOperations.delete
  isExternal: false
  name: delete(thumbprint_algorithm, thumbprint, certificate_delete_options=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.delete
- fullName: azure.batch.operations.CertificateOperations.get
  isExternal: false
  name: get(thumbprint_algorithm, thumbprint, certificate_get_options=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.get
- fullName: azure.batch.operations.CertificateOperations.list
  isExternal: false
  name: list(certificate_list_options=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.list
- fullName: azure.batch.operations.CertificateOperations.models
  isExternal: false
  name: models
  parent: azure.batch.operations.CertificateOperations
  uid: azure.batch.operations.CertificateOperations.models
- fullName: azure.batch.models.CertificatePaged[azure.batch.models.Certificate]
  name: CertificatePaged[Certificate]
  spec.python:
  - fullName: azure.batch.models.CertificatePaged
    name: CertificatePaged
    uid: azure.batch.models.CertificatePaged
  - fullName: '['
    name: '['
  - fullName: azure.batch.models.Certificate
    name: Certificate
    uid: azure.batch.models.Certificate
  - fullName: ']'
    name: ']'
  uid: azure.batch.models.CertificatePaged[azure.batch.models.Certificate]
