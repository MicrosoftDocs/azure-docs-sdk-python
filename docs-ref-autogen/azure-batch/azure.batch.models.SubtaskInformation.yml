### YamlMime:PythonClass
uid: azure.batch.models.SubtaskInformation
name: SubtaskInformation
fullName: azure.batch.models.SubtaskInformation
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: Information about an Azure Batch subtask.
constructor:
  syntax: 'SubtaskInformation(*, id: int = None, node_info=None, start_time=None,
    end_time=None, exit_code: int = None, container_info=None, failure_info=None,
    state=None, state_transition_time=None, previous_state=None, previous_state_transition_time=None,
    result=None, **kwargs)'
  parameters:
  - name: id
    description: The ID of the subtask.
    isRequired: true
    types:
    - <xref:int>
  - name: node_info
    description: 'Information about the Compute Node on which the subtask

      ran.'
    isRequired: true
    types:
    - <xref:azure.batch.models.ComputeNodeInformation>
  - name: start_time
    isRequired: true
    types:
    - <xref:datetime>
  - name: end_time
    description: 'This property is set only if the subtask is in the

      Completed state.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: exit_code
    description: 'The exit code of the program specified on the subtask

      command line. This property is set only if the subtask is in the completed

      state. In general, the exit code for a process reflects the specific

      convention implemented by the application developer for that process. If

      you use the exit code value to make decisions in your code, be sure that

      you know the exit code convention used by the application process.

      However, if the Batch service terminates the subtask (due to timeout, or

      user termination via the API) you may see an operating system-defined exit

      code.'
    isRequired: true
    types:
    - <xref:int>
  - name: container_info
    description: 'Information about the container under which the

      Task is executing. This property is set only if the Task runs in a

      container context.'
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskContainerExecutionInformation>
  - name: failure_info
    description: 'Information describing the Task failure, if any. This

      property is set only if the Task is in the completed state and encountered

      a failure.'
    isRequired: true
    types:
    - <xref:azure.batch.models.TaskFailureInformation>
  - name: state
    description: 'The current state of the subtask. Possible values include:

      ''preparing'', ''running'', ''completed'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.SubtaskState>
  - name: state_transition_time
    isRequired: true
    types:
    - <xref:datetime>
  - name: previous_state
    description: 'The previous state of the subtask. This property is

      not set if the subtask is in its initial running state. Possible values

      include: ''preparing'', ''running'', ''completed'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.SubtaskState>
  - name: previous_state_transition_time
    description: 'This property is not set if the

      subtask is in its initial running state.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: result
    description: 'The result of the Task execution. If the value is ''failed'',

      then the details of the failure can be found in the failureInfo property.

      Possible values include: ''success'', ''failure'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.TaskExecutionResult>
  keywordOnlyParameters:
  - name: id
    isRequired: true
  - name: node_info
    isRequired: true
  - name: start_time
    isRequired: true
  - name: end_time
    isRequired: true
  - name: exit_code
    isRequired: true
  - name: container_info
    isRequired: true
  - name: failure_info
    isRequired: true
  - name: state
    isRequired: true
  - name: state_transition_time
    isRequired: true
  - name: previous_state
    isRequired: true
  - name: previous_state_transition_time
    isRequired: true
  - name: result
    isRequired: true
methods:
- uid: azure.batch.models.SubtaskInformation.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.SubtaskInformation.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.SubtaskInformation.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.SubtaskInformation.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.SubtaskInformation.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.SubtaskInformation.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.SubtaskInformation.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
