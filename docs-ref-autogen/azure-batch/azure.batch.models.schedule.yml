### YamlMime:PythonClass
uid: azure.batch.models.Schedule
name: Schedule
fullName: azure.batch.models.Schedule
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'The schedule according to which Jobs will be created. All times are fixed

  respective to UTC and are not impacted by daylight saving time.'
constructor:
  syntax: Schedule(*, do_not_run_until=None, do_not_run_after=None, start_window=None,
    recurrence_interval=None, **kwargs)
  parameters:
  - name: do_not_run_until
    description: 'If you do not specify a doNotRunUntil time, the

      schedule becomes ready to create Jobs immediately.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: do_not_run_after
    description: 'If you do not specify a doNotRunAfter time, and

      you are creating a recurring Job Schedule, the Job Schedule will remain

      active until you explicitly terminate it.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: start_window
    description: 'If a Job is not created within the startWindow

      interval, then the ''opportunity'' is lost; no Job will be created until the

      next recurrence of the schedule. If the schedule is recurring, and the

      startWindow is longer than the recurrence interval, then this is

      equivalent to an infinite startWindow, because the Job that is ''due'' in

      one recurrenceInterval is not carried forward into the next recurrence

      interval. The default is infinite. The minimum value is 1 minute. If you

      specify a lower value, the Batch service rejects the schedule with an

      error; if you are calling the REST API directly, the HTTP status code is

      400 (Bad Request).'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: recurrence_interval
    description: 'Because a Job Schedule can have at most one

      active Job under it at any given time, if it is time to create a new Job

      under a Job Schedule, but the previous Job is still running, the Batch

      service will not create the new Job until the previous Job finishes. If

      the previous Job does not finish within the startWindow period of the new

      recurrenceInterval, then no new Job will be scheduled for that interval.

      For recurring Jobs, you should normally specify a jobManagerTask in the

      jobSpecification. If you do not use jobManagerTask, you will need an

      external process to monitor when Jobs are created, add Tasks to the Jobs

      and terminate the Jobs ready for the next recurrence. The default is that

      the schedule does not recur: one Job is created, within the startWindow

      after the doNotRunUntil time, and the schedule is complete as soon as that

      Job finishes. The minimum value is 1 minute. If you specify a lower value,

      the Batch service rejects the schedule with an error; if you are calling

      the REST API directly, the HTTP status code is 400 (Bad Request).'
    isRequired: true
    types:
    - <xref:timedelta>
  keywordOnlyParameters:
  - name: do_not_run_until
    isRequired: true
  - name: do_not_run_after
    isRequired: true
  - name: start_window
    isRequired: true
  - name: recurrence_interval
    isRequired: true
methods:
- uid: azure.batch.models.Schedule.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.Schedule.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.Schedule.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.Schedule.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.Schedule.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.Schedule.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.Schedule.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
