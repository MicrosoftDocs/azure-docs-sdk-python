### YamlMime:PythonClass
uid: azure.batch.models.Schedule
name: Schedule
fullName: azure.batch.models.Schedule
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'The schedule according to which Jobs will be created. All times are fixed

  respective to UTC and are not impacted by daylight saving time.'
constructor:
  syntax: Schedule(*, do_not_run_until=None, do_not_run_after=None, start_window=None,
    recurrence_interval=None, **kwargs)
  parameters:
  - name: do_not_run_until
    description: 'If you do not specify a doNotRunUntil time, the

      schedule becomes ready to create Jobs immediately.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: do_not_run_after
    description: 'If you do not specify a doNotRunAfter time, and

      you are creating a recurring Job Schedule, the Job Schedule will remain

      active until you explicitly terminate it.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: start_window
    description: 'If a Job is not created within the startWindow

      interval, then the ''opportunity'' is lost; no Job will be created until the

      next recurrence of the schedule. If the schedule is recurring, and the

      startWindow is longer than the recurrence interval, then this is

      equivalent to an infinite startWindow, because the Job that is ''due'' in

      one recurrenceInterval is not carried forward into the next recurrence

      interval. The default is infinite. The minimum value is 1 minute. If you

      specify a lower value, the Batch service rejects the schedule with an

      error; if you are calling the REST API directly, the HTTP status code is

      400 (Bad Request).'
    isRequired: true
    types:
    - <xref:timedelta>
  - name: recurrence_interval
    description: 'Because a Job Schedule can have at most one

      active Job under it at any given time, if it is time to create a new Job

      under a Job Schedule, but the previous Job is still running, the Batch

      service will not create the new Job until the previous Job finishes. If

      the previous Job does not finish within the startWindow period of the new

      recurrenceInterval, then no new Job will be scheduled for that interval.

      For recurring Jobs, you should normally specify a jobManagerTask in the

      jobSpecification. If you do not use jobManagerTask, you will need an

      external process to monitor when Jobs are created, add Tasks to the Jobs

      and terminate the Jobs ready for the next recurrence. The default is that

      the schedule does not recur: one Job is created, within the startWindow

      after the doNotRunUntil time, and the schedule is complete as soon as that

      Job finishes. The minimum value is 1 minute. If you specify a lower value,

      the Batch service rejects the schedule with an error; if you are calling

      the REST API directly, the HTTP status code is 400 (Bad Request).'
    isRequired: true
    types:
    - <xref:timedelta>
