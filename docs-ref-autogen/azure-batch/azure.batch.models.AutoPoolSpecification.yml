### YamlMime:PythonClass
uid: azure.batch.models.AutoPoolSpecification
name: AutoPoolSpecification
fullName: azure.batch.models.AutoPoolSpecification
module: azure.batch.models
inheritances:
- msrest.serialization.Model
summary: 'Specifies characteristics for a temporary ''auto pool''. The Batch service

  will create this auto Pool when the Job is submitted.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'AutoPoolSpecification(*, pool_lifetime_option, auto_pool_id_prefix: str
    = None, keep_alive: bool = None, pool=None, **kwargs)'
  parameters:
  - name: auto_pool_id_prefix
    description: 'The Batch service assigns each auto Pool a

      unique identifier on creation. To distinguish between Pools created for

      different purposes, you can specify this element to add a prefix to the ID

      that is assigned. The prefix can be up to 20 characters long.'
    isRequired: true
    types:
    - <xref:str>
  - name: pool_lifetime_option
    description: 'Required. Possible values include:

      ''jobSchedule'', ''job'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.batch.models.PoolLifetimeOption>
  - name: keep_alive
    description: 'Whether to keep an auto Pool alive after its lifetime

      expires. If false, the Batch service deletes the Pool once its lifetime

      (as determined by the poolLifetimeOption setting) expires; that is, when

      the Job or Job Schedule completes. If true, the Batch service does not

      delete the Pool automatically. It is up to the user to delete auto Pools

      created with this option.'
    isRequired: true
    types:
    - <xref:bool>
  - name: pool
    description: The Pool specification for the auto Pool.
    isRequired: true
    types:
    - <xref:azure.batch.models.PoolSpecification>
  keywordOnlyParameters:
  - name: pool_lifetime_option
    isRequired: true
  - name: auto_pool_id_prefix
    isRequired: true
  - name: keep_alive
    isRequired: true
  - name: pool
    isRequired: true
methods:
- uid: azure.batch.models.AutoPoolSpecification.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.AutoPoolSpecification.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.AutoPoolSpecification.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.batch.models.AutoPoolSpecification.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.batch.models.AutoPoolSpecification.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.batch.models.AutoPoolSpecification.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.AutoPoolSpecification.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
