### YamlMime:PythonClass
uid: azure.confidentialledger.ConfidentialLedgerClient
name: ConfidentialLedgerClient
fullName: azure.confidentialledger.ConfidentialLedgerClient
module: azure.confidentialledger
inheritances:
- azure.confidentialledger._client.ConfidentialLedgerClient
summary: 'The ConfidentialLedgerClient writes and retrieves ledger entries against
  the Confidential

  Ledger service.'
constructor:
  syntax: 'ConfidentialLedgerClient(endpoint: str, credential: ConfidentialLedgerCertificateCredential
    | TokenCredential, *, ledger_certificate_path: bytes | str | PathLike, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: 'The Confidential Ledger URL, for example

      [https://contoso.confidentialledger.azure.com](https://contoso.confidentialledger.azure.com).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: A credential object for authenticating with the Confidential Ledger.
    isRequired: true
    types:
    - <xref:typing.Union>[ <xref:azure.confidentialledger.ConfidentialLedgerCertificateCredential>,
      <xref:azure.core.credentials.TokenCredential>]
  keywordOnlyParameters:
  - name: ledger_certificate_path
    description: 'The path to the Confidential Ledger''s TLS certificate. If this

      file does not exist yet, the Confidential Ledger''s TLS certificate will be
      fetched and saved

      to this file.'
    types:
    - <xref:typing.Union>[<xref:bytes>, <xref:str>, <xref:os.PathLike>]
  - name: api_version
    description: 'Api Version. Default value is "2022-05-13". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.confidentialledger.ConfidentialLedgerClient.begin_create_ledger_entry
  name: begin_create_ledger_entry
  summary: 'Writes a ledger entry and returns a poller to wait for it to be durably
    committed. The

    poller returns the result for the initial call to create the ledger entry.


    A collection id may optionally be specified.'
  signature: 'begin_create_ledger_entry(entry: MutableMapping[str, Any] | IO, *, collection_id:
    str | None = None, **kwargs: Any) -> LROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: entry
    description: Ledger entry.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:JSON>, <xref:typing.IO>]
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns a JSON object
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.confidentialledger.ConfidentialLedgerClient.begin_get_ledger_entry
  name: begin_get_ledger_entry
  summary: 'Returns a poller to fetch the ledger entry at the specified transaction
    id.


    A collection id may optionally be specified to indicate the collection from which
    to fetch

    the value.'
  signature: 'begin_get_ledger_entry(transaction_id: str, *, collection_id: str |
    None = None, **kwargs: Any) -> LROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns a JSON object for the ledger
      entry.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.confidentialledger.ConfidentialLedgerClient.begin_get_receipt
  name: begin_get_receipt
  summary: 'Returns a poller for getting a receipt certifying ledger contents at a
    particular

    transaction id.'
  signature: 'begin_get_receipt(transaction_id: str, **kwargs: Any) -> LROPoller[MutableMapping[str,
    Any]]'
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns a JSON object for the receipt.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.confidentialledger.ConfidentialLedgerClient.begin_wait_for_commit
  name: begin_wait_for_commit
  summary: 'Creates a poller that queries the state of the specified transaction until
    it is

    Committed, a state that indicates the transaction is durably stored in the Confidential

    Ledger.'
  signature: begin_wait_for_commit(transaction_id, **kwargs) -> LROPoller[MutableMapping[str,
    Any]]
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller returning a JSON object describing the transaction
      status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.confidentialledger.ConfidentialLedgerClient.close
  name: close
  signature: close() -> None
- uid: azure.confidentialledger.ConfidentialLedgerClient.create_ledger_entry
  name: create_ledger_entry
  summary: 'Writes a ledger entry.


    The result is the expected JSON response with an additional field

    ''transactionId'' which represents the transaction identifier for this write operation.


    A collection id may optionally be specified.'
  signature: 'create_ledger_entry(entry: MutableMapping[str, Any] | IO, *, collection_id:
    str | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: entry
    description: Ledger entry.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:JSON>, <xref:typing.IO>]
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   entry\
    \ = {\n       \"collectionId\": {\n           \"collectionId\": \"str\"  # Required.\n\
    \       },\n       \"contents\": \"str\",  # Required. Contents of the ledger\
    \ entry.\n       \"transactionId\": \"str\"  # Optional. A unique identifier for\
    \ the state of the\n         ledger. If returned as part of a LedgerEntry, it\
    \ indicates the state from which\n         the entry was read.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.create_or_update_user
  name: create_or_update_user
  summary: 'Adds a user or updates a user''s fields.


    A JSON merge patch is applied for existing users.'
  signature: 'create_or_update_user(user_id: str, user_details: MutableMapping[str,
    Any] | IO, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: user_id
    description: The user id, either an AAD object ID or certificate fingerprint.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_details
    description: 'Details about a Confidential Ledger user. Is either a model type
      or a IO

      type. Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"assignedRole\"\
    : \"str\",  # Represents an assignable role. Required. Known\n         values\
    \ are: \"Administrator\", \"Contributor\", and \"Reader\".\n       \"userId\"\
    : \"str\"  # Optional. Identifier for the user. This must either be an\n     \
    \    AAD object id or a certificate fingerprint.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.delete_user
  name: delete_user
  summary: 'Deletes a user from the Confidential Ledger.


    Deletes a user from the Confidential Ledger.'
  signature: 'delete_user(user_id: str, **kwargs: Any) -> None'
  parameters:
  - name: user_id
    description: The user id, either an AAD object ID or certificate fingerprint.
      Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_constitution
  name: get_constitution
  summary: 'Gets the constitution used for governance.


    The constitution is a script that assesses and applies proposals from consortium
    members.'
  signature: 'get_constitution(**kwargs: Any) -> MutableMapping[str, Any]'
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"digest\"\
    : \"str\",  # SHA256 digest of the constitution script. Required.\n       \"script\"\
    : \"str\"  # Contents of the constitution. Required.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_current_ledger_entry
  name: get_current_ledger_entry
  summary: 'Gets the current value available in the ledger.


    A collection id may optionally be specified.'
  signature: 'get_current_ledger_entry(*, collection_id: str | None = None, **kwargs:
    Any) -> MutableMapping[str, Any]'
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"collectionId\"\
    : \"str\",  # Optional.\n       \"contents\": \"str\",  # Contents of the ledger\
    \ entry. Required.\n       \"transactionId\": \"str\"  # Optional. A unique identifier\
    \ for the state of the\n         ledger. If returned as part of a LedgerEntry,\
    \ it indicates the state from which\n         the entry was read.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_enclave_quotes
  name: get_enclave_quotes
  summary: 'Gets quotes for all nodes of the Confidential Ledger.


    A quote is an SGX enclave measurement that can be used to verify the validity
    of a node and its

    enclave.'
  signature: 'get_enclave_quotes(**kwargs: Any) -> MutableMapping[str, Any]'
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"currentNodeId\"\
    : \"str\",  # Id of the Confidential Ledger node responding to\n         the request.\
    \ Required.\n       \"enclaveQuotes\": {\n           \"str\": {\n            \
    \   \"mrenclave\": \"str\",  # Optional. MRENCLAVE value of the code\n       \
    \          running in the enclave.\n               \"nodeId\": \"str\",  # ID\
    \ assigned to this node. Required.\n               \"quoteVersion\": \"str\",\
    \  # Version of the quote presented.\n                 Required.\n           \
    \    \"raw\": \"str\"  # Raw SGX quote, parsable by tools like Open\n        \
    \         Enclave's oeverify. Required.\n           }\n       }\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_ledger_entry
  name: get_ledger_entry
  summary: 'Gets the ledger entry at the specified transaction id. A collection id
    may optionally be

    specified to indicate the collection from which to fetch the value.


    To return older ledger entries, the relevant sections of the ledger must be read
    from disk and

    validated. To prevent blocking within the enclave, the response will indicate
    whether the entry

    is ready and part of the response, or if the loading is still ongoing.'
  signature: 'get_ledger_entry(transaction_id: str, *, collection_id: str | None =
    None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"entry\"\
    : {\n           \"collectionId\": \"str\",  # Optional. The ledger entry found\
    \ as a\n             result of the query. This is only available if the query\
    \ is in Ready state.\n           \"contents\": \"str\",  # Contents of the ledger\
    \ entry. Required.\n           \"transactionId\": \"str\"  # Optional. A unique\
    \ identifier for the state\n             of the ledger. If returned as part of\
    \ a LedgerEntry, it indicates the state\n             from which the entry was\
    \ read.\n       },\n       \"state\": \"str\"  # State of a ledger query. Required.\
    \ Known values are:\n         \"Loading\" and \"Ready\".\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_receipt
  name: get_receipt
  summary: 'Gets a receipt certifying ledger contents at a particular transaction
    id.


    Gets a receipt certifying ledger contents at a particular transaction id.'
  signature: 'get_receipt(transaction_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"receipt\"\
    : {\n           \"cert\": \"str\",  # Optional.\n           \"leaf\": \"str\"\
    ,  # Optional.\n           \"leafComponents\": {\n               \"claimsDigest\"\
    : \"str\",  # Optional.\n               \"commitEvidence\": \"str\",  # Optional.\n\
    \               \"writeSetDigest\": \"str\"  # Optional.\n           },\n    \
    \       \"nodeId\": \"str\",  # Required.\n           \"proof\": [\n         \
    \      {\n                   \"left\": \"str\",  # Optional. Required.\n     \
    \              \"right\": \"str\"  # Optional. Required.\n               }\n \
    \          ],\n           \"root\": \"str\",  # Optional.\n           \"serviceEndorsements\"\
    : [\n               \"str\"  # Optional.\n           ],\n           \"signature\"\
    : \"str\"  # Required.\n       },\n       \"state\": \"str\",  # State of a ledger\
    \ query. Required. Known values are:\n         \"Loading\" and \"Ready\".\n  \
    \     \"transactionId\": \"str\"  # A unique identifier for the state of the ledger.\
    \ If\n         returned as part of a LedgerEntry, it indicates the state from\
    \ which the entry\n         was read. Required.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_transaction_status
  name: get_transaction_status
  summary: 'Gets the status of an entry identified by a transaction id.


    Gets the status of an entry identified by a transaction id.'
  signature: 'get_transaction_status(transaction_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: transaction_id
    description: Identifies a write transaction. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"state\"\
    : \"str\",  # Represents the state of the transaction. Required. Known\n     \
    \    values are: \"Committed\" and \"Pending\".\n       \"transactionId\": \"\
    str\"  # A unique identifier for the state of the ledger. If\n         returned\
    \ as part of a LedgerEntry, it indicates the state from which the entry\n    \
    \     was read. Required.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.get_user
  name: get_user
  summary: 'Gets a user.


    Gets a user.'
  signature: 'get_user(user_id: str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: user_id
    description: The user id, either an AAD object ID or certificate fingerprint.
      Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"assignedRole\"\
    : \"str\",  # Represents an assignable role. Required. Known\n         values\
    \ are: \"Administrator\", \"Contributor\", and \"Reader\".\n       \"userId\"\
    : \"str\"  # Optional. Identifier for the user. This must either be an\n     \
    \    AAD object id or a certificate fingerprint.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.list_collections
  name: list_collections
  summary: 'Retrieves a list of collection ids present in the Confidential Ledger.


    Collection ids are user-created collections of ledger entries.'
  signature: 'list_collections(**kwargs: Any) -> Iterable[MutableMapping[str, Any]]'
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"collectionId\"\
    : \"str\"  # Required.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.list_consortium_members
  name: list_consortium_members
  summary: 'Lists the consortium members.


    Consortium members can manage the Confidential Ledger.'
  signature: 'list_consortium_members(**kwargs: Any) -> Iterable[MutableMapping[str,
    Any]]'
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"certificate\"\
    : \"str\",  # PEM-encoded certificate associated with the member.\n         Required.\n\
    \       \"id\": \"str\"  # Identifier assigned to the member. Required.\n   }\n\
    \   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.list_ledger_entries
  name: list_ledger_entries
  summary: 'Gets ledger entries from a collection corresponding to a range.


    A collection id may optionally be specified. Only entries in the specified (or
    default)

    collection will be returned.'
  signature: 'list_ledger_entries(*, collection_id: str | None = None, from_transaction_id:
    str | None = None, to_transaction_id: str | None = None, **kwargs: Any) -> Iterable[MutableMapping[str,
    Any]]'
  keywordOnlyParameters:
  - name: collection_id
    description: The collection id. Default value is None.
    types:
    - <xref:str>
  - name: from_transaction_id
    description: 'Specify the first transaction ID in a range. Default value is

      None.'
    types:
    - <xref:str>
  - name: to_transaction_id
    description: Specify the last transaction ID in a range. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"collectionId\"\
    : \"str\",  # Optional.\n       \"contents\": \"str\",  # Contents of the ledger\
    \ entry. Required.\n       \"transactionId\": \"str\"  # Optional. A unique identifier\
    \ for the state of the\n         ledger. If returned as part of a LedgerEntry,\
    \ it indicates the state from which\n         the entry was read.\n   }\n   ````\n"
- uid: azure.confidentialledger.ConfidentialLedgerClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
