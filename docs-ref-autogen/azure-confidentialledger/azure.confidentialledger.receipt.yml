### YamlMime:PythonPackage
uid: azure.confidentialledger.receipt
name: receipt
fullName: azure.confidentialledger.receipt
type: import
functions:
- uid: azure.confidentialledger.receipt.compute_claims_digest
  name: compute_claims_digest
  summary: Compute the claims digest from a list of Azure Confidential Ledger application
    claims.
  signature: 'compute_claims_digest(application_claims: List[Dict[str, Any]]) -> str'
  parameters:
  - name: application_claims
    description: List of application claims to be verified against the receipt.
    isRequired: true
    types:
    - <xref:List>[<xref:Dict>[<xref:str>, <xref:Any>]]
  return:
    description: The claims digest of the application claims.
    types:
    - <xref:str>
  exceptions:
  - type: ValueError
    description: If the claims digest computation has failed.
- uid: azure.confidentialledger.receipt.verify_receipt
  name: verify_receipt
  summary: 'Verify that a given Azure Confidential Ledger write transaction receipt

    is valid from its content and the Confidential Ledger service identity

    certificate.'
  signature: 'verify_receipt(receipt: Dict[str, Any], service_cert: str, *, application_claims:
    List[Dict[str, Any]] | None = None) -> None'
  parameters:
  - name: receipt
    description: 'Receipt dictionary containing the content of an Azure

      Confidential Ledger write transaction receipt.'
    isRequired: true
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
  - name: service_cert
    description: 'String containing the PEM-encoded

      certificate of the Confidential Ledger service identity.'
    isRequired: true
    types:
    - <xref:str>
  - name: application_claims
    description: List of application claims to be verified against the receipt.
    types:
    - <xref:Optional>[<xref:List>[<xref:Dict>[<xref:str>, <xref:Any>]]]
  exceptions:
  - type: ValueError
    description: If the receipt verification has failed.
