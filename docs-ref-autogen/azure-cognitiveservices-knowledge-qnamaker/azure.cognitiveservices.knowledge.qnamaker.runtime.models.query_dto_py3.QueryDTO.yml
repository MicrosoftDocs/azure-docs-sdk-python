### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.cognitiveservices.knowledge.qnamaker.runtime.models.query_dto_py3.QueryDTO
  fullName: azure.cognitiveservices.knowledge.qnamaker.runtime.models.query_dto_py3.QueryDTO
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.cognitiveservices.knowledge.qnamaker.runtime.models.query_dto_py3
  name: QueryDTO
  summary: POST body schema to query the knowledgebase.
  syntax:
    content: 'QueryDTO(*, qna_id: str = None, question: str = None, top: int = None,
      user_id: str = None, is_test: bool = None, score_threshold: float = None, context=None,
      ranker_type: str = None, strict_filters=None, **kwargs) -> None'
    parameters:
    - description: 'Exact qnaId to fetch from the knowledgebase, this field

        takes priority over question.'
      id: qna_id
      type:
      - str
    - description: User question to query against the knowledge base.
      id: question
      type:
      - str
    - description: Max number of answers to be returned for the question.
      id: top
      type:
      - int
    - description: Unique identifier for the user.
      id: user_id
      type:
      - str
    - description: Query against the test index.
      id: is_test
      type:
      - bool
    - description: Threshold for answers returned based on score.
      id: score_threshold
      type:
      - float
    - description: Context object with previous QnA's information.
      id: context
      type:
      - azure.cognitiveservices.knowledge.qnamaker.runtime.models.QueryDTOContext
    - description: 'Optional field. Set to ''QuestionOnly'' for using a

        question only Ranker.'
      id: ranker_type
      type:
      - str
    - description: Find only answers that contain these metadata.
      id: strict_filters
      type:
      - list[azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO]
  type: class
  uid: azure.cognitiveservices.knowledge.qnamaker.runtime.models.query_dto_py3.QueryDTO
references:
- fullName: list[azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO]
  name: list[MetadataDTO]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO
    name: MetadataDTO
    uid: azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO]
