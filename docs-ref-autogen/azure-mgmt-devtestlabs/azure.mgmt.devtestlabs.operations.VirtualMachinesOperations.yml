### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.add_data_disk
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.apply_artifacts
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.claim
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.create_or_update
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.delete
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.detach_data_disk
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get_rdp_file_contents
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list_applicable_schedules
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.redeploy
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.resize
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.restart
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.start
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.stop
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.transfer_disks
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.un_claim
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.update
  - azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.models
  class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: VirtualMachinesOperations
  summary: 'VirtualMachinesOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: VirtualMachinesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Client API version. Constant value: "2018-09-15".'
      id: api_version
  type: class
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.add_data_disk
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: add_data_disk(resource_group_name, lab_name, name, data_disk_properties, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: add_data_disk
  summary: 'Attach a new or existing data disk to virtual machine. This operation

    can take a while to complete.'
  syntax:
    content: add_data_disk(resource_group_name, lab_name, name, data_disk_properties,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - description: 'Request body for adding a new or existing

        data disk to a virtual machine.'
      id: data_disk_properties
      isRequired: true
      type:
      - azure.mgmt.devtestlabs.models.DataDiskProperties
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.add_data_disk
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.apply_artifacts
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: apply_artifacts(resource_group_name, lab_name, name, artifacts=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: apply_artifacts
  summary: 'Apply artifacts to virtual machine. This operation can take a while to

    complete.'
  syntax:
    content: apply_artifacts(resource_group_name, lab_name, name, artifacts=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The list of artifacts to apply.
      id: artifacts
      type:
      - list[azure.mgmt.devtestlabs.models.ArtifactInstallProperties]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.apply_artifacts
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.claim
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: claim
  summary: 'Take ownership of an existing virtual machine This operation can take
    a

    while to complete.'
  syntax:
    content: claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.claim
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: create_or_update(resource_group_name, lab_name, name, lab_virtual_machine,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Create or replace an existing virtual machine. This operation can take

    a while to complete.'
  syntax:
    content: create_or_update(resource_group_name, lab_name, name, lab_virtual_machine,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - description: A virtual machine.
      id: lab_virtual_machine
      isRequired: true
      type:
      - azure.mgmt.devtestlabs.models.LabVirtualMachine
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns LabVirtualMachine or

        ClientRawResponse<LabVirtualMachine> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.devtestlabs.models.LabVirtualMachine]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.devtestlabs.models.LabVirtualMachine]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.create_or_update
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.delete
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: delete(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: delete
  summary: Delete virtual machine. This operation can take a while to complete.
  syntax:
    content: delete(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.delete
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.detach_data_disk
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: detach_data_disk(resource_group_name, lab_name, name, existing_lab_disk_id=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: detach_data_disk
  summary: 'Detach the specified disk from the virtual machine. This operation can

    take a while to complete.'
  syntax:
    content: detach_data_disk(resource_group_name, lab_name, name, existing_lab_disk_id=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Specifies the disk resource ID to detach

        from virtual machine.'
      id: existing_lab_disk_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.detach_data_disk
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: get(resource_group_name, lab_name, name, expand=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: Get virtual machine.
  syntax:
    content: get(resource_group_name, lab_name, name, expand=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Specify the $expand query. Example:

        ''properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'''
      id: expand
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: LabVirtualMachine or ClientRawResponse if raw=true
      type:
      - azure.mgmt.devtestlabs.models.LabVirtualMachine
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get_rdp_file_contents
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: get_rdp_file_contents(resource_group_name, lab_name, name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get_rdp_file_contents
  summary: 'Gets a string that represents the contents of the RDP file for the

    virtual machine.'
  syntax:
    content: get_rdp_file_contents(resource_group_name, lab_name, name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RdpConnection or ClientRawResponse if raw=true
      type:
      - azure.mgmt.devtestlabs.models.RdpConnection
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get_rdp_file_contents
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: list(resource_group_name, lab_name, expand=None, filter=None, top=None, orderby=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: list
  summary: List virtual machines in a given lab.
  syntax:
    content: list(resource_group_name, lab_name, expand=None, filter=None, top=None,
      orderby=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Specify the $expand query. Example:

        ''properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'''
      id: expand
      type:
      - str
    - defaultValue: None
      description: 'The filter to apply to the operation. Example:

        ''$filter=contains(name,''myName'')'
      id: filter
      type:
      - str
    - defaultValue: None
      description: 'The maximum number of resources to return from the

        operation. Example: ''$top=10'''
      id: top
      type:
      - int
    - defaultValue: None
      description: 'The ordering expression for the results, using OData

        notation. Example: ''$orderby=name desc'''
      id: orderby
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of LabVirtualMachine
      type:
      - azure.mgmt.devtestlabs.models.LabVirtualMachinePaged[azure.mgmt.devtestlabs.models.LabVirtualMachine]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list_applicable_schedules
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: list_applicable_schedules(resource_group_name, lab_name, name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_applicable_schedules
  summary: Lists the applicable start/stop schedules, if any.
  syntax:
    content: list_applicable_schedules(resource_group_name, lab_name, name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ApplicableSchedule or ClientRawResponse if raw=true
      type:
      - azure.mgmt.devtestlabs.models.ApplicableSchedule
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list_applicable_schedules
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.redeploy
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: redeploy(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: redeploy
  summary: Redeploy a virtual machine This operation can take a while to complete.
  syntax:
    content: redeploy(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.redeploy
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.resize
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: resize(resource_group_name, lab_name, name, size=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: resize
  summary: Resize Virtual Machine. This operation can take a while to complete.
  syntax:
    content: resize(resource_group_name, lab_name, name, size=None, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Specifies the size of the virtual machine.
      id: size
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.resize
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.restart
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: restart(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: restart
  summary: Restart a virtual machine. This operation can take a while to complete.
  syntax:
    content: restart(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.restart
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.start
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: start(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: start
  summary: Start a virtual machine. This operation can take a while to complete.
  syntax:
    content: start(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.start
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.stop
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: stop(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: stop
  summary: Stop a virtual machine This operation can take a while to complete.
  syntax:
    content: stop(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.stop
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.transfer_disks
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: transfer_disks(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: transfer_disks
  summary: 'Transfers all data disks attached to the virtual machine to be owned by

    the current user. This operation can take a while to complete.'
  syntax:
    content: transfer_disks(resource_group_name, lab_name, name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.transfer_disks
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.un_claim
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: un_claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  namewithoutparameters: un_claim
  summary: 'Release ownership of an existing virtual machine This operation can

    take a while to complete.'
  syntax:
    content: un_claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.un_claim
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.update
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: update(resource_group_name, lab_name, name, lab_virtual_machine, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: update
  summary: 'Allows modifying tags of virtual machines. All other properties will be

    ignored.'
  syntax:
    content: update(resource_group_name, lab_name, name, lab_virtual_machine, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lab.
      id: lab_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: name
      isRequired: true
      type:
      - str
    - description: A virtual machine.
      id: lab_virtual_machine
      isRequired: true
      type:
      - azure.mgmt.devtestlabs.models.LabVirtualMachineFragment
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: LabVirtualMachine or ClientRawResponse if raw=true
      type:
      - azure.mgmt.devtestlabs.models.LabVirtualMachine
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.update
- class: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.models
  langs:
  - python
  module: azure.mgmt.devtestlabs.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.devtestlabs.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\devtestlabs\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.models
references:
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.add_data_disk
  isExternal: false
  name: add_data_disk(resource_group_name, lab_name, name, data_disk_properties, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.add_data_disk
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.apply_artifacts
  isExternal: false
  name: apply_artifacts(resource_group_name, lab_name, name, artifacts=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.apply_artifacts
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.claim
  isExternal: false
  name: claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.claim
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, lab_name, name, lab_virtual_machine,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.create_or_update
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.delete
  isExternal: false
  name: delete(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.delete
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.detach_data_disk
  isExternal: false
  name: detach_data_disk(resource_group_name, lab_name, name, existing_lab_disk_id=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.detach_data_disk
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get
  isExternal: false
  name: get(resource_group_name, lab_name, name, expand=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get_rdp_file_contents
  isExternal: false
  name: get_rdp_file_contents(resource_group_name, lab_name, name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.get_rdp_file_contents
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list
  isExternal: false
  name: list(resource_group_name, lab_name, expand=None, filter=None, top=None, orderby=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list_applicable_schedules
  isExternal: false
  name: list_applicable_schedules(resource_group_name, lab_name, name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.list_applicable_schedules
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.redeploy
  isExternal: false
  name: redeploy(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.redeploy
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.resize
  isExternal: false
  name: resize(resource_group_name, lab_name, name, size=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.resize
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.restart
  isExternal: false
  name: restart(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.restart
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.start
  isExternal: false
  name: start(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.start
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.stop
  isExternal: false
  name: stop(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.stop
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.transfer_disks
  isExternal: false
  name: transfer_disks(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.transfer_disks
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.un_claim
  isExternal: false
  name: un_claim(resource_group_name, lab_name, name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.un_claim
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.update
  isExternal: false
  name: update(resource_group_name, lab_name, name, lab_virtual_machine, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.update
- fullName: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations
  uid: azure.mgmt.devtestlabs.operations.VirtualMachinesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: list[azure.mgmt.devtestlabs.models.ArtifactInstallProperties]
  name: list[ArtifactInstallProperties]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.devtestlabs.models.ArtifactInstallProperties
    name: ArtifactInstallProperties
    uid: azure.mgmt.devtestlabs.models.ArtifactInstallProperties
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.devtestlabs.models.ArtifactInstallProperties]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.devtestlabs.models.LabVirtualMachine]
  name: AzureOperationPoller[LabVirtualMachine]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.devtestlabs.models.LabVirtualMachine
    name: LabVirtualMachine
    uid: azure.mgmt.devtestlabs.models.LabVirtualMachine
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.devtestlabs.models.LabVirtualMachine]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.devtestlabs.models.LabVirtualMachine]]
  name: AzureOperationPoller[ClientRawResponse[LabVirtualMachine]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.devtestlabs.models.LabVirtualMachine
    name: LabVirtualMachine
    uid: azure.mgmt.devtestlabs.models.LabVirtualMachine
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.devtestlabs.models.LabVirtualMachine]]
- fullName: azure.mgmt.devtestlabs.models.LabVirtualMachinePaged[azure.mgmt.devtestlabs.models.LabVirtualMachine]
  name: LabVirtualMachinePaged[LabVirtualMachine]
  spec.python:
  - fullName: azure.mgmt.devtestlabs.models.LabVirtualMachinePaged
    name: LabVirtualMachinePaged
    uid: azure.mgmt.devtestlabs.models.LabVirtualMachinePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.devtestlabs.models.LabVirtualMachine
    name: LabVirtualMachine
    uid: azure.mgmt.devtestlabs.models.LabVirtualMachine
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.devtestlabs.models.LabVirtualMachinePaged[azure.mgmt.devtestlabs.models.LabVirtualMachine]
