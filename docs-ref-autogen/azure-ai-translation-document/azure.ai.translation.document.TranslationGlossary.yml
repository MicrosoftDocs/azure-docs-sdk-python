### YamlMime:PythonClass
uid: azure.ai.translation.document.TranslationGlossary
name: TranslationGlossary
fullName: azure.ai.translation.document.TranslationGlossary
module: azure.ai.translation.document
summary: 'Glossary / translation memory for the request.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'TranslationGlossary(*args: Any, **kwargs: Any)'
variables:
- description: 'Location of the glossary.

    We will use the file extension to extract the

    formatting if the format parameter is not supplied.


    If the translation

    language pair is not present in the glossary, it will not be applied. Required.'
  name: glossary_url
  types:
  - <xref:str>
- description: Format. Required.
  name: file_format
  types:
  - <xref:str>
- description: Optional Version.  If not specified, default is used.
  name: format_version
  types:
  - <xref:str>
- description: Storage Source. "AzureBlob"
  name: storage_source
  types:
  - <xref:str>
  - <xref:azure.ai.translation.document.models.TranslationStorageSource>
methods:
- uid: azure.ai.translation.document.TranslationGlossary.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.translation.document.TranslationGlossary.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.translation.document.TranslationGlossary.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.translation.document.TranslationGlossary.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.translation.document.TranslationGlossary.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.translation.document.TranslationGlossary.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.translation.document.TranslationGlossary.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.translation.document.TranslationGlossary.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.translation.document.TranslationGlossary.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.translation.document.TranslationGlossary.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.translation.document.TranslationGlossary.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.translation.document.TranslationGlossary.file_format
  name: file_format
  summary: Format. Required.
  signature: 'file_format: str'
- uid: azure.ai.translation.document.TranslationGlossary.format_version
  name: format_version
  summary: Optional Version.  If not specified, default is used.
  signature: 'format_version: str | None'
- uid: azure.ai.translation.document.TranslationGlossary.glossary_url
  name: glossary_url
  summary: 'Location of the glossary.

    We will use the file extension to extract the

    formatting if the format parameter is not supplied.


    If the translation

    language pair is not present in the glossary, it will not be applied. Required.'
  signature: 'glossary_url: str'
- uid: azure.ai.translation.document.TranslationGlossary.storage_source
  name: storage_source
  summary: Storage Source. "AzureBlob"
  signature: 'storage_source: str | _models.TranslationStorageSource | None'
