### YamlMime:PythonClass
uid: azure.ai.translation.document.DocumentTranslationClient
name: DocumentTranslationClient
fullName: azure.ai.translation.document.DocumentTranslationClient
module: azure.ai.translation.document
inheritances:
- azure.ai.translation.document._client.DocumentTranslationClient
summary: 'DocumentTranslationClient is your interface to the Document Translation
  service.

  Use the client to translate whole documents while preserving source document

  structure and text formatting.'
constructor:
  syntax: 'DocumentTranslationClient(endpoint: str, credential: AzureKeyCredential
    | TokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Document Translation endpoint (protocol and hostname,
      for example:

      [https:/](https:/)/<resource-name>.cognitiveservices.azure.com/).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credentials needed for the client to connect to Azure.

      This is an instance of AzureKeyCredential if using an API key or a token

      credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to the latest service version.

      Setting to an older version may result in reduced feature compatibility.'
    types:
    - <xref:str>
    - <xref:azure.ai.translation.document.DocumentTranslationApiVersion>
examples:
- "Creating the DocumentTranslationClient with an endpoint and API key.<!--[!code-python[Main](les\\\
  sample_authentication.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\":\
  \ [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\
  \\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\
  \\10\\\\azure_ai_translation_document-1.1.0\\\\samples\\\\sample_authentication.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.credentials\
  \ import AzureKeyCredential\n   from azure.ai.translation.document import DocumentTranslationClient\n\
  \n   endpoint = os.environ[\"AZURE_DOCUMENT_TRANSLATION_ENDPOINT\"]\n   key = os.environ[\"\
  AZURE_DOCUMENT_TRANSLATION_KEY\"]\n\n   document_translation_client = DocumentTranslationClient(endpoint,\
  \ AzureKeyCredential(key))\n\n   ````\n\nCreating the DocumentTranslationClient\
  \ with a token credential.<!--[!code-python[Main](les\\sample_authentication.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\10\\\\azure_ai_translation_document-1.1.0\\\
  \\samples\\\\sample_authentication.py\", \"xml:space\": \"preserve\", \"force\"\
  : false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
  linenos\": false} -->\n\n````python\n\n   \"\"\"DefaultAzureCredential will use\
  \ the values from these environment\n   variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,\
  \ AZURE_CLIENT_SECRET\n   \"\"\"\n   from azure.identity import DefaultAzureCredential\n\
  \   from azure.ai.translation.document import DocumentTranslationClient\n\n   endpoint\
  \ = os.environ[\"AZURE_DOCUMENT_TRANSLATION_ENDPOINT\"]\n   credential = DefaultAzureCredential()\n\
  \n   document_translation_client = DocumentTranslationClient(endpoint, credential)\n\
  \n   ````\n"
methods:
- uid: azure.ai.translation.document.DocumentTranslationClient.begin_translation
  name: begin_translation
  summary: 'Begin translating the document(s) in your source container to your target
    container

    in the given language.


    For supported languages and document formats, see the service documentation:

    [https://docs.microsoft.com/azure/cognitive-services/translator/document-translation/overview](https://docs.microsoft.com/azure/cognitive-services/translator/document-translation/overview)'
  signature: 'begin_translation(source_url: str, target_url: str, target_language:
    str, *, source_language: str | None = None, prefix: str | None = None, suffix:
    str | None = None, storage_type: str | StorageInputType | None = None, category_id:
    str | None = None, glossaries: List[TranslationGlossary] | None = None, **kwargs:
    Any) -> DocumentTranslationLROPoller[ItemPaged[DocumentStatus]]'
  parameters:
  - name: inputs
    description: 'The translation inputs. Each individual input has a single

      source URL to documents and can contain multiple targets (one for each language)

      for the destination to write translated documents.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:azure.ai.translation.document.DocumentTranslationInput>]
    - <xref:typing.IO>[<xref:bytes>]
    - <xref:JSON>
    - <xref:azure.ai.translation.document.models.StartTranslationDetails>
  - name: source_url
    description: 'The source SAS URL to the Azure Blob container containing the documents

      to be translated. See the service documentation for the supported SAS permissions
      for accessing

      source storage containers/blobs: [https://aka.ms/azsdk/documenttranslation/sas-permissions](https://aka.ms/azsdk/documenttranslation/sas-permissions)'
    isRequired: true
    types:
    - <xref:str>
  - name: target_url
    description: 'The target SAS URL to the Azure Blob container where the translated
      documents

      should be written. See the service documentation for the supported SAS permissions
      for accessing

      target storage containers/blobs: [https://aka.ms/azsdk/documenttranslation/sas-permissions](https://aka.ms/azsdk/documenttranslation/sas-permissions)'
    isRequired: true
    types:
    - <xref:str>
  - name: target_language
    description: 'This is the language code you want your documents to be translated
      to.

      See supported language codes here:

      [https://docs.microsoft.com/azure/cognitive-services/translator/language-support#translate](https://docs.microsoft.com/azure/cognitive-services/translator/language-support#translate)'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: source_language
    description: 'Language code for the source documents.

      If none is specified, the source language will be auto-detected for each document.'
    types:
    - <xref:str>
  - name: prefix
    description: 'A case-sensitive prefix string to filter documents in the source
      path for

      translation. For example, when using a Azure storage blob Uri, use the prefix
      to restrict

      sub folders for translation.'
    types:
    - <xref:str>
  - name: suffix
    description: 'A case-sensitive suffix string to filter documents in the source
      path for

      translation. This is most often use for file extensions.'
    types:
    - <xref:str>
  - name: storage_type
    description: 'Storage type of the input documents source string. Possible values

      include: "Folder", "File".'
    types:
    - <xref:str>
    - <xref:azure.ai.translation.document.StorageInputType>
  - name: category_id
    description: Category / custom model ID for using custom translation.
    types:
    - <xref:str>
  - name: glossaries
    description: Glossaries to apply to translation.
    types:
    - <xref:list>[<xref:azure.ai.translation.document.TranslationGlossary>]
  return:
    description: 'An instance of a DocumentTranslationLROPoller. Call *result()* on
      the poller

      object to return a pageable of DocumentStatus. A DocumentStatus will be

      returned for each translation on a document.'
    types:
    - <xref:azure.ai.translation.document.DocumentTranslationLROPoller>[<xref:azure.core.paging.ItemPaged>[<xref:azure.ai.translation.document.DocumentStatus>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Translate the documents in your storage container.<!--[!code-python[Main](les\\\
    sample_begin_translation.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure_ai_translation_document-1.1.0\\\\samples\\\
    \\sample_begin_translation.py\", \"xml:space\": \"preserve\", \"force\": false,\
    \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
    : false} -->\n\n````python\n\n   import os\n   from azure.core.credentials import\
    \ AzureKeyCredential\n   from azure.ai.translation.document import DocumentTranslationClient\n\
    \n   endpoint = os.environ[\"AZURE_DOCUMENT_TRANSLATION_ENDPOINT\"]\n   key =\
    \ os.environ[\"AZURE_DOCUMENT_TRANSLATION_KEY\"]\n   source_container_url = os.environ[\"\
    AZURE_SOURCE_CONTAINER_URL\"]\n   target_container_url = os.environ[\"AZURE_TARGET_CONTAINER_URL\"\
    ]\n\n   client = DocumentTranslationClient(endpoint, AzureKeyCredential(key))\n\
    \n   poller = client.begin_translation(source_container_url, target_container_url,\
    \ \"fr\")\n   result = poller.result()\n\n   print(f\"Status: {poller.status()}\"\
    )\n   print(f\"Created on: {poller.details.created_on}\")\n   print(f\"Last updated\
    \ on: {poller.details.last_updated_on}\")\n   print(f\"Total number of translations\
    \ on documents: {poller.details.documents_total_count}\")\n\n   print(\"\\nOf\
    \ total documents...\")\n   print(f\"{poller.details.documents_failed_count} failed\"\
    )\n   print(f\"{poller.details.documents_succeeded_count} succeeded\")\n\n   for\
    \ document in result:\n       print(f\"Document ID: {document.id}\")\n       print(f\"\
    Document status: {document.status}\")\n       if document.status == \"Succeeded\"\
    :\n           print(f\"Source document location: {document.source_document_url}\"\
    )\n           print(f\"Translated document location: {document.translated_document_url}\"\
    )\n           print(f\"Translated to language: {document.translated_to}\\n\")\n\
    \       elif document.error:\n           print(f\"Error Code: {document.error.code},\
    \ Message: {document.error.message}\\n\")\n\n   ````\n"
- uid: azure.ai.translation.document.DocumentTranslationClient.cancel_translation
  name: cancel_translation
  summary: 'Cancel a currently processing or queued translation operation.

    A translation will not be canceled if it is already completed, failed, or canceling.

    All documents that have completed translation will not be canceled and will be
    charged.

    If possible, all pending documents will be canceled.

    :param str translation_id: The translation operation ID.

    :return: None

    :rtype: None

    :raises ~azure.core.exceptions.HttpResponseError or ~azure.core.exceptions.ResourceNotFoundError:'
  signature: 'cancel_translation(translation_id: str, **kwargs: Any) -> None'
- uid: azure.ai.translation.document.DocumentTranslationClient.close
  name: close
  summary: Close the <xref:azure.ai.translation.document.DocumentTranslationClient>
    session.
  signature: close() -> None
- uid: azure.ai.translation.document.DocumentTranslationClient.get_document_status
  name: get_document_status
  summary: 'Returns the status for a specific document.


    Returns the translation status for a specific document based on the request Id

    and document Id.'
  signature: 'get_document_status(translation_id: str, document_id: str, **kwargs:
    Any) -> DocumentStatus'
  parameters:
  - name: translation_id
    description: Format - uuid.  The batch id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: document_id
    description: Format - uuid.  The document id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DocumentStatus. The DocumentStatus is compatible with MutableMapping
    types:
    - <xref:azure.ai.translation.document.models.DocumentStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.document.DocumentTranslationClient.get_supported_document_formats
  name: get_supported_document_formats
  summary: Get the list of the document formats supported by the Document Translation
    service.
  signature: 'get_supported_document_formats(**kwargs: Any) -> List[DocumentTranslationFileFormat]'
  return:
    description: A list of supported document formats for translation.
    types:
    - <xref:typing.List>[<xref:azure.ai.translation.document.DocumentTranslationFileFormat>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.document.DocumentTranslationClient.get_supported_glossary_formats
  name: get_supported_glossary_formats
  summary: Get the list of the glossary formats supported by the Document Translation
    service.
  signature: 'get_supported_glossary_formats(**kwargs: Any) -> List[DocumentTranslationFileFormat]'
  return:
    description: A list of supported glossary formats.
    types:
    - <xref:typing.List>[<xref:azure.ai.translation.document.DocumentTranslationFileFormat>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.document.DocumentTranslationClient.get_translation_status
  name: get_translation_status
  summary: 'Returns the status for a document translation request.


    Returns the status for a document translation request.

    The status includes the

    overall request status, as well as the status for documents that are being

    translated as part of that request.'
  signature: 'get_translation_status(translation_id: str, **kwargs: Any) -> TranslationStatus'
  parameters:
  - name: translation_id
    description: Format - uuid.  The operation id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TranslationStatus. The TranslationStatus is compatible with MutableMapping
    types:
    - <xref:azure.ai.translation.document.models.TranslationStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.document.DocumentTranslationClient.list_document_statuses
  name: list_document_statuses
  summary: List all the document statuses for a given translation operation.
  signature: 'list_document_statuses(translation_id: str, *, top: int | None = None,
    skip: int | None = None, document_ids: List[str] | None = None, statuses: List[str]
    | None = None, created_after: str | datetime | None = None, created_before: str
    | datetime | None = None, order_by: List[str] | None = None, **kwargs: Any) ->
    ItemPaged[DocumentStatus]'
  parameters:
  - name: translation_id
    description: ID of translation operation to list documents for.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: The total number of documents to return (across all pages).
    types:
    - <xref:int>
  - name: skip
    description: 'The number of documents to skip (from beginning).

      By default, we sort by all documents in descending order by start time.'
    types:
    - <xref:int>
  - name: document_ids
    description: Document IDs to filter by.
    types:
    - <xref:list>[<xref:str>]
  - name: statuses
    description: 'Document statuses to filter by. Options include

      ''NotStarted'', ''Running'', ''Succeeded'', ''Failed'', ''Canceled'', ''Canceling'',

      and ''ValidationFailed''.'
    types:
    - <xref:list>[<xref:str>]
  - name: created_after
    description: Get documents created after a certain datetime.
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: created_before
    description: Get documents created before a certain datetime.
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: order_by
    description: 'The sorting query for the documents. Currently only

      ''created_on'' is supported.

      format: ["param1 asc/desc", "param2 asc/desc", ...]

      (ex: ''created_on asc'', ''created_on desc'').'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: A pageable of DocumentStatus.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.translation.document.DocumentStatus>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "List all the document statuses as they are being translated.<!--[!code-python[Main](les\\\
    sample_check_document_statuses.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\":\
    \ \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure_ai_translation_document-1.1.0\\\\samples\\\
    \\sample_check_document_statuses.py\", \"xml:space\": \"preserve\", \"force\"\
    : false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
    linenos\": false} -->\n\n````python\n\n   import os\n   import time\n   from azure.core.credentials\
    \ import AzureKeyCredential\n   from azure.ai.translation.document import DocumentTranslationClient\n\
    \n   endpoint = os.environ[\"AZURE_DOCUMENT_TRANSLATION_ENDPOINT\"]\n   key =\
    \ os.environ[\"AZURE_DOCUMENT_TRANSLATION_KEY\"]\n   source_container_url = os.environ[\"\
    AZURE_SOURCE_CONTAINER_URL\"]\n   target_container_url = os.environ[\"AZURE_TARGET_CONTAINER_URL\"\
    ]\n\n   client = DocumentTranslationClient(endpoint, AzureKeyCredential(key))\n\
    \n   poller = client.begin_translation(source_container_url, target_container_url,\
    \ \"es\")\n\n   completed_docs = []\n   while not poller.done():\n       time.sleep(30)\n\
    \n       doc_statuses = client.list_document_statuses(poller.id)\n       for document\
    \ in doc_statuses:\n           if document.id not in completed_docs:\n       \
    \        if document.status == \"Succeeded\":\n                   print(\n   \
    \                    f\"Document at {document.source_document_url} was translated\
    \ to {document.translated_to} \"\n                       f\"language. You can\
    \ find translated document at {document.translated_document_url}\"\n         \
    \          )\n                   completed_docs.append(document.id)\n        \
    \       if document.status == \"Failed\" and document.error:\n               \
    \    print(\n                       f\"Document at {document.source_document_url}\
    \ failed translation. \"\n                       f\"Error Code: {document.error.code},\
    \ Message: {document.error.message}\"\n                   )\n                \
    \   completed_docs.append(document.id)\n               if document.status == \"\
    Running\":\n                   print(\n                       f\"Document ID:\
    \ {document.id}, translation progress is \"\n                       f\"{document.translation_progress\
    \ * 100} percent\"\n                   )\n\n   print(\"\\nTranslation completed.\"\
    )\n\n   ````\n"
- uid: azure.ai.translation.document.DocumentTranslationClient.list_translation_statuses
  name: list_translation_statuses
  summary: List all the submitted translation operations under the Document Translation
    resource.
  signature: 'list_translation_statuses(*, top: int | None = None, skip: int | None
    = None, translation_ids: List[str] | None = None, statuses: List[str] | None =
    None, created_after: str | datetime | None = None, created_before: str | datetime
    | None = None, order_by: List[str] | None = None, **kwargs: Any) -> ItemPaged[TranslationStatus]'
  keywordOnlyParameters:
  - name: top
    description: The total number of operations to return (across all pages) from
      all submitted translations.
    types:
    - <xref:int>
  - name: skip
    description: 'The number of operations to skip (from beginning of all submitted
      operations).

      By default, we sort by all submitted operations in descending order by start
      time.'
    types:
    - <xref:int>
  - name: translation_ids
    description: Translation operations ids to filter by.
    types:
    - <xref:list>[<xref:str>]
  - name: statuses
    description: 'Translation operation statuses to filter by. Options include

      ''NotStarted'', ''Running'', ''Succeeded'', ''Failed'', ''Canceled'', ''Canceling'',

      and ''ValidationFailed''.'
    types:
    - <xref:list>[<xref:str>]
  - name: created_after
    description: Get operations created after a certain datetime.
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: created_before
    description: Get operations created before a certain datetime.
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: order_by
    description: 'The sorting query for the operations returned. Currently only

      ''created_on'' supported.

      format: ["param1 asc/desc", "param2 asc/desc", ...]

      (ex: ''created_on asc'', ''created_on desc'').'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: A pageable of TranslationStatus.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.translation.document.TranslationStatus>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "List all submitted translations under the resource.<!--[!code-python[Main](les\\\
    sample_list_translations.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure_ai_translation_document-1.1.0\\\\samples\\\
    \\sample_list_translations.py\", \"xml:space\": \"preserve\", \"force\": false,\
    \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
    : false} -->\n\n````python\n\n   from azure.core.credentials import AzureKeyCredential\n\
    \   from azure.ai.translation.document import DocumentTranslationClient\n\n  \
    \ endpoint = os.environ[\"AZURE_DOCUMENT_TRANSLATION_ENDPOINT\"]\n   key = os.environ[\"\
    AZURE_DOCUMENT_TRANSLATION_KEY\"]\n\n   client = DocumentTranslationClient(endpoint,\
    \ AzureKeyCredential(key))\n   operations = client.list_translation_statuses()\n\
    \n   for operation in operations:\n       print(f\"ID: {operation.id}\")\n   \
    \    print(f\"Status: {operation.status}\")\n       print(f\"Created on: {operation.created_on}\"\
    )\n       print(f\"Last updated on: {operation.last_updated_on}\")\n       print(f\"\
    Total number of operations on documents: {operation.documents_total_count}\")\n\
    \       print(f\"Total number of characters charged: {operation.total_characters_charged}\"\
    )\n\n       print(\"\\nOf total documents...\")\n       print(f\"{operation.documents_failed_count}\
    \ failed\")\n       print(f\"{operation.documents_succeeded_count} succeeded\"\
    )\n       print(f\"{operation.documents_canceled_count} canceled\\n\")\n\n\n \
    \  ````\n"
- uid: azure.ai.translation.document.DocumentTranslationClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
