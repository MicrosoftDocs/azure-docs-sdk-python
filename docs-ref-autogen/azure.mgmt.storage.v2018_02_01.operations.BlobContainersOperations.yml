### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.clear_legal_hold
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create_or_update_immutability_policy
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete_immutability_policy
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.extend_immutability_policy
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get_immutability_policy
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.list
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.lock_immutability_policy
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.set_legal_hold
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.update
  - azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.models
  class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: BlobContainersOperations
  source:
    id: BlobContainersOperations
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 19
  summary: 'BlobContainersOperations operations.














    '
  syntax:
    content: BlobContainersOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An object model deserializer.

        '
      id: deserializer
    variables:
    - description: 'The API version to use for this operation. Constant value: "2018-02-01".

        '
      id: api_version
    - description: 'The name of the blob container immutabilityPolicy within the specified
        storage account. ImmutabilityPolicy Name must be ''default''. Constant value:
        "default".

        '
      id: immutability_policy_name
  type: class
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.clear_legal_hold
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: clear_legal_hold
  source:
    id: clear_legal_hold
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 504
  summary: 'Clears legal hold tags. Clearing the same or non-existent tag results

    in an idempotent operation. ClearLegalHold clears out only the

    specified tags in the request.

    '
  syntax:
    content: clear_legal_hold(resource_group_name, account_name, container_name, tags,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'Each tag should be 3 to 23 alphanumeric characters and is

        normalized to lower case at SRP.

        '
      id: tags
      type:
      - list[str]
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'LegalHold or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.LegalHold
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.clear_legal_hold
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: create
  source:
    id: create
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 108
  summary: 'Creates a new container under the specified account as described by

    request body. The container resource includes metadata and properties

    for that container. It does not include a list of the blobs contained

    by the container. .

    '
  syntax:
    content: create(resource_group_name, account_name, container_name, public_access=None,
      metadata=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'Specifies whether data in the container may be

        accessed publicly and the level of access. Possible values include:

        ''Container'', ''Blob'', ''None''

        '
      id: public_access
      type:
      - str
      - azure.mgmt.storage.v2018_02_01.models.PublicAccess
    - defaultValue: None
      description: 'A name-value pair to associate with the container as

        metadata.

        '
      id: metadata
      type:
      - dict[str, str]
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'BlobContainer or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.BlobContainer
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create_or_update_immutability_policy
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: create_or_update_immutability_policy
  source:
    id: create_or_update_immutability_policy
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 587
  summary: 'Creates or updates an unlocked immutability policy. ETag in If-Match is

    honored if given but not required for this operation.

    '
  syntax:
    content: create_or_update_immutability_policy(resource_group_name, account_name,
      container_name, immutability_period_since_creation_in_days, if_match=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'The immutability

        period for the blobs in the container since the policy creation, in

        days.

        '
      id: immutability_period_since_creation_in_days
      type:
      - int
    - defaultValue: None
      description: 'The entity state (ETag) version of the immutability

        policy to update. A value of "*" can be used to apply the operation

        only if the immutability policy already exists. If omitted, this

        operation will always be applied.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImmutabilityPolicy or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ImmutabilityPolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create_or_update_immutability_policy
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 357
  summary: 'Deletes specified container under its account.

    '
  syntax:
    content: delete(resource_group_name, account_name, container_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete_immutability_policy
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: delete_immutability_policy
  source:
    id: delete_immutability_policy
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 774
  summary: 'Aborts an unlocked immutability policy. The response of delete has

    immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is

    required for this operation. Deleting a locked immutability policy is

    not allowed, only way is to delete the container after deleting all

    blobs inside the container.

    '
  syntax:
    content: delete_immutability_policy(resource_group_name, account_name, container_name,
      if_match, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'The entity state (ETag) version of the immutability

        policy to update. A value of "*" can be used to apply the operation

        only if the immutability policy already exists. If omitted, this

        operation will always be applied.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImmutabilityPolicy or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ImmutabilityPolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete_immutability_policy
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.extend_immutability_policy
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: extend_immutability_policy
  source:
    id: extend_immutability_policy
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 947
  summary: 'Extends the immutabilityPeriodSinceCreationInDays of a locked

    immutabilityPolicy. The only action allowed on a Locked policy will be

    this action. ETag in If-Match is required for this operation.

    '
  syntax:
    content: extend_immutability_policy(resource_group_name, account_name, container_name,
      if_match, immutability_period_since_creation_in_days, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'The entity state (ETag) version of the immutability

        policy to update. A value of "*" can be used to apply the operation

        only if the immutability policy already exists. If omitted, this

        operation will always be applied.

        '
      id: if_match
      type:
      - str
    - description: 'The immutability

        period for the blobs in the container since the policy creation, in

        days.

        '
      id: immutability_period_since_creation_in_days
      type:
      - int
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImmutabilityPolicy or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ImmutabilityPolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.extend_immutability_policy
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: get
  source:
    id: get
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 285
  summary: 'Gets properties of a specified container. .

    '
  syntax:
    content: get(resource_group_name, account_name, container_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'BlobContainer or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.BlobContainer
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get_immutability_policy
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: get_immutability_policy
  source:
    id: get_immutability_policy
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 688
  summary: 'Gets the existing immutability policy along with the corresponding ETag

    in response headers and body.

    '
  syntax:
    content: get_immutability_policy(resource_group_name, account_name, container_name,
      if_match=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'The entity state (ETag) version of the immutability

        policy to update. A value of "*" can be used to apply the operation

        only if the immutability policy already exists. If omitted, this

        operation will always be applied.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImmutabilityPolicy or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ImmutabilityPolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get_immutability_policy
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.list
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: list
  source:
    id: list
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 42
  summary: 'Lists all containers and does not support a prefix like data plane.

    Also SRP today does not return continuation token.

    '
  syntax:
    content: list(resource_group_name, account_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ListContainerItems or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ListContainerItems
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.list
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.lock_immutability_policy
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: lock_immutability_policy
  source:
    id: lock_immutability_policy
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 862
  summary: 'Sets the ImmutabilityPolicy to Locked state. The only action allowed on

    a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is

    required for this operation.

    '
  syntax:
    content: lock_immutability_policy(resource_group_name, account_name, container_name,
      if_match, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'The entity state (ETag) version of the immutability

        policy to update. A value of "*" can be used to apply the operation

        only if the immutability policy already exists. If omitted, this

        operation will always be applied.

        '
      id: if_match
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImmutabilityPolicy or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.ImmutabilityPolicy
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.lock_immutability_policy
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.set_legal_hold
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: set_legal_hold
  source:
    id: set_legal_hold
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 421
  summary: 'Sets legal hold tags. Setting the same tag results in an idempotent

    operation. SetLegalHold follows an append pattern and does not clear

    out the existing tags that are not specified in the request.

    '
  syntax:
    content: set_legal_hold(resource_group_name, account_name, container_name, tags,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - description: 'Each tag should be 3 to 23 alphanumeric characters and is

        normalized to lower case at SRP.

        '
      id: tags
      type:
      - list[str]
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'LegalHold or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.LegalHold
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.set_legal_hold
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.update
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: update
  source:
    id: update
    path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
    remote:
      branch: master
      path: azure-mgmt-storage\azure\mgmt\storage\v2018_02_01\operations\blob_containers_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 197
  summary: 'Updates container properties as specified in request body. Properties

    not mentioned in the request will be unchanged. Update fails if the

    specified container doesn''t already exist. .

    '
  syntax:
    content: update(resource_group_name, account_name, container_name, public_access=None,
      metadata=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource group within the

        user''s subscription. The name is case insensitive.

        '
      id: resource_group_name
      type:
      - str
    - description: 'The name of the storage account within the

        specified resource group. Storage account names must be between 3 and

        24 characters in length and use numbers and lower-case letters only.

        '
      id: account_name
      type:
      - str
    - description: 'The name of the blob container within the

        specified storage account. Blob container names must be between 3 and

        63 characters in length and use numbers, lower-case letters and dash

        (-) only. Every dash (-) character must be immediately preceded and

        followed by a letter or number.

        '
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'Specifies whether data in the container may be

        accessed publicly and the level of access. Possible values include:

        ''Container'', ''Blob'', ''None''

        '
      id: public_access
      type:
      - str
      - azure.mgmt.storage.v2018_02_01.models.PublicAccess
    - defaultValue: None
      description: 'A name-value pair to associate with the container as

        metadata.

        '
      id: metadata
      type:
      - dict[str, str]
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'BlobContainer or ClientRawResponse if raw=true

        '
      type:
      - azure.mgmt.storage.v2018_02_01.models.BlobContainer
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.update
- class: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.models
  langs:
  - python
  module: azure.mgmt.storage.v2018_02_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.storage.v2018_02_01.models' from 'c:\\python3\\lib\\site-packages\\azure_mgmt_storage-2.0.0rc3-py3.6.egg\\azure\\mgmt\\storage\\v2018_02_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.models
references:
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.clear_legal_hold
  isExternal: false
  name: clear_legal_hold
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.clear_legal_hold
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create
  isExternal: false
  name: create
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create_or_update_immutability_policy
  isExternal: false
  name: create_or_update_immutability_policy
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.create_or_update_immutability_policy
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete_immutability_policy
  isExternal: false
  name: delete_immutability_policy
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.delete_immutability_policy
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.extend_immutability_policy
  isExternal: false
  name: extend_immutability_policy
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.extend_immutability_policy
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get_immutability_policy
  isExternal: false
  name: get_immutability_policy
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.get_immutability_policy
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.list
  isExternal: false
  name: list
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.list
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.lock_immutability_policy
  isExternal: false
  name: lock_immutability_policy
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.lock_immutability_policy
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.set_legal_hold
  isExternal: false
  name: set_legal_hold
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.set_legal_hold
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.update
  isExternal: false
  name: update
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.update
- fullName: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations
  uid: azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations.models
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
