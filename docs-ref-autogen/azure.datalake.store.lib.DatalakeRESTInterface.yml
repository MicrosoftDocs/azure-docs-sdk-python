### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.datalake.store.lib.DatalakeRESTInterface.call
  - azure.datalake.store.lib.DatalakeRESTInterface.log_response_and_raise
  - azure.datalake.store.lib.DatalakeRESTInterface.ends
  class: azure.datalake.store.lib.DatalakeRESTInterface
  fullName: azure.datalake.store.lib.DatalakeRESTInterface
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.datalake.store.lib
  name: DatalakeRESTInterface
  source:
    id: DatalakeRESTInterface
    path: azure\datalake\store\lib.py
    remote:
      branch: master
      path: azure\datalake\store\lib.py
      repo: https://github.com/Azure/azure-data-lake-store-python
    startLine: 200
  summary: 'Call factory for webHDFS endpoints on ADLS





    '
  syntax:
    content: DatalakeRESTInterface(store_name=None, token=None, url_suffix='azuredatalakestore.net',
      api_version='2016-11-01', **kwargs)
    parameters:
    - description: 'The name of the Data Lake Store account to execute operations
        against.

        '
      id: store_name
      type:
      - str
    - description: 'from *auth()* or *refresh_token()* or other ADAL source

        '
      id: token
      type:
      - dict
    - description: 'Domain to send REST requests to. The end-point URL is constructed

        using this and the store_name. If None, use default.

        '
      id: url_suffix
      type:
      - str (None)
    - description: 'The API version to target with requests. Changing this value will

        change the behavior of the requests, and can cause unexpected behavior or

        breaking changes. Changes to this value should be undergone with caution.

        '
      id: api_version
      type:
      - str (2016-11-01)
    - description: 'See `auth()`. Includes, e.g., username, password, tenant; will
        pull

        values from environment variables if not provided.

        '
      id: kwargs
      type:
      - optional arguments to auth
  type: class
  uid: azure.datalake.store.lib.DatalakeRESTInterface
- class: azure.datalake.store.lib.DatalakeRESTInterface
  fullName: azure.datalake.store.lib.DatalakeRESTInterface.call
  langs:
  - python
  module: azure.datalake.store.lib
  name: call
  source:
    id: call
    path: azure\datalake\store\lib.py
    remote:
      branch: master
      path: azure\datalake\store\lib.py
      repo: https://github.com/Azure/azure-data-lake-store-python
    startLine: 333
  summary: 'Execute a REST call

    '
  syntax:
    content: call(op, path='', is_extended=False, expected_error_code=None, **kwargs)
    parameters:
    - description: 'webHDFS operation to perform, one of *DatalakeRESTInterface.ends*

        '
      id: op
      type:
      - str
    - defaultValue: ''
      description: 'filepath on the remote system

        '
      id: path
      type:
      - str
    - defaultValue: 'False'
      description: 'Indicates if the API call comes from the webhdfs extensions path
        or the basic webhdfs path.

        By default, all requests target the official webhdfs path. A small subset
        of custom convenience

        methods specific to Azure Data Lake Store target the extension path (such
        as SETEXPIRY).

        '
      id: is_extended
      type:
      - bool (False)
    - defaultValue: None
      description: 'Optionally indicates a specific, expected error code, if any.
        In the event that this error

        is returned, the exception will be logged to DEBUG instead of ERROR stream.
        The exception

        will still be raised, however, as it is expected that the caller will expect
        to handle it

        and do something different if it is raised.

        '
      id: expected_error_code
      type:
      - int
    - description: 'other parameters, as defined by the webHDFS standard and

        [https://msdn.microsoft.com/en-us/library/mt710547.aspx](https://msdn.microsoft.com/en-us/library/mt710547.aspx)

        '
      id: kwargs
      type:
      - dict
  type: method
  uid: azure.datalake.store.lib.DatalakeRESTInterface.call
- class: azure.datalake.store.lib.DatalakeRESTInterface
  fullName: azure.datalake.store.lib.DatalakeRESTInterface.log_response_and_raise
  langs:
  - python
  module: azure.datalake.store.lib
  name: log_response_and_raise
  source:
    id: log_response_and_raise
    path: azure\datalake\store\lib.py
    remote:
      branch: master
      path: azure\datalake\store\lib.py
      repo: https://github.com/Azure/azure-data-lake-store-python
    startLine: 314
  syntax:
    content: log_response_and_raise(response, exception, level=40)
    parameters:
    - id: response
    - id: exception
    - defaultValue: '40'
      id: level
  type: method
  uid: azure.datalake.store.lib.DatalakeRESTInterface.log_response_and_raise
- class: azure.datalake.store.lib.DatalakeRESTInterface
  fullName: azure.datalake.store.lib.DatalakeRESTInterface.ends
  langs:
  - python
  module: azure.datalake.store.lib
  name: ends
  syntax:
    content: 'ends = {''APPEND'': (''post'', set(), {''leaseid'', ''offset'', ''filesessionid'',
      ''syncFlag'', ''append''}), ''CHECKACCESS'': (''get'', set(), {''fsaction''}),
      ''CONCAT'': (''post'', {''sources''}, {''sources''}), ''MSCONCAT'': (''post'',
      set(), {''deleteSourceDirectory''}), ''CREATE'': (''put'', set(), {''leaseid'',
      ''write'', ''overwrite'', ''filesessionid'', ''syncFlag''}), ''DELETE'': (''delete'',
      set(), {''recursive''}), ''GETCONTENTSUMMARY'': (''get'', set(), set()), ''GETFILESTATUS'':
      (''get'', set(), set()), ''LISTSTATUS'': (''get'', set(), set()), ''MKDIRS'':
      (''put'', set(), set()), ''OPEN'': (''get'', set(), {''filesessionid'', ''offset'',
      ''length'', ''read''}), ''RENAME'': (''put'', {''destination''}, {''destination''}),
      ''SETOWNER'': (''put'', set(), {''group'', ''owner''}), ''SETPERMISSION'': (''put'',
      set(), {''permission''}), ''SETEXPIRY'': (''put'', {''expiryOption''}, {''expiryOption'',
      ''expireTime''}), ''SETACL'': (''put'', {''aclSpec''}, {''aclSpec''}), ''MODIFYACLENTRIES'':
      (''put'', {''aclSpec''}, {''aclSpec''}), ''REMOVEACLENTRIES'': (''put'', {''aclSpec''},
      {''aclSpec''}), ''REMOVEACL'': (''put'', set(), set()), ''MSGETACLSTATUS'':
      (''get'', set(), set()), ''REMOVEDEFAULTACL'': (''put'', set(), set())}'
  type: attribute
  uid: azure.datalake.store.lib.DatalakeRESTInterface.ends
references:
- fullName: azure.datalake.store.lib.DatalakeRESTInterface.call
  isExternal: false
  name: call
  parent: azure.datalake.store.lib.DatalakeRESTInterface
  uid: azure.datalake.store.lib.DatalakeRESTInterface.call
- fullName: azure.datalake.store.lib.DatalakeRESTInterface.log_response_and_raise
  isExternal: false
  name: log_response_and_raise
  parent: azure.datalake.store.lib.DatalakeRESTInterface
  uid: azure.datalake.store.lib.DatalakeRESTInterface.log_response_and_raise
- fullName: str (None)
  name: str (None)
  spec.python:
  - fullName: 'str '
    name: 'str '
    uid: 'str '
  - fullName: (
    name: (
  - fullName: None
    name: None
    uid: None
  - fullName: )
    name: )
  uid: str (None)
- fullName: str (2016-11-01)
  name: str (2016-11-01)
  spec.python:
  - fullName: 'str '
    name: 'str '
    uid: 'str '
  - fullName: (
    name: (
  - fullName: '2016-11-01'
    name: '2016-11-01'
    uid: '2016-11-01'
  - fullName: )
    name: )
  uid: str (2016-11-01)
- fullName: azure.datalake.store.lib.DatalakeRESTInterface.ends
  isExternal: false
  name: ends
  parent: azure.datalake.store.lib.DatalakeRESTInterface
  uid: azure.datalake.store.lib.DatalakeRESTInterface.ends
- fullName: bool (False)
  name: bool (False)
  spec.python:
  - fullName: 'bool '
    name: 'bool '
    uid: 'bool '
  - fullName: (
    name: (
  - fullName: 'False'
    name: 'False'
    uid: 'False'
  - fullName: )
    name: )
  uid: bool (False)
