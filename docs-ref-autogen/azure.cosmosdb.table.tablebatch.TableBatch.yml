### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cosmosdb.table.tablebatch.TableBatch.delete_entity
  - azure.cosmosdb.table.tablebatch.TableBatch.insert_entity
  - azure.cosmosdb.table.tablebatch.TableBatch.insert_or_merge_entity
  - azure.cosmosdb.table.tablebatch.TableBatch.insert_or_replace_entity
  - azure.cosmosdb.table.tablebatch.TableBatch.merge_entity
  - azure.cosmosdb.table.tablebatch.TableBatch.update_entity
  class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: TableBatch
  source:
    id: TableBatch
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 33
  summary: 'This is the class that is used for batch operation for storage table service.


    The Table service supports batch transactions on entities that are in the

    same table and belong to the same partition group. Multiple operations are

    supported within a single transaction. The batch can include at most 100

    entities, and its total payload may be no more than 4 MB in size.







    '
  syntax:
    content: TableBatch(require_encryption=False, key_encryption_key=None, encryption_resolver=None)
  type: class
  uid: azure.cosmosdb.table.tablebatch.TableBatch
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.delete_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: delete_entity
  source:
    id: delete_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 120
  summary: 'Adds a delete entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.delete_entity for more

    information on deletes.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: delete_entity(partition_key, row_key, if_match='*')
    parameters:
    - description: 'The PartitionKey of the entity.

        '
      id: partition_key
      type:
      - str
    - description: 'The RowKey of the entity.

        '
      id: row_key
      type:
      - str
    - defaultValue: '*'
      description: 'The client may specify the ETag for the entity on the

        request in order to compare to the ETag maintained by the service

        for the purpose of optimistic concurrency. The delete operation

        will be performed only if the ETag sent by the client matches the

        value maintained by the server, indicating that the entity has

        not been modified since it was retrieved by the client. To force

        an unconditional delete, set If-Match to the wildcard character (*).

        '
      id: if_match
      type:
      - str
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.delete_entity
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: insert_entity
  source:
    id: insert_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 52
  summary: 'Adds an insert entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.insert_entity for more

    information on inserts.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: insert_entity(entity)
    parameters:
    - description: 'The entity to insert. Could be a dict or an entity object.

        Must contain a PartitionKey and a RowKey.

        '
      id: entity
      type:
      - dict
      - azure.storage.table.models.Entity
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_entity
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_merge_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: insert_or_merge_entity
  source:
    id: insert_or_merge_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 162
  summary: 'Adds an insert or merge entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.insert_or_merge_entity for more

    information on insert or merge operations.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: insert_or_merge_entity(entity)
    parameters:
    - description: 'The entity to insert or merge. Could be a dict or an entity object.

        Must contain a PartitionKey and a RowKey.

        '
      id: entity
      type:
      - dict
      - azure.storage.table.models.Entity
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_merge_entity
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_replace_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: insert_or_replace_entity
  source:
    id: insert_or_replace_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 145
  summary: 'Adds an insert or replace entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.insert_or_replace_entity for more

    information on insert or replace operations.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: insert_or_replace_entity(entity)
    parameters:
    - description: 'The entity to insert or replace. Could be a dict or an entity
        object.

        Must contain a PartitionKey and a RowKey.

        '
      id: entity
      type:
      - dict
      - azure.storage.table.models.Entity
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_replace_entity
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.merge_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: merge_entity
  source:
    id: merge_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 94
  summary: 'Adds a merge entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.merge_entity for more

    information on merges.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: merge_entity(entity, if_match='*')
    parameters:
    - description: 'The entity to merge. Could be a dict or an entity object.

        Must contain a PartitionKey and a RowKey.

        '
      id: entity
      type:
      - dict
      - azure.storage.table.models.Entity
    - defaultValue: '*'
      description: 'The client may specify the ETag for the entity on the

        request in order to compare to the ETag maintained by the service

        for the purpose of optimistic concurrency. The merge operation

        will be performed only if the ETag sent by the client matches the

        value maintained by the server, indicating that the entity has

        not been modified since it was retrieved by the client. To force

        an unconditional merge, set If-Match to the wildcard character (*).

        '
      id: if_match
      type:
      - str
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.merge_entity
- class: azure.cosmosdb.table.tablebatch.TableBatch
  fullName: azure.cosmosdb.table.tablebatch.TableBatch.update_entity
  langs:
  - python
  module: azure.cosmosdb.table.tablebatch
  name: update_entity
  source:
    id: update_entity
    path: azure\cosmosdb\table\tablebatch.py
    remote:
      branch: master
      path: azure\cosmosdb\table\tablebatch.py
      repo: https://github.com/Azure/azure-cosmosdb-python.git
    startLine: 69
  summary: 'Adds an update entity operation to the batch. See

    @azure.storage.table.tableservice.TableService.update_entity for more

    information on updates.


    The operation will not be executed until the batch is committed.

    '
  syntax:
    content: update_entity(entity, if_match='*')
    parameters:
    - description: 'The entity to update. Could be a dict or an entity object.

        Must contain a PartitionKey and a RowKey.

        '
      id: entity
      type:
      - dict
      - azure.storage.table.models.Entity
    - defaultValue: '*'
      description: 'The client may specify the ETag for the entity on the

        request in order to compare to the ETag maintained by the service

        for the purpose of optimistic concurrency. The update operation

        will be performed only if the ETag sent by the client matches the

        value maintained by the server, indicating that the entity has

        not been modified since it was retrieved by the client. To force

        an unconditional update, set If-Match to the wildcard character (*).

        '
      id: if_match
      type:
      - str
  type: method
  uid: azure.cosmosdb.table.tablebatch.TableBatch.update_entity
references:
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.delete_entity
  isExternal: false
  name: delete_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.delete_entity
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_entity
  isExternal: false
  name: insert_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_entity
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_merge_entity
  isExternal: false
  name: insert_or_merge_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_merge_entity
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_replace_entity
  isExternal: false
  name: insert_or_replace_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.insert_or_replace_entity
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.merge_entity
  isExternal: false
  name: merge_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.merge_entity
- fullName: azure.cosmosdb.table.tablebatch.TableBatch.update_entity
  isExternal: false
  name: update_entity
  parent: azure.cosmosdb.table.tablebatch.TableBatch
  uid: azure.cosmosdb.table.tablebatch.TableBatch.update_entity
