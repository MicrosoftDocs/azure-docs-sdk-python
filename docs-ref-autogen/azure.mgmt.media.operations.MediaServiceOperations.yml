### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
  - azure.mgmt.media.operations.MediaServiceOperations.create
  - azure.mgmt.media.operations.MediaServiceOperations.delete
  - azure.mgmt.media.operations.MediaServiceOperations.get
  - azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
  - azure.mgmt.media.operations.MediaServiceOperations.list_keys
  - azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
  - azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
  - azure.mgmt.media.operations.MediaServiceOperations.update
  class: azure.mgmt.media.operations.MediaServiceOperations
  fullName: azure.mgmt.media.operations.MediaServiceOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.media.operations
  name: MediaServiceOperations
  source:
    id: MediaServiceOperations
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 18
  summary: 'MediaServiceOperations operations.










    '
  syntax:
    content: MediaServiceOperations(client, config, serializer, deserializer)
    parameters:
    - description: 'Client for service requests.

        '
      id: client
    - description: 'Configuration of service client.

        '
      id: config
    - description: 'An object model serializer.

        '
      id: serializer
    - description: 'An objec model deserializer.

        '
      id: deserializer
    variables:
    - description: 'Version of the API to be used with the client request. Current
        version is 2015-10-01. Constant value: "2015-10-01".

        '
      id: api_version
  type: class
  uid: azure.mgmt.media.operations.MediaServiceOperations
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.media.operations
  name: check_name_availability
  source:
    id: check_name_availability
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 37
  summary: 'Checks whether the Media Service resource name is available. The name

    must be globally unique.

    '
  syntax:
    content: check_name_availability(name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'The name of the resource. A name must be globally unique.

        '
      id: name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.CheckNameAvailabilityOutput
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.create
  langs:
  - python
  module: azure.mgmt.media.operations
  name: create
  source:
    id: create
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 228
  summary: 'Creates a Media Service.

    '
  syntax:
    content: create(resource_group_name, media_service_name, media_service, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - description: 'Media Service properties needed for creation.

        '
      id: media_service
      type:
      - azure.mgmt.media.models.MediaService
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.MediaService
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.create
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.delete
  langs:
  - python
  module: azure.mgmt.media.operations
  name: delete
  source:
    id: delete
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 296
  summary: 'Deletes a Media Service.

    '
  syntax:
    content: delete(resource_group_name, media_service_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.delete
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.get
  langs:
  - python
  module: azure.mgmt.media.operations
  name: get
  source:
    id: get
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 167
  summary: 'Gets a Media Service.

    '
  syntax:
    content: get(resource_group_name, media_service_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.MediaService
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.get
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.media.operations
  name: list_by_resource_group
  source:
    id: list_by_resource_group
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 101
  summary: 'Lists all of the Media Services in a resource group.

    '
  syntax:
    content: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.MediaServicePaged
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.list_keys
  langs:
  - python
  module: azure.mgmt.media.operations
  name: list_keys
  source:
    id: list_keys
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 491
  summary: 'Lists the keys for a Media Service.

    '
  syntax:
    content: list_keys(resource_group_name, media_service_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.ServiceKeys
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_keys
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
  langs:
  - python
  module: azure.mgmt.media.operations
  name: regenerate_key
  source:
    id: regenerate_key
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 418
  summary: 'Regenerates a primary or secondary key for a Media Service.

    '
  syntax:
    content: regenerate_key(resource_group_name, media_service_name, key_type, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - description: 'The keyType indicating which key you want to

        regenerate, Primary or Secondary. Possible values include: ''Primary'',

        ''Secondary''

        '
      id: key_type
      type:
      - 'str or @azure.mgmt.media.models.KeyType

        '
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.RegenerateKeyOutput
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
  langs:
  - python
  module: azure.mgmt.media.operations
  name: sync_storage_keys
  source:
    id: sync_storage_keys
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 552
  summary: 'Synchronizes storage account keys for a storage account associated with

    the Media Service account.

    '
  syntax:
    content: sync_storage_keys(resource_group_name, media_service_name, id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - description: 'The id of the storage account resource.

        '
      id: id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - None
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
- class: azure.mgmt.media.operations.MediaServiceOperations
  exceptions:
  - type: azure.mgmt.media.models.ApiErrorException
  fullName: azure.mgmt.media.operations.MediaServiceOperations.update
  langs:
  - python
  module: azure.mgmt.media.operations
  name: update
  source:
    id: update
    path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
    remote:
      branch: master
      path: azure-mgmt-media\azure\mgmt\media\operations\media_service_operations.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 350
  summary: 'Updates a Media Service.

    '
  syntax:
    content: update(resource_group_name, media_service_name, media_service, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Name of the resource group within the

        Azure subscription.

        '
      id: resource_group_name
      type:
      - str
    - description: 'Name of the Media Service.

        '
      id: media_service_name
      type:
      - str
    - description: 'Media Service properties needed for update.

        '
      id: media_service
      type:
      - azure.mgmt.media.models.MediaService
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      type:
      - azure.mgmt.media.models.MediaService
      - 'msrest.pipeline.ClientRawResponse

        if raw=true'
  type: method
  uid: azure.mgmt.media.operations.MediaServiceOperations.update
references:
- fullName: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
  isExternal: false
  name: check_name_availability
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.check_name_availability
- fullName: azure.mgmt.media.operations.MediaServiceOperations.create
  isExternal: false
  name: create
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.create
- fullName: azure.mgmt.media.operations.MediaServiceOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.delete
- fullName: azure.mgmt.media.operations.MediaServiceOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.get
- fullName: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_by_resource_group
- fullName: azure.mgmt.media.operations.MediaServiceOperations.list_keys
  isExternal: false
  name: list_keys
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.list_keys
- fullName: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
  isExternal: false
  name: regenerate_key
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.regenerate_key
- fullName: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
  isExternal: false
  name: sync_storage_keys
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.sync_storage_keys
- fullName: azure.mgmt.media.operations.MediaServiceOperations.update
  isExternal: false
  name: update
  parent: azure.mgmt.media.operations.MediaServiceOperations
  uid: azure.mgmt.media.operations.MediaServiceOperations.update
