### YamlMime:PythonClass
uid: azure.mgmt.cdn.operations.ProfilesOperations
name: ProfilesOperations
fullName: azure.mgmt.cdn.operations.ProfilesOperations
module: azure.mgmt.cdn.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.cdn.CdnManagementClient>'s\n\
  >\n> <xref:profiles> attribute.\n>"
constructor:
  syntax: ProfilesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_can_migrate
  name: begin_can_migrate
  summary: Checks if CDN profile can be migrated to Azure Frontdoor(Standard/Premium)
    profile.
  signature: 'begin_can_migrate(resource_group_name: str, can_migrate_parameters:
    _models.CanMigrateParameters, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.CanMigrateResult]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: can_migrate_parameters
    description: 'Properties needed to check if cdn profile or classic frontdoor

      can be migrated. Is either a CanMigrateParameters type or a IO[bytes] type.
      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cdn.models.CanMigrateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either CanMigrateResult or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.cdn.models.CanMigrateResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_create
  name: begin_create
  summary: 'Creates a new Azure Front Door Standard or Azure Front Door Premium or
    CDN profile with a

    profile name under the specified subscription and resource group.'
  signature: 'begin_create(resource_group_name: str, profile_name: str, profile: _models.Profile,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.Profile]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: profile
    description: 'Profile properties needed to create a new profile. Is either a Profile
      type or

      a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cdn.models.Profile>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Profile or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.cdn.models.Profile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_delete
  name: begin_delete
  summary: 'Deletes an existing  Azure Front Door Standard or Azure Front Door Premium
    or CDN profile with

    the specified parameters. Deleting a profile will result in the deletion of all
    of the

    sub-resources including endpoints, origins and custom domains.'
  signature: 'begin_delete(resource_group_name: str, profile_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_migrate
  name: begin_migrate
  summary: 'Migrate the CDN profile to Azure Frontdoor(Standard/Premium) profile.
    The change need to be

    committed after this.'
  signature: 'begin_migrate(resource_group_name: str, migration_parameters: _models.MigrationParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.MigrateResult]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: migration_parameters
    description: 'Properties needed to migrate the profile. Is either a

      MigrationParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cdn.models.MigrationParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either MigrateResult or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.cdn.models.MigrateResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_migration_commit
  name: begin_migration_commit
  summary: Commit the migrated Azure Frontdoor(Standard/Premium) profile.
  signature: 'begin_migration_commit(resource_group_name: str, profile_name: str,
    **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the CDN profile which is unique within the resource group.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.begin_update
  name: begin_update
  summary: 'Updates an existing Azure Front Door Standard or Azure Front Door Premium
    or CDN profile with

    the specified profile name under the specified subscription and resource group.'
  signature: 'begin_update(resource_group_name: str, profile_name: str, profile_update_parameters:
    _models.ProfileUpdateParameters, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.Profile]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: profile_update_parameters
    description: 'Profile properties needed to update an existing profile. Is

      either a ProfileUpdateParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cdn.models.ProfileUpdateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Profile or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.cdn.models.Profile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.generate_sso_uri
  name: generate_sso_uri
  summary: 'Generates a dynamic SSO URI used to sign in to the CDN supplemental portal.
    Supplemental portal

    is used to configure advanced feature capabilities that are not yet available
    in the Azure

    portal, such as core reports in a standard profile; rules engine, advanced HTTP
    reports, and

    real-time stats and alerts in a premium profile. The SSO URI changes approximately
    every 10

    minutes.'
  signature: 'generate_sso_uri(resource_group_name: str, profile_name: str, **kwargs:
    Any) -> SsoUri'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the CDN profile which is unique within the resource group.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SsoUri or the result of cls(response)
    types:
    - <xref:azure.mgmt.cdn.models.SsoUri>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.get
  name: get
  summary: 'Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile
    with the specified

    profile name under the specified subscription and resource group.'
  signature: 'get(resource_group_name: str, profile_name: str, **kwargs: Any) -> Profile'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Profile or the result of cls(response)
    types:
    - <xref:azure.mgmt.cdn.models.Profile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.list
  name: list
  summary: 'Lists all of the Azure Front Door Standard, Azure Front Door Premium,
    and CDN profiles within

    an Azure subscription.'
  signature: 'list(**kwargs: Any) -> Iterable[Profile]'
  return:
    description: An iterator like instance of either Profile or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.cdn.models.Profile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Lists all of the Azure Front Door Standard, Azure Front Door Premium,
    and CDN profiles within a

    resource group.'
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[Profile]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either Profile or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.cdn.models.Profile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.list_resource_usage
  name: list_resource_usage
  summary: 'Checks the quota and actual usage of endpoints under the given Azure Front
    Door Standard or

    Azure Front Door Premium or CDN profile.'
  signature: 'list_resource_usage(resource_group_name: str, profile_name: str, **kwargs:
    Any) -> Iterable[ResourceUsage]'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either ResourceUsage or the result of
      cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.cdn.models.ResourceUsage>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cdn.operations.ProfilesOperations.list_supported_optimization_types
  name: list_supported_optimization_types
  summary: 'Gets the supported optimization types for the current profile. A user
    can create an endpoint

    with an optimization type from the listed values.'
  signature: 'list_supported_optimization_types(resource_group_name: str, profile_name:
    str, **kwargs: Any) -> SupportedOptimizationTypesListResult'
  parameters:
  - name: resource_group_name
    description: Name of the Resource group within the Azure subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: profile_name
    description: 'Name of the Azure Front Door Standard or Azure Front Door Premium
      or CDN

      profile which is unique within the resource group. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SupportedOptimizationTypesListResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.cdn.models.SupportedOptimizationTypesListResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.cdn.operations.ProfilesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.cdn.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\cdn\\models\\__init__.py'>
