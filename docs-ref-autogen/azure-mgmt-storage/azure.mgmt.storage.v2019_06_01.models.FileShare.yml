### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.storage.v2019_06_01.models.FileShare
  fullName: azure.mgmt.storage.v2019_06_01.models.FileShare
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.storage.v2019_06_01.models._models_py3.Resource
    type: azure.mgmt.storage.v2019_06_01.models._models_py3.AzureEntityResource
  langs:
  - python
  module: azure.mgmt.storage.v2019_06_01.models
  name: FileShare
  summary: 'Properties of the file share, including Id, resource name, resource type,

    Etag.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'FileShare(*, metadata=None, share_quota: int = None, enabled_protocols=None,
      root_squash=None, access_tier=None, **kwargs) -> None'
    parameters:
    - description: 'A name-value pair to associate with the share as

        metadata.'
      id: metadata
      type:
      - dict[str, str]
    - description: 'The maximum size of the share, in gigabytes. Must be

        greater than 0, and less than or equal to 5TB (5120). For Large File

        Shares, the maximum size is 102400.'
      id: share_quota
      type:
      - int
    - description: 'The authentication protocol that is used for the

        file share. Can only be specified when creating a share. Possible values

        include: ''SMB'', ''NFS'''
      id: enabled_protocols
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.EnabledProtocols
    - description: 'The property is for NFS share only. The default is

        NoRootSquash. Possible values include: ''NoRootSquash'', ''RootSquash'',

        ''AllSquash'''
      id: root_squash
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.RootSquashType
    - description: 'Access tier for specific share. GpV2 account can

        choose between TransactionOptimized (default), Hot, and Cool. FileStorage

        account can choose Premium. Possible values include:

        ''TransactionOptimized'', ''Hot'', ''Cool'', ''Premium'''
      id: access_tier
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.ShareAccessTier
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      id: id
      type:
      - str
    - description: The name of the resource
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex-

        Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: Resource Etag.
      id: etag
      type:
      - str
    - description: 'Returns the date and time the share was last

        modified.'
      id: last_modified_time
      type:
      - datetime
    - description: The version of the share.
      id: version
      type:
      - str
    - description: Indicates whether the share was deleted.
      id: deleted
      type:
      - bool
    - description: The deleted time if the share was deleted.
      id: deleted_time
      type:
      - datetime
    - description: 'Remaining retention days for share that

        was soft deleted.'
      id: remaining_retention_days
      type:
      - int
    - description: 'Indicates the last modification time for

        share access tier.'
      id: access_tier_change_time
      type:
      - datetime
    - description: 'Indicates if there is a pending transition for

        access tier.'
      id: access_tier_status
      type:
      - str
    - description: 'The approximate size of the data stored on the

        share. Note that this value may not include all recently created or

        recently resized files.'
      id: share_usage_bytes
      type:
      - long
  type: class
  uid: azure.mgmt.storage.v2019_06_01.models.FileShare
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
