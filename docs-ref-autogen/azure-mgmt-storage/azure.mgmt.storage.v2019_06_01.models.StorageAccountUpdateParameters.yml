### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.storage.v2019_06_01.models.StorageAccountUpdateParameters
  fullName: azure.mgmt.storage.v2019_06_01.models.StorageAccountUpdateParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.storage.v2019_06_01.models
  name: StorageAccountUpdateParameters
  summary: 'The parameters that can be provided when updating the storage account

    properties.'
  syntax:
    content: 'StorageAccountUpdateParameters(*, sku=None, tags=None, identity=None,
      custom_domain=None, encryption=None, access_tier=None, azure_files_identity_based_authentication=None,
      enable_https_traffic_only: bool = None, network_rule_set=None, large_file_shares_state=None,
      kind=None, **kwargs) -> None'
    parameters:
    - description: 'Gets or sets the SKU name. Note that the SKU name cannot be

        updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of

        those SKU names be updated to any other value.'
      id: sku
      type:
      - azure.mgmt.storage.v2019_06_01.models.Sku
    - description: 'Gets or sets a list of key value pairs that describe the

        resource. These tags can be used in viewing and grouping this resource

        (across resource groups). A maximum of 15 tags can be provided for a

        resource. Each tag must have a key no greater in length than 128

        characters and a value no greater in length than 256 characters.'
      id: tags
      type:
      - dict[str, str]
    - description: The identity of the resource.
      id: identity
      type:
      - azure.mgmt.storage.v2019_06_01.models.Identity
    - description: 'Custom domain assigned to the storage account by the

        user. Name is the CNAME source. Only one custom domain is supported per

        storage account at this time. To clear the existing custom domain, use an

        empty string for the custom domain name property.'
      id: custom_domain
      type:
      - azure.mgmt.storage.v2019_06_01.models.CustomDomain
    - description: 'Provides the encryption settings on the account. The

        default setting is unencrypted.'
      id: encryption
      type:
      - azure.mgmt.storage.v2019_06_01.models.Encryption
    - description: 'Required for storage accounts where kind =

        BlobStorage. The access tier used for billing. Possible values include:

        ''Hot'', ''Cool'''
      id: access_tier
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.AccessTier
    - description: 'Provides the identity

        based authentication settings for Azure Files.'
      id: azure_files_identity_based_authentication
      type:
      - azure.mgmt.storage.v2019_06_01.models.AzureFilesIdentityBasedAuthentication
    - description: 'Allows https traffic only to storage

        service if sets to true.'
      id: enable_https_traffic_only
      type:
      - bool
    - description: Network rule set
      id: network_rule_set
      type:
      - azure.mgmt.storage.v2019_06_01.models.NetworkRuleSet
    - description: 'Allow large file shares if sets to

        Enabled. It cannot be disabled once it is enabled. Possible values

        include: ''Disabled'', ''Enabled'''
      id: large_file_shares_state
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.LargeFileSharesState
    - description: 'Optional. Indicates the type of storage account. Currently

        only StorageV2 value supported by server. Possible values include:

        ''Storage'', ''StorageV2'', ''BlobStorage'', ''FileStorage'', ''BlockBlobStorage'''
      id: kind
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.Kind
  type: class
  uid: azure.mgmt.storage.v2019_06_01.models.StorageAccountUpdateParameters
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
