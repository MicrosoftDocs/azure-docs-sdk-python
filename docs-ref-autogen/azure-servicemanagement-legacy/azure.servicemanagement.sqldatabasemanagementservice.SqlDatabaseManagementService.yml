### YamlMime:PythonClass
uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService
name: SqlDatabaseManagementService
fullName: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService
module: azure.servicemanagement.sqldatabasemanagementservice
inheritances:
- azure.servicemanagement.servicemanagementclient._ServiceManagementClient
summary: 'Note that this class is a preliminary work on SQL Database

  management. Since it lack a lot a features, final version

  can be slightly different from the current one.'
constructor:
  syntax: SqlDatabaseManagementService(subscription_id=None, cert_file=None, host='management.core.windows.net',
    request_session=None, timeout=65)
methods:
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.create_database
  name: create_database
  summary: "Creates a new Azure SQL Database.\n\nserver_name:\n   Name of the server\
    \ to contain the new database.\n\nname:\n   Required. The name for the new database.\
    \ See Naming Requirements\n   in Azure SQL Database General Guidelines and Limitations\
    \ and\n   Database Identifiers for more information.\n\nservice_objective_id:\n\
    \   Required. The GUID corresponding to the performance level for\n   Edition.\
    \ See List Service Level Objectives for current values.\n\nedition:\n   Optional.\
    \ The Service Tier (Edition) for the new database. If\n   omitted, the default\
    \ is Web. Valid values are Web, Business,\n   Basic, Standard, and Premium. See\
    \ Azure SQL Database Service Tiers\n   (Editions) and Web and Business Edition\
    \ Sunset FAQ for more\n   information.\n\ncollation_name:\n   Optional. The database\
    \ collation. This can be any collation\n   supported by SQL. If omitted, the default\
    \ collation is used. See\n   SQL Server Collation Support in Azure SQL Database\
    \ General\n   Guidelines and Limitations for more information.\n\nmax_size_bytes:\n\
    \   Optional. Sets the maximum size, in bytes, for the database. This\n   value\
    \ must be within the range of allowed values for Edition. If\n   omitted, the\
    \ default value for the edition is used. See Azure SQL\n   Database Service Tiers\
    \ (Editions) for current maximum databases\n   sizes. Convert MB or GB values\
    \ to bytes.\n   1 MB = 1048576 bytes. 1 GB = 1073741824 bytes."
  signature: create_database(server_name, name, service_objective_id, edition=None,
    collation_name=None, max_size_bytes=None)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
  - name: service_objective_id
    isRequired: true
  - name: edition
    defaultValue: None
  - name: collation_name
    defaultValue: None
  - name: max_size_bytes
    defaultValue: None
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.create_firewall_rule
  name: create_firewall_rule
  summary: "Creates an Azure SQL Database server firewall rule.\n\nserver_name:\n\
    \   Name of the server to set the firewall rule on.\n\nname:\n   The name of the\
    \ new firewall rule.\n\nstart_ip_address:\n   The lowest IP address in the range\
    \ of the server-level firewall\n   setting. IP addresses equal to or greater than\
    \ this can attempt to\n   connect to the server. The lowest possible IP address\
    \ is 0.0.0.0.\n\nend_ip_address:\n   The highest IP address in the range of the\
    \ server-level firewall\n   setting. IP addresses equal to or less than this can\
    \ attempt to\n   connect to the server. The highest possible IP address is\n \
    \  255.255.255.255."
  signature: create_firewall_rule(server_name, name, start_ip_address, end_ip_address)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
  - name: start_ip_address
    isRequired: true
  - name: end_ip_address
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.create_server
  name: create_server
  summary: "Create a new Azure SQL Database server.\n\nadmin_login:\n   The administrator\
    \ login name for the new server.\n\nadmin_password:\n   The administrator login\
    \ password for the new server.\n\nlocation:\n   The region to deploy the new server."
  signature: create_server(admin_login, admin_password, location)
  parameters:
  - name: admin_login
    isRequired: true
  - name: admin_password
    isRequired: true
  - name: location
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.delete_database
  name: delete_database
  summary: "Deletes an Azure SQL Database.\n\nserver_name:\n   Name of the server\
    \ where the database is located.\n\nname:\n   Name of the database to delete."
  signature: delete_database(server_name, name)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.delete_firewall_rule
  name: delete_firewall_rule
  summary: "Deletes an Azure SQL Database server firewall rule.\n\nserver_name:\n\
    \   Name of the server with the firewall rule you want to delete.\n\nname:\n \
    \  Name of the firewall rule you want to delete."
  signature: delete_firewall_rule(server_name, name)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.delete_server
  name: delete_server
  summary: "Deletes an Azure SQL Database server (including all its databases).\n\n\
    server_name:\n   Name of the server you want to delete."
  signature: delete_server(server_name)
  parameters:
  - name: server_name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.get_server_event_logs
  name: get_server_event_logs
  summary: "Gets the event logs for an Azure SQL Database Server.\n\nserver_name:\n\
    \   Name of the server to retrieve the event logs from.\n\nstart_date:\n   The\
    \ starting date and time of the events to retrieve in UTC format,\n   for example\
    \ '2011-09-28 16:05:00'.\n\ninterval_size_in_minutes:\n   Size of the event logs\
    \ to retrieve (in minutes).\n   Valid values are: 5, 60, or 1440.\n\nevent_types:\n\
    \   The event type of the log entries you want to retrieve.\n   Valid values are:\n\
    \n      * connection_successful \n\n      * connection_failed \n\n      * connection_terminated\
    \ \n\n      * deadlock \n\n      * throttling \n\n      * throttling_long_transaction\
    \ \n\n   To return all event types pass in an empty string."
  signature: get_server_event_logs(server_name, start_date, interval_size_in_minutes,
    event_types='')
  parameters:
  - name: server_name
    isRequired: true
  - name: start_date
    isRequired: true
  - name: interval_size_in_minutes
    isRequired: true
  - name: event_types
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.list_databases
  name: list_databases
  summary: List the SQL databases defined on the specified server name
  signature: list_databases(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.list_firewall_rules
  name: list_firewall_rules
  summary: "Retrieves the set of firewall rules for an Azure SQL Database Server.\n\
    \nserver_name:\n   Name of the server."
  signature: list_firewall_rules(server_name)
  parameters:
  - name: server_name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.list_quotas
  name: list_quotas
  summary: "Gets quotas for an Azure SQL Database Server.\n\nserver_name:\n   Name\
    \ of the server."
  signature: list_quotas(server_name)
  parameters:
  - name: server_name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.list_servers
  name: list_servers
  summary: List the SQL servers defined on the account.
  signature: list_servers()
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.list_service_level_objectives
  name: list_service_level_objectives
  summary: "Gets the service level objectives for an Azure SQL Database server.\n\n\
    server_name:\n   Name of the server."
  signature: list_service_level_objectives(server_name)
  parameters:
  - name: server_name
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.set_server_admin_password
  name: set_server_admin_password
  summary: "Reset the administrator password for a server.\n\nserver_name:\n   Name\
    \ of the server to change the password.\n\nadmin_password:\n   The new administrator\
    \ password for the server."
  signature: set_server_admin_password(server_name, admin_password)
  parameters:
  - name: server_name
    isRequired: true
  - name: admin_password
    isRequired: true
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.update_database
  name: update_database
  summary: "Updates existing database details.\n\nserver_name:\n   Name of the server\
    \ to contain the new database.\n\nname:\n   Required. The name for the new database.\
    \ See Naming Requirements\n   in Azure SQL Database General Guidelines and Limitations\
    \ and\n   Database Identifiers for more information.\n\nnew_database_name:\n \
    \  Optional. The new name for the new database.\n\nservice_objective_id:\n   Optional.\
    \ The new service level to apply to the database. For more\n   information about\
    \ service levels, see Azure SQL Database Service\n   Tiers and Performance Levels.\
    \ Use List Service Level Objectives to\n   get the correct ID for the desired\
    \ service objective.\n\nedition:\n   Optional. The new edition for the new database.\n\
    \nmax_size_bytes:\n   Optional. The new size of the database in bytes. For information\
    \ on\n   available sizes for each edition, see Azure SQL Database Service\n  \
    \ Tiers (Editions)."
  signature: update_database(server_name, name, new_database_name=None, service_objective_id=None,
    edition=None, max_size_bytes=None)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
  - name: new_database_name
    defaultValue: None
  - name: service_objective_id
    defaultValue: None
  - name: edition
    defaultValue: None
  - name: max_size_bytes
    defaultValue: None
- uid: azure.servicemanagement.sqldatabasemanagementservice.SqlDatabaseManagementService.update_firewall_rule
  name: update_firewall_rule
  summary: "Update a firewall rule for an Azure SQL Database server.\n\nserver_name:\n\
    \   Name of the server to set the firewall rule on.\n\nname:\n   The name of the\
    \ firewall rule to update.\n\nstart_ip_address:\n   The lowest IP address in the\
    \ range of the server-level firewall\n   setting. IP addresses equal to or greater\
    \ than this can attempt to\n   connect to the server. The lowest possible IP address\
    \ is 0.0.0.0.\n\nend_ip_address:\n   The highest IP address in the range of the\
    \ server-level firewall\n   setting. IP addresses equal to or less than this can\
    \ attempt to\n   connect to the server. The highest possible IP address is\n \
    \  255.255.255.255."
  signature: update_firewall_rule(server_name, name, start_ip_address, end_ip_address)
  parameters:
  - name: server_name
    isRequired: true
  - name: name
    isRequired: true
  - name: start_ip_address
    isRequired: true
  - name: end_ip_address
    isRequired: true
