### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.iot.hub.protocol.models.export_import_device_py3.ExportImportDevice
  fullName: azure.iot.hub.protocol.models.export_import_device_py3.ExportImportDevice
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.iot.hub.protocol.models.export_import_device_py3
  name: ExportImportDevice
  summary: ExportImportDevice.
  syntax:
    content: 'ExportImportDevice(*, id: str = None, module_id: str = None, e_tag:
      str = None, import_mode=None, status=None, status_reason: str = None, authentication=None,
      twin_etag: str = None, tags=None, properties=None, capabilities=None, device_scope:
      str = None, **kwargs) -> None'
    parameters:
    - description: Device Id is always required
      id: id
      type:
      - str
    - description: ModuleId is applicable to modules only
      id: module_id
      type:
      - str
    - description: 'ETag parameter is only used for pre-conditioning the update

        when importMode is updateIfMatchETag'
      id: e_tag
      type:
      - str
    - description: 'Possible values include: ''create'', ''update'',

        ''updateIfMatchETag'', ''delete'', ''deleteIfMatchETag'', ''updateTwin'',

        ''updateTwinIfMatchETag'''
      id: import_mode
      type:
      - str
      - protocol.models.enum
    - description: 'Status is optional and defaults to enabled. Possible values

        include: ''enabled'', ''disabled'''
      id: status
      type:
      - str
      - protocol.models.enum
    - description: ''
      id: status_reason
      type:
      - str
    - description: 'Authentication parameter is optional and defaults

        to SAS if not provided. In that case, we auto-generate primary/secondary

        access keys'
      id: authentication
      type:
      - protocol.models.AuthenticationMechanism
    - description: 'twinETag parameter is only used for pre-conditioning the

        update when importMode is updateTwinIfMatchETag'
      id: twin_etag
      type:
      - str
    - description: ''
      id: tags
      type:
      - dict[str, object]
    - description: Properties are optional and defaults to empty object
      id: properties
      type:
      - protocol.models.PropertyContainer
    - description: 'Capabilities param is optional and defaults to no

        capability'
      id: capabilities
      type:
      - protocol.models.DeviceCapabilities
    - description: ''
      id: device_scope
      type:
      - str
  type: class
  uid: azure.iot.hub.protocol.models.export_import_device_py3.ExportImportDevice
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
