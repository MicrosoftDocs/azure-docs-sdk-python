### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.bulk_device_crud
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_device
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_module
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_device
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_module
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device_statistics
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_devices
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_module
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_modules_on_device
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_service_statistics
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.purge_command_queue
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.query_iot_hub
  - azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.models
  class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: RegistryManagerOperations
  summary: RegistryManagerOperations operations.
  syntax:
    content: RegistryManagerOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Version of the Api. Constant value: "2020-03-01".'
      id: api_version
  type: class
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.bulk_device_crud
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: bulk_device_crud(devices, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: bulk_device_crud
  summary: 'Create, update, or delete the identities of multiple devices from the

    IoT hub identity registry.


    Create, update, or delete the identiies of multiple devices from the

    IoT hub identity registry. A device identity can be specified only once

    in the list. Different operations (create, update, delete) on different

    devices are allowed. A maximum of 100 devices can be specified per

    invocation. For large scale operations, consider using the import

    feature using blob

    storage([https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities)).'
  syntax:
    content: bulk_device_crud(devices, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: ''
      id: devices
      isRequired: true
      type:
      - list[protocol.models.ExportImportDevice]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: BulkRegistryOperationResult or ClientRawResponse if raw=true
      type:
      - protocol.models.BulkRegistryOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.bulk_device_crud
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_device
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: create_or_update_device(id, device, if_match=None, custom_headers=None, raw=False,
    **operation_config)
  namewithoutparameters: create_or_update_device
  summary: 'Create or update the identity of a device in the identity registry of

    an IoT hub.


    Create or update the identity of a device in the identity registry of

    an IoT hub. An ETag must not be specified for the create operation. An

    ETag must be specified for the update operation. Note that generationId

    and deviceId cannot be updated by the user.'
  syntax:
    content: create_or_update_device(id, device, if_match=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - description: ''
      id: device
      isRequired: true
      type:
      - protocol.models.Device
    - defaultValue: None
      description: ''
      id: if_match
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Device or ClientRawResponse if raw=true
      type:
      - protocol.models.Device
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_device
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_module
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: create_or_update_module(id, mid, module, if_match=None, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: create_or_update_module
  summary: 'Create or update the module identity for device in IoT hub. An ETag

    must not be specified for the create operation. An ETag must be

    specified for the update operation. Note that moduleId and generation

    cannot be updated by the user.'
  syntax:
    content: create_or_update_module(id, mid, module, if_match=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - description: Module ID.
      id: mid
      isRequired: true
      type:
      - str
    - description: ''
      id: module
      isRequired: true
      type:
      - protocol.models.Module
    - defaultValue: None
      description: ''
      id: if_match
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Module or ClientRawResponse if raw=true
      type:
      - protocol.models.Module
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_module
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_device
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: delete_device(id, if_match=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_device
  summary: 'Delete the identity of a device from the identity registry of an IoT

    hub.


    Delete the identity of a device from the identity registry of an IoT

    hub. This request requires the If-Match header. The client may specify

    the ETag for the device identity on the request in order to compare to

    the ETag maintained by the service for the purpose of optimistic

    concurrency. The delete operation is performed only if the ETag sent by

    the client matches the value maintained by the server, indicating that

    the device identity has not been modified since it was retrieved by the

    client. To force an unconditional delete, set If-Match to the wildcard

    character (*).'
  syntax:
    content: delete_device(id, if_match=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: ''
      id: if_match
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_device
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_module
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: delete_module(id, mid, if_match=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: delete_module
  summary: 'Delete the module identity for device of an IoT hub. This request

    requires the If-Match header. The client may specify the ETag for the

    device identity on the request in order to compare to the ETag

    maintained by the service for the purpose of optimistic concurrency.

    The delete operation is performed only if the ETag sent by the client

    matches the value maintained by the server, indicating that the device

    identity has not been modified since it was retrieved by the client. To

    force an unconditional delete, set If-Match to the wildcard character

    (*).'
  syntax:
    content: delete_module(id, mid, if_match=None, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - description: Module ID.
      id: mid
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: ''
      id: if_match
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_module
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_device(id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_device
  summary: 'Retrieve a device from the identity registry of an IoT hub.


    Retrieve a device from the identity registry of an IoT hub.'
  syntax:
    content: get_device(id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Device or ClientRawResponse if raw=true
      type:
      - protocol.models.Device
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device_statistics
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_device_statistics(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_device_statistics
  summary: "Retrieves statistics about device identities in the IoT hub\u2019s identity\n\
    registry."
  syntax:
    content: get_device_statistics(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: RegistryStatistics or ClientRawResponse if raw=true
      type:
      - protocol.models.RegistryStatistics
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device_statistics
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_devices
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_devices(top=None, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_devices
  summary: 'Get the identities of multiple devices from the IoT hub identity

    registry. Not recommended. Use the IoT Hub query language to retrieve

    device twin and device identity information. See

    [https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub](https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub)

    and

    [https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language)

    for more information.'
  syntax:
    content: get_devices(top=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'This parameter when specified, defines the maximum number

        of device identities that are returned. Any value outside the range of

        1-1000 is considered to be 1000.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[protocol.models.Device]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_devices
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_module
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_module(id, mid, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_module
  summary: Retrieve the specified module identity on the device.
  syntax:
    content: get_module(id, mid, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - description: Module ID.
      id: mid
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: Module or ClientRawResponse if raw=true
      type:
      - protocol.models.Module
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_module
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_modules_on_device
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_modules_on_device(id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_modules_on_device
  summary: Retrieve all the module identities on the device.
  syntax:
    content: get_modules_on_device(id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[protocol.models.Module]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_modules_on_device
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_service_statistics
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: get_service_statistics(custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: get_service_statistics
  summary: "Retrieves service statistics for this IoT hub\u2019s identity registry."
  syntax:
    content: get_service_statistics(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: ServiceStatistics or ClientRawResponse if raw=true
      type:
      - protocol.models.ServiceStatistics
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_service_statistics
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.purge_command_queue
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: purge_command_queue(id, custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: purge_command_queue
  summary: 'Deletes all the pending commands for this device from the IoT hub.


    Deletes all the pending commands for this device from the IoT hub.'
  syntax:
    content: purge_command_queue(id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Device ID.
      id: id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: PurgeMessageQueueResult or ClientRawResponse if raw=true
      type:
      - protocol.models.PurgeMessageQueueResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.purge_command_queue
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.query_iot_hub
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: query_iot_hub(query_specification, x_ms_continuation=None, x_ms_max_item_count=None,
    custom_headers=None, raw=False, **operation_config)
  namewithoutparameters: query_iot_hub
  summary: 'Query an IoT hub to retrieve information regarding device twins using
    a

    SQL-like language.


    Query an IoT hub to retrieve information regarding device twins using a

    SQL-like language. See

    [https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language)

    for more information. Pagination of results is supported. This returns

    information about device twins only.'
  syntax:
    content: query_iot_hub(query_specification, x_ms_continuation=None, x_ms_max_item_count=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: ''
      id: query_specification
      isRequired: true
      type:
      - protocol.models.QuerySpecification
    - defaultValue: None
      description: ''
      id: x_ms_continuation
      type:
      - str
    - defaultValue: None
      description: ''
      id: x_ms_max_item_count
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[protocol.models.Twin]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.query_iot_hub
- class: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.models
  langs:
  - python
  module: azure.iot.hub.protocol.operations.registry_manager_operations
  name: models
  syntax:
    content: models = <module 'azure.iot.hub.protocol.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\iot\\hub\\protocol\\models\\__init__.py'>
  type: attribute
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.models
references:
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.bulk_device_crud
  isExternal: false
  name: bulk_device_crud(devices, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.bulk_device_crud
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_device
  isExternal: false
  name: create_or_update_device(id, device, if_match=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_device
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_module
  isExternal: false
  name: create_or_update_module(id, mid, module, if_match=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.create_or_update_module
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_device
  isExternal: false
  name: delete_device(id, if_match=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_device
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_module
  isExternal: false
  name: delete_module(id, mid, if_match=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.delete_module
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device
  isExternal: false
  name: get_device(id, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device_statistics
  isExternal: false
  name: get_device_statistics(custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_device_statistics
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_devices
  isExternal: false
  name: get_devices(top=None, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_devices
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_module
  isExternal: false
  name: get_module(id, mid, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_module
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_modules_on_device
  isExternal: false
  name: get_modules_on_device(id, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_modules_on_device
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_service_statistics
  isExternal: false
  name: get_service_statistics(custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.get_service_statistics
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.purge_command_queue
  isExternal: false
  name: purge_command_queue(id, custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.purge_command_queue
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.query_iot_hub
  isExternal: false
  name: query_iot_hub(query_specification, x_ms_continuation=None, x_ms_max_item_count=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.query_iot_hub
- fullName: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.models
  isExternal: false
  name: models
  parent: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations
  uid: azure.iot.hub.protocol.operations.registry_manager_operations.RegistryManagerOperations.models
- fullName: list[protocol.models.ExportImportDevice]
  name: list[ExportImportDevice]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: protocol.models.ExportImportDevice
    name: ExportImportDevice
    uid: protocol.models.ExportImportDevice
  - fullName: ']'
    name: ']'
  uid: list[protocol.models.ExportImportDevice]
- fullName: list[protocol.models.Device]
  name: list[Device]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: protocol.models.Device
    name: Device
    uid: protocol.models.Device
  - fullName: ']'
    name: ']'
  uid: list[protocol.models.Device]
- fullName: list[protocol.models.Module]
  name: list[Module]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: protocol.models.Module
    name: Module
    uid: protocol.models.Module
  - fullName: ']'
    name: ']'
  uid: list[protocol.models.Module]
- fullName: list[protocol.models.Twin]
  name: list[Twin]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: protocol.models.Twin
    name: Twin
    uid: protocol.models.Twin
  - fullName: ']'
    name: ']'
  uid: list[protocol.models.Twin]
