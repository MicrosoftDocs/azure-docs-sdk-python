### YamlMime:PythonClass
uid: azure.iot.hub.IoTHubRegistryManager
name: IoTHubRegistryManager
fullName: azure.iot.hub.IoTHubRegistryManager
module: azure.iot.hub
inheritances:
- builtins.object
summary: 'A class to provide convenience APIs for IoTHub Registry Manager operations,

  based on top of the auto generated IotHub REST APIs'
constructor:
  syntax: IoTHubRegistryManager(connection_string=None, host=None, token_credential=None)
methods:
- uid: azure.iot.hub.IoTHubRegistryManager.bulk_create_or_update_devices
  name: bulk_create_or_update_devices
  summary: "Create, update, or delete the identities of multiple devices from the\n\
    \   IoTHub identity registry.\n\n   Create, update, or delete the identities of\
    \ multiple devices from the\n   IoTHub identity registry. A device identity can\
    \ be specified only once\n   in the list. Different operations (create, update,\
    \ delete) on different\n   devices are allowed. A maximum of 100 devices can be\
    \ specified per\n   invocation. For large scale operations, consider using the\
    \ import\n   feature using blob\n   storage([https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities))."
  signature: bulk_create_or_update_devices(devices)
  parameters:
  - name: devices
    description: The list of device objects to operate on.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.iot.hub.protocol.models.ExportImportDevice>]
  return:
    description: The BulkRegistryOperationResult object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_device_with_certificate_authority
  name: create_device_with_certificate_authority
  summary: Creates a device identity on IoTHub using certificate authority.
  signature: create_device_with_certificate_authority(device_id, status, iot_edge=False,
    status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initial state of the created device.

      (Possible values: "enabled" or "disabled").'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_device_with_sas
  name: create_device_with_sas
  summary: Creates a device identity on IoTHub using SAS authentication.
  signature: create_device_with_sas(device_id, primary_key, secondary_key, status,
    iot_edge=False, status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_key
    description: Primary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_key
    description: Secondary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initital state of the created device.

      (Possible values: "enabled" or "disabled")'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_device_with_x509
  name: create_device_with_x509
  summary: Creates a device identity on IoTHub using X509 authentication.
  signature: create_device_with_x509(device_id, primary_thumbprint, secondary_thumbprint,
    status, iot_edge=False, status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_thumbprint
    description: Primary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_thumbprint
    description: Secondary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initital state of the created device.

      (Possible values: "enabled" or "disabled")'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_module_with_certificate_authority
  name: create_module_with_certificate_authority
  summary: Creates a module identity for a device on IoTHub using certificate authority.
  signature: create_module_with_certificate_authority(device_id, module_id, managed_by)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_module_with_sas
  name: create_module_with_sas
  summary: Creates a module identity for a device on IoTHub using SAS authentication.
  signature: create_module_with_sas(device_id, module_id, managed_by, primary_key,
    secondary_key)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  - name: primary_key
    description: Primary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_key
    description: Secondary authentication key.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.create_module_with_x509
  name: create_module_with_x509
  summary: Creates a module identity for a device on IoTHub using X509 authentication.
  signature: create_module_with_x509(device_id, module_id, managed_by, primary_thumbprint,
    secondary_thumbprint)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  - name: primary_thumbprint
    description: Primary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_thumbprint
    description: Secondary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.delete_device
  name: delete_device
  summary: Deletes a device identity from IoTHub.
  signature: delete_device(device_id, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the delete operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: None.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.delete_module
  name: delete_module
  summary: Deletes a module identity for a device from IoTHub.
  signature: delete_module(device_id, module_id, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the delete operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: None.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.from_connection_string
  name: from_connection_string
  summary: 'Classmethod initializer for a Registry Manager Service client.

    Creates Registry Manager class from connection string.


    After a successful creation the class has been authenticated with IoTHub and

    it is ready to call the member APIs to communicate with IoTHub.'
  signature: from_connection_string(connection_string)
  parameters:
  - name: connection_string
    description: 'The IoTHub connection string used to authenticate connection

      with IoTHub.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_string
    isRequired: true
  return:
    types:
    - <xref:azure.iot.hub.IoTHubRegistryManager>
- uid: azure.iot.hub.IoTHubRegistryManager.from_token_credential
  name: from_token_credential
  summary: 'Classmethod initializer for a Registry Manager Service client.

    Creates Registry Manager class from host name url and Azure token credential.


    After a successful creation the class has been authenticated with IoTHub and

    it is ready to call the member APIs to communicate with IoTHub.'
  signature: from_token_credential(url, token_credential)
  parameters:
  - name: url
    description: The Azure service url (host name).
    isRequired: true
    types:
    - <xref:str>
  - name: token_credential
    description: The Azure token credential object.
    isRequired: true
    types:
    - <xref:str>
  - name: token_credential
    isRequired: true
  return:
    types:
    - <xref:azure.iot.hub.IoTHubRegistryManager>
- uid: azure.iot.hub.IoTHubRegistryManager.get_device
  name: get_device
  summary: Retrieves a device identity from IoTHub.
  signature: get_device(device_id)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The Device object containing the requested device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_device_registry_statistics
  name: get_device_registry_statistics
  summary: Retrieves the IoTHub device registry statistics.
  signature: get_device_registry_statistics()
  return:
    description: The RegistryStatistics object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_devices
  name: get_devices
  summary: "Get the identities of multiple devices from the IoTHub identity\n   registry.\
    \ Not recommended. Use the IoTHub query language to retrieve\n   device twin and\
    \ device identity information. See\n   [https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub](https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub)\n\
    \   and\n   [https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language)\n\
    \   for more information."
  signature: get_devices(max_number_of_devices=None)
  parameters:
  - name: max_number_of_devices
    description: 'This parameter when specified, defines the maximum number

      of device identities that are returned. Any value outside the range of

      1-1000 is considered to be 1000'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: List of device info.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_module
  name: get_module
  summary: Retrieves a module identity for a device from IoTHub.
  signature: get_module(device_id, module_id)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The Module object containing the requested module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_module_twin
  name: get_module_twin
  summary: Gets a module twin.
  signature: get_module_twin(device_id, module_id)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_modules
  name: get_modules
  summary: Retrieves all module identities on a device.
  signature: get_modules(device_id)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The list[Module] containing all the modules on the device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_service_statistics
  name: get_service_statistics
  summary: Retrieves the IoTHub service statistics.
  signature: get_service_statistics()
  return:
    description: The ServiceStatistics object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.get_twin
  name: get_twin
  summary: Gets a device twin.
  signature: get_twin(device_id)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.invoke_device_method
  name: invoke_device_method
  summary: Invoke a direct method on a device.
  signature: invoke_device_method(device_id, direct_method_request)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: direct_method_request
    description: The method request.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.CloudToDeviceMethod>
  return:
    description: The CloudToDeviceMethodResult object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.invoke_device_module_method
  name: invoke_device_module_method
  summary: Invoke a direct method on a device.
  signature: invoke_device_module_method(device_id, module_id, direct_method_request)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: direct_method_request
    description: The method request.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.CloudToDeviceMethod>
  return:
    description: The CloudToDeviceMethodResult object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.query_iot_hub
  name: query_iot_hub
  summary: "Query an IoTHub to retrieve information regarding device twins using a\n\
    \   SQL-like language.\n   See [https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language)\n\
    \   for more information. Pagination of results is supported. This returns\n \
    \  information about device twins only."
  signature: query_iot_hub(query_specification, continuation_token=None, max_item_count=None)
  parameters:
  - name: query
    description: The query specification.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.QuerySpecification>
  - name: continuation_token
    description: Continuation token for paging
    defaultValue: None
    types:
    - <xref:str>
  - name: max_item_count
    description: Maximum number of requested device twins
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The QueryResult object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.replace_module_twin
  name: replace_module_twin
  summary: Replaces tags and desired properties of a module twin.
  signature: replace_module_twin(device_id, module_id, module_twin, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: module_twin
    description: The twin info of the module.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Twin>
  - name: etag
    description: The etag (if_match) value to use for the replace operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.replace_twin
  name: replace_twin
  summary: Replaces tags and desired properties of a device twin.
  signature: replace_twin(device_id, device_twin, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: device_twin
    description: The twin info of the device.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Twin>
  - name: etag
    description: The etag (if_match) value to use for the replace operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.send_c2d_message
  name: send_c2d_message
  summary: Send a C2D mesage to a IoTHub Device.
  signature: send_c2d_message(device_id, message, properties={})
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: message
    description: The message that is to be delievered to the device.
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: 'The properties to be send with the message.  Can contain

      application properties and system properties'
    defaultValue: '{}'
    types:
    - <xref:dict>
  exceptions:
  - type: Exception if the Send command is not able to send the message
- uid: azure.iot.hub.IoTHubRegistryManager.update_device_with_certificate_authority
  name: update_device_with_certificate_authority
  summary: Updates a device identity on IoTHub using certificate authority.
  signature: update_device_with_certificate_authority(device_id, etag, status, iot_edge=False,
    status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initital state of the created device.

      (Possible values: "enabled" or "disabled").'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: The updated Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_device_with_sas
  name: update_device_with_sas
  summary: Updates a device identity on IoTHub using SAS authentication.
  signature: update_device_with_sas(device_id, etag, primary_key, secondary_key, status,
    iot_edge=False, status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_key
    description: Primary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_key
    description: Secondary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initital state of the created device.

      (Possible values: "enabled" or "disabled").'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: The updated Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_device_with_x509
  name: update_device_with_x509
  summary: Updates a device identity on IoTHub using X509 authentication.
  signature: update_device_with_x509(device_id, etag, primary_thumbprint, secondary_thumbprint,
    status, iot_edge=False, status_reason=None, device_scope=None, parent_scopes=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_thumbprint
    description: Primary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_thumbprint
    description: Secondary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Initital state of the created device.

      (Possible values: "enabled" or "disabled").'
    isRequired: true
    types:
    - <xref:str>
  - name: iot_edge
    description: 'Whether or not the created device is an IoT Edge device. Default
      value: False'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: status_reason
    description: 'The reason for the device identity status. Default value: None'
    defaultValue: None
    types:
    - <xref:str>
  - name: device_scope
    description: 'The scope of the device. Default value: None

      Auto generated and immutable for edge devices and modifiable in leaf devices
      to create child/parent relationship.

      For leaf devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.'
    defaultValue: None
    types:
    - <xref:str>
  - name: str] parent_scopes
    description: 'The scopes of the upper level edge devices if applicable. Default
      value: None

      For edge devices, the value to set a parent edge device can be retrieved from
      the parent edge device''s device_scope property.

      For leaf devices, this could be set to the same value as device_scope or left
      for the service to copy over.'
    defaultValue: None
    types:
    - <xref:Union>[<xref:list>[<xref:str>]<xref:,>
  return:
    description: The updated Device object containing the created device.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_module_twin
  name: update_module_twin
  summary: Updates tags and desired properties of a module twin.
  signature: update_module_twin(device_id, module_id, module_twin, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: module_twin
    description: The twin info of the module.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Twin>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_module_with_certificate_authority
  name: update_module_with_certificate_authority
  summary: Updates a module identity for a device on IoTHub using certificate authority.
  signature: update_module_with_certificate_authority(device_id, module_id, managed_by,
    etag)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The updated Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_module_with_sas
  name: update_module_with_sas
  summary: Updates a module identity for a device on IoTHub using SAS authentication.
  signature: update_module_with_sas(device_id, module_id, managed_by, etag, primary_key,
    secondary_key)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_key
    description: Primary authentication key.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_key
    description: Secondary authentication key.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The updated Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_module_with_x509
  name: update_module_with_x509
  summary: Updates a module identity for a device on IoTHub using X509 authentication.
  signature: update_module_with_x509(device_id, module_id, managed_by, etag, primary_thumbprint,
    secondary_thumbprint)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: The name (Id) of the module.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: The name of the manager device (edge).
    isRequired: true
    types:
    - <xref:str>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  - name: primary_thumbprint
    description: Primary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  - name: secondary_thumbprint
    description: Secondary X509 thumbprint.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The updated Module object containing the created module.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.IoTHubRegistryManager.update_twin
  name: update_twin
  summary: Updates tags and desired properties of a device twin.
  signature: update_twin(device_id, device_twin, etag=None)
  parameters:
  - name: device_id
    description: The name (Id) of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: device_twin
    description: The twin info of the device.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Twin>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The Twin object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
