### YamlMime:PythonClass
uid: azure.iot.hub.protocol.models.twin.Twin
name: Twin
fullName: azure.iot.hub.protocol.models.twin.Twin
module: azure.iot.hub.protocol.models.twin
inheritances:
- msrest.serialization.Model
summary: 'The state information for a device or module. This is implicitly created

  and deleted when the corresponding device/ module identity is created or

  deleted in the IoT Hub.'
constructor:
  syntax: Twin(**kwargs)
  parameters:
  - name: device_id
    description: 'The unique identifier of the device in the identity

      registry of the IoT Hub. It is a case-sensitive string (up to 128 char

      long) of ASCII 7-bit alphanumeric chars, and the following special

      characters {''-'', '':'', ''.'', ''+'', ''%'', ''_'', ''#'', ''*'', ''?'', ''!'',
      ''('', '')'',

      '','', ''='', ''@'', '';'', ''$'', ''''''}.'
    isRequired: true
    types:
    - <xref:str>
  - name: module_id
    description: 'The unique identifier of the module in the identity

      registry of the IoT Hub. It is a case-sensitive string (up to 128 char

      long) of ASCII 7-bit alphanumeric chars, and the following special

      characters {''-'', '':'', ''.'', ''+'', ''%'', ''_'', ''#'', ''*'', ''?'', ''!'',
      ''('', '')'',

      '','', ''='', ''@'', '';'', ''$'', ''''''}.'
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: 'The collection of key-value pairs read and written by the

      solution back end. They are not visible to device apps. They keys are

      UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters

      exclude UNICODE control characters (segments C0 and C1), ''.'', ''$'' and

      space. The values are JSON objects, up-to 4KB in length.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: properties
    description: The desired and reported properties of the twin.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.TwinProperties>
  - name: etag
    description: 'The string representing a ETag for the device twin, as per

      RFC7232.'
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: 'The version for the device twin including tags and desired

      properties'
    isRequired: true
    types:
    - <xref:long>
  - name: device_etag
    description: 'The string representing a ETag for the device, as per

      RFC7232.'
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'The enabled status of the device. If disabled, the device

      cannot connect to the service. Possible values include: ''enabled'',

      ''disabled'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: status_reason
    description: 'The reason for the current status of the device, if

      any.'
    isRequired: true
    types:
    - <xref:str>
  - name: status_update_time
    description: 'The date and time when the status of the device

      was last updated.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: connection_state
    description: 'The connection state of the device. Possible

      values include: ''Disconnected'', ''Connected'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: last_activity_time
    description: 'The date and time when the device last

      connected or received or sent a message. The date and time is sepecified

      in ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z.

      This value is not updated if the device uses the HTTP/1 protocol to

      perform messaging operations.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: cloud_to_device_message_count
    description: 'The number of cloud-to-device

      messages sent.'
    isRequired: true
    types:
    - <xref:int>
  - name: authentication_type
    description: 'The authentication type used by the device.

      Possible values include: ''sas'', ''selfSigned'', ''certificateAuthority'',

      ''none'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:protocol.models.enum>
  - name: x509_thumbprint
    description: The X509 thumbprint of the device.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.X509Thumbprint>
  - name: capabilities
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.DeviceCapabilities>
  - name: device_scope
    description: The scope of the device.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_scopes
    description: 'The scopes of the upper level edge devices if

      applicable. Only available for edge devices.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
methods:
- uid: azure.iot.hub.protocol.models.twin.Twin.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.iot.hub.protocol.models.twin.Twin.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.iot.hub.protocol.models.twin.Twin.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.iot.hub.protocol.models.twin.Twin.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.iot.hub.protocol.models.twin.Twin.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.iot.hub.protocol.models.twin.Twin.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.iot.hub.protocol.models.twin.Twin.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
