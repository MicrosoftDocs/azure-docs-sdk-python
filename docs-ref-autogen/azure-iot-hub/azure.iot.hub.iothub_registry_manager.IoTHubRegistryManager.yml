### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.bulk_create_or_update_devices
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_certificate_authority
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_sas
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_x509
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_certificate_authority
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_sas
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_x509
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_device
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_module
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device_registry_statistics
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_devices
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module_twin
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_modules
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_service_statistics
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_twin
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_method
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_module_method
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.query_iot_hub
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_module_twin
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_twin
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.send_c2d_message
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_certificate_authority
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_sas
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_x509
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_twin
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_certificate_authority
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_sas
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_x509
  - azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_twin
  class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: IoTHubRegistryManager
  summary: 'A class to provide convenience APIs for IoTHub Registry Manager operations,

    based on top of the auto generated IotHub REST APIs'
  syntax:
    content: IoTHubRegistryManager(connection_string)
  type: class
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.bulk_create_or_update_devices
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: bulk_create_or_update_devices(devices)
  namewithoutparameters: bulk_create_or_update_devices
  summary: "Create, update, or delete the identities of multiple devices from the\n\
    \   IoTHub identity registry.\n\n   Create, update, or delete the identities of\
    \ multiple devices from the\n   IoTHub identity registry. A device identity can\
    \ be specified only once\n   in the list. Different operations (create, update,\
    \ delete) on different\n   devices are allowed. A maximum of 100 devices can be\
    \ specified per\n   invocation. For large scale operations, consider using the\
    \ import\n   feature using blob\n   storage([https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities))."
  syntax:
    content: bulk_create_or_update_devices(devices)
    parameters:
    - description: The list of device objects to operate on.
      id: devices
      isRequired: true
      type:
      - list[ExportImportDevice]
    return:
      description: The BulkRegistryOperationResult object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.bulk_create_or_update_devices
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_certificate_authority
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_device_with_certificate_authority(device_id, status, iot_edge=False)
  namewithoutparameters: create_device_with_certificate_authority
  summary: Creates a device identity on IoTHub using certificate authority.
  syntax:
    content: create_device_with_certificate_authority(device_id, status, iot_edge=False)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: 'Initial state of the created device.

        (Possible values: "enabled" or "disabled").'
      id: status
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      id: iot_edge
    return:
      description: Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_certificate_authority
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_sas
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_device_with_sas(device_id, primary_key, secondary_key, status, iot_edge=False)
  namewithoutparameters: create_device_with_sas
  summary: Creates a device identity on IoTHub using SAS authentication.
  syntax:
    content: create_device_with_sas(device_id, primary_key, secondary_key, status,
      iot_edge=False)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: Primary authentication key.
      id: primary_key
      isRequired: true
      type:
      - str
    - description: Secondary authentication key.
      id: secondary_key
      isRequired: true
      type:
      - str
    - description: 'Initital state of the created device.

        (Possible values: "enabled" or "disabled")'
      id: status
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      id: iot_edge
    return:
      description: Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_sas
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_x509
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_device_with_x509(device_id, primary_thumbprint, secondary_thumbprint,
    status, iot_edge=False)
  namewithoutparameters: create_device_with_x509
  summary: Creates a device identity on IoTHub using X509 authentication.
  syntax:
    content: create_device_with_x509(device_id, primary_thumbprint, secondary_thumbprint,
      status, iot_edge=False)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: Primary X509 thumbprint.
      id: primary_thumbprint
      isRequired: true
      type:
      - str
    - description: Secondary X509 thumbprint.
      id: secondary_thumbprint
      isRequired: true
      type:
      - str
    - description: 'Initital state of the created device.

        (Possible values: "enabled" or "disabled")'
      id: status
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      id: iot_edge
    return:
      description: Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_x509
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_certificate_authority
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_module_with_certificate_authority(device_id, module_id, managed_by)
  namewithoutparameters: create_module_with_certificate_authority
  summary: Creates a module identity for a device on IoTHub using certificate authority.
  syntax:
    content: create_module_with_certificate_authority(device_id, module_id, managed_by)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    return:
      description: Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_certificate_authority
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_sas
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_module_with_sas(device_id, module_id, managed_by, primary_key, secondary_key)
  namewithoutparameters: create_module_with_sas
  summary: Creates a module identity for a device on IoTHub using SAS authentication.
  syntax:
    content: create_module_with_sas(device_id, module_id, managed_by, primary_key,
      secondary_key)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    - description: Primary authentication key.
      id: primary_key
      isRequired: true
      type:
      - str
    - description: Secondary authentication key.
      id: secondary_key
      isRequired: true
      type:
      - str
    return:
      description: Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_sas
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_x509
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: create_module_with_x509(device_id, module_id, managed_by, primary_thumbprint,
    secondary_thumbprint)
  namewithoutparameters: create_module_with_x509
  summary: Creates a module identity for a device on IoTHub using X509 authentication.
  syntax:
    content: create_module_with_x509(device_id, module_id, managed_by, primary_thumbprint,
      secondary_thumbprint)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    - description: Primary X509 thumbprint.
      id: primary_thumbprint
      isRequired: true
      type:
      - str
    - description: Secondary X509 thumbprint.
      id: secondary_thumbprint
      isRequired: true
      type:
      - str
    return:
      description: Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_x509
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_device
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: delete_device(device_id, etag=None)
  namewithoutparameters: delete_device
  summary: Deletes a device identity from IoTHub.
  syntax:
    content: delete_device(device_id, etag=None)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The etag (if_match) value to use for the delete operation.
      id: etag
      type:
      - str
    return:
      description: None.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_device
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_module
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: delete_module(device_id, module_id, etag=None)
  namewithoutparameters: delete_module
  summary: Deletes a module identity for a device from IoTHub.
  syntax:
    content: delete_module(device_id, module_id, etag=None)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The etag (if_match) value to use for the delete operation.
      id: etag
      type:
      - str
    return:
      description: None.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_module
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_device(device_id)
  namewithoutparameters: get_device
  summary: Retrieves a device identity from IoTHub.
  syntax:
    content: get_device(device_id)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    return:
      description: The Device object containing the requested device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device_registry_statistics
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_device_registry_statistics()
  namewithoutparameters: get_device_registry_statistics
  summary: Retrieves the IoTHub device registry statistics.
  syntax:
    content: get_device_registry_statistics()
    parameters: []
    return:
      description: The RegistryStatistics object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device_registry_statistics
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_devices
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_devices(max_number_of_devices=None)
  namewithoutparameters: get_devices
  summary: "Get the identities of multiple devices from the IoTHub identity\n   registry.\
    \ Not recommended. Use the IoTHub query language to retrieve\n   device twin and\
    \ device identity information. See\n   [https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub](https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub)\n\
    \   and\n   [https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language)\n\
    \   for more information."
  syntax:
    content: get_devices(max_number_of_devices=None)
    parameters:
    - defaultValue: None
      description: 'This parameter when specified, defines the maximum number

        of device identities that are returned. Any value outside the range of

        1-1000 is considered to be 1000'
      id: max_number_of_devices
      type:
      - int
    return:
      description: List of device info.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_devices
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_module(device_id, module_id)
  namewithoutparameters: get_module
  summary: Retrieves a module identity for a device from IoTHub.
  syntax:
    content: get_module(device_id, module_id)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    return:
      description: The Module object containing the requested module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_module_twin(device_id, module_id)
  namewithoutparameters: get_module_twin
  summary: Gets a module twin.
  syntax:
    content: get_module_twin(device_id, module_id)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module_twin
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_modules
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_modules(device_id)
  namewithoutparameters: get_modules
  summary: Retrieves all module identities on a device.
  syntax:
    content: get_modules(device_id)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    return:
      description: The list[Module] containing all the modules on the device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_modules
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_service_statistics
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_service_statistics()
  namewithoutparameters: get_service_statistics
  summary: Retrieves the IoTHub service statistics.
  syntax:
    content: get_service_statistics()
    parameters: []
    return:
      description: The ServiceStatistics object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_service_statistics
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: get_twin(device_id)
  namewithoutparameters: get_twin
  summary: Gets a device twin.
  syntax:
    content: get_twin(device_id)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_twin
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_method
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: invoke_device_method(device_id, direct_method_request)
  namewithoutparameters: invoke_device_method
  summary: Invoke a direct method on a device.
  syntax:
    content: invoke_device_method(device_id, direct_method_request)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The method request.
      id: direct_method_request
      isRequired: true
      type:
      - CloudToDeviceMethod
    return:
      description: The CloudToDeviceMethodResult object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_method
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_module_method
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: invoke_device_module_method(device_id, module_id, direct_method_request)
  namewithoutparameters: invoke_device_module_method
  summary: Invoke a direct method on a device.
  syntax:
    content: invoke_device_module_method(device_id, module_id, direct_method_request)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The method request.
      id: direct_method_request
      isRequired: true
      type:
      - CloudToDeviceMethod
    return:
      description: The CloudToDeviceMethodResult object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_module_method
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.query_iot_hub
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: query_iot_hub(query_specification, continuation_token=None, max_item_count=None)
  namewithoutparameters: query_iot_hub
  summary: "Query an IoTHub to retrieve information regarding device twins using a\n\
    \   SQL-like language.\n   See [https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language)\n\
    \   for more information. Pagination of results is supported. This returns\n \
    \  information about device twins only."
  syntax:
    content: query_iot_hub(query_specification, continuation_token=None, max_item_count=None)
    parameters:
    - description: The query specification.
      id: query
      isRequired: true
      type:
      - QuerySpecification
    - defaultValue: None
      description: Continuation token for paging
      id: continuation_token
      type:
      - str
    - defaultValue: None
      description: Maximum number of requested device twins
      id: max_item_count
      type:
      - str
    return:
      description: The QueryResult object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.query_iot_hub
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_module_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: replace_module_twin(device_id, module_id, module_twin)
  namewithoutparameters: replace_module_twin
  summary: Replaces tags and desired properties of a module twin.
  syntax:
    content: replace_module_twin(device_id, module_id, module_twin)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The twin info of the module.
      id: module_twin
      isRequired: true
      type:
      - Twin
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_module_twin
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: replace_twin(device_id, device_twin)
  namewithoutparameters: replace_twin
  summary: Replaces tags and desired properties of a device twin.
  syntax:
    content: replace_twin(device_id, device_twin)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The twin info of the device.
      id: device_twin
      isRequired: true
      type:
      - Twin
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_twin
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.send_c2d_message
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: send_c2d_message(device_id, message, properties={})
  namewithoutparameters: send_c2d_message
  summary: "Send a C2D mesage to a IoTHub Device.\n   The following system properties\
    \ are supported\n\n   correlationId - String property that contains the MessageId\
    \ of the request\n   messageId - Identifier for the message used for request-reply\
    \ patterns.\n   userId - An ID used to specify the origin of messages\n   For\
    \ more information see [https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-construct](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-construct)"
  syntax:
    content: send_c2d_message(device_id, message, properties={})
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The message that is to be delievered to the device.
      id: message
      isRequired: true
      type:
      - str
    - defaultValue: '{}'
      description: 'The properties to be send with the message.  Can contain

        application properties and system properties'
      id: properties
      type:
      - dict
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.send_c2d_message
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_certificate_authority
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_device_with_certificate_authority(device_id, etag, status)
  namewithoutparameters: update_device_with_certificate_authority
  summary: Updates a device identity on IoTHub using certificate authority.
  syntax:
    content: update_device_with_certificate_authority(device_id, etag, status)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    - description: 'Initital state of the created device.

        (Possible values: "enabled" or "disabled").'
      id: status
      isRequired: true
      type:
      - str
    return:
      description: The updated Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_certificate_authority
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_sas
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_device_with_sas(device_id, etag, primary_key, secondary_key, status)
  namewithoutparameters: update_device_with_sas
  summary: Updates a device identity on IoTHub using SAS authentication.
  syntax:
    content: update_device_with_sas(device_id, etag, primary_key, secondary_key, status)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    - description: Primary authentication key.
      id: primary_key
      isRequired: true
      type:
      - str
    - description: Secondary authentication key.
      id: secondary_key
      isRequired: true
      type:
      - str
    - description: 'Initital state of the created device.

        (Possible values: "enabled" or "disabled").'
      id: status
      isRequired: true
      type:
      - str
    return:
      description: The updated Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_sas
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_x509
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_device_with_x509(device_id, etag, primary_thumbprint, secondary_thumbprint,
    status)
  namewithoutparameters: update_device_with_x509
  summary: Updates a device identity on IoTHub using X509 authentication.
  syntax:
    content: update_device_with_x509(device_id, etag, primary_thumbprint, secondary_thumbprint,
      status)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    - description: Primary X509 thumbprint.
      id: primary_thumbprint
      isRequired: true
      type:
      - str
    - description: Secondary X509 thumbprint.
      id: secondary_thumbprint
      isRequired: true
      type:
      - str
    - description: 'Initital state of the created device.

        (Possible values: "enabled" or "disabled").'
      id: status
      isRequired: true
      type:
      - str
    return:
      description: The updated Device object containing the created device.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_x509
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_module_twin(device_id, module_id, module_twin, etag)
  namewithoutparameters: update_module_twin
  summary: Updates tags and desired properties of a module twin.
  syntax:
    content: update_module_twin(device_id, module_id, module_twin, etag)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The twin info of the module.
      id: module_twin
      isRequired: true
      type:
      - Twin
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_twin
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_certificate_authority
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_module_with_certificate_authority(device_id, module_id, managed_by,
    etag)
  namewithoutparameters: update_module_with_certificate_authority
  summary: Updates a module identity for a device on IoTHub using certificate authority.
  syntax:
    content: update_module_with_certificate_authority(device_id, module_id, managed_by,
      etag)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    return:
      description: The updated Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_certificate_authority
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_sas
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_module_with_sas(device_id, module_id, managed_by, etag, primary_key,
    secondary_key)
  namewithoutparameters: update_module_with_sas
  summary: Updates a module identity for a device on IoTHub using SAS authentication.
  syntax:
    content: update_module_with_sas(device_id, module_id, managed_by, etag, primary_key,
      secondary_key)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    - description: Primary authentication key.
      id: primary_key
      isRequired: true
      type:
      - str
    - description: Secondary authentication key.
      id: secondary_key
      isRequired: true
      type:
      - str
    return:
      description: The updated Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_sas
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_x509
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_module_with_x509(device_id, module_id, managed_by, etag, primary_thumbprint,
    secondary_thumbprint)
  namewithoutparameters: update_module_with_x509
  summary: Updates a module identity for a device on IoTHub using X509 authentication.
  syntax:
    content: update_module_with_x509(device_id, module_id, managed_by, etag, primary_thumbprint,
      secondary_thumbprint)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The name (Id) of the module.
      id: module_id
      isRequired: true
      type:
      - str
    - description: The name of the manager device (edge).
      id: managed_by
      isRequired: true
      type:
      - str
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    - description: Primary X509 thumbprint.
      id: primary_thumbprint
      isRequired: true
      type:
      - str
    - description: Secondary X509 thumbprint.
      id: secondary_thumbprint
      isRequired: true
      type:
      - str
    return:
      description: The updated Module object containing the created module.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_x509
- class: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_twin
  langs:
  - python
  module: azure.iot.hub.iothub_registry_manager
  name: update_twin(device_id, device_twin, etag)
  namewithoutparameters: update_twin
  summary: Updates tags and desired properties of a device twin.
  syntax:
    content: update_twin(device_id, device_twin, etag)
    parameters:
    - description: The name (Id) of the device.
      id: device_id
      isRequired: true
      type:
      - str
    - description: The twin info of the device.
      id: device_twin
      isRequired: true
      type:
      - Twin
    - description: The etag (if_match) value to use for the update operation.
      id: etag
      isRequired: true
      type:
      - str
    return:
      description: The Twin object.
  type: method
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_twin
references:
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.bulk_create_or_update_devices
  isExternal: false
  name: bulk_create_or_update_devices(devices)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.bulk_create_or_update_devices
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_certificate_authority
  isExternal: false
  name: create_device_with_certificate_authority(device_id, status, iot_edge=False)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_certificate_authority
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_sas
  isExternal: false
  name: create_device_with_sas(device_id, primary_key, secondary_key, status, iot_edge=False)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_sas
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_x509
  isExternal: false
  name: create_device_with_x509(device_id, primary_thumbprint, secondary_thumbprint,
    status, iot_edge=False)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_device_with_x509
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_certificate_authority
  isExternal: false
  name: create_module_with_certificate_authority(device_id, module_id, managed_by)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_certificate_authority
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_sas
  isExternal: false
  name: create_module_with_sas(device_id, module_id, managed_by, primary_key, secondary_key)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_sas
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_x509
  isExternal: false
  name: create_module_with_x509(device_id, module_id, managed_by, primary_thumbprint,
    secondary_thumbprint)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.create_module_with_x509
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_device
  isExternal: false
  name: delete_device(device_id, etag=None)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_device
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_module
  isExternal: false
  name: delete_module(device_id, module_id, etag=None)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.delete_module
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device
  isExternal: false
  name: get_device(device_id)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device_registry_statistics
  isExternal: false
  name: get_device_registry_statistics()
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_device_registry_statistics
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_devices
  isExternal: false
  name: get_devices(max_number_of_devices=None)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_devices
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module
  isExternal: false
  name: get_module(device_id, module_id)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module_twin
  isExternal: false
  name: get_module_twin(device_id, module_id)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_module_twin
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_modules
  isExternal: false
  name: get_modules(device_id)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_modules
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_service_statistics
  isExternal: false
  name: get_service_statistics()
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_service_statistics
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_twin
  isExternal: false
  name: get_twin(device_id)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.get_twin
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_method
  isExternal: false
  name: invoke_device_method(device_id, direct_method_request)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_method
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_module_method
  isExternal: false
  name: invoke_device_module_method(device_id, module_id, direct_method_request)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.invoke_device_module_method
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.query_iot_hub
  isExternal: false
  name: query_iot_hub(query_specification, continuation_token=None, max_item_count=None)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.query_iot_hub
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_module_twin
  isExternal: false
  name: replace_module_twin(device_id, module_id, module_twin)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_module_twin
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_twin
  isExternal: false
  name: replace_twin(device_id, device_twin)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.replace_twin
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.send_c2d_message
  isExternal: false
  name: send_c2d_message(device_id, message, properties={})
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.send_c2d_message
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_certificate_authority
  isExternal: false
  name: update_device_with_certificate_authority(device_id, etag, status)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_certificate_authority
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_sas
  isExternal: false
  name: update_device_with_sas(device_id, etag, primary_key, secondary_key, status)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_sas
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_x509
  isExternal: false
  name: update_device_with_x509(device_id, etag, primary_thumbprint, secondary_thumbprint,
    status)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_device_with_x509
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_twin
  isExternal: false
  name: update_module_twin(device_id, module_id, module_twin, etag)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_twin
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_certificate_authority
  isExternal: false
  name: update_module_with_certificate_authority(device_id, module_id, managed_by,
    etag)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_certificate_authority
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_sas
  isExternal: false
  name: update_module_with_sas(device_id, module_id, managed_by, etag, primary_key,
    secondary_key)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_sas
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_x509
  isExternal: false
  name: update_module_with_x509(device_id, module_id, managed_by, etag, primary_thumbprint,
    secondary_thumbprint)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_module_with_x509
- fullName: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_twin
  isExternal: false
  name: update_twin(device_id, device_twin, etag)
  parent: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager
  uid: azure.iot.hub.iothub_registry_manager.IoTHubRegistryManager.update_twin
- fullName: list[ExportImportDevice]
  name: list[ExportImportDevice]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: ExportImportDevice
    name: ExportImportDevice
    uid: ExportImportDevice
  - fullName: ']'
    name: ']'
  uid: list[ExportImportDevice]
