### YamlMime:PythonClass
uid: azure.ai.ml.entities.ResourceConfiguration
name: ResourceConfiguration
fullName: azure.ai.ml.entities.ResourceConfiguration
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._mixins.RestTranslatableMixin
- azure.ai.ml.entities._mixins.DictMixin
summary: 'Resource configuration for a job.


  This class should not be instantiated directly. Instead, use its subclasses.'
constructor:
  syntax: 'ResourceConfiguration(*, instance_count: int | None = None, instance_type:
    str | None = None, properties: Dict[str, Any] | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: instance_count
    description: The number of instances to use for the job.
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: instance_type
    description: The type of instance to use for the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: properties
    description: The resource's property dictionary.
    types:
    - <xref:typing.Optional>[<xref:dict>[<xref:str>, <xref:typing.Any>]]
methods:
- uid: azure.ai.ml.entities.ResourceConfiguration.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.ResourceConfiguration.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.entities.ResourceConfiguration.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.entities.ResourceConfiguration.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.entities.ResourceConfiguration.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.ResourceConfiguration.values
  name: values
  signature: values() -> list
