### YamlMime:PythonClass
uid: azure.ai.ml.entities.ServerlessEndpoint
name: ServerlessEndpoint
fullName: azure.ai.ml.entities.ServerlessEndpoint
module: azure.ai.ml.entities
summary: "> [!NOTE]\n> This is an experimental class, and may change at any time.\
  \ Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)\
  \ for more information.\n>\n\n>Serverless Endpoint Definition.\n\n   Readonly variables\
  \ are only populated by the server, and will be ignored when sending a request.\n\
  \n   All required parameters must be populated in order to send to server.\n\n \
  \  ivar name:\n      The deployment name. Required.\n\n   vartype name:\n      str\n\
  \n   ivar auth_mode:\n      Authentication mode of the endpoint.\n\n   vartype auth_mode:\n\
  \      str\n\n   ivar model_id:\n      The id of the model to deploy. Required.\n\
  \n   vartype model_id:\n      str\n\n   ivar location:\n      Location in which\
  \ to create endpoint.\n\n   vartype location:\n      str\n\n   ivar provisioning_state:\n\
  \      Provisioning state of the endpoint. Possible values are: \"creating\",\n\
  \      \"deleting\", \"succeeded\", \"failed\", \"updating\", and \"canceled\".\n\
  \n   vartype provisioning_state:\n      str\n\n   ivar tags:\n      Tags for the\
  \ endpoint.\n\n   vartype tags:\n      dict[str, str]\n\n   ivar properties:\n \
  \     Properties of the endpoint.\n\n   vartype properties:\n      dict[str, str]\n\
  \n   ivar description:\n      Descripton of the endpoint.\n\n   vartype description:\n\
  \      str\n\n   ivar scoring_uri:\n      Scoring uri of the endpoint.\n\n   vartype\
  \ scoring_uri:\n      str\n\n   ivar id:\n      ARM resource id of the endpoint.\n\
  \n   vartype id:\n      str\n\n   ivar headers:\n      Headers required to hit the\
  \ endpoint.\n\n   vartype id:\n      dict[str, str]\n\n   ivar system_data:\n  \
  \    System data of the endpoint.\n\n   vartype system_data:\n      ~azure.ai.ml.entities.SystemData"
constructor:
  syntax: 'ServerlessEndpoint(*args: Any, **kwargs: Any)'
methods:
- uid: azure.ai.ml.entities.ServerlessEndpoint.as_dict
  name: as_dict
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    defaultValue: 'False'
- uid: azure.ai.ml.entities.ServerlessEndpoint.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.ml.entities.ServerlessEndpoint.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.ml.entities.ServerlessEndpoint.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.ServerlessEndpoint.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.ml.entities.ServerlessEndpoint.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.ml.entities.ServerlessEndpoint.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.ml.entities.ServerlessEndpoint.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.ml.entities.ServerlessEndpoint.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.ml.entities.ServerlessEndpoint.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.ml.entities.ServerlessEndpoint.auth_mode
  name: auth_mode
  summary: '"key", "aad".

    Defaults to "key" if not given.'
  signature: 'auth_mode: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.description
  name: description
  summary: Descripton of the endpoint.
  signature: 'description: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.headers
  name: headers
  summary: Headers required to hit the endpoint.
  signature: 'headers: Dict[str, str] | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.id
  name: id
  summary: ARM resource id of the endpoint.
  signature: 'id: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.location
  name: location
  summary: Location in which to create endpoint.
  signature: 'location: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.model_id
  name: model_id
  summary: The id of the model to deploy. Required.
  signature: 'model_id: str'
- uid: azure.ai.ml.entities.ServerlessEndpoint.name
  name: name
  summary: The deployment name. Required.
  signature: 'name: str'
- uid: azure.ai.ml.entities.ServerlessEndpoint.properties
  name: properties
  summary: Properties of the endpoint.
  signature: 'properties: Dict[str, str] | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.provisioning_state
  name: provisioning_state
  summary: '"creating", "deleting",

    "succeeded", "failed", "updating", and "canceled".'
  signature: 'provisioning_state: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.scoring_uri
  name: scoring_uri
  summary: Scoring uri of the endpoint.
  signature: 'scoring_uri: str | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.system_data
  name: system_data
  summary: System data of the endpoint.
  signature: 'system_data: SystemData | None'
- uid: azure.ai.ml.entities.ServerlessEndpoint.tags
  name: tags
  summary: Tags for the endpoint.
  signature: 'tags: Dict[str, str] | None'
