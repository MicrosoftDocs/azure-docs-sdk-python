### YamlMime:PythonClass
uid: azure.ai.ml.entities.Command
name: Command
fullName: azure.ai.ml.entities.Command
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._builders.base_node.BaseNode
- azure.ai.ml.entities._job.pipeline._io.mixin.NodeWithGroupInputMixin
summary: 'Base class for command node, used for command component version consumption.


  You should not instantiate this class directly. Instead, you should create it using
  the builder function: command().'
constructor:
  syntax: 'Command(*, component: str | CommandComponent, compute: str | None = None,
    inputs: Dict[str, Input | str | bool | int | float | Enum] | None = None, outputs:
    Dict[str, str | Output] | None = None, limits: CommandJobLimits | None = None,
    identity: Dict | ManagedIdentityConfiguration | AmlTokenConfiguration | UserIdentityConfiguration
    | None = None, distribution: Dict | MpiDistribution | TensorFlowDistribution |
    PyTorchDistribution | RayDistribution | DistributionConfiguration | None = None,
    environment: Environment | str | None = None, environment_variables: Dict | None
    = None, resources: JobResourceConfiguration | None = None, services: Dict[str,
    JobService | JupyterLabJobService | SshJobService | TensorBoardJobService | VsCodeJobService]
    | None = None, queue_settings: QueueSettings | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: component
    description: The ID or instance of the command component or job to be run for
      the step.
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.entities.CommandComponent>]
  - name: compute
    description: The compute target the job will run on.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: inputs
    description: A mapping of input names to input data sources used in the job.
    types:
    - <xref:typing.Optional>[<xref:dict>[<xref:str>, <xref:typing.Union>[ <xref:azure.ai.ml.Input>,
      <xref:str>, <xref:bool>, <xref:int>, <xref:float>, <xref:Enum>]]]
  - name: outputs
    description: A mapping of output names to output data sources used in the job.
    types:
    - <xref:typing.Optional>[<xref:dict>[<xref:str>, <xref:typing.Union>[<xref:str>,
      <xref:azure.ai.ml.Output>]]]
  - name: limits
    description: The limits for the command component or job.
    types:
    - <xref:azure.ai.ml.entities.CommandJobLimits>
  - name: identity
    description: The identity that the command job will use while running on compute.
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[ <xref:dict>[<xref:str>, <xref:str>],
      <xref:azure.ai.ml.entities.ManagedIdentityConfiguration>, <xref:azure.ai.ml.entities.AmlTokenConfiguration>,
      <xref:azure.ai.ml.entities.UserIdentityConfiguration>]]
  - name: distribution
    description: The configuration for distributed jobs.
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:dict>, <xref:azure.ai.ml.PyTorchDistribution>,
      <xref:azure.ai.ml.MpiDistribution>, <xref:azure.ai.ml.TensorFlowDistribution>,
      <xref:azure.ai.ml.RayDistribution>]]
  - name: environment
    description: The environment that the job will run in.
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.entities.Environment>]]
  - name: environment_variables
    description: 'A dictionary of environment variable names and values.

      These environment variables are set on the process where the user script is
      being executed.'
    types:
    - <xref:typing.Optional>[<xref:dict>[<xref:str>, <xref:str>]]
  - name: resources
    description: The compute resource configuration for the command.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.JobResourceConfiguration>]
  - name: services
    description: 'The interactive services for the node. This is an experimental parameter,
      and may change at any

      time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
      for more information.'
    types:
    - <xref:typing.Optional>[<xref:dict>[<xref:str>, <xref:typing.Union>[<xref:azure.ai.ml.entities.JobService>,
      <xref:azure.ai.ml.entities.JupyterLabJobService>, <xref:azure.ai.ml.entities.SshJobService>,
      <xref:azure.ai.ml.entities.TensorBoardJobService>, <xref:azure.ai.ml.entities.VsCodeJobService>]]]
  - name: queue_settings
    description: Queue settings for the job.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.QueueSettings>]
methods:
- uid: azure.ai.ml.entities.Command.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.ml.entities.Command.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.ml.entities.Command.dump
  name: dump
  summary: Dumps the job content into a file in YAML format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs: Any) -> None'
  parameters:
  - name: dest
    description: 'The local path or file stream to write the YAML content to.

      If dest is a file path, a new file will be created.

      If dest is an open file, the file will be written to directly.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:PathLike>, <xref:str>, <xref:typing.IO>[<xref:typing.AnyStr>]]
  keywordOnlyParameters:
  - name: kwargs
    description: Additional arguments to pass to the YAML serializer.
    types:
    - <xref:dict>
  exceptions:
  - type: FileExistsError
    description: Raised if dest is a file path and the file already exists.
  - type: IOError
    description: Raised if dest is an open file and the file is not writable.
- uid: azure.ai.ml.entities.Command.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
  parameters:
  - name: type
    isRequired: true
- uid: azure.ai.ml.entities.Command.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Command.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.ml.entities.Command.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.ml.entities.Command.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.ml.entities.Command.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.ml.entities.Command.set_limits
  name: set_limits
  summary: Set limits for Command.
  signature: 'set_limits(*, timeout: int, **kwargs: Any) -> None'
  keywordOnlyParameters:
  - name: timeout
    description: The timeout for the job in seconds.
    types:
    - <xref:int>
  examples:
  - "Setting a timeout limit of 10 seconds on a Command.<!--[!code-python[Main](les\\\
    ml_samples_command_configurations.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_command_configurations.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import Input, Output, command\n\n   command_node = command(\n\
    \       environment=\"AzureML-sklearn-1.0-ubuntu20.04-py38-cpu:33\",\n       command='echo\
    \ \"hello world\"',\n       distribution={\"type\": \"Pytorch\", \"process_count_per_instance\"\
    : 2},\n       inputs={\n           \"training_data\": Input(type=\"uri_folder\"\
    ),\n           \"max_epochs\": 20,\n           \"learning_rate\": 1.8,\n     \
    \      \"learning_rate_schedule\": \"time-based\",\n       },\n       outputs={\"\
    model_output\": Output(type=\"uri_folder\")},\n   )\n\n   command_node.set_limits(timeout=10)\n\
    \n   ````\n"
- uid: azure.ai.ml.entities.Command.set_queue_settings
  name: set_queue_settings
  summary: Set QueueSettings for the job.
  signature: 'set_queue_settings(*, job_tier: str | None = None, priority: str | None
    = None) -> None'
  keywordOnlyParameters:
  - name: job_tier
    description: The job tier. Accepted values are "Spot", "Basic", "Standard", or
      "Premium".
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: priority
    description: The priority of the job on the compute. Defaults to "Medium".
    types:
    - <xref:typing.Optional>[<xref:str>]
  examples:
  - "Configuring queue settings on a Command.<!--[!code-python[Main](les\\ml_samples_command_configurations.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_command_configurations.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import Input, Output, command\n\n   command_node = command(\n\
    \       environment=\"AzureML-sklearn-1.0-ubuntu20.04-py38-cpu:33\",\n       command='echo\
    \ \"hello world\"',\n       distribution={\"type\": \"Pytorch\", \"process_count_per_instance\"\
    : 2},\n       inputs={\n           \"training_data\": Input(type=\"uri_folder\"\
    ),\n           \"max_epochs\": 20,\n           \"learning_rate\": 1.8,\n     \
    \      \"learning_rate_schedule\": \"time-based\",\n       },\n       outputs={\"\
    model_output\": Output(type=\"uri_folder\")},\n   )\n\n   command_node.set_queue_settings(job_tier=\"\
    standard\", priority=\"medium\")\n\n   ````\n"
- uid: azure.ai.ml.entities.Command.set_resources
  name: set_resources
  summary: Set resources for Command.
  signature: 'set_resources(*, instance_type: str | List[str] | None = None, instance_count:
    int | None = None, locations: List[str] | None = None, properties: Dict | None
    = None, docker_args: str | None = None, shm_size: str | None = None, **kwargs:
    Any) -> None'
  keywordOnlyParameters:
  - name: instance_type
    description: 'The type of compute instance to run the job on. If not specified,
      the job will run on

      the default compute target.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:typing.List>[<xref:str>]]]
  - name: instance_count
    description: 'The number of instances to run the job on. If not specified, the
      job will run on a

      single instance.'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: locations
    description: 'The list of locations where the job will run. If not specified,
      the job will run on the

      default compute target.'
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:str>]]
  - name: properties
    description: The properties of the job.
    types:
    - <xref:typing.Optional>[<xref:dict>]
  - name: docker_args
    description: The Docker arguments for the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: shm_size
    description: 'The size of the docker container''s shared memory block. This should
      be in the

      format of (number)(unit) where the number has to be greater than 0 and the unit
      can be one of

      b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).'
    types:
    - <xref:typing.Optional>[<xref:str>]
  examples:
  - "Setting resources on a Command.<!--[!code-python[Main](les\\ml_samples_command_configurations.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_command_configurations.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import Input, Output, command\n\n   command_node = command(\n\
    \       environment=\"AzureML-sklearn-1.0-ubuntu20.04-py38-cpu:33\",\n       command='echo\
    \ \"hello world\"',\n       distribution={\"type\": \"Pytorch\", \"process_count_per_instance\"\
    : 2},\n       inputs={\n           \"training_data\": Input(type=\"uri_folder\"\
    ),\n           \"max_epochs\": 20,\n           \"learning_rate\": 1.8,\n     \
    \      \"learning_rate_schedule\": \"time-based\",\n       },\n       outputs={\"\
    model_output\": Output(type=\"uri_folder\")},\n   )\n\n   command_node.set_resources(\n\
    \       instance_count=1,\n       instance_type=\"STANDARD_D2_v2\",\n       properties={\"\
    key\": \"new_val\"},\n       shm_size=\"3g\",\n   )\n\n   ````\n"
- uid: azure.ai.ml.entities.Command.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Command.sweep
  name: sweep
  summary: 'Turns the command into a sweep node with extra sweep run setting. The
    command component

    in the current command node will be used as its trial component. A command node
    can sweep

    multiple times, and the generated sweep node will share the same trial component.'
  signature: 'sweep(*, primary_metric: str, goal: str, sampling_algorithm: str = ''random'',
    compute: str | None = None, max_concurrent_trials: int | None = None, max_total_trials:
    int | None = None, timeout: int | None = None, trial_timeout: int | None = None,
    early_termination_policy: str | EarlyTerminationPolicy | None = None, search_space:
    Dict[str, Choice | LogNormal | LogUniform | Normal | QLogNormal | QLogUniform
    | QNormal | QUniform | Randint | Uniform] | None = None, identity: ManagedIdentityConfiguration
    | AmlTokenConfiguration | UserIdentityConfiguration | None = None, queue_settings:
    QueueSettings | None = None, job_tier: str | None = None, priority: str | None
    = None) -> Sweep'
  keywordOnlyParameters:
  - name: primary_metric
    description: 'The primary metric of the sweep objective - e.g. AUC (Area Under
      the Curve).

      The metric must be logged while running the trial component.'
    types:
    - <xref:str>
  - name: goal
    description: The goal of the Sweep objective. Accepted values are "minimize" or
      "maximize".
    types:
    - <xref:str>
  - name: sampling_algorithm
    description: 'The sampling algorithm to use inside the search space.

      Acceptable values are "random", "grid", or "bayesian". Defaults to "random".'
    defaultValue: random
    types:
    - <xref:str>
  - name: compute
    description: 'The target compute to run the node on. If not specified, the current
      node''s compute

      will be used.'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: max_total_trials
    description: 'The maximum number of total trials to run. This value will overwrite
      the value in

      CommandJob.limits if specified.'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: max_concurrent_trials
    description: The maximum number of concurrent trials for the Sweep job.
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: timeout
    description: The maximum run duration in seconds, after which the job will be
      cancelled.
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: trial_timeout
    description: The Sweep Job trial timeout value, in seconds.
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: early_termination_policy
    description: 'The early termination policy of the sweep node. Acceptable

      values are "bandit", "median_stopping", or "truncation_selection". Defaults
      to None.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:azure.ai.ml.sweep.BanditPolicy>,
      <xref:azure.ai.ml.sweep.TruncationSelectionPolicy>, <xref:azure.ai.ml.sweep.MedianStoppingPolicy>,
      <xref:str>]]
  - name: identity
    description: The identity that the job will use while running on compute.
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[ <xref:azure.ai.ml.ManagedIdentityConfiguration>,
      <xref:azure.ai.ml.AmlTokenConfiguration>, <xref:azure.ai.ml.UserIdentityConfiguration>]]
  - name: queue_settings
    description: The queue settings for the job.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.QueueSettings>]
  - name: job_tier
    description: '**Experimental** The job tier. Accepted values are "Spot", "Basic",

      "Standard", or "Premium".'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: priority
    description: '**Experimental** The compute priority. Accepted values are "low",

      "medium", and "high".'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: search_space
    isRequired: true
  return:
    description: A Sweep node with the component from current Command node as its
      trial component.
    types:
    - <xref:azure.ai.ml.entities.Sweep>
  examples:
  - "Creating a Sweep node from a Command job.<!--[!code-python[Main](les\\ml_samples_sweep_configurations.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_sweep_configurations.py\", \"\
    xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import command\n\n   job = command(\n       inputs=dict(kernel=\"linear\", penalty=1.0),\n\
    \       compute=cpu_cluster,\n       environment=f\"{job_env.name}:{job_env.version}\"\
    ,\n       code=\"./scripts\",\n       command=\"python scripts/train.py --kernel\
    \ $kernel --penalty $penalty\",\n       experiment_name=\"sklearn-iris-flowers\"\
    ,\n   )\n\n   # we can reuse an existing Command Job as a function that we can\
    \ apply inputs to for the sweep configurations\n   from azure.ai.ml.sweep import\
    \ Uniform\n\n   job_for_sweep = job(\n       kernel=Uniform(min_value=0.0005,\
    \ max_value=0.005),\n       penalty=Uniform(min_value=0.9, max_value=0.99),\n\
    \   )\n\n   from azure.ai.ml.sweep import BanditPolicy\n\n   sweep_job = job_for_sweep.sweep(\n\
    \       sampling_algorithm=\"random\",\n       primary_metric=\"best_val_acc\"\
    ,\n       goal=\"Maximize\",\n       max_total_trials=8,\n       max_concurrent_trials=4,\n\
    \       early_termination_policy=BanditPolicy(slack_factor=0.15, evaluation_interval=1,\
    \ delay_evaluation=10),\n   )\n\n   ````\n"
- uid: azure.ai.ml.entities.Command.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.ml.entities.Command.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.ai.ml.entities.Command.base_path
  name: base_path
  summary: The base path of the resource.
  return:
    description: The base path of the resource.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.code
  name: code
  summary: The source code to run the job.
  return:
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:os.PathLike>]]
- uid: azure.ai.ml.entities.Command.command
  name: command
  summary: Sets the command to be executed.
  return:
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.component
  name: component
  summary: The ID or instance of the command component or job to be run for the step.
  return:
    description: The ID or instance of the command component or job to be run for
      the step.
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.entities.CommandComponent>]
- uid: azure.ai.ml.entities.Command.creation_context
  name: creation_context
  summary: The creation context of the resource.
  return:
    description: The creation metadata for the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.entities.Command.distribution
  name: distribution
  summary: The configuration for the distributed command component or job.
  return:
    description: The configuration for distributed jobs.
    types:
    - <xref:typing.Union>[<xref:azure.ai.ml.PyTorchDistribution>, <xref:azure.ai.ml.MpiDistribution>,
      <xref:azure.ai.ml.TensorFlowDistribution>, <xref:azure.ai.ml.RayDistribution>]
- uid: azure.ai.ml.entities.Command.id
  name: id
  summary: The resource ID.
  return:
    description: The global ID of the resource, an Azure Resource Manager (ARM) ID.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.identity
  name: identity
  summary: The identity that the job will use while running on compute.
  return:
    description: The identity that the job will use while running on compute.
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:azure.ai.ml.ManagedIdentityConfiguration>,
      <xref:azure.ai.ml.AmlTokenConfiguration>, <xref:azure.ai.ml.UserIdentityConfiguration>]]
- uid: azure.ai.ml.entities.Command.inputs
  name: inputs
  summary: Get the inputs for the object.
  return:
    description: A dictionary containing the inputs for the object.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Union>[<xref:azure.ai.ml.Input>,
      <xref:str>, <xref:bool>, <xref:int>, <xref:float>]]
- uid: azure.ai.ml.entities.Command.log_files
  name: log_files
  summary: Job output files.
  return:
    description: The dictionary of log names and URLs.
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.entities.Command.name
  name: name
  summary: Get the name of the node.
  return:
    description: The name of the node.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.outputs
  name: outputs
  summary: Get the outputs of the object.
  return:
    description: A dictionary containing the outputs for the object.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.Output>]]
- uid: azure.ai.ml.entities.Command.parameters
  name: parameters
  summary: MLFlow parameters to be logged during the job.
  return:
    description: The MLFlow parameters to be logged during the job.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
- uid: azure.ai.ml.entities.Command.queue_settings
  name: queue_settings
  summary: The queue settings for the command component or job.
  return:
    description: The queue settings for the command component or job.
    types:
    - <xref:azure.ai.ml.entities.QueueSettings>
- uid: azure.ai.ml.entities.Command.resources
  name: resources
  summary: The compute resource configuration for the command component or job.
  return:
    types:
    - <xref:azure.ai.ml.entities.JobResourceConfiguration>
- uid: azure.ai.ml.entities.Command.services
  name: services
  summary: 'The interactive services for the node.


    This is an experimental parameter, and may change at any time.

    Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
    for more information.'
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:typing.Union>[<xref:azure.ai.ml.entities.JobService>,
      <xref:azure.ai.ml.entities.JupyterLabJobService>, <xref:azure.ai.ml.entities.SshJobService>,
      <xref:azure.ai.ml.entities.TensorBoardJobService>, <xref:azure.ai.ml.entities.VsCodeJobService>]]
- uid: azure.ai.ml.entities.Command.status
  name: status
  summary: "The status of the job.\n\nCommon values returned include \"Running\",\
    \ \"Completed\", and \"Failed\". All possible values are:\n\n   * NotStarted -\
    \ This is a temporary state that client-side Run objects are in before cloud submission.\
    \ \n\n   * Starting - The Run has started being processed in the cloud. The caller\
    \ has a run ID at this point. \n\n   * Provisioning - On-demand compute is being\
    \ created for a given job submission. \n\n   * Preparing - The run environment\
    \ is being prepared and is in one of two stages:\n\n        * Docker image build\
    \ \n\n        * conda environment setup \n\n   * Queued - The job is queued on\
    \ the compute target. For example, in BatchAI, the job is in a queued state\n\n\
    \        while waiting for all the requested nodes to be ready.\n\n   * Running\
    \ - The job has started to run on the compute target. \n\n   * Finalizing - User\
    \ code execution has completed, and the run is in post-processing stages. \n\n\
    \   * CancelRequested - Cancellation has been requested for the job. \n\n   *\
    \ Completed - The run has completed successfully. This includes both the user\
    \ code execution and run\n\n        post-processing stages.\n\n   * Failed - The\
    \ run failed. Usually the Error property on a run will provide details as to why.\
    \ \n\n   * Canceled - Follows a cancellation request and indicates that the run\
    \ is now successfully cancelled. \n\n   * NotResponding - For runs that have Heartbeats\
    \ enabled, no heartbeat has been recently sent."
  return:
    description: Status of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: The URL to the job details page.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.type
  name: type
  summary: The type of the job.
  return:
    description: The type of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
