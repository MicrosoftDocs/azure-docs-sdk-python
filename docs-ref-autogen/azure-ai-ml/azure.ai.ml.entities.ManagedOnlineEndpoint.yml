### YamlMime:PythonClass
uid: azure.ai.ml.entities.ManagedOnlineEndpoint
name: ManagedOnlineEndpoint
fullName: azure.ai.ml.entities.ManagedOnlineEndpoint
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._endpoint.online_endpoint.OnlineEndpoint
summary: Managed Online endpoint entity.
constructor:
  syntax: 'ManagedOnlineEndpoint(*, name: str | None = None, tags: Dict[str, Any]
    | None = None, properties: Dict[str, Any] | None = None, auth_mode: str = ''key'',
    description: str | None = None, location: str | None = None, traffic: Dict[str,
    int] | None = None, mirror_traffic: Dict[str, int] | None = None, identity: IdentityConfiguration
    | None = None, kind: str | None = None, public_network_access: str | None = None,
    **kwargs)'
  parameters:
  - name: name
    description: Name of the resource, defaults to None
  - name: tags
    description: Tag dictionary. Tags can be added, removed, and updated, defaults
      to None
  - name: properties
    description: The asset property dictionary, defaults to None
  - name: auth_mode
    description: 'Possible values include: "aml_token", "key", defaults to KEY'
  - name: description
    description: Description of the inference endpoint, defaults to None
  - name: location
    description: Location of the resource, defaults to None
  - name: traffic
    description: Traffic rules on how the traffic will be routed across deployments,
      defaults to None
  - name: mirror_traffic
    description: Duplicated live traffic used to inference a single deployment, defaults
      to None
  - name: identity
    description: Identity Configuration, defaults to SystemAssigned
  - name: kind
    description: 'Kind of the resource, we have two kinds: K8s and Managed online
      endpoints, defaults to None.'
  - name: public_network_access
    description: 'Whether to allow public endpoint connectivity, defaults to None

      Allowed values are: "enabled", "disabled"'
methods:
- uid: azure.ai.ml.entities.ManagedOnlineEndpoint.dump
  name: dump
  summary: Dump the object content into a file.
  signature: 'dump(dest: str | PathLike | IO | None = None, **kwargs) -> Dict[str,
    Any]'
  parameters:
  - name: dest
    description: 'The destination to receive this object''s data.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    defaultValue: None
    types:
    - <xref:typing.Union>[<xref:azure.ai.ml.entities.str>, <xref:os.PathLike>, <xref:typing.IO>[<xref:typing.AnyStr>]]
