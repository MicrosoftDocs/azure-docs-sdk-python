### YamlMime:PythonClass
uid: azure.ai.ml.operations.OnlineEndpointOperations
name: OnlineEndpointOperations
fullName: azure.ai.ml.operations.OnlineEndpointOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'OnlineEndpointOperations.


  You should not instantiate this class directly. Instead, you should

  create an MLClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'OnlineEndpointOperations(operation_scope: OperationScope, operation_config:
    OperationConfig, service_client_02_2022_preview: AzureMachineLearningWorkspaces,
    all_operations: OperationsContainer, local_endpoint_helper: _LocalEndpointHelper,
    credentials: TokenCredential | None = None, **kwargs: Dict)'
  parameters:
  - name: operation_scope
    isRequired: true
  - name: operation_config
    isRequired: true
  - name: service_client_02_2022_preview
    isRequired: true
  - name: all_operations
    isRequired: true
  - name: local_endpoint_helper
    isRequired: true
  - name: credentials
    defaultValue: None
methods:
- uid: azure.ai.ml.operations.OnlineEndpointOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update an endpoint.
  signature: 'begin_create_or_update(endpoint: OnlineEndpoint, *, local: bool = False)
    -> LROPoller[OnlineEndpoint]'
  parameters:
  - name: endpoint
    description: The endpoint entity.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.OnlineEndpoint>
  keywordOnlyParameters:
  - name: local
    description: Whether to interact with the endpoint in local Docker environment.
      Defaults to False.
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status if remote, else returns None
      if local.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.OnlineEndpoint>]
  exceptions:
  - type: azure.ai.ml.exceptions.ValidationException
    description: 'Raised if OnlineEndpoint cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.AssetException
    description: 'Raised if OnlineEndpoint assets

      (e.g. Data, Code, Model, Environment) cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.ModelException
    description: 'Raised if OnlineEndpoint model cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.EmptyDirectoryError
    description: Raised if local path provided points to an empty directory.
  - type: azure.ai.ml.exceptions.LocalEndpointNotFoundError
    description: Raised if local endpoint resource does not exist.
- uid: azure.ai.ml.operations.OnlineEndpointOperations.begin_delete
  name: begin_delete
  summary: Delete an Online Endpoint.
  signature: 'begin_delete(name: str | None = None, *, local: bool = False) -> LROPoller[None]'
  parameters:
  - name: name
    description: Name of the endpoint.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: local
    description: Whether to interact with the endpoint in local Docker environment.
      Defaults to False.
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status if remote, else returns None
      if local.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.ai.ml.exceptions.LocalEndpointNotFoundError
    description: Raised if local endpoint resource does not exist.
- uid: azure.ai.ml.operations.OnlineEndpointOperations.begin_regenerate_keys
  name: begin_regenerate_keys
  summary: Regenerate keys for endpoint.
  signature: 'begin_regenerate_keys(name: str, *, key_type: str = ''primary'') ->
    LROPoller[None]'
  parameters:
  - name: name
    description: The endpoint name.
    isRequired: true
    types:
    - <xref:<xref:The endpoint type. Defaults to ONLINE_ENDPOINT_TYPE.>>
  keywordOnlyParameters:
  - name: key_type
    description: One of "primary", "secondary". Defaults to "primary".
    types:
    - <xref:str>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.OnlineEndpointOperations.get
  name: get
  summary: Get a Endpoint resource.
  signature: 'get(name: str, *, local: bool = False) -> OnlineEndpoint'
  parameters:
  - name: name
    description: Name of the endpoint.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: local
    description: Indicates whether to interact with endpoints in local Docker environment.
      Defaults to False.
    types:
    - <xref:typing.Optional>[<xref:bool>]
  return:
    description: Endpoint object retrieved from the service.
    types:
    - <xref:azure.ai.ml.entities.OnlineEndpoint>
  exceptions:
  - type: azure.ai.ml.exceptions.LocalEndpointNotFoundError
    description: Raised if local endpoint resource does not exist.
- uid: azure.ai.ml.operations.OnlineEndpointOperations.get_keys
  name: get_keys
  summary: Get the auth credentials.
  signature: 'get_keys(name: str) -> EndpointAuthKeys | EndpointAuthToken'
  parameters:
  - name: name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Depending on the auth mode in the endpoint, returns either keys or
      token
    types:
    - <xref:typing.Union>[<xref:azure.ai.ml.entities.EndpointAuthKeys>, <xref:azure.ai.ml.entities.EndpointAuthToken>]
- uid: azure.ai.ml.operations.OnlineEndpointOperations.invoke
  name: invoke
  summary: Invokes the endpoint with the provided payload.
  signature: 'invoke(endpoint_name: str, *, request_file: str | None = None, deployment_name:
    str | None = None, input_data: str | Data | None = None, params_override: Any
    = None, local: bool = False, **kwargs: Any) -> str'
  parameters:
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: request_file
    description: File containing the request payload. This is only valid for online
      endpoint.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: deployment_name
    description: 'Name of a specific deployment to invoke. This is optional.

      By default requests are routed to any of the deployments according to the traffic
      rules.'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: input_data
    description: To use a pre-registered data asset, pass str in format
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.entities.Data>]]
  - name: local
    description: Indicates whether to interact with endpoints in local Docker environment.
      Defaults to False.
    types:
    - <xref:typing.Optional>[<xref:bool>]
  return:
    description: Prediction output for online endpoint.
    types:
    - <xref:str>
  exceptions:
  - type: azure.ai.ml.exceptions.LocalEndpointNotFoundError
    description: Raised if local endpoint resource does not exist.
  - type: azure.ai.ml.exceptions.MultipleLocalDeploymentsFoundError
    description: 'Raised if there are multiple deployments

      and no deployment_name is specified.'
  - type: azure.ai.ml.exceptions.InvalidLocalEndpointError
    description: Raised if local endpoint is None.
- uid: azure.ai.ml.operations.OnlineEndpointOperations.list
  name: list
  summary: List endpoints of the workspace.
  signature: 'list(*, local: bool = False) -> ItemPaged[OnlineEndpoint]'
  keywordOnlyParameters:
  - name: local
    description: '(Optional) Flag to indicate whether to interact with endpoints in
      local Docker environment.

      Default: False'
  return:
    description: A list of endpoints
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.OnlineEndpoint>]
