### YamlMime:PythonPackage
uid: azure.ai.ml.automl
name: automl
fullName: azure.ai.ml.automl
summary: 'Contains automated machine learning classes for Azure Machine Learning SDKv2.



  Main areas include managing AutoML tasks.'
type: import
functions:
- uid: azure.ai.ml.automl.classification
  name: classification
  summary: 'Function to create a ClassificationJob.


    A classification job is used to train a model that best predict the class of a
    data sample.

    Various models are trained using the training data. The model with the best performance
    on the validation data

    based on the primary metric is selected as the final model.'
  signature: 'classification(*, training_data: Input, target_column_name: str, primary_metric:
    str | None = None, enable_model_explainability: bool | None = None, weight_column_name:
    str | None = None, validation_data: Input | None = None, validation_data_size:
    float | None = None, n_cross_validations: str | int | None = None, cv_split_column_names:
    List[str] | None = None, test_data: Input | None = None, test_data_size: float
    | None = None, **kwargs) -> ClassificationJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a label column (optionally a sample
      weights column).'
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data`, `validation_data` and `test_data`
      parameters'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: accuracy, AUC_weighted, norm_macro_recall, average_precision_score_weighted,

      and precision_score_weighted

      Defaults to accuracy'
  - name: enable_model_explainability
    description: 'Whether to enable explaining the best AutoML model at the end of
      all AutoML

      training iterations.

      The default is None. For more information, see

      [Interpretability: model explanations in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-machine-learning-interpretability-automl).'
    types:
    - <xref:bool>
  - name: weight_column_name
    description: 'The name of the sample weight column. Automated ML supports a weighted
      column

      as an input, causing rows in the data to be weighted up or down.

      If the input data is from a pandas.DataFrame which doesn''t have column names,

      column indices can be used instead, expressed as integers.


      This parameter is applicable to `training_data` and `validation_data` parameters'
    types:
    - <xref:str>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and label column (optionally a sample
      weights column).


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: validation_data_size
    description: 'What fraction of the data to hold out for validation when user validation
      data

      is not specified. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:float>
  - name: n_cross_validations
    description: 'How many cross validations to perform when user validation data
      is not specified.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>]
  - name: cv_split_column_names
    description: 'List of names of the columns that contain custom cross validation
      split.

      Each of the CV split columns represents one CV split where each row are either
      marked

      1 for training or 0 for validation.


      Defaults to None'
    types:
    - <xref:typing.List>[<xref:str>]
  - name: test_data
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      The test data to be used for a test run that will automatically be started after

      model training is complete. The test run will get predictions using the best
      model

      and will compute metrics given these predictions.


      If this parameter or the `test_data_size` parameter are not specified then

      no test run will be executed automatically after model training is completed.

      Test data should contain both features and label column.

      If `test_data` is specified then the `target_column_name` parameter must be
      specified.


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: test_data_size
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      What fraction of the training data to hold out for test data for a test run
      that will

      automatically be started after model training is complete. The test run will
      get

      predictions using the best model and will compute metrics given these predictions.


      This should be between 0.0 and 1.0 non-inclusive.

      If `test_data_size` is specified at the same time as `validation_data_size`,

      then the test data is split from `training_data` before the validation data
      is split.

      For example, if `validation_data_size=0.1`, `test_data_size=0.1` and the original
      training data has

      1000 rows, then the test data will have 100 rows, the validation data will contain
      90 rows and the

      training data will have 810 rows.


      For regression based tasks, random sampling is used. For classification tasks,
      stratified sampling

      is used. Forecasting does not currently support specifying a test dataset using
      a train/test split.


      If this parameter or the `test_data` parameter are not specified then

      no test run will be executed automatically after model training is completed.


      Defaults to None'
    types:
    - <xref:float>
  return:
    description: A job object that can be submitted to an Azure ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.ClassificationJob>
- uid: azure.ai.ml.automl.forecasting
  name: forecasting
  summary: 'Function to create a Forecasting job.


    A forecasting task is used to predict target values for a future time period based
    on the historical data.

    Various models are trained using the training data. The model with the best performance
    on the validation data

    based on the primary metric is selected as the final model.'
  signature: 'forecasting(*, training_data: Input, target_column_name: str, primary_metric:
    str | None = None, enable_model_explainability: bool | None = None, weight_column_name:
    str | None = None, validation_data: Input | None = None, validation_data_size:
    float | None = None, n_cross_validations: str | int | None = None, cv_split_column_names:
    List[str] | None = None, test_data: Input | None = None, test_data_size: float
    | None = None, forecasting_settings: ForecastingSettings | None = None, **kwargs)
    -> ForecastingJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a label column (optionally a sample
      weights column).'
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data`, `validation_data` and `test_data`
      parameters'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: r2_score, normalized_mean_absolute_error, normalized_root_mean_squared_error

      Defaults to normalized_root_mean_squared_error'
  - name: enable_model_explainability
    description: 'Whether to enable explaining the best AutoML model at the end of
      all AutoML

      training iterations.

      The default is None. For more information, see

      [Interpretability: model explanations in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-machine-learning-interpretability-automl).'
    types:
    - <xref:bool>
  - name: weight_column_name
    description: 'The name of the sample weight column. Automated ML supports a weighted
      column

      as an input, causing rows in the data to be weighted up or down.

      If the input data is from a pandas.DataFrame which doesn''t have column names,

      column indices can be used instead, expressed as integers.


      This parameter is applicable to `training_data` and `validation_data` parameters'
    types:
    - <xref:str>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and label column (optionally a sample
      weights column).


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: validation_data_size
    description: 'What fraction of the data to hold out for validation when user validation
      data

      is not specified. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:float>
  - name: n_cross_validations
    description: 'How many cross validations to perform when user validation data
      is not specified.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>]
  - name: cv_split_column_names
    description: 'List of names of the columns that contain custom cross validation
      split.

      Each of the CV split columns represents one CV split where each row are either
      marked

      1 for training or 0 for validation.


      Defaults to None'
    types:
    - <xref:typing.List>[<xref:str>]
  - name: test_data
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      The test data to be used for a test run that will automatically be started after

      model training is complete. The test run will get predictions using the best
      model

      and will compute metrics given these predictions.


      If this parameter or the `test_data_size` parameter are not specified then

      no test run will be executed automatically after model training is completed.

      Test data should contain both features and label column.

      If `test_data` is specified then the `target_column_name` parameter must be
      specified.


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: test_data_size
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      What fraction of the training data to hold out for test data for a test run
      that will

      automatically be started after model training is complete. The test run will
      get

      predictions using the best model and will compute metrics given these predictions.


      This should be between 0.0 and 1.0 non-inclusive.

      If `test_data_size` is specified at the same time as `validation_data_size`,

      then the test data is split from `training_data` before the validation data
      is split.

      For example, if `validation_data_size=0.1`, `test_data_size=0.1` and the original
      training data

      has 1000 rows, then the test data will have 100 rows, the validation data will
      contain 90 rows

      and the training data will have 810 rows.


      For regression based tasks, random sampling is used. For classification

      tasks, stratified sampling is used. Forecasting does not currently

      support specifying a test dataset using a train/test split.


      If this parameter or the `test_data` parameter are not specified then

      no test run will be executed automatically after model training is completed.


      Defaults to None'
    types:
    - <xref:float>
  - name: forecasting_settings
    description: The settings for the forecasting task
    types:
    - <xref:azure.ai.ml.automl.ForecastingSettings>
  return:
    description: A job object that can be submitted to an Azure ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.ForecastingJob>
- uid: azure.ai.ml.automl.image_classification
  name: image_classification
  summary: Creates an object for AutoML Image multi-class Classification job.
  signature: 'image_classification(*, training_data: Input, target_column_name: str,
    primary_metric: str | ClassificationPrimaryMetrics | None = None, validation_data:
    Input | None = None, validation_data_size: float | None = None, **kwargs) -> ImageClassificationJob'
  keywordOnlyParameters:
  - name: training_data
    description: The training data to be used within the experiment.
    types:
    - <xref:azure.ai.ml.entities.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data` and `validation_data` parameters.'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: accuracy, AUC_weighted, norm_macro_recall, average_precision_score_weighted,

      and precision_score_weighted

      Defaults to accuracy.'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.automl.ClassificationPrimaryMetrics>]
  - name: validation_data
    description: The validation data to be used within the experiment.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.Input>]
  - name: validation_data_size
    description: 'What fraction of the data to hold out for validation when user validation
      data

      is not specified. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `validation_data_size`

      to extract validation data out of the specified training data.


      Defaults to .2'
    types:
    - <xref:float>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: Image classification job object that can be submitted to an Azure
      ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.ImageClassificationJob>
  examples:
  - "creating an automl image classification job<!--[!code-python[Main](les\\ml_samples_automl_image.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_image.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import automl, Input\n   from azure.ai.ml.constants import AssetTypes\n   from\
    \ azure.ai.ml.automl import ClassificationMultilabelPrimaryMetrics\n\n   image_classification_job\
    \ = automl.image_classification(\n       experiment_name=\"my_experiment\",\n\
    \       compute=\"my_compute\",\n       training_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./training-mltable-folder\"),\n       validation_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./validation-mltable-folder\"),\n       target_column_name=\"label\"\
    ,\n       primary_metric=ClassificationMultilabelPrimaryMetrics.ACCURACY,\n  \
    \     tags={\"my_custom_tag\": \"My custom value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.image_classification_multilabel
  name: image_classification_multilabel
  summary: Creates an object for AutoML Image multi-label Classification job.
  signature: 'image_classification_multilabel(*, training_data: Input, target_column_name:
    str, primary_metric: str | ClassificationMultilabelPrimaryMetrics | None = None,
    validation_data: Input | None = None, validation_data_size: float | None = None,
    **kwargs) -> ImageClassificationMultilabelJob'
  keywordOnlyParameters:
  - name: training_data
    description: The training data to be used within the experiment.
    types:
    - <xref:azure.ai.ml.entities.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data` and `validation_data` parameters.'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: accuracy, AUC_weighted, norm_macro_recall, average_precision_score_weighted,

      precision_score_weighted, and Iou

      Defaults to Iou.'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.automl.ClassificationMultilabelPrimaryMetrics>]
  - name: validation_data
    description: The validation data to be used within the experiment.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.Input>]
  - name: validation_data_size
    description: 'The fraction of the training data to hold out for validation when
      user does not

      provide the validation data. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `validation_data_size`

      to extract validation data out of the specified training data.


      Defaults to .2'
    types:
    - <xref:float>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: Image multi-label classification job object that can be submitted
      to an Azure ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.ImageClassificationMultilabelJob>
  examples:
  - "creating an automl image multilabel classification job<!--[!code-python[Main](les\\\
    ml_samples_automl_image.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_image.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import automl, Input\n   from azure.ai.ml.constants import\
    \ AssetTypes\n   from azure.ai.ml.automl import ClassificationMultilabelPrimaryMetrics\n\
    \n   image_classification_multilabel_job = automl.image_classification_multilabel(\n\
    \       experiment_name=\"my_experiment\",\n       compute=\"my_compute\",\n \
    \      training_data=Input(type=AssetTypes.MLTABLE, path=\"./training-mltable-folder\"\
    ),\n       validation_data=Input(type=AssetTypes.MLTABLE, path=\"./validation-mltable-folder\"\
    ),\n       target_column_name=\"label\",\n       primary_metric=ClassificationMultilabelPrimaryMetrics.IOU,\n\
    \       tags={\"my_custom_tag\": \"My custom value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.image_instance_segmentation
  name: image_instance_segmentation
  summary: Creates an object for AutoML Image Instance Segmentation job.
  signature: 'image_instance_segmentation(*, training_data: Input, target_column_name:
    str, primary_metric: str | InstanceSegmentationPrimaryMetrics | None = None, validation_data:
    Input | None = None, validation_data_size: float | None = None, **kwargs) -> ImageInstanceSegmentationJob'
  keywordOnlyParameters:
  - name: training_data
    description: The training data to be used within the experiment.
    types:
    - <xref:azure.ai.ml.entities.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data` and `validation_data` parameters.'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: MeanAveragePrecision

      Defaults to MeanAveragePrecision.'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.automl.InstanceSegmentationPrimaryMetrics>]
  - name: validation_data
    description: The validation data to be used within the experiment.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.Input>]
  - name: validation_data_size
    description: 'The fraction of the training data to hold out for validation when
      user does not

      provide the validation data. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `validation_data_size`

      to extract validation data out of the specified training data.


      Defaults to .2'
    types:
    - <xref:float>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: Image instance segmentation job
    types:
    - <xref:azure.ai.ml.automl.ImageInstanceSegmentationJob>
  examples:
  - "creating an automl image instance segmentation job<!--[!code-python[Main](les\\\
    ml_samples_automl_image.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_image.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import automl, Input\n   from azure.ai.ml.constants import\
    \ AssetTypes\n   from azure.ai.ml.automl import InstanceSegmentationPrimaryMetrics\n\
    \n   image_instance_segmentation_job = automl.image_instance_segmentation(\n \
    \      experiment_name=\"my_experiment\",\n       compute=\"my_compute\",\n  \
    \     training_data=Input(type=AssetTypes.MLTABLE, path=\"./training-mltable-folder\"\
    ),\n       validation_data=Input(type=AssetTypes.MLTABLE, path=\"./validation-mltable-folder\"\
    ),\n       target_column_name=\"label\",\n       primary_metric=InstanceSegmentationPrimaryMetrics.MEAN_AVERAGE_PRECISION,\n\
    \       tags={\"my_custom_tag\": \"My custom value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.image_object_detection
  name: image_object_detection
  summary: Creates an object for AutoML Image Object Detection job.
  signature: 'image_object_detection(*, training_data: Input, target_column_name:
    str, primary_metric: str | ObjectDetectionPrimaryMetrics | None = None, validation_data:
    Input | None = None, validation_data_size: float | None = None, **kwargs) -> ImageObjectDetectionJob'
  keywordOnlyParameters:
  - name: training_data
    description: The training data to be used within the experiment.
    types:
    - <xref:azure.ai.ml.entities.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data` and `validation_data` parameters.'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: MeanAveragePrecision

      Defaults to MeanAveragePrecision.'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.automl.ObjectDetectionPrimaryMetrics>]
  - name: validation_data
    description: The validation data to be used within the experiment.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.Input>]
  - name: validation_data_size
    description: 'The fraction of the training data to hold out for validation when
      user does not

      provide the validation data. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `validation_data_size`

      to extract validation data out of the specified training data.


      Defaults to .2'
    types:
    - <xref:float>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: Image object detection job object that can be submitted to an Azure
      ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.ImageObjectDetectionJob>
  examples:
  - "creating an automl image object detection job<!--[!code-python[Main](les\\ml_samples_automl_image.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_image.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import automl, Input\n   from azure.ai.ml.constants import AssetTypes\n   from\
    \ azure.ai.ml.automl import ObjectDetectionPrimaryMetrics\n\n   image_object_detection_job\
    \ = automl.image_object_detection(\n       experiment_name=\"my_experiment\",\n\
    \       compute=\"my_compute\",\n       training_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./training-mltable-folder\"),\n       validation_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./validation-mltable-folder\"),\n       target_column_name=\"label\"\
    ,\n       primary_metric=ObjectDetectionPrimaryMetrics.MEAN_AVERAGE_PRECISION,\n\
    \       tags={\"my_custom_tag\": \"My custom value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.regression
  name: regression
  summary: 'Function to create a Regression Job.


    A regression job is used to train a model to predict continuous values of a target
    variable from a dataset.

    Various models are trained using the training data. The model with the best performance
    on the validation data

    based on the primary metric is selected as the final model.'
  signature: 'regression(*, training_data: Input, target_column_name: str, primary_metric:
    str | None = None, enable_model_explainability: bool | None = None, weight_column_name:
    str | None = None, validation_data: Input | None = None, validation_data_size:
    float | None = None, n_cross_validations: str | int | None = None, cv_split_column_names:
    List[str] | None = None, test_data: Input | None = None, test_data_size: float
    | None = None, **kwargs) -> RegressionJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a label column (optionally a sample
      weights column).'
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: 'The name of the label column.

      This parameter is applicable to `training_data`, `validation_data` and `test_data`
      parameters'
    types:
    - <xref:str>
  - name: primary_metric
    description: 'The metric that Automated Machine Learning will optimize for model
      selection.

      Automated Machine Learning collects more metrics than it can optimize.

      For more information on how metrics are calculated, see

      [https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#primary-metric).


      Acceptable values: spearman_correlation, r2_score, normalized_mean_absolute_error,

      normalized_root_mean_squared_error.

      Defaults to normalized_root_mean_squared_error'
  - name: enable_model_explainability
    description: 'Whether to enable explaining the best AutoML model at the end of
      all AutoML

      training iterations.

      The default is None. For more information, see

      [Interpretability: model explanations in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-machine-learning-interpretability-automl).'
    types:
    - <xref:bool>
  - name: weight_column_name
    description: 'The name of the sample weight column. Automated ML supports a weighted
      column

      as an input, causing rows in the data to be weighted up or down.

      If the input data is from a pandas.DataFrame which doesn''t have column names,

      column indices can be used instead, expressed as integers.


      This parameter is applicable to `training_data` and `validation_data` parameters'
    types:
    - <xref:str>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and label column (optionally a sample
      weights column).


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: validation_data_size
    description: 'What fraction of the data to hold out for validation when user validation
      data

      is not specified. This should be between 0.0 and 1.0 non-inclusive.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:float>
  - name: n_cross_validations
    description: 'How many cross validations to perform when user validation data
      is not specified.


      Specify `validation_data` to provide validation data, otherwise set `n_cross_validations`
      or

      `validation_data_size` to extract validation data out of the specified training
      data.

      For custom cross validation fold, use `cv_split_column_names`.


      For more information, see

      [Configure data splits and cross-validation in automated machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-configure-cross-validation-data-splits).


      Defaults to None'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:int>]
  - name: cv_split_column_names
    description: 'List of names of the columns that contain custom cross validation
      split.

      Each of the CV split columns represents one CV split where each row are either
      marked

      1 for training or 0 for validation.


      Defaults to None'
    types:
    - <xref:typing.List>[<xref:str>]
  - name: test_data
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      The test data to be used for a test run that will automatically be started after

      model training is complete. The test run will get predictions using the best
      model

      and will compute metrics given these predictions.


      If this parameter or the `test_data_size` parameter are not specified then

      no test run will be executed automatically after model training is completed.

      Test data should contain both features and label column.

      If `test_data` is specified then the `target_column_name` parameter must be
      specified.


      Defaults to None'
    types:
    - <xref:azure.ai.ml.Input>
  - name: test_data_size
    description: 'The Model Test feature using test datasets or test data splits is
      a feature in

      Preview state and might change at any time.

      What fraction of the training data to hold out for test data for a test run
      that will

      automatically be started after model training is complete. The test run will
      get

      predictions using the best model and will compute metrics given these predictions.


      This should be between 0.0 and 1.0 non-inclusive.

      If `test_data_size` is specified at the same time as `validation_data_size`,

      then the test data is split from `training_data` before the validation data
      is split.

      For example, if `validation_data_size=0.1`, `test_data_size=0.1` and the original
      training data has

      1000 rows, then the test data will have 100 rows, the validation data will contain
      90 rows

      and the training data will have 810 rows.


      For regression based tasks, random sampling is used. For classification

      tasks, stratified sampling is used. Forecasting does not currently

      support specifying a test dataset using a train/test split.


      If this parameter or the `test_data` parameter are not specified then

      no test run will be executed automatically after model training is completed.


      Defaults to None'
    types:
    - <xref:float>
  return:
    description: A job object that can be submitted to an Azure ML compute for execution.
    types:
    - <xref:azure.ai.ml.automl.RegressionJob>
- uid: azure.ai.ml.automl.text_classification
  name: text_classification
  summary: 'Function to create a TextClassificationJob.


    A text classification job is used to train a model that can predict the class/category
    of a text data.

    Input training data should include a target column that classifies the text into
    exactly one class.'
  signature: 'text_classification(*, training_data: Input, target_column_name: str,
    validation_data: Input, primary_metric: str | None = None, log_verbosity: str
    | None = None, **kwargs) -> TextClassificationJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: Name of the target column.
    types:
    - <xref:str>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: primary_metric
    description: 'Primary metric for the task.

      Acceptable values: accuracy, AUC_weighted, precision_score_weighted'
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.automl.ClassificationPrimaryMetrics>]
  - name: log_verbosity
    description: Log verbosity level.
    types:
    - <xref:str>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: The TextClassificationJob object.
    types:
    - <xref:azure.ai.ml.automl.TextClassificationJob>
  examples:
  - "creating an automl text classification job<!--[!code-python[Main](les\\ml_samples_automl_nlp.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_nlp.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import automl, Input\n   from azure.ai.ml.constants import AssetTypes\n\n  \
    \ test_classification_job = automl.text_classification(\n       experiment_name=\"\
    my_experiment\",\n       compute=\"my_compute\",\n       training_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./training-mltable-folder\"),\n       validation_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./validation-mltable-folder\"),\n       target_column_name=\"Sentiment\"\
    ,\n       primary_metric=\"accuracy\",\n       tags={\"my_custom_tag\": \"My custom\
    \ value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.text_classification_multilabel
  name: text_classification_multilabel
  summary: 'Function to create a TextClassificationMultilabelJob.


    A text classification multilabel job is used to train a model that can predict
    the classes/categories

    of a text data. Input training data should include a target column that classifies
    the text into class(es).

    For more information on format of multilabel data, refer to:

    [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-nlp-models#multi-label](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-nlp-models#multi-label)'
  signature: 'text_classification_multilabel(*, training_data: Input, target_column_name:
    str, validation_data: Input, primary_metric: str | None = None, log_verbosity:
    str | None = None, **kwargs) -> TextClassificationMultilabelJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: Name of the target column.
    types:
    - <xref:str>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: primary_metric
    description: 'Primary metric for the task.

      Acceptable values: accuracy'
    types:
    - <xref:str>
  - name: log_verbosity
    description: Log verbosity level.
    types:
    - <xref:str>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: The TextClassificationMultilabelJob object.
    types:
    - <xref:azure.ai.ml.automl.TextClassificationMultilabelJob>
  examples:
  - "creating an automl text multilabel classification job<!--[!code-python[Main](les\\\
    ml_samples_automl_nlp.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_nlp.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import automl, Input\n   from azure.ai.ml.constants import\
    \ AssetTypes\n\n   text_classification_multilabel_job = automl.text_classification_multilabel(\n\
    \       experiment_name=\"my_experiment\",\n       compute=\"my_compute\",\n \
    \      training_data=Input(type=AssetTypes.MLTABLE, path=\"./training-mltable-folder\"\
    ),\n       validation_data=Input(type=AssetTypes.MLTABLE, path=\"./validation-mltable-folder\"\
    ),\n       target_column_name=\"terms\",\n       primary_metric=\"accuracy\",\n\
    \       tags={\"my_custom_tag\": \"My custom value\"},\n   )\n\n   ````\n"
- uid: azure.ai.ml.automl.text_ner
  name: text_ner
  summary: 'Function to create a TextNerJob.


    A text named entity recognition job is used to train a model that can predict
    the named entities in the text.

    Input training data should be a text file in CoNLL format. For more information
    on format of text NER data,

    refer to:

    [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-nlp-models#named-entity-recognition-ner](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-nlp-models#named-entity-recognition-ner)'
  signature: 'text_ner(*, training_data: Input, validation_data: Input, primary_metric:
    str | None = None, log_verbosity: str | None = None, **kwargs) -> TextNerJob'
  keywordOnlyParameters:
  - name: training_data
    description: 'The training data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: validation_data
    description: 'The validation data to be used within the experiment.

      It should contain both training features and a target column.'
    types:
    - <xref:azure.ai.ml.Input>
  - name: primary_metric
    description: 'Primary metric for the task.

      Acceptable values: accuracy'
    types:
    - <xref:str>
  - name: log_verbosity
    description: Log verbosity level.
    types:
    - <xref:str>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    types:
    - <xref:dict>
  return:
    description: The TextNerJob object.
    types:
    - <xref:azure.ai.ml.automl.TextNerJob>
  examples:
  - "creating an automl text ner job<!--[!code-python[Main](les\\ml_samples_automl_nlp.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_automl_nlp.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import automl, Input\n   from azure.ai.ml.constants import AssetTypes\n\n  \
    \ text_ner_job = automl.text_ner(\n       experiment_name=\"my_experiment\",\n\
    \       compute=\"my_compute\",\n       training_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./training-mltable-folder\"),\n       validation_data=Input(type=AssetTypes.MLTABLE,\
    \ path=\"./validation-mltable-folder\"),\n       tags={\"my_custom_tag\": \"My\
    \ custom value\"},\n   )\n\n   ````\n"
classes:
- azure.ai.ml.automl.ClassificationJob
- azure.ai.ml.automl.ColumnTransformer
- azure.ai.ml.automl.ForecastingJob
- azure.ai.ml.automl.ForecastingSettings
- azure.ai.ml.automl.ImageClassificationJob
- azure.ai.ml.automl.ImageClassificationMultilabelJob
- azure.ai.ml.automl.ImageClassificationSearchSpace
- azure.ai.ml.automl.ImageInstanceSegmentationJob
- azure.ai.ml.automl.ImageLimitSettings
- azure.ai.ml.automl.ImageModelSettingsClassification
- azure.ai.ml.automl.ImageModelSettingsObjectDetection
- azure.ai.ml.automl.ImageObjectDetectionJob
- azure.ai.ml.automl.ImageObjectDetectionSearchSpace
- azure.ai.ml.automl.ImageSweepSettings
- azure.ai.ml.automl.NlpFeaturizationSettings
- azure.ai.ml.automl.NlpFixedParameters
- azure.ai.ml.automl.NlpLimitSettings
- azure.ai.ml.automl.NlpSearchSpace
- azure.ai.ml.automl.NlpSweepSettings
- azure.ai.ml.automl.RegressionJob
- azure.ai.ml.automl.SearchSpace
- azure.ai.ml.automl.StackEnsembleSettings
- azure.ai.ml.automl.TabularFeaturizationSettings
- azure.ai.ml.automl.TabularLimitSettings
- azure.ai.ml.automl.TextClassificationJob
- azure.ai.ml.automl.TextClassificationMultilabelJob
- azure.ai.ml.automl.TextNerJob
- azure.ai.ml.automl.TrainingSettings
enums:
- azure.ai.ml.automl.BlockedTransformers
- azure.ai.ml.automl.ClassificationModels
- azure.ai.ml.automl.ClassificationMultilabelPrimaryMetrics
- azure.ai.ml.automl.ClassificationPrimaryMetrics
- azure.ai.ml.automl.FeaturizationMode
- azure.ai.ml.automl.ForecastHorizonMode
- azure.ai.ml.automl.ForecastingModels
- azure.ai.ml.automl.ForecastingPrimaryMetrics
- azure.ai.ml.automl.InstanceSegmentationPrimaryMetrics
- azure.ai.ml.automl.LearningRateScheduler
- azure.ai.ml.automl.LogTrainingMetrics
- azure.ai.ml.automl.LogValidationLoss
- azure.ai.ml.automl.NCrossValidationsMode
- azure.ai.ml.automl.ObjectDetectionPrimaryMetrics
- azure.ai.ml.automl.RegressionModels
- azure.ai.ml.automl.RegressionPrimaryMetrics
- azure.ai.ml.automl.SamplingAlgorithmType
- azure.ai.ml.automl.ShortSeriesHandlingConfiguration
- azure.ai.ml.automl.StochasticOptimizer
- azure.ai.ml.automl.TargetAggregationFunction
- azure.ai.ml.automl.TargetLagsMode
- azure.ai.ml.automl.TargetRollingWindowSizeMode
- azure.ai.ml.automl.UseStl
- azure.ai.ml.automl.ValidationMetricType
