### YamlMime:PythonClass
uid: azure.ai.ml.entities.OneLakeDatastore
name: OneLakeDatastore
fullName: azure.ai.ml.entities.OneLakeDatastore
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._datastore.datastore.Datastore
summary: '> [!NOTE]

  > This is an experimental class, and may change at any time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
  for more information.

  >


  OneLake datastore that is linked to an Azure ML workspace.'
constructor:
  syntax: 'OneLakeDatastore(*, name: str, artifact: OneLakeArtifact, one_lake_workspace_name:
    str, endpoint: str | None = None, description: str | None = None, tags: Dict |
    None = None, properties: Dict | None = None, credentials: NoneCredentialConfiguration
    | ServicePrincipalConfiguration | None = None, **kwargs: Any)'
  parameters:
  - name: name
    description: Name of the datastore.
    isRequired: true
    types:
    - <xref:str>
  - name: artifact
    description: OneLake Artifact. Only LakeHouse artifacts are currently supported.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.OneLakeArtifact>
  - name: one_lake_workspace_name
    description: OneLake workspace name/GUID. ex) 01234567-abcd-1234-5678-012345678901
    isRequired: true
    types:
    - <xref:str>
  - name: endpoint
    description: OneLake endpoint to use for the datastore. ex) [https://onelake.dfs.fabric.microsoft.com](https://onelake.dfs.fabric.microsoft.com)
    isRequired: true
    types:
    - <xref:str>
  - name: description
    description: Description of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: Tag dictionary. Tags can be added, removed, and updated.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: properties
    description: The asset property dictionary.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: credentials
    description: Credentials to use to authenticate against OneLake.
    isRequired: true
    types:
    - <xref:typing.Union>[ <xref:azure.ai.ml.entities.ServicePrincipalConfiguration>,
      <xref:azure.ai.ml.entities.NoneCredentialConfiguration>]
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    isRequired: true
    types:
    - <xref:dict>
methods:
- uid: azure.ai.ml.entities.OneLakeDatastore.dump
  name: dump
  summary: Dump the datastore content into a file in yaml format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs: Any) -> None'
  parameters:
  - name: dest
    description: 'The destination to receive this datastore''s content.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:PathLike>, <xref:str>, <xref:typing.IO>[<xref:typing.AnyStr>]]
attributes:
- uid: azure.ai.ml.entities.OneLakeDatastore.base_path
  name: base_path
  summary: The base path of the resource.
  return:
    description: The base path of the resource.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.OneLakeDatastore.creation_context
  name: creation_context
  summary: The creation context of the resource.
  return:
    description: The creation metadata for the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.entities.OneLakeDatastore.id
  name: id
  summary: The resource ID.
  return:
    description: The global ID of the resource, an Azure Resource Manager (ARM) ID.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.OneLakeDatastore.type
  name: type
