### YamlMime:PythonClass
uid: azure.ai.ml.entities.PipelineJobSettings
name: PipelineJobSettings
fullName: azure.ai.ml.entities.PipelineJobSettings
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._job.pipeline._attr_dict._AttrDict
summary: Settings of PipelineJob.
constructor:
  syntax: 'PipelineJobSettings(default_datastore: str | None = None, default_compute:
    str | None = None, continue_on_step_failure: bool | None = None, force_rerun:
    bool | None = None, **kwargs: Any)'
  parameters:
  - name: default_datastore
    description: The default datastore of the pipeline.
    defaultValue: None
    types:
    - <xref:str>
  - name: default_compute
    description: The default compute target of the pipeline.
    defaultValue: None
    types:
    - <xref:str>
  - name: continue_on_step_failure
    description: Flag indicating whether to continue pipeline execution if a step
      fails.
    defaultValue: None
    types:
    - <xref:bool>
  - name: force_rerun
    description: Flag indicating whether to force rerun pipeline execution.
    defaultValue: None
    types:
    - <xref:bool>
examples:
- "Shows how to set pipeline properties using this class.<!--[!code-python[Main](les\\\
  ml_samples_pipeline_job_configurations.py )]-->\n\n<!-- literal_block {\"ids\":\
  \ [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
  : \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
  \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_pipeline_job_configurations.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml.entities\
  \ import PipelineJob, PipelineJobSettings\n\n   pipeline_job = PipelineJob(\n  \
  \     description=\"test pipeline job\",\n       tags={},\n       display_name=\"\
  test display name\",\n       experiment_name=\"pipeline_job_samples\",\n       properties={},\n\
  \       settings=PipelineJobSettings(force_rerun=True, default_compute=\"cpu-cluster\"\
  ),\n       jobs={\"component1\": component_func(component_in_number=1.0, component_in_path=uri_file_input)},\n\
  \   )\n\n   ml_client.jobs.create_or_update(pipeline_job)\n\n   ````\n"
methods:
- uid: azure.ai.ml.entities.PipelineJobSettings.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.ml.entities.PipelineJobSettings.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.ml.entities.PipelineJobSettings.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
  parameters:
  - name: type
    isRequired: true
- uid: azure.ai.ml.entities.PipelineJobSettings.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.PipelineJobSettings.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.ml.entities.PipelineJobSettings.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.ml.entities.PipelineJobSettings.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.ml.entities.PipelineJobSettings.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.ml.entities.PipelineJobSettings.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.PipelineJobSettings.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.ml.entities.PipelineJobSettings.values
  name: values
  signature: values() -> an object providing a view on D's values
