### YamlMime:PythonClass
uid: azure.ai.ml.automl.ForecastingJob
name: ForecastingJob
fullName: azure.ai.ml.automl.ForecastingJob
module: azure.ai.ml.automl
inheritances:
- azure.ai.ml.entities._job.automl.tabular.automl_tabular.AutoMLTabular
summary: 'Configuration for AutoML Forecasting Task.


  Initialize a new AutoML Forecasting task.'
constructor:
  syntax: 'ForecastingJob(*, primary_metric: str | None = None, forecasting_settings:
    ForecastingSettings | None = None, **kwargs: Any)'
  parameters:
  - name: primary_metric
    description: The primary metric to use for model selection.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: forecasting_settings
    description: The settings for the forecasting task.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.automl.ForecastingSettings>]
  - name: kwargs
    description: Job-specific arguments
    isRequired: true
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Any>]
  keywordOnlyParameters:
  - name: primary_metric
    isRequired: true
  - name: forecasting_settings
    isRequired: true
methods:
- uid: azure.ai.ml.automl.ForecastingJob.dump
  name: dump
  summary: Dumps the job content into a file in YAML format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs: Any) -> None'
  parameters:
  - name: dest
    description: 'The local path or file stream to write the YAML content to.

      If dest is a file path, a new file will be created.

      If dest is an open file, the file will be written to directly.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:PathLike>, <xref:str>, <xref:typing.IO>[<xref:typing.AnyStr>]]
  keywordOnlyParameters:
  - name: kwargs
    description: Additional arguments to pass to the YAML serializer.
    types:
    - <xref:dict>
  exceptions:
  - type: FileExistsError
    description: Raised if dest is a file path and the file already exists.
  - type: IOError
    description: Raised if dest is an open file and the file is not writable.
- uid: azure.ai.ml.automl.ForecastingJob.set_data
  name: set_data
  summary: Define data configuration.
  signature: 'set_data(*, training_data: Input, target_column_name: str, weight_column_name:
    str | None = None, validation_data: Input | None = None, validation_data_size:
    float | None = None, n_cross_validations: str | int | None = None, cv_split_column_names:
    List[str] | None = None, test_data: Input | None = None, test_data_size: float
    | None = None) -> None'
  keywordOnlyParameters:
  - name: training_data
    description: Training data.
    types:
    - <xref:azure.ai.ml.Input>
  - name: target_column_name
    description: Column name of the target column.
    types:
    - <xref:str>
  - name: weight_column_name
    description: Weight column name, defaults to None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: validation_data
    description: Validation data, defaults to None
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.Input>]
  - name: validation_data_size
    description: Validation data size, defaults to None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: n_cross_validations
    description: n_cross_validations, defaults to None
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:int>]]
  - name: cv_split_column_names
    description: cv_split_column_names, defaults to None
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:str>]]
  - name: test_data
    description: Test data, defaults to None
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.Input>]
  - name: test_data_size
    description: Test data size, defaults to None
    types:
    - <xref:typing.Optional>[<xref:float>]
- uid: azure.ai.ml.automl.ForecastingJob.set_featurization
  name: set_featurization
  summary: Define feature engineering configuration.
  signature: 'set_featurization(*, blocked_transformers: List[BlockedTransformers
    | str] | None = None, column_name_and_types: Dict[str, str] | None = None, dataset_language:
    str | None = None, transformer_params: Dict[str, List[ColumnTransformer]] | None
    = None, mode: str | None = None, enable_dnn_featurization: bool | None = None)
    -> None'
  keywordOnlyParameters:
  - name: blocked_transformers
    description: A list of transformer names to be blocked during featurization, defaults
      to None
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:typing.Union>[<xref:azure.ai.ml.automl.BlockedTransformers>,
      <xref:str>]]]
  - name: column_name_and_types
    description: 'A dictionary of column names and feature types used to update column
      purpose

      , defaults to None'
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
  - name: dataset_language
    description: 'Three character ISO 639-3 code for the language(s) contained in
      the dataset.

      Languages other than English are only supported if you use GPU-enabled compute.  The
      language_code

      ''mul'' should be used if the dataset contains multiple languages. To find ISO
      639-3 codes for different

      languages, please refer to [https://en.wikipedia.org/wiki/List_of_ISO_639-3_codes](https://en.wikipedia.org/wiki/List_of_ISO_639-3_codes),
      defaults to None'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: transformer_params
    description: 'A dictionary of transformer and corresponding customization parameters

      , defaults to None'
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:typing.List>[<xref:azure.ai.ml.automl.ColumnTransformer>]]]
  - name: mode
    description: '"off", "auto", defaults to "auto", defaults to None'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: enable_dnn_featurization
    description: Whether to include DNN based feature engineering methods, defaults
      to None
    types:
    - <xref:typing.Optional>[<xref:bool>]
- uid: azure.ai.ml.automl.ForecastingJob.set_forecast_settings
  name: set_forecast_settings
  summary: Manage parameters used by forecasting tasks.
  signature: 'set_forecast_settings(*, time_column_name: str | None = None, forecast_horizon:
    str | int | None = None, time_series_id_column_names: str | List[str] | None =
    None, target_lags: str | int | List[int] | None = None, feature_lags: str | None
    = None, target_rolling_window_size: str | int | None = None, country_or_region_for_holidays:
    str | None = None, use_stl: str | None = None, seasonality: str | int | None =
    None, short_series_handling_config: str | None = None, frequency: str | None =
    None, target_aggregate_function: str | None = None, cv_step_size: int | None =
    None, features_unknown_at_forecast_time: str | List[str] | None = None) -> None'
  keywordOnlyParameters:
  - name: time_column_name
    description: 'The name of the time column. This parameter is required when forecasting
      to specify the datetime

      column in the input data used for building the time series and inferring its
      frequency.'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: forecast_horizon
    description: 'The desired maximum forecast horizon in units of time-series frequency.
      The default value is 1.


      Units are based on the time interval of your training data, e.g., monthly, weekly
      that the forecaster

      should predict out. When task type is forecasting, this parameter is required.
      For more information on

      setting forecasting parameters, see [Auto-train a time-series forecast model](https://docs.microsoft.com/azure/machine-learning/how-to-auto-train-forecast).'
  - name: time_series_id_column_names
    description: 'The names of columns used to group a time series.

      It can be used to create multiple series. If time series id column names is
      not defined or

      the identifier columns specified do not identify all the series in the dataset,
      the time series identifiers

      will be automatically created for your data set.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:typing.List>[<xref:str>]]]
  - name: target_lags
    description: "The number of past periods to lag from the target column. By default\
      \ the lags are turned\noff.\n\nWhen forecasting, this parameter represents the\
      \ number of rows to lag the target values based\non the frequency of the data.\
      \ This is represented as a list or single integer. Lag should be used\nwhen\
      \ the relationship between the independent variables and dependent variable\
      \ do not match up or\ncorrelate by default. For example, when trying to forecast\
      \ demand for a product, the demand in any\nmonth may depend on the price of\
      \ specific commodities 3 months prior. In this example, you may want\nto lag\
      \ the target (demand) negatively by 3 months so that the model is training on\
      \ the correct\nrelationship. For more information, see [Auto-train a time-series\
      \ forecast model](https://docs.microsoft.com/azure/machine-learning/how-to-auto-train-forecast).\n\
      \n**Note on auto detection of target lags and rolling window size.\nPlease see\
      \ the corresponding comments in the rolling window section.**\nWe use the next\
      \ algorithm to detect the optimal target lag and rolling window size.\n\n1.\
      \ Estimate the maximum lag order for the look back feature selection. In our\
      \ case it is the number of periods till the next date frequency granularity\
      \ i.e. if frequency is daily, it will be a week (7), if it is a week, it will\
      \ be month (4). That values multiplied by two is the largest possible values\
      \ of lags/rolling windows. In our examples, we will consider the maximum lag\
      \ order of 14 and 8 respectively). \n\n2. Create a de-seasonalized series by\
      \ adding trend and residual components. This will be used in the next step.\
      \ \n\n3. Estimate the PACF - Partial Auto Correlation Function on the on the\
      \ data from (2) and search for points, where the auto correlation is significant\
      \ i.e. its absolute value is more then 1.96/square_root(maximal lag value),\
      \ which correspond to significance of 95%. \n\n4. If all points are significant,\
      \ we consider it being strong seasonality and do not create look back features.\
      \ \n\n5. We scan the PACF values from the beginning and the value before the\
      \ first insignificant auto correlation will designate the lag. If first significant\
      \ element (value correlate with itself) is followed by insignificant, the lag\
      \ will be 0 and we will not use look back features."
  - name: feature_lags
    description: Flag for generating lags for the numeric features with 'auto' or
      None.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: target_rolling_window_size
    description: 'The number of past periods used to create a rolling window average
      of the

      target column.


      When forecasting, this parameter represents *n* historical periods to use to
      generate forecasted values,

      <= training set size. If omitted, *n* is the full training set size. Specify
      this parameter

      when you only want to consider a certain amount of history when training the
      model.

      If set to ''auto'', rolling window will be estimated as the last

      value where the PACF is more then the significance threshold. Please see target_lags
      section for details.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:int>]]
  - name: country_or_region_for_holidays
    description: 'The country/region used to generate holiday features.

      These should be ISO 3166 two-letter country/region codes, for example ''US''
      or ''GB''.'
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: use_stl
    description: 'Configure STL Decomposition of the time-series target column.

      use_stl can take three values: None (default) - no stl decomposition, ''season''
      - only generate

      season component and season_trend - generate both season and trend components.'
  - name: seasonality
    description: 'Set time series seasonality as an integer multiple of the series
      frequency.

      If seasonality is set to ''auto'', it will be inferred.

      If set to None, the time series is assumed non-seasonal which is equivalent
      to seasonality=1.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:int>, <xref:str>]
  - name: short_series_handling_config
    description: "The parameter defining how if AutoML should handle short time series.\n\
      \nPossible values: 'auto' (default), 'pad', 'drop' and None.\n\n* **auto** short\
      \ series will be padded if there are no long series,\n\n     otherwise short\
      \ series will be dropped.\n\n* **pad** all the short series will be padded.\
      \ \n\n* **drop**  all the short series will be dropped\". \n\n* **None** the\
      \ short series will not be modified. \n\nIf set to 'pad', the table will be\
      \ padded with the zeroes and\nempty values for the regressors and random values\
      \ for target with the mean\nequal to target value median for given time series\
      \ id. If median is more or equal\nto zero, the minimal padded value will be\
      \ clipped by zero:\nInput:\n\n:::row:::\n:::column:::\n**Date**\n:::column-end:::\n\
      :::column:::\n**numeric_value**\n:::column-end:::\n:::column:::\n**string**\n\
      :::column-end:::\n:::column:::\n**target**\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\n2020-01-01\n:::column-end:::\n:::column:::\n23\n:::column-end:::\n\
      :::column:::\ngreen\n:::column-end:::\n:::column:::\n55\n:::column-end:::\n\
      :::row-end:::\n\nOutput assuming minimal number of values is four:\n\n:::row:::\n\
      :::column:::\n**Date**\n:::column-end:::\n:::column:::\n**numeric_value**\n\
      :::column-end:::\n:::column:::\n**string**\n:::column-end:::\n:::column:::\n\
      **target**\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n2019-12-29\n\
      :::column-end:::\n:::column:::\n0\n:::column-end:::\n:::column:::\nNA\n:::column-end:::\n\
      :::column:::\n55.1\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
      2019-12-30\n:::column-end:::\n:::column:::\n0\n:::column-end:::\n:::column:::\n\
      NA\n:::column-end:::\n:::column:::\n55.6\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\n2019-12-31\n:::column-end:::\n:::column:::\n0\n:::column-end:::\n\
      :::column:::\nNA\n:::column-end:::\n:::column:::\n54.5\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\n2020-01-01\n:::column-end:::\n:::column:::\n23\n:::column-end:::\n\
      :::column:::\ngreen\n:::column-end:::\n:::column:::\n55\n:::column-end:::\n\
      :::row-end:::\n\n**Note:** We have two parameters short_series_handling_configuration\
      \ and\nlegacy short_series_handling. When both parameters are set we are\nsynchronize\
      \ them as shown in the table below (short_series_handling_configuration and\n\
      short_series_handling for brevity are marked as handling_configuration and handling\n\
      respectively).\n\n:::row:::\n:::column:::\n**handling**\n:::column-end:::\n\
      :::column:::\n**handlingconfiguration**\n:::column-end:::\n:::column:::\n**resultinghandling**\n\
      :::column-end:::\n:::column:::\n**resultinghandlingconfiguration**\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nTrue\n:::column-end:::\n:::column:::\n\
      auto\n:::column-end:::\n:::column:::\nTrue\n:::column-end:::\n:::column:::\n\
      auto\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nTrue\n:::column-end:::\n\
      :::column:::\npad\n:::column-end:::\n:::column:::\nTrue\n:::column-end:::\n\
      :::column:::\nauto\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
      True\n:::column-end:::\n:::column:::\ndrop\n:::column-end:::\n:::column:::\n\
      True\n:::column-end:::\n:::column:::\nauto\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\nTrue\n:::column-end:::\n:::column:::\nNone\n:::column-end:::\n\
      :::column:::\nFalse\n:::column-end:::\n:::column:::\nNone\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nFalse\n:::column-end:::\n:::column:::\n\
      auto\n:::column-end:::\n:::column:::\nFalse\n:::column-end:::\n:::column:::\n\
      None\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nFalse\n:::column-end:::\n\
      :::column:::\npad\n:::column-end:::\n:::column:::\nFalse\n:::column-end:::\n\
      :::column:::\nNone\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
      False\n:::column-end:::\n:::column:::\ndrop\n:::column-end:::\n:::column:::\n\
      False\n:::column-end:::\n:::column:::\nNone\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\nFalse\n:::column-end:::\n:::column:::\nNone\n:::column-end:::\n\
      :::column:::\nFalse\n:::column-end:::\n:::column:::\nNone\n:::column-end:::\n\
      :::row-end:::"
  - name: frequency
    description: 'Forecast frequency.


      When forecasting, this parameter represents the period with which the forecast
      is desired,

      for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency
      by default.

      You can optionally set it to greater (but not lesser) than dataset frequency.

      We''ll aggregate the data and generate the results at forecast frequency. For
      example,

      for daily data, you can set the frequency to be daily, weekly or monthly, but
      not hourly.

      The frequency needs to be a pandas offset alias.

      Please refer to pandas documentation for more information:

      [https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects)'
  - name: target_aggregate_function
    description: "The function to be used to aggregate the time series target\ncolumn\
      \ to conform to a user specified frequency. If the target_aggregation_function\
      \ is set,\nbut the freq parameter is not set, the error is raised. The possible\
      \ target aggregation\nfunctions are: \"sum\", \"max\", \"min\" and \"mean\"\
      .\n\n   * The target column values are aggregated based on the specified operation.\
      \ Typically, sum is appropriate for most scenarios. \n\n   * Numerical predictor\
      \ columns in your data are aggregated by sum, mean, minimum value, and maximum\
      \ value. As a result, automated ML generates new columns suffixed with the aggregation\
      \ function name and applies the selected aggregate operation. \n\n   * For categorical\
      \ predictor columns, the data is aggregated by mode, the most prominent category\
      \ in the window. \n\n   * Date predictor columns are aggregated by minimum value,\
      \ maximum value and mode. \n\n   :::row:::\n   :::column:::\n   **freq**\n \
      \  :::column-end:::\n   :::column:::\n   **target_aggregation_function**\n \
      \  :::column-end:::\n   :::column:::\n   **Data regularityfixing mechanism**\n\
      \   :::column-end:::\n   :::row-end:::\n   :::row:::\n   :::column:::\n   None\
      \ (Default)\n   :::column-end:::\n   :::column:::\n   None (Default)\n   :::column-end:::\n\
      \   :::column:::\n   The aggregationis not applied.If the validfrequency cannot\
      \ bedeterminedthe errorwill be raised.\n   :::column-end:::\n   :::row-end:::\n\
      \   :::row:::\n   :::column:::\n   Some Value\n   :::column-end:::\n   :::column:::\n\
      \   None (Default)\n   :::column-end:::\n   :::column:::\n   The aggregationis\
      \ not applied.If the numberof data pointscompliant togiven frequencygrid isless\
      \ then 90%these pointswill beremoved,otherwisethe error willbe raised.\n   :::column-end:::\n\
      \   :::row-end:::\n   :::row:::\n   :::column:::\n   None (Default)\n   :::column-end:::\n\
      \   :::column:::\n   Aggregation function\n   :::column-end:::\n   :::column:::\n\
      \   The error aboutmissingfrequencyparameter israised.\n   :::column-end:::\n\
      \   :::row-end:::\n   :::row:::\n   :::column:::\n   Some Value\n   :::column-end:::\n\
      \   :::column:::\n   Aggregation function\n   :::column-end:::\n   :::column:::\n\
      \   Aggregate tofrequency usingprovidedaggregationfunction.\n   :::column-end:::\n\
      \   :::row-end:::"
  - name: cv_step_size
    description: 'Number of periods between the origin_time of one CV fold and the
      next fold.

      For example, if *n_step* = 3 for daily data, the origin time for each fold will
      be three days apart.'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: features_unknown_at_forecast_time
    description: 'The feature columns that are available for training but

      unknown at the time of forecast/inference. If features_unknown_at_forecast_time
      is set to an empty

      list, it is assumed that all the feature columns in the dataset are known at
      inference time. If this

      parameter is not set the support for future features is not enabled.'
    types:
    - <xref:typing.Optional>[<xref:typing.Union>[<xref:str>, <xref:typing.List>[<xref:str>]]]
- uid: azure.ai.ml.automl.ForecastingJob.set_limits
  name: set_limits
  summary: Set limits for the job.
  signature: 'set_limits(*, enable_early_termination: bool | None = None, exit_score:
    float | None = None, max_concurrent_trials: int | None = None, max_cores_per_trial:
    int | None = None, max_nodes: int | None = None, max_trials: int | None = None,
    timeout_minutes: int | None = None, trial_timeout_minutes: int | None = None)
    -> None'
  keywordOnlyParameters:
  - name: enable_early_termination
    description: "Whether to enable early termination if the score is not improving\
      \ in the\nshort term, defaults to None.\n\nEarly stopping logic:\n\n* No early\
      \ stopping for first 20 iterations (landmarks). \n\n* Early stopping window\
      \ starts on the 21st iteration and looks for early_stopping_n_iters iterations\n\
      \n     (currently set to 10). This means that the first iteration where stopping\
      \ can occur is the 31st.\n\n* AutoML still schedules 2 ensemble iterations AFTER\
      \ early stopping, which might result in higher scores. \n\n* Early stopping\
      \ is triggered if the absolute value of best score calculated is the same for\
      \ past\n\n     early_stopping_n_iters iterations, that is, if there is no improvement\
      \ in score for\n     early_stopping_n_iters iterations."
    types:
    - <xref:typing.Optional>[<xref:bool>]
  - name: exit_score
    description: 'Target score for experiment. The experiment terminates after this
      score is reached.

      If not specified (no criteria), the experiment runs until no further progress
      is made

      on the primary metric. For for more information on exit criteria, see this [article](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#exit-criteria)

      , defaults to None'
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: max_concurrent_trials
    description: "This is the maximum number of iterations that would be executed\
      \ in parallel.\nThe default value is 1.\n\n* AmlCompute clusters support one\
      \ iteration running per node. For multiple AutoML experiment parent runs\n\n\
      \     executed in parallel on a single AmlCompute cluster, the sum of the `max_concurrent_trials`\
      \ values\n     for all experiments should be less than or equal to the maximum\
      \ number of nodes. Otherwise, runs\n     will be queued until nodes are available.\n\
      \n* DSVM supports multiple iterations per node. `max_concurrent_trials` should\n\
      \n     be less than or equal to the number of cores on the DSVM. For multiple\
      \ experiments\n     run in parallel on a single DSVM, the sum of the `max_concurrent_trials`\
      \ values for all\n     experiments should be less than or equal to the maximum\
      \ number of nodes.\n\n* Databricks - `max_concurrent_trials` should be less\
      \ than or equal to the number of\n\n     worker nodes on Databricks.\n\n`max_concurrent_trials`\
      \ does not apply to local runs. Formerly, this parameter\nwas named `concurrent_iterations`."
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: max_cores_per_trial
    description: "The maximum number of threads to use for a given training iteration.\n\
      Acceptable values:\n\n* Greater than 1 and less than or equal to the maximum\
      \ number of cores on the compute target. \n\n* Equal to -1, which means to use\
      \ all the possible cores per iteration per child-run. \n\n* Equal to 1, the\
      \ default."
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: max_nodes
    description: "[Experimental] The maximum number of nodes to use for distributed\
      \ training.\n\n* For forecasting, each model is trained using max(2, int(max_nodes\
      \ / max_concurrent_trials)) nodes. \n\n* For classification/regression, each\
      \ model is trained using max_nodes nodes. \n\nNote- This parameter is in public\
      \ preview and might change in future."
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: max_trials
    description: 'The total number of different algorithm and parameter combinations
      to test during an

      automated ML experiment. If not specified, the default is 1000 iterations.'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: timeout_minutes
    description: 'Maximum amount of time in minutes that all iterations combined can
      take before the

      experiment terminates. If not specified, the default experiment timeout is 6
      days. To specify a timeout

      less than or equal to 1 hour, make sure your dataset''s size is not greater
      than

      10,000,000 (rows times column) or an error results, defaults to None'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: trial_timeout_minutes
    description: 'Maximum time in minutes that each iteration can run for before it
      terminates.

      If not specified, a value of 1 month or 43200 minutes is used, defaults to None'
    types:
    - <xref:typing.Optional>[<xref:int>]
- uid: azure.ai.ml.automl.ForecastingJob.set_training
  name: set_training
  summary: The method to configure forecast training related settings.
  signature: 'set_training(*, enable_onnx_compatible_models: bool | None = None, enable_dnn_training:
    bool | None = None, enable_model_explainability: bool | None = None, enable_stack_ensemble:
    bool | None = None, enable_vote_ensemble: bool | None = None, stack_ensemble_settings:
    StackEnsembleSettings | None = None, ensemble_model_download_timeout: int | None
    = None, allowed_training_algorithms: List[str] | None = None, blocked_training_algorithms:
    List[str] | None = None, training_mode: str | TrainingMode | None = None) -> None'
  keywordOnlyParameters:
  - name: enable_onnx_compatible_models
    description: 'Whether to enable or disable enforcing the ONNX-compatible models.

      The default is False. For more information about Open Neural Network Exchange
      (ONNX) and Azure Machine

      Learning, see this [article](https://docs.microsoft.com/azure/machine-learning/concept-onnx).'
  - name: enable_dnn_training
    description: 'Whether to include DNN based models during model selection.

      However, the default is True for DNN NLP tasks, and it''s False for all other
      AutoML tasks.'
    types:
    - <xref:typing.Optional>[<xref:bool>]
  - name: enable_model_explainability
    description: 'Whether to enable explaining the best AutoML model at the end of
      all AutoML training iterations.

      For more information, see [Interpretability: model explanations in automated
      machine learning](https://docs.microsoft.com/azure/machine-learning/how-to-machine-learning-interpretability-automl).

      , defaults to None'
  - name: enable_stack_ensemble
    description: 'Whether to enable/disable StackEnsemble iteration.

      If *enable_onnx_compatible_models* flag is being set, then StackEnsemble iteration
      will be disabled.

      Similarly, for Timeseries tasks, StackEnsemble iteration will be disabled by
      default, to avoid risks of

      overfitting due to small training set used in fitting the meta learner.

      For more information about ensembles, see [Ensemble configuration](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#ensemble)

      , defaults to None'
  - name: enable_vote_ensemble
    description: 'Whether to enable/disable VotingEnsemble iteration.

      For more information about ensembles, see [Ensemble configuration](https://docs.microsoft.com/azure/machine-learning/how-to-configure-auto-train#ensemble)

      , defaults to None'
  - name: stack_ensemble_settings
    description: Settings for StackEnsemble iteration, defaults to None
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.automl.StackEnsembleSettings>]
  - name: ensemble_model_download_timeout
    description: 'During VotingEnsemble and StackEnsemble model generation,

      multiple fitted models from the previous child runs are downloaded. Configure
      this parameter with a

      higher value than 300 secs, if more time is needed, defaults to None'
    types:
    - <xref:typing.Optional>[<xref:int>]
  - name: allowed_training_algorithms
    description: 'A list of model names to search for an experiment. If not specified,

      then all models supported for the task are used minus any specified in `blocked_training_algorithms`

      or deprecated TensorFlow models, defaults to None'
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:str>]]
  - name: blocked_training_algorithms
    description: A list of algorithms to ignore for an experiment, defaults to None
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:str>]]
  - name: training_mode
    description: "[Experimental] The training mode to use.\nThe possible values are-\n\
      \n* distributed- enables distributed training for supported algorithms. \n\n\
      * non_distributed- disables distributed training. \n\n* auto- Currently, it\
      \ is same as non_distributed. In future, this might change. \n\nNote: This parameter\
      \ is in public preview and may change in future."
attributes:
- uid: azure.ai.ml.automl.ForecastingJob.base_path
  name: base_path
  summary: The base path of the resource.
  return:
    description: The base path of the resource.
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ForecastingJob.creation_context
  name: creation_context
  summary: The creation context of the resource.
  return:
    description: The creation metadata for the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.automl.ForecastingJob.featurization
  name: featurization
  summary: Get the tabular featurization settings for the AutoML job.
  return:
    description: Tabular featurization settings for the AutoML job
    types:
    - <xref:azure.ai.ml.automl.TabularFeaturizationSettings>
- uid: azure.ai.ml.automl.ForecastingJob.forecasting_settings
  name: forecasting_settings
  summary: Return the forecast settings.
  return:
    description: forecast settings.
    types:
    - <xref:azure.ai.ml.automl.ForecastingSettings>
- uid: azure.ai.ml.automl.ForecastingJob.id
  name: id
  summary: The resource ID.
  return:
    description: The global ID of the resource, an Azure Resource Manager (ARM) ID.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ForecastingJob.inputs
  name: inputs
- uid: azure.ai.ml.automl.ForecastingJob.limits
  name: limits
  summary: Get the tabular limits for the AutoML job.
  return:
    description: Tabular limits for the AutoML job
    types:
    - <xref:azure.ai.ml.automl.TabularLimitSettings>
- uid: azure.ai.ml.automl.ForecastingJob.log_files
  name: log_files
  summary: Job output files.
  return:
    description: The dictionary of log names and URLs.
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.automl.ForecastingJob.log_verbosity
  name: log_verbosity
  summary: Get the log verbosity for the AutoML job.
  return:
    description: log verbosity for the AutoML job
    types:
    - <xref:LogVerbosity>
- uid: azure.ai.ml.automl.ForecastingJob.outputs
  name: outputs
- uid: azure.ai.ml.automl.ForecastingJob.primary_metric
  name: primary_metric
  summary: Return the primary metric to use for model selection.
  return:
    description: The primary metric for model selection.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ForecastingJob.status
  name: status
  summary: "The status of the job.\n\nCommon values returned include \"Running\",\
    \ \"Completed\", and \"Failed\". All possible values are:\n\n   * NotStarted -\
    \ This is a temporary state that client-side Run objects are in before cloud submission.\
    \ \n\n   * Starting - The Run has started being processed in the cloud. The caller\
    \ has a run ID at this point. \n\n   * Provisioning - On-demand compute is being\
    \ created for a given job submission. \n\n   * Preparing - The run environment\
    \ is being prepared and is in one of two stages:\n\n        * Docker image build\
    \ \n\n        * conda environment setup \n\n   * Queued - The job is queued on\
    \ the compute target. For example, in BatchAI, the job is in a queued state\n\n\
    \        while waiting for all the requested nodes to be ready.\n\n   * Running\
    \ - The job has started to run on the compute target. \n\n   * Finalizing - User\
    \ code execution has completed, and the run is in post-processing stages. \n\n\
    \   * CancelRequested - Cancellation has been requested for the job. \n\n   *\
    \ Completed - The run has completed successfully. This includes both the user\
    \ code execution and run\n\n        post-processing stages.\n\n   * Failed - The\
    \ run failed. Usually the Error property on a run will provide details as to why.\
    \ \n\n   * Canceled - Follows a cancellation request and indicates that the run\
    \ is now successfully cancelled. \n\n   * NotResponding - For runs that have Heartbeats\
    \ enabled, no heartbeat has been recently sent."
  return:
    description: Status of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ForecastingJob.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: The URL to the job details page.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ForecastingJob.task_type
  name: task_type
  summary: Get task type.
  return:
    description: 'The type of task to run. Possible values include: "classification",
      "regression", "forecasting".'
    types:
    - <xref:str>
- uid: azure.ai.ml.automl.ForecastingJob.test_data
  name: test_data
  summary: Get test data.
  return:
    description: Test data input
    types:
    - <xref:azure.ai.ml.Input>
- uid: azure.ai.ml.automl.ForecastingJob.training
  name: training
  summary: Return the forecast training settings.
  return:
    description: training settings.
    types:
    - <xref:azure.ai.ml.automl.ForecastingTrainingSettings>
- uid: azure.ai.ml.automl.ForecastingJob.training_data
  name: training_data
  summary: Get training data.
  return:
    description: Training data input
    types:
    - <xref:azure.ai.ml.Input>
- uid: azure.ai.ml.automl.ForecastingJob.type
  name: type
  summary: The type of the job.
  return:
    description: The type of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.automl.ForecastingJob.validation_data
  name: validation_data
  summary: Get validation data.
  return:
    description: Validation data input
    types:
    - <xref:azure.ai.ml.Input>
