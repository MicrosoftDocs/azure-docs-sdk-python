### YamlMime:PythonClass
uid: azure.ai.ml.entities.JobService
name: JobService
fullName: azure.ai.ml.entities.JobService
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._job.job_service.JobServiceBase
summary: "> [!NOTE]\n> This is an experimental class, and may change at any time.\
  \ Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)\
  \ for more information.\n>\n\nBasic job service configuration for backward compatibility.\n\
  \   Use JupyterLabJobService, SshJobService, TensorBoardJobService or VsCodeJobService\n\
  \   specific to your job type instead of JobService."
constructor:
  syntax: 'JobService(*, endpoint: str | None = None, job_service_type: Literal[''jupyter_lab'',
    ''ssh'', ''tensor_board'', ''vs_code''] | None = None, nodes: Literal[''all'']
    | None = None, status: str | None = None, port: int | None = None, properties:
    Dict[str, str] | None = None, **kwargs)'
  parameters:
  - name: endpoint
    description: Url for endpoint.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.str>
  - name: job_service_type
    description: 'Endpoint type.

      Accepts "jupyter_lab", "ssh", "tensor_board", "vs_code"'
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.str>
  - name: port
    description: Port for endpoint.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.int>
  - name: nodes
    description: Indicates whether the service has to run in all nodes.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.str>
  - name: properties
    description: Additional properties to set on the endpoint.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.dict>[<xref:azure.ai.ml.entities.str>, <xref:azure.ai.ml.entities.str>]
  - name: status
    description: Status of endpoint.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.str>
  - name: kwargs
    description: A dictionary of additional configuration parameters.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.dict>
