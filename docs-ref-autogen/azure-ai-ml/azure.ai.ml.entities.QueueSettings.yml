### YamlMime:PythonClass
uid: azure.ai.ml.entities.QueueSettings
name: QueueSettings
fullName: azure.ai.ml.entities.QueueSettings
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._mixins.RestTranslatableMixin
- azure.ai.ml.entities._mixins.DictMixin
summary: '> [!NOTE]

  > This is an experimental class, and may change at any time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
  for more information.

  >


  Queue settings for a pipeline job.'
constructor:
  syntax: 'QueueSettings(*, job_tier: str | None = None, priority: str | None = None,
    **kwargs: Any)'
  keywordOnlyParameters:
  - name: job_tier
    description: The job tier. Accepted values are "Spot", "Basic", "Standard", and
      "Premium".
    types:
    - <xref:typing.Optional>[<xref:typing.Literal>]]
  - name: priority
    description: 'The priority of the job on a compute. Accepted values are "low",
      "medium", and "high".

      Defaults to "medium".'
    types:
    - <xref:typing.Optional>[<xref:typing.Literal>]
  - name: kwargs
    description: Additional properties for QueueSettings.
    types:
    - <xref:typing.Optional>[<xref:dict>]
variables:
- description: 'Enum to determine the job tier. Possible values include: "Spot", "Basic",

    "Standard", "Premium", "Null".'
  name: job_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.JobTier>
- description: Controls the priority of the job on a compute.
  name: priority
  types:
  - <xref:str>
methods:
- uid: azure.ai.ml.entities.QueueSettings.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.QueueSettings.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.entities.QueueSettings.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.entities.QueueSettings.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.entities.QueueSettings.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.QueueSettings.values
  name: values
  signature: values() -> list
