### YamlMime:PythonClass
uid: azure.ai.ml.entities.OneLakeArtifact
name: OneLakeArtifact
fullName: azure.ai.ml.entities.OneLakeArtifact
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._mixins.RestTranslatableMixin
- azure.ai.ml.entities._mixins.DictMixin
- abc.ABC
summary: '> [!NOTE]

  > This is an experimental class, and may change at any time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
  for more information.

  >


  OneLake artifact (data source) backing the OneLake workspace.'
constructor:
  syntax: 'OneLakeArtifact(*, name: str, type: str | None = None)'
  parameters:
  - name: name
    description: OneLake artifact name/GUID. ex) 01234567-abcd-1234-5678-012345678901
    isRequired: true
    types:
    - <xref:str>
  - name: type
    description: OneLake artifact type. Only LakeHouse artifacts are currently supported.
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.ai.ml.entities.OneLakeArtifact.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.OneLakeArtifact.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.entities.OneLakeArtifact.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.entities.OneLakeArtifact.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.entities.OneLakeArtifact.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.OneLakeArtifact.values
  name: values
  signature: values() -> list
