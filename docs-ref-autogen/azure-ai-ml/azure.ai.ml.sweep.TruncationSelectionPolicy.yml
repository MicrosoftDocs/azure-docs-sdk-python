### YamlMime:PythonClass
uid: azure.ai.ml.sweep.TruncationSelectionPolicy
name: TruncationSelectionPolicy
fullName: azure.ai.ml.sweep.TruncationSelectionPolicy
module: azure.ai.ml.sweep
inheritances:
- azure.ai.ml.entities._job.sweep.early_termination_policy.EarlyTerminationPolicy
summary: Defines an early termination policy that cancels a given percentage of runs
  at each evaluation interval.
constructor:
  syntax: 'TruncationSelectionPolicy(*, delay_evaluation: int = 0, evaluation_interval:
    int = 0, truncation_percentage: int = 0)'
  keywordOnlyParameters:
  - name: delay_evaluation
    description: Number of intervals by which to delay the first evaluation. Defaults
      to 0.
    types:
    - <xref:int>
  - name: evaluation_interval
    description: Interval (number of runs) between policy evaluations. Defaults to
      0.
    types:
    - <xref:int>
  - name: truncation_percentage
    description: The percentage of runs to cancel at each evaluation interval. Defaults
      to 0.
    types:
    - <xref:int>
examples:
- "Configuring an early termination policy for a hyperparameter sweep job\nusing TruncationStoppingPolicy<!--[!code-python[Main](les\\\
  ml_samples_sweep_configurations.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
  classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"\
  C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
  \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_sweep_configurations.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
  \ import command\n\n   job = command(\n       inputs=dict(kernel=\"linear\", penalty=1.0),\n\
  \       compute=cpu_cluster,\n       environment=f\"{job_env.name}:{job_env.version}\"\
  ,\n       code=\"./scripts\",\n       command=\"python scripts/train.py --kernel\
  \ $kernel --penalty $penalty\",\n       experiment_name=\"sklearn-iris-flowers\"\
  ,\n   )\n\n   # we can reuse an existing Command Job as a function that we can apply\
  \ inputs to for the sweep configurations\n   from azure.ai.ml.sweep import QUniform,\
  \ TruncationSelectionPolicy, Uniform\n\n   job_for_sweep = job(\n       kernel=Uniform(min_value=0.0005,\
  \ max_value=0.005),\n       penalty=QUniform(min_value=0.05, max_value=0.75, q=1),\n\
  \   )\n\n   sweep_job = job_for_sweep.sweep(\n       sampling_algorithm=\"random\"\
  ,\n       primary_metric=\"best_val_acc\",\n       goal=\"Maximize\",\n       max_total_trials=8,\n\
  \       max_concurrent_trials=4,\n       early_termination_policy=TruncationSelectionPolicy(delay_evaluation=5,\
  \ evaluation_interval=2),\n   )\n\n   ````\n"
