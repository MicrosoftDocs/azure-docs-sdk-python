### YamlMime:PythonClass
uid: azure.ai.ml.operations.DatastoreOperations
name: DatastoreOperations
fullName: azure.ai.ml.operations.DatastoreOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'Represents a client for performing operations on Datastores.


  You should not instantiate this class directly. Instead, you should

  create MLClient and use this client via the property

  MLClient.datastores'
constructor:
  syntax: 'DatastoreOperations(operation_scope: OperationScope, operation_config:
    OperationConfig, serviceclient_2022_10_01: AzureMachineLearningWorkspaces, **kwargs:
    Dict)'
  parameters:
  - name: operation_scope
  - name: operation_config
  - name: serviceclient_2022_10_01
methods:
- uid: azure.ai.ml.operations.DatastoreOperations.create_or_update
  name: create_or_update
  summary: 'Attaches the passed in datastore to the workspace or updates the

    datastore if it already exists.'
  signature: 'create_or_update(datastore: Datastore) -> Datastore'
  parameters:
  - name: datastore
    description: The configuration of the datastore to attach.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.Datastore>
  return:
    description: The attached datastore.
    types:
    - <xref:azure.ai.ml.entities.Datastore>
- uid: azure.ai.ml.operations.DatastoreOperations.delete
  name: delete
  summary: 'Deletes a datastore reference with the given name from the

    workspace. This method does not delete the actual datastore or

    underlying data in the datastore.'
  signature: 'delete(name: str) -> None'
  parameters:
  - name: name
    description: Name of the datastore
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
- uid: azure.ai.ml.operations.DatastoreOperations.get
  name: get
  summary: 'Returns information about the datastore referenced by the given

    name.'
  signature: 'get(name: str, *, include_secrets: bool = False) -> Datastore'
  parameters:
  - name: name
    description: Datastore name
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
  - name: include_secrets
    description: Include datastore secrets in the returned datastore, defaults to
      False
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.bool>, <xref:azure.ai.ml.operations.optional>
  return:
    description: Datastore with the specified name.
    types:
    - <xref:azure.ai.ml.entities.Datastore>
- uid: azure.ai.ml.operations.DatastoreOperations.get_default
  name: get_default
  summary: Returns the workspace's default datastore.
  signature: 'get_default(*, include_secrets: bool = False) -> Datastore'
  parameters:
  - name: include_secrets
    description: Include datastore secrets in the returned datastore, defaults to
      False
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.bool>, <xref:azure.ai.ml.operations.optional>
  return:
    description: The default datastore.
    types:
    - <xref:azure.ai.ml.entities.Datastore>
- uid: azure.ai.ml.operations.DatastoreOperations.list
  name: list
  summary: Lists all datastores and associated information within a workspace.
  signature: 'list(*, include_secrets: bool = False) -> Iterable[Datastore]'
  parameters:
  - name: include_secrets
    description: Include datastore secrets in returned datastores, defaults to False
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.bool>, <xref:azure.ai.ml.operations.optional>
  return:
    description: An iterator like instance of Datastore objects
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.Datastore>]
