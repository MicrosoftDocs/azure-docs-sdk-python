### YamlMime:PythonClass
uid: azure.ai.ml.operations.WorkspaceConnectionsOperations
name: WorkspaceConnectionsOperations
fullName: azure.ai.ml.operations.WorkspaceConnectionsOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'WorkspaceConnectionsOperations.


  You should not instantiate this class directly. Instead, you should create

  an MLClient instance that instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: 'WorkspaceConnectionsOperations(operation_scope: OperationScope, operation_config:
    OperationConfig, service_client: AzureMachineLearningWorkspaces, all_operations:
    OperationsContainer, credentials: TokenCredential | None = None, **kwargs: Dict)'
  parameters:
  - name: operation_scope
    isRequired: true
  - name: operation_config
    isRequired: true
  - name: service_client
    isRequired: true
  - name: all_operations
    isRequired: true
  - name: credentials
    defaultValue: None
methods:
- uid: azure.ai.ml.operations.WorkspaceConnectionsOperations.create_or_update
  name: create_or_update
  summary: Create or update a workspace connection.
  signature: 'create_or_update(workspace_connection: WorkspaceConnection, **kwargs:
    Any) -> WorkspaceConnection | None'
  parameters:
  - name: workspace_connection
    description: 'Workspace Connection definition

      or object which can be translated to a workspace connection.'
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.WorkspaceConnection>
  return:
    description: Created or update workspace connection.
    types:
    - <xref:azure.ai.ml.entities.WorkspaceConnection>
  examples:
  - "Create or update a workspace connection, this example shows snowflake.<!--[!code-python[Main](les\\\
    ml_samples_workspace.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\\
    hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\
    \\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_workspace.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.ai.ml import MLClient\n   from azure.ai.ml.entities import WorkspaceConnection\n\
    \   from azure.ai.ml.entities import UsernamePasswordConfiguration\n\n   ml_client_ws\
    \ = MLClient(credential, subscription_id, resource_group, workspace_name=\"test-ws\"\
    )\n   wps_connection = WorkspaceConnection(\n       name=\"connection-1\",\n \
    \      type=\"snowflake\",\n       target=\"jdbc:snowflake://<myaccount>.snowflakecomputing.com/?db=<mydb>&warehouse=<mywarehouse>&role=<myrole>\"\
    ,  # cspell:disable-line\n       credentials=UsernamePasswordConfiguration(username=\"\
    XXXXX\", password=\"XXXXXX\"),\n   )\n   connection = ml_client_ws.connections.create_or_update(workspace_connection=wps_connection)\n\
    \n   ````\n"
- uid: azure.ai.ml.operations.WorkspaceConnectionsOperations.delete
  name: delete
  summary: Delete the workspace connection.
  signature: 'delete(name: str) -> None'
  parameters:
  - name: name
    description: Name of the workspace connection.
    isRequired: true
    types:
    - <xref:str>
  examples:
  - "Delete a workspace connection.<!--[!code-python[Main](les\\ml_samples_workspace.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_workspace.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import MLClient\n\n   ml_client_ws = MLClient(credential, subscription_id, resource_group,\
    \ workspace_name=\"test-ws\")\n   ml_client_ws.connections.delete(name=\"connection-1\"\
    )\n\n   ````\n"
- uid: azure.ai.ml.operations.WorkspaceConnectionsOperations.get
  name: get
  summary: Get a workspace connection by name.
  signature: 'get(name: str, **kwargs: Dict) -> WorkspaceConnection'
  parameters:
  - name: name
    description: Name of the workspace connection.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The workspace connection with the provided name.
    types:
    - <xref:azure.ai.ml.entities.WorkspaceConnection>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: 'Raised if the corresponding name and version cannot be

      retrieved from the service.'
  examples:
  - "Get a workspace connection by name.<!--[!code-python[Main](les\\ml_samples_workspace.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\
    \\Python\\\\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\\
    10\\\\azure-ai-ml-1.15.0\\\\samples\\\\ml_samples_workspace.py\", \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.ai.ml\
    \ import MLClient\n\n   ml_client_ws = MLClient(credential, subscription_id, resource_group,\
    \ workspace_name=\"test-ws1\")\n   connection = ml_client.connections.get(name=\"\
    test-ws1\")\n\n   ````\n"
- uid: azure.ai.ml.operations.WorkspaceConnectionsOperations.list
  name: list
  summary: List all workspace connections for a workspace.
  signature: 'list(connection_type: str | None = None, *, include_data_connections:
    bool = False, **kwargs: Any) -> Iterable[WorkspaceConnection]'
  parameters:
  - name: connection_type
    description: Type of workspace connection to list.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:str>]
  keywordOnlyParameters:
  - name: include_data_connections
    description: If true, also return data connections. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: An iterator like instance of workspace connection objects
    types:
    - <xref:typing.Iterable>[<xref:azure.ai.ml.entities.WorkspaceConnection>]
  examples:
  - "Lists all connections for a workspace for a certain type, in this case \"git\"\
    .<!--[!code-python[Main](les\\ml_samples_workspace.py )]-->\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\
    \\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\\\
    samples\\\\ml_samples_workspace.py\", \"xml:space\": \"preserve\", \"force\":\
    \ false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
    linenos\": false} -->\n\n````python\n\n   from azure.ai.ml import MLClient\n\n\
    \   ml_client_ws = MLClient(credential, subscription_id, resource_group, workspace_name=\"\
    test-ws\")\n   ml_client_ws.connections.list(connection_type=\"git\")\n\n   ````\n"
