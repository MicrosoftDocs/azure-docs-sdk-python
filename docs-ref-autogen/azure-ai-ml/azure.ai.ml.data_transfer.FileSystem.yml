### YamlMime:PythonClass
uid: azure.ai.ml.data_transfer.FileSystem
name: FileSystem
fullName: azure.ai.ml.data_transfer.FileSystem
module: azure.ai.ml.data_transfer
inheritances:
- azure.ai.ml.entities._mixins.DictMixin
- azure.ai.ml.entities._mixins.RestTranslatableMixin
summary: 'Define a file system class of a DataTransfer Component or Job.


  e.g. source_s3 = FileSystem(path=''s3://my_bucket/my_folder'', connection=''azureml:my_s3_connection'')'
constructor:
  syntax: 'FileSystem(*, path: str | None = None, connection: str | None = None)'
  parameters:
  - name: path
    description: The path to which the input is pointing. Could be pointing to the
      path of file system. Default is None.
    isRequired: true
    types:
    - <xref:str>
  - name: connection
    description: 'Connection is workspace, we didn''t support storage connection here,
      need leverage workspace

      connection to store these credential info. Default is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: path
    isRequired: true
  - name: connection
    isRequired: true
methods:
- uid: azure.ai.ml.data_transfer.FileSystem.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.data_transfer.FileSystem.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.data_transfer.FileSystem.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.data_transfer.FileSystem.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.data_transfer.FileSystem.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.data_transfer.FileSystem.values
  name: values
  signature: values() -> list
