### YamlMime:PythonClass
uid: azure.ai.ml.operations.FeatureStoreOperations
name: FeatureStoreOperations
fullName: azure.ai.ml.operations.FeatureStoreOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml.operations._workspace_operations_base.WorkspaceOperationsBase
summary: 'FeatureStoreOperations.


  You should not instantiate this class directly. Instead, you should

  create an MLClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'FeatureStoreOperations(operation_scope: OperationScope, service_client:
    AzureMachineLearningWorkspaces, all_operations: OperationsContainer, credentials:
    TokenCredential | None = None, **kwargs: Dict)'
  parameters:
  - name: operation_scope
    isRequired: true
  - name: service_client
    isRequired: true
  - name: all_operations
    isRequired: true
  - name: credentials
    defaultValue: None
methods:
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_create
  name: begin_create
  summary: 'Create a new FeatureStore.


    Returns the feature store if already exists.'
  signature: 'begin_create(feature_store: FeatureStore, *, grant_materialization_permissions:
    bool = True, update_dependent_resources: bool = False, **kwargs: Dict) -> LROPoller[FeatureStore]'
  parameters:
  - name: feature_store
    description: FeatureStore definition.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.FeatureStore>
  return:
    description: An instance of LROPoller that returns a FeatureStore.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.FeatureStore>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_delete
  name: begin_delete
  summary: Delete a FeatureStore.
  signature: 'begin_delete(name: str, *, delete_dependent_resources: bool = False,
    **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: name
    description: Name of the FeatureStore
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: delete_dependent_resources
    description: 'Whether to delete resources associated with the feature store,

      i.e., container registry, storage account, key vault, and application insights.

      The default is False. Set to True to delete these resources.'
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_provision_network
  name: begin_provision_network
  summary: 'Triggers the feature store to provision the managed network. Specifying
    spark enabled

    as true prepares the feature store managed network for supporting Spark.'
  signature: 'begin_provision_network(*, feature_store_name: str | None = None, include_spark:
    bool = False, **kwargs: Any) -> LROPoller[ManagedNetworkProvisionStatus]'
  keywordOnlyParameters:
  - name: feature_store_name
    description: Name of the feature store.
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.ManagedNetworkProvisionStatus>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_update
  name: begin_update
  summary: "Update friendly name, description, online store connection, offline store\
    \ connection, materialization\n   identities or tags of a feature store."
  signature: 'begin_update(feature_store: FeatureStore, *, grant_materialization_permissions:
    bool = True, update_dependent_resources: bool = False, **kwargs: Any) -> LROPoller[FeatureStore]'
  parameters:
  - name: feature_store
    description: FeatureStore resource.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.FeatureStore>
  keywordOnlyParameters:
  - name: update_dependent_resources
    description: 'gives your consent to update the feature store dependent resources.

      Note that updating the feature store attached Azure Container Registry resource
      may break lineage

      of previous jobs or your ability to rerun earlier jobs in this feature store.

      Also, updating the feature store attached Azure Application Insights resource
      may break lineage of

      deployed inference endpoints this feature store. Only set this argument if you
      are sure that you want

      to perform this operation. If this argument is not set, the command to update

      Azure Container Registry and Azure Application Insights will fail.'
  - name: application_insights
    description: Application insights resource for feature store. Defaults to None.
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: container_registry
    description: Container registry resource for feature store. Defaults to None.
    types:
    - <xref:typing.Optional>[<xref:str>]
  return:
    description: An instance of LROPoller that returns a FeatureStore.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.FeatureStore>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.get
  name: get
  summary: Get a feature store by name.
  signature: 'get(name: str, **kwargs: Any) -> FeatureStore'
  parameters:
  - name: name
    description: Name of the feature store.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The feature store with the provided name.
    types:
    - <xref:azure.ai.ml.entities.FeatureStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: 'Raised if the corresponding name and version cannot be

      retrieved from the service.'
- uid: azure.ai.ml.operations.FeatureStoreOperations.list
  name: list
  summary: 'List all feature stores that the user has access to in the current

    resource group or subscription.'
  signature: 'list(*, scope: str = ''resource_group'', **kwargs: Dict) -> Iterable[FeatureStore]'
  keywordOnlyParameters:
  - name: scope
    description: scope of the listing, "resource_group" or "subscription", defaults
      to "resource_group"
    types:
    - <xref:str>
  return:
    description: An iterator like instance of FeatureStore objects
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.FeatureStore>]
