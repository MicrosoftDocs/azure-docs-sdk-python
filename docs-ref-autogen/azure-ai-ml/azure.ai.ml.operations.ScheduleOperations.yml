### YamlMime:PythonClass
uid: azure.ai.ml.operations.ScheduleOperations
name: ScheduleOperations
fullName: azure.ai.ml.operations.ScheduleOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'You should not instantiate this class directly.

  Instead, you should create an MLClient instance that instantiates it for you and
  attaches it as an attribute.'
constructor:
  syntax: 'ScheduleOperations(operation_scope: OperationScope, operation_config: OperationConfig,
    service_client_10_2022: AzureMachineLearningWorkspaces, all_operations: OperationsContainer,
    credential: TokenCredential, **kwargs: Any)'
  parameters:
  - name: operation_scope
  - name: operation_config
  - name: service_client_10_2022
  - name: all_operations
  - name: credential
methods:
- uid: azure.ai.ml.operations.ScheduleOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update schedule.
  signature: begin_create_or_update(schedule) -> LROPoller[JobSchedule]
  parameters:
  - name: schedule
    description: Schedule definition.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.JobSchedule>
  return:
    description: An instance of LROPoller that returns JobSchedule if no_wait=True,
      or JobSchedule if no_wait=False
    types:
    - <xref:azure.ai.ml.operations.Union>[<xref:azure.ai.ml.operations.LROPoller>,
      <xref:azure.ai.ml.entities.JobSchedule>]
    - <xref:azure.ai.ml.operations.Union>[<xref:azure.ai.ml.operations.LROPoller>,
      <xref:azure.ai.ml.entities.JobSchedule>]
- uid: azure.ai.ml.operations.ScheduleOperations.begin_delete
  name: begin_delete
  summary: Delete schedule.
  signature: begin_delete(name) -> LROPoller[None]
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
- uid: azure.ai.ml.operations.ScheduleOperations.begin_disable
  name: begin_disable
  summary: Disable a schedule.
  signature: begin_disable(name) -> LROPoller[JobSchedule]
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
  return:
    description: An instance of LROPoller that returns JobSchedule if no_wait=True,
      or JobSchedule if no_wait=False
    types:
    - <xref:azure.ai.ml.operations.LROPoller>
- uid: azure.ai.ml.operations.ScheduleOperations.begin_enable
  name: begin_enable
  summary: Enable a schedule.
  signature: begin_enable(name) -> LROPoller[JobSchedule]
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
  return:
    description: An instance of LROPoller that returns JobSchedule
    types:
    - <xref:azure.ai.ml.operations.LROPoller>
- uid: azure.ai.ml.operations.ScheduleOperations.get
  name: get
  summary: Get a schedule.
  signature: get(name) -> JobSchedule
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.str>
  return:
    description: The schedule object.
    types:
    - <xref:azure.ai.ml.entities.JobSchedule>
- uid: azure.ai.ml.operations.ScheduleOperations.list
  name: list
  summary: List schedules in specified workspace.
  signature: 'list(*, list_view_type: ScheduleListViewType = ScheduleListViewType.ENABLED_ONLY)
    -> Iterable[JobSchedule]'
  parameters:
  - name: list_view_type
    description: 'View type for including/excluding (for example)

      archived schedules. Default: ENABLED_ONLY.'
    isRequired: true
    types:
    - <xref:azure.ai.ml.operations.Optional>[<xref:azure.ai.ml.operations.ScheduleListViewType>]
  return:
    description: An iterator to list JobSchedule.
    types:
    - <xref:azure.ai.ml.operations.Iterable>[<xref:azure.ai.ml.entities.JobSchedule>]
