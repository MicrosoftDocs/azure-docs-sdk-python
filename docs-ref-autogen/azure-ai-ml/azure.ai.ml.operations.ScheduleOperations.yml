### YamlMime:PythonClass
uid: azure.ai.ml.operations.ScheduleOperations
name: ScheduleOperations
fullName: azure.ai.ml.operations.ScheduleOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'You should not instantiate this class directly.

  Instead, you should create an MLClient instance that instantiates it for you and
  attaches it as an attribute.'
constructor:
  syntax: 'ScheduleOperations(operation_scope: OperationScope, operation_config: OperationConfig,
    service_client_06_2023_preview: AzureMachineLearningWorkspaces, service_client_01_2024_preview:
    AzureMachineLearningWorkspaces, all_operations: OperationsContainer, credential:
    TokenCredential, **kwargs: Any)'
  parameters:
  - name: operation_scope
    isRequired: true
  - name: operation_config
    isRequired: true
  - name: service_client_06_2023_preview
    isRequired: true
  - name: service_client_01_2024_preview
    isRequired: true
  - name: all_operations
    isRequired: true
  - name: credential
    isRequired: true
methods:
- uid: azure.ai.ml.operations.ScheduleOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update schedule.
  signature: 'begin_create_or_update(schedule: Schedule, **kwargs: Any) -> LROPoller[Schedule]'
  parameters:
  - name: schedule
    description: Schedule definition.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.Schedule>
  return:
    description: An instance of LROPoller that returns Schedule if no_wait=True, or
      Schedule if no_wait=False
    types:
    - <xref:typing.Union>[<xref:LROPoller>, <xref:azure.ai.ml.entities.Schedule>]
    - <xref:typing.Union>[<xref:LROPoller>, <xref:azure.ai.ml.entities.Schedule>]
- uid: azure.ai.ml.operations.ScheduleOperations.begin_delete
  name: begin_delete
  summary: Delete schedule.
  signature: 'begin_delete(name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: A poller for deletion status
    types:
    - <xref:LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.ScheduleOperations.begin_disable
  name: begin_disable
  summary: Disable a schedule.
  signature: 'begin_disable(name: str, **kwargs: Any) -> LROPoller[Schedule]'
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns Schedule if no_wait=True, or
      Schedule if no_wait=False
    types:
    - <xref:LROPoller>
- uid: azure.ai.ml.operations.ScheduleOperations.begin_enable
  name: begin_enable
  summary: Enable a schedule.
  signature: 'begin_enable(name: str, **kwargs: Any) -> LROPoller[Schedule]'
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns Schedule
    types:
    - <xref:LROPoller>
- uid: azure.ai.ml.operations.ScheduleOperations.get
  name: get
  summary: Get a schedule.
  signature: 'get(name: str, **kwargs: Any) -> Schedule'
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The schedule object.
    types:
    - <xref:azure.ai.ml.entities.Schedule>
- uid: azure.ai.ml.operations.ScheduleOperations.list
  name: list
  summary: List schedules in specified workspace.
  signature: 'list(*, list_view_type: ScheduleListViewType = ScheduleListViewType.ENABLED_ONLY,
    **kwargs: Any) -> Iterable[Schedule]'
  keywordOnlyParameters:
  - name: list_view_type
    description: 'View type for including/excluding (for example)

      archived schedules. Default: ENABLED_ONLY.'
  return:
    description: An iterator to list Schedule.
    types:
    - <xref:typing.Iterable>[<xref:azure.ai.ml.entities.Schedule>]
- uid: azure.ai.ml.operations.ScheduleOperations.trigger
  name: trigger
  summary: Trigger a schedule once.
  signature: 'trigger(name: str, **kwargs: Any) -> ScheduleTriggerResult'
  parameters:
  - name: name
    description: Schedule name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TriggerRunSubmissionDto, or the result of cls(response)
    types:
    - <xref:azure.ai.ml.entities.ScheduleTriggerResult>
