### YamlMime:PythonClass
uid: azure.ai.ml.entities.AssignedUserConfiguration
name: AssignedUserConfiguration
fullName: azure.ai.ml.entities.AssignedUserConfiguration
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._mixins.DictMixin
summary: Settings to create a compute resource on behalf of another user.
constructor:
  syntax: 'AssignedUserConfiguration(*, user_tenant_id: str, user_object_id: str)'
  parameters:
  - name: user_tenant_id
    description: Tenant ID of the user to assign the compute target to.
    isRequired: true
    types:
    - <xref:str>
  - name: user_object_id
    description: Object ID of the user to assign the compute target to.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: user_tenant_id
    isRequired: true
  - name: user_object_id
    isRequired: true
examples:
- "Creating an AssignedUserConfiguration.<!--[!code-python[Main](les\\ml_samples_compute.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\10\\\\azure-ai-ml-1.15.0\\\
  \\samples\\\\ml_samples_compute.py\", \"xml:space\": \"preserve\", \"force\": false,\
  \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
  : false} -->\n\n````python\n\n   from azure.ai.ml.entities import AssignedUserConfiguration\n\
  \n   on_behalf_of_config = AssignedUserConfiguration(user_tenant_id=\"12345\", user_object_id=\"\
  abcdef\")\n\n   ````\n"
methods:
- uid: azure.ai.ml.entities.AssignedUserConfiguration.get
  name: get
  signature: 'get(key: Any, default: Any | None = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.AssignedUserConfiguration.has_key
  name: has_key
  signature: 'has_key(k: Any) -> bool'
  parameters:
  - name: k
    isRequired: true
- uid: azure.ai.ml.entities.AssignedUserConfiguration.items
  name: items
  signature: items() -> list
- uid: azure.ai.ml.entities.AssignedUserConfiguration.keys
  name: keys
  signature: keys() -> list
- uid: azure.ai.ml.entities.AssignedUserConfiguration.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.ml.entities.AssignedUserConfiguration.values
  name: values
  signature: values() -> list
