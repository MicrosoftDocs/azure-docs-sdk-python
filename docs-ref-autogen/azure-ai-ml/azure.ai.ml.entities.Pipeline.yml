### YamlMime:PythonClass
uid: azure.ai.ml.entities.Pipeline
name: Pipeline
fullName: azure.ai.ml.entities.Pipeline
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._builders.base_node.BaseNode
summary: 'Base class for pipeline node, used for pipeline component version consumption.
  You should not instantiate this

  class directly. Instead, you should use @pipeline decorator to create a pipeline
  node.'
constructor:
  syntax: 'Pipeline(*, component: Component | str, inputs: Dict[str, Input | str |
    bool | int | float | Enum] | None = None, outputs: Dict[str, str | Output] | None
    = None, settings: PipelineJobSettings | None = None, **kwargs: Any)'
  parameters:
  - name: component
    description: Id or instance of the pipeline component/job to be run for the step.
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:azure.ai.ml.entities.Component>, <xref:str>]
  - name: inputs
    description: Inputs of the pipeline node.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:typing.Union>[ <xref:azure.ai.ml.entities.Input>,
      <xref:str>, <xref:bool>, <xref:int>, <xref:float>, <xref:Enum>, <xref:"Input">]]]<xref:./>
  - name: outputs
    description: Outputs of the pipeline node.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:typing.Union>[<xref:str>,
      <xref:azure.ai.ml.entities.Output>, <xref:"Output">]]]
  - name: settings
    description: Setting of pipeline node, only taking effect for root pipeline job.
    isRequired: true
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.PipelineJobSettings>]
  keywordOnlyParameters:
  - name: component
    isRequired: true
  - name: inputs
    isRequired: true
  - name: outputs
    isRequired: true
  - name: settings
    isRequired: true
methods:
- uid: azure.ai.ml.entities.Pipeline.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.ml.entities.Pipeline.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.ml.entities.Pipeline.dump
  name: dump
  summary: Dumps the job content into a file in YAML format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs: Any) -> None'
  parameters:
  - name: dest
    description: 'The local path or file stream to write the YAML content to.

      If dest is a file path, a new file will be created.

      If dest is an open file, the file will be written to directly.'
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:PathLike>, <xref:str>, <xref:typing.IO>[<xref:typing.AnyStr>]]
  keywordOnlyParameters:
  - name: kwargs
    description: Additional arguments to pass to the YAML serializer.
    types:
    - <xref:dict>
  exceptions:
  - type: FileExistsError
    description: Raised if dest is a file path and the file already exists.
  - type: IOError
    description: Raised if dest is an open file and the file is not writable.
- uid: azure.ai.ml.entities.Pipeline.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
  parameters:
  - name: type
    isRequired: true
- uid: azure.ai.ml.entities.Pipeline.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Pipeline.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.ml.entities.Pipeline.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.ml.entities.Pipeline.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.ml.entities.Pipeline.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.ml.entities.Pipeline.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Pipeline.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.ml.entities.Pipeline.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.ai.ml.entities.Pipeline.base_path
  name: base_path
  summary: The base path of the resource.
  return:
    description: The base path of the resource.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Pipeline.component
  name: component
  summary: Id or instance of the pipeline component/job to be run for the step.
  return:
    description: Id or instance of the pipeline component/job.
    types:
    - <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.entities.Component>]
- uid: azure.ai.ml.entities.Pipeline.creation_context
  name: creation_context
  summary: The creation context of the resource.
  return:
    description: The creation metadata for the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.entities.Pipeline.id
  name: id
  summary: The resource ID.
  return:
    description: The global ID of the resource, an Azure Resource Manager (ARM) ID.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Pipeline.inputs
  name: inputs
  summary: Get the inputs for the object.
  return:
    description: A dictionary containing the inputs for the object.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Union>[<xref:azure.ai.ml.Input>,
      <xref:str>, <xref:bool>, <xref:int>, <xref:float>]]
- uid: azure.ai.ml.entities.Pipeline.log_files
  name: log_files
  summary: Job output files.
  return:
    description: The dictionary of log names and URLs.
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.entities.Pipeline.name
  name: name
  summary: Get the name of the node.
  return:
    description: The name of the node.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Pipeline.outputs
  name: outputs
  summary: Get the outputs of the object.
  return:
    description: A dictionary containing the outputs for the object.
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:typing.Union>[<xref:str>, <xref:azure.ai.ml.Output>]]
- uid: azure.ai.ml.entities.Pipeline.settings
  name: settings
  summary: "Settings of the pipeline.\n\nNote: settings is available only when create\
    \ node as a job.\n   i.e. ml_client.jobs.create_or_update(node)."
  return:
    description: Settings of the pipeline.
    types:
    - <xref:azure.ai.ml.entities.PipelineJobSettings>
- uid: azure.ai.ml.entities.Pipeline.status
  name: status
  summary: "The status of the job.\n\nCommon values returned include \"Running\",\
    \ \"Completed\", and \"Failed\". All possible values are:\n\n   * NotStarted -\
    \ This is a temporary state that client-side Run objects are in before cloud submission.\
    \ \n\n   * Starting - The Run has started being processed in the cloud. The caller\
    \ has a run ID at this point. \n\n   * Provisioning - On-demand compute is being\
    \ created for a given job submission. \n\n   * Preparing - The run environment\
    \ is being prepared and is in one of two stages:\n\n        * Docker image build\
    \ \n\n        * conda environment setup \n\n   * Queued - The job is queued on\
    \ the compute target. For example, in BatchAI, the job is in a queued state\n\n\
    \        while waiting for all the requested nodes to be ready.\n\n   * Running\
    \ - The job has started to run on the compute target. \n\n   * Finalizing - User\
    \ code execution has completed, and the run is in post-processing stages. \n\n\
    \   * CancelRequested - Cancellation has been requested for the job. \n\n   *\
    \ Completed - The run has completed successfully. This includes both the user\
    \ code execution and run\n\n        post-processing stages.\n\n   * Failed - The\
    \ run failed. Usually the Error property on a run will provide details as to why.\
    \ \n\n   * Canceled - Follows a cancellation request and indicates that the run\
    \ is now successfully cancelled. \n\n   * NotResponding - For runs that have Heartbeats\
    \ enabled, no heartbeat has been recently sent."
  return:
    description: Status of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Pipeline.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: The URL to the job details page.
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Pipeline.type
  name: type
  summary: The type of the job.
  return:
    description: The type of the job.
    types:
    - <xref:typing.Optional>[<xref:str>]
