### YamlMime:PythonClass
uid: azure.ai.projects.models.UpdateToolResourcesOptions
name: UpdateToolResourcesOptions
fullName: azure.ai.projects.models.UpdateToolResourcesOptions
module: azure.ai.projects.models
summary: 'Request object. A set of resources that are used by the agent''s tools.
  The resources are

  specific to the type of tool.

  For example, the `code_interpreter` tool requires a list of file IDs, while the

  `file_search` tool requires a list of

  vector store IDs.'
constructor:
  syntax: 'UpdateToolResourcesOptions(*args: Any, **kwargs: Any)'
variables:
- description: 'Overrides the list of file IDs made available to the

    `code_interpreter` tool. There can be a maximum of 20 files

    associated with the tool.'
  name: code_interpreter
  types:
  - <xref:azure.ai.projects.models.UpdateCodeInterpreterToolResourceOptions>
- description: 'Overrides the vector store attached to this agent. There can be a
    maximum of

    1 vector store attached to the agent.'
  name: file_search
  types:
  - <xref:azure.ai.projects.models.UpdateFileSearchToolResourceOptions>
- description: 'Overrides the resources to be used by the `azure_ai_search` tool

    consisting of index IDs and names.'
  name: azure_ai_search
  types:
  - <xref:azure.ai.projects.models.AzureAISearchResource>
methods:
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.azure_ai_search
  name: azure_ai_search
  summary: 'Overrides the resources to be used by the `azure_ai_search` tool consisting
    of index IDs and

    names.'
  signature: 'azure_ai_search: _models.AzureAISearchResource | None'
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.code_interpreter
  name: code_interpreter
  summary: 'Overrides the list of file IDs made available to the `code_interpreter`
    tool. There can be a

    maximum of 20 files

    associated with the tool.'
  signature: 'code_interpreter: _models.UpdateCodeInterpreterToolResourceOptions |
    None'
- uid: azure.ai.projects.models.UpdateToolResourcesOptions.file_search
  name: file_search
  summary: 'Overrides the vector store attached to this agent. There can be a maximum
    of 1 vector store

    attached to the agent.'
  signature: 'file_search: _models.UpdateFileSearchToolResourceOptions | None'
