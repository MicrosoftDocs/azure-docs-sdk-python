### YamlMime:PythonClass
uid: azure.ai.projects.aio.operations.DatasetsOperations
name: DatasetsOperations
fullName: azure.ai.projects.aio.operations.DatasetsOperations
module: azure.ai.projects.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.ai.projects.aio.AIProjectClient>'s\n\
  >\n> <xref:datasets> attribute.\n>"
constructor:
  syntax: DatasetsOperations(*args, **kwargs)
methods:
- uid: azure.ai.projects.aio.operations.DatasetsOperations.create_or_update
  name: create_or_update
  summary: Create a new or update an existing DatasetVersion with the given version
    id.
  signature: 'async create_or_update(name: str, version: str, dataset_version: DatasetVersion
    | MutableMapping[str, Any] | IO[bytes], **kwargs: Any) -> DatasetVersion'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The specific version id of the DatasetVersion to create or update.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: dataset_version
    description: 'The DatasetVersion to create or update. Is one of the following
      types:

      DatasetVersion, JSON, IO[bytes] Required.'
    isRequired: true
    types:
    - <xref:azure.ai.projects.models.DatasetVersion>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: DatasetVersion. The DatasetVersion is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.DatasetVersion>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.delete
  name: delete
  summary: 'Delete the specific version of the DatasetVersion. The service returns
    204 No Content if the

    DatasetVersion was deleted successfully or if the DatasetVersion does not exist.'
  signature: 'async delete(name: str, version: str, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The version of the DatasetVersion to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.get
  name: get
  summary: 'Get the specific version of the DatasetVersion. The service returns 404
    Not Found error if the

    DatasetVersion does not exist.'
  signature: 'async get(name: str, version: str, **kwargs: Any) -> DatasetVersion'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The specific version id of the DatasetVersion to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DatasetVersion. The DatasetVersion is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.DatasetVersion>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.get_credentials
  name: get_credentials
  summary: Get the SAS credential to access the storage account associated with a
    Dataset version.
  signature: 'async get_credentials(name: str, version: str, **kwargs: Any) -> DatasetCredential'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The specific version id of the DatasetVersion to operate on. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DatasetCredential. The DatasetCredential is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.DatasetCredential>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.list
  name: list
  summary: List the latest version of each DatasetVersion.
  signature: 'list(**kwargs: Any) -> AsyncItemPaged[DatasetVersion]'
  return:
    description: An iterator like instance of DatasetVersion
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.ai.projects.models.DatasetVersion>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.list_versions
  name: list_versions
  summary: List all versions of the given DatasetVersion.
  signature: 'list_versions(name: str, **kwargs: Any) -> AsyncItemPaged[DatasetVersion]'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of DatasetVersion
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.ai.projects.models.DatasetVersion>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.pending_upload
  name: pending_upload
  summary: Start a new or get an existing pending upload of a dataset for a specific
    version.
  signature: 'async pending_upload(name: str, version: str, pending_upload_request:
    PendingUploadRequest | MutableMapping[str, Any] | IO[bytes], **kwargs: Any) ->
    PendingUploadResponse'
  parameters:
  - name: name
    description: The name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The specific version id of the DatasetVersion to operate on. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pending_upload_request
    description: 'The pending upload request parameters. Is one of the following

      types: PendingUploadRequest, JSON, IO[bytes] Required.'
    isRequired: true
    types:
    - <xref:azure.ai.projects.models.PendingUploadRequest>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: PendingUploadResponse. The PendingUploadResponse is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.PendingUploadResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.DatasetsOperations.upload_file
  name: upload_file
  summary: 'Upload file to a blob storage, and create a dataset that references this
    file.

    This method uses the *ContainerClient.upload_blob* method from the azure-storage-blob
    package

    to upload the file. Any keyword arguments provided will be passed to the *upload_blob*
    method.'
  signature: 'async upload_file(*, name: str, version: str, file_path: str, connection_name:
    str | None = None, **kwargs: Any) -> FileDatasetVersion'
  keywordOnlyParameters:
  - name: name
    description: The name of the dataset. Required.
    types:
    - <xref:str>
  - name: version
    description: The version identifier for the dataset. Required.
    types:
    - <xref:str>
  - name: file_path
    description: The file name (including optional path) to be uploaded. Required.
    types:
    - <xref:str>
  - name: connection_name
    description: 'The name of an Azure Storage Account connection, where the file
      should be uploaded.

      If not specified, the default Azure Storage Account connection will be used.
      Optional.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: The created dataset version.
    types:
    - <xref:azure.ai.projects.models.FileDatasetVersion>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: If an error occurs during the HTTP request.
- uid: azure.ai.projects.aio.operations.DatasetsOperations.upload_folder
  name: upload_folder
  summary: 'Upload all files in a folder and its sub folders to a blob storage, while
    maintaining

    relative paths, and create a dataset that references this folder.

    This method uses the *ContainerClient.upload_blob* method from the azure-storage-blob
    package

    to upload each file. Any keyword arguments provided will be passed to the *upload_blob*
    method.'
  signature: 'async upload_folder(*, name: str, version: str, folder: str, connection_name:
    str | None = None, file_pattern: Pattern | None = None, **kwargs: Any) -> FolderDatasetVersion'
  keywordOnlyParameters:
  - name: name
    description: The name of the dataset. Required.
    types:
    - <xref:str>
  - name: version
    description: The version identifier for the dataset. Required.
    types:
    - <xref:str>
  - name: folder
    description: The folder name (including optional path) to be uploaded. Required.
    types:
    - <xref:str>
  - name: connection_name
    description: 'The name of an Azure Storage Account connection, where the file
      should be uploaded.

      If not specified, the default Azure Storage Account connection will be used.
      Optional.'
    defaultValue: None
    types:
    - <xref:str>
  - name: file_pattern
    description: 'A regex pattern to filter files to be uploaded. Only files matching
      the pattern

      will be uploaded. Optional.'
    defaultValue: None
    types:
    - <xref:re.Pattern>
  return:
    description: The created dataset version.
    types:
    - <xref:azure.ai.projects.models.FolderDatasetVersion>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: If an error occurs during the HTTP request.
