### YamlMime:PythonClass
uid: azure.ai.projects.models.VectorStore
name: VectorStore
fullName: azure.ai.projects.models.VectorStore
module: azure.ai.projects.models
summary: A vector store is a collection of processed files can be used by the `file_search`
  tool.
constructor:
  syntax: 'VectorStore(*args: Any, **kwargs: Any)'
variables:
- description: The identifier, which can be referenced in API endpoints. Required.
  name: id
  types:
  - <xref:str>
- description: 'The object type, which is always `vector_store`. Required. Default
    value is

    "vector_store".'
  name: object
  types:
  - <xref:str>
- description: 'The Unix timestamp (in seconds) for when the vector store was created.

    Required.'
  name: created_at
  types:
  - <xref:datetime.datetime>
- description: The name of the vector store. Required.
  name: name
  types:
  - <xref:str>
- description: The total number of bytes used by the files in the vector store. Required.
  name: usage_bytes
  types:
  - <xref:int>
- description: 'Files count grouped by status processed or being processed by this
    vector

    store. Required.'
  name: file_counts
  types:
  - <xref:azure.ai.projects.models.VectorStoreFileCount>
- description: 'The status of the vector store, which can be either `expired`, `in_progress`,

    or `completed`. A status of `completed` indicates that the vector store is ready
    for use.

    Required. Known values are: "expired", "in_progress", and "completed".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.projects.models.VectorStoreStatus>
- description: Details on when this vector store expires.
  name: expires_after
  types:
  - <xref:azure.ai.projects.models.VectorStoreExpirationPolicy>
- description: The Unix timestamp (in seconds) for when the vector store will expire.
  name: expires_at
  types:
  - <xref:datetime.datetime>
- description: 'The Unix timestamp (in seconds) for when the vector store was last

    active. Required.'
  name: last_active_at
  types:
  - <xref:datetime.datetime>
- description: 'A set of up to 16 key/value pairs that can be attached to an object,
    used for

    storing additional information about that object in a structured format. Keys
    may be up to 64

    characters in length and values may be up to 512 characters in length. Required.'
  name: metadata
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.projects.models.VectorStore.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.VectorStore.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.VectorStore.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.VectorStore.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.VectorStore.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.VectorStore.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.VectorStore.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.VectorStore.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.VectorStore.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.VectorStore.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.VectorStore.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.VectorStore.created_at
  name: created_at
  summary: The Unix timestamp (in seconds) for when the vector store was created.
    Required.
  signature: 'created_at: datetime'
- uid: azure.ai.projects.models.VectorStore.expires_after
  name: expires_after
  summary: Details on when this vector store expires.
  signature: 'expires_after: _models.VectorStoreExpirationPolicy | None'
- uid: azure.ai.projects.models.VectorStore.expires_at
  name: expires_at
  summary: The Unix timestamp (in seconds) for when the vector store will expire.
  signature: 'expires_at: datetime | None'
- uid: azure.ai.projects.models.VectorStore.file_counts
  name: file_counts
  summary: Files count grouped by status processed or being processed by this vector
    store. Required.
  signature: 'file_counts: _models.VectorStoreFileCount'
- uid: azure.ai.projects.models.VectorStore.id
  name: id
  summary: The identifier, which can be referenced in API endpoints. Required.
  signature: 'id: str'
- uid: azure.ai.projects.models.VectorStore.last_active_at
  name: last_active_at
  summary: The Unix timestamp (in seconds) for when the vector store was last active.
    Required.
  signature: 'last_active_at: datetime'
- uid: azure.ai.projects.models.VectorStore.metadata
  name: metadata
  summary: 'A set of up to 16 key/value pairs that can be attached to an object, used
    for storing

    additional information about that object in a structured format. Keys may be up
    to 64

    characters in length and values may be up to 512 characters in length. Required.'
  signature: 'metadata: Dict[str, str]'
- uid: azure.ai.projects.models.VectorStore.name
  name: name
  summary: The name of the vector store. Required.
  signature: 'name: str'
- uid: azure.ai.projects.models.VectorStore.object
  name: object
  summary: The object type, which is always `vector_store`. Required. Default value
    is "vector_store".
  signature: 'object: Literal[''vector_store'']'
- uid: azure.ai.projects.models.VectorStore.status
  name: status
  summary: 'The status of the vector store, which can be either `expired`, `in_progress`,
    or

    `completed`. A status of `completed` indicates that the vector store is ready
    for use.

    Required. Known values are: "expired", "in_progress", and "completed".'
  signature: 'status: str | _models.VectorStoreStatus'
- uid: azure.ai.projects.models.VectorStore.usage_bytes
  name: usage_bytes
  summary: The total number of bytes used by the files in the vector store. Required.
  signature: 'usage_bytes: int'
