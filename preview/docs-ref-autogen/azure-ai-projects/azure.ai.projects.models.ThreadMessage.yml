### YamlMime:PythonClass
uid: azure.ai.projects.models.ThreadMessage
name: ThreadMessage
fullName: azure.ai.projects.models.ThreadMessage
module: azure.ai.projects.models
constructor:
  syntax: 'ThreadMessage(*args: Any, **kwargs: Any)'
methods:
- uid: azure.ai.projects.models.ThreadMessage.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.ThreadMessage.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.ThreadMessage.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.ThreadMessage.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.ThreadMessage.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.ThreadMessage.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.ThreadMessage.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.ThreadMessage.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.ThreadMessage.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.ThreadMessage.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.ThreadMessage.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.ThreadMessage.agent_id
  name: agent_id
  summary: If applicable, the ID of the agent that authored this message. Required.
  signature: 'agent_id: str'
- uid: azure.ai.projects.models.ThreadMessage.attachments
  name: attachments
  summary: A list of files attached to the message, and the tools they were added
    to. Required.
  signature: 'attachments: List[''_models.MessageAttachment'']'
- uid: azure.ai.projects.models.ThreadMessage.completed_at
  name: completed_at
  summary: The Unix timestamp (in seconds) for when the message was completed. Required.
  signature: 'completed_at: datetime.datetime'
- uid: azure.ai.projects.models.ThreadMessage.content
  name: content
  summary: The list of content items associated with the agent thread message. Required.
  signature: 'content: List[''_models.MessageContent'']'
- uid: azure.ai.projects.models.ThreadMessage.created_at
  name: created_at
  summary: The Unix timestamp, in seconds, representing when this object was created.
    Required.
  signature: 'created_at: datetime.datetime'
- uid: azure.ai.projects.models.ThreadMessage.file_citation_annotations
  name: file_citation_annotations
  summary: Returns all file citation annotations from text message annotations in
    the messages.
  return:
    types:
    - <xref:typing.List>[<xref:azure.ai.projects.models.MessageTextFileCitationAnnotation>]
- uid: azure.ai.projects.models.ThreadMessage.file_path_annotations
  name: file_path_annotations
  summary: Returns all file path annotations from text message annotations in the
    messages.
  return:
    types:
    - <xref:typing.List>[<xref:azure.ai.projects.models.MessageTextFilePathAnnotation>]
- uid: azure.ai.projects.models.ThreadMessage.id
  name: id
  summary: The identifier, which can be referenced in API endpoints. Required.
  signature: 'id: str'
- uid: azure.ai.projects.models.ThreadMessage.image_contents
  name: image_contents
  summary: Returns all image file contents from image message contents in the messages.
  return:
    types:
    - <xref:typing.List>[<xref:azure.ai.projects.models.MessageImageFileContent>]
- uid: azure.ai.projects.models.ThreadMessage.incomplete_at
  name: incomplete_at
  summary: The Unix timestamp (in seconds) for when the message was marked as incomplete.
    Required.
  signature: 'incomplete_at: datetime.datetime'
- uid: azure.ai.projects.models.ThreadMessage.incomplete_details
  name: incomplete_details
  summary: On an incomplete message, details about why the message is incomplete.
    Required.
  signature: 'incomplete_details: _models.MessageIncompleteDetails'
- uid: azure.ai.projects.models.ThreadMessage.metadata
  name: metadata
  summary: 'A set of up to 16 key/value pairs that can be attached to an object, used
    for storing

    additional information about that object in a structured format. Keys may be up
    to 64

    characters in length and values may be up to 512 characters in length. Required.'
  signature: 'metadata: Dict[str, str]'
- uid: azure.ai.projects.models.ThreadMessage.object
  name: object
  summary: 'The object type, which is always ''thread.message''. Required. Default
    value is

    "thread.message".'
  signature: 'object: Literal[''thread.message'']'
- uid: azure.ai.projects.models.ThreadMessage.role
  name: role
  summary: '"user" and

    "assistant".'
  signature: 'role: str | ''_models.MessageRole'''
- uid: azure.ai.projects.models.ThreadMessage.run_id
  name: run_id
  summary: If applicable, the ID of the run associated with the authoring of this
    message. Required.
  signature: 'run_id: str'
- uid: azure.ai.projects.models.ThreadMessage.status
  name: status
  summary: '"in_progress", "incomplete", and

    "completed".'
  signature: 'status: str | ''_models.MessageStatus'''
- uid: azure.ai.projects.models.ThreadMessage.text_messages
  name: text_messages
  summary: Returns all text message contents in the messages.
  return:
    types:
    - <xref:typing.List>[<xref:azure.ai.projects.models.MessageTextContent>]
- uid: azure.ai.projects.models.ThreadMessage.thread_id
  name: thread_id
  summary: The ID of the thread that this message belongs to. Required.
  signature: 'thread_id: str'
- uid: azure.ai.projects.models.ThreadMessage.url_citation_annotations
  name: url_citation_annotations
  summary: Returns all URL citation annotations from text message annotations in the
    messages.
  return:
    types:
    - <xref:typing.List>[<xref:azure.ai.projects.models.MessageTextUrlCitationAnnotation>]
