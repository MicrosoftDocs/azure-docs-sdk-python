### YamlMime:PythonClass
uid: azure.ai.projects.models.OpenAIFile
name: OpenAIFile
fullName: azure.ai.projects.models.OpenAIFile
module: azure.ai.projects.models
summary: Represents an agent that can call the model and use tools.
constructor:
  syntax: 'OpenAIFile(*args: Any, **kwargs: Any)'
variables:
- description: The object type, which is always 'file'. Required. Default value is
    "file".
  name: object
  types:
  - <xref:str>
- description: The identifier, which can be referenced in API endpoints. Required.
  name: id
  types:
  - <xref:str>
- description: The size of the file, in bytes. Required.
  name: bytes
  types:
  - <xref:int>
- description: The name of the file. Required.
  name: filename
  types:
  - <xref:str>
- description: 'The Unix timestamp, in seconds, representing when this object was
    created.

    Required.'
  name: created_at
  types:
  - <xref:datetime.datetime>
- description: 'The intended purpose of a file. Required. Known values are: "fine-tune",

    "fine-tune-results", "assistants", "assistants_output", "batch", "batch_output",
    and "vision".'
  name: purpose
  types:
  - <xref:str>
  - <xref:azure.ai.projects.models.FilePurpose>
- description: 'The state of the file. This field is available in Azure OpenAI only.
    Known values

    are: "uploaded", "pending", "running", "processed", "error", "deleting", and "deleted".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.projects.models.FileState>
- description: 'The error message with details in case processing of this file failed.

    This field is available in Azure OpenAI only.'
  name: status_details
  types:
  - <xref:str>
methods:
- uid: azure.ai.projects.models.OpenAIFile.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.OpenAIFile.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.OpenAIFile.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.OpenAIFile.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.OpenAIFile.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.OpenAIFile.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.OpenAIFile.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.OpenAIFile.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.OpenAIFile.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.OpenAIFile.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.OpenAIFile.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.OpenAIFile.bytes
  name: bytes
  summary: The size of the file, in bytes. Required.
  signature: 'bytes: int'
- uid: azure.ai.projects.models.OpenAIFile.created_at
  name: created_at
  summary: The Unix timestamp, in seconds, representing when this object was created.
    Required.
  signature: 'created_at: datetime'
- uid: azure.ai.projects.models.OpenAIFile.filename
  name: filename
  summary: The name of the file. Required.
  signature: 'filename: str'
- uid: azure.ai.projects.models.OpenAIFile.id
  name: id
  summary: The identifier, which can be referenced in API endpoints. Required.
  signature: 'id: str'
- uid: azure.ai.projects.models.OpenAIFile.object
  name: object
  summary: The object type, which is always 'file'. Required. Default value is "file".
  signature: 'object: Literal[''file'']'
- uid: azure.ai.projects.models.OpenAIFile.purpose
  name: purpose
  summary: '"fine-tune",

    "fine-tune-results", "assistants", "assistants_output", "batch", "batch_output",
    and

    "vision".'
  signature: 'purpose: str | _models.FilePurpose'
- uid: azure.ai.projects.models.OpenAIFile.status
  name: status
  summary: 'The state of the file. This field is available in Azure OpenAI only. Known
    values are:

    "uploaded", "pending", "running", "processed", "error", "deleting", and

    "deleted".'
  signature: 'status: str | _models.FileState | None'
- uid: azure.ai.projects.models.OpenAIFile.status_details
  name: status_details
  summary: 'The error message with details in case processing of this file failed.
    This field is available

    in Azure OpenAI only.'
  signature: 'status_details: str | None'
