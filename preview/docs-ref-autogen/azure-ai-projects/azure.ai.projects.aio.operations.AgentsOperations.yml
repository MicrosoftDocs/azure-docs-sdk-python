### YamlMime:PythonClass
uid: azure.ai.projects.aio.operations.AgentsOperations
name: AgentsOperations
fullName: azure.ai.projects.aio.operations.AgentsOperations
module: azure.ai.projects.aio.operations
constructor:
  syntax: AgentsOperations(*args, **kwargs)
methods:
- uid: azure.ai.projects.aio.operations.AgentsOperations.cancel_run
  name: cancel_run
  summary: Cancels a run of an in progress thread.
  signature: 'async cancel_run(thread_id: str, run_id: str, **kwargs: Any) -> ThreadRun'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Identifier of the run. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.cancel_vector_store_file_batch
  name: cancel_vector_store_file_batch
  summary: 'Cancel a vector store file batch. This attempts to cancel the processing
    of files in this batch

    as soon as possible.'
  signature: 'async cancel_vector_store_file_batch(vector_store_id: str, batch_id:
    str, **kwargs: Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_agent
  name: create_agent
  summary: Creates a new agent with various configurations, delegating to the generated
    operations.
  signature: 'async create_agent(*, model: str, content_type: str = ''application/json'',
    name: str | None = None, description: str | None = None, instructions: str | None
    = None, tools: List[_models.ToolDefinition] | None = None, tool_resources: _models.ToolResources
    | None = None, temperature: float | None = None, top_p: float | None = None, response_format:
    ''_types.AgentsApiResponseFormatOption'' | None = None, metadata: Dict[str, str]
    | None = None, **kwargs: Any) -> _models.Agent'
  parameters:
  - name: body
    description: JSON or IO[bytes]. Required if *model* is not provided.
    types:
    - <xref:typing.Union>[<xref:JSON>, <xref:typing.IO>[<xref:bytes>]]
  keywordOnlyParameters:
  - name: model
    description: The ID of the model to use. Required if *body* is not provided.
    defaultValue: <object object at 0x000001A5F49D79A0>
    types:
    - <xref:str>
  - name: name
    description: The name of the new agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: description
    description: A description for the new agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: instructions
    description: System instructions for the agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: tools
    description: List of tools definitions for the agent.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:typing.List>[<xref:azure.ai.projects.models.ToolDefinition>]]
  - name: tool_resources
    description: Resources used by the agent's tools.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:azure.ai.projects.models.ToolResources>]
  - name: toolset
    description: 'Collection of tools and resources (alternative to *tools* and *tool_resources*

      and adds automatic execution logic for functions).'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:_models.AsyncToolSet>]
  - name: temperature
    description: Sampling temperature for generating agent responses.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: top_p
    description: Nucleus sampling parameter.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:float>]
  - name: response_format
    description: Response format for tool calls.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:"_types.AgentsApiResponseFormatOption">]
  - name: metadata
    description: Key/value pairs for storing additional information.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:typing.Dict>[<xref:str>, <xref:str>]]
  - name: content_type
    description: Content type of the body.
    defaultValue: application/json
    types:
    - <xref:str>
  return:
    description: An Agent object.
    types:
    - <xref:azure.ai.projects.models.Agent>
  exceptions:
  - type: HttpResponseError for HTTP errors.
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_and_process_run
  name: create_and_process_run
  summary: Creates a new run for an agent thread and processes the run.
  signature: 'async create_and_process_run(thread_id: str, *, agent_id: str, include:
    List[str | RunAdditionalFieldList] | None = None, model: str | None = None, instructions:
    str | None = None, additional_instructions: str | None = None, additional_messages:
    List[ThreadMessageOptions] | None = None, toolset: AsyncToolSet | None = None,
    temperature: float | None = None, top_p: float | None = None, max_prompt_tokens:
    int | None = None, max_completion_tokens: int | None = None, truncation_strategy:
    TruncationObject | None = None, tool_choice: _types.AgentsApiToolChoiceOption
    | None = None, response_format: _types.AgentsApiResponseFormatOption | None =
    None, parallel_tool_calls: bool | None = None, metadata: Dict[str, str] | None
    = None, sleep_interval: int = 1, **kwargs: Any) -> ThreadRun'
  parameters:
  - name: thread_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: agent_id
    description: The ID of the agent that should run the thread. Required.
    types:
    - <xref:str>
  - name: include
    description: 'A list of additional fields to include in the response.

      Currently the only supported value is

      `step_details.tool_calls[*].file_search.results[*].content` to fetch the file
      search result

      content. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.ai.projects.models.RunAdditionalFieldList>]
  - name: model
    description: 'The overridden model name that the agent should use to run the thread.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The overridden system instructions that the agent should use to
      run

      the thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_instructions
    description: 'Additional instructions to append at the end of the

      instructions for the run. This is useful for modifying the behavior

      on a per-run basis without overriding other instructions. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_messages
    description: 'Adds additional messages to the thread before creating the run.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ThreadMessageOptions>]
  - name: toolset
    description: 'The Collection of tools and resources (alternative to *tools* and

      *tool_resources*). Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.AsyncToolSet>
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output

      more random, while lower values like 0.2 will make it more focused and deterministic.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model

      considers the results of the tokens with top_p probability mass. So 0.1 means
      only the tokens

      comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: max_prompt_tokens
    description: 'The maximum number of prompt tokens that may be used over the

      course of the run. The run will make a best effort to use only

      the number of prompt tokens specified, across multiple turns of the run. If
      the run exceeds

      the number of prompt tokens specified,

      the run will end with status `incomplete`. See `incomplete_details` for more
      info. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: max_completion_tokens
    description: 'The maximum number of completion tokens that may be used over

      the course of the run. The run will make a best effort

      to use only the number of completion tokens specified, across multiple turns
      of the run. If

      the run exceeds the number of

      completion tokens specified, the run will end with status `incomplete`. See

      `incomplete_details` for more info. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: truncation_strategy
    description: 'The strategy to use for dropping messages as the context windows

      moves forward. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.TruncationObject>
  - name: tool_choice
    description: 'Controls whether or not and which tool is called by the model. Is
      one of

      the following types: str, Union[str, "_models.AgentsApiToolChoiceOptionMode"],

      AgentsNamedToolChoice Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiToolChoiceOptionMode>
    - <xref:azure.ai.projects.models.AgentsNamedToolChoice>
  - name: response_format
    description: 'Specifies the format that the model must output. Is one of the

      following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

      AgentsApiResponseFormat Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
  - name: parallel_tool_calls
    description: 'If `true` functions will run in parallel during tool use.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sleep_interval
    description: 'The time in seconds to wait between polling the service for run
      status.

      Default value is 1.'
    defaultValue: '1'
    types:
    - <xref:int>
  return:
    description: AgentRunStream.  AgentRunStream is compatible with Iterable and supports
      streaming.
    types:
    - <xref:azure.ai.projects.models.AsyncAgentRunStream>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_message
  name: create_message
  summary: Creates a new message on a specified thread.
  signature: 'async create_message(thread_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, role: str | ~azure.ai.projects.models._enums.MessageRole
    = <object object>, content: str = <object object>, attachments: ~typing.List[~azure.ai.projects.models._patch.MessageAttachment]
    | None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> ThreadMessage'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: role
    description: "The role of the entity that is creating the message. Allowed values\
      \ include:\n\n* `user`: Indicates the message is sent by an actual user and\
      \ should be used in most cases to represent user-generated messages. \n\n* `assistant`:\
      \ Indicates the message is generated by the agent. Use this value to insert\
      \ messages from the agent into the conversation. Known values are: \"user\"\
      \ and \"assistant\". Required."
    defaultValue: <object object at 0x000001A5F49D7510>
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.MessageRole>
  - name: content
    description: 'The textual content of the initial message. Currently, robust input
      including

      images and annotated text may only be provided via

      a separate call to the create message API. Required.'
    defaultValue: <object object at 0x000001A5F49D7510>
    types:
    - <xref:str>
  - name: attachments
    description: 'A list of files attached to the message, and the tools they should
      be

      added to. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.MessageAttachment>]
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ThreadMessage. The ThreadMessage is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadMessage>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_run
  name: create_run
  summary: Creates a new run for an agent thread.
  signature: 'async create_run(thread_id: str, *, agent_id: str, include: List[str
    | _models.RunAdditionalFieldList] | None = None, content_type: str = ''application/json'',
    model: str | None = None, instructions: str | None = None, additional_instructions:
    str | None = None, additional_messages: List[_models.ThreadMessageOptions] | None
    = None, tools: List[_models.ToolDefinition] | None = None, temperature: float
    | None = None, top_p: float | None = None, max_prompt_tokens: int | None = None,
    max_completion_tokens: int | None = None, truncation_strategy: _models.TruncationObject
    | None = None, tool_choice: ''_types.AgentsApiToolChoiceOption'' | None = None,
    response_format: ''_types.AgentsApiResponseFormatOption'' | None = None, parallel_tool_calls:
    bool | None = None, metadata: Dict[str, str] | None = None, **kwargs: Any) ->
    _models.ThreadRun'
  parameters:
  - name: thread_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: agent_id
    description: The ID of the agent that should run the thread. Required.
    defaultValue: <object object at 0x000001A5F49D79A0>
    types:
    - <xref:str>
  - name: include
    description: 'A list of additional fields to include in the response.

      Currently the only supported value is

      `step_details.tool_calls[*].file_search.results[*].content` to fetch the file
      search result

      content. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.ai.projects.models.RunAdditionalFieldList>]
  - name: model
    description: 'The overridden model name that the agent should use to run the thread.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The overridden system instructions that the agent should use to
      run the

      thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_instructions
    description: 'Additional instructions to append at the end of the

      instructions for the run. This is useful for modifying the behavior

      on a per-run basis without overriding other instructions. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_messages
    description: 'Adds additional messages to the thread before creating the run.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ThreadMessageOptions>]
  - name: tools
    description: 'The overridden list of enabled tools that the agent should use to
      run the

      thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolDefinition>]
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output

      more random, while lower values like 0.2 will make it more focused and deterministic.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model

      considers the results of the tokens with top_p probability mass. So 0.1 means
      only the tokens

      comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: max_prompt_tokens
    description: 'The maximum number of prompt tokens that may be used over the

      course of the run. The run will make a best effort to use only

      the number of prompt tokens specified, across multiple turns of the run. If
      the run exceeds

      the number of prompt tokens specified,

      the run will end with status `incomplete`. See `incomplete_details` for more
      info. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: max_completion_tokens
    description: 'The maximum number of completion tokens that may be used over

      the course of the run. The run will make a best effort

      to use only the number of completion tokens specified, across multiple turns
      of the run. If

      the run exceeds the number of

      completion tokens specified, the run will end with status `incomplete`. See

      `incomplete_details` for more info. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: truncation_strategy
    description: 'The strategy to use for dropping messages as the context windows

      moves forward. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.TruncationObject>
  - name: tool_choice
    description: 'Controls whether or not and which tool is called by the model. Is
      one of

      the following types: str, Union[str, "_models.AgentsApiToolChoiceOptionMode"],

      AgentsNamedToolChoice Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiToolChoiceOptionMode>
    - <xref:azure.ai.projects.models.AgentsNamedToolChoice>
  - name: response_format
    description: 'Specifies the format that the model must output. Is one of the

      following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

      AgentsApiResponseFormat Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
  - name: parallel_tool_calls
    description: 'If `true` functions will run in parallel during tool use.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_stream
  name: create_stream
  summary: 'Creates a new run for an agent thread.


    Terminating when the Run enters a terminal state with a *data: [DONE]* message.'
  signature: 'async create_stream(thread_id: str, *, agent_id: str, include: List[str
    | _models.RunAdditionalFieldList] | None = None, content_type: str = ''application/json'',
    model: str | None = None, instructions: str | None = None, additional_instructions:
    str | None = None, additional_messages: List[_models.ThreadMessageOptions] | None
    = None, tools: List[_models.ToolDefinition] | None = None, temperature: float
    | None = None, top_p: float | None = None, max_prompt_tokens: int | None = None,
    max_completion_tokens: int | None = None, truncation_strategy: _models.TruncationObject
    | None = None, tool_choice: ''_types.AgentsApiToolChoiceOption'' | None = None,
    response_format: ''_types.AgentsApiResponseFormatOption'' | None = None, parallel_tool_calls:
    bool | None = None, metadata: Dict[str, str] | None = None, event_handler: None
    = None, **kwargs: Any) -> _models.AsyncAgentRunStream[_models.AsyncAgentEventHandler]'
  parameters:
  - name: thread_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: include
    description: 'A list of additional fields to include in the response.

      Currently the only supported value is

      `step_details.tool_calls[*].file_search.results[*].content` to fetch the file
      search result

      content. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.ai.projects.models.RunAdditionalFieldList>]
  - name: agent_id
    description: The ID of the agent that should run the thread. Required.
    defaultValue: <object object at 0x000001A5F49D79A0>
    types:
    - <xref:str>
  - name: model
    description: 'The overridden model name that the agent should use to run the thread.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The overridden system instructions that the agent should use to
      run the

      thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_instructions
    description: 'Additional instructions to append at the end of the

      instructions for the run. This is useful for modifying the behavior

      on a per-run basis without overriding other instructions. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: additional_messages
    description: 'Adds additional messages to the thread before creating the run.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ThreadMessageOptions>]
  - name: tools
    description: 'The overridden list of enabled tools that the agent should use to
      run the

      thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolDefinition>]
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output

      more random, while lower values like 0.2 will make it more focused and deterministic.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model

      considers the results of the tokens with top_p probability mass. So 0.1 means
      only the tokens

      comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: max_prompt_tokens
    description: 'The maximum number of prompt tokens that may be used over the

      course of the run. The run will make a best effort to use only

      the number of prompt tokens specified, across multiple turns of the run. If
      the run exceeds

      the number of prompt tokens specified,

      the run will end with status `incomplete`. See `incomplete_details` for more
      info. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: max_completion_tokens
    description: 'The maximum number of completion tokens that may be used over

      the course of the run. The run will make a best effort

      to use only the number of completion tokens specified, across multiple turns
      of the run. If

      the run exceeds the number of

      completion tokens specified, the run will end with status `incomplete`. See

      `incomplete_details` for more info. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: truncation_strategy
    description: 'The strategy to use for dropping messages as the context windows

      moves forward. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.TruncationObject>
  - name: tool_choice
    description: 'Controls whether or not and which tool is called by the model. Is
      one of

      the following types: str, Union[str, "_models.AgentsApiToolChoiceOptionMode"],

      AgentsNamedToolChoice Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiToolChoiceOptionMode>
    - <xref:azure.ai.projects.models.AgentsNamedToolChoice>
  - name: response_format
    description: 'Specifies the format that the model must output. Is one of the

      following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

      AgentsApiResponseFormat Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
  - name: parallel_tool_calls
    description: 'If `true` functions will run in parallel during tool use.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: event_handler
    description: 'The event handler to use for processing events during the run. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.AsyncAgentEventHandler>
  return:
    description: AgentRunStream.  AgentRunStream is compatible with Iterable and supports
      streaming.
    types:
    - <xref:azure.ai.projects.models.AsyncAgentRunStream>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_thread
  name: create_thread
  summary: Creates a new thread. Threads contain messages and can be run by agents.
  signature: 'async create_thread(body: ~collections.abc.MutableMapping[str, ~typing.Any]
    | ~typing.IO[bytes] = <object object>, *, messages: ~typing.List[~azure.ai.projects.models._models.ThreadMessageOptions]
    | None = None, tool_resources: ~azure.ai.projects.models._models.ToolResources
    | None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> AgentThread'
  parameters:
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: messages
    description: 'The initial messages to associate with the new thread. Default value
      is

      None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ThreadMessageOptions>]
  - name: tool_resources
    description: 'A set of resources that are made available to the agent''s tools
      in

      this thread. The resources are specific to the

      type of tool. For example, the `code_interpreter` tool requires a list of file
      IDs, while

      the `file_search` tool requires

      a list of vector store IDs. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.ToolResources>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: AgentThread. The AgentThread is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.AgentThread>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_thread_and_run
  name: create_thread_and_run
  summary: Creates a new agent thread and immediately starts a run using that new
    thread.
  signature: 'async create_thread_and_run(body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, agent_id: str = <object
    object>, thread: ~azure.ai.projects.models._models.AgentThreadCreationOptions
    | None = None, model: str | None = None, instructions: str | None = None, tools:
    ~typing.List[~azure.ai.projects.models._models.ToolDefinition] | None = None,
    tool_resources: ~azure.ai.projects.models._models.UpdateToolResourcesOptions |
    None = None, stream_parameter: bool | None = None, temperature: float | None =
    None, top_p: float | None = None, max_prompt_tokens: int | None = None, max_completion_tokens:
    int | None = None, truncation_strategy: ~azure.ai.projects.models._models.TruncationObject
    | None = None, tool_choice: _types.AgentsApiToolChoiceOption | None = None, response_format:
    _types.AgentsApiResponseFormatOption | None = None, parallel_tool_calls: bool
    | None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> ThreadRun'
  parameters:
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: agent_id
    description: The ID of the agent for which the thread should be created. Required.
    defaultValue: <object object at 0x000001A5F49D7510>
    types:
    - <xref:str>
  - name: thread
    description: 'The details used to create the new thread. If no thread is provided,
      an empty

      one will be created. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.AgentThreadCreationOptions>
  - name: model
    description: 'The overridden model that the agent should use to run the thread.
      Default value

      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The overridden system instructions the agent should use to run the

      thread. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tools
    description: 'The overridden list of enabled tools the agent should use to run
      the thread.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolDefinition>]
  - name: tool_resources
    description: 'Override the tools the agent can use for this run. This is useful
      for

      modifying the behavior on a per-run basis. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.UpdateToolResourcesOptions>
  - name: stream_parameter
    description: 'If `true`, returns a stream of events that happen during the

      Run as server-sent events,

      terminating when the Run enters a terminal state with a `data: [DONE]` message.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output

      more random, while lower values like 0.2 will make it more focused and deterministic.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model

      considers the results of the tokens with top_p probability mass. So 0.1 means
      only the tokens

      comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: max_prompt_tokens
    description: 'The maximum number of prompt tokens that may be used over the

      course of the run. The run will make a best effort to use only

      the number of prompt tokens specified, across multiple turns of the run. If
      the run exceeds

      the number of prompt tokens specified,

      the run will end with status `incomplete`. See `incomplete_details` for more
      info. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: max_completion_tokens
    description: 'The maximum number of completion tokens that may be used over

      the course of the run. The run will make a best effort to use only

      the number of completion tokens specified, across multiple turns of the run.
      If the run

      exceeds the number of completion tokens

      specified, the run will end with status `incomplete`. See `incomplete_details`
      for more

      info. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: truncation_strategy
    description: 'The strategy to use for dropping messages as the context windows

      moves forward. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.TruncationObject>
  - name: tool_choice
    description: 'Controls whether or not and which tool is called by the model. Is
      one of

      the following types: str, Union[str, "_models.AgentsApiToolChoiceOptionMode"],

      AgentsNamedToolChoice Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiToolChoiceOptionMode>
    - <xref:azure.ai.projects.models.AgentsNamedToolChoice>
  - name: response_format
    description: 'Specifies the format that the model must output. Is one of the

      following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

      AgentsApiResponseFormat, ResponseFormatJsonSchemaType Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
    - <xref:azure.ai.projects.models.ResponseFormatJsonSchemaType>
  - name: parallel_tool_calls
    description: 'If `true` functions will run in parallel during tool use.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store
  name: create_vector_store
  summary: Creates a vector store.
  signature: 'async create_vector_store(body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, file_ids: ~typing.List[str]
    | None = None, name: str | None = None, store_configuration: ~azure.ai.projects.models._models.VectorStoreConfiguration
    | None = None, expires_after: ~azure.ai.projects.models._models.VectorStoreExpirationPolicy
    | None = None, chunking_strategy: ~azure.ai.projects.models._models.VectorStoreChunkingStrategyRequest
    | None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> VectorStore'
  parameters:
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_ids
    description: 'A list of file IDs that the vector store should use. Useful for
      tools like

      `file_search` that can access files. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: name
    description: The name of the vector store. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: store_configuration
    description: 'The vector store configuration, used when vector store is created

      from Azure asset URIs. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreConfiguration>
  - name: expires_after
    description: Details on when this vector store expires. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreExpirationPolicy>
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Only applicable if file_ids is non-empty. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: VectorStore. The VectorStore is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store_and_poll
  name: create_vector_store_and_poll
  summary: Creates a vector store and poll.
  signature: 'async create_vector_store_and_poll(body: JSON, *, content_type: str
    = ''application/json'', sleep_interval: float = 1, **kwargs: Any) -> _models.VectorStore'
  parameters:
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Content type parameter for binary body.

      Default value is "application/json".'
    defaultValue: application/json
    types:
    - <xref:str>
  - name: file_ids
    description: 'A list of file IDs that the vector store should use. Useful for
      tools like

      `file_search` that can access files. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: name
    description: The name of the vector store. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: data_sources
    description: List of Azure assets. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.VectorStoreDataSource>]
  - name: expires_after
    description: Details on when this vector store expires. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreExpirationPolicy>
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Only applicable if file_ids is non-empty. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sleep_interval
    description: 'Time to wait before polling for the status of the vector store.
      Default value

      is 1.'
    defaultValue: '1'
    types:
    - <xref:float>
  return:
    description: VectorStore. The VectorStore is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store_file
  name: create_vector_store_file
  summary: Create a vector store file by attaching a file to a vector store.
  signature: 'async create_vector_store_file(vector_store_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, file_id: str | None = None,
    data_source: ~azure.ai.projects.models._models.VectorStoreDataSource | None =
    None, chunking_strategy: ~azure.ai.projects.models._models.VectorStoreChunkingStrategyRequest
    | None = None, **kwargs: ~typing.Any) -> VectorStoreFile'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_id
    description: Identifier of the file. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: data_source
    description: Azure asset ID. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreDataSource>
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  return:
    description: VectorStoreFile. The VectorStoreFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store_file_and_poll
  name: create_vector_store_file_and_poll
  summary: Create a vector store file by attaching a file to a vector store.
  signature: 'async create_vector_store_file_and_poll(vector_store_id: str, body:
    JSON, *, content_type: str = ''application/json'', sleep_interval: float = 1,
    **kwargs: Any) -> _models.VectorStoreFile'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: content_type
    description: Body Parameter content-type. Defaults to 'application/json'.
    defaultValue: application/json
    types:
    - <xref:str>
  - name: file_id
    description: Identifier of the file. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: data_source
    description: Azure asset ID. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreDataSource>
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  - name: sleep_interval
    description: 'Time to wait before polling for the status of the vector store.
      Default value

      is 1.'
    defaultValue: '1'
    types:
    - <xref:float>
  return:
    description: VectorStoreFile. The VectorStoreFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store_file_batch
  name: create_vector_store_file_batch
  summary: Create a vector store file batch.
  signature: 'async create_vector_store_file_batch(vector_store_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, file_ids: ~typing.List[str]
    | None = None, data_sources: ~typing.List[~azure.ai.projects.models._models.VectorStoreDataSource]
    | None = None, chunking_strategy: ~azure.ai.projects.models._models.VectorStoreChunkingStrategyRequest
    | None = None, **kwargs: ~typing.Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_ids
    description: List of file identifiers. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: data_sources
    description: List of Azure assets. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.VectorStoreDataSource>]
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.create_vector_store_file_batch_and_poll
  name: create_vector_store_file_batch_and_poll
  summary: Create a vector store file batch and poll.
  signature: 'async create_vector_store_file_batch_and_poll(vector_store_id: str,
    body: JSON, *, content_type: str = ''application/json'', sleep_interval: float
    = 1, **kwargs: Any) -> _models.VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: file_ids
    description: List of file identifiers. Required.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: data_sources
    description: List of Azure assets. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.client.models.VectorStoreDataSource>]
  - name: chunking_strategy
    description: 'The chunking strategy used to chunk the file(s). If not set, will

      use the auto strategy. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreChunkingStrategyRequest>
  - name: content_type
    description: Body parameter content-type. Defaults to "application/json".
    defaultValue: application/json
    types:
    - <xref:str>
  - name: sleep_interval
    description: 'Time to wait before polling for the status of the vector store.
      Default value

      is 1.'
    defaultValue: '1'
    types:
    - <xref:float>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.delete_agent
  name: delete_agent
  summary: Deletes an agent.
  signature: 'async delete_agent(agent_id: str, **kwargs: Any) -> AgentDeletionStatus'
  parameters:
  - name: agent_id
    description: Identifier of the agent. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AgentDeletionStatus. The AgentDeletionStatus is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.AgentDeletionStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.delete_file
  name: delete_file
  summary: Delete a previously uploaded file.
  signature: 'async delete_file(file_id: str, **kwargs: Any) -> FileDeletionStatus'
  parameters:
  - name: file_id
    description: The ID of the file to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: FileDeletionStatus. The FileDeletionStatus is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.FileDeletionStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.delete_thread
  name: delete_thread
  summary: Deletes an existing thread.
  signature: 'async delete_thread(thread_id: str, **kwargs: Any) -> ThreadDeletionStatus'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ThreadDeletionStatus. The ThreadDeletionStatus is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadDeletionStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.delete_vector_store
  name: delete_vector_store
  summary: Deletes the vector store object matching the specified ID.
  signature: 'async delete_vector_store(vector_store_id: str, **kwargs: Any) -> VectorStoreDeletionStatus'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'VectorStoreDeletionStatus. The VectorStoreDeletionStatus is compatible
      with

      MutableMapping'
    types:
    - <xref:azure.ai.projects.models.VectorStoreDeletionStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.delete_vector_store_file
  name: delete_vector_store_file
  summary: 'Delete a vector store file. This will remove the file from the vector
    store but the file itself

    will not be deleted.

    To delete the file, use the delete file endpoint.'
  signature: 'async delete_vector_store_file(vector_store_id: str, file_id: str, **kwargs:
    Any) -> VectorStoreFileDeletionStatus'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: Identifier of the file. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'VectorStoreFileDeletionStatus. The VectorStoreFileDeletionStatus
      is compatible with

      MutableMapping'
    types:
    - <xref:azure.ai.projects.models.VectorStoreFileDeletionStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_agent
  name: get_agent
  summary: Retrieves an existing agent.
  signature: 'async get_agent(agent_id: str, **kwargs: Any) -> Agent'
  parameters:
  - name: agent_id
    description: Identifier of the agent. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Agent. The Agent is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.Agent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_file
  name: get_file
  summary: Returns information about a specific file. Does not retrieve file content.
  signature: 'async get_file(file_id: str, **kwargs: Any) -> OpenAIFile'
  parameters:
  - name: file_id
    description: The ID of the file to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: OpenAIFile. The OpenAIFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.OpenAIFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_file_content
  name: get_file_content
  summary: Asynchronously returns file content as a byte stream for the given file_id.
  signature: 'async get_file_content(file_id: str, **kwargs: Any) -> AsyncIterator[bytes]'
  parameters:
  - name: file_id
    description: The ID of the file to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An async iterator that yields bytes from the file content.
    types:
    - <xref:typing.AsyncIterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
    description: If the HTTP request fails.
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_message
  name: get_message
  summary: Gets an existing message from an existing thread.
  signature: 'async get_message(thread_id: str, message_id: str, **kwargs: Any) ->
    ThreadMessage'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: message_id
    description: Identifier of the message. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ThreadMessage. The ThreadMessage is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadMessage>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_run
  name: get_run
  summary: Gets an existing run from an existing thread.
  signature: 'async get_run(thread_id: str, run_id: str, **kwargs: Any) -> ThreadRun'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Identifier of the run. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_run_step
  name: get_run_step
  summary: Gets a single run step from a thread run.
  signature: 'async get_run_step(thread_id: str, run_id: str, step_id: str, *, include:
    List[str | RunAdditionalFieldList] | None = None, **kwargs: Any) -> RunStep'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Identifier of the run. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: step_id
    description: Identifier of the run step. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: include
    description: 'A list of additional fields to include in the response.

      Currently the only supported value is

      `step_details.tool_calls[*].file_search.results[*].content` to fetch the file
      search result

      content. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.ai.projects.models.RunAdditionalFieldList>]
  return:
    description: RunStep. The RunStep is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.RunStep>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_thread
  name: get_thread
  summary: Gets information about an existing thread.
  signature: 'async get_thread(thread_id: str, **kwargs: Any) -> AgentThread'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AgentThread. The AgentThread is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.AgentThread>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_vector_store
  name: get_vector_store
  summary: Returns the vector store object matching the specified ID.
  signature: 'async get_vector_store(vector_store_id: str, **kwargs: Any) -> VectorStore'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStore. The VectorStore is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_vector_store_file
  name: get_vector_store_file
  summary: Retrieves a vector store file.
  signature: 'async get_vector_store_file(vector_store_id: str, file_id: str, **kwargs:
    Any) -> VectorStoreFile'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_id
    description: Identifier of the file. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStoreFile. The VectorStoreFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.get_vector_store_file_batch
  name: get_vector_store_file_batch
  summary: Retrieve a vector store file batch.
  signature: 'async get_vector_store_file_batch(vector_store_id: str, batch_id: str,
    **kwargs: Any) -> VectorStoreFileBatch'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: VectorStoreFileBatch. The VectorStoreFileBatch is compatible with
      MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStoreFileBatch>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_agents
  name: list_agents
  summary: Gets a list of agents that were previously created.
  signature: 'async list_agents(*, limit: int | None = None, order: str | ListSortOrder
    | None = None, after: str | None = None, before: str | None = None, **kwargs:
    Any) -> OpenAIPageableListOfAgent'
  keywordOnlyParameters:
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfAgent. The OpenAIPageableListOfAgent is compatible
      with

      MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfAgent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_files
  name: list_files
  summary: Gets a list of previously uploaded files.
  signature: 'async list_files(*, purpose: str | FilePurpose | None = None, **kwargs:
    Any) -> FileListResponse'
  keywordOnlyParameters:
  - name: purpose
    description: 'The purpose of the file. Known values are: "fine-tune", "fine-tune-results",

      "assistants", "assistants_output", "batch", "batch_output", and "vision". Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.FilePurpose>
  return:
    description: FileListResponse. The FileListResponse is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.FileListResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_messages
  name: list_messages
  summary: Gets a list of messages that exist on a thread.
  signature: 'async list_messages(thread_id: str, *, run_id: str | None = None, limit:
    int | None = None, order: str | ListSortOrder | None = None, after: str | None
    = None, before: str | None = None, **kwargs: Any) -> OpenAIPageableListOfThreadMessage'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: run_id
    description: Filter messages by the run ID that generated them. Default value
      is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfThreadMessage. The OpenAIPageableListOfThreadMessage
      is compatible

      with MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfThreadMessage>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_run_steps
  name: list_run_steps
  summary: Gets a list of run steps from a thread run.
  signature: 'async list_run_steps(thread_id: str, run_id: str, *, include: List[str
    | RunAdditionalFieldList] | None = None, limit: int | None = None, order: str
    | ListSortOrder | None = None, after: str | None = None, before: str | None =
    None, **kwargs: Any) -> OpenAIPageableListOfRunStep'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Identifier of the run. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: include
    description: 'A list of additional fields to include in the response.

      Currently the only supported value is

      `step_details.tool_calls[*].file_search.results[*].content` to fetch the file
      search result

      content. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.ai.projects.models.RunAdditionalFieldList>]
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfRunStep. The OpenAIPageableListOfRunStep is
      compatible with

      MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfRunStep>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_runs
  name: list_runs
  summary: Gets a list of runs for a specified thread.
  signature: 'async list_runs(thread_id: str, *, limit: int | None = None, order:
    str | ListSortOrder | None = None, after: str | None = None, before: str | None
    = None, **kwargs: Any) -> OpenAIPageableListOfThreadRun'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfThreadRun. The OpenAIPageableListOfThreadRun
      is compatible with

      MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_vector_store_file_batch_files
  name: list_vector_store_file_batch_files
  summary: Returns a list of vector store files in a batch.
  signature: 'async list_vector_store_file_batch_files(vector_store_id: str, batch_id:
    str, *, filter: str | VectorStoreFileStatusFilter | None = None, limit: int |
    None = None, order: str | ListSortOrder | None = None, after: str | None = None,
    before: str | None = None, **kwargs: Any) -> OpenAIPageableListOfVectorStoreFile'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: batch_id
    description: Identifier of the file batch. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: 'Filter by file status. Known values are: "in_progress", "completed",
      "failed",

      and "cancelled". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.VectorStoreFileStatusFilter>
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfVectorStoreFile. The OpenAIPageableListOfVectorStoreFile
      is

      compatible with MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfVectorStoreFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_vector_store_files
  name: list_vector_store_files
  summary: Returns a list of vector store files.
  signature: 'async list_vector_store_files(vector_store_id: str, *, filter: str |
    VectorStoreFileStatusFilter | None = None, limit: int | None = None, order: str
    | ListSortOrder | None = None, after: str | None = None, before: str | None =
    None, **kwargs: Any) -> OpenAIPageableListOfVectorStoreFile'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: 'Filter by file status. Known values are: "in_progress", "completed",
      "failed",

      and "cancelled". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.VectorStoreFileStatusFilter>
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfVectorStoreFile. The OpenAIPageableListOfVectorStoreFile
      is

      compatible with MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfVectorStoreFile>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.list_vector_stores
  name: list_vector_stores
  summary: Returns a list of vector stores.
  signature: 'async list_vector_stores(*, limit: int | None = None, order: str | ListSortOrder
    | None = None, after: str | None = None, before: str | None = None, **kwargs:
    Any) -> OpenAIPageableListOfVectorStore'
  keywordOnlyParameters:
  - name: limit
    description: 'A limit on the number of objects to be returned. Limit can range
      between 1 and

      100, and the default is 20. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: order
    description: 'Sort order by the created_at timestamp of the objects. asc for ascending
      order

      and desc for descending order. Known values are: "asc" and "desc". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.ai.projects.models.ListSortOrder>
  - name: after
    description: 'A cursor for use in pagination. after is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include after=obj_foo in order to fetch the
      next page of the

      list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: before
    description: 'A cursor for use in pagination. before is an object ID that defines
      your place

      in the list. For instance, if you make a list request and receive 100 objects,
      ending with

      obj_foo, your subsequent call can include before=obj_foo in order to fetch the
      previous page of

      the list. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: 'OpenAIPageableListOfVectorStore. The OpenAIPageableListOfVectorStore
      is compatible

      with MutableMapping'
    types:
    - <xref:azure.ai.projects.models.OpenAIPageableListOfVectorStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.modify_vector_store
  name: modify_vector_store
  summary: The ID of the vector store to modify.
  signature: 'async modify_vector_store(vector_store_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, name: str | None = None,
    expires_after: ~azure.ai.projects.models._models.VectorStoreExpirationPolicy |
    None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> VectorStore'
  parameters:
  - name: vector_store_id
    description: Identifier of the vector store. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: name
    description: The name of the vector store. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: expires_after
    description: Details on when this vector store expires. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.VectorStoreExpirationPolicy>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: VectorStore. The VectorStore is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.VectorStore>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.save_file
  name: save_file
  summary: Asynchronously saves file content retrieved using a file identifier to
    the specified local directory.
  signature: 'async save_file(file_id: str, file_name: str, target_dir: str | Path
    | None = None) -> None'
  parameters:
  - name: file_id
    description: The unique identifier for the file to retrieve.
    isRequired: true
    types:
    - <xref:str>
  - name: file_name
    description: The name of the file to be saved.
    isRequired: true
    types:
    - <xref:str>
  - name: target_dir
    description: The directory where the file should be saved. Defaults to the current
      working directory.
    defaultValue: None
    types:
    - <xref:str>
    - <xref:Path>
  exceptions:
  - type: ValueError
    description: If the target path is not a directory or the file name is invalid.
  - type: RuntimeError
    description: If file content retrieval fails or no content is found.
  - type: TypeError
    description: If retrieved chunks are not bytes-like objects.
  - type: IOError
    description: If writing to the file fails.
- uid: azure.ai.projects.aio.operations.AgentsOperations.submit_tool_outputs_to_run
  name: submit_tool_outputs_to_run
  summary: 'Submits outputs from tools as requested by tool calls in a run. Runs that
    need submitted tool

    outputs will have a status of ''requires_action'' with a required_action.type
    of

    ''submit_tool_outputs''.'
  signature: 'async submit_tool_outputs_to_run(thread_id: str, run_id: str, *, tool_outputs:
    List[_models.ToolOutput], content_type: str = ''application/json'', **kwargs:
    Any) -> _models.ThreadRun'
  parameters:
  - name: thread_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: tool_outputs
    description: Required.
    defaultValue: <object object at 0x000001A5F49D79A0>
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolOutput>]
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.submit_tool_outputs_to_stream
  name: submit_tool_outputs_to_stream
  summary: 'Submits outputs from tools as requested by tool calls in a stream. Runs
    that need submitted tool

    outputs will have a status of ''requires_action'' with a required_action.type
    of

    ''submit_tool_outputs''.  terminating when the Run enters a terminal state with
    a `data: [DONE]` message.'
  signature: 'async submit_tool_outputs_to_stream(thread_id: str, run_id: str, body:
    JSON | IO[bytes], *, event_handler: _models.BaseAsyncAgentEventHandler, content_type:
    str = ''application/json'', **kwargs: Any) -> None'
  parameters:
  - name: thread_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: tool_outputs
    description: Required.
    defaultValue: <object object at 0x000001A5F49D79A0>
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolOutput>]
  - name: event_handler
    description: The event handler to use for processing events during the run.
    types:
    - <xref:azure.ai.projects.models.AsyncAgentEventHandler>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.update_agent
  name: update_agent
  summary: Modifies an existing agent.
  signature: 'async update_agent(agent_id: str, *, content_type: str = ''application/json'',
    model: str | None = None, name: str | None = None, description: str | None = None,
    instructions: str | None = None, tools: List[_models.ToolDefinition] | None =
    None, tool_resources: _models.ToolResources | None = None, temperature: float
    | None = None, top_p: float | None = None, response_format: ''_types.AgentsApiResponseFormatOption''
    | None = None, metadata: Dict[str, str] | None = None, **kwargs: Any) -> _models.Agent'
  parameters:
  - name: agent_id
    description: The ID of the agent to modify. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: model
    description: The ID of the model to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: name
    description: The modified name for the agent to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: description
    description: The modified description for the agent to use. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  - name: instructions
    description: 'The modified system instructions for the new agent to use. Default
      value

      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tools
    description: 'The modified collection of tools to enable for the agent. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.ai.projects.models.ToolDefinition>]
  - name: tool_resources
    description: 'A set of resources that are used by the agent''s tools. The resources

      are specific to the type of tool. For example,

      the `code_interpreter` tool requires a list of file IDs, while the `file_search`
      tool

      requires a list of vector store IDs. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.ToolResources>
  - name: toolset
    description: 'The Collection of tools and resources (alternative to *tools* and
      *tool_resources*

      and adds automatic execution logic for functions). Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.AsyncToolSet>
  - name: temperature
    description: 'What sampling temperature to use, between 0 and 2. Higher values
      like 0.8

      will make the output more random,

      while lower values like 0.2 will make it more focused and deterministic. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: top_p
    description: 'An alternative to sampling with temperature, called nucleus sampling,
      where the

      model considers the results of the tokens with top_p probability mass.

      So 0.1 means only the tokens comprising the top 10% probability mass are considered.


      We generally recommend altering this or temperature but not both. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:float>
  - name: response_format
    description: 'The response format of the tool calls used by this agent. Is one
      of

      the following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

      AgentsApiResponseFormat Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:str>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
    - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
  - name: content_type
    description: 'Body Parameter content-type. Content type parameter for JSON body.

      Default value is "application/json".'
    defaultValue: application/json
    types:
    - <xref:str>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: Agent. The Agent is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.Agent>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.update_message
  name: update_message
  summary: Modifies an existing message on an existing thread.
  signature: 'async update_message(thread_id: str, message_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, metadata: ~typing.Dict[str,
    str] | None = None, **kwargs: ~typing.Any) -> ThreadMessage'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: message_id
    description: Identifier of the message. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ThreadMessage. The ThreadMessage is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadMessage>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.update_run
  name: update_run
  summary: Modifies an existing thread run.
  signature: 'async update_run(thread_id: str, run_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, metadata: ~typing.Dict[str,
    str] | None = None, **kwargs: ~typing.Any) -> ThreadRun'
  parameters:
  - name: thread_id
    description: Identifier of the thread. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: run_id
    description: Identifier of the run. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ThreadRun. The ThreadRun is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.ThreadRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.update_thread
  name: update_thread
  summary: Modifies an existing thread.
  signature: 'async update_thread(thread_id: str, body: ~collections.abc.MutableMapping[str,
    ~typing.Any] | ~typing.IO[bytes] = <object object>, *, tool_resources: ~azure.ai.projects.models._models.ToolResources
    | None = None, metadata: ~typing.Dict[str, str] | None = None, **kwargs: ~typing.Any)
    -> AgentThread'
  parameters:
  - name: thread_id
    description: The ID of the thread to modify. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Is either a JSON type or a IO[bytes] type. Required.
    types:
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: tool_resources
    description: 'A set of resources that are made available to the agent''s tools
      in

      this thread. The resources are specific to the

      type of tool. For example, the `code_interpreter` tool requires a list of file
      IDs, while

      the `file_search` tool requires

      a list of vector store IDs. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.ai.projects.models.ToolResources>
  - name: metadata
    description: 'A set of up to 16 key/value pairs that can be attached to an object,
      used

      for storing additional information about that object in a structured format.
      Keys may be up to

      64 characters in length and values may be up to 512 characters in length. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: AgentThread. The AgentThread is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.AgentThread>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.projects.aio.operations.AgentsOperations.upload_file
  name: upload_file
  summary: Uploads a file for use by other operations, delegating to the generated
    operations.
  signature: 'async upload_file(*, file_path: str, purpose: str | _models.FilePurpose,
    **kwargs: Any) -> _models.OpenAIFile'
  parameters:
  - name: body
    description: JSON. Required if *file* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:JSON>]
  keywordOnlyParameters:
  - name: file
    description: File content. Required if *body* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:FileType>]
  - name: file_path
    description: Path to the file. Required if *body* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: purpose
    description: 'Known values are: "fine-tune", "fine-tune-results", "assistants",

      "assistants_output", "batch", "batch_output", and "vision". Required if *body*
      and *file* are not provided.'
    defaultValue: None
    types:
    - <xref:typing.Union>[<xref:str>, <xref:_models.FilePurpose>, <xref:None>]
  - name: filename
    description: The name of the file.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  return:
    description: OpenAIFile. The OpenAIFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.OpenAIFile>
  exceptions:
  - type: FileNotFoundError
    description: If the file_path is invalid.
  - type: IOError
    description: If there are issues with reading the file.
  - type: HttpResponseError for HTTP errors.
- uid: azure.ai.projects.aio.operations.AgentsOperations.upload_file_and_poll
  name: upload_file_and_poll
  summary: Uploads a file for use by other operations, delegating to the generated
    operations.
  signature: 'async upload_file_and_poll(body: JSON, *, sleep_interval: float = 1,
    **kwargs: Any) -> _models.OpenAIFile'
  parameters:
  - name: body
    description: JSON. Required if *file* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:JSON>]
  keywordOnlyParameters:
  - name: file
    description: File content. Required if *body* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:FileType>]
  - name: file_path
    description: Path to the file. Required if *body* and *purpose* are not provided.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: purpose
    description: 'Known values are: "fine-tune", "fine-tune-results", "assistants",

      "assistants_output", "batch", "batch_output", and "vision". Required if *body*
      and *file* are not provided.'
    defaultValue: None
    types:
    - <xref:typing.Union>[<xref:str>, <xref:_models.FilePurpose>, <xref:None>]
  - name: filename
    description: The name of the file.
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>]
  - name: sleep_interval
    description: 'Time to wait before polling for the status of the uploaded file.
      Default value

      is 1.'
    defaultValue: '1'
    types:
    - <xref:float>
  return:
    description: OpenAIFile. The OpenAIFile is compatible with MutableMapping
    types:
    - <xref:azure.ai.projects.models.OpenAIFile>
  exceptions:
  - type: FileNotFoundError
    description: If the file_path is invalid.
  - type: IOError
    description: If there are issues with reading the file.
  - type: HttpResponseError for HTTP errors.
