### YamlMime:PythonClass
uid: azure.ai.projects.models.Agent
name: Agent
fullName: azure.ai.projects.models.Agent
module: azure.ai.projects.models
summary: Represents an agent that can call the model and use tools.
constructor:
  syntax: 'Agent(*args: Any, **kwargs: Any)'
variables:
- description: The identifier, which can be referenced in API endpoints. Required.
  name: id
  types:
  - <xref:str>
- description: 'The object type, which is always assistant. Required. Default value
    is

    "assistant".'
  name: object
  types:
  - <xref:str>
- description: 'The Unix timestamp, in seconds, representing when this object was
    created.

    Required.'
  name: created_at
  types:
  - <xref:datetime.datetime>
- description: The name of the agent. Required.
  name: name
  types:
  - <xref:str>
- description: The description of the agent. Required.
  name: description
  types:
  - <xref:str>
- description: The ID of the model to use. Required.
  name: model
  types:
  - <xref:str>
- description: The system instructions for the agent to use. Required.
  name: instructions
  types:
  - <xref:str>
- description: The collection of tools enabled for the agent. Required.
  name: tools
  types:
  - <xref:list>[<xref:azure.ai.projects.models.ToolDefinition>]
- description: 'A set of resources that are used by the agent''s tools. The resources
    are

    specific to the type of tool. For example, the `code_interpreter`

    tool requires a list of file IDs, while the `file_search` tool requires a list
    of vector

    store IDs. Required.'
  name: tool_resources
  types:
  - <xref:azure.ai.projects.models.ToolResources>
- description: 'What sampling temperature to use, between 0 and 2. Higher values like
    0.8

    will make the output more random,

    while lower values like 0.2 will make it more focused and deterministic. Required.'
  name: temperature
  types:
  - <xref:float>
- description: 'An alternative to sampling with temperature, called nucleus sampling,
    where the

    model considers the results of the tokens with top_p probability mass.

    So 0.1 means only the tokens comprising the top 10% probability mass are considered.


    We generally recommend altering this or temperature but not both. Required.'
  name: top_p
  types:
  - <xref:float>
- description: 'The response format of the tool calls used by this agent. Is one of
    the

    following types: str, Union[str, "_models.AgentsApiResponseFormatMode"],

    AgentsApiResponseFormat, ResponseFormatJsonSchemaType'
  name: response_format
  types:
  - <xref:str>
  - <xref:str>
  - <xref:azure.ai.projects.models.AgentsApiResponseFormatMode>
  - <xref:azure.ai.projects.models.AgentsApiResponseFormat>
  - <xref:azure.ai.projects.models.ResponseFormatJsonSchemaType>
- description: 'A set of up to 16 key/value pairs that can be attached to an object,
    used for

    storing additional information about that object in a structured format. Keys
    may be up to 64

    characters in length and values may be up to 512 characters in length. Required.'
  name: metadata
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.projects.models.Agent.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.Agent.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.Agent.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.Agent.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.Agent.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.Agent.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.Agent.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.Agent.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.Agent.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.Agent.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.Agent.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.Agent.created_at
  name: created_at
  summary: The Unix timestamp, in seconds, representing when this object was created.
    Required.
  signature: 'created_at: datetime'
- uid: azure.ai.projects.models.Agent.description
  name: description
  summary: The description of the agent. Required.
  signature: 'description: str'
- uid: azure.ai.projects.models.Agent.id
  name: id
  summary: The identifier, which can be referenced in API endpoints. Required.
  signature: 'id: str'
- uid: azure.ai.projects.models.Agent.instructions
  name: instructions
  summary: The system instructions for the agent to use. Required.
  signature: 'instructions: str'
- uid: azure.ai.projects.models.Agent.metadata
  name: metadata
  summary: 'A set of up to 16 key/value pairs that can be attached to an object, used
    for storing

    additional information about that object in a structured format. Keys may be up
    to 64

    characters in length and values may be up to 512 characters in length. Required.'
  signature: 'metadata: Dict[str, str]'
- uid: azure.ai.projects.models.Agent.model
  name: model
  summary: The ID of the model to use. Required.
  signature: 'model: str'
- uid: azure.ai.projects.models.Agent.name
  name: name
  summary: The name of the agent. Required.
  signature: 'name: str'
- uid: azure.ai.projects.models.Agent.object
  name: object
  summary: The object type, which is always assistant. Required. Default value is
    "assistant".
  signature: 'object: Literal[''assistant'']'
- uid: azure.ai.projects.models.Agent.response_format
  name: response_format
  summary: 'str,

    Union[str, "_models.AgentsApiResponseFormatMode"], AgentsApiResponseFormat,

    ResponseFormatJsonSchemaType'
  signature: 'response_format: _types.AgentsApiResponseFormatOption | None'
- uid: azure.ai.projects.models.Agent.temperature
  name: temperature
  summary: 'What sampling temperature to use, between 0 and 2. Higher values like
    0.8 will make the output

    more random,

    while lower values like 0.2 will make it more focused and deterministic. Required.'
  signature: 'temperature: float'
- uid: azure.ai.projects.models.Agent.tool_resources
  name: tool_resources
  summary: 'A set of resources that are used by the agent''s tools. The resources
    are specific to the type

    of tool. For example, the `code_interpreter`

    tool requires a list of file IDs, while the `file_search` tool requires a list
    of vector

    store IDs. Required.'
  signature: 'tool_resources: _models.ToolResources'
- uid: azure.ai.projects.models.Agent.tools
  name: tools
  summary: The collection of tools enabled for the agent. Required.
  signature: 'tools: List[_models.ToolDefinition]'
- uid: azure.ai.projects.models.Agent.top_p
  name: top_p
  summary: 'An alternative to sampling with temperature, called nucleus sampling,
    where the model considers

    the results of the tokens with top_p probability mass.

    So 0.1 means only the tokens comprising the top 10% probability mass are considered.


    We generally recommend altering this or temperature but not both. Required.'
  signature: 'top_p: float'
