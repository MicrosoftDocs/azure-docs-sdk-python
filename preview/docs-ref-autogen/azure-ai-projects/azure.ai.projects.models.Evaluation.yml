### YamlMime:PythonClass
uid: azure.ai.projects.models.Evaluation
name: Evaluation
fullName: azure.ai.projects.models.Evaluation
module: azure.ai.projects.models
summary: Evaluation Definition.
constructor:
  syntax: 'Evaluation(*args: Any, **kwargs: Any)'
variables:
- description: Identifier of the evaluation. Required.
  name: id
  types:
  - <xref:str>
- description: Data for evaluation. Required.
  name: data
  types:
  - <xref:azure.ai.projects.models.InputData>
- description: Evaluation target specifying the model config and parameters.
  name: target
  types:
  - <xref:azure.ai.projects.models.EvaluationTarget>
- description: 'Display Name for evaluation. It helps to find the evaluation easily
    in AI

    Foundry. It does not need to be unique.'
  name: display_name
  types:
  - <xref:str>
- description: 'Description of the evaluation. It can be used to store additional

    information about the evaluation and is mutable.'
  name: description
  types:
  - <xref:str>
- description: Metadata containing createdBy and modifiedBy information.
  name: system_data
  types:
  - <xref:azure.ai.projects.models.SystemData>
- description: Status of the evaluation. It is set by service and is read-only.
  name: status
  types:
  - <xref:str>
- description: Evaluation's tags. Unlike properties, tags are fully mutable.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'Evaluation''s properties. Unlike tags, properties are add-only. Once
    added, a

    property cannot be removed.'
  name: properties
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Evaluators to be used for the evaluation. Required.
  name: evaluators
  types:
  - <xref:dict>[<xref:str>, <xref:azure.ai.projects.models.EvaluatorConfiguration>]
methods:
- uid: azure.ai.projects.models.Evaluation.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.Evaluation.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.Evaluation.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.Evaluation.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.Evaluation.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.Evaluation.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.Evaluation.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.Evaluation.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.Evaluation.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.Evaluation.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.Evaluation.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.Evaluation.data
  name: data
  summary: Data for evaluation. Required.
  signature: 'data: _models.InputData'
- uid: azure.ai.projects.models.Evaluation.description
  name: description
  summary: 'Description of the evaluation. It can be used to store additional information
    about the

    evaluation and is mutable.'
  signature: 'description: str | None'
- uid: azure.ai.projects.models.Evaluation.display_name
  name: display_name
  summary: 'Display Name for evaluation. It helps to find the evaluation easily in
    AI Foundry. It does not

    need to be unique.'
  signature: 'display_name: str | None'
- uid: azure.ai.projects.models.Evaluation.evaluators
  name: evaluators
  summary: Evaluators to be used for the evaluation. Required.
  signature: 'evaluators: Dict[str, _models.EvaluatorConfiguration]'
- uid: azure.ai.projects.models.Evaluation.id
  name: id
  summary: Identifier of the evaluation. Required.
  signature: 'id: str'
- uid: azure.ai.projects.models.Evaluation.properties
  name: properties
  summary: 'Evaluation''s properties. Unlike tags, properties are add-only. Once added,
    a property cannot be

    removed.'
  signature: 'properties: Dict[str, str] | None'
- uid: azure.ai.projects.models.Evaluation.status
  name: status
  summary: Status of the evaluation. It is set by service and is read-only.
  signature: 'status: str | None'
- uid: azure.ai.projects.models.Evaluation.system_data
  name: system_data
  summary: Metadata containing createdBy and modifiedBy information.
  signature: 'system_data: _models.SystemData | None'
- uid: azure.ai.projects.models.Evaluation.tags
  name: tags
  summary: Evaluation's tags. Unlike properties, tags are fully mutable.
  signature: 'tags: Dict[str, str] | None'
- uid: azure.ai.projects.models.Evaluation.target
  name: target
  summary: Evaluation target specifying the model config and parameters.
  signature: 'target: _models.EvaluationTarget | None'
