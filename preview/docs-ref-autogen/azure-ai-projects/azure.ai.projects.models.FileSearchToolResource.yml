### YamlMime:PythonClass
uid: azure.ai.projects.models.FileSearchToolResource
name: FileSearchToolResource
fullName: azure.ai.projects.models.FileSearchToolResource
module: azure.ai.projects.models
summary: A set of resources that are used by the `file_search` tool.
constructor:
  syntax: 'FileSearchToolResource(*args: Any, **kwargs: Any)'
variables:
- description: 'The ID of the vector store attached to this agent. There can be a

    maximum of 1 vector

    store attached to the agent.'
  name: vector_store_ids
  types:
  - <xref:list>[<xref:str>]
- description: 'The list of vector store configuration objects from Azure.

    This list is limited to one element.

    The only element of this list contains the list of azure asset IDs used by the
    search tool.'
  name: vector_stores
  types:
  - <xref:list>[<xref:azure.ai.projects.models.VectorStoreConfigurations>]
methods:
- uid: azure.ai.projects.models.FileSearchToolResource.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.FileSearchToolResource.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.FileSearchToolResource.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.FileSearchToolResource.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.FileSearchToolResource.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.FileSearchToolResource.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.FileSearchToolResource.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.FileSearchToolResource.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.FileSearchToolResource.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.FileSearchToolResource.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.FileSearchToolResource.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.FileSearchToolResource.vector_store_ids
  name: vector_store_ids
  summary: 'The ID of the vector store attached to this agent. There can be a maximum
    of 1 vector

    store attached to the agent.'
  signature: 'vector_store_ids: List[str] | None'
- uid: azure.ai.projects.models.FileSearchToolResource.vector_stores
  name: vector_stores
  summary: 'The list of vector store configuration objects from Azure.

    This list is limited to one element.

    The only element of this list contains the list of azure asset IDs used by the
    search tool.'
  signature: 'vector_stores: List[_models.VectorStoreConfigurations] | None'
