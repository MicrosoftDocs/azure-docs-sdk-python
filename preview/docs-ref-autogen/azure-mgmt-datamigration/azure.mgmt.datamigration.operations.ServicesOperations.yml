### YamlMime:PythonClass
uid: azure.mgmt.datamigration.operations.ServicesOperations
name: ServicesOperations
fullName: azure.mgmt.datamigration.operations.ServicesOperations
module: azure.mgmt.datamigration.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.datamigration.DataMigrationManagementClient>'s\n\
  >\n> <xref:services> attribute.\n>"
constructor:
  syntax: ServicesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.datamigration.operations.ServicesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update DMS (classic) Instance.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). The PUT method creates a new service or updates an existing
    one. When a

    service is updated, existing child resources (i.e. tasks) are unaffected. Services
    currently

    support a single kind, "vm", which refers to a VM-based service, although other
    kinds may be

    added in the future. This method can change the kind, SKU, and network of the
    service, but if

    tasks are currently running (i.e. the service is busy), this will fail with 400
    Bad Request

    ("ServiceIsBusy"). The provider will reply when successful with 200 OK or 201
    Created.

    Long-running operations use the provisioningState property.'
  signature: 'begin_create_or_update(group_name: str, service_name: str, parameters:
    _models.DataMigrationService, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.DataMigrationService]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Information about the service. Is either a DataMigrationService
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datamigration.models.DataMigrationService>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DataMigrationService
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.datamigration.models.DataMigrationService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.begin_delete
  name: begin_delete
  summary: 'Delete DMS (classic) Service Instance.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). The DELETE method deletes a service. Any running tasks will
    be canceled.'
  signature: 'begin_delete(group_name: str, service_name: str, delete_running_tasks:
    bool | None = None, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: delete_running_tasks
    description: 'Delete the resource even if it contains running tasks. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.begin_start
  name: begin_start
  summary: 'Start service.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). This action starts the service and the service can be used
    for data

    migration.'
  signature: 'begin_start(group_name: str, service_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.begin_stop
  name: begin_stop
  summary: 'Stop service.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). This action stops the service and the service cannot be used
    for data

    migration. The service owner won''t be billed when the service is stopped.'
  signature: 'begin_stop(group_name: str, service_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.begin_update
  name: begin_update
  summary: 'Create or update DMS (classic) Service Instance.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). The PATCH method updates an existing service. This method can
    change the

    kind, SKU, and network of the service, but if tasks are currently running (i.e.
    the service is

    busy), this will fail with 400 Bad Request ("ServiceIsBusy").'
  signature: 'begin_update(group_name: str, service_name: str, parameters: _models.DataMigrationService,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.DataMigrationService]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Information about the service. Is either a DataMigrationService
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datamigration.models.DataMigrationService>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either DataMigrationService
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.datamigration.models.DataMigrationService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.check_children_name_availability
  name: check_children_name_availability
  summary: 'Check nested resource name validity and availability.


    This method checks whether a proposed nested resource name is valid and available.'
  signature: 'check_children_name_availability(group_name: str, service_name: str,
    parameters: _models.NameAvailabilityRequest, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.NameAvailabilityResponse'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Requested name to validate. Is either a NameAvailabilityRequest
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datamigration.models.NameAvailabilityRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: NameAvailabilityResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.datamigration.models.NameAvailabilityResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.check_name_availability
  name: check_name_availability
  summary: 'Check name validity and availability.


    This method checks whether a proposed top-level resource name is valid and available.'
  signature: 'check_name_availability(location: str, parameters: _models.NameAvailabilityRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.NameAvailabilityResponse'
  parameters:
  - name: location
    description: The Azure region of the operation. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Requested name to validate. Is either a NameAvailabilityRequest
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datamigration.models.NameAvailabilityRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: NameAvailabilityResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.datamigration.models.NameAvailabilityResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.check_status
  name: check_status
  summary: 'Check service health status.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). This action performs a health check and returns the status
    of the service

    and virtual machine size.'
  signature: 'check_status(group_name: str, service_name: str, **kwargs: Any) -> DataMigrationServiceStatusResponse'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DataMigrationServiceStatusResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.datamigration.models.DataMigrationServiceStatusResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.get
  name: get
  summary: 'Get DMS (classic) Service Instance.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). The GET method retrieves information about a service instance.'
  signature: 'get(group_name: str, service_name: str, **kwargs: Any) -> DataMigrationService'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DataMigrationService or the result of cls(response)
    types:
    - <xref:azure.mgmt.datamigration.models.DataMigrationService>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.list
  name: list
  summary: 'Get services in subscription.


    The services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). This method returns a list of service resources in a subscription.'
  signature: 'list(**kwargs: Any) -> ItemPaged[DataMigrationService]'
  return:
    description: 'An iterator like instance of either DataMigrationService or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.datamigration.models.DataMigrationService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Get services in resource group.


    The Services resource is the top-level resource that represents the Azure Database
    Migration

    Service (classic). This method returns a list of service resources in a resource
    group.'
  signature: 'list_by_resource_group(group_name: str, **kwargs: Any) -> ItemPaged[DataMigrationService]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either DataMigrationService or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.datamigration.models.DataMigrationService>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datamigration.operations.ServicesOperations.list_skus
  name: list_skus
  summary: 'Get compatible SKUs.


    The services resource is the top-level resource that represents the Database Migration
    Service

    (classic). The skus action returns the list of SKUs that a service resource can
    be updated to.'
  signature: 'list_skus(group_name: str, service_name: str, **kwargs: Any) -> ItemPaged[AvailableServiceSku]'
  parameters:
  - name: group_name
    description: Name of the resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: service_name
    description: Name of the service. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either AvailableServiceSku or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.datamigration.models.AvailableServiceSku>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.datamigration.operations.ServicesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.datamigration.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv115\\Lib\\site-packages\\azure\\mgmt\\datamigration\\models\\__init__.py'>
