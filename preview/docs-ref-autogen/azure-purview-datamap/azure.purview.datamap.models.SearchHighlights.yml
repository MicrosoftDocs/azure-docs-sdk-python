### YamlMime:PythonClass
uid: azure.purview.datamap.models.SearchHighlights
name: SearchHighlights
fullName: azure.purview.datamap.models.SearchHighlights
module: azure.purview.datamap.models
inheritances:
- azure.purview.datamap._model_base.Model
summary: 'A highlight list that consists of index fields id ,qualifiedName, name,

  description, entityType. When the keyword appears in those fields, the value of

  the field, attached with emphasis mark, is returned as an element of

  @search.highlights.'
constructor:
  syntax: 'SearchHighlights(*args: Any, **kwargs: Any)'
variables:
- description: Id.
  name: id
  types:
  - <xref:list>[<xref:str>]
- description: Qualified name.
  name: qualified_name
  types:
  - <xref:list>[<xref:str>]
- description: Name.
  name: name
  types:
  - <xref:list>[<xref:str>]
- description: Description.
  name: description
  types:
  - <xref:list>[<xref:str>]
- description: Entity type.
  name: entity_type
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.purview.datamap.models.SearchHighlights.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.purview.datamap.models.SearchHighlights.clear
  name: clear
  signature: clear() -> None
- uid: azure.purview.datamap.models.SearchHighlights.copy
  name: copy
  signature: copy() -> Model
- uid: azure.purview.datamap.models.SearchHighlights.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.purview.datamap.models.SearchHighlights.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.purview.datamap.models.SearchHighlights.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.purview.datamap.models.SearchHighlights.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.SearchHighlights.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.purview.datamap.models.SearchHighlights.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.SearchHighlights.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.purview.datamap.models.SearchHighlights.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.purview.datamap.models.SearchHighlights.description
  name: description
  summary: Description.
  signature: 'description: List[str] | None'
- uid: azure.purview.datamap.models.SearchHighlights.entity_type
  name: entity_type
  summary: Entity type.
  signature: 'entity_type: List[str] | None'
- uid: azure.purview.datamap.models.SearchHighlights.id
  name: id
  summary: Id.
  signature: 'id: List[str] | None'
- uid: azure.purview.datamap.models.SearchHighlights.name
  name: name
  summary: Name.
  signature: 'name: List[str] | None'
- uid: azure.purview.datamap.models.SearchHighlights.qualified_name
  name: qualified_name
  summary: Qualified name.
  signature: 'qualified_name: List[str] | None'
