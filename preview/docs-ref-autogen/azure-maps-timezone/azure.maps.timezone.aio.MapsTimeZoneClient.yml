### YamlMime:PythonClass
uid: azure.maps.timezone.aio.MapsTimeZoneClient
name: MapsTimeZoneClient
fullName: azure.maps.timezone.aio.MapsTimeZoneClient
module: azure.maps.timezone.aio
constructor:
  syntax: 'MapsTimeZoneClient(credential: AzureKeyCredential | AzureSasCredential
    | AsyncTokenCredential, client_id: str | None = None, *, endpoint: str = ''https://atlas.microsoft.com'',
    **kwargs: Any)'
  parameters:
  - name: credential
    isRequired: true
  - name: client_id
    defaultValue: None
  keywordOnlyParameters:
  - name: endpoint
    defaultValue: https://atlas.microsoft.com
methods:
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.close
  name: close
  signature: async close() -> None
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.convert_windows_timezone_to_iana
  name: convert_windows_timezone_to_iana
  summary: 'Use to get the IANA ID.


    The `Get Windows to IANA Time Zone` API is an HTTP `GET` request that returns
    a

    corresponding Internet Assigned Numbers Authority (IANA) ID, given a valid Windows
    Time Zone

    ID. Multiple IANA IDs may be returned for a single Windows ID. It is possible
    to narrow these

    results by adding an optional territory parameter.'
  signature: 'async convert_windows_timezone_to_iana(format: str = ''json'', *, windows_timezone_id:
    str, windows_territory_code: str | None = None, **kwargs: Any) -> List[MutableMapping[str,
    Any]]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: windows_timezone_id
    description: The Windows time zone ID. Required.
    types:
    - <xref:str>
  - name: windows_territory_code
    description: Windows Time Zone territory code. Default value is None.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: list of JSON object
    types:
    - <xref:list>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == [\n       {\n    \
    \       \"AliasOf\": \"str\",\n           \"HasZone1970Location\": bool,\n   \
    \        \"Id\": \"str\",\n           \"IsAlias\": bool\n       }\n   ]\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_iana_timezone_ids
  name: get_iana_timezone_ids
  summary: 'Use to get the list of IANA time zone IDs.


    The `Get IANA Time Zones` API is an HTTP `GET` request that returns a full list
    of Internet

    Assigned Numbers Authority (IANA) time zone IDs. Updates to the IANA service are
    reflected in

    the system within one day.'
  signature: 'async get_iana_timezone_ids(format: str = ''json'', **kwargs: Any) ->
    List[MutableMapping[str, Any]]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  return:
    description: list of JSON object
    types:
    - <xref:list>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == [\n       {\n    \
    \       \"AliasOf\": \"str\",\n           \"HasZone1970Location\": bool,\n   \
    \        \"Id\": \"str\",\n           \"IsAlias\": bool\n       }\n   ]\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_iana_version
  name: get_iana_version
  summary: 'Use to get the current IANA version number.


    The `Get Time Zone IANA Version` API is an HTTP `GET` request that returns the
    current

    Internet Assigned Numbers Authority (IANA) version number as Metadata.'
  signature: 'async get_iana_version(format: str = ''json'', **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"Version\"\
    : \"str\"\n   }\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_timezone
  name: get_timezone
  summary: 'Unified method to get timezone information by either timezone_id or coordinates.

    Only one of *coordinate* or *timezone_id* will be considered.

    If *timezone_id* is provided, *coordinate* will be ignored.'
  signature: 'async get_timezone(*, timezone_id: str | None = None, coordinates: List[float]
    | None = None, accept_language: str | None = None, options: str | None = None,
    time_stamp: datetime | None = None, dst_from: datetime | None = None, dst_lasting_years:
    int | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  keywordOnlyParameters:
  - name: timezone_id
    description: The IANA time zone ID.
    defaultValue: None
    types:
    - <xref:str>
  - name: coordinates
    description: 'Coordinates of the point for which time zone information is requested.

      This parameter is a list of coordinates, containing a pair of coordinate(lat,
      long). When this

      endpoint is called directly, coordinates are passed in as a single string containing

      coordinates, separated by commas.'
    defaultValue: None
    types:
    - <xref:list>[<xref:float>]
  - name: accept_language
    description: 'Specifies the language code in which the timezone names should be

      returned. If no language code is provided, the response will be in "EN". Please
      refer to

      [Supported Languages](https://learn.microsoft.com/azure/azure-maps/supported-languages)
      for

      details. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: options
    description: 'Options available for types of information

      returned in the result. Known values are: "none", "zoneInfo", "transitions",
      and "all". Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: time_stamp
    description: 'Reference time, if omitted, the

      API will use the machine time serving the request. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_from
    description: 'The start date from which

      daylight savings time (DST) transitions are requested, only applies when "options"
      = all or

      "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_lasting_years
    description: 'The number of

      years from "transitionsFrom" for which DST transitions are requested, only applies
      when

      "options" = all or "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_timezone_by_coordinates
  name: get_timezone_by_coordinates
  summary: 'Use to get the current, historical, and future time zone information for
    the specified

    latitude-longitude pair.


    The `Get Timezone By Coordinates` API is an HTTP `GET` request that returns current,

    historical, and future time zone information for a specified latitude-longitude
    pair. In

    addition, the API provides sunset and sunrise times for a given location.'
  signature: 'async get_timezone_by_coordinates(format: str = ''json'', *, coordinates:
    List[float], accept_language: str | None = None, options: str | None = None, time_stamp:
    datetime | None = None, dst_from: datetime | None = None, dst_lasting_years: int
    | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: coordinates
    description: 'Coordinates of the point for which time zone information is requested.

      This parameter is a list of coordinates, containing a pair of coordinate(lat,
      long). When this

      endpoint is called directly, coordinates are passed in as a single string containing

      coordinates, separated by commas. Required.'
    types:
    - <xref:list>[<xref:float>]
  - name: accept_language
    description: 'Specifies the language code in which the timezone names should be

      returned. If no language code is provided, the response will be in "EN". Please
      refer to

      [Supported Languages](https://learn.microsoft.com/azure/azure-maps/supported-languages)
      for

      details. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: options
    description: 'Alternatively, use alias "o". Options available for types of information

      returned in the result. Known values are: "none", "zoneInfo", "transitions",
      and "all". Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: time_stamp
    description: 'Alternatively, use alias "stamp", or "s". Reference time, if omitted,
      the

      API will use the machine time serving the request. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_from
    description: 'Alternatively, use alias "tf". The start date from which

      daylight savings time (DST) transitions are requested, only applies when "options"
      = all or

      "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_lasting_years
    description: 'Alternatively, use alias "ty". The number of

      years from "transitionsFrom" for which DST transitions are requested, only applies
      when

      "options" = all or "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"ReferenceUtcTimestamp\"\
    : \"2020-02-20 00:00:00\",\n       \"TimeZones\": [\n           {\n          \
    \     \"Aliases\": [\n                   \"str\"\n               ],\n        \
    \       \"Countries\": [\n                   {\n                       \"Code\"\
    : \"str\",\n                       \"Name\": \"str\"\n                   }\n \
    \              ],\n               \"Id\": \"str\",\n               \"Names\":\
    \ {\n                   \"Daylight\": \"str\",\n                   \"Generic\"\
    : \"str\",\n                   \"ISO6391LanguageCode\": \"str\",\n           \
    \        \"Standard\": \"str\"\n               },\n               \"ReferenceTime\"\
    : {\n                   \"DaylightSavings\": \"str\",\n                   \"PosixTz\"\
    : \"str\",\n                   \"PosixTzValidYear\": 0,\n                   \"\
    StandardOffset\": \"str\",\n                   \"Sunrise\": \"2020-02-20 00:00:00\"\
    ,\n                   \"Sunset\": \"2020-02-20 00:00:00\",\n                 \
    \  \"Tag\": \"str\",\n                   \"WallTime\": \"str\"\n             \
    \  },\n               \"RepresentativePoint\": {\n                   \"Latitude\"\
    : 0.0,\n                   \"Longitude\": 0.0\n               },\n           \
    \    \"TimeTransitions\": [\n                   {\n                       \"DaylightSavings\"\
    : \"str\",\n                       \"StandardOffset\": \"str\",\n            \
    \           \"Tag\": \"str\",\n                       \"UtcEnd\": \"2020-02-20\
    \ 00:00:00\",\n                       \"UtcStart\": \"2020-02-20 00:00:00\"\n\
    \                   }\n               ]\n           }\n       ],\n       \"Version\"\
    : \"str\"\n   }\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_timezone_by_id
  name: get_timezone_by_id
  summary: 'Use to get the current, historical, and future time zone information for
    the specified IANA

    time zone ID.


    The `Get Timezone By ID` API is an HTTP `GET` request that returns current, historical,
    and

    future time zone information for the specified IANA time zone ID.'
  signature: 'async get_timezone_by_id(format: str = ''json'', *, timezone_id: str,
    accept_language: str | None = None, options: str | None = None, time_stamp: datetime
    | None = None, dst_from: datetime | None = None, dst_lasting_years: int | None
    = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timezone_id
    description: The IANA time zone ID. Required.
    types:
    - <xref:str>
  - name: accept_language
    description: 'Specifies the language code in which the timezone names should be

      returned. If no language code is provided, the response will be in "EN". Please
      refer to

      [Supported Languages](https://learn.microsoft.com/azure/azure-maps/supported-languages)
      for

      details. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: options
    description: 'Alternatively, use alias "o". Options available for types of information

      returned in the result. Known values are: "none", "zoneInfo", "transitions",
      and "all". Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: time_stamp
    description: 'Alternatively, use alias "stamp", or "s". Reference time, if omitted,
      the

      API will use the machine time serving the request. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_from
    description: 'Alternatively, use alias "tf". The start date from which

      daylight savings time (DST) transitions are requested, only applies when "options"
      = all or

      "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: dst_lasting_years
    description: 'Alternatively, use alias "ty". The number of

      years from "transitionsFrom" for which DST transitions are requested, only applies
      when

      "options" = all or "options" = transitions. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"ReferenceUtcTimestamp\"\
    : \"2020-02-20 00:00:00\",\n       \"TimeZones\": [\n           {\n          \
    \     \"Aliases\": [\n                   \"str\"\n               ],\n        \
    \       \"Countries\": [\n                   {\n                       \"Code\"\
    : \"str\",\n                       \"Name\": \"str\"\n                   }\n \
    \              ],\n               \"Id\": \"str\",\n               \"Names\":\
    \ {\n                   \"Daylight\": \"str\",\n                   \"Generic\"\
    : \"str\",\n                   \"ISO6391LanguageCode\": \"str\",\n           \
    \        \"Standard\": \"str\"\n               },\n               \"ReferenceTime\"\
    : {\n                   \"DaylightSavings\": \"str\",\n                   \"PosixTz\"\
    : \"str\",\n                   \"PosixTzValidYear\": 0,\n                   \"\
    StandardOffset\": \"str\",\n                   \"Sunrise\": \"2020-02-20 00:00:00\"\
    ,\n                   \"Sunset\": \"2020-02-20 00:00:00\",\n                 \
    \  \"Tag\": \"str\",\n                   \"WallTime\": \"str\"\n             \
    \  },\n               \"RepresentativePoint\": {\n                   \"Latitude\"\
    : 0.0,\n                   \"Longitude\": 0.0\n               },\n           \
    \    \"TimeTransitions\": [\n                   {\n                       \"DaylightSavings\"\
    : \"str\",\n                       \"StandardOffset\": \"str\",\n            \
    \           \"Tag\": \"str\",\n                       \"UtcEnd\": \"2020-02-20\
    \ 00:00:00\",\n                       \"UtcStart\": \"2020-02-20 00:00:00\"\n\
    \                   }\n               ]\n           }\n       ],\n       \"Version\"\
    : \"str\"\n   }\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.get_windows_timezone_ids
  name: get_windows_timezone_ids
  summary: 'Use to get the list of Windows Time Zone IDs.


    The `Get Windows Time Zones` API is an HTTP `GET` request that returns a full
    list of

    Windows Time Zone IDs.'
  signature: 'async get_windows_timezone_ids(format: str = ''json'', **kwargs: Any)
    -> List[MutableMapping[str, Any]]'
  parameters:
  - name: format
    description: 'Desired format of the response. Only `json` format is supported.
      "json"

      Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  return:
    description: list of JSON object
    types:
    - <xref:list>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == [\n       {\n    \
    \       \"IanaIds\": [\n               \"str\"\n           ],\n           \"Territory\"\
    : \"str\",\n           \"WindowsId\": \"str\"\n       }\n   ]\n   ````\n"
- uid: azure.maps.timezone.aio.MapsTimeZoneClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
