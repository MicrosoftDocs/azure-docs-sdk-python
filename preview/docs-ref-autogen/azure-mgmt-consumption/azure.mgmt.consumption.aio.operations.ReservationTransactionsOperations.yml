### YamlMime:PythonClass
uid: azure.mgmt.consumption.aio.operations.ReservationTransactionsOperations
name: ReservationTransactionsOperations
fullName: azure.mgmt.consumption.aio.operations.ReservationTransactionsOperations
module: azure.mgmt.consumption.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.consumption.aio.ConsumptionManagementClient>'s\n\
  >\n> <xref:reservation_transactions> attribute.\n>"
constructor:
  syntax: ReservationTransactionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.consumption.aio.operations.ReservationTransactionsOperations.list
  name: list
  summary: 'List of transactions for reserved instances on billing account scope.
    Note: The refund

    transactions are posted along with its purchase transaction (i.e. in the purchase
    billing

    month). For example, The refund is requested in May 2021. This refund transaction
    will have

    event date as May 2021 but the billing month as April 2020 when the reservation
    purchase was

    made.'
  signature: 'list(billing_account_id: str, filter: str | None = None, **kwargs: Any)
    -> AsyncIterable[ReservationTransaction]'
  parameters:
  - name: billing_account_id
    description: BillingAccount ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'Filter reservation transactions by date range. The properties/EventDate
      for

      start date and end date. The filter supports ''le'' and  ''ge''. Note: API returns
      data for the

      entire start date''s and end date''s billing month. For example, filter

      properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will
      include data for

      the entire December 2020 month (i.e. will contain records for dates December
      30 and 31).

      Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ReservationTransaction or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.consumption.models.ReservationTransaction>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.consumption.aio.operations.ReservationTransactionsOperations.list_by_billing_profile
  name: list_by_billing_profile
  summary: 'List of transactions for reserved instances on billing profile scope.
    The refund transactions

    are posted along with its purchase transaction (i.e. in the purchase billing month).
    For

    example, The refund is requested in May 2021. This refund transaction will have
    event date as

    May 2021 but the billing month as April 2020 when the reservation purchase was
    made.'
  signature: 'list_by_billing_profile(billing_account_id: str, billing_profile_id:
    str, filter: str | None = None, **kwargs: Any) -> AsyncIterable[ModernReservationTransaction]'
  parameters:
  - name: billing_account_id
    description: BillingAccount ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: billing_profile_id
    description: Azure Billing Profile ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'Filter reservation transactions by date range. The properties/EventDate
      for

      start date and end date. The filter supports ''le'' and  ''ge''. Note: API returns
      data for the

      entire start date''s and end date''s billing month. For example, filter

      properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will
      include data for

      entire December 2020 month (i.e. will contain records for dates December 30
      and 31). Default

      value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ModernReservationTransaction
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.consumption.models.ModernReservationTransaction>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.consumption.aio.operations.ReservationTransactionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.consumption.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\consumption\\models\\__init__.py'>
