### YamlMime:PythonClass
uid: azure.healthinsights.clinicalmatching.models.GeographicLocation
name: GeographicLocation
fullName: azure.healthinsights.clinicalmatching.models.GeographicLocation
module: azure.healthinsights.clinicalmatching.models
inheritances:
- azure.healthinsights.clinicalmatching._model_base.Model
summary: 'A location given as a combination of city, state and country/region. It
  could specify a city, a

  state or a country/region.

  In case a city is specified, either state +country/region or country/region (for

  countries/regions where there are no states) should be added.

  In case a state is specified (without a city), country/region should be added.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'GeographicLocation(*args: Any, **kwargs: Any)'
variables:
- description: City name.
  name: city
  types:
  - <xref:str>
- description: State name.
  name: state
  types:
  - <xref:str>
- description: Country/region name. Required.
  name: country_or_region
  types:
  - <xref:str>
methods:
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.clear
  name: clear
  signature: clear() -> None
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.copy
  name: copy
  signature: copy() -> Model
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.city
  name: city
  summary: City name.
  signature: 'city: str | None'
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.country_or_region
  name: country_or_region
  summary: Country/region name. Required.
  signature: 'country_or_region: str'
- uid: azure.healthinsights.clinicalmatching.models.GeographicLocation.state
  name: state
  summary: State name.
  signature: 'state: str | None'
