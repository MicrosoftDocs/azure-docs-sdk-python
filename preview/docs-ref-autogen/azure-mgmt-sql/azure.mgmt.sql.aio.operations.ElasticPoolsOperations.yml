### YamlMime:PythonClass
uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations
name: ElasticPoolsOperations
fullName: azure.mgmt.sql.aio.operations.ElasticPoolsOperations
module: azure.mgmt.sql.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.aio.SqlManagementClient>'s\n\
  >\n> <xref:elastic_pools> attribute.\n>"
constructor:
  syntax: ElasticPoolsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates an elastic pool.
  signature: 'async begin_create_or_update(resource_group_name: str, server_name:
    str, elastic_pool_name: str, parameters: _models.ElasticPool, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.ElasticPool]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: elastic_pool_name
    description: The name of the elastic pool. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The elastic pool parameters. Is either a ElasticPool type or a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ElasticPool>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ElasticPool or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.sql.models.ElasticPool>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.begin_delete
  name: begin_delete
  summary: Deletes an elastic pool.
  signature: 'async begin_delete(resource_group_name: str, server_name: str, elastic_pool_name:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: elastic_pool_name
    description: The name of the elastic pool. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.begin_failover
  name: begin_failover
  summary: Failovers an elastic pool.
  signature: 'async begin_failover(resource_group_name: str, server_name: str, elastic_pool_name:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: elastic_pool_name
    description: The name of the elastic pool to failover. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.begin_update
  name: begin_update
  summary: Updates an elastic pool.
  signature: 'async begin_update(resource_group_name: str, server_name: str, elastic_pool_name:
    str, parameters: _models.ElasticPoolUpdate, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.ElasticPool]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: elastic_pool_name
    description: The name of the elastic pool. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The elastic pool update parameters. Is either a ElasticPoolUpdate
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ElasticPoolUpdate>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ElasticPool or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.sql.models.ElasticPool>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.get
  name: get
  summary: Gets an elastic pool.
  signature: 'async get(resource_group_name: str, server_name: str, elastic_pool_name:
    str, **kwargs: Any) -> ElasticPool'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: elastic_pool_name
    description: The name of the elastic pool. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ElasticPool or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.ElasticPool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.list_by_server
  name: list_by_server
  summary: Gets all elastic pools in a server.
  signature: 'list_by_server(resource_group_name: str, server_name: str, skip: int
    | None = None, **kwargs: Any) -> AsyncItemPaged[ElasticPool]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: skip
    description: The number of elements in the collection to skip. Default value is
      None.
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either ElasticPool or the result of
      cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.sql.models.ElasticPool>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.aio.operations.ElasticPoolsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv239\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
