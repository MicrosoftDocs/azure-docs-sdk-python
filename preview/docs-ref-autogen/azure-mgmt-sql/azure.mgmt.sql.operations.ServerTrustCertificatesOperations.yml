### YamlMime:PythonClass
uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations
name: ServerTrustCertificatesOperations
fullName: azure.mgmt.sql.operations.ServerTrustCertificatesOperations
module: azure.mgmt.sql.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.SqlManagementClient>'s\n\
  >\n> <xref:server_trust_certificates> attribute.\n>"
constructor:
  syntax: ServerTrustCertificatesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Uploads a server trust certificate from box to Sql Managed Instance.
  signature: 'begin_create_or_update(resource_group_name: str, managed_instance_name:
    str, certificate_name: str, parameters: _models.ServerTrustCertificate, *, content_type:
    str = ''application/json'', **kwargs: Any) -> LROPoller[_models.ServerTrustCertificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to upload. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The server trust certificate info. Is either a ServerTrustCertificate
      type

      or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ServerTrustCertificate>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either ServerTrustCertificate
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.ServerTrustCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.begin_delete
  name: begin_delete
  summary: Deletes a server trust certificate that was uploaded from box to Sql Managed
    Instance.
  signature: 'begin_delete(resource_group_name: str, managed_instance_name: str, certificate_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.get
  name: get
  summary: Gets a server trust certificate that was uploaded from box to Sql Managed
    Instance.
  signature: 'get(resource_group_name: str, managed_instance_name: str, certificate_name:
    str, **kwargs: Any) -> ServerTrustCertificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ServerTrustCertificate or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.ServerTrustCertificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.list_by_instance
  name: list_by_instance
  summary: 'Gets a list of server trust certificates that were uploaded from box to
    the given Sql Managed

    Instance.'
  signature: 'list_by_instance(resource_group_name: str, managed_instance_name: str,
    **kwargs: Any) -> Iterable[ServerTrustCertificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ServerTrustCertificate or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.ServerTrustCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
