### YamlMime:PythonClass
uid: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations
name: TransparentDataEncryptionsOperations
fullName: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations
module: azure.mgmt.sql.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.aio.SqlManagementClient>'s\n\
  >\n> <xref:transparent_data_encryptions> attribute.\n>"
constructor:
  syntax: TransparentDataEncryptionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Updates a logical database's transparent data encryption configuration.
  signature: 'async begin_create_or_update(resource_group_name: str, server_name:
    str, database_name: str, tde_name: str | _models.TransparentDataEncryptionName,
    parameters: _models.LogicalDatabaseTransparentDataEncryption, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.LogicalDatabaseTransparentDataEncryption]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: 'The name of the logical database for which the security alert policy
      is

      defined. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: tde_name
    description: The name of the transparent data encryption configuration. "current"
      Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.TransparentDataEncryptionName>
  - name: parameters
    description: 'The database transparent data encryption. Is either a

      LogicalDatabaseTransparentDataEncryption type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.LogicalDatabaseTransparentDataEncryption>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either

      LogicalDatabaseTransparentDataEncryption or the result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.sql.models.LogicalDatabaseTransparentDataEncryption>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations.get
  name: get
  summary: Gets a logical database's transparent data encryption.
  signature: 'async get(resource_group_name: str, server_name: str, database_name:
    str, tde_name: str | TransparentDataEncryptionName, **kwargs: Any) -> LogicalDatabaseTransparentDataEncryption'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: 'The name of the logical database for which the transparent data

      encryption is defined. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: tde_name
    description: The name of the transparent data encryption configuration. "current"
      Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.TransparentDataEncryptionName>
  return:
    description: LogicalDatabaseTransparentDataEncryption or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.LogicalDatabaseTransparentDataEncryption>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations.list_by_database
  name: list_by_database
  summary: Gets a list of the logical database's transparent data encryption.
  signature: 'list_by_database(resource_group_name: str, server_name: str, database_name:
    str, **kwargs: Any) -> AsyncIterable[LogicalDatabaseTransparentDataEncryption]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: 'The name of the logical database for which the transparent data

      encryption is defined. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either LogicalDatabaseTransparentDataEncryption
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.sql.models.LogicalDatabaseTransparentDataEncryption>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.aio.operations.TransparentDataEncryptionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv233\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
