### YamlMime:PythonClass
uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations
name: LongTermRetentionBackupsOperations
fullName: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations
module: azure.mgmt.sql.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.SqlManagementClient>'s\n\
  >\n> <xref:long_term_retention_backups> attribute.\n>"
constructor:
  syntax: LongTermRetentionBackupsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_change_access_tier
  name: begin_change_access_tier
  summary: Change a long term retention backup access tier.
  signature: 'begin_change_access_tier(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, backup_name: str, parameters: _models.ChangeLongTermRetentionBackupAccessTierParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Is either a ChangeLongTermRetentionBackupAccessTierParameters type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ChangeLongTermRetentionBackupAccessTierParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_change_access_tier_by_resource_group
  name: begin_change_access_tier_by_resource_group
  summary: Change a long term retention backup access tier.
  signature: 'begin_change_access_tier_by_resource_group(resource_group_name: str,
    location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, parameters: _models.ChangeLongTermRetentionBackupAccessTierParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Is either a ChangeLongTermRetentionBackupAccessTierParameters type
      or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ChangeLongTermRetentionBackupAccessTierParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_copy
  name: begin_copy
  summary: Copy an existing long term retention backup.
  signature: 'begin_copy(location_name: str, long_term_retention_server_name: str,
    long_term_retention_database_name: str, backup_name: str, parameters: _models.CopyLongTermRetentionBackupParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackupOperationResult]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The parameters needed for long term retention copy request. Is either
      a

      CopyLongTermRetentionBackupParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.CopyLongTermRetentionBackupParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackupOperationResult
      or

      the result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackupOperationResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_copy_by_resource_group
  name: begin_copy_by_resource_group
  summary: Copy an existing long term retention backup to a different server.
  signature: 'begin_copy_by_resource_group(resource_group_name: str, location_name:
    str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, parameters: _models.CopyLongTermRetentionBackupParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackupOperationResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The parameters needed for long term retention copy request. Is either
      a

      CopyLongTermRetentionBackupParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.CopyLongTermRetentionBackupParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackupOperationResult
      or

      the result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackupOperationResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_delete
  name: begin_delete
  summary: Deletes a long term retention backup.
  signature: 'begin_delete(location_name: str, long_term_retention_server_name: str,
    long_term_retention_database_name: str, backup_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_delete_by_resource_group
  name: begin_delete_by_resource_group
  summary: Deletes a long term retention backup.
  signature: 'begin_delete_by_resource_group(resource_group_name: str, location_name:
    str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_lock_time_based_immutability
  name: begin_lock_time_based_immutability
  summary: Lock time based immutability of an existing long term retention backup.
  signature: 'begin_lock_time_based_immutability(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, backup_name: str, **kwargs: Any)
    -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_lock_time_based_immutability_by_resource_group
  name: begin_lock_time_based_immutability_by_resource_group
  summary: Lock time based immutability of an existing long term retention backup.
  signature: 'begin_lock_time_based_immutability_by_resource_group(resource_group_name:
    str, location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_remove_legal_hold_immutability
  name: begin_remove_legal_hold_immutability
  summary: Remove legal hold immutability of an existing long term retention backup.
  signature: 'begin_remove_legal_hold_immutability(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, backup_name: str, **kwargs: Any)
    -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_remove_legal_hold_immutability_by_resource_group
  name: begin_remove_legal_hold_immutability_by_resource_group
  summary: Remove legal hold immutability of an existing long term retention backup.
  signature: 'begin_remove_legal_hold_immutability_by_resource_group(resource_group_name:
    str, location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_remove_time_based_immutability
  name: begin_remove_time_based_immutability
  summary: Remove time based immutability of an existing long term retention backup.
  signature: 'begin_remove_time_based_immutability(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, backup_name: str, **kwargs: Any)
    -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_remove_time_based_immutability_by_resource_group
  name: begin_remove_time_based_immutability_by_resource_group
  summary: Remove time based immutability of an existing long term retention backup.
  signature: 'begin_remove_time_based_immutability_by_resource_group(resource_group_name:
    str, location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_set_legal_hold_immutability
  name: begin_set_legal_hold_immutability
  summary: Set legal hold immutability of an existing long term retention backup.
  signature: 'begin_set_legal_hold_immutability(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, backup_name: str, **kwargs: Any)
    -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_set_legal_hold_immutability_by_resource_group
  name: begin_set_legal_hold_immutability_by_resource_group
  summary: Set legal hold immutability of an existing long term retention backup.
  signature: 'begin_set_legal_hold_immutability_by_resource_group(resource_group_name:
    str, location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LROPoller[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: The resource group name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackup
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_update
  name: begin_update
  summary: Updates an existing long term retention backup.
  signature: 'begin_update(location_name: str, long_term_retention_server_name: str,
    long_term_retention_database_name: str, backup_name: str, parameters: _models.UpdateLongTermRetentionBackupParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackupOperationResult]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The requested backup resource state. Is either a

      UpdateLongTermRetentionBackupParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.UpdateLongTermRetentionBackupParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackupOperationResult
      or

      the result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackupOperationResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.begin_update_by_resource_group
  name: begin_update_by_resource_group
  summary: Updates an existing long term retention backup.
  signature: 'begin_update_by_resource_group(resource_group_name: str, location_name:
    str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, parameters: _models.UpdateLongTermRetentionBackupParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.LongTermRetentionBackupOperationResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The requested backup resource state. Is either a

      UpdateLongTermRetentionBackupParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.UpdateLongTermRetentionBackupParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either LongTermRetentionBackupOperationResult
      or

      the result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.LongTermRetentionBackupOperationResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.get
  name: get
  summary: Gets a long term retention backup.
  signature: 'get(location_name: str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, backup_name: str, **kwargs: Any) -> LongTermRetentionBackup'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: LongTermRetentionBackup or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.LongTermRetentionBackup>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.get_by_resource_group
  name: get_by_resource_group
  summary: Gets a long term retention backup.
  signature: 'get_by_resource_group(resource_group_name: str, location_name: str,
    long_term_retention_server_name: str, long_term_retention_database_name: str,
    backup_name: str, **kwargs: Any) -> LongTermRetentionBackup'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: backup_name
    description: The backup name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: LongTermRetentionBackup or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.LongTermRetentionBackup>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_database
  name: list_by_database
  summary: Lists all long term retention backups for a database.
  signature: 'list_by_database(location_name: str, long_term_retention_server_name:
    str, long_term_retention_database_name: str, only_latest_per_database: bool |
    None = None, database_state: str | DatabaseState | None = None, **kwargs: Any)
    -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_location
  name: list_by_location
  summary: Lists the long term retention backups for a given location.
  signature: 'list_by_location(location_name: str, only_latest_per_database: bool
    | None = None, database_state: str | DatabaseState | None = None, **kwargs: Any)
    -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_resource_group_database
  name: list_by_resource_group_database
  summary: Lists all long term retention backups for a database based on a particular
    resource group.
  signature: 'list_by_resource_group_database(resource_group_name: str, location_name:
    str, long_term_retention_server_name: str, long_term_retention_database_name:
    str, only_latest_per_database: bool | None = None, database_state: str | DatabaseState
    | None = None, **kwargs: Any) -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_database_name
    description: The name of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_resource_group_location
  name: list_by_resource_group_location
  summary: Lists the long term retention backups for a given location based on resource
    group.
  signature: 'list_by_resource_group_location(resource_group_name: str, location_name:
    str, only_latest_per_database: bool | None = None, database_state: str | DatabaseState
    | None = None, **kwargs: Any) -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_resource_group_server
  name: list_by_resource_group_server
  summary: Lists the long term retention backups for a given server based on resource
    groups.
  signature: 'list_by_resource_group_server(resource_group_name: str, location_name:
    str, long_term_retention_server_name: str, only_latest_per_database: bool | None
    = None, database_state: str | DatabaseState | None = None, **kwargs: Any) -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.list_by_server
  name: list_by_server
  summary: Lists the long term retention backups for a given server.
  signature: 'list_by_server(location_name: str, long_term_retention_server_name:
    str, only_latest_per_database: bool | None = None, database_state: str | DatabaseState
    | None = None, **kwargs: Any) -> ItemPaged[LongTermRetentionBackup]'
  parameters:
  - name: location_name
    description: The location of the database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: long_term_retention_server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: only_latest_per_database
    description: 'Whether or not to only get the latest backup for each

      database. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: database_state
    description: 'Whether to query against just live databases, just deleted databases,
      or

      all databases. Known values are: "All", "Live", and "Deleted". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.DatabaseState>
  return:
    description: 'An iterator like instance of either LongTermRetentionBackup or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.LongTermRetentionBackup>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.operations.LongTermRetentionBackupsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv238\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
