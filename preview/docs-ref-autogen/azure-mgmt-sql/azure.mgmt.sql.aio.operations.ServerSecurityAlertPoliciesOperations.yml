### YamlMime:PythonClass
uid: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations
name: ServerSecurityAlertPoliciesOperations
fullName: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations
module: azure.mgmt.sql.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.aio.SqlManagementClient>'s\n\
  >\n> <xref:server_security_alert_policies> attribute.\n>"
constructor:
  syntax: ServerSecurityAlertPoliciesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates a threat detection policy.
  signature: 'async begin_create_or_update(resource_group_name: str, server_name:
    str, security_alert_policy_name: str | _models.SecurityAlertPolicyName, parameters:
    _models.ServerSecurityAlertPolicy, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.ServerSecurityAlertPolicy]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: security_alert_policy_name
    description: The name of the threat detection policy. "Default" Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.SecurityAlertPolicyName>
  - name: parameters
    description: 'The server security alert policy. Is either a ServerSecurityAlertPolicy
      type

      or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ServerSecurityAlertPolicy>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either ServerSecurityAlertPolicy
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.sql.models.ServerSecurityAlertPolicy>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations.get
  name: get
  summary: Get a server's security alert policy.
  signature: 'async get(resource_group_name: str, server_name: str, security_alert_policy_name:
    str | SecurityAlertPolicyName, **kwargs: Any) -> ServerSecurityAlertPolicy'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: security_alert_policy_name
    description: The name of the security alert policy. "Default" Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.SecurityAlertPolicyName>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ServerSecurityAlertPolicy or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.ServerSecurityAlertPolicy>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations.list_by_server
  name: list_by_server
  summary: Get the server's threat detection policies.
  signature: 'list_by_server(resource_group_name: str, server_name: str, **kwargs:
    Any) -> AsyncIterable[ServerSecurityAlertPolicy]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ServerSecurityAlertPolicy or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.sql.models.ServerSecurityAlertPolicy>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.aio.operations.ServerSecurityAlertPoliciesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
