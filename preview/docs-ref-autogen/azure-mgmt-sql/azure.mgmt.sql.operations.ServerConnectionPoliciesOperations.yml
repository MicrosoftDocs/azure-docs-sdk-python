### YamlMime:PythonClass
uid: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations
name: ServerConnectionPoliciesOperations
fullName: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations
module: azure.mgmt.sql.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.sql.SqlManagementClient>'s\n\
  >\n> <xref:server_connection_policies> attribute.\n>"
constructor:
  syntax: ServerConnectionPoliciesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Updates a server connection policy.
  signature: 'begin_create_or_update(resource_group_name: str, server_name: str, connection_policy_name:
    str | _models.ConnectionPolicyName, parameters: _models.ServerConnectionPolicy,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.ServerConnectionPolicy]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: connection_policy_name
    description: The name of the connection policy. "default" Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.ConnectionPolicyName>
  - name: parameters
    description: 'The required parameters for updating a server connection policy.
      Is either a

      ServerConnectionPolicy type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ServerConnectionPolicy>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either ServerConnectionPolicy
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.ServerConnectionPolicy>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations.get
  name: get
  summary: Gets a server connection policy.
  signature: 'get(resource_group_name: str, server_name: str, connection_policy_name:
    str | ConnectionPolicyName, **kwargs: Any) -> ServerConnectionPolicy'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: connection_policy_name
    description: The name of the connection policy. "default" Required.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.ConnectionPolicyName>
  return:
    description: ServerConnectionPolicy or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.ServerConnectionPolicy>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations.list_by_server
  name: list_by_server
  summary: Lists connection policy.
  signature: 'list_by_server(resource_group_name: str, server_name: str, **kwargs:
    Any) -> ItemPaged[ServerConnectionPolicy]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either ServerConnectionPolicy or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.ServerConnectionPolicy>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.operations.ServerConnectionPoliciesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv237\\Lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
