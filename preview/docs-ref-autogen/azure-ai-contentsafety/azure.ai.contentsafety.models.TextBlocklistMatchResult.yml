### YamlMime:PythonClass
uid: azure.ai.contentsafety.models.TextBlocklistMatchResult
name: TextBlocklistMatchResult
fullName: azure.ai.contentsafety.models.TextBlocklistMatchResult
module: azure.ai.contentsafety.models
inheritances:
- azure.ai.contentsafety._model_base.Model
summary: 'The result of blocklist match.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'TextBlocklistMatchResult(*args: Any, **kwargs: Any)'
variables:
- description: The name of matched blocklist. Required.
  name: blocklist_name
  types:
  - <xref:str>
- description: The id of matched item. Required.
  name: block_item_id
  types:
  - <xref:str>
- description: The content of matched item. Required.
  name: block_item_text
  types:
  - <xref:str>
- description: The character offset of matched text in original input. Required.
  name: offset
  types:
  - <xref:int>
- description: The length of matched text in original input. Required.
  name: length
  types:
  - <xref:int>
methods:
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.block_item_id
  name: block_item_id
  summary: The id of matched item. Required.
  signature: 'block_item_id: str'
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.block_item_text
  name: block_item_text
  summary: The content of matched item. Required.
  signature: 'block_item_text: str'
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.blocklist_name
  name: blocklist_name
  summary: The name of matched blocklist. Required.
  signature: 'blocklist_name: str'
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.length
  name: length
  summary: The length of matched text in original input. Required.
  signature: 'length: int'
- uid: azure.ai.contentsafety.models.TextBlocklistMatchResult.offset
  name: offset
  summary: The character offset of matched text in original input. Required.
  signature: 'offset: int'
