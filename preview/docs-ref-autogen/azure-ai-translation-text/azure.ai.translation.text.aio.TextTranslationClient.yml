### YamlMime:PythonClass
uid: azure.ai.translation.text.aio.TextTranslationClient
name: TextTranslationClient
fullName: azure.ai.translation.text.aio.TextTranslationClient
module: azure.ai.translation.text.aio
inheritances:
- azure.ai.translation.text.aio._client.TextTranslationClient
summary: 'Text translation is a cloud-based REST API feature of the Translator service
  that uses neural

  machine translation technology to enable quick and accurate source-to-target text
  translation

  in real time across all supported languages.


  The following methods are supported by the Text Translation feature:


  Languages. Returns a list of languages supported by Translate, Transliterate, and
  Dictionary

  Lookup operations.


  Translate. Renders single source-language text to multiple target-language texts
  with a single

  request.


  Transliterate. Converts characters or letters of a source language to the corresponding

  characters or letters of a target language.


  Detect. Returns the source code language code and a boolean variable denoting whether
  the

  detected language is supported for text translation and transliteration.


  Dictionary lookup. Returns equivalent words for the source term in the target language.


  Dictionary example Returns grammatical structure and context examples for the source
  term and

  target term pair.


  Combinations of endpoint and credential values:

  str + AzureKeyCredential - used custom domain translator endpoint

  str + TokenCredential - used for regional endpoint with token authentication

  str + TranslatorCredential - used for National Clouds

  None + AzureKeyCredential - used for global translator endpoint with global Translator
  resource

  None + Token - general translator endpoint with token authentication

  None + TranslatorCredential - general translator endpoint with regional Translator
  resource'
constructor:
  syntax: 'TextTranslationClient(credential: AzureKeyCredential | AsyncTokenCredential
    | TranslatorCredential, *, endpoint: str | None = None, api_version=''3.0'', **kwargs)'
  parameters:
  - name: endpoint
    description: 'Supported Text Translation endpoints (protocol and hostname, for
      example:

      [https://api.cognitive.microsofttranslator.com](https://api.cognitive.microsofttranslator.com)).
      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential used to authenticate with the Translator service
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:AzureKeyCredential> , <xref:AsyncTokenCredential>
      , <xref:azure.ai.translation.text.TranslatorCredential>]
  keywordOnlyParameters:
  - name: api_version
    description: 'Default value is "3.0". Note that overriding this default value
      may

      result in unsupported behavior.'
    defaultValue: '3.0'
    types:
    - <xref:str>
  - name: endpoint
    isRequired: true
methods:
- uid: azure.ai.translation.text.aio.TextTranslationClient.close
  name: close
  signature: async close() -> None
- uid: azure.ai.translation.text.aio.TextTranslationClient.find_sentence_boundaries
  name: find_sentence_boundaries
  summary: 'Find Sentence Boundaries.


    Find Sentence Boundaries.'
  signature: 'async find_sentence_boundaries(content: List[InputTextItem] | IO, *,
    client_trace_id: str | None = None, language: str | None = None, script: str |
    None = None, **kwargs: Any) -> List[BreakSentenceItem]'
  parameters:
  - name: content
    description: 'Array of the text for which values the sentence boundaries will
      be calculated.

      Is either a [InputTextItem] type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.InputTextItem>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: language
    description: 'Language tag identifying the language of the input text.

      If a code isn''t specified, automatic language detection will be applied. Default
      value is

      None.'
    types:
    - <xref:str>
  - name: script
    description: 'Script tag identifying the script used by the input text.

      If a script isn''t specified, the default script of the language will be assumed.
      Default value

      is None.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  return:
    description: list of BreakSentenceItem
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.BreakSentenceItem>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.text.aio.TextTranslationClient.get_languages
  name: get_languages
  summary: 'Gets the set of languages currently supported by other operations of the
    Translator.


    Gets the set of languages currently supported by other operations of the Translator.'
  signature: 'async get_languages(*, client_trace_id: str | None = None, scope: str
    | None = None, accept_language: str | None = None, if_none_match: str | None =
    None, **kwargs: Any) -> GetLanguagesResult'
  keywordOnlyParameters:
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: scope
    description: 'A comma-separated list of names defining the group of languages
      to return.

      Allowed group names are: `translation`, `transliteration` and `dictionary`.

      If no scope is given, then all groups are returned, which is equivalent to passing

      `scope=translation,transliteration,dictionary`. To decide which set of supported
      languages

      is appropriate for your scenario, see the description of the <xref:response-body>.
      Default value is None.'
    types:
    - <xref:str>
  - name: accept_language
    description: 'The language to use for user interface strings. Some of the fields
      in

      the response are names of languages or

      names of regions. Use this parameter to define the language in which these names
      are returned.

      The language is specified by providing a well-formed BCP 47 language tag. For
      instance, use

      the value `fr`

      to request names in French or use the value `zh-Hant` to request names in Chinese

      Traditional.

      Names are provided in the English language when a target language is not specified
      or when

      localization

      is not available. Default value is None.'
    types:
    - <xref:str>
  - name: if_none_match
    description: 'Passing the value of the ETag response header in an If-None-Match
      field

      will allow the service to optimize the response.

      If the resource has not been modified, the service will return status code 304
      and an empty

      response body. Default value is None.'
    types:
    - <xref:str>
  return:
    description: GetLanguagesResult. The GetLanguagesResult is compatible with MutableMapping
    types:
    - <xref:azure.ai.translation.text.models.GetLanguagesResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.text.aio.TextTranslationClient.lookup_dictionary_entries
  name: lookup_dictionary_entries
  summary: 'Lookup Dictionary Entries.


    Lookup Dictionary Entries.'
  signature: 'async lookup_dictionary_entries(content: List[InputTextItem] | IO, *,
    from_parameter: str, to: str, client_trace_id: str | None = None, **kwargs: Any)
    -> List[DictionaryLookupItem]'
  parameters:
  - name: content
    description: 'Array of the text to be sent to dictionary. Is either a [InputTextItem]
      type or

      a IO type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.InputTextItem>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: from_parameter
    description: 'Specifies the language of the input text.

      The source language must be one of the supported languages included in the dictionary
      scope.

      Required.'
    types:
    - <xref:str>
  - name: to
    description: 'Specifies the language of the output text.

      The target language must be one of the supported languages included in the dictionary
      scope.

      Required.'
    types:
    - <xref:str>
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  return:
    description: list of DictionaryLookupItem
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.DictionaryLookupItem>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.text.aio.TextTranslationClient.lookup_dictionary_examples
  name: lookup_dictionary_examples
  summary: 'Lookup Dictionary Examples.


    Lookup Dictionary Examples.'
  signature: 'async lookup_dictionary_examples(content: List[DictionaryExampleTextItem]
    | IO, *, from_parameter: str, to: str, client_trace_id: str | None = None, **kwargs:
    Any) -> List[DictionaryExampleItem]'
  parameters:
  - name: content
    description: 'Array of the text to be sent to dictionary. Is either a

      [DictionaryExampleTextItem] type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.DictionaryExampleTextItem>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: from_parameter
    description: 'Specifies the language of the input text.

      The source language must be one of the supported languages included in the dictionary
      scope.

      Required.'
    types:
    - <xref:str>
  - name: to
    description: 'Specifies the language of the output text.

      The target language must be one of the supported languages included in the dictionary
      scope.

      Required.'
    types:
    - <xref:str>
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  return:
    description: list of DictionaryExampleItem
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.DictionaryExampleItem>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.text.aio.TextTranslationClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
- uid: azure.ai.translation.text.aio.TextTranslationClient.translate
  name: translate
  summary: 'Translate Text.


    Translate Text.'
  signature: 'async translate(content: List[InputTextItem] | IO, *, to: List[str],
    client_trace_id: str | None = None, from_parameter: str | None = None, text_type:
    str | TextType | None = None, category: str | None = None, profanity_action: str
    | ProfanityAction | None = None, profanity_marker: str | ProfanityMarker | None
    = None, include_alignment: bool | None = None, include_sentence_length: bool |
    None = None, suggested_from: str | None = None, from_script: str | None = None,
    to_script: str | None = None, allow_fallback: bool | None = None, **kwargs: Any)
    -> List[TranslatedTextItem]'
  parameters:
  - name: content
    description: 'Array of the text to be translated. Is either a [InputTextItem]
      type or a IO

      type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.InputTextItem>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: to
    description: 'Specifies the language of the output text. The target language must
      be one of the

      supported languages included

      in the translation scope. For example, use to=de to translate to German.

      It''s possible to translate to multiple languages simultaneously by repeating
      the parameter in

      the query string.

      For example, use to=de&to=it to translate to German and Italian. Required.'
    types:
    - <xref:list>[<xref:str>]
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: from_parameter
    description: 'Specifies the language of the input text. Find which languages are

      available to translate from by

      looking up supported languages using the translation scope. If the from parameter
      isn''t

      specified,

      automatic language detection is applied to determine the source language.


      You must use the from parameter rather than autodetection when using the dynamic
      dictionary

      feature.

      Note: the dynamic dictionary feature is case-sensitive. Default value is None.'
    types:
    - <xref:str>
  - name: text_type
    description: 'Defines whether the text being translated is plain text or HTML
      text. Any

      HTML needs to be a well-formed,

      complete element. Possible values are: plain (default) or html. Known values
      are: "plain" and

      "html". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.ai.translation.text.models.TextType>
  - name: category
    description: 'A string specifying the category (domain) of the translation. This
      parameter

      is used to get translations

      from a customized system built with Custom Translator. Add the Category ID from
      your Custom

      Translator

      project details to this parameter to use your deployed customized system. Default
      value is:

      general. Default value is None.'
    types:
    - <xref:str>
  - name: profanity_action
    description: 'Specifies how profanities should be treated in translations.

      Possible values are: NoAction (default), Marked or Deleted. Known values are:
      "NoAction",

      "Marked", and "Deleted". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.ai.translation.text.models.ProfanityAction>
  - name: profanity_marker
    description: 'Specifies how profanities should be marked in translations.

      Possible values are: Asterisk (default) or Tag. Known values are: "Asterisk"
      and "Tag".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.ai.translation.text.models.ProfanityMarker>
  - name: include_alignment
    description: 'Specifies whether to include alignment projection from source text

      to translated text.

      Possible values are: true or false (default). Default value is None.'
    types:
    - <xref:bool>
  - name: include_sentence_length
    description: 'Specifies whether to include sentence boundaries for the

      input text and the translated text.

      Possible values are: true or false (default). Default value is None.'
    types:
    - <xref:bool>
  - name: suggested_from
    description: 'Specifies a fallback language if the language of the input text
      can''t

      be identified.

      Language autodetection is applied when the from parameter is omitted. If detection
      fails,

      the suggestedFrom language will be assumed. Default value is None.'
    types:
    - <xref:str>
  - name: from_script
    description: Specifies the script of the input text. Default value is None.
    types:
    - <xref:str>
  - name: to_script
    description: Specifies the script of the translated text. Default value is None.
    types:
    - <xref:str>
  - name: allow_fallback
    description: "Specifies that the service is allowed to fall back to a general\
      \ system\nwhen a custom system doesn't exist.\nPossible values are: true (default)\
      \ or false.\n\nallowFallback=false specifies that the translation should only\
      \ use systems trained for the\ncategory specified\nby the request. If a translation\
      \ for language X to language Y requires chaining through a\npivot language E,\n\
      then all the systems in the chain (X \u2192 E and E \u2192 Y) will need to be\
      \ custom and have the same\ncategory.\nIf no system is found with the specific\
      \ category, the request will return a 400 status code.\nallowFallback=true\n\
      specifies that the service is allowed to fall back to a general system when\
      \ a custom system\ndoesn't exist. Default value is None."
    types:
    - <xref:bool>
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  return:
    description: list of TranslatedTextItem
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.TranslatedTextItem>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.translation.text.aio.TextTranslationClient.transliterate
  name: transliterate
  summary: 'Transliterate Text.


    Transliterate Text.'
  signature: 'async transliterate(content: List[InputTextItem] | IO, *, language:
    str, from_script: str, to_script: str, client_trace_id: str | None = None, **kwargs:
    Any) -> List[TransliteratedText]'
  parameters:
  - name: content
    description: 'Array of the text to be transliterated. Is either a [InputTextItem]
      type or a

      IO type. Required.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.InputTextItem>]
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: language
    description: 'Specifies the language of the text to convert from one script to
      another.

      Possible languages are listed in the transliteration scope obtained by querying
      the service

      for its supported languages. Required.'
    types:
    - <xref:str>
  - name: from_script
    description: 'Specifies the script used by the input text. Look up supported languages

      using the transliteration scope,

      to find input scripts available for the selected language. Required.'
    types:
    - <xref:str>
  - name: to_script
    description: 'Specifies the output script. Look up supported languages using the

      transliteration scope, to find output

      scripts available for the selected combination of input language and input script.
      Required.'
    types:
    - <xref:str>
  - name: client_trace_id
    description: 'A client-generated GUID to uniquely identify the request. Default

      value is None.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  return:
    description: list of TransliteratedText
    types:
    - <xref:list>[<xref:azure.ai.translation.text.models.TransliteratedText>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
