### YamlMime:PythonClass
uid: azure.ai.resources.operations.SingleDeploymentOperations
name: SingleDeploymentOperations
fullName: azure.ai.resources.operations.SingleDeploymentOperations
module: azure.ai.resources.operations
inheritances:
- builtins.object
summary: 'Operations class for SingleDeployment objects


  You should not instantiate this class directly. Instead, you should

  create an AIClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'SingleDeploymentOperations(ml_client: MLClient, connections, **kwargs)'
  parameters:
  - name: ml_client
    description: The Azure Machine Learning client
    isRequired: true
    types:
    - <xref:azure.ai.ml.MLClient>
  - name: connections
    isRequired: true
methods:
- uid: azure.ai.resources.operations.SingleDeploymentOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update a deployment.
  signature: 'begin_create_or_update(deployment: SingleDeployment) -> LROPoller[SingleDeployment]'
  parameters:
  - name: deployment
    description: The deployment resource to create or update remotely.
    isRequired: true
    types:
    - <xref:azure.ai.resources.entities.SingleDeployment>
  return:
    description: A poller for the long-running operation.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.resources.entities.SingleDeployment>]
- uid: azure.ai.resources.operations.SingleDeploymentOperations.delete
  name: delete
  summary: Delete a deployment.
  signature: 'delete(name: str, endpoint_name: str | None = None) -> None'
  parameters:
  - name: name
    description: The deployment name
    isRequired: true
    types:
    - <xref:str>
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
- uid: azure.ai.resources.operations.SingleDeploymentOperations.get
  name: get
  summary: Get a deployment by name.
  signature: 'get(name: str, endpoint_name: str | None = None) -> SingleDeployment'
  parameters:
  - name: name
    description: The deployment name
    isRequired: true
    types:
    - <xref:str>
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The deployment with the provided name.
    types:
    - <xref:azure.ai.resources.entities.SingleDeployment>
- uid: azure.ai.resources.operations.SingleDeploymentOperations.get_keys
  name: get_keys
  summary: Get the deployment keys.
  signature: 'get_keys(name: str, endpoint_name: str | None = None) -> DeploymentKeys'
  parameters:
  - name: name
    description: The deployment name
    isRequired: true
    types:
    - <xref:str>
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The deployment keys
    types:
    - <xref:azure.ai.resources.entities.DeploymentKeys>
- uid: azure.ai.resources.operations.SingleDeploymentOperations.invoke
  name: invoke
  summary: Invoke a deployment.
  signature: 'invoke(name: str, request_file: str | PathLike, endpoint_name: str |
    None = None) -> Any'
  parameters:
  - name: name
    description: The deployment name
    isRequired: true
    types:
    - <xref:str>
  - name: request_file
    description: The request file
    isRequired: true
    types:
    - <xref:typing.Union>[<xref:str>, <xref:os.PathLike>]
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The response from the deployment
    types:
    - <xref:typing.Any>
- uid: azure.ai.resources.operations.SingleDeploymentOperations.list
  name: list
  summary: List all deployments.
  signature: list() -> Iterable[SingleDeployment]
  return:
    description: An iterator of deployment objects
    types:
    - <xref:typing.Iterable>[<xref:azure.ai.resources.entities.SingleDeployment>]
