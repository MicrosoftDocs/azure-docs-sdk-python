### YamlMime:PythonClass
uid: azure.ai.resources.operations.AIResourceOperations
name: AIResourceOperations
fullName: azure.ai.resources.operations.AIResourceOperations
module: azure.ai.resources.operations
inheritances:
- builtins.object
summary: 'AIResourceOperations.


  You should not instantiate this class directly. Instead, you should

  create an AIClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'AIResourceOperations(ml_client: MLClient, **kwargs: Any)'
  parameters:
  - name: ml_client
    description: The Azure Machine Learning client
    isRequired: true
    types:
    - <xref:azure.ai.ml.MLClient>
methods:
- uid: azure.ai.resources.operations.AIResourceOperations.begin_create
  name: begin_create
  summary: Create a new AI resource.
  signature: 'begin_create(*, ai_resource: AIResource, update_dependent_resources:
    bool = False, endpoint_resource_id: str | None = None, endpoint_kind: str = ''AIServices'',
    **kwargs) -> LROPoller[AIResource]'
  keywordOnlyParameters:
  - name: ai_resource
    description: 'Resource definition

      or object which can be translated to a AI resource.'
    types:
    - <xref:azure.ai.resources.entities.AIResource>
  - name: update_dependent_resources
    description: Whether to update dependent resources. Defaults to False.
    types:
    - <xref:boolean>
  - name: endpoint_resource_id
    description: 'The UID of an AI service or Open AI resource.

      The created hub will automatically create several

      endpoints connecting to this resource, and creates its own otherwise.

      If an Open AI resource ID is provided, then only a single Open AI

      endpoint will be created. If set, then endpoint_resource_id should also be

      set unless its default value is applicable.'
    types:
    - <xref:str>
  - name: endpoint_kind
    description: 'What kind of endpoint resource is being provided

      by the endpoint_resource_id field. Defaults to "AIServices". The only other
      valid

      input is "OpenAI".'
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns the created AI resource.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.resources.entities.AIResource>]
- uid: azure.ai.resources.operations.AIResourceOperations.begin_delete
  name: begin_delete
  summary: Delete an AI resource.
  signature: 'begin_delete(*, name: str, delete_dependent_resources: bool, permanently_delete:
    bool = False, **kwargs) -> LROPoller[None]'
  keywordOnlyParameters:
  - name: name
    description: Name of the Resource
    types:
    - <xref:str>
  - name: delete_dependent_resources
    description: Whether to delete dependent resources associated with the AI resource.
    types:
    - <xref:bool>
  - name: permanently_delete
    description: 'AI resource are soft-deleted by default to allow recovery of data.

      Defaults to False. Set this flag to true to override the soft-delete behavior
      and permanently delete your

      AI resource.'
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.resources.operations.AIResourceOperations.begin_update
  name: begin_update
  summary: 'Update the name, description, tags, PNA, manageNetworkSettings,

    container registry, or encryption of a Resource.'
  signature: 'begin_update(*, ai_resource: AIResource, update_dependent_resources:
    bool = False, **kwargs) -> LROPoller[AIResource]'
  keywordOnlyParameters:
  - name: ai_resource
    description: AI resource definition.
    types:
    - <xref:azure.ai.resources.entities.AIResource>
  - name: update_dependent_resources
    description: 'Whether to update dependent resources. Defaults to False.

      This must be set to true in order to update the container registry.'
    types:
    - <xref:boolean>
  return:
    description: An instance of LROPoller that returns the updated AI resource.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.resources.entities.AIResource>]
- uid: azure.ai.resources.operations.AIResourceOperations.get
  name: get
  summary: Get an AI resource by name.
  signature: 'get(*, name: str, **kwargs) -> AIResource'
  keywordOnlyParameters:
  - name: name
    description: The AI resource name
    types:
    - <xref:str>
  return:
    description: The AI resource with the provided name.
    types:
    - <xref:azure.ai.resources.entities.AIResource>
- uid: azure.ai.resources.operations.AIResourceOperations.list
  name: list
  summary: List all AI resource assets in a project.
  signature: 'list(*, scope: str = ''resource_group'') -> Iterable[AIResource]'
  keywordOnlyParameters:
  - name: scope
    description: The scope of the listing. Can be either "resource_group" or "subscription",
      and defaults to "resource_group".
    types:
    - <xref:str>
  return:
    description: An iterator like instance of AI resource objects
    types:
    - <xref:typing.Iterable>[<xref:azure.ai.resources.entities.AIResource>]
