### YamlMime:PythonClass
uid: azure.ai.resources.operations.ProjectOperations
name: ProjectOperations
fullName: azure.ai.resources.operations.ProjectOperations
module: azure.ai.resources.operations
inheritances:
- builtins.object
summary: 'Operations class for project resources


  You should not instantiate this class directly. Instead, you should

  create an AIClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'ProjectOperations(resource_group_name: str, ml_client: MLClient, service_client:
    AzureMachineLearningWorkspaces, **kwargs: Any)'
  parameters:
  - name: resource_group_name
    description: The name of the resource group associate with the project
    isRequired: true
    types:
    - <xref:str>
  - name: ml_client
    description: The Azure Machine Learning client
    isRequired: true
    types:
    - <xref:azure.ai.ml.MLClient>
  - name: service_client
    description: The Azure Machine Learning service client
    isRequired: true
    types:
    - <xref:azure.ai.ml._restclient.v2023_06_01_preview.AzureMachineLearningWorkspaces>
methods:
- uid: azure.ai.resources.operations.ProjectOperations.begin_create
  name: begin_create
  summary: Create a new project. Returns the project if it already exists.
  signature: 'begin_create(*, project: Project, update_dependent_resources: bool =
    False, **kwargs) -> LROPoller[Project]'
  keywordOnlyParameters:
  - name: project
    description: Project definition.
    types:
    - <xref:azure.ai.resources.entities.project>
  - name: update_dependent_resources
    description: Whether to update dependent resources. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns a project.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.resources.entities.project>]
- uid: azure.ai.resources.operations.ProjectOperations.begin_delete
  name: begin_delete
  summary: Delete a project.
  signature: 'begin_delete(*, name: str, delete_dependent_resources: bool, permanently_delete:
    bool = False)'
  keywordOnlyParameters:
  - name: name
    description: Name of the project
    types:
    - <xref:str>
  - name: delete_dependent_resources
    description: 'Whether to delete resources associated with the project,

      i.e., container registry, storage account, key vault, and application insights.

      Set to True to delete these resources.'
    types:
    - <xref:bool>
  - name: permanently_delete
    description: 'Project are soft-deleted by default to allow recovery of project
      data.

      Defaults to False. Set this flag to true to override the soft-delete behavior
      and permanently delete your project.'
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.resources.operations.ProjectOperations.begin_update
  name: begin_update
  summary: Update a project.
  signature: 'begin_update(*, project: Project, update_dependent_resources: bool =
    False, **kwargs) -> LROPoller[Project]'
  keywordOnlyParameters:
  - name: project
    description: Project definition.
    types:
    - <xref:azure.ai.resources.entities.project>
  - name: update_dependent_resources
    description: Whether to update dependent resources. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: An instance of LROPoller that returns a project.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.resources.entities.project>]
- uid: azure.ai.resources.operations.ProjectOperations.get
  name: get
  summary: Get a project by name.
  signature: 'get(*, name: str | None = None, **kwargs: Dict) -> Project'
  keywordOnlyParameters:
  - name: name
    description: The project name.
    types:
    - <xref:typing.Optional>[<xref:str>]
  return:
    description: The project with the provided name.
    types:
    - <xref:azure.ai.resources.entities.Project>
- uid: azure.ai.resources.operations.ProjectOperations.list
  name: list
  summary: List all projects that the user has access to in the current resource group
    or subscription.
  signature: 'list(*, scope: str = ''resource_group'') -> Iterable[Project]'
  keywordOnlyParameters:
  - name: scope
    description: The scope of the listing. Can be either "resource_group" or "subscription",
      and defaults to "resource_group".
    types:
    - <xref:str>
  return:
    description: An iterator like instance of Project objects
    types:
    - <xref:typing.Iterable>[<xref:azure.ai.resources.entities.Project>]
