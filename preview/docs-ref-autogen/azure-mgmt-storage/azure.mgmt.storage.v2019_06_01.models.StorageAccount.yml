### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.storage.v2019_06_01.models.StorageAccount
  fullName: azure.mgmt.storage.v2019_06_01.models.StorageAccount
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.storage.v2019_06_01.models._models_py3.Resource
    type: azure.mgmt.storage.v2019_06_01.models._models_py3.TrackedResource
  langs:
  - python
  module: azure.mgmt.storage.v2019_06_01.models
  name: StorageAccount
  summary: 'The storage account.


    Variables are only populated by the server, and will be ignored when sending a
    request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'StorageAccount(*, location: str, tags: typing.Union[typing.Dict[str,
      str], NoneType] = None, identity: typing.Union[_ForwardRef(''Identity''), NoneType]
      = None, azure_files_identity_based_authentication: typing.Union[_ForwardRef(''AzureFilesIdentityBasedAuthentication''),
      NoneType] = None, enable_https_traffic_only: typing.Union[bool, NoneType] =
      None, is_hns_enabled: typing.Union[bool, NoneType] = None, large_file_shares_state:
      typing.Union[str, _ForwardRef(''LargeFileSharesState''), NoneType] = None, routing_preference:
      typing.Union[_ForwardRef(''RoutingPreference''), NoneType] = None, allow_blob_public_access:
      typing.Union[bool, NoneType] = None, minimum_tls_version: typing.Union[str,
      _ForwardRef(''MinimumTlsVersion''), NoneType] = None, **kwargs)'
    parameters:
    - description: A set of tags. Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: Required. The geo-location where the resource lives.
      id: location
      type:
      - str
    - description: The identity of the resource.
      id: identity
      type:
      - azure.mgmt.storage.v2019_06_01.models.Identity
    - description: 'Provides the identity based authentication

        settings for Azure Files.'
      id: azure_files_identity_based_authentication
      type:
      - azure.mgmt.storage.v2019_06_01.models.AzureFilesIdentityBasedAuthentication
    - description: Allows https traffic only to storage service if sets to true.
      id: enable_https_traffic_only
      type:
      - bool
    - description: Account HierarchicalNamespace enabled if sets to true.
      id: is_hns_enabled
      type:
      - bool
    - description: 'Allow large file shares if sets to Enabled. It cannot be

        disabled once it is enabled. Possible values include: "Disabled", "Enabled".'
      id: large_file_shares_state
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.LargeFileSharesState
    - description: 'Maintains information about the network routing choice opted by
        the

        user for data transfer.'
      id: routing_preference
      type:
      - azure.mgmt.storage.v2019_06_01.models.RoutingPreference
    - description: 'Allow or disallow public access to all blobs or containers in

        the storage account. The default interpretation is true for this property.'
      id: allow_blob_public_access
      type:
      - bool
    - description: 'Set the minimum TLS version to be permitted on requests to storage.

        The default interpretation is TLS 1.0 for this property. Possible values include:
        "TLS1_0",

        "TLS1_1", "TLS1_2".'
      id: minimum_tls_version
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.MinimumTlsVersion
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
      id: id
      type:
      - str
    - description: The name of the resource.
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex- Microsoft.Compute/virtualMachines
        or

        Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: Gets the SKU.
      id: sku
      type:
      - azure.mgmt.storage.v2019_06_01.models.Sku
    - description: 'Gets the Kind. Possible values include: "Storage", "StorageV2",
        "BlobStorage",

        "FileStorage", "BlockBlobStorage".'
      id: kind
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.Kind
    - description: 'Gets the status of the storage account at the time the operation
        was

        called. Possible values include: "Creating", "ResolvingDNS", "Succeeded".'
      id: provisioning_state
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.ProvisioningState
    - description: 'Gets the URLs that are used to perform a retrieval of a public
        blob,

        queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only
        return the blob

        endpoint.'
      id: primary_endpoints
      type:
      - azure.mgmt.storage.v2019_06_01.models.Endpoints
    - description: Gets the location of the primary data center for the storage account.
      id: primary_location
      type:
      - str
    - description: 'Gets the status indicating whether the primary location of the
        storage

        account is available or unavailable. Possible values include: "available",
        "unavailable".'
      id: status_of_primary
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.AccountStatus
    - description: 'Gets the timestamp of the most recent instance of a failover to

        the secondary location. Only the most recent timestamp is retained. This element
        is not

        returned if there has never been a failover instance. Only available if the
        accountType is

        Standard_GRS or Standard_RAGRS.'
      id: last_geo_failover_time
      type:
      - datetime.datetime
    - description: 'Gets the location of the geo-replicated secondary for the storage

        account. Only available if the accountType is Standard_GRS or Standard_RAGRS.'
      id: secondary_location
      type:
      - str
    - description: 'Gets the status indicating whether the secondary location of the

        storage account is available or unavailable. Only available if the SKU name
        is Standard_GRS or

        Standard_RAGRS. Possible values include: "available", "unavailable".'
      id: status_of_secondary
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.AccountStatus
    - description: Gets the creation date and time of the storage account in UTC.
      id: creation_time
      type:
      - datetime.datetime
    - description: Gets the custom domain the user assigned to this storage account.
      id: custom_domain
      type:
      - azure.mgmt.storage.v2019_06_01.models.CustomDomain
    - description: 'Gets the URLs that are used to perform a retrieval of a public
        blob,

        queue, or table object from the secondary location of the storage account.
        Only available if

        the SKU name is Standard_RAGRS.'
      id: secondary_endpoints
      type:
      - azure.mgmt.storage.v2019_06_01.models.Endpoints
    - description: 'Gets the encryption settings on the account. If unspecified, the
        account is

        unencrypted.'
      id: encryption
      type:
      - azure.mgmt.storage.v2019_06_01.models.Encryption
    - description: 'Required for storage accounts where kind = BlobStorage. The access
        tier used

        for billing. Possible values include: "Hot", "Cool".'
      id: access_tier
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.AccessTier
    - description: Network rule set.
      id: network_rule_set
      type:
      - azure.mgmt.storage.v2019_06_01.models.NetworkRuleSet
    - description: Geo Replication Stats.
      id: geo_replication_stats
      type:
      - azure.mgmt.storage.v2019_06_01.models.GeoReplicationStats
    - description: 'If the failover is in progress, the value will be true, otherwise,

        it will be null.'
      id: failover_in_progress
      type:
      - bool
    - description: 'List of private endpoint connection associated with the

        specified storage account.'
      id: private_endpoint_connections
      type:
      - list[azure.mgmt.storage.v2019_06_01.models.PrivateEndpointConnection]
    - description: Blob restore status.
      id: blob_restore_status
      type:
      - azure.mgmt.storage.v2019_06_01.models.BlobRestoreStatus
  type: class
  uid: azure.mgmt.storage.v2019_06_01.models.StorageAccount
references:
- fullName: list[azure.mgmt.storage.v2019_06_01.models.PrivateEndpointConnection]
  name: list[PrivateEndpointConnection]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.storage.v2019_06_01.models.PrivateEndpointConnection
    name: PrivateEndpointConnection
    uid: azure.mgmt.storage.v2019_06_01.models.PrivateEndpointConnection
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.storage.v2019_06_01.models.PrivateEndpointConnection]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
