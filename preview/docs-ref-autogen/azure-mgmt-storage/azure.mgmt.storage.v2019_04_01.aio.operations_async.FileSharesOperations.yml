### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.create
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.delete
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.get
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.list
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.update
  - azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.models
  class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: FileSharesOperations
  summary: 'FileSharesOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: FileSharesOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.create
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: 'create(resource_group_name: str, account_name: str, share_name: str, file_share:
    azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs) -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  namewithoutparameters: create
  summary: 'Creates a new share under the specified account as described by request
    body. The share

    resource includes metadata and properties for that share. It does not include
    a list of the

    files contained by the share.'
  syntax:
    content: 'create(resource_group_name: str, account_name: str, share_name: str,
      file_share: azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs)
      -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
    parameters:
    - description: 'The name of the resource group within the user''s subscription.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the storage account within the specified resource
        group.

        Storage account names must be between 3 and 24 characters in length and use
        numbers and lower-

        case letters only.'
      id: account_name
      isRequired: true
      type:
      - str
    - description: 'The name of the file share within the specified storage account.
        File share

        names must be between 3 and 63 characters in length and use numbers, lower-case
        letters and

        dash (-) only. Every dash (-) character must be immediately preceded and followed
        by a letter

        or number.'
      id: share_name
      isRequired: true
      type:
      - str
    - description: Properties of the file share to create.
      id: file_share
      isRequired: true
      type:
      - azure.mgmt.storage.v2019_04_01.models.FileShare
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: FileShare, or the result of cls(response)
      type:
      - azure.mgmt.storage.v2019_04_01.models.FileShare
  type: method
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.create
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.delete
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: 'delete(resource_group_name: str, account_name: str, share_name: str, **kwargs)
    -> None'
  namewithoutparameters: delete
  summary: Deletes specified share under its account.
  syntax:
    content: 'delete(resource_group_name: str, account_name: str, share_name: str,
      **kwargs) -> None'
    parameters:
    - description: 'The name of the resource group within the user''s subscription.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the storage account within the specified resource
        group.

        Storage account names must be between 3 and 24 characters in length and use
        numbers and lower-

        case letters only.'
      id: account_name
      isRequired: true
      type:
      - str
    - description: 'The name of the file share within the specified storage account.
        File share

        names must be between 3 and 63 characters in length and use numbers, lower-case
        letters and

        dash (-) only. Every dash (-) character must be immediately preceded and followed
        by a letter

        or number.'
      id: share_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.delete
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.get
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: 'get(resource_group_name: str, account_name: str, share_name: str, **kwargs)
    -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  namewithoutparameters: get
  summary: Gets properties of a specified share.
  syntax:
    content: 'get(resource_group_name: str, account_name: str, share_name: str, **kwargs)
      -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
    parameters:
    - description: 'The name of the resource group within the user''s subscription.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the storage account within the specified resource
        group.

        Storage account names must be between 3 and 24 characters in length and use
        numbers and lower-

        case letters only.'
      id: account_name
      isRequired: true
      type:
      - str
    - description: 'The name of the file share within the specified storage account.
        File share

        names must be between 3 and 63 characters in length and use numbers, lower-case
        letters and

        dash (-) only. Every dash (-) character must be immediately preceded and followed
        by a letter

        or number.'
      id: share_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: FileShare, or the result of cls(response)
      type:
      - azure.mgmt.storage.v2019_04_01.models.FileShare
  type: method
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.get
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.list
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: 'list(resource_group_name: str, account_name: str, skip_token: typing.Union[str,
    NoneType] = None, maxpagesize: typing.Union[str, NoneType] = None, filter: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.FileShareItems'')]'
  namewithoutparameters: list
  summary: "Lists all shares.\n\n   param resource_group_name:\n      The name of\
    \ the resource group within the user's subscription. The\n\n\nname is case insensitive.\n\
    \   type resource_group_name:\n      str\n\n   param account_name:\n      The\
    \ name of the storage account within the specified resource group.\n\n\nStorage\
    \ account names must be between 3 and 24 characters in length and use numbers\
    \ and lower-\ncase letters only.\n\n\n   type account_name:\n      str\n\n   param\
    \ skip_token:\n      Optional. Continuation token for the list operation.\n\n\
    \   type skip_token:\n      str\n\n   param maxpagesize:\n      Optional. Specified\
    \ maximum number of shares that can be included in the\n\n\nlist.\n   type maxpagesize:\n\
    \      str\n\n   param filter:\n      Optional. When specified, only share names\
    \ starting with the filter will be\n\nlisted.\n   type filter:\n      str\n\n\
    \   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   return:\n      An iterator like instance of either\
    \ FileShareItems or the result of cls(response)\n\n   rtype:\n      ~azure.core.async_paging.AsyncItemPaged[~azure.mgmt.storage.v2019_04_01.models.FileShareItems]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: 'list(resource_group_name: str, account_name: str, skip_token: typing.Union[str,
      NoneType] = None, maxpagesize: typing.Union[str, NoneType] = None, filter: typing.Union[str,
      NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.FileShareItems'')]'
  type: method
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.list
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.update
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: 'update(resource_group_name: str, account_name: str, share_name: str, file_share:
    azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs) -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  namewithoutparameters: update
  summary: 'Updates share properties as specified in request body. Properties not
    mentioned in the request

    will not be changed. Update fails if the specified share does not already exist.'
  syntax:
    content: 'update(resource_group_name: str, account_name: str, share_name: str,
      file_share: azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs)
      -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
    parameters:
    - description: 'The name of the resource group within the user''s subscription.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the storage account within the specified resource
        group.

        Storage account names must be between 3 and 24 characters in length and use
        numbers and lower-

        case letters only.'
      id: account_name
      isRequired: true
      type:
      - str
    - description: 'The name of the file share within the specified storage account.
        File share

        names must be between 3 and 63 characters in length and use numbers, lower-case
        letters and

        dash (-) only. Every dash (-) character must be immediately preceded and followed
        by a letter

        or number.'
      id: share_name
      isRequired: true
      type:
      - str
    - description: Properties to update for the file share.
      id: file_share
      isRequired: true
      type:
      - azure.mgmt.storage.v2019_04_01.models.FileShare
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: FileShare, or the result of cls(response)
      type:
      - azure.mgmt.storage.v2019_04_01.models.FileShare
  type: method
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.update
- class: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.models
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.storage.v2019_04_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\storage\\v2019_04_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.models
references:
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.create
  isExternal: false
  name: 'create(resource_group_name: str, account_name: str, share_name: str, file_share:
    azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs) -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.create
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.delete
  isExternal: false
  name: 'delete(resource_group_name: str, account_name: str, share_name: str, **kwargs)
    -> None'
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.delete
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, account_name: str, share_name: str, **kwargs)
    -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.get
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.list
  isExternal: false
  name: 'list(resource_group_name: str, account_name: str, skip_token: typing.Union[str,
    NoneType] = None, maxpagesize: typing.Union[str, NoneType] = None, filter: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.FileShareItems'')]'
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.list
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.update
  isExternal: false
  name: 'update(resource_group_name: str, account_name: str, share_name: str, file_share:
    azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare, **kwargs) -> azure.mgmt.storage.v2019_04_01.models._models_py3.FileShare'
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.update
- fullName: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations
  uid: azure.mgmt.storage.v2019_04_01.aio.operations_async.FileSharesOperations.models
