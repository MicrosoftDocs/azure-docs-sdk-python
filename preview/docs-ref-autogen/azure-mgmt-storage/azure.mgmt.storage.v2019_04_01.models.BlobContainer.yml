### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.storage.v2019_04_01.models.BlobContainer
  fullName: azure.mgmt.storage.v2019_04_01.models.BlobContainer
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.storage.v2019_04_01.models._models_py3.Resource
    type: azure.mgmt.storage.v2019_04_01.models._models_py3.AzureEntityResource
  langs:
  - python
  module: azure.mgmt.storage.v2019_04_01.models
  name: BlobContainer
  summary: 'Properties of the blob container, including Id, resource name, resource
    type, Etag.


    Variables are only populated by the server, and will be ignored when sending a
    request.'
  syntax:
    content: 'BlobContainer(*, public_access: typing.Union[str, _ForwardRef(''PublicAccess''),
      NoneType] = None, metadata: typing.Union[typing.Dict[str, str], NoneType] =
      None, **kwargs)'
    parameters:
    - description: 'Specifies whether data in the container may be accessed publicly
        and the

        level of access. Possible values include: "Container", "Blob", "None".'
      id: public_access
      type:
      - str
      - azure.mgmt.storage.v2019_04_01.models.PublicAccess
    - description: A name-value pair to associate with the container as metadata.
      id: metadata
      type:
      - dict[str, str]
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
      id: id
      type:
      - str
    - description: The name of the resource.
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex- Microsoft.Compute/virtualMachines
        or

        Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: Resource Etag.
      id: etag
      type:
      - str
    - description: Returns the date and time the container was last modified.
      id: last_modified_time
      type:
      - datetime.datetime
    - description: 'The lease status of the container. Possible values include: "Locked",

        "Unlocked".'
      id: lease_status
      type:
      - str
      - azure.mgmt.storage.v2019_04_01.models.LeaseStatus
    - description: 'Lease state of the container. Possible values include: "Available",

        "Leased", "Expired", "Breaking", "Broken".'
      id: lease_state
      type:
      - str
      - azure.mgmt.storage.v2019_04_01.models.LeaseState
    - description: 'Specifies whether the lease on a container is of infinite or fixed

        duration, only when the container is leased. Possible values include: "Infinite",
        "Fixed".'
      id: lease_duration
      type:
      - str
      - azure.mgmt.storage.v2019_04_01.models.LeaseDuration
    - description: The ImmutabilityPolicy property of the container.
      id: immutability_policy
      type:
      - azure.mgmt.storage.v2019_04_01.models.ImmutabilityPolicyProperties
    - description: The LegalHold property of the container.
      id: legal_hold
      type:
      - azure.mgmt.storage.v2019_04_01.models.LegalHoldProperties
    - description: 'The hasLegalHold public property is set to true by SRP if there
        are at

        least one existing tag. The hasLegalHold public property is set to false by
        SRP if all existing

        legal hold tags are cleared out. There can be a maximum of 1000 blob containers
        with

        hasLegalHold=true for a given account.'
      id: has_legal_hold
      type:
      - bool
    - description: 'The hasImmutabilityPolicy public property is set to true by SRP

        if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy
        public

        property is set to false by SRP if ImmutabilityPolicy has not been created
        for this container.'
      id: has_immutability_policy
      type:
      - bool
  type: class
  uid: azure.mgmt.storage.v2019_04_01.models.BlobContainer
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
