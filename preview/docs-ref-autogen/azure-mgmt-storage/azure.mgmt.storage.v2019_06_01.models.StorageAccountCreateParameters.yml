### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.storage.v2019_06_01.models.StorageAccountCreateParameters
  fullName: azure.mgmt.storage.v2019_06_01.models.StorageAccountCreateParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.storage.v2019_06_01.models
  name: StorageAccountCreateParameters
  summary: 'The parameters used when creating a storage account.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'StorageAccountCreateParameters(*, sku: azure.mgmt.storage.v2019_06_01.models._models_py3.Sku,
      kind: typing.Union[str, _ForwardRef(''Kind'')], location: str, tags: typing.Union[typing.Dict[str,
      str], NoneType] = None, identity: typing.Union[_ForwardRef(''Identity''), NoneType]
      = None, custom_domain: typing.Union[_ForwardRef(''CustomDomain''), NoneType]
      = None, encryption: typing.Union[_ForwardRef(''Encryption''), NoneType] = None,
      network_rule_set: typing.Union[_ForwardRef(''NetworkRuleSet''), NoneType] =
      None, access_tier: typing.Union[str, _ForwardRef(''AccessTier''), NoneType]
      = None, azure_files_identity_based_authentication: typing.Union[_ForwardRef(''AzureFilesIdentityBasedAuthentication''),
      NoneType] = None, enable_https_traffic_only: typing.Union[bool, NoneType] =
      None, is_hns_enabled: typing.Union[bool, NoneType] = None, large_file_shares_state:
      typing.Union[str, _ForwardRef(''LargeFileSharesState''), NoneType] = None, routing_preference:
      typing.Union[_ForwardRef(''RoutingPreference''), NoneType] = None, allow_blob_public_access:
      typing.Union[bool, NoneType] = None, minimum_tls_version: typing.Union[str,
      _ForwardRef(''MinimumTlsVersion''), NoneType] = None, **kwargs)'
    parameters:
    - description: Required. Required. Gets or sets the SKU name.
      id: sku
      type:
      - azure.mgmt.storage.v2019_06_01.models.Sku
    - description: 'Required. Required. Indicates the type of storage account. Possible
        values

        include: "Storage", "StorageV2", "BlobStorage", "FileStorage", "BlockBlobStorage".'
      id: kind
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.Kind
    - description: 'Required. Required. Gets or sets the location of the resource.
        This will be

        one of the supported and registered Azure Geo Regions (e.g. West US, East
        US, Southeast Asia,

        etc.). The geo region of a resource cannot be changed once it is created,
        but if an identical

        geo region is specified on update, the request will succeed.'
      id: location
      type:
      - str
    - description: 'A set of tags. Gets or sets a list of key value pairs that describe
        the resource.

        These tags can be used for viewing and grouping this resource (across resource
        groups). A

        maximum of 15 tags can be provided for a resource. Each tag must have a key
        with a length no

        greater than 128 characters and a value with a length no greater than 256
        characters.'
      id: tags
      type:
      - dict[str, str]
    - description: The identity of the resource.
      id: identity
      type:
      - azure.mgmt.storage.v2019_06_01.models.Identity
    - description: 'User domain assigned to the storage account. Name is the CNAME
        source.

        Only one custom domain is supported per storage account at this time. To clear
        the existing

        custom domain, use an empty string for the custom domain name property.'
      id: custom_domain
      type:
      - azure.mgmt.storage.v2019_06_01.models.CustomDomain
    - description: 'Not applicable. Azure Storage encryption is enabled for all storage
        accounts

        and cannot be disabled.'
      id: encryption
      type:
      - azure.mgmt.storage.v2019_06_01.models.Encryption
    - description: Network rule set.
      id: network_rule_set
      type:
      - azure.mgmt.storage.v2019_06_01.models.NetworkRuleSet
    - description: 'Required for storage accounts where kind = BlobStorage. The access
        tier

        used for billing. Possible values include: "Hot", "Cool".'
      id: access_tier
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.AccessTier
    - description: 'Provides the identity based authentication

        settings for Azure Files.'
      id: azure_files_identity_based_authentication
      type:
      - azure.mgmt.storage.v2019_06_01.models.AzureFilesIdentityBasedAuthentication
    - description: 'Allows https traffic only to storage service if sets to true.

        The default value is true since API version 2019-04-01.'
      id: enable_https_traffic_only
      type:
      - bool
    - description: Account HierarchicalNamespace enabled if sets to true.
      id: is_hns_enabled
      type:
      - bool
    - description: 'Allow large file shares if sets to Enabled. It cannot be

        disabled once it is enabled. Possible values include: "Disabled", "Enabled".'
      id: large_file_shares_state
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.LargeFileSharesState
    - description: 'Maintains information about the network routing choice opted by
        the

        user for data transfer.'
      id: routing_preference
      type:
      - azure.mgmt.storage.v2019_06_01.models.RoutingPreference
    - description: 'Allow or disallow public access to all blobs or containers in

        the storage account. The default interpretation is true for this property.'
      id: allow_blob_public_access
      type:
      - bool
    - description: 'Set the minimum TLS version to be permitted on requests to storage.

        The default interpretation is TLS 1.0 for this property. Possible values include:
        "TLS1_0",

        "TLS1_1", "TLS1_2".'
      id: minimum_tls_version
      type:
      - str
      - azure.mgmt.storage.v2019_06_01.models.MinimumTlsVersion
  type: class
  uid: azure.mgmt.storage.v2019_06_01.models.StorageAccountCreateParameters
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
