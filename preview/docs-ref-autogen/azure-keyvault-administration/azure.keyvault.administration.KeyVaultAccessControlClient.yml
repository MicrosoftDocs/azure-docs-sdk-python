### YamlMime:PythonClass
uid: azure.keyvault.administration.KeyVaultAccessControlClient
name: KeyVaultAccessControlClient
fullName: azure.keyvault.administration.KeyVaultAccessControlClient
module: azure.keyvault.administration
inheritances:
- azure.keyvault.administration._internal.client_base.KeyVaultClientBase
summary: Manages role-based access to Azure Key Vault.
constructor:
  syntax: 'KeyVaultAccessControlClient(vault_url: str, credential: TokenCredential,
    **kwargs)'
  parameters:
  - name: vault_url
    description: 'URL of the vault the client will manage. This is also called the
      vault''s "DNS Name".

      You should validate that this URL references a valid Key Vault or Managed HSM
      resource.

      See [https://aka.ms/azsdk/blog/vault-uri](https://aka.ms/azsdk/blog/vault-uri)
      for details.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'An object which can provide an access token for the vault, such
      as a credential from

      <xref:azure.identity>'
    isRequired: true
    types:
    - <xref:azure.core.credentials.TokenCredential>
  - name: api_version
    description: Version of the service API to use. Defaults to the most recent.
    types:
    - <xref:azure.keyvault.administration.ApiVersion>
  - name: verify_challenge_resource
    description: 'Whether to verify the authentication challenge resource matches
      the Key

      Vault or Managed HSM domain. Defaults to True.'
    types:
    - <xref:bool>
methods:
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.create_role_assignment
  name: create_role_assignment
  summary: Create a role assignment.
  signature: 'create_role_assignment(scope: str | KeyVaultRoleScope, definition_id:
    str, principal_id: str, **kwargs) -> KeyVaultRoleAssignment'
  parameters:
  - name: scope
    description: 'scope the role assignment will apply over. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common

      broad scopes. Specify a narrower scope as a string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: definition_id
    description: ID of the role's definition
    isRequired: true
    types:
    - <xref:str>
  - name: principal_id
    description: 'Azure Active Directory object ID of the principal which will be
      assigned the role. The

      principal can be a user, service principal, or security group.'
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: a name for the role assignment. Must be a UUID.
    types:
    - <xref:str>
    - <xref:uuid.UUID>
    - <xref:None>
  return:
    types:
    - <xref:azure.keyvault.administration.KeyVaultRoleAssignment>
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.delete_role_assignment
  name: delete_role_assignment
  summary: Delete a role assignment.
  signature: 'delete_role_assignment(scope: str | KeyVaultRoleScope, name: str | UUID,
    **kwargs) -> None'
  parameters:
  - name: scope
    description: 'the assignment''s scope, for example "/", "/keys", or "/keys/<specific
      key identifier>"

      <xref:azure.keyvault.administration.KeyVaultRoleScope> defines common broad
      scopes. Specify a narrower scope as a string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: name
    description: the role assignment's name.
    isRequired: true
    types:
    - <xref:str>
    - <xref:uuid.UUID>
  return:
    description: None
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.delete_role_definition
  name: delete_role_definition
  summary: Deletes a custom role definition.
  signature: 'delete_role_definition(scope: str | KeyVaultRoleScope, name: str | UUID,
    **kwargs) -> None'
  parameters:
  - name: scope
    description: 'scope of the role definition. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common broad scopes.

      Specify a narrower scope as a string. Managed HSM only supports ''/'', or KeyVaultRoleScope.GLOBAL.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: name
    description: the role definition's name.
    isRequired: true
    types:
    - <xref:str>
    - <xref:uuid.UUID>
  return:
    description: None
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.get_role_assignment
  name: get_role_assignment
  summary: Get a role assignment.
  signature: 'get_role_assignment(scope: str | KeyVaultRoleScope, name: str | UUID,
    **kwargs) -> KeyVaultRoleAssignment'
  parameters:
  - name: scope
    description: 'the assignment''s scope, for example "/", "/keys", or "/keys/<specific
      key identifier>"

      <xref:azure.keyvault.administration.KeyVaultRoleScope> defines common broad
      scopes. Specify a narrower scope as a string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: name
    description: the role assignment's name.
    isRequired: true
    types:
    - <xref:str>
    - <xref:uuid.UUID>
  return:
    types:
    - <xref:azure.keyvault.administration.KeyVaultRoleAssignment>
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.get_role_definition
  name: get_role_definition
  summary: Get the specified role definition.
  signature: 'get_role_definition(scope: str | KeyVaultRoleScope, name: str | UUID,
    **kwargs) -> KeyVaultRoleDefinition'
  parameters:
  - name: scope
    description: 'scope of the role definition. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common broad scopes.

      Specify a narrower scope as a string. Managed HSM only supports ''/'', or KeyVaultRoleScope.GLOBAL.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: name
    description: the role definition's name.
    isRequired: true
    types:
    - <xref:str>
    - <xref:uuid.UUID>
  return:
    types:
    - <xref:azure.keyvault.administration.KeyVaultRoleDefinition>
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.list_role_assignments
  name: list_role_assignments
  summary: List all role assignments for a scope.
  signature: 'list_role_assignments(scope: str | KeyVaultRoleScope, **kwargs) -> ItemPaged[KeyVaultRoleAssignment]'
  parameters:
  - name: scope
    description: 'scope of the role assignments. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common broad scopes.

      Specify a narrower scope as a string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  return:
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.keyvault.administration.KeyVaultRoleAssignment>]
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.list_role_definitions
  name: list_role_definitions
  summary: List all role definitions applicable at and above a scope.
  signature: 'list_role_definitions(scope: str | KeyVaultRoleScope, **kwargs) -> ItemPaged[KeyVaultRoleDefinition]'
  parameters:
  - name: scope
    description: 'scope of the role definitions. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common broad scopes.

      Specify a narrower scope as a string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  return:
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.keyvault.administration.KeyVaultRoleDefinition>]
- uid: azure.keyvault.administration.KeyVaultAccessControlClient.set_role_definition
  name: set_role_definition
  summary: 'Creates or updates a custom role definition.


    To update a role definition, specify the definition''s `name`.'
  signature: 'set_role_definition(scope: str | KeyVaultRoleScope, **kwargs) -> KeyVaultRoleDefinition'
  parameters:
  - name: scope
    description: 'scope of the role definition. <xref:azure.keyvault.administration.KeyVaultRoleScope>
      defines common broad scopes.

      Specify a narrower scope as a string. Managed HSM only supports ''/'', or KeyVaultRoleScope.GLOBAL.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.keyvault.administration.KeyVaultRoleScope>
  - name: name
    description: 'the role definition''s name, a UUID. When this argument has a value,
      the client will create a new

      role definition with this name or update an existing role definition, if one
      exists with the given name.

      When this argument has no value, a new role definition will be created with
      a generated name.'
    types:
    - <xref:str>
    - <xref:uuid.UUID>
    - <xref:None>
  - name: role_name
    description: 'the role''s display name. If unspecified when creating or updating
      a role definition, the

      role name will be set to an empty string.'
    types:
    - <xref:str>
    - <xref:None>
  - name: description
    description: 'a description of the role definition. If unspecified when creating
      or updating a role

      definition, the description will be set to an empty string.'
    types:
    - <xref:str>
    - <xref:None>
  - name: permissions
    description: 'the role definition''s permissions. If unspecified when creating
      or updating a role

      definition, the role definition will have no action permissions.'
    types:
    - <xref:list>[<xref:azure.keyvault.administration.KeyVaultPermission>]
    - <xref:None>
  - name: assignable_scopes
    description: the scopes for which the role definition can be assigned.
    types:
    - <xref:list>[<xref:str>]
    - <xref:list>[<xref:azure.keyvault.administration.KeyVaultRoleScope>]
    - <xref:None>
  return:
    description: The created or updated role definition
    types:
    - <xref:azure.keyvault.administration.KeyVaultRoleDefinition>
