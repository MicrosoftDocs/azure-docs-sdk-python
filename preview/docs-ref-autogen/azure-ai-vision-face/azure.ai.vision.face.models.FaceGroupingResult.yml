### YamlMime:PythonClass
uid: azure.ai.vision.face.models.FaceGroupingResult
name: FaceGroupingResult
fullName: azure.ai.vision.face.models.FaceGroupingResult
module: azure.ai.vision.face.models
summary: Response body for group face operation.
constructor:
  syntax: 'FaceGroupingResult(*args: Any, **kwargs: Any)'
variables:
- description: 'A partition of the original faces based on face similarity. Groups
    are ranked by

    number of faces. Required.'
  name: groups
  types:
  - <xref:list>[<xref:list>[<xref:str>]]
- description: 'Face ids array of faces that cannot find any similar faces from original

    faces. Required.'
  name: messy_group
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.ai.vision.face.models.FaceGroupingResult.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.face.models.FaceGroupingResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.face.models.FaceGroupingResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.face.models.FaceGroupingResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.face.models.FaceGroupingResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.face.models.FaceGroupingResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.face.models.FaceGroupingResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.FaceGroupingResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.face.models.FaceGroupingResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.FaceGroupingResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.face.models.FaceGroupingResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.face.models.FaceGroupingResult.groups
  name: groups
  summary: 'A partition of the original faces based on face similarity. Groups are
    ranked by number of

    faces. Required.'
  signature: 'groups: List[List[str]]'
- uid: azure.ai.vision.face.models.FaceGroupingResult.messy_group
  name: messy_group
  summary: Face ids array of faces that cannot find any similar faces from original
    faces. Required.
  signature: 'messy_group: List[str]'
