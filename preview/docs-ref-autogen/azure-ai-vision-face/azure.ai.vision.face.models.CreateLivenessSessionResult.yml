### YamlMime:PythonClass
uid: azure.ai.vision.face.models.CreateLivenessSessionResult
name: CreateLivenessSessionResult
fullName: azure.ai.vision.face.models.CreateLivenessSessionResult
module: azure.ai.vision.face.models
summary: Response of liveness session creation.
constructor:
  syntax: 'CreateLivenessSessionResult(*args: Any, **kwargs: Any)'
variables:
- description: 'The unique session ID of the created session. It will expire 48 hours
    after

    it was created or may be deleted sooner using the corresponding Session DELETE
    operation.

    Required.'
  name: session_id
  types:
  - <xref:str>
- description: 'Bearer token to provide authentication for the Vision SDK running
    on a client

    application. This Bearer token has limited permissions to perform only the required
    action and

    expires after the TTL time. It is also auditable. Required.'
  name: auth_token
  types:
  - <xref:str>
methods:
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.auth_token
  name: auth_token
  summary: 'Bearer token to provide authentication for the Vision SDK running on a
    client application. This

    Bearer token has limited permissions to perform only the required action and expires
    after the

    TTL time. It is also auditable. Required.'
  signature: 'auth_token: str'
- uid: azure.ai.vision.face.models.CreateLivenessSessionResult.session_id
  name: session_id
  summary: 'The unique session ID of the created session. It will expire 48 hours
    after it was created or

    may be deleted sooner using the corresponding Session DELETE operation. Required.'
  signature: 'session_id: str'
