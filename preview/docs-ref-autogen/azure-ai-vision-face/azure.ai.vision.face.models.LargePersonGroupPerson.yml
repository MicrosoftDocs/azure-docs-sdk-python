### YamlMime:PythonClass
uid: azure.ai.vision.face.models.LargePersonGroupPerson
name: LargePersonGroupPerson
fullName: azure.ai.vision.face.models.LargePersonGroupPerson
module: azure.ai.vision.face.models
summary: 'The person in a specified large person group. To add face to this person,
  please call "Add

  Large Person Group Person Face".


  Readonly variables are only populated by the server, and will be ignored when sending
  a request.'
constructor:
  syntax: 'LargePersonGroupPerson(*args: Any, **kwargs: Any)'
variables:
- description: ID of the person. Required.
  name: person_id
  types:
  - <xref:str>
- description: User defined name, maximum length is 128. Required.
  name: name
  types:
  - <xref:str>
- description: Optional user defined data. Length should not exceed 16K.
  name: user_data
  types:
  - <xref:str>
- description: Face ids of registered faces in the person.
  name: persisted_face_ids
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.name
  name: name
  summary: User defined name, maximum length is 128. Required.
  signature: 'name: str'
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.persisted_face_ids
  name: persisted_face_ids
  summary: Face ids of registered faces in the person.
  signature: 'persisted_face_ids: List[str] | None'
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.person_id
  name: person_id
  summary: ID of the person. Required.
  signature: 'person_id: str'
- uid: azure.ai.vision.face.models.LargePersonGroupPerson.user_data
  name: user_data
  summary: Optional user defined data. Length should not exceed 16K.
  signature: 'user_data: str | None'
