### YamlMime:PythonClass
uid: azure.ai.vision.face.models.MaskProperties
name: MaskProperties
fullName: azure.ai.vision.face.models.MaskProperties
module: azure.ai.vision.face.models
summary: Properties describing the presence of a mask on a given face.
constructor:
  syntax: 'MaskProperties(*args: Any, **kwargs: Any)'
variables:
- description: 'A boolean value indicating whether nose and mouth are covered.

    Required.'
  name: nose_and_mouth_covered
  types:
  - <xref:bool>
- description: 'Type of the mask. Required. Known values are: "faceMask", "noMask",

    "otherMaskOrOcclusion", and "uncertain".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.ai.vision.face.models.MaskType>
methods:
- uid: azure.ai.vision.face.models.MaskProperties.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.face.models.MaskProperties.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.face.models.MaskProperties.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.face.models.MaskProperties.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.face.models.MaskProperties.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.face.models.MaskProperties.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.face.models.MaskProperties.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.MaskProperties.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.face.models.MaskProperties.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.face.models.MaskProperties.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.face.models.MaskProperties.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.face.models.MaskProperties.nose_and_mouth_covered
  name: nose_and_mouth_covered
  summary: A boolean value indicating whether nose and mouth are covered. Required.
  signature: 'nose_and_mouth_covered: bool'
- uid: azure.ai.vision.face.models.MaskProperties.type
  name: type
  summary: '"faceMask", "noMask",

    "otherMaskOrOcclusion", and "uncertain".'
  signature: 'type: str | _models.MaskType'
