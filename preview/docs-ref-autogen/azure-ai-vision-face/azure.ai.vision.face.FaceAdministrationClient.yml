### YamlMime:PythonClass
uid: azure.ai.vision.face.FaceAdministrationClient
name: FaceAdministrationClient
fullName: azure.ai.vision.face.FaceAdministrationClient
module: azure.ai.vision.face
summary: FaceAdministrationClient.
constructor:
  syntax: 'FaceAdministrationClient(endpoint: str, credential: AzureKeyCredential
    | TokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname, for
      example:

      [https:/](https:/)/{resource-name}.cognitiveservices.azure.com). Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential used to authenticate requests to the service. Is either
      a

      AzureKeyCredential type or a TokenCredential type. Required.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'API Version. Known values are "v1.2-preview.1" and None. Default
      value is

      "v1.2-preview.1". Note that overriding this default value may result in unsupported
      behavior.'
    types:
    - <xref:str>
    - <xref:azure.ai.vision.face.models.Versions>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
variables:
- description: LargeFaceListOperations operations
  name: large_face_list
  types:
  - <xref:azure.ai.vision.face.operations.LargeFaceListOperations>
- description: LargePersonGroupOperations operations
  name: large_person_group
  types:
  - <xref:azure.ai.vision.face.operations.LargePersonGroupOperations>
methods:
- uid: azure.ai.vision.face.FaceAdministrationClient.close
  name: close
  signature: close() -> None
- uid: azure.ai.vision.face.FaceAdministrationClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
