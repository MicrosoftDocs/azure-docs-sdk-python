### YamlMime:PythonClass
uid: azure.containerregistry.ContainerRegistryClient
name: ContainerRegistryClient
fullName: azure.containerregistry.ContainerRegistryClient
module: azure.containerregistry
inheritances:
- azure.containerregistry._base_client.ContainerRegistryBaseClient
constructor:
  syntax: ContainerRegistryClient(endpoint, credential=None, **kwargs)
methods:
- uid: azure.containerregistry.ContainerRegistryClient.delete_manifest
  name: delete_manifest
  summary: "Delete a manifest. If the manifest cannot be found or a response status\
    \ code of\n404 is returned an error will not be raised.\n\nExample\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient\n   from azure.identity import DefaultAzureCredential\n\
    \   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"]\n   client = ContainerRepositoryClient(account_url,\
    \ DefaultAzureCredential())\n   client.delete_manifest(\"my_repository\", \"my_tag_or_digest\"\
    )\n   ````"
  signature: delete_manifest(repository, tag_or_digest, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository the manifest belongs to
    isRequired: true
    types:
    - <xref:str>
  - name: tag_or_digest
    description: Tag or digest of the manifest to be deleted
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.containerregistry.ContainerRegistryClient.delete_repository
  name: delete_repository
  summary: 'Delete a repository. If the repository cannot be found or a response status
    code of

    404 is returned an error will not be raised.'
  signature: delete_repository(repository, **kwargs)
  parameters:
  - name: repository
    description: The repository to delete
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Delete a repository from the *ContainerRegistryClient*<!--[!code-python[Main](les\\\
    sample_create_client.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\60\\\\azure-containerregistry-1.0.0b6\\\\samples\\\
    \\sample_create_client.py\", \"xml:space\": \"preserve\", \"force\": false, \"\
    language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
    : false} -->\n\n````python\n\n               client.delete_repository(repository_name,\
    \ tag.name)\n\n   ````\n"
- uid: azure.containerregistry.ContainerRegistryClient.delete_tag
  name: delete_tag
  summary: "Delete a tag from a repository. If the tag cannot be found or a response\
    \ status code of\n404 is returned an error will not be raised.\n\nExample\n\n\
    <!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   from azure.containerregistry import ContainerRepositoryClient\n   from azure.identity\
    \ import DefaultAzureCredential\n   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"\
    ]\n   client = ContainerRepositoryClient(account_url, \"my_repository\", DefaultAzureCredential())\n\
    \   for artifact in client.list_tag_properties():\n       client.delete_tag(\"\
    my_repository\", tag.name)\n   ````"
  signature: delete_tag(repository, tag, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository the tag belongs to
    isRequired: true
    types:
    - <xref:str>
  - name: tag
    description: The tag to be deleted
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.containerregistry.ContainerRegistryClient.get_manifest_properties
  name: get_manifest_properties
  summary: "Get the properties of a registry artifact\n\nExample\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient\n   from azure.identity import DefaultAzureCredential\n\
    \   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"]\n   client = ContainerRepositoryClient(account_url,\
    \ \"my_repository\", DefaultAzureCredential())\n   for artifact in client.list_manifest_properties():\n\
    \       properties = client.get_manifest_properties(\"my_repository\", artifact.digest)\n\
    \   ````"
  signature: get_manifest_properties(repository, tag_or_digest, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  - name: tag_or_digest
    description: Tag or digest of the manifest
    isRequired: true
    types:
    - <xref:str>
  return:
    description: <xref:azure.containerregistry.ArtifactManifestProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.get_repository_properties
  name: get_repository_properties
  summary: Get the properties of a repository
  signature: get_repository_properties(repository, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  return:
    description: <xref:azure.containerregistry.RepositoryProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.get_tag_properties
  name: get_tag_properties
  summary: "Get the properties for a tag\n\nExample\n\n<!-- literal_block {\"ids\"\
    : [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient\n   from azure.identity import DefaultAzureCredential\n\
    \   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"]\n   client = ContainerRepositoryClient(account_url,\
    \ \"my_repository\", DefaultAzureCredential())\n   for tag in client.list_tag_properties():\n\
    \       tag_properties = client.get_tag_properties(\"my_repository\", tag.name)\n\
    \   ````"
  signature: get_tag_properties(repository, tag, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  - name: tag
    description: The tag to get tag properties for
    isRequired: true
    types:
    - <xref:str>
  return:
    description: <xref:azure.containerregistry.ArtifactTagProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.list_manifest_properties
  name: list_manifest_properties
  summary: List the artifacts for a repository
  signature: list_manifest_properties(repository, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  - name: order_by
    description: Query parameter for ordering by time ascending or descending
    types:
    - <xref:azure.containerregistry.ManifestOrder>
    - <xref:str>
  - name: results_per_page
    description: Number of repositories to return per page
    types:
    - <xref:int>
  return:
    description: An iterable of <xref:azure.containerregistry.ArtifactManifestProperties>
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.containerregistry.ArtifactManifestProperties>]
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.list_repository_names
  name: list_repository_names
  summary: List all repositories
  signature: list_repository_names(**kwargs)
  parameters:
  - name: results_per_page
    description: Number of repositories to return per page
    types:
    - <xref:int>
  return:
    description: An iterable of strings
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "List repositories in a container registry account<!--[!code-python[Main](les\\\
    sample_delete_old_tags.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\60\\\\azure-containerregistry-1.0.0b6\\\\samples\\\
    \\sample_delete_old_tags.py\", \"xml:space\": \"preserve\", \"force\": false,\
    \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
    : false} -->\n\n````python\n\n   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"\
    ]\n   credential = DefaultAzureCredential()\n   client = ContainerRegistryClient(account_url,\
    \ credential)\n\n   for repository in client.list_repository_names():\n      \
    \ print(repository)\n\n   ````\n"
- uid: azure.containerregistry.ContainerRegistryClient.list_tag_properties
  name: list_tag_properties
  summary: "List the tags for a repository\n\nExample\n\n<!-- literal_block {\"ids\"\
    : [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient\n   from azure.identity import DefaultAzureCredential\n\
    \   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"]\n   client = ContainerRepositoryClient(account_url,\
    \ \"my_repository\", DefaultAzureCredential())\n   for tag in client.list_tag_properties():\n\
    \       tag_properties = client.get_tag_properties(\"my_repository\", tag.name)\n\
    \   ````"
  signature: list_tag_properties(repository, **kwargs)
  parameters:
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  - name: order_by
    description: Query parameter for ordering by time ascending or descending
    types:
    - <xref:azure.containerregistry.TagOrder>
    - <xref:str>
  - name: results_per_page
    description: Number of repositories to return per page
    types:
    - <xref:int>
  return:
    description: An iterable of <xref:azure.containerregistry.ArtifactTagProperties>
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.containerregistry.ArtifactTagProperties>]
    - <xref:azure.core.paging.ItemPaged>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.update_manifest_properties
  name: update_manifest_properties
  summary: "Set the properties for a manifest\n\nExample\n\n<!-- literal_block {\"\
    ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [],\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient\n   from azure.identity import DefaultAzureCredential\n\
    \   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"]\n   client = ContainerRepositoryClient(account_url,\
    \ \"my_repository\", DefaultAzureCredential())\n   for artifact in client.list_manifest_properties():\n\
    \       received_properties = client.update_manifest_properties(\n           \"\
    my_repository\",\n           artifact.digest,\n           can_delete=False,\n\
    \           can_list=False,\n           can_read=False,\n           can_write=False,\n\
    \       )\n   ````"
  parameters:
  - name: args
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.containerregistry.ArtifactManifestProperties>]
  - name: repository
    description: Repository the manifest belongs to
    isRequired: true
    types:
    - <xref:str>
  - name: tag_or_digest
    description: Tag or digest of the manifest
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: The property's values to be set
    isRequired: true
    types:
    - <xref:azure.containerregistry.ArtifactManifestProperties>
  return:
    description: <xref:azure.containerregistry.ArtifactManifestProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.update_repository_properties
  name: update_repository_properties
  summary: Set the properties of a repository
  parameters:
  - name: args
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.containerregistry.RepositoryProperties>]
  - name: repository
    description: Name of the repository
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: Properties to set for the repository
    isRequired: true
    types:
    - <xref:azure.containerregistry.RepositoryProperties>
  return:
    description: <xref:azure.containerregistry.RepositoryProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.containerregistry.ContainerRegistryClient.update_tag_properties
  name: update_tag_properties
  summary: "Set the properties for a tag\n\nExample\n\n<!-- literal_block {\"ids\"\
    : [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
    : {}, \"linenos\": false} -->\n\n````python\n\n   from azure.containerregistry\
    \ import ContainerRepositoryClient, TagWriteableProperties\n   from azure.identity\
    \ import DefaultAzureCredential\n   account_url = os.environ[\"CONTAINERREGISTRY_ENDPOINT\"\
    ]\n   client = ContainerRepositoryClient(account_url, \"my_repository\", DefaultAzureCredential())\n\
    \   tag_identifier = \"latest\"\n   received = client.update_tag_properties(\n\
    \       \"my_repository\",\n       tag_identifier,\n       can_delete=False,\n\
    \       can_list=False,\n       can_read=False,\n       can_write=False,\n   )\n\
    \   ````"
  parameters:
  - name: args
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.containerregistry.ArtifactTagProperties>]
  - name: repository
    description: Repository the tag belongs to
    isRequired: true
    types:
    - <xref:str>
  - name: tag
    description: Tag to set properties for
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: The property's values to be set
    isRequired: true
    types:
    - <xref:azure.containerregistry.ArtifactTagProperties>
  return:
    description: <xref:azure.containerregistry.ArtifactTagProperties>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
