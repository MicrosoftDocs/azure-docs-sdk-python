### YamlMime:PythonClass
uid: azure.agrifood.farming.aio.operations.WeatherOperations
name: WeatherOperations
fullName: azure.agrifood.farming.aio.operations.WeatherOperations
module: azure.agrifood.farming.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.agrifood.farming.aio.FarmBeatsClient>'s\n\
  >\n> <xref:weather> attribute.\n>"
constructor:
  syntax: WeatherOperations(*args, **kwargs)
methods:
- uid: azure.agrifood.farming.aio.operations.WeatherOperations.begin_create_data_delete_job
  name: begin_create_data_delete_job
  summary: Create a weather data delete job.
  signature: 'async begin_create_data_delete_job(job_id: str, job: JSON, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[JSON]'
  parameters:
  - name: job_id
    description: Job Id supplied by end user. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job
    description: Job parameters supplied by user. Is either a model type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which weather data\n         is\
    \ being fetched. Required.\n       \"extensionId\": \"str\",  # Id of the extension\
    \ to be used for the\n         providerInput. eg. DTN.ClearAg. Required.\n   \
    \    \"partyId\": \"str\",  # The id of the party for which weather data is being\n\
    \         fetched. Required.\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Job created at\n         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"description\": \"str\",  # Optional. Textual description of the resource.\n\
    \       \"durationInSeconds\": 0.0,  # Optional. Duration of the job in seconds.\n\
    \       \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional. Weather data end\
    \ UTC\n         date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"endTime\": \"2020-02-20 00:00:00\",  # Optional. Job end time when available.\n\
    \         Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\"\
    ,  # Optional. Error Code when job failed.\n       \"granularity\": \"str\", \
    \ # Optional. Granularity of weather data. Possible\n         values include:\
    \ 'daily' , 'hourly'.\n       \"id\": \"str\",  # Optional. Unique job id.\n \
    \      \"lastActionDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job was last\
    \ acted\n         upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n   \
    \    \"message\": \"str\",  # Optional. Status message to capture more details\
    \ of the\n         job.\n       \"modifiedBy\": \"str\",  # Optional. Modified\
    \ by user/tenant id.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"properties\": {\n           \"str\": {}  # Optional. A collection\
    \ of key value pairs that belongs\n             to the resource.\"nEach pair must\
    \ not have a key greater than 50\n             characters\"nand must not have\
    \ a value greater than 150 characters.\"nNote: A\n             maximum of 25 key\
    \ value pairs can be provided for a resource and only\n             string,\"\
    nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n\
    \       \"startDateTime\": \"2020-02-20 00:00:00\",  # Optional. Weather data\
    \ start UTC\n         date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"startTime\": \"2020-02-20 00:00:00\",  # Optional. Job start time when\n\
    \         available. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"status\":\
    \ \"str\",  # Optional. Status of the job.\"nPossible values: 'Waiting',\n   \
    \      'Running', 'Succeeded', 'Failed', 'Cancelled'.\n       \"weatherDataType\"\
    : \"str\"  # Optional. Type of weather data. Possible values\n         include:\
    \ 'forecast' , 'historical'.\n   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.WeatherOperations.begin_create_data_ingestion_job
  name: begin_create_data_ingestion_job
  summary: Create a weather data ingestion job.
  signature: 'async begin_create_data_ingestion_job(job_id: str, job: JSON, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[JSON]'
  parameters:
  - name: job_id
    description: Job id supplied by user. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job
    description: Job parameters supplied by user. Is either a model type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which weather data\n         is\
    \ being fetched. Required.\n       \"extensionApiInput\": {\n           \"str\"\
    : {}  # Extension api input dictionary which would be used to\n             feed\
    \ request query/body/parameter information. Required.\n       },\n       \"extensionApiName\"\
    : \"str\",  # Extension api name to which request is to be\n         made. Required.\n\
    \       \"extensionId\": \"str\",  # Id of the extension to be used for the\n\
    \         providerInput. eg. DTN.ClearAg. Required.\n       \"partyId\": \"str\"\
    ,  # The id of the party for which weather data is being\n         fetched. Required.\n\
    \       \"createdBy\": \"str\",  # Optional. Created by user/tenant id.\n    \
    \   \"createdDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job created at\n\
    \         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\"\
    : \"str\",  # Optional. Textual description of the resource.\n       \"durationInSeconds\"\
    : 0.0,  # Optional. Duration of the job in seconds.\n       \"endTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job end time when available.\n         Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\",  # Optional. Error Code\
    \ when job failed.\n       \"extensionDataProviderApiKey\": \"str\",  # Optional.\
    \ Api key of the weather\n         data provider.\n       \"extensionDataProviderAppId\"\
    : \"str\",  # Optional. App id of the weather data\n         provider.\n     \
    \  \"id\": \"str\",  # Optional. Unique job id.\n       \"lastActionDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Job was last acted\n         upon at dateTime.\
    \ Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"message\": \"str\",  # Optional.\
    \ Status message to capture more details of the\n         job.\n       \"modifiedBy\"\
    : \"str\",  # Optional. Modified by user/tenant id.\n       \"name\": \"str\"\
    ,  # Optional. Name to identify resource.\n       \"properties\": {\n        \
    \   \"str\": {}  # Optional. A collection of key value pairs that belongs\n  \
    \           to the resource.\"nEach pair must not have a key greater than 50\n\
    \             characters\"nand must not have a value greater than 150 characters.\"\
    nNote: A\n             maximum of 25 key value pairs can be provided for a resource\
    \ and only\n             string,\"nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n       },\n       \"startTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Job start time when\n         available. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"status\": \"str\"  # Optional. Status of the job.\"nPossible values:\
    \ 'Waiting',\n         'Running', 'Succeeded', 'Failed', 'Cancelled'.\n   }\n\
    \   ````\n"
- uid: azure.agrifood.farming.aio.operations.WeatherOperations.get_data_delete_job_details
  name: get_data_delete_job_details
  summary: Get weather data delete job.
  signature: 'async get_data_delete_job_details(job_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: job_id
    description: Id of the job. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which weather data\n         is\
    \ being fetched. Required.\n       \"extensionId\": \"str\",  # Id of the extension\
    \ to be used for the\n         providerInput. eg. DTN.ClearAg. Required.\n   \
    \    \"partyId\": \"str\",  # The id of the party for which weather data is being\n\
    \         fetched. Required.\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Job created at\n         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"description\": \"str\",  # Optional. Textual description of the resource.\n\
    \       \"durationInSeconds\": 0.0,  # Optional. Duration of the job in seconds.\n\
    \       \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional. Weather data end\
    \ UTC\n         date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"endTime\": \"2020-02-20 00:00:00\",  # Optional. Job end time when available.\n\
    \         Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\"\
    ,  # Optional. Error Code when job failed.\n       \"granularity\": \"str\", \
    \ # Optional. Granularity of weather data. Possible\n         values include:\
    \ 'daily' , 'hourly'.\n       \"id\": \"str\",  # Optional. Unique job id.\n \
    \      \"lastActionDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job was last\
    \ acted\n         upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n   \
    \    \"message\": \"str\",  # Optional. Status message to capture more details\
    \ of the\n         job.\n       \"modifiedBy\": \"str\",  # Optional. Modified\
    \ by user/tenant id.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"properties\": {\n           \"str\": {}  # Optional. A collection\
    \ of key value pairs that belongs\n             to the resource.\"nEach pair must\
    \ not have a key greater than 50\n             characters\"nand must not have\
    \ a value greater than 150 characters.\"nNote: A\n             maximum of 25 key\
    \ value pairs can be provided for a resource and only\n             string,\"\
    nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n\
    \       \"startDateTime\": \"2020-02-20 00:00:00\",  # Optional. Weather data\
    \ start UTC\n         date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"startTime\": \"2020-02-20 00:00:00\",  # Optional. Job start time when\n\
    \         available. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"status\":\
    \ \"str\",  # Optional. Status of the job.\"nPossible values: 'Waiting',\n   \
    \      'Running', 'Succeeded', 'Failed', 'Cancelled'.\n       \"weatherDataType\"\
    : \"str\"  # Optional. Type of weather data. Possible values\n         include:\
    \ 'forecast' , 'historical'.\n   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.WeatherOperations.get_data_ingestion_job_details
  name: get_data_ingestion_job_details
  summary: Get weather ingestion job.
  signature: 'async get_data_ingestion_job_details(job_id: str, **kwargs: Any) ->
    MutableMapping[str, Any]'
  parameters:
  - name: job_id
    description: Id of the job. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which weather data\n         is\
    \ being fetched. Required.\n       \"extensionApiInput\": {\n           \"str\"\
    : {}  # Extension api input dictionary which would be used to\n             feed\
    \ request query/body/parameter information. Required.\n       },\n       \"extensionApiName\"\
    : \"str\",  # Extension api name to which request is to be\n         made. Required.\n\
    \       \"extensionId\": \"str\",  # Id of the extension to be used for the\n\
    \         providerInput. eg. DTN.ClearAg. Required.\n       \"partyId\": \"str\"\
    ,  # The id of the party for which weather data is being\n         fetched. Required.\n\
    \       \"createdBy\": \"str\",  # Optional. Created by user/tenant id.\n    \
    \   \"createdDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job created at\n\
    \         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\"\
    : \"str\",  # Optional. Textual description of the resource.\n       \"durationInSeconds\"\
    : 0.0,  # Optional. Duration of the job in seconds.\n       \"endTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job end time when available.\n         Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\",  # Optional. Error Code\
    \ when job failed.\n       \"extensionDataProviderApiKey\": \"str\",  # Optional.\
    \ Api key of the weather\n         data provider.\n       \"extensionDataProviderAppId\"\
    : \"str\",  # Optional. App id of the weather data\n         provider.\n     \
    \  \"id\": \"str\",  # Optional. Unique job id.\n       \"lastActionDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Job was last acted\n         upon at dateTime.\
    \ Sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"message\": \"str\",  # Optional.\
    \ Status message to capture more details of the\n         job.\n       \"modifiedBy\"\
    : \"str\",  # Optional. Modified by user/tenant id.\n       \"name\": \"str\"\
    ,  # Optional. Name to identify resource.\n       \"properties\": {\n        \
    \   \"str\": {}  # Optional. A collection of key value pairs that belongs\n  \
    \           to the resource.\"nEach pair must not have a key greater than 50\n\
    \             characters\"nand must not have a value greater than 150 characters.\"\
    nNote: A\n             maximum of 25 key value pairs can be provided for a resource\
    \ and only\n             string,\"nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n       },\n       \"startTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Job start time when\n         available. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"status\": \"str\"  # Optional. Status of the job.\"nPossible values:\
    \ 'Waiting',\n         'Running', 'Succeeded', 'Failed', 'Cancelled'.\n   }\n\
    \   ````\n"
- uid: azure.agrifood.farming.aio.operations.WeatherOperations.list
  name: list
  summary: Returns a paginated list of weather data.
  signature: 'list(*, party_id: str, boundary_id: str, extension_id: str, weather_data_type:
    str, granularity: str, start_date_time: datetime | None = None, end_date_time:
    datetime | None = None, skip_token: str | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  keywordOnlyParameters:
  - name: party_id
    description: Party ID. Required.
    types:
    - <xref:str>
  - name: boundary_id
    description: Boundary ID. Required.
    types:
    - <xref:str>
  - name: extension_id
    description: ID of the weather extension. Required.
    types:
    - <xref:str>
  - name: weather_data_type
    description: Type of weather data (forecast/historical). Required.
    types:
    - <xref:str>
  - name: granularity
    description: Granularity of weather data (daily/hourly). Required.
    types:
    - <xref:str>
  - name: start_date_time
    description: 'Weather data start UTC date-time (inclusive), sample format:

      yyyy-MM-ddTHH:mm:ssZ. Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: end_date_time
    description: 'Weather data end UTC date-time (inclusive), sample format:

      yyyy-MM-ddTHH:mm:ssZ. Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: skip_token
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"boundaryId\"\
    : \"str\",  # Boundary ID. Required.\n       \"dateTime\": \"2020-02-20 00:00:00\"\
    ,  # Date-time of the weather data, sample\n         format: yyyy-MM-ddTHH:mm:ssZ.\
    \ Required.\n       \"extensionId\": \"str\",  # ID of the weather extension.\
    \ Required.\n       \"extensionVersion\": \"str\",  # Version of the weather data\
    \ extension.\n         Required.\n       \"granularity\": \"str\",  # Granularity\
    \ of weather data (daily/hourly).\n         Required.\n       \"location\": {\n\
    \           \"latitude\": 0.0,  # Latitude of the location. Required.\n      \
    \     \"longitude\": 0.0  # Longitude of the location. Required.\n       },\n\
    \       \"partyId\": \"str\",  # Party ID. Required.\n       \"weatherDataType\"\
    : \"str\",  # Type of weather data (forecast/historical).\n         Required.\n\
    \       \"cloudCover\": {\n           \"unit\": \"str\",  # Optional. Data unit.\n\
    \           \"value\": 0.0  # Optional. Data value.\n       },\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"dewPoint\": {\n    \
    \       \"unit\": \"str\",  # Optional. Data unit.\n           \"value\": 0.0\
    \  # Optional. Data value.\n       },\n       \"eTag\": \"str\",  # Optional.\
    \ The ETag value to implement optimistic\n         concurrency.\n       \"growingDegreeDay\"\
    : {\n           \"unit\": \"str\",  # Optional. Data unit.\n           \"value\"\
    : 0.0  # Optional. Data value.\n       },\n       \"id\": \"str\",  # Optional.\
    \ Weather data ID.\n       \"modifiedDateTime\": \"2020-02-20 00:00:00\",  # Optional.\
    \ Date-time when\n         resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"precipitation\": {\n           \"unit\": \"str\",  # Optional. Data\
    \ unit.\n           \"value\": 0.0  # Optional. Data value.\n       },\n     \
    \  \"pressure\": {\n           \"unit\": \"str\",  # Optional. Data unit.\n  \
    \         \"value\": 0.0  # Optional. Data value.\n       },\n       \"properties\"\
    : {\n           \"str\": {}  # Optional. A collection of key value pairs that\
    \ belongs\n             to the resource.\"nEach pair must not have a key greater\
    \ than 50\n             characters\"nand must not have a value greater than 250\
    \ characters.\"nNote: A\n             maximum of 25 key value pairs can be provided\
    \ for a resource and only string\n             and numeral values are supported.\n\
    \       },\n       \"relativeHumidity\": {\n           \"unit\": \"str\",  # Optional.\
    \ Data unit.\n           \"value\": 0.0  # Optional. Data value.\n       },\n\
    \       \"soilMoisture\": {\n           \"unit\": \"str\",  # Optional. Data unit.\n\
    \           \"value\": 0.0  # Optional. Data value.\n       },\n       \"soilTemperature\"\
    : {\n           \"unit\": \"str\",  # Optional. Data unit.\n           \"value\"\
    : 0.0  # Optional. Data value.\n       },\n       \"temperature\": {\n       \
    \    \"unit\": \"str\",  # Optional. Data unit.\n           \"value\": 0.0  #\
    \ Optional. Data value.\n       },\n       \"unitSystemCode\": \"str\",  # Optional.\
    \ Unit System like US/SI etc.\n       \"visibility\": {\n           \"unit\":\
    \ \"str\",  # Optional. Data unit.\n           \"value\": 0.0  # Optional. Data\
    \ value.\n       },\n       \"wetBulbTemperature\": {\n           \"unit\": \"\
    str\",  # Optional. Data unit.\n           \"value\": 0.0  # Optional. Data value.\n\
    \       },\n       \"windChill\": {\n           \"unit\": \"str\",  # Optional.\
    \ Data unit.\n           \"value\": 0.0  # Optional. Data value.\n       },\n\
    \       \"windDirection\": {\n           \"unit\": \"str\",  # Optional. Data\
    \ unit.\n           \"value\": 0.0  # Optional. Data value.\n       },\n     \
    \  \"windGust\": {\n           \"unit\": \"str\",  # Optional. Data unit.\n  \
    \         \"value\": 0.0  # Optional. Data value.\n       },\n       \"windSpeed\"\
    : {\n           \"unit\": \"str\",  # Optional. Data unit.\n           \"value\"\
    : 0.0  # Optional. Data value.\n       }\n   }\n   ````\n"
