### YamlMime:PythonClass
uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations
name: SensorPartnerIntegrationsOperations
fullName: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations
module: azure.agrifood.farming.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.agrifood.farming.FarmBeatsClient>'s\n\
  >\n> <xref:sensor_partner_integrations> attribute.\n>"
constructor:
  syntax: SensorPartnerIntegrationsOperations(*args, **kwargs)
methods:
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.check_consent
  name: check_consent
  summary: Checks consent for partner integration.
  signature: 'check_consent(sensor_partner_id: str, integration_id: str, *, key: str,
    **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: integration_id
    description: Id of the integration object. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: key
    description: Partner integration key. Required.
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"consented\"\
    : bool,  # Optional. Flag to determine the status of partner\n         integration\
    \ consent.\n       \"integrationId\": \"str\",  # Optional. Id of the integration.\n\
    \       \"sensorPartnerId\": \"str\"  # Optional. Id of the associated sensor\
    \ partner.\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.create_or_update
  name: create_or_update
  summary: Create or update an integration with a sensor partner.
  signature: 'create_or_update(sensor_partner_id: str, integration_id: str, sensor_partner_integration_model:
    JSON, *, content_type: str = ''application/merge-patch+json'', **kwargs: Any)
    -> JSON'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: integration_id
    description: Id of the integration to be created. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: sensor_partner_integration_model
    description: 'Partner integration model. Is either a model type or a

      IO type. Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200, 201\n   response == {\n       \"\
    createdBy\": \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"integrationId\"\
    : \"str\",  # Optional. Id of the integration.\n       \"modifiedBy\": \"str\"\
    ,  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"partyId\": \"str\",  # Optional. Id of\
    \ the party.\n       \"properties\": {\n           \"str\": {}  # Optional. A\
    \ collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\"  # Optional. Status of the resource.\n\
    \   }\n   ````\n"
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.delete
  name: delete
  summary: Deletes a partner integration model entity.
  signature: 'delete(sensor_partner_id: str, integration_id: str, **kwargs: Any) ->
    None'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: integration_id
    description: Id of the integration to be deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.generate_consent_link
  name: generate_consent_link
  summary: Generates partner integration consent link.
  signature: 'generate_consent_link(sensor_partner_id: str, integration_id: str, **kwargs:
    Any) -> MutableMapping[str, Any]'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: integration_id
    description: Id of the integration object. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"consentExpiryDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Consent expiry\n         date time, sample\
    \ format: yyyy-MM-ddTHH:mm:ssZ.\n       \"consentLink\": \"str\"  # Optional.\
    \ Consent link.\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.get
  name: get
  summary: Gets a partner integration model entity.
  signature: 'get(sensor_partner_id: str, integration_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: integration_id
    description: Id of the integration object. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"integrationId\"\
    : \"str\",  # Optional. Id of the integration.\n       \"modifiedBy\": \"str\"\
    ,  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"partyId\": \"str\",  # Optional. Id of\
    \ the party.\n       \"properties\": {\n           \"str\": {}  # Optional. A\
    \ collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\"  # Optional. Status of the resource.\n\
    \   }\n   ````\n"
- uid: azure.agrifood.farming.operations.SensorPartnerIntegrationsOperations.list
  name: list
  summary: Gets partner integration models.
  signature: 'list(sensor_partner_id: str, *, integration_ids: List[str] | None =
    None, party_ids: List[str] | None = None, ids: List[str] | None = None, names:
    List[str] | None = None, property_filters: List[str] | None = None, statuses:
    List[str] | None = None, min_created_date_time: datetime | None = None, max_created_date_time:
    datetime | None = None, min_last_modified_date_time: datetime | None = None, max_last_modified_date_time:
    datetime | None = None, skip_token: str | None = None, **kwargs: Any) -> Iterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: sensor_partner_id
    description: Id of the associated sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: integration_ids
    description: Ids of the partner integration models. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: party_ids
    description: Ids of the parties. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: ids
    description: Ids of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: names
    description: Names of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: property_filters
    description: 'Filters on key-value pairs within the Properties object.

      eg. "{testKey} eq {testValue}". Default value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: statuses
    description: Statuses of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: min_created_date_time
    description: 'Minimum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: max_created_date_time
    description: 'Maximum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: min_last_modified_date_time
    description: 'Minimum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: max_last_modified_date_time
    description: 'Maximum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: skip_token
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"integrationId\"\
    : \"str\",  # Optional. Id of the integration.\n       \"modifiedBy\": \"str\"\
    ,  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"partyId\": \"str\",  # Optional. Id of\
    \ the party.\n       \"properties\": {\n           \"str\": {}  # Optional. A\
    \ collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\"  # Optional. Status of the resource.\n\
    \   }\n   ````\n"
