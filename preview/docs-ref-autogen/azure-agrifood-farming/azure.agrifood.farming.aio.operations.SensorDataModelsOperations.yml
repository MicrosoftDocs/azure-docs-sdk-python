### YamlMime:PythonClass
uid: azure.agrifood.farming.aio.operations.SensorDataModelsOperations
name: SensorDataModelsOperations
fullName: azure.agrifood.farming.aio.operations.SensorDataModelsOperations
module: azure.agrifood.farming.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.agrifood.farming.aio.FarmBeatsClient>'s\n\
  >\n> <xref:sensor_data_models> attribute.\n>"
constructor:
  syntax: SensorDataModelsOperations(*args, **kwargs)
methods:
- uid: azure.agrifood.farming.aio.operations.SensorDataModelsOperations.create_or_update
  name: create_or_update
  summary: Create a sensor data model entity.
  signature: 'async create_or_update(sensor_partner_id: str, sensor_data_model_id:
    str, sensor_data_model_object: JSON, *, content_type: str = ''application/merge-patch+json'',
    **kwargs: Any) -> JSON'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: sensor_data_model_id
    description: Id of the sensor data model. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: sensor_data_model_object
    description: 'Sensor data model object details. Is either a model type or a

      IO type. Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200, 201\n   response == {\n       \"\
    measures\": {\n           \"str\": {\n               \"dataType\": \"str\",  #\
    \ Sensor measure data type. Required.\n                 Known values are: \"Bool\"\
    , \"Double\", \"DateTime\", \"Long\", and \"String\".\n               \"description\"\
    : \"str\",  # Optional. Description of sensor\n                 measure.\n   \
    \            \"properties\": {\n                   \"str\": {}  # Optional. A\
    \ collection of key value\n                     pairs for sensor data model.\"\
    nEach pair must not have a key greater\n                     than 50 characters\"\
    nand must not have a value greater than 150\n                     characters.\"\
    nNote: A maximum of 25 key value pairs can be provided\n                     for\
    \ a model and\"nonly string, numeral and datetime\n                     (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n               },\n               \"type\": \"str\",\
    \  # Optional. Measurement type of sensor data.\n               \"unit\": \"str\"\
    \  # Optional. Unit of sensor measure.\n           }\n       },\n       \"createdBy\"\
    : \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"manufacturer\"\
    : \"str\",  # Optional. Sensor manufacturer.\n       \"modifiedBy\": \"str\",\
    \  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"productCode\": \"str\",  # Optional. Sensor\
    \ productCode.\n       \"properties\": {\n           \"str\": {}  # Optional.\
    \ A collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\",  # Optional. Status of the resource.\n\
    \       \"type\": \"str\"  # Optional. Type of sensor.\n   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.SensorDataModelsOperations.delete
  name: delete
  summary: Deletes a sensor data model entity.
  signature: 'async delete(sensor_partner_id: str, sensor_data_model_id: str, **kwargs:
    Any) -> None'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: sensor_data_model_id
    description: Id of the sensor data model resource. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.agrifood.farming.aio.operations.SensorDataModelsOperations.get
  name: get
  summary: Gets a sensor data model entity.
  signature: 'async get(sensor_partner_id: str, sensor_data_model_id: str, **kwargs:
    Any) -> MutableMapping[str, Any]'
  parameters:
  - name: sensor_partner_id
    description: Id of the sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: sensor_data_model_id
    description: Id of the sensor data model resource. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"measures\"\
    : {\n           \"str\": {\n               \"dataType\": \"str\",  # Sensor measure\
    \ data type. Required.\n                 Known values are: \"Bool\", \"Double\"\
    , \"DateTime\", \"Long\", and \"String\".\n               \"description\": \"\
    str\",  # Optional. Description of sensor\n                 measure.\n       \
    \        \"properties\": {\n                   \"str\": {}  # Optional. A collection\
    \ of key value\n                     pairs for sensor data model.\"nEach pair\
    \ must not have a key greater\n                     than 50 characters\"nand must\
    \ not have a value greater than 150\n                     characters.\"nNote:\
    \ A maximum of 25 key value pairs can be provided\n                     for a\
    \ model and\"nonly string, numeral and datetime\n                     (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n               },\n               \"type\": \"str\",\
    \  # Optional. Measurement type of sensor data.\n               \"unit\": \"str\"\
    \  # Optional. Unit of sensor measure.\n           }\n       },\n       \"createdBy\"\
    : \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"manufacturer\"\
    : \"str\",  # Optional. Sensor manufacturer.\n       \"modifiedBy\": \"str\",\
    \  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"productCode\": \"str\",  # Optional. Sensor\
    \ productCode.\n       \"properties\": {\n           \"str\": {}  # Optional.\
    \ A collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\",  # Optional. Status of the resource.\n\
    \       \"type\": \"str\"  # Optional. Type of sensor.\n   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.SensorDataModelsOperations.list
  name: list
  summary: Returns a paginated list of sensor data model resources.
  signature: 'list(sensor_partner_id: str, *, ids: List[str] | None = None, names:
    List[str] | None = None, property_filters: List[str] | None = None, statuses:
    List[str] | None = None, min_created_date_time: datetime | None = None, max_created_date_time:
    datetime | None = None, min_last_modified_date_time: datetime | None = None, max_last_modified_date_time:
    datetime | None = None, skip_token: str | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: sensor_partner_id
    description: Id of the associated sensor partner. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: ids
    description: Ids of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: names
    description: Names of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: property_filters
    description: 'Filters on key-value pairs within the Properties object.

      eg. "{testKey} eq {testValue}". Default value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: statuses
    description: Statuses of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: min_created_date_time
    description: 'Minimum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: max_created_date_time
    description: 'Maximum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: min_last_modified_date_time
    description: 'Minimum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: max_last_modified_date_time
    description: 'Maximum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: skip_token
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"measures\"\
    : {\n           \"str\": {\n               \"dataType\": \"str\",  # Sensor measure\
    \ data type. Required.\n                 Known values are: \"Bool\", \"Double\"\
    , \"DateTime\", \"Long\", and \"String\".\n               \"description\": \"\
    str\",  # Optional. Description of sensor\n                 measure.\n       \
    \        \"properties\": {\n                   \"str\": {}  # Optional. A collection\
    \ of key value\n                     pairs for sensor data model.\"nEach pair\
    \ must not have a key greater\n                     than 50 characters\"nand must\
    \ not have a value greater than 150\n                     characters.\"nNote:\
    \ A maximum of 25 key value pairs can be provided\n                     for a\
    \ model and\"nonly string, numeral and datetime\n                     (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n               },\n               \"type\": \"str\",\
    \  # Optional. Measurement type of sensor data.\n               \"unit\": \"str\"\
    \  # Optional. Unit of sensor measure.\n           }\n       },\n       \"createdBy\"\
    : \"str\",  # Optional. Created by user/tenant id.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Date-time when\n         resource was\
    \ created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\"\
    ,  # Optional. Textual description of the resource.\n       \"eTag\": \"str\"\
    ,  # Optional. The ETag value to implement optimistic\n         concurrency.\n\
    \       \"id\": \"str\",  # Optional. Id of the resource.\n       \"manufacturer\"\
    : \"str\",  # Optional. Sensor manufacturer.\n       \"modifiedBy\": \"str\",\
    \  # Optional. Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was last modified,\
    \ sample format: yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional.\
    \ Name to identify resource.\n       \"productCode\": \"str\",  # Optional. Sensor\
    \ productCode.\n       \"properties\": {\n           \"str\": {}  # Optional.\
    \ A collection of key value pairs that belongs\n             to the resource.\"\
    nEach pair must not have a key greater than 50\n             characters\"nand\
    \ must not have a value greater than 150 characters.\"nNote: A\n             maximum\
    \ of 25 key value pairs can be provided for a resource and\"nonly\n          \
    \   string, numeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n\
    \       },\n       \"sensorPartnerId\": \"str\",  # Optional. Id of the associated\
    \ sensor partner.\n       \"status\": \"str\",  # Optional. Status of the resource.\n\
    \       \"type\": \"str\"  # Optional. Type of sensor.\n   }\n   ````\n"
