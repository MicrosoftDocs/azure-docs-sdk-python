### YamlMime:PythonClass
uid: azure.agrifood.farming.aio.operations.CropsOperations
name: CropsOperations
fullName: azure.agrifood.farming.aio.operations.CropsOperations
module: azure.agrifood.farming.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.agrifood.farming.aio.FarmBeatsClient>'s\n\
  >\n> <xref:crops> attribute.\n>"
constructor:
  syntax: CropsOperations(*args, **kwargs)
methods:
- uid: azure.agrifood.farming.aio.operations.CropsOperations.create_or_update
  name: create_or_update
  summary: Creates or updates a crop resource.
  signature: 'async create_or_update(crop_id: str, crop: JSON, *, content_type: str
    = ''application/merge-patch+json'', **kwargs: Any) -> JSON'
  parameters:
  - name: crop_id
    description: Id of the crop resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: crop
    description: 'Crop resource payload to create or update. Is either a model type
      or a IO type.

      Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200, 201\n   response == {\n       \"\
    breedingMethod\": \"str\",  # Optional. Breeding Method. Known values are:\n \
    \        \"VARIETY\", \"HYBRID\", and \"UNKNOWN\".\n       \"createdBy\": \"str\"\
    ,  # Optional. Created by user/tenant id.\n       \"createdDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time when\n         resource was created, sample\
    \ format: yyyy-MM-ddTHH:mm:ssZ.\n       \"description\": \"str\",  # Optional.\
    \ Textual description of the resource.\n       \"eTag\": \"str\",  # Optional.\
    \ The ETag value to implement optimistic\n         concurrency.\n       \"id\"\
    : \"str\",  # Optional. Unique resource ID.\n       \"measurements\": {\n    \
    \       \"str\": {\n               \"unit\": \"str\",  # Optional. Data unit.\n\
    \               \"value\": 0.0  # Optional. Data value.\n           }\n      \
    \ },\n       \"modifiedBy\": \"str\",  # Optional. Modified by user/tenant id.\n\
    \       \"modifiedDateTime\": \"2020-02-20 00:00:00\",  # Optional. Date-time\
    \ when\n         resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"name\": \"str\",  # Optional. Name to identify resource.\n       \"\
    phenotype\": \"str\",  # Optional. Crop phenotype.\n       \"properties\": {\n\
    \           \"str\": {}  # Optional. A collection of key value pairs that belongs\n\
    \             to the resource.\"nEach pair must not have a key greater than 50\n\
    \             characters\"nand must not have a value greater than 150 characters.\"\
    nNote: A\n             maximum of 25 key value pairs can be provided for a resource\
    \ and only\n             string,\"nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ)\
    \ values are supported.\n       },\n       \"source\": \"str\",  # Optional. Source\
    \ of the resource.\n       \"status\": \"str\"  # Optional. Status of the resource.\n\
    \   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.CropsOperations.delete
  name: delete
  summary: Deletes Crop for given crop id.
  signature: 'async delete(crop_id: str, **kwargs: Any) -> None'
  parameters:
  - name: crop_id
    description: Id of crop to be deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.agrifood.farming.aio.operations.CropsOperations.get
  name: get
  summary: Gets a specified crop resource.
  signature: 'async get(crop_id: str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: crop_id
    description: Id of the crop. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"breedingMethod\"\
    : \"str\",  # Optional. Breeding Method. Known values are:\n         \"VARIETY\"\
    , \"HYBRID\", and \"UNKNOWN\".\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Date-time when\n         resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"description\": \"str\",  # Optional. Textual description of the resource.\n\
    \       \"eTag\": \"str\",  # Optional. The ETag value to implement optimistic\n\
    \         concurrency.\n       \"id\": \"str\",  # Optional. Unique resource ID.\n\
    \       \"measurements\": {\n           \"str\": {\n               \"unit\": \"\
    str\",  # Optional. Data unit.\n               \"value\": 0.0  # Optional. Data\
    \ value.\n           }\n       },\n       \"modifiedBy\": \"str\",  # Optional.\
    \ Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Date-time when\n         resource was last modified, sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"phenotype\": \"str\",  # Optional. Crop phenotype.\n   \
    \    \"properties\": {\n           \"str\": {}  # Optional. A collection of key\
    \ value pairs that belongs\n             to the resource.\"nEach pair must not\
    \ have a key greater than 50\n             characters\"nand must not have a value\
    \ greater than 150 characters.\"nNote: A\n             maximum of 25 key value\
    \ pairs can be provided for a resource and only\n             string,\"nnumeral\
    \ and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n     \
    \  \"source\": \"str\",  # Optional. Source of the resource.\n       \"status\"\
    : \"str\"  # Optional. Status of the resource.\n   }\n   ````\n"
- uid: azure.agrifood.farming.aio.operations.CropsOperations.list
  name: list
  summary: Returns a paginated list of crop resources.
  signature: 'list(*, phenotypes: List[str] | None = None, breeding_methods: List[str]
    | None = None, ids: List[str] | None = None, names: List[str] | None = None, property_filters:
    List[str] | None = None, statuses: List[str] | None = None, min_created_date_time:
    datetime | None = None, max_created_date_time: datetime | None = None, min_last_modified_date_time:
    datetime | None = None, max_last_modified_date_time: datetime | None = None, skip_token:
    str | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: phenotypes
    description: Crop phenotypes of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: breeding_methods
    description: Breeding method of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: ids
    description: Ids of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: names
    description: Names of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: property_filters
    description: 'Filters on key-value pairs within the Properties object.

      eg. "{testKey} eq {testValue}". Default value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: statuses
    description: Statuses of the resource. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: min_created_date_time
    description: 'Minimum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: max_created_date_time
    description: 'Maximum creation date of resource (inclusive). Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: min_last_modified_date_time
    description: 'Minimum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: max_last_modified_date_time
    description: 'Maximum last modified date of resource (inclusive).

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: skip_token
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"breedingMethod\"\
    : \"str\",  # Optional. Breeding Method. Known values are:\n         \"VARIETY\"\
    , \"HYBRID\", and \"UNKNOWN\".\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Date-time when\n         resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"description\": \"str\",  # Optional. Textual description of the resource.\n\
    \       \"eTag\": \"str\",  # Optional. The ETag value to implement optimistic\n\
    \         concurrency.\n       \"id\": \"str\",  # Optional. Unique resource ID.\n\
    \       \"measurements\": {\n           \"str\": {\n               \"unit\": \"\
    str\",  # Optional. Data unit.\n               \"value\": 0.0  # Optional. Data\
    \ value.\n           }\n       },\n       \"modifiedBy\": \"str\",  # Optional.\
    \ Modified by user/tenant id.\n       \"modifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Date-time when\n         resource was last modified, sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"phenotype\": \"str\",  # Optional. Crop phenotype.\n   \
    \    \"properties\": {\n           \"str\": {}  # Optional. A collection of key\
    \ value pairs that belongs\n             to the resource.\"nEach pair must not\
    \ have a key greater than 50\n             characters\"nand must not have a value\
    \ greater than 150 characters.\"nNote: A\n             maximum of 25 key value\
    \ pairs can be provided for a resource and only\n             string,\"nnumeral\
    \ and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n     \
    \  \"source\": \"str\",  # Optional. Source of the resource.\n       \"status\"\
    : \"str\"  # Optional. Status of the resource.\n   }\n   ````\n"
