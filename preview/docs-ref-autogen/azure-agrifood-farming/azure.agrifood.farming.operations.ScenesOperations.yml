### YamlMime:PythonClass
uid: azure.agrifood.farming.operations.ScenesOperations
name: ScenesOperations
fullName: azure.agrifood.farming.operations.ScenesOperations
module: azure.agrifood.farming.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.agrifood.farming.FarmBeatsClient>'s\n\
  >\n> <xref:scenes> attribute.\n>"
constructor:
  syntax: ScenesOperations(*args, **kwargs)
methods:
- uid: azure.agrifood.farming.operations.ScenesOperations.begin_create_satellite_data_ingestion_job
  name: begin_create_satellite_data_ingestion_job
  summary: Create a satellite data ingestion job.
  signature: 'begin_create_satellite_data_ingestion_job(job_id: str, job: JSON, *,
    content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[JSON]'
  parameters:
  - name: job_id
    description: JobId provided by user. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job
    description: Job parameters supplied by user. Is either a model type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which satellite\n         data\
    \ is being fetched. Required.\n       \"endDateTime\": \"2020-02-20 00:00:00\"\
    ,  # End Date. Required.\n       \"partyId\": \"str\",  # Party Id. Required.\n\
    \       \"source\": \"str\",  # Source of satellite data. Available Value:\n \
    \        Sentinel_2_L2A. Required. Known values are: \"Sentinel_2_L2A\" and\n\
    \         \"Sentinel_2_L1C\".\n       \"startDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Start Date. Required.\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Job created at\n         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"data\": {\n           \"imageFormats\": [\n               \"str\"  #\
    \ Optional. List of ImageFormats. Available value:\n                 TIF.\n  \
    \         ],\n           \"imageNames\": [\n               \"str\"  # Optional.\
    \ List of ImageNames.\n           ],\n           \"imageResolutions\": [\n   \
    \            0.0  # Optional. List of ImageResolutions in meters.\n          \
    \       Available values: 10, 20, 60.\n           ]\n       },\n       \"description\"\
    : \"str\",  # Optional. Textual description of the resource.\n       \"durationInSeconds\"\
    : 0.0,  # Optional. Duration of the job in seconds.\n       \"endTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job end time when available.\n         Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\",  # Optional. Error Code\
    \ when job failed.\n       \"id\": \"str\",  # Optional. Unique job id.\n    \
    \   \"lastActionDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job was last\
    \ acted\n         upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n   \
    \    \"message\": \"str\",  # Optional. Status message to capture more details\
    \ of the\n         job.\n       \"modifiedBy\": \"str\",  # Optional. Modified\
    \ by user/tenant id.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"properties\": {\n           \"str\": {}  # Optional. A collection\
    \ of key value pairs that belongs\n             to the resource.\"nEach pair must\
    \ not have a key greater than 50\n             characters\"nand must not have\
    \ a value greater than 150 characters.\"nNote: A\n             maximum of 25 key\
    \ value pairs can be provided for a resource and only\n             string,\"\
    nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n\
    \       \"provider\": \"str\",  # Optional. Provider of satellite data. Available\
    \ Value:\n         Microsoft. \"Microsoft\"\n       \"startTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job start time when\n         available. Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"status\": \"str\"  # Optional. Status of the\
    \ job.\"nPossible values: 'Waiting',\n         'Running', 'Succeeded', 'Failed',\
    \ 'Cancelled'.\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.ScenesOperations.download
  name: download
  summary: Downloads and returns file Stream as response for the given input filePath.
  signature: 'download(*, file_path: str, **kwargs: Any) -> Iterator[bytes]'
  keywordOnlyParameters:
  - name: file_path
    description: cloud storage path of scene file. Required.
    types:
    - <xref:str>
  return:
    description: Iterator of the response bytes
    types:
    - <xref:typing.Iterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.agrifood.farming.operations.ScenesOperations.get_satellite_data_ingestion_job_details
  name: get_satellite_data_ingestion_job_details
  summary: Get a satellite data ingestion job.
  signature: 'get_satellite_data_ingestion_job_details(job_id: str, **kwargs: Any)
    -> MutableMapping[str, Any]'
  parameters:
  - name: job_id
    description: Id of the job. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"boundaryId\"\
    : \"str\",  # The id of the boundary object for which satellite\n         data\
    \ is being fetched. Required.\n       \"endDateTime\": \"2020-02-20 00:00:00\"\
    ,  # End Date. Required.\n       \"partyId\": \"str\",  # Party Id. Required.\n\
    \       \"source\": \"str\",  # Source of satellite data. Available Value:\n \
    \        Sentinel_2_L2A. Required. Known values are: \"Sentinel_2_L2A\" and\n\
    \         \"Sentinel_2_L1C\".\n       \"startDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Start Date. Required.\n       \"createdBy\": \"str\",  # Optional. Created\
    \ by user/tenant id.\n       \"createdDateTime\": \"2020-02-20 00:00:00\",  #\
    \ Optional. Job created at\n         dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"data\": {\n           \"imageFormats\": [\n               \"str\"  #\
    \ Optional. List of ImageFormats. Available value:\n                 TIF.\n  \
    \         ],\n           \"imageNames\": [\n               \"str\"  # Optional.\
    \ List of ImageNames.\n           ],\n           \"imageResolutions\": [\n   \
    \            0.0  # Optional. List of ImageResolutions in meters.\n          \
    \       Available values: 10, 20, 60.\n           ]\n       },\n       \"description\"\
    : \"str\",  # Optional. Textual description of the resource.\n       \"durationInSeconds\"\
    : 0.0,  # Optional. Duration of the job in seconds.\n       \"endTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job end time when available.\n         Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"errorCode\": \"str\",  # Optional. Error Code\
    \ when job failed.\n       \"id\": \"str\",  # Optional. Unique job id.\n    \
    \   \"lastActionDateTime\": \"2020-02-20 00:00:00\",  # Optional. Job was last\
    \ acted\n         upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.\n   \
    \    \"message\": \"str\",  # Optional. Status message to capture more details\
    \ of the\n         job.\n       \"modifiedBy\": \"str\",  # Optional. Modified\
    \ by user/tenant id.\n       \"name\": \"str\",  # Optional. Name to identify\
    \ resource.\n       \"properties\": {\n           \"str\": {}  # Optional. A collection\
    \ of key value pairs that belongs\n             to the resource.\"nEach pair must\
    \ not have a key greater than 50\n             characters\"nand must not have\
    \ a value greater than 150 characters.\"nNote: A\n             maximum of 25 key\
    \ value pairs can be provided for a resource and only\n             string,\"\
    nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.\n       },\n\
    \       \"provider\": \"str\",  # Optional. Provider of satellite data. Available\
    \ Value:\n         Microsoft. \"Microsoft\"\n       \"startTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Job start time when\n         available. Sample format:\
    \ yyyy-MM-ddTHH:mm:ssZ.\n       \"status\": \"str\"  # Optional. Status of the\
    \ job.\"nPossible values: 'Waiting',\n         'Running', 'Succeeded', 'Failed',\
    \ 'Cancelled'.\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.ScenesOperations.get_stac_feature
  name: get_stac_feature
  summary: Get a feature(SpatioTemporal Asset Catalog (STAC) Item) for given collection
    and feature id.
  signature: 'get_stac_feature(collection_id: str, feature_id: str, **kwargs: Any)
    -> MutableMapping[str, Any]'
  parameters:
  - name: collection_id
    description: 'Collection Id to be fetched. Known values are: "Sentinel_2_L2A"
      and

      "Sentinel_2_L1C". Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: feature_id
    description: Feature Id to be fetched. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"assets\"\
    : {\n           \"str\": {\n               \"href\": \"str\",  # Link to the asset\
    \ object. Required.\n               \"description\": \"str\",  # Optional. A description\
    \ of the Asset\n                 providing additional details, such as how it\
    \ was processed or created.\n               \"roles\": [\n                   \"\
    str\"  # Optional. The semantic roles of the asset,\n                     similar\
    \ to the use of rel in links.\n               ],\n               \"title\": \"\
    str\",  # Optional. The displayed title for clients\n                 and users.\n\
    \               \"type\": \"str\"  # Optional. Media type of the asset.\n    \
    \       }\n       },\n       \"id\": \"str\",  # Provider identifier. Globally\
    \ unique ID by Data provider.\n         Required.\n       \"links\": [\n     \
    \      {\n               \"href\": \"str\",  # The actual link in the format of\
    \ an URL.\n                 Required.\n               \"rel\": \"str\",  # Relationship\
    \ between the current document\n                 and the linked document. Required.\n\
    \               \"title\": \"str\",  # Optional. A human readable title to be\n\
    \                 used in rendered displays of the link.\n               \"type\"\
    : \"str\"  # Optional. Media type of the referenced\n                 entity.\n\
    \           }\n       ],\n       \"properties\": {},  # A dictionary of additional\
    \ metadata for the item.\n         Required.\n       \"stacVersion\": \"str\"\
    ,  # The STAC version the Feature implements. Required.\n       \"type\": \"str\"\
    ,  # Type of the GeoJSON Object. It's value is always Feature.\n         Required.\n\
    \       \"bbox\": [\n           0.0  # Optional. Bounding box of the feature.\n\
    \       ],\n       \"collection\": \"str\",  # Optional. The id of the STAC Collection\
    \ this Feature\n         references.\n       \"geometry\": {},  # Optional. Defines\
    \ the full footprint of the asset\n         represented by this item.\"nIts a\
    \ GeoJSON geometry.\n       \"stacExtensions\": [\n           \"str\"  # Optional.\
    \ A list of extensions the Feature implements.\n       ]\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.ScenesOperations.list
  name: list
  summary: Returns a paginated list of scene resources.
  signature: 'list(*, provider: str, party_id: str, boundary_id: str, source: str,
    start_date_time: datetime | None = None, end_date_time: datetime | None = None,
    max_cloud_coverage_percentage: float = 100, max_dark_pixel_coverage_percentage:
    float = 100, image_names: List[str] | None = None, image_resolutions: List[float]
    | None = None, image_formats: List[str] | None = None, skip_token: str | None
    = None, **kwargs: Any) -> Iterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: provider
    description: Provider name of scene data. Required.
    types:
    - <xref:str>
  - name: party_id
    description: PartyId. Required.
    types:
    - <xref:str>
  - name: boundary_id
    description: BoundaryId. Required.
    types:
    - <xref:str>
  - name: source
    description: 'Source name of scene data, Available Values: Sentinel_2_L2A, Sentinel_2_L1C.

      Required.'
    types:
    - <xref:str>
  - name: start_date_time
    description: 'Scene start UTC datetime (inclusive), sample format:

      yyyy-MM-ddThh:mm:ssZ. Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: end_date_time
    description: 'Scene end UTC datetime (inclusive), sample format: yyyy-MM-dThh:mm:ssZ.

      Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: max_cloud_coverage_percentage
    description: 'Filter scenes with cloud coverage percentage less than

      max value. Range [0 to 100.0]. Default value is 100.'
    types:
    - <xref:float>
  - name: max_dark_pixel_coverage_percentage
    description: 'Filter scenes with dark pixel coverage percentage

      less than max value. Range [0 to 100.0]. Default value is 100.'
    types:
    - <xref:float>
  - name: image_names
    description: List of image names to be filtered. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: image_resolutions
    description: 'List of image resolutions in meters to be filtered. Default value

      is None.'
    types:
    - <xref:list>[<xref:float>]
  - name: image_formats
    description: List of image formats to be filtered. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: skip_token
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"boundaryId\"\
    : \"str\",  # Optional. Boundary ID which belongs to the scene.\n       \"cloudCoverPercentage\"\
    : 0.0,  # Optional. Cloud cover percentage of the\n         scene.\n       \"\
    darkPixelPercentage\": 0.0,  # Optional. Dark pixel percentage of the scene.\n\
    \       \"eTag\": \"str\",  # Optional. The ETag value to implement optimistic\n\
    \         concurrency.\n       \"id\": \"str\",  # Optional. Unique scene resource\
    \ ID.\n       \"imageFiles\": [\n           {\n               \"name\": \"str\"\
    ,  # Name of the image file. Required.\n               \"fileLink\": \"str\",\
    \  # Optional. Link of the image file.\n               \"imageFormat\": \"str\"\
    ,  # Optional. ImageFormat. Available\n                 value: TIF. \"TIF\"\n\
    \               \"resolution\": 0.0  # Optional. Resolution of image file in\n\
    \                 meters.\n           }\n       ],\n       \"imageFormat\": \"\
    str\",  # Optional. ImageFormat. Available value: TIF. \"TIF\"\n       \"ndviMedianValue\"\
    : 0.0,  # Optional. Median of NDVI of the scene.\n       \"partyId\": \"str\"\
    ,  # Optional. Party ID which belongs to the scene.\n       \"provider\": \"str\"\
    ,  # Optional. Data provider of the scene.\n       \"sceneDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. Date-time of the scene,\n         sample format: yyyy-MM-ddTHH:mm:ssZ.\n\
    \       \"source\": \"str\"  # Optional. Data source of the scene.\n   }\n   ````\n"
- uid: azure.agrifood.farming.operations.ScenesOperations.search_features
  name: search_features
  summary: Search for STAC features by collection id, bbox, intersecting geometry,
    start and end datetime.
  signature: 'search_features(collection_id: str, search_features_query: JSON, *,
    maxpagesize: int = 10, skip: int | None = None, content_type: str = ''application/json'',
    **kwargs: Any) -> JSON'
  parameters:
  - name: collection_id
    description: 'Collection Id to be searched. Known values are: "Sentinel_2_L2A"
      and

      "Sentinel_2_L1C". Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: search_features_query
    description: Query filters. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: maxpagesize
    description: 'Maximum number of features needed (inclusive). Minimum = 1, Maximum
      =

      100, Default value = 10. Default value is 10.'
    types:
    - <xref:int>
  - name: skip
    description: Skip token for getting next set of results. Default value is None.
    types:
    - <xref:int>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"features\"\
    : [\n           {\n               \"assets\": {\n                   \"str\": {\n\
    \                       \"href\": \"str\",  # Link to the asset object.\n    \
    \                     Required.\n                       \"description\": \"str\"\
    ,  # Optional. A\n                         description of the Asset providing\
    \ additional details, such as\n                         how it was processed or\
    \ created.\n                       \"roles\": [\n                           \"\
    str\"  # Optional. The semantic roles\n                             of the asset,\
    \ similar to the use of rel in links.\n                       ],\n           \
    \            \"title\": \"str\",  # Optional. The displayed\n                \
    \         title for clients and users.\n                       \"type\": \"str\"\
    \  # Optional. Media type of the\n                         asset.\n          \
    \         }\n               },\n               \"id\": \"str\",  # Provider identifier.\
    \ Globally unique ID by\n                 Data provider. Required.\n         \
    \      \"links\": [\n                   {\n                       \"href\": \"\
    str\",  # The actual link in the\n                         format of an URL. Required.\n\
    \                       \"rel\": \"str\",  # Relationship between the\n      \
    \                   current document and the linked document. Required.\n    \
    \                   \"title\": \"str\",  # Optional. A human readable\n      \
    \                   title to be used in rendered displays of the link.\n     \
    \                  \"type\": \"str\"  # Optional. Media type of the\n        \
    \                 referenced entity.\n                   }\n               ],\n\
    \               \"properties\": {},  # A dictionary of additional metadata for\n\
    \                 the item. Required.\n               \"stacVersion\": \"str\"\
    ,  # The STAC version the Feature\n                 implements. Required.\n  \
    \             \"type\": \"str\",  # Type of the GeoJSON Object. It's value is\n\
    \                 always Feature. Required.\n               \"bbox\": [\n    \
    \               0.0  # Optional. Bounding box of the feature.\n              \
    \ ],\n               \"collection\": \"str\",  # Optional. The id of the STAC\n\
    \                 Collection this Feature references.\n               \"geometry\"\
    : {},  # Optional. Defines the full footprint of\n                 the asset represented\
    \ by this item.\"nIts a GeoJSON geometry.\n               \"stacExtensions\":\
    \ [\n                   \"str\"  # Optional. A list of extensions the Feature\n\
    \                     implements.\n               ]\n           }\n       ],\n\
    \       \"nextLink\": \"str\"  # Optional. URL to do the POST request with same\n\
    \         filters,\"nto get next set of features.\n   }\n   ````\n"
