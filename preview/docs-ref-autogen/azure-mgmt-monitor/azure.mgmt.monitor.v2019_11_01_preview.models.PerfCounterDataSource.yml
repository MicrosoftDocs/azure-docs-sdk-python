### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2019_11_01_preview.models.PerfCounterDataSource
name: PerfCounterDataSource
fullName: azure.mgmt.monitor.v2019_11_01_preview.models.PerfCounterDataSource
module: azure.mgmt.monitor.v2019_11_01_preview.models
inheritances:
- msrest.serialization.Model
summary: "Definition of which performance counters will be collected and how they\
  \ will be collected by this data collection rule.\nCollected from both Windows and\
  \ Linux machines where the counter is present.\n\n   All required parameters must\
  \ be populated in order to send to Azure.\n\n   param streams:\n      Required.\
  \ List of streams that this data source will be sent to.\n      A stream indicates\
  \ what schema will be used for this data and usually what table in Log\n      Analytics\
  \ the data will be sent to.\n\n   type streams:\n      list[str or ~$(python-base-\n\
  \      namespace).v2019_11_01_preview.models.KnownPerfCounterDataSourceStreams]\n\
  \n   param scheduled_transfer_period:\n      Required. The interval between data\
  \ uploads (scheduled\n      transfers), rounded up to the nearest minute. Possible\
  \ values include: \"PT1M\", \"PT5M\", \"PT15M\",\n      \"PT30M\", \"PT60M\".\n\n\
  \   type scheduled_transfer_period:\n      str or ~$(python-base-\n      namespace).v2019_11_01_preview.models.KnownPerfCounterDataSourceScheduledTransferPeriod\n\
  \n   param sampling_frequency_in_seconds:\n      Required. The number of seconds\
  \ between consecutive\n      counter measurements (samples).\n\n   type sampling_frequency_in_seconds:\n\
  \      int\n\n   param counter_specifiers:\n      Required. A list of specifier\
  \ names of the performance counters you\n      want to collect.\n      Use a wildcard\
  \ (*) to collect a counter for all instances.\n      To get a list of performance\
  \ counters on Windows, run the command 'typeperf'.\n\n   type counter_specifiers:\n\
  \      list[str]\n\n   param name:\n      Required. A friendly name for the data\
  \ source.\n      This name should be unique across all data sources (regardless\
  \ of type) within the data\n      collection rule.\n\n   type name:\n      str"
constructor:
  syntax: 'PerfCounterDataSource(*, streams: typing.List[typing.Union[str, _ForwardRef(''KnownPerfCounterDataSourceStreams'')]],
    scheduled_transfer_period: typing.Union[str, _ForwardRef(''KnownPerfCounterDataSourceScheduledTransferPeriod'')],
    sampling_frequency_in_seconds: int, counter_specifiers: typing.List[str], name:
    str, **kwargs)'
