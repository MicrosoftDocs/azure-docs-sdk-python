### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.monitor.v2019_03_01.models.TimeSeriesBaseline
  fullName: azure.mgmt.monitor.v2019_03_01.models.TimeSeriesBaseline
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.monitor.v2019_03_01.models
  name: TimeSeriesBaseline
  summary: 'The baseline values for a single time series.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'TimeSeriesBaseline(*, aggregation: str, timestamps: typing.List[datetime.datetime],
      data: typing.List[_ForwardRef(''SingleBaseline'')], dimensions: typing.Union[typing.List[_ForwardRef(''MetricSingleDimension'')],
      NoneType] = None, metadata: typing.Union[typing.List[_ForwardRef(''BaselineMetadata'')],
      NoneType] = None, **kwargs)'
    parameters:
    - description: Required. The aggregation type of the metric.
      id: aggregation
      type:
      - str
    - description: The dimensions of this time series.
      id: dimensions
      type:
      - list[$(python-base-namespace).v2019_03_01.models.MetricSingleDimension]
    - description: Required. The list of timestamps of the baselines.
      id: timestamps
      type:
      - list[datetime.datetime]
    - description: Required. The baseline values for each sensitivity.
      id: data
      type:
      - list[$(python-base-namespace).v2019_03_01.models.SingleBaseline]
    - description: The baseline metadata values.
      id: metadata
      type:
      - list[$(python-base-namespace).v2019_03_01.models.BaselineMetadata]
  type: class
  uid: azure.mgmt.monitor.v2019_03_01.models.TimeSeriesBaseline
references:
- fullName: list[$(python-base-namespace).v2019_03_01.models.MetricSingleDimension]
  name: list[$(python-base-namespace)MetricSingleDimension]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2019_03_01.models.MetricSingleDimension
    name: MetricSingleDimension
    uid: .v2019_03_01.models.MetricSingleDimension
  - fullName: ']'
    name: ']'
  uid: list[$(python-base-namespace).v2019_03_01.models.MetricSingleDimension]
- fullName: list[datetime.datetime]
  name: list[datetime]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: datetime.datetime
    name: datetime
    uid: datetime.datetime
  - fullName: ']'
    name: ']'
  uid: list[datetime.datetime]
- fullName: list[$(python-base-namespace).v2019_03_01.models.SingleBaseline]
  name: list[$(python-base-namespace)SingleBaseline]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2019_03_01.models.SingleBaseline
    name: SingleBaseline
    uid: .v2019_03_01.models.SingleBaseline
  - fullName: ']'
    name: ']'
  uid: list[$(python-base-namespace).v2019_03_01.models.SingleBaseline]
- fullName: list[$(python-base-namespace).v2019_03_01.models.BaselineMetadata]
  name: list[$(python-base-namespace)BaselineMetadata]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2019_03_01.models.BaselineMetadata
    name: BaselineMetadata
    uid: .v2019_03_01.models.BaselineMetadata
  - fullName: ']'
    name: ']'
  uid: list[$(python-base-namespace).v2019_03_01.models.BaselineMetadata]
