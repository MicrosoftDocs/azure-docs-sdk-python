### YamlMime:PythonClass
uid: azure.mgmt.monitor.aio.operations.MetricsOperations
name: MetricsOperations
fullName: azure.mgmt.monitor.aio.operations.MetricsOperations
module: azure.mgmt.monitor.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.monitor.aio.MonitorManagementClient>'s\n\
  >\n> <xref:metrics> attribute.\n>"
constructor:
  syntax: MetricsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.monitor.aio.operations.MetricsOperations.list
  name: list
  summary: '**Lists the metric values for a resource**. This API used the [default
    ARM throttling limits](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling).'
  signature: 'async list(resource_uri: str, timespan: str | None = None, interval:
    str | None = None, metricnames: str | None = None, aggregation: str | None = None,
    top: int | None = None, orderby: str | None = None, filter: str | None = None,
    result_type: str | ResultType | None = None, metricnamespace: str | None = None,
    auto_adjust_timegrain: bool | None = None, validate_dimensions: bool | None =
    None, rollupby: str | None = None, **kwargs: Any) -> Response'
  parameters:
  - name: resource_uri
    description: The identifier of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: interval
    description: 'The interval (i.e. timegrain) of the query in ISO 8601 duration
      format.

      Defaults to PT1M. Special case for ''FULL'' value that returns single datapoint
      for entire time

      span requested.

      *Examples: PT15M, PT1H, P1D, FULL*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: metricnames
    description: 'The names of the metrics (comma separated) to retrieve. Limit 20
      metrics.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: aggregation
    description: 'The list of aggregation types (comma separated) to retrieve.

      *Examples: average, minimum, maximum*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve per resource ID in the
      request.

      Valid only if filter is specified.

      Defaults to 10. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      *Examples: sum asc*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data returned.`<br>`Example::code:`<br>`Metric
      contains metadata A, B and C.:code:`<br>`- Return

      all time series of C where A = a1 and B = b1 or b2`<br>`**$filter=A eq ''a1''
      and B

      eq ''b1'' or B eq ''b2'' and C eq ''*''**`<br>`- Invalid variant:`<br>`**$filter=A
      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''**`<br>`This is invalid

      because the logical or operator cannot separate two different metadata names.:code:`<br>`-

      Return all time series where A = a1, B = b1 and C = c1:`<br>`**$filter=A eq
      ''a1''

      and B eq ''b1'' and C eq ''c1''**`<br>`- Return all time series where A = a1`<br>`**$filter=A
      eq ''a1'' and B eq ''*'' and C eq ''*''**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details. Known values are: "Data"
      and

      "Metadata". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.monitor.models.ResultType>
  - name: metricnamespace
    description: 'Metric namespace where the metrics you want reside. Default value
      is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: auto_adjust_timegrain
    description: 'When set to true, if the timespan passed in is not supported by

      this metric, the API will return the result using the closest supported timespan.
      When set to

      false, an error is returned for invalid timespan parameters. Defaults to false.
      Default value

      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: validate_dimensions
    description: 'When set to false, invalid filter parameter values will be ignored.

      When set to true, an error is returned for invalid filter parameters. Defaults
      to true. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: rollupby
    description: 'Dimension name(s) to rollup results by. For example if you only
      want to see

      metric values with a filter like ''City eq Seattle or City eq Tacoma'' but don''t
      want to see

      separate values for each city, you can specify ''RollUpBy=City'' to see the
      results for Seattle

      and Tacoma rolled up into one timeseries. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: Response or the result of cls(response)
    types:
    - <xref:azure.mgmt.monitor.models.Response>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.monitor.aio.operations.MetricsOperations.list_at_subscription_scope
  name: list_at_subscription_scope
  summary: '**Lists the metric data for a subscription**. This API used the [default
    ARM throttling limits](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling).'
  signature: 'async list_at_subscription_scope(region: str, timespan: str | None =
    None, interval: str | None = None, metricnames: str | None = None, aggregation:
    str | None = None, top: int | None = None, orderby: str | None = None, filter:
    str | None = None, result_type: str | MetricResultType | None = None, metricnamespace:
    str | None = None, auto_adjust_timegrain: bool | None = None, validate_dimensions:
    bool | None = None, rollupby: str | None = None, **kwargs: Any) -> Response'
  parameters:
  - name: region
    description: The region where the metrics you want reside. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: interval
    description: 'The interval (i.e. timegrain) of the query in ISO 8601 duration
      format.

      Defaults to PT1M. Special case for ''FULL'' value that returns single datapoint
      for entire time

      span requested.

      *Examples: PT15M, PT1H, P1D, FULL*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: metricnames
    description: 'The names of the metrics (comma separated) to retrieve. Limit 20
      metrics.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: aggregation
    description: 'The list of aggregation types (comma separated) to retrieve.

      *Examples: average, minimum, maximum*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve per resource ID in the
      request.

      Valid only if filter is specified.

      Defaults to 10. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      *Examples: sum asc*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data returned.`<br>`Example::code:`<br>`Metric
      contains metadata A, B and C.:code:`<br>`- Return

      all time series of C where A = a1 and B = b1 or b2`<br>`**$filter=A eq ''a1''
      and B

      eq ''b1'' or B eq ''b2'' and C eq ''*''**`<br>`- Invalid variant:`<br>`**$filter=A
      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''**`<br>`This is invalid

      because the logical or operator cannot separate two different metadata names.:code:`<br>`-

      Return all time series where A = a1, B = b1 and C = c1:`<br>`**$filter=A eq
      ''a1''

      and B eq ''b1'' and C eq ''c1''**`<br>`- Return all time series where A = a1`<br>`**$filter=A
      eq ''a1'' and B eq ''*'' and C eq ''*''**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details. Known values are: "Data"
      and

      "Metadata". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.monitor.models.MetricResultType>
  - name: metricnamespace
    description: 'Metric namespace where the metrics you want reside. Default value
      is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: auto_adjust_timegrain
    description: 'When set to true, if the timespan passed in is not supported by

      this metric, the API will return the result using the closest supported timespan.
      When set to

      false, an error is returned for invalid timespan parameters. Defaults to false.
      Default value

      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: validate_dimensions
    description: 'When set to false, invalid filter parameter values will be ignored.

      When set to true, an error is returned for invalid filter parameters. Defaults
      to true. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: rollupby
    description: 'Dimension name(s) to rollup results by. For example if you only
      want to see

      metric values with a filter like ''City eq Seattle or City eq Tacoma'' but don''t
      want to see

      separate values for each city, you can specify ''RollUpBy=City'' to see the
      results for Seattle

      and Tacoma rolled up into one timeseries. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: Response or the result of cls(response)
    types:
    - <xref:azure.mgmt.monitor.models.Response>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.monitor.aio.operations.MetricsOperations.list_at_subscription_scope_post
  name: list_at_subscription_scope_post
  summary: '**Lists the metric data for a subscription**. Parameters can be specified
    on either query

    params or the body. This API used the [default ARM throttling limits](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling).'
  signature: 'async list_at_subscription_scope_post(region: str, timespan: str | None
    = None, interval: str | None = None, metricnames: str | None = None, aggregation:
    str | None = None, top: int | None = None, orderby: str | None = None, filter:
    str | None = None, result_type: str | _models.MetricResultType | None = None,
    metricnamespace: str | None = None, auto_adjust_timegrain: bool | None = None,
    validate_dimensions: bool | None = None, rollupby: str | None = None, body: _models.SubscriptionScopeMetricsRequestBodyParameters
    | None = None, *, content_type: str = ''application/json'', **kwargs: Any) ->
    _models.Response'
  parameters:
  - name: region
    description: The region where the metrics you want reside. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: interval
    description: 'The interval (i.e. timegrain) of the query in ISO 8601 duration
      format.

      Defaults to PT1M. Special case for ''FULL'' value that returns single datapoint
      for entire time

      span requested.

      *Examples: PT15M, PT1H, P1D, FULL*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: metricnames
    description: 'The names of the metrics (comma separated) to retrieve. Limit 20
      metrics.

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: aggregation
    description: 'The list of aggregation types (comma separated) to retrieve.

      *Examples: average, minimum, maximum*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve per resource ID in the
      request.

      Valid only if filter is specified.

      Defaults to 10. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      *Examples: sum asc*. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data returned.`<br>`Example::code:`<br>`Metric
      contains metadata A, B and C.:code:`<br>`- Return

      all time series of C where A = a1 and B = b1 or b2`<br>`**$filter=A eq ''a1''
      and B

      eq ''b1'' or B eq ''b2'' and C eq ''*''**`<br>`- Invalid variant:`<br>`**$filter=A
      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''**`<br>`This is invalid

      because the logical or operator cannot separate two different metadata names.:code:`<br>`-

      Return all time series where A = a1, B = b1 and C = c1:`<br>`**$filter=A eq
      ''a1''

      and B eq ''b1'' and C eq ''c1''**`<br>`- Return all time series where A = a1`<br>`**$filter=A
      eq ''a1'' and B eq ''*'' and C eq ''*''**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details. Known values are: "Data"
      and

      "Metadata". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.mgmt.monitor.models.MetricResultType>
  - name: metricnamespace
    description: 'Metric namespace where the metrics you want reside. Default value
      is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: auto_adjust_timegrain
    description: 'When set to true, if the timespan passed in is not supported by

      this metric, the API will return the result using the closest supported timespan.
      When set to

      false, an error is returned for invalid timespan parameters. Defaults to false.
      Default value

      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: validate_dimensions
    description: 'When set to false, invalid filter parameter values will be ignored.

      When set to true, an error is returned for invalid filter parameters. Defaults
      to true. Default

      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: rollupby
    description: 'Dimension name(s) to rollup results by. For example if you only
      want to see

      metric values with a filter like ''City eq Seattle or City eq Tacoma'' but don''t
      want to see

      separate values for each city, you can specify ''RollUpBy=City'' to see the
      results for Seattle

      and Tacoma rolled up into one timeseries. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: body
    description: 'Parameters serialized in the body. Is either a

      SubscriptionScopeMetricsRequestBodyParameters type or a IO[bytes] type. Default
      value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.monitor.models.SubscriptionScopeMetricsRequestBodyParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: Response or the result of cls(response)
    types:
    - <xref:azure.mgmt.monitor.models.Response>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.monitor.aio.operations.MetricsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.monitor.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv185\\Lib\\site-packages\\azure\\mgmt\\monitor\\models\\__init__.py'>
