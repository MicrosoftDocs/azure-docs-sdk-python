### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.monitor.v2018_03_01.models.MetricCriteria
  fullName: azure.mgmt.monitor.v2018_03_01.models.MetricCriteria
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.monitor.v2018_03_01.models._models_py3.MultiMetricCriteria
  langs:
  - python
  module: azure.mgmt.monitor.v2018_03_01.models
  name: MetricCriteria
  summary: 'Criterion to filter metrics.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'MetricCriteria(*, name: str, metric_name: str, time_aggregation: typing.Union[str,
      _ForwardRef(''AggregationType'')], operator: typing.Union[str, _ForwardRef(''Operator'')],
      threshold: float, additional_properties: typing.Union[typing.Dict[str, object],
      NoneType] = None, metric_namespace: typing.Union[str, NoneType] = None, dimensions:
      typing.Union[typing.List[_ForwardRef(''MetricDimension'')], NoneType] = None,
      skip_metric_validation: typing.Union[bool, NoneType] = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Required. Specifies the type of threshold criteria.Constant filled
        by

        server.  Possible values include: "StaticThresholdCriterion", "DynamicThresholdCriterion".'
      id: criterion_type
      type:
      - str
      - $(python-base-namespace).v2018_03_01.models.CriterionType
    - description: Required. Name of the criteria.
      id: name
      type:
      - str
    - description: Required. Name of the metric.
      id: metric_name
      type:
      - str
    - description: Namespace of the metric.
      id: metric_namespace
      type:
      - str
    - description: 'Required. the criteria time aggregation types. Possible values

        include: "Average", "Count", "Minimum", "Maximum", "Total".'
      id: time_aggregation
      type:
      - str
      - $(python-base-namespace).v2018_03_01.models.AggregationType
    - description: List of dimension conditions.
      id: dimensions
      type:
      - list[$(python-base-namespace).v2018_03_01.models.MetricDimension]
    - description: 'Allows creating an alert rule on a custom metric that isn''t yet

        emitted, by causing the metric validation to be skipped.'
      id: skip_metric_validation
      type:
      - bool
    - description: 'Required. the criteria operator. Possible values include: "Equals",

        "NotEquals", "GreaterThan", "GreaterThanOrEqual", "LessThan", "LessThanOrEqual".'
      id: operator
      type:
      - str
      - $(python-base-namespace).v2018_03_01.models.Operator
    - description: Required. the criteria threshold value that activates the alert.
      id: threshold
      type:
      - float
  type: class
  uid: azure.mgmt.monitor.v2018_03_01.models.MetricCriteria
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: $(python-base-namespace).v2018_03_01.models.CriterionType
  name: $(python-base-namespace)CriterionType
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.CriterionType
    name: CriterionType
    uid: .v2018_03_01.models.CriterionType
  uid: $(python-base-namespace).v2018_03_01.models.CriterionType
- fullName: $(python-base-namespace).v2018_03_01.models.AggregationType
  name: $(python-base-namespace)AggregationType
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.AggregationType
    name: AggregationType
    uid: .v2018_03_01.models.AggregationType
  uid: $(python-base-namespace).v2018_03_01.models.AggregationType
- fullName: list[$(python-base-namespace).v2018_03_01.models.MetricDimension]
  name: list[$(python-base-namespace)MetricDimension]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.MetricDimension
    name: MetricDimension
    uid: .v2018_03_01.models.MetricDimension
  - fullName: ']'
    name: ']'
  uid: list[$(python-base-namespace).v2018_03_01.models.MetricDimension]
- fullName: $(python-base-namespace).v2018_03_01.models.Operator
  name: $(python-base-namespace)Operator
  spec.python:
  - fullName: $
    name: $
    uid: $
  - fullName: (
    name: (
  - fullName: python-base-namespace
    name: python-base-namespace
    uid: python-base-namespace
  - fullName: )
    name: )
  - fullName: .v2018_03_01.models.Operator
    name: Operator
    uid: .v2018_03_01.models.Operator
  uid: $(python-base-namespace).v2018_03_01.models.Operator
