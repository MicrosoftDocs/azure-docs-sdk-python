### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.monitor.v2017_03_01_preview.models.ActivityLogAlertResourcePatch
  fullName: azure.mgmt.monitor.v2017_03_01_preview.models.ActivityLogAlertResourcePatch
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.monitor.v2017_03_01_preview.models._models_py3.Resource
  langs:
  - python
  module: azure.mgmt.monitor.v2017_03_01_preview.models
  name: ActivityLogAlertResourcePatch
  summary: 'An activity log alert resource for patch operations.


    Variables are only populated by the server, and will be ignored when sending a
    request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'ActivityLogAlertResourcePatch(*, location: str, tags: typing.Union[typing.Dict[str,
      str], NoneType] = None, enabled: typing.Union[bool, NoneType] = True, **kwargs)'
    parameters:
    - description: Required. Resource location.
      id: location
      type:
      - str
    - description: A set of tags. Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: 'Indicates whether this activity log alert is enabled. If an activity
        log alert

        is not enabled, then none of its actions will be activated.'
      id: enabled
      type:
      - bool
    variables:
    - description: Azure resource Id.
      id: id
      type:
      - str
    - description: Azure resource name.
      id: name
      type:
      - str
    - description: Azure resource type.
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.monitor.v2017_03_01_preview.models.ActivityLogAlertResourcePatch
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
