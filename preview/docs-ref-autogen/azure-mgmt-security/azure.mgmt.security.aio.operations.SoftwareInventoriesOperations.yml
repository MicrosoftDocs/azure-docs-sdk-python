### YamlMime:PythonClass
uid: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations
name: SoftwareInventoriesOperations
fullName: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations
module: azure.mgmt.security.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.security.aio.SecurityCenter>'s\n\
  >\n> <xref:software_inventories> attribute.\n>"
constructor:
  syntax: SoftwareInventoriesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations.get
  name: get
  summary: Gets a single software data of the virtual machine.
  signature: 'async get(resource_group_name: str, resource_namespace: str, resource_type:
    str, resource_name: str, software_name: str, **kwargs: Any) -> Software'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_namespace
    description: The namespace of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The type of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: Name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: software_name
    description: Name of the installed software. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Software or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.models.Software>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations.list_by_extended_resource
  name: list_by_extended_resource
  summary: Gets the software inventory of the virtual machine.
  signature: 'list_by_extended_resource(resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, **kwargs: Any) -> AsyncItemPaged[Software]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_namespace
    description: The namespace of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The type of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: Name of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either Software or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.security.models.Software>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations.list_by_subscription
  name: list_by_subscription
  summary: Gets the software inventory of all virtual machines in the subscriptions.
  signature: 'list_by_subscription(**kwargs: Any) -> AsyncItemPaged[Software]'
  return:
    description: An iterator like instance of either Software or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.security.models.Software>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.security.aio.operations.SoftwareInventoriesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.security.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv229\\Lib\\site-packages\\azure\\mgmt\\security\\models\\__init__.py'>
