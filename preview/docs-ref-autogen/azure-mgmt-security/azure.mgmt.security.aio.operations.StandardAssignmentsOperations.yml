### YamlMime:PythonClass
uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations
name: StandardAssignmentsOperations
fullName: azure.mgmt.security.aio.operations.StandardAssignmentsOperations
module: azure.mgmt.security.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.security.aio.SecurityCenter>'s\n\
  >\n> <xref:standard_assignments> attribute.\n>"
constructor:
  syntax: StandardAssignmentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations.create
  name: create
  summary: 'Creates or updates a standard assignment.


    This operation creates or updates a standard assignment with the given scope and
    name. standard

    assignments apply to all resources contained within their scope. For example,
    when you assign a

    policy at resource group scope, that policy applies to all resources in the group.'
  signature: 'async create(resource_id: str, standard_assignment_name: str, standard_assignment:
    _models.StandardAssignment, *, content_type: str = ''application/json'', **kwargs:
    Any) -> _models.StandardAssignment'
  parameters:
  - name: resource_id
    description: The identifier of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: standard_assignment_name
    description: 'The standard assignments assignment key - unique key for the

      standard assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: standard_assignment
    description: 'Custom standard assignment over a pre-defined scope. Is either a

      StandardAssignment type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.security.models.StandardAssignment>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: StandardAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.models.StandardAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations.delete
  name: delete
  summary: 'Deletes a standard assignment.


    This operation deletes a standard assignment, given its name and the scope it
    was created in.

    The scope of a standard assignment is the part of its ID preceding

    ''/providers/Microsoft.Security/standardAssignments/{standardAssignmentName}''.'
  signature: 'async delete(resource_id: str, standard_assignment_name: str, **kwargs:
    Any) -> None'
  parameters:
  - name: resource_id
    description: The identifier of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: standard_assignment_name
    description: 'The standard assignments assignment key - unique key for the

      standard assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations.get
  name: get
  summary: 'Retrieves a standard assignment.


    This operation retrieves a single standard assignment, given its name and the
    scope it was

    created at.'
  signature: 'async get(resource_id: str, standard_assignment_name: str, **kwargs:
    Any) -> StandardAssignment'
  parameters:
  - name: resource_id
    description: The identifier of the resource. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: standard_assignment_name
    description: 'The standard assignments assignment key - unique key for the

      standard assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: StandardAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.security.models.StandardAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations.list
  name: list
  summary: Get a list of all relevant standard assignments over a scope.
  signature: 'list(scope: str, **kwargs: Any) -> AsyncItemPaged[StandardAssignment]'
  parameters:
  - name: scope
    description: 'The scope of the standard assignment. Valid scopes are: management
      group (format:

      ''providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription
      (format:

      ''subscriptions/{subscriptionId}''), or security connector (format:

      ''subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})''.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either StandardAssignment or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.security.models.StandardAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.security.aio.operations.StandardAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.security.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv223\\Lib\\site-packages\\azure\\mgmt\\security\\models\\__init__.py'>
