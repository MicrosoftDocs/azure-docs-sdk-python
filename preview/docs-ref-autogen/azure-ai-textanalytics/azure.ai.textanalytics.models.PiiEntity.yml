### YamlMime:PythonClass
uid: azure.ai.textanalytics.models.PiiEntity
name: PiiEntity
fullName: azure.ai.textanalytics.models.PiiEntity
module: azure.ai.textanalytics.models
summary: Entity object with tags.
constructor:
  syntax: 'PiiEntity(*args: Any, **kwargs: Any)'
variables:
- description: Entity text as appears in the request. Required.
  name: text
  types:
  - <xref:str>
- description: Entity type. Required.
  name: category
  types:
  - <xref:str>
- description: (Optional) Entity sub type.
  name: subcategory
  types:
  - <xref:str>
- description: 'Start position for the entity text. Use of different ''stringIndexType''
    values can

    affect the offset returned. Required.'
  name: offset
  types:
  - <xref:int>
- description: 'Length for the entity text. Use of different ''stringIndexType'' values
    can affect

    the length returned. Required.'
  name: length
  types:
  - <xref:int>
- description: Confidence score between 0 and 1 of the extracted entity. Required.
  name: confidence_score
  types:
  - <xref:float>
- description: 'An entity type is the lowest (or finest) granularity at which the
    entity has been

    detected. The type maps to the specific metadata attributes associated with the
    entity

    detected.'
  name: type
  types:
  - <xref:str>
- description: 'List of entity tags. Tags are to express some similarities/affinity
    between

    entities.'
  name: tags
  types:
  - <xref:list>[<xref:azure.ai.textanalytics.models.EntityTag>]
- description: 'Optional field which will be returned only when using the redaction
    policy kind

    "MaskWithEntityType".  This field will contain the exact mask text used to mask
    the PII entity

    in the original text.'
  name: mask
  types:
  - <xref:str>
- description: 'Start position of masked text in the redacted text when using the
    redaction

    policy kind "MaskWithEntityType".'
  name: mask_offset
  types:
  - <xref:int>
- description: 'The length of the masked text. Will be present when using the redaction

    policy kind "MaskWithEntityType".'
  name: mask_length
  types:
  - <xref:int>
methods:
- uid: azure.ai.textanalytics.models.PiiEntity.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.textanalytics.models.PiiEntity.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.textanalytics.models.PiiEntity.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.textanalytics.models.PiiEntity.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.textanalytics.models.PiiEntity.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.textanalytics.models.PiiEntity.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.textanalytics.models.PiiEntity.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.textanalytics.models.PiiEntity.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> tuple[str, Any]
- uid: azure.ai.textanalytics.models.PiiEntity.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.textanalytics.models.PiiEntity.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.textanalytics.models.PiiEntity.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.textanalytics.models.PiiEntity.category
  name: category
  summary: Entity type. Required.
  signature: 'category: str'
- uid: azure.ai.textanalytics.models.PiiEntity.confidence_score
  name: confidence_score
  summary: Confidence score between 0 and 1 of the extracted entity. Required.
  signature: 'confidence_score: float'
- uid: azure.ai.textanalytics.models.PiiEntity.length
  name: length
  summary: 'Length for the entity text. Use of different ''stringIndexType'' values
    can affect the length

    returned. Required.'
  signature: 'length: int'
- uid: azure.ai.textanalytics.models.PiiEntity.mask
  name: mask
  summary: 'Optional field which will be returned only when using the redaction policy
    kind

    "MaskWithEntityType".  This field will contain the exact mask text used to mask
    the PII entity

    in the original text.'
  signature: 'mask: str | None'
- uid: azure.ai.textanalytics.models.PiiEntity.mask_length
  name: mask_length
  summary: 'The length of the masked text. Will be present when using the redaction
    policy kind

    "MaskWithEntityType".'
  signature: 'mask_length: int | None'
- uid: azure.ai.textanalytics.models.PiiEntity.mask_offset
  name: mask_offset
  summary: 'Start position of masked text in the redacted text when using the redaction
    policy kind

    "MaskWithEntityType".'
  signature: 'mask_offset: int | None'
- uid: azure.ai.textanalytics.models.PiiEntity.offset
  name: offset
  summary: 'Start position for the entity text. Use of different ''stringIndexType''
    values can affect the

    offset returned. Required.'
  signature: 'offset: int'
- uid: azure.ai.textanalytics.models.PiiEntity.subcategory
  name: subcategory
  summary: (Optional) Entity sub type.
  signature: 'subcategory: str | None'
- uid: azure.ai.textanalytics.models.PiiEntity.tags
  name: tags
  summary: List of entity tags. Tags are to express some similarities/affinity between
    entities.
  signature: 'tags: list[''_models.EntityTag''] | None'
- uid: azure.ai.textanalytics.models.PiiEntity.text
  name: text
  summary: Entity text as appears in the request. Required.
  signature: 'text: str'
- uid: azure.ai.textanalytics.models.PiiEntity.type
  name: type
  summary: 'An entity type is the lowest (or finest) granularity at which the entity
    has been detected. The

    type maps to the specific metadata attributes associated with the entity detected.'
  signature: 'type: str | None'
