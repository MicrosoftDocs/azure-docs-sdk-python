### YamlMime:PythonClass
uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller
name: AsyncAnalyzeHealthcareEntitiesLROPoller
fullName: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller
module: azure.ai.textanalytics.aio
inheritances:
- azure.core.polling._async_poller.AsyncLROPoller
constructor:
  syntax: 'AsyncAnalyzeHealthcareEntitiesLROPoller(client: Any, initial_response:
    Any, deserialization_callback: Callable, polling_method: azure.core.polling._async_poller.AsyncPollingMethod[PollingReturnType])'
methods:
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.cancel
  name: cancel
  summary: Cancel the operation currently being polled.
  signature: cancel(**kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[None]
  parameters:
  - name: polling_interval
    description: 'The polling interval to use to poll the cancellation status.

      The default value is 5 seconds.'
    types:
    - <xref:int>
  return:
    description: Returns an instance of an AsyncLROPoller that returns None.
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: When the operation has already reached a terminal state.
    type: azure.core.exceptions.HttpResponseError
  examples:
  - "Cancel an existing health operation.<!--[!code-python[Main](les\\async_samples\\\
    sample_analyze_healthcare_entities_with_cancellation_async.py )]-->\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\68\\\\azure-ai-textanalytics-5.2.0b1\\\
    \\samples\\\\async_samples\\\\sample_analyze_healthcare_entities_with_cancellation_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   from azure.core.credentials import AzureKeyCredential\n   from azure.ai.textanalytics.aio\
    \ import TextAnalyticsClient\n\n   endpoint = os.environ[\"AZURE_TEXT_ANALYTICS_ENDPOINT\"\
    ]\n   key = os.environ[\"AZURE_TEXT_ANALYTICS_KEY\"]\n\n   text_analytics_client\
    \ = TextAnalyticsClient(\n       endpoint=endpoint,\n       credential=AzureKeyCredential(key),\n\
    \   )\n\n   documents = [\n       \"RECORD #333582770390100 | MH | 85986313 |\
    \ | 054351 | 2/14/2001 12:00:00 AM | \\\n       CORONARY ARTERY DISEASE | Signed\
    \ | DIS | Admission Date: 5/22/2001 \\\n       Report Status: Signed Discharge\
    \ Date: 4/24/2001 ADMISSION DIAGNOSIS: \\\n       CORONARY ARTERY DISEASE. HISTORY\
    \ OF PRESENT ILLNESS: \\\n       The patient is a 54-year-old gentleman with a\
    \ history of progressive angina over the past several months. \\\n       The patient\
    \ had a cardiac catheterization in July of this year revealing total occlusion\
    \ of the RCA and \\\n       50% left main disease , with a strong family history\
    \ of coronary artery disease with a brother dying at \\\n       the age of 52\
    \ from a myocardial infarction and another brother who is status post coronary\
    \ artery bypass grafting. \\\n       The patient had a stress echocardiogram done\
    \ on July , 2001 , which showed no wall motion abnormalities ,\\\n       but this\
    \ was a difficult study due to body habitus. The patient went for six minutes\
    \ with minimal ST depressions \\\n       in the anterior lateral leads , thought\
    \ due to fatigue and wrist pain , his anginal equivalent. Due to the patient's\
    \ \\\n       increased symptoms and family history and history left main disease\
    \ with total occasional of his RCA was referred \\\n       for revascularization\
    \ with open heart surgery.\"\n   ]\n\n   async with text_analytics_client:\n \
    \      poller = await text_analytics_client.begin_analyze_healthcare_entities(documents)\n\
    \n       try:\n           cancellation_poller = await poller.cancel()\n      \
    \     await cancellation_poller.wait()\n\n       except HttpResponseError as e:\n\
    \           # If the operation has already reached a terminal state it cannot\
    \ be cancelled.\n           print(e)\n\n       else:\n           print(\"Healthcare\
    \ entities analysis was successfully cancelled.\")\n\n\n   ````\n"
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.polling_method
  name: polling_method
  summary: Return the polling method associated to this poller.
  signature: polling_method() -> azure.ai.textanalytics.aio._lro_async.AsyncAnalyzeHealthcareEntitiesLROPollingMethod
attributes:
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.created_on
  name: created_on
  summary: When your healthcare entities job was created
  return:
    description: When your healthcare entities job was created
    types:
    - <xref:datetime.datetime>
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.expires_on
  name: expires_on
  summary: When your healthcare entities job will expire
  return:
    description: When your healthcare entities job will expire
    types:
    - <xref:datetime.datetime>
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.id
  name: id
  summary: ID of your call to <xref:azure.ai.textanalytics.aio.begin_analyze_healthcare_entities>
  return:
    description: ID of your call to <xref:azure.ai.textanalytics.aio.begin_analyze_healthcare_entities>
    types:
    - <xref:str>
- uid: azure.ai.textanalytics.aio.AsyncAnalyzeHealthcareEntitiesLROPoller.last_modified_on
  name: last_modified_on
  summary: When your healthcare entities job was last modified
  return:
    description: When your healthcare entities job was last modified
    types:
    - <xref:datetime.datetime>
