### YamlMime:PythonClass
uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations
name: ConfigurationsOperations
fullName: azure.mgmt.nginx.aio.operations.ConfigurationsOperations
module: azure.mgmt.nginx.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.nginx.aio.NginxManagementClient>'s\n\
  >\n> <xref:configurations> attribute.\n>"
constructor:
  syntax: ConfigurationsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.analysis
  name: analysis
  summary: 'Analyze an NGINX configuration without applying it to the NGINXaaS deployment.


    Analyze an NGINX configuration without applying it to the NGINXaaS deployment.'
  signature: 'async analysis(resource_group_name: str, deployment_name: str, configuration_name:
    str, body: _models.AnalysisCreate | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.AnalysisResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted NGINX deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration_name
    description: 'The name of configuration, only ''default'' is supported value due
      to

      the singleton of NGINX conf. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: 'The NGINX configuration to analyze. Is either a AnalysisCreate type
      or a IO[bytes]

      type. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.nginx.models.AnalysisCreate>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: AnalysisResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.nginx.models.AnalysisResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update the NGINX configuration for given NGINX deployment.


    Create or update the NGINX configuration for given NGINX deployment.'
  signature: 'async begin_create_or_update(resource_group_name: str, deployment_name:
    str, configuration_name: str, body: _models.NginxConfigurationRequest | None =
    None, *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.NginxConfigurationResponse]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted NGINX deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration_name
    description: 'The name of configuration, only ''default'' is supported value due
      to

      the singleton of NGINX conf. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: 'The NGINX configuration. Is either a NginxConfigurationRequest type
      or a IO[bytes]

      type. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.nginx.models.NginxConfigurationRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either NginxConfigurationResponse
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.nginx.models.NginxConfigurationResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.begin_delete
  name: begin_delete
  summary: 'Reset the NGINX configuration of given NGINX deployment to default.


    Reset the NGINX configuration of given NGINX deployment to default.'
  signature: 'async begin_delete(resource_group_name: str, deployment_name: str, configuration_name:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted NGINX deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration_name
    description: 'The name of configuration, only ''default'' is supported value due
      to

      the singleton of NGINX conf. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.get
  name: get
  summary: 'Get the NGINX configuration of given NGINX deployment.


    Get the NGINX configuration of given NGINX deployment.'
  signature: 'async get(resource_group_name: str, deployment_name: str, configuration_name:
    str, **kwargs: Any) -> NginxConfigurationResponse'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted NGINX deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration_name
    description: 'The name of configuration, only ''default'' is supported value due
      to

      the singleton of NGINX conf. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: NginxConfigurationResponse or the result of cls(response)
    types:
    - <xref:azure.mgmt.nginx.models.NginxConfigurationResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.list
  name: list
  summary: 'List the NGINX configuration of given NGINX deployment.


    List the NGINX configuration of given NGINX deployment.'
  signature: 'list(resource_group_name: str, deployment_name: str, **kwargs: Any)
    -> AsyncIterable[NginxConfigurationResponse]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted NGINX deployment. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either NginxConfigurationResponse or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.nginx.models.NginxConfigurationResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.nginx.aio.operations.ConfigurationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.nginx.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv182\\Lib\\site-packages\\azure\\mgmt\\nginx\\models\\__init__.py'>
