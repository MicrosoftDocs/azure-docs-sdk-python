### YamlMime:PythonClass
uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations
name: AccessPolicyAssignmentOperations
fullName: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations
module: azure.mgmt.redisenterprise.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.redisenterprise.RedisEnterpriseManagementClient>'s\n\
  >\n> <xref:access_policy_assignment> attribute.\n>"
constructor:
  syntax: AccessPolicyAssignmentOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations.begin_create_update
  name: begin_create_update
  summary: Creates/Updates a particular access policy assignment for a database.
  signature: 'begin_create_update(resource_group_name: str, cluster_name: str, database_name:
    str, access_policy_assignment_name: str, parameters: _models.AccessPolicyAssignment,
    *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.AccessPolicyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: 'The name of the Redis Enterprise cluster. Name must be 1-60 characters

      long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading
      nor trailing nor

      consecutive hyphens. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: The name of the Redis Enterprise database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: access_policy_assignment_name
    description: 'The name of the Redis Enterprise database access policy

      assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the create access policy assignment for database.
      Is

      either a AccessPolicyAssignment type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.redisenterprise.models.AccessPolicyAssignment>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either AccessPolicyAssignment
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.redisenterprise.models.AccessPolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations.begin_delete
  name: begin_delete
  summary: Deletes a single access policy assignment.
  signature: 'begin_delete(resource_group_name: str, cluster_name: str, database_name:
    str, access_policy_assignment_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: 'The name of the Redis Enterprise cluster. Name must be 1-60 characters

      long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading
      nor trailing nor

      consecutive hyphens. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: The name of the Redis Enterprise database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: access_policy_assignment_name
    description: 'The name of the Redis Enterprise database access policy

      assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations.get
  name: get
  summary: Gets information about access policy assignment for database.
  signature: 'get(resource_group_name: str, cluster_name: str, database_name: str,
    access_policy_assignment_name: str, **kwargs: Any) -> AccessPolicyAssignment'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: 'The name of the Redis Enterprise cluster. Name must be 1-60 characters

      long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading
      nor trailing nor

      consecutive hyphens. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: The name of the Redis Enterprise database. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: access_policy_assignment_name
    description: 'The name of the Redis Enterprise database access policy

      assignment. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AccessPolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.redisenterprise.models.AccessPolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations.list
  name: list
  summary: Gets all access policy assignments..
  signature: 'list(resource_group_name: str, cluster_name: str, database_name: str,
    **kwargs: Any) -> Iterable[AccessPolicyAssignment]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: 'The name of the Redis Enterprise cluster. Name must be 1-60 characters

      long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading
      nor trailing nor

      consecutive hyphens. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: database_name
    description: The name of the Redis Enterprise database. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either AccessPolicyAssignment or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.redisenterprise.models.AccessPolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.redisenterprise.operations.AccessPolicyAssignmentOperations.models
  name: models
  signature: models = <module 'azure.mgmt.redisenterprise.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv209\\Lib\\site-packages\\azure\\mgmt\\redisenterprise\\models\\__init__.py'>
