### YamlMime:PythonClass
uid: azure.mgmt.batch.models.StartTask
name: StartTask
fullName: azure.mgmt.batch.models.StartTask
module: azure.mgmt.batch.models
inheritances:
- msrest.serialization.Model
summary: In some cases the start task may be re-run even though the node was not rebooted.
  Due to this, start tasks should be idempotent and exit gracefully if the setup they're
  performing has already been done. Special care should be taken to avoid start tasks
  which create breakaway process or install/launch services from the start task working
  directory, as this will block Batch from being able to re-run the start task.
constructor:
  syntax: 'StartTask(*, command_line: Optional[str] = None, resource_files: Optional[List[azure.mgmt.batch.models._models_py3.ResourceFile]]
    = None, environment_settings: Optional[List[azure.mgmt.batch.models._models_py3.EnvironmentSetting]]
    = None, user_identity: Optional[azure.mgmt.batch.models._models_py3.UserIdentity]
    = None, max_task_retry_count: Optional[int] = None, wait_for_success: Optional[bool]
    = None, container_settings: Optional[azure.mgmt.batch.models._models_py3.TaskContainerSettings]
    = None, **kwargs)'
  parameters:
  - name: command_line
    description: 'The command line does not run under a shell, and therefore cannot
      take

      advantage of shell features such as environment variable expansion. If you want
      to take

      advantage of such features, you should invoke the shell in the command line,
      for example using

      "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if
      any other

      properties of the startTask are specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_files
    description: 'A list of files that the Batch service will download to the compute
      node

      before running the command line.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.batch.models.ResourceFile>]
  - name: environment_settings
    description: A list of environment variable settings for the start task.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.batch.models.EnvironmentSetting>]
  - name: user_identity
    description: 'If omitted, the task runs as a non-administrative user unique to
      the

      task.'
    isRequired: true
    types:
    - <xref:azure.mgmt.batch.models.UserIdentity>
  - name: max_task_retry_count
    description: 'The Batch service retries a task if its exit code is nonzero. Note

      that this value specifically controls the number of retries. The Batch service
      will try the

      task once, and may then retry up to this limit. For example, if the maximum
      retry count is 3,

      Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum
      retry count

      is 0, the Batch service does not retry the task. If the maximum retry count
      is -1, the Batch

      service retries the task without limit.'
    isRequired: true
    types:
    - <xref:int>
  - name: wait_for_success
    description: 'If true and the start task fails on a compute node, the Batch service

      retries the start task up to its maximum retry count (maxTaskRetryCount). If
      the task has still

      not completed successfully after all retries, then the Batch service marks the
      compute node

      unusable, and will not schedule tasks to it. This condition can be detected
      via the node state

      and scheduling error detail. If false, the Batch service will not wait for the
      start task to

      complete. In this case, other tasks can start executing on the compute node
      while the start

      task is still running; and even if the start task fails, new tasks will continue
      to be

      scheduled on the node. The default is true.'
    isRequired: true
    types:
    - <xref:bool>
  - name: container_settings
    description: 'When this is specified, all directories recursively below the

      AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are
      mapped into the

      container, all task environment variables are mapped into the container, and
      the task command

      line is executed in the container.'
    isRequired: true
    types:
    - <xref:azure.mgmt.batch.models.TaskContainerSettings>
