### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.upload_blob_to_url
  - azure.storage.blob.download_blob_from_url
  - azure.storage.blob.BlobServiceClient
  - azure.storage.blob.ContainerClient
  - azure.storage.blob.BlobClient
  - azure.storage.blob.BlobType
  - azure.storage.blob.BlobLeaseClient
  - azure.storage.blob.StorageErrorCode
  - azure.storage.blob.UserDelegationKey
  - azure.storage.blob.ExponentialRetry
  - azure.storage.blob.LinearRetry
  - azure.storage.blob.LocationMode
  - azure.storage.blob.BlockState
  - azure.storage.blob.StandardBlobTier
  - azure.storage.blob.PremiumPageBlobTier
  - azure.storage.blob.SequenceNumberAction
  - azure.storage.blob.PublicAccess
  - azure.storage.blob.BlobAnalyticsLogging
  - azure.storage.blob.Metrics
  - azure.storage.blob.RetentionPolicy
  - azure.storage.blob.StaticWebsite
  - azure.storage.blob.CorsRule
  - azure.storage.blob.ContainerProperties
  - azure.storage.blob.BlobProperties
  - azure.storage.blob.FilteredBlob
  - azure.storage.blob.LeaseProperties
  - azure.storage.blob.ContentSettings
  - azure.storage.blob.CopyProperties
  - azure.storage.blob.BlobBlock
  - azure.storage.blob.PageRange
  - azure.storage.blob.AccessPolicy
  - azure.storage.blob.ContainerSasPermissions
  - azure.storage.blob.BlobSasPermissions
  - azure.storage.blob.ResourceTypes
  - azure.storage.blob.AccountSasPermissions
  - azure.storage.blob.StorageStreamDownloader
  - azure.storage.blob.CustomerProvidedEncryptionKey
  - azure.storage.blob.RehydratePriority
  - azure.storage.blob.generate_account_sas
  - azure.storage.blob.generate_container_sas
  - azure.storage.blob.generate_blob_sas
  - azure.storage.blob.PartialBatchErrorException
  - azure.storage.blob.ContainerEncryptionScope
  - azure.storage.blob.BlobQueryError
  - azure.storage.blob.DelimitedJSON
  - azure.storage.blob.DelimitedTextDialect
  - azure.storage.blob.BlobQueryReader
  - azure.storage.blob.ObjectReplicationPolicy
  - azure.storage.blob.ObjectReplicationRule
  - azure.storage.blob.aio
  fullName: azure.storage.blob
  kind: import
  langs:
  - python
  module: azure.storage.blob
  name: blob
  type: package
  uid: azure.storage.blob
- fullName: azure.storage.blob.upload_blob_to_url
  langs:
  - python
  module: azure.storage.blob
  name: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  summary: 'Upload data to a given URL


    The data will be uploaded as a block blob.'
  syntax:
    content: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
    parameters:
    - description: The full URI to the blob. This can also include a SAS token.
      id: blob_url
      type:
      - str
    - description: The data to upload. This can be bytes, text, an iterable or a file-like
        object.
      id: data
      type:
      - bytes
      - str
      - Iterable
    - defaultValue: None
      description: 'The credentials with which to authenticate. This is optional if
        the

        blob URL already has a SAS token. The value can be a SAS token string, an
        account

        shared access key, or an instance of a TokenCredentials class from azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    - description: 'Whether the blob to be uploaded should overwrite the current data.

        If True, upload_blob_to_url will overwrite any existing data. If set to False,
        the

        operation will fail with a ResourceExistsError.'
      id: overwrite
      type:
      - bool
    - description: The number of parallel connections with which to download.
      id: max_concurrency
      type:
      - int
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      type:
      - int
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict(str,str)
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    - description: Encoding to use if text is supplied as input. Defaults to UTF-8.
      id: encoding
      type:
      - str
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - dict(str, Any)
  type: function
  uid: azure.storage.blob.upload_blob_to_url
- fullName: azure.storage.blob.download_blob_from_url
  langs:
  - python
  module: azure.storage.blob
  name: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  summary: Download the contents of a blob to a local file or stream.
  syntax:
    content: download_blob_from_url(blob_url, output, credential=None, **kwargs)
    parameters:
    - description: The full URI to the blob. This can also include a SAS token.
      id: blob_url
      type:
      - str
    - description: 'Where the data should be downloaded to. This could be either a
        file path to write to,

        or an open IO handle to write to.'
      id: output
      type:
      - str
      - writable stream.
    - defaultValue: None
      description: 'The credentials with which to authenticate. This is optional if
        the

        blob URL already has a SAS token or the blob is public. The value can be a
        SAS token string,

        an account shared access key, or an instance of a TokenCredentials class from
        azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    - description: 'Whether the local file should be overwritten if it already exists.
        The default value is

        *False* - in which case a ValueError will be raised if the file already exists.
        If set to

        *True*, an attempt will be made to write to the existing file. If a stream
        handle is passed

        in, this value is ignored.'
      id: overwrite
      type:
      - bool
    - description: The number of parallel connections with which to download.
      id: max_concurrency
      type:
      - int
    - description: 'Start of byte range to use for downloading a section of the blob.

        Must be set if length is provided.'
      id: offset
      type:
      - int
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      type:
      - int
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    return:
      type:
      - None
  type: function
  uid: azure.storage.blob.download_blob_from_url
- example:
  - "Generating a shared access signature.<!--[!code-python[Main](les\\blob_samples_authentication.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\17\\\\azure-storage-blob-12.4.0b1\\\\samples\\\\blob_samples_authentication.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Create a SAS\
    \ token to use to authenticate a new client\n   from datetime import datetime,\
    \ timedelta\n   from azure.storage.blob import ResourceTypes, AccountSasPermissions,\
    \ generate_account_sas\n\n   sas_token = generate_account_sas(\n       blob_service_client.account_name,\n\
    \       account_key=blob_service_client.credential.account_key,\n       resource_types=ResourceTypes(object=True),\n\
    \       permission=AccountSasPermissions(read=True),\n       expiry=datetime.utcnow()\
    \ + timedelta(hours=1)\n   )\n\n   ````\n"
  fullName: azure.storage.blob.generate_account_sas
  langs:
  - python
  module: azure.storage.blob
  name: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, start=None, ip=None, **kwargs)
  summary: 'Generates a shared access signature for the blob service.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  syntax:
    content: generate_account_sas(account_name, account_key, resource_types, permission,
      expiry, start=None, ip=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The account key, also called shared key or access key, to generate
        the shared access signature.
      id: account_key
      type:
      - str
    - description: Specifies the resource types that are accessible with the account
        SAS.
      id: resource_types
      type:
      - str
      - azure.storage.blob.ResourceTypes
    - description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.blob.AccountSasPermissions
    - description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.blob.generate_account_sas
- example:
  - "Generating a sas token.<!--[!code-python[Main](les\\blob_samples_containers.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\17\\\\azure-storage-blob-12.4.0b1\\\\samples\\\\blob_samples_containers.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # Use access policy\
    \ to generate a sas token\n   from azure.storage.blob import generate_container_sas\n\
    \n   sas_token = generate_container_sas(\n       container_client.account_name,\n\
    \       container_client.container_name,\n       account_key=container_client.credential.account_key,\n\
    \       policy_id='my-access-policy-id'\n   )\n\n   ````\n"
  fullName: azure.storage.blob.generate_container_sas
  langs:
  - python
  module: azure.storage.blob
  name: generate_container_sas(account_name, container_name, account_key=None, user_delegation_key=None,
    permission=None, expiry=None, start=None, policy_id=None, ip=None, **kwargs)
  summary: 'Generates a shared access signature for a container.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  syntax:
    content: generate_container_sas(account_name, container_name, account_key=None,
      user_delegation_key=None, permission=None, expiry=None, start=None, policy_id=None,
      ip=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The name of the container.
      id: container_name
      type:
      - str
    - defaultValue: None
      description: 'The account key, also called shared key or access key, to generate
        the shared access signature.

        Either *account_key* or *user_delegation_key* must be specified.'
      id: account_key
      type:
      - str
    - defaultValue: None
      description: 'Instead of an account shared key, the user could pass in a user
        delegation key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

        When present, the SAS is signed with the user delegation key instead.'
      id: user_delegation_key
      type:
      - azure.storage.blob.UserDelegationKey
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.blob.ContainerSasPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy. To create a stored access policy, use

        <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
      id: policy_id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.blob.generate_container_sas
- fullName: azure.storage.blob.generate_blob_sas
  langs:
  - python
  module: azure.storage.blob
  name: generate_blob_sas(account_name, container_name, blob_name, snapshot=None,
    account_key=None, user_delegation_key=None, permission=None, expiry=None, start=None,
    policy_id=None, ip=None, **kwargs)
  summary: 'Generates a shared access signature for a blob.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  syntax:
    content: generate_blob_sas(account_name, container_name, blob_name, snapshot=None,
      account_key=None, user_delegation_key=None, permission=None, expiry=None, start=None,
      policy_id=None, ip=None, **kwargs)
    parameters:
    - description: The storage account name used to generate the shared access signature.
      id: account_name
      type:
      - str
    - description: The name of the container.
      id: container_name
      type:
      - str
    - description: The name of the blob.
      id: blob_name
      type:
      - str
    - defaultValue: None
      description: An optional blob snapshot ID.
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'The account key, also called shared key or access key, to generate
        the shared access signature.

        Either *account_key* or *user_delegation_key* must be specified.'
      id: account_key
      type:
      - str
    - defaultValue: None
      description: 'Instead of an account shared key, the user could pass in a user
        delegation key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

        When present, the SAS is signed with the user delegation key instead.'
      id: user_delegation_key
      type:
      - azure.storage.blob.UserDelegationKey
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.blob.BlobSasPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime.datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy. To create a stored access policy, use

        <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
      id: policy_id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - description: 'An optional blob version ID. This parameter is only for versioning
        enabled account


        New in version 12.4.0: This keyword argument was introduced in API version
        ''2019-12-12''.'
      id: version_id
      type:
      - str
    - description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: function
  uid: azure.storage.blob.generate_blob_sas
references:
- fullName: azure.storage.blob.upload_blob_to_url
  isExternal: false
  name: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  parent: azure.storage.blob
  uid: azure.storage.blob.upload_blob_to_url
- fullName: azure.storage.blob.download_blob_from_url
  isExternal: false
  name: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  parent: azure.storage.blob
  uid: azure.storage.blob.download_blob_from_url
- fullName: azure.storage.blob.BlobServiceClient
  isExternal: false
  name: BlobServiceClient
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobServiceClient
- fullName: azure.storage.blob.ContainerClient
  isExternal: false
  name: ContainerClient
  parent: azure.storage.blob
  uid: azure.storage.blob.ContainerClient
- fullName: azure.storage.blob.BlobClient
  isExternal: false
  name: BlobClient
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobClient
- fullName: azure.storage.blob.BlobType
  isExternal: false
  name: BlobType
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobType
- fullName: azure.storage.blob.BlobLeaseClient
  isExternal: false
  name: BlobLeaseClient
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobLeaseClient
- fullName: azure.storage.blob.StorageErrorCode
  isExternal: false
  name: StorageErrorCode
  parent: azure.storage.blob
  uid: azure.storage.blob.StorageErrorCode
- fullName: azure.storage.blob.UserDelegationKey
  isExternal: false
  name: UserDelegationKey
  parent: azure.storage.blob
  uid: azure.storage.blob.UserDelegationKey
- fullName: azure.storage.blob.ExponentialRetry
  isExternal: false
  name: ExponentialRetry
  parent: azure.storage.blob
  uid: azure.storage.blob.ExponentialRetry
- fullName: azure.storage.blob.LinearRetry
  isExternal: false
  name: LinearRetry
  parent: azure.storage.blob
  uid: azure.storage.blob.LinearRetry
- fullName: azure.storage.blob.LocationMode
  isExternal: false
  name: LocationMode
  parent: azure.storage.blob
  uid: azure.storage.blob.LocationMode
- fullName: azure.storage.blob.BlockState
  isExternal: false
  name: BlockState
  parent: azure.storage.blob
  uid: azure.storage.blob.BlockState
- fullName: azure.storage.blob.StandardBlobTier
  isExternal: false
  name: StandardBlobTier
  parent: azure.storage.blob
  uid: azure.storage.blob.StandardBlobTier
- fullName: azure.storage.blob.PremiumPageBlobTier
  isExternal: false
  name: PremiumPageBlobTier
  parent: azure.storage.blob
  uid: azure.storage.blob.PremiumPageBlobTier
- fullName: azure.storage.blob.SequenceNumberAction
  isExternal: false
  name: SequenceNumberAction
  parent: azure.storage.blob
  uid: azure.storage.blob.SequenceNumberAction
- fullName: azure.storage.blob.PublicAccess
  isExternal: false
  name: PublicAccess
  parent: azure.storage.blob
  uid: azure.storage.blob.PublicAccess
- fullName: azure.storage.blob.BlobAnalyticsLogging
  isExternal: false
  name: BlobAnalyticsLogging
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobAnalyticsLogging
- fullName: azure.storage.blob.Metrics
  isExternal: false
  name: Metrics
  parent: azure.storage.blob
  uid: azure.storage.blob.Metrics
- fullName: azure.storage.blob.RetentionPolicy
  isExternal: false
  name: RetentionPolicy
  parent: azure.storage.blob
  uid: azure.storage.blob.RetentionPolicy
- fullName: azure.storage.blob.StaticWebsite
  isExternal: false
  name: StaticWebsite
  parent: azure.storage.blob
  uid: azure.storage.blob.StaticWebsite
- fullName: azure.storage.blob.CorsRule
  isExternal: false
  name: CorsRule
  parent: azure.storage.blob
  uid: azure.storage.blob.CorsRule
- fullName: azure.storage.blob.ContainerProperties
  isExternal: false
  name: ContainerProperties
  parent: azure.storage.blob
  uid: azure.storage.blob.ContainerProperties
- fullName: azure.storage.blob.BlobProperties
  isExternal: false
  name: BlobProperties
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobProperties
- fullName: azure.storage.blob.FilteredBlob
  isExternal: false
  name: FilteredBlob
  parent: azure.storage.blob
  uid: azure.storage.blob.FilteredBlob
- fullName: azure.storage.blob.LeaseProperties
  isExternal: false
  name: LeaseProperties
  parent: azure.storage.blob
  uid: azure.storage.blob.LeaseProperties
- fullName: azure.storage.blob.ContentSettings
  isExternal: false
  name: ContentSettings
  parent: azure.storage.blob
  uid: azure.storage.blob.ContentSettings
- fullName: azure.storage.blob.CopyProperties
  isExternal: false
  name: CopyProperties
  parent: azure.storage.blob
  uid: azure.storage.blob.CopyProperties
- fullName: azure.storage.blob.BlobBlock
  isExternal: false
  name: BlobBlock
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobBlock
- fullName: azure.storage.blob.PageRange
  isExternal: false
  name: PageRange
  parent: azure.storage.blob
  uid: azure.storage.blob.PageRange
- fullName: azure.storage.blob.AccessPolicy
  isExternal: false
  name: AccessPolicy
  parent: azure.storage.blob
  uid: azure.storage.blob.AccessPolicy
- fullName: azure.storage.blob.ContainerSasPermissions
  isExternal: false
  name: ContainerSasPermissions
  parent: azure.storage.blob
  uid: azure.storage.blob.ContainerSasPermissions
- fullName: azure.storage.blob.BlobSasPermissions
  isExternal: false
  name: BlobSasPermissions
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobSasPermissions
- fullName: azure.storage.blob.ResourceTypes
  isExternal: false
  name: ResourceTypes
  parent: azure.storage.blob
  uid: azure.storage.blob.ResourceTypes
- fullName: azure.storage.blob.AccountSasPermissions
  isExternal: false
  name: AccountSasPermissions
  parent: azure.storage.blob
  uid: azure.storage.blob.AccountSasPermissions
- fullName: azure.storage.blob.StorageStreamDownloader
  isExternal: false
  name: StorageStreamDownloader
  parent: azure.storage.blob
  uid: azure.storage.blob.StorageStreamDownloader
- fullName: azure.storage.blob.CustomerProvidedEncryptionKey
  isExternal: false
  name: CustomerProvidedEncryptionKey
  parent: azure.storage.blob
  uid: azure.storage.blob.CustomerProvidedEncryptionKey
- fullName: azure.storage.blob.RehydratePriority
  isExternal: false
  name: RehydratePriority
  parent: azure.storage.blob
  uid: azure.storage.blob.RehydratePriority
- fullName: azure.storage.blob.generate_account_sas
  isExternal: false
  name: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, start=None, ip=None, **kwargs)
  parent: azure.storage.blob
  uid: azure.storage.blob.generate_account_sas
- fullName: azure.storage.blob.generate_container_sas
  isExternal: false
  name: generate_container_sas(account_name, container_name, account_key=None, user_delegation_key=None,
    permission=None, expiry=None, start=None, policy_id=None, ip=None, **kwargs)
  parent: azure.storage.blob
  uid: azure.storage.blob.generate_container_sas
- fullName: azure.storage.blob.generate_blob_sas
  isExternal: false
  name: generate_blob_sas(account_name, container_name, blob_name, snapshot=None,
    account_key=None, user_delegation_key=None, permission=None, expiry=None, start=None,
    policy_id=None, ip=None, **kwargs)
  parent: azure.storage.blob
  uid: azure.storage.blob.generate_blob_sas
- fullName: azure.storage.blob.PartialBatchErrorException
  isExternal: false
  name: PartialBatchErrorException
  parent: azure.storage.blob
  uid: azure.storage.blob.PartialBatchErrorException
- fullName: azure.storage.blob.ContainerEncryptionScope
  isExternal: false
  name: ContainerEncryptionScope
  parent: azure.storage.blob
  uid: azure.storage.blob.ContainerEncryptionScope
- fullName: azure.storage.blob.BlobQueryError
  isExternal: false
  name: BlobQueryError
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobQueryError
- fullName: azure.storage.blob.DelimitedJSON
  isExternal: false
  name: DelimitedJSON
  parent: azure.storage.blob
  uid: azure.storage.blob.DelimitedJSON
- fullName: azure.storage.blob.DelimitedTextDialect
  isExternal: false
  name: DelimitedTextDialect
  parent: azure.storage.blob
  uid: azure.storage.blob.DelimitedTextDialect
- fullName: azure.storage.blob.BlobQueryReader
  isExternal: false
  name: BlobQueryReader
  parent: azure.storage.blob
  uid: azure.storage.blob.BlobQueryReader
- fullName: azure.storage.blob.ObjectReplicationPolicy
  isExternal: false
  name: ObjectReplicationPolicy
  parent: azure.storage.blob
  uid: azure.storage.blob.ObjectReplicationPolicy
- fullName: azure.storage.blob.ObjectReplicationRule
  isExternal: false
  name: ObjectReplicationRule
  parent: azure.storage.blob
  uid: azure.storage.blob.ObjectReplicationRule
- fullName: azure.storage.blob.aio
  isExternal: false
  name: aio
  parent: azure.storage.blob
  uid: azure.storage.blob.aio
- fullName: dict(str,str)
  name: dict(str,str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str,str
    name: str,str
    uid: str,str
  - fullName: )
    name: )
  uid: dict(str,str)
- fullName: dict(str, Any)
  name: dict(str, Any)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: )
    name: )
  uid: dict(str, Any)
