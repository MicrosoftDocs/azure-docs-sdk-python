### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.BlobQueryReader.readall
  - azure.storage.blob.BlobQueryReader.readinto
  - azure.storage.blob.BlobQueryReader.records
  class: azure.storage.blob.BlobQueryReader
  fullName: azure.storage.blob.BlobQueryReader
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.storage.blob
  name: BlobQueryReader
  summary: A streaming object to read query results.
  syntax:
    content: BlobQueryReader(name=None, container=None, errors=None, record_delimiter='\n',
      encoding=None, headers=None, response=None)
    variables:
    - description: The name of the blob being quered.
      id: name
      type:
      - str
    - description: The name of the container where the blob is.
      id: container
      type:
      - str
    - description: The response_headers of the quick query request.
      id: response_headers
      type:
      - dict
    - description: 'The delimiter used to separate lines, or records with the data.
        The *records*

        method will return these lines via a generator.'
      id: record_delimiter
      type:
      - bytes
  type: class
  uid: azure.storage.blob.BlobQueryReader
- class: azure.storage.blob.BlobQueryReader
  fullName: azure.storage.blob.BlobQueryReader.readall
  langs:
  - python
  module: azure.storage.blob
  name: readall()
  namewithoutparameters: readall
  summary: 'Return all query results.


    This operation is blocking until all data is downloaded.

    If encoding has been configured - this will be used to decode individual

    records are they are received.'
  syntax:
    content: readall()
    parameters: []
    return:
      type:
      - Union[bytes, str]
  type: method
  uid: azure.storage.blob.BlobQueryReader.readall
- class: azure.storage.blob.BlobQueryReader
  fullName: azure.storage.blob.BlobQueryReader.readinto
  langs:
  - python
  module: azure.storage.blob
  name: readinto(stream)
  namewithoutparameters: readinto
  summary: Download the query result to a stream.
  syntax:
    content: readinto(stream)
    parameters:
    - description: 'The stream to download to. This can be an open file-handle,

        or any writable stream.'
      id: stream
      isRequired: true
    return:
      description: None
  type: method
  uid: azure.storage.blob.BlobQueryReader.readinto
- class: azure.storage.blob.BlobQueryReader
  fullName: azure.storage.blob.BlobQueryReader.records
  langs:
  - python
  module: azure.storage.blob
  name: records()
  namewithoutparameters: records
  summary: 'Returns a record generator for the query result.


    Records will be returned line by line.

    If encoding has been configured - this will be used to decode individual

    records are they are received.'
  syntax:
    content: records()
    parameters: []
    return:
      type:
      - Iterable[Union[bytes, str]]
  type: method
  uid: azure.storage.blob.BlobQueryReader.records
references:
- fullName: azure.storage.blob.BlobQueryReader.readall
  isExternal: false
  name: readall()
  parent: azure.storage.blob.BlobQueryReader
  uid: azure.storage.blob.BlobQueryReader.readall
- fullName: azure.storage.blob.BlobQueryReader.readinto
  isExternal: false
  name: readinto(stream)
  parent: azure.storage.blob.BlobQueryReader
  uid: azure.storage.blob.BlobQueryReader.readinto
- fullName: azure.storage.blob.BlobQueryReader.records
  isExternal: false
  name: records()
  parent: azure.storage.blob.BlobQueryReader
  uid: azure.storage.blob.BlobQueryReader.records
- fullName: Union[bytes, str]
  name: Union[bytes, str]
  spec.python:
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: bytes
    name: bytes
    uid: bytes
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: Union[bytes, str]
- fullName: Iterable[Union[bytes, str]]
  name: Iterable[Union[bytes, str]]
  spec.python:
  - fullName: Iterable
    name: Iterable
    uid: Iterable
  - fullName: '['
    name: '['
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: bytes
    name: bytes
    uid: bytes
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: Iterable[Union[bytes, str]]
