### YamlMime:PythonClass
uid: azure.developer.loadtesting.operations.TestRunOperations
name: TestRunOperations
fullName: azure.developer.loadtesting.operations.TestRunOperations
module: azure.developer.loadtesting.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.developer.loadtesting.LoadTestingClient>'s\n\
  >\n> <xref:test_run> attribute.\n>"
constructor:
  syntax: TestRunOperations(*args, **kwargs)
methods:
- uid: azure.developer.loadtesting.operations.TestRunOperations.create_or_update_test
  name: create_or_update_test
  summary: 'Create and start a new test run with the given name.


    Create and start a new test run with the given name.'
  signature: 'create_or_update_test(test_run_id: str, body: JSON, *, old_test_run_id:
    str | None = None, content_type: str = ''application/merge-patch+json'', **kwargs:
    Any) -> JSON'
  parameters:
  - name: test_run_id
    description: 'Unique name of the load test run, must be a valid URL character

      ^[>>a-z0-9_<<-]*$. Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  - name: body
    description: Load test run model. Is either a model type or a IO type. Required.
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
    - <xref:azure.developer.loadtesting.operations.IO>
  - name: old_test_run_id
    description: Existing test run Id that should be rerun. Default value is None.
    types:
    - <xref:str>
  - name: content_type
    description: 'Body Parameter content-type. Known values are:

      ''application/merge-patch+json''. Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. The user that created the test run.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The created\n         DateTime(ISO 8601\
    \ literal format) of the test run.\n       \"description\": \"str\",  # Optional.\
    \ The test run description.\n       \"displayName\": \"str\",  # Optional. Display\
    \ name of a test run.\n       \"duration\": 0,  # Optional. Test run duration\
    \ in milliseconds.\n       \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The test run end\n         DateTime(ISO 8601 literal format).\n       \"environmentVariables\"\
    : {\n           \"str\": \"str\"  # Optional. Environment variables which are\
    \ defined as\n             a set of <name,value> pairs.\n       },\n       \"\
    executedDateTime\": \"2020-02-20 00:00:00\",  # Optional. Test run initiated\n\
    \         time.\n       \"lastModifiedBy\": \"str\",  # Optional. The user that\
    \ updated the test run.\n       \"lastModifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. The last updated\n         DateTime(ISO 8601 literal format) of\
    \ the test run.\n       \"loadTestConfig\": {\n           \"engineInstances\"\
    : 0,  # Optional. The number of engine instances to\n             execute load\
    \ test. Supported values are in range of 1-45. Required for\n             creating\
    \ a new test.\n           \"splitAllCSVs\": bool  # Optional. Whether all the\
    \ input CSV files\n             should be split evenly across all engines.\n \
    \      },\n       \"passFailCriteria\": {\n           \"passFailMetrics\": {\n\
    \               \"str\": {\n                   \"action\": \"str\",  # Optional.\
    \ Either \"u2018stop\"u2019\n                     or \"u2018continue\"u2019 after\
    \ the threshold is met. Default is\n                     \"u2018continue\"u2019.\n\
    \                   \"actualValue\": 0.0,  # Optional. The actual value of\n \
    \                    the client metric for the test run.\n                   \"\
    aggregate\": \"str\",  # Optional. The aggregation\n                     function\
    \ to be applied on the client metric. Allowed functions -\n                  \
    \   \"u2018percentage\"u2019 - for error metric ,\"u2018avg\"u2019,\n        \
    \             \"u2018p50\"u2019, \"u2018p90\"u2019, \"u2018p95\"u2019, \"u2018p99\"\
    u2019,\n                     \"u2018min\"u2019, \"u2018max\"u2019 - for response_time_ms\
    \ and latency\n                     metric, \"u2018avg\"u2019 - for requests_per_sec,\
    \ \"u2018count\"u2019 -\n                     for requests.\n                \
    \   \"clientmetric\": \"str\",  # Optional. The client metric\n              \
    \       on which the criteria should be applied. Allowed values -\n          \
    \           \"u2018response_time_ms\"u2019 , \"u2018latency\"u2019,\n        \
    \             \"u2018error\"u2019, \"u2018requests\"u2019,\n                 \
    \    \"u2018requests_per_sec\"u2019.\n                   \"condition\": \"str\"\
    ,  # Optional. The comparison\n                     operator. Supported types\
    \ \"u2018>\"u2019.\n                   \"requestName\": \"str\",  # Optional.\
    \ Request name for\n                     which the Pass fail criteria has to be\
    \ applied.\n                   \"result\": \"str\",  # Optional. Outcome of the\
    \ test\n                     run. possible outcome - \"u2018passed\"u2019 , \"\
    u2018failed\"u2019 ,\n                     \"u2018undetermined\"u2019.\n     \
    \              \"value\": 0.0  # Optional. The value to compare with\n       \
    \              the client metric. Allowed values - \"u2018error : [0.0 , 100.0]\
    \ unit-\n                     % \"u2019, response_time_ms and latency : any integer\
    \ value unit- ms.\n               }\n           }\n       },\n       \"portalUrl\"\
    : \"str\",  # Optional. Portal url.\n       \"resourceId\": \"str\",  # Optional.\
    \ Load test resource Id.\n       \"secrets\": {\n           \"str\": {\n     \
    \          \"type\": \"str\",  # Optional. Type of secret. eg.\n             \
    \    AKV_SECRET_URI/SECRET_VALUE.\n               \"value\": \"str\"  # Optional.\
    \ The value of the secret, of type\n                 AKV_SECRET_URI or SECRET_VALUE.\n\
    \           }\n       },\n       \"startDateTime\": \"2020-02-20 00:00:00\", \
    \ # Optional. The test run start\n         DateTime(ISO 8601 literal format).\n\
    \       \"status\": \"str\",  # Optional. The test run status.\n       \"subnetId\"\
    : \"str\",  # Optional. Subnet ID on which the load test instances\n         should\
    \ run.\n       \"testArtifacts\": {\n           \"inputArtifacts\": {\n      \
    \         \"additionalUrls\": [\n                   {\n                      \
    \ \"expireTime\": \"2020-02-20 00:00:00\",  #\n                         Optional.\
    \ Expiry time of the file.\n                       \"fileId\": \"str\",  # Optional.\
    \ File unique\n                         identifier.\n                       \"\
    fileType\": 0,  # Optional. Integer\n                         representation of\
    \ the file type (0 = JMX_FILE, 1 =\n                         USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n                         1,\
    \ and 2.\n                       \"filename\": \"str\",  # Optional. Name of the\n\
    \                         file.\n                       \"url\": \"str\",  # Optional.\
    \ File URL.\n                       \"validationStatus\": \"str\"  # Optional.\n\
    \                         Validation status of the file.\n                   }\n\
    \               ],\n               \"configUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"inputArtifactsZipFileurl\"\
    : {\n                   \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n\
    \                     Expiry time of the file.\n                   \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n                   \"fileType\"\
    : 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               },\n               \"\
    testScriptUrl\": {\n                   \"expireTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n                     Expiry time of the file.\n              \
    \     \"fileId\": \"str\",  # Optional. File unique identifier.\n            \
    \       \"fileType\": 0,  # Optional. Integer representation of\n            \
    \         the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n            \
    \         ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n            \
    \       \"filename\": \"str\",  # Optional. Name of the file.\n              \
    \     \"url\": \"str\",  # Optional. File URL.\n                   \"validationStatus\"\
    : \"str\"  # Optional. Validation\n                     status of the file.\n\
    \               },\n               \"userPropUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               }\n           },\n           \"outputArtifacts\"\
    : {\n               \"logsUrl\": {\n                   \"expireTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional.\n                     Expiry time of the file.\n  \
    \                 \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"resultUrl\": {\n \
    \                  \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n   \
    \                  Expiry time of the file.\n                   \"fileId\": \"\
    str\",  # Optional. File unique identifier.\n                   \"fileType\":\
    \ 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               }\n           }\n  \
    \     },\n       \"testId\": \"str\",  # Optional. Associated test Id.\n     \
    \  \"testResult\": \"str\",  # Optional. Test result for pass/Fail criteria used\n\
    \         during the test run. possible outcome - \"u2018Passed\"u2019 , \"u2018Failed\"\
    u2019 ,\n         \"u2018Not Applicable\"u2019.\n       \"testRunId\": \"str\"\
    ,  # Optional. Unique test run name as identifier.\n       \"testRunStatistics\"\
    : {\n           \"str\": {\n               \"errorCount\": 0.0,  # Optional. Error\
    \ count.\n               \"errorPct\": 0.0,  # Optional. Error percentage.\n \
    \              \"maxResTime\": 0.0,  # Optional. Max response time.\n        \
    \       \"meanResTime\": 0.0,  # Optional. Mean response time.\n             \
    \  \"medianResTime\": 0.0,  # Optional. Median response time.\n              \
    \ \"minResTime\": 0.0,  # Optional. Minimum response time.\n               \"\
    pct1ResTime\": 0.0,  # Optional. 90 percentile response time.\n              \
    \ \"pct2ResTime\": 0.0,  # Optional. 95 percentile response time.\n          \
    \     \"pct3ResTime\": 0.0,  # Optional. 99 percentile response time.\n      \
    \         \"receivedKBytesPerSec\": 0.0,  # Optional. Received network\n     \
    \            bytes.\n               \"sampleCount\": 0.0,  # Optional. Sampler\
    \ count.\n               \"sentKBytesPerSec\": 0.0,  # Optional. Sent network\
    \ bytes.\n               \"throughput\": 0.0,  # Optional. Throughput.\n     \
    \          \"transaction\": \"str\"  # Optional. Transaction name.\n         \
    \  }\n       },\n       \"vusers\": 0  # Optional. Number of virtual users, for\
    \ which test has been\n         run.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.delete_test_run
  name: delete_test_run
  summary: 'Delete a test run by its name.


    Delete a test run by its name.'
  signature: 'delete_test_run(test_run_id: str, **kwargs: Any) -> None'
  parameters:
  - name: test_run_id
    description: 'Unique name of the load test run, must be a valid URL character

      ^[>>a-z0-9_<<-]*$. Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  return:
    description: None
    types:
    - <xref:azure.developer.loadtesting.operations.None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.developer.loadtesting.operations.TestRunOperations.get_test_run
  name: get_test_run
  summary: 'Get test run details by name.


    Get test run details by name.'
  signature: 'get_test_run(test_run_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: test_run_id
    description: 'Unique name of load test run, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. The user that created the test run.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The created\n         DateTime(ISO 8601\
    \ literal format) of the test run.\n       \"description\": \"str\",  # Optional.\
    \ The test run description.\n       \"displayName\": \"str\",  # Optional. Display\
    \ name of a test run.\n       \"duration\": 0,  # Optional. Test run duration\
    \ in milliseconds.\n       \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The test run end\n         DateTime(ISO 8601 literal format).\n       \"environmentVariables\"\
    : {\n           \"str\": \"str\"  # Optional. Environment variables which are\
    \ defined as\n             a set of <name,value> pairs.\n       },\n       \"\
    executedDateTime\": \"2020-02-20 00:00:00\",  # Optional. Test run initiated\n\
    \         time.\n       \"lastModifiedBy\": \"str\",  # Optional. The user that\
    \ updated the test run.\n       \"lastModifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. The last updated\n         DateTime(ISO 8601 literal format) of\
    \ the test run.\n       \"loadTestConfig\": {\n           \"engineInstances\"\
    : 0,  # Optional. The number of engine instances to\n             execute load\
    \ test. Supported values are in range of 1-45. Required for\n             creating\
    \ a new test.\n           \"splitAllCSVs\": bool  # Optional. Whether all the\
    \ input CSV files\n             should be split evenly across all engines.\n \
    \      },\n       \"passFailCriteria\": {\n           \"passFailMetrics\": {\n\
    \               \"str\": {\n                   \"action\": \"str\",  # Optional.\
    \ Either \"u2018stop\"u2019\n                     or \"u2018continue\"u2019 after\
    \ the threshold is met. Default is\n                     \"u2018continue\"u2019.\n\
    \                   \"actualValue\": 0.0,  # Optional. The actual value of\n \
    \                    the client metric for the test run.\n                   \"\
    aggregate\": \"str\",  # Optional. The aggregation\n                     function\
    \ to be applied on the client metric. Allowed functions -\n                  \
    \   \"u2018percentage\"u2019 - for error metric ,\"u2018avg\"u2019,\n        \
    \             \"u2018p50\"u2019, \"u2018p90\"u2019, \"u2018p95\"u2019, \"u2018p99\"\
    u2019,\n                     \"u2018min\"u2019, \"u2018max\"u2019 - for response_time_ms\
    \ and latency\n                     metric, \"u2018avg\"u2019 - for requests_per_sec,\
    \ \"u2018count\"u2019 -\n                     for requests.\n                \
    \   \"clientmetric\": \"str\",  # Optional. The client metric\n              \
    \       on which the criteria should be applied. Allowed values -\n          \
    \           \"u2018response_time_ms\"u2019 , \"u2018latency\"u2019,\n        \
    \             \"u2018error\"u2019, \"u2018requests\"u2019,\n                 \
    \    \"u2018requests_per_sec\"u2019.\n                   \"condition\": \"str\"\
    ,  # Optional. The comparison\n                     operator. Supported types\
    \ \"u2018>\"u2019.\n                   \"requestName\": \"str\",  # Optional.\
    \ Request name for\n                     which the Pass fail criteria has to be\
    \ applied.\n                   \"result\": \"str\",  # Optional. Outcome of the\
    \ test\n                     run. possible outcome - \"u2018passed\"u2019 , \"\
    u2018failed\"u2019 ,\n                     \"u2018undetermined\"u2019.\n     \
    \              \"value\": 0.0  # Optional. The value to compare with\n       \
    \              the client metric. Allowed values - \"u2018error : [0.0 , 100.0]\
    \ unit-\n                     % \"u2019, response_time_ms and latency : any integer\
    \ value unit- ms.\n               }\n           }\n       },\n       \"portalUrl\"\
    : \"str\",  # Optional. Portal url.\n       \"resourceId\": \"str\",  # Optional.\
    \ Load test resource Id.\n       \"secrets\": {\n           \"str\": {\n     \
    \          \"type\": \"str\",  # Optional. Type of secret. eg.\n             \
    \    AKV_SECRET_URI/SECRET_VALUE.\n               \"value\": \"str\"  # Optional.\
    \ The value of the secret, of type\n                 AKV_SECRET_URI or SECRET_VALUE.\n\
    \           }\n       },\n       \"startDateTime\": \"2020-02-20 00:00:00\", \
    \ # Optional. The test run start\n         DateTime(ISO 8601 literal format).\n\
    \       \"status\": \"str\",  # Optional. The test run status.\n       \"subnetId\"\
    : \"str\",  # Optional. Subnet ID on which the load test instances\n         should\
    \ run.\n       \"testArtifacts\": {\n           \"inputArtifacts\": {\n      \
    \         \"additionalUrls\": [\n                   {\n                      \
    \ \"expireTime\": \"2020-02-20 00:00:00\",  #\n                         Optional.\
    \ Expiry time of the file.\n                       \"fileId\": \"str\",  # Optional.\
    \ File unique\n                         identifier.\n                       \"\
    fileType\": 0,  # Optional. Integer\n                         representation of\
    \ the file type (0 = JMX_FILE, 1 =\n                         USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n                         1,\
    \ and 2.\n                       \"filename\": \"str\",  # Optional. Name of the\n\
    \                         file.\n                       \"url\": \"str\",  # Optional.\
    \ File URL.\n                       \"validationStatus\": \"str\"  # Optional.\n\
    \                         Validation status of the file.\n                   }\n\
    \               ],\n               \"configUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"inputArtifactsZipFileurl\"\
    : {\n                   \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n\
    \                     Expiry time of the file.\n                   \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n                   \"fileType\"\
    : 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               },\n               \"\
    testScriptUrl\": {\n                   \"expireTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n                     Expiry time of the file.\n              \
    \     \"fileId\": \"str\",  # Optional. File unique identifier.\n            \
    \       \"fileType\": 0,  # Optional. Integer representation of\n            \
    \         the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n            \
    \         ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n            \
    \       \"filename\": \"str\",  # Optional. Name of the file.\n              \
    \     \"url\": \"str\",  # Optional. File URL.\n                   \"validationStatus\"\
    : \"str\"  # Optional. Validation\n                     status of the file.\n\
    \               },\n               \"userPropUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               }\n           },\n           \"outputArtifacts\"\
    : {\n               \"logsUrl\": {\n                   \"expireTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional.\n                     Expiry time of the file.\n  \
    \                 \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"resultUrl\": {\n \
    \                  \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n   \
    \                  Expiry time of the file.\n                   \"fileId\": \"\
    str\",  # Optional. File unique identifier.\n                   \"fileType\":\
    \ 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               }\n           }\n  \
    \     },\n       \"testId\": \"str\",  # Optional. Associated test Id.\n     \
    \  \"testResult\": \"str\",  # Optional. Test result for pass/Fail criteria used\n\
    \         during the test run. possible outcome - \"u2018Passed\"u2019 , \"u2018Failed\"\
    u2019 ,\n         \"u2018Not Applicable\"u2019.\n       \"testRunId\": \"str\"\
    ,  # Optional. Unique test run name as identifier.\n       \"testRunStatistics\"\
    : {\n           \"str\": {\n               \"errorCount\": 0.0,  # Optional. Error\
    \ count.\n               \"errorPct\": 0.0,  # Optional. Error percentage.\n \
    \              \"maxResTime\": 0.0,  # Optional. Max response time.\n        \
    \       \"meanResTime\": 0.0,  # Optional. Mean response time.\n             \
    \  \"medianResTime\": 0.0,  # Optional. Median response time.\n              \
    \ \"minResTime\": 0.0,  # Optional. Minimum response time.\n               \"\
    pct1ResTime\": 0.0,  # Optional. 90 percentile response time.\n              \
    \ \"pct2ResTime\": 0.0,  # Optional. 95 percentile response time.\n          \
    \     \"pct3ResTime\": 0.0,  # Optional. 99 percentile response time.\n      \
    \         \"receivedKBytesPerSec\": 0.0,  # Optional. Received network\n     \
    \            bytes.\n               \"sampleCount\": 0.0,  # Optional. Sampler\
    \ count.\n               \"sentKBytesPerSec\": 0.0,  # Optional. Sent network\
    \ bytes.\n               \"throughput\": 0.0,  # Optional. Throughput.\n     \
    \          \"transaction\": \"str\"  # Optional. Transaction name.\n         \
    \  }\n       },\n       \"vusers\": 0  # Optional. Number of virtual users, for\
    \ which test has been\n         run.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.get_test_run_client_metrics
  name: get_test_run_client_metrics
  summary: 'Get all client metrics for a load test run.


    Get all client metrics for a load test run.'
  signature: 'get_test_run_client_metrics(test_run_id: str, body: JSON, *, content_type:
    str = ''application/json'', **kwargs: Any) -> JSON'
  parameters:
  - name: test_run_id
    description: 'Unique name of the load test run, must be a valid URL character

      ^[>>a-z0-9_<<-]*$. Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  - name: body
    description: Client metrics request model. Is either a model type or a IO type.
      Required.
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
    - <xref:azure.developer.loadtesting.operations.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"testRunId\"\
    : \"str\",  # Optional. Test run name for which client metrics\n         results\
    \ is required.\n       \"timeSeries\": {\n           \"activeUsers\": {\n    \
    \           \"str\": [\n                   {\n                       \"timestamp\"\
    : \"2020-02-20 00:00:00\",  #\n                         Optional. Timestamp(ISO\
    \ 8601 literal format).\n                       \"value\": 0.0  # Optional. Value\
    \ at timestamp.\n                   }\n               ]\n           },\n     \
    \      \"errors\": {\n               \"str\": [\n                   {\n      \
    \                 \"timestamp\": \"2020-02-20 00:00:00\",  #\n               \
    \          Optional. Timestamp(ISO 8601 literal format).\n                   \
    \    \"value\": 0.0  # Optional. Value at timestamp.\n                   }\n \
    \              ]\n           },\n           \"responseTime\": {\n            \
    \   \"str\": [\n                   {\n                       \"timestamp\": \"\
    2020-02-20 00:00:00\",  #\n                         Optional. Timestamp(ISO 8601\
    \ literal format).\n                       \"value\": 0.0  # Optional. Value at\
    \ timestamp.\n                   }\n               ]\n           },\n        \
    \   \"throughput\": {\n               \"str\": [\n                   {\n     \
    \                  \"timestamp\": \"2020-02-20 00:00:00\",  #\n              \
    \           Optional. Timestamp(ISO 8601 literal format).\n                  \
    \     \"value\": 0.0  # Optional. Value at timestamp.\n                   }\n\
    \               ]\n           }\n       }\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.get_test_run_client_metrics_filters
  name: get_test_run_client_metrics_filters
  summary: 'Get all filters that are supported for client metrics for a given load
    test run.


    Get all filters that are supported for client metrics for a given load test run.'
  signature: 'get_test_run_client_metrics_filters(test_run_id: str, **kwargs: Any)
    -> MutableMapping[str, Any]'
  parameters:
  - name: test_run_id
    description: 'Unique name for load test run, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"filters\"\
    : {\n           \"errorFiltersValues\": [\n               \"str\"  # Optional.\
    \ List of errors occurred for the test run,\n                 for which client\
    \ metrics can be filtered.\n           ],\n           \"requestSamplerValues\"\
    : [\n               \"str\"  # Optional. List of request sampler for the test\
    \ run,\n                 for which client metrics can be filtered.\n         \
    \  ]\n       },\n       \"testRunId\": \"str\",  # Optional. Test run name for\
    \ which client metrics\n         filters is required.\n       \"timeRange\": {\n\
    \           \"endTime\": \"2020-02-20 00:00:00\",  # Optional. end DateTime(ISO\
    \ 8601\n             literal format) for the requested client metrics filter.\n\
    \           \"startTime\": \"2020-02-20 00:00:00\"  # Optional. start DateTime(ISO\n\
    \             8601 literal format) for the requested client metrics filter.\n\
    \       }\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.get_test_run_file
  name: get_test_run_file
  summary: 'Get test run file by file name.


    Get test run file by file name.'
  signature: 'get_test_run_file(test_run_id: str, file_id: str, **kwargs: Any) ->
    MutableMapping[str, Any]'
  parameters:
  - name: test_run_id
    description: 'Unique name of load test run, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  - name: file_id
    description: 'Unique identifier for test run file, must be a valid URL character

      ^[>>a-z0-9_<<-]*$. Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Expiry time of the file.\n       \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n       \"fileType\": 0,  # Optional.\
    \ Integer representation of the file type (0 =\n         JMX_FILE, 1 = USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are: 0, 1,\n         and 2.\n      \
    \ \"filename\": \"str\",  # Optional. Name of the file.\n       \"url\": \"str\"\
    ,  # Optional. File URL.\n       \"validationStatus\": \"str\"  # Optional. Validation\
    \ status of the file.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.list_test_runs
  name: list_test_runs
  summary: "Get all test runs with given filters.\n\nGet all test runs with given\
    \ filters.\n\n\"CONFIGURED\",\"EXECUTING\",\"EXECUTED\",\"DEPROVISIONING\",\"\
    DEPROVISIONED\",\"DONE\",\"CANCELLED\",\"FAILED\".\n   Default value is None."
  signature: 'list_test_runs(*, order_by: str | None = None, continuation_token_parameter:
    str | None = None, search: str | None = None, execution_from: datetime | None
    = None, execution_to: datetime | None = None, status: str | None = None, max_page_size:
    int = 50, test_id: str | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: max_page_size
    description: Number of results in response. Default value is 50.
    types:
    - <xref:int>
  - name: test_id
    description: 'Unique name for load test, must be a valid URL character ^[>>a-z0-9_<<-]*$.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"value\"\
    : [\n           {\n               \"createdBy\": \"str\",  # Optional. The user\
    \ that created the\n                 test run.\n               \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The\n                 created DateTime(ISO\
    \ 8601 literal format) of the test run.\n               \"description\": \"str\"\
    ,  # Optional. The test run description.\n               \"displayName\": \"str\"\
    ,  # Optional. Display name of a test\n                 run.\n               \"\
    duration\": 0,  # Optional. Test run duration in\n                 milliseconds.\n\
    \               \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional. The test\n\
    \                 run end DateTime(ISO 8601 literal format).\n               \"\
    environmentVariables\": {\n                   \"str\": \"str\"  # Optional. Environment\
    \ variables which\n                     are defined as a set of <name,value> pairs.\n\
    \               },\n               \"executedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. Test\n                 run initiated time.\n               \"lastModifiedBy\"\
    : \"str\",  # Optional. The user that updated\n                 the test run.\n\
    \               \"lastModifiedDateTime\": \"2020-02-20 00:00:00\",  # Optional.\n\
    \                 The last updated  DateTime(ISO 8601 literal format) of the test\
    \ run.\n               \"loadTestConfig\": {\n                   \"engineInstances\"\
    : 0,  # Optional. The number of\n                     engine instances to execute\
    \ load test. Supported values are in range\n                     of 1-45. Required\
    \ for creating a new test.\n                   \"splitAllCSVs\": bool  # Optional.\
    \ Whether all the\n                     input CSV files should be split evenly\
    \ across all engines.\n               },\n               \"passFailCriteria\"\
    : {\n                   \"passFailMetrics\": {\n                       \"str\"\
    : {\n                           \"action\": \"str\",  # Optional. Either\n   \
    \                          \"u2018stop\"u2019 or \"u2018continue\"u2019 after\
    \ the threshold\n                             is met. Default is \"u2018continue\"\
    u2019.\n                           \"actualValue\": 0.0,  # Optional. The\n  \
    \                           actual value of the client metric for the test run.\n\
    \                           \"aggregate\": \"str\",  # Optional. The\n       \
    \                      aggregation function to be applied on the client metric.\n\
    \                             Allowed functions - \"u2018percentage\"u2019 - for\
    \ error metric\n                             ,\"u2018avg\"u2019, \"u2018p50\"\
    u2019, \"u2018p90\"u2019,\n                             \"u2018p95\"u2019, \"\
    u2018p99\"u2019, \"u2018min\"u2019,\n                             \"u2018max\"\
    u2019 - for response_time_ms and latency metric,\n                           \
    \  \"u2018avg\"u2019 - for requests_per_sec, \"u2018count\"u2019 -\n         \
    \                    for requests.\n                           \"clientmetric\"\
    : \"str\",  # Optional.\n                             The client metric on which\
    \ the criteria should be applied.\n                             Allowed values\
    \ - \"u2018response_time_ms\"u2019 ,\n                             \"u2018latency\"\
    u2019, \"u2018error\"u2019, \"u2018requests\"u2019,\n                        \
    \     \"u2018requests_per_sec\"u2019.\n                           \"condition\"\
    : \"str\",  # Optional. The\n                             comparison operator.\
    \ Supported types \"u2018>\"u2019.\n                           \"requestName\"\
    : \"str\",  # Optional.\n                             Request name for which the\
    \ Pass fail criteria has to be\n                             applied.\n      \
    \                     \"result\": \"str\",  # Optional. Outcome\n            \
    \                 of the test run. possible outcome - \"u2018passed\"u2019 ,\n\
    \                             \"u2018failed\"u2019 , \"u2018undetermined\"u2019.\n\
    \                           \"value\": 0.0  # Optional. The value\n          \
    \                   to compare with the client metric. Allowed values -\n    \
    \                         \"u2018error : [0.0 , 100.0] unit- % \"u2019, response_time_ms\n\
    \                             and latency : any integer value unit- ms.\n    \
    \                   }\n                   }\n               },\n             \
    \  \"portalUrl\": \"str\",  # Optional. Portal url.\n               \"resourceId\"\
    : \"str\",  # Optional. Load test resource Id.\n               \"secrets\": {\n\
    \                   \"str\": {\n                       \"type\": \"str\",  # Optional.\
    \ Type of secret.\n                         eg. AKV_SECRET_URI/SECRET_VALUE.\n\
    \                       \"value\": \"str\"  # Optional. The value of the\n   \
    \                      secret, of type AKV_SECRET_URI or SECRET_VALUE.\n     \
    \              }\n               },\n               \"startDateTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional. The test\n                 run start DateTime(ISO 8601\
    \ literal format).\n               \"status\": \"str\",  # Optional. The test\
    \ run status.\n               \"subnetId\": \"str\",  # Optional. Subnet ID on\
    \ which the load\n                 test instances should run.\n              \
    \ \"testArtifacts\": {\n                   \"inputArtifacts\": {\n           \
    \            \"additionalUrls\": [\n                           {\n           \
    \                    \"expireTime\": \"2020-02-20\n                          \
    \       00:00:00\",  # Optional. Expiry time of the file.\n                  \
    \             \"fileId\": \"str\",  # Optional.\n                            \
    \     File unique identifier.\n                               \"fileType\": 0,\
    \  # Optional.\n                                 Integer representation of the\
    \ file type (0 = JMX_FILE, 1\n                                 = USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known\n                                 values are:\
    \ 0, 1, and 2.\n                               \"filename\": \"str\",  #\n   \
    \                              Optional. Name of the file.\n                 \
    \              \"url\": \"str\",  # Optional.\n                              \
    \   File URL.\n                               \"validationStatus\": \"str\"  #\n\
    \                                 Optional. Validation status of the file.\n \
    \                          }\n                       ],\n                    \
    \   \"configUrl\": {\n                           \"expireTime\": \"2020-02-20\
    \ 00:00:00\",\n                             # Optional. Expiry time of the file.\n\
    \                           \"fileId\": \"str\",  # Optional. File\n         \
    \                    unique identifier.\n                           \"fileType\"\
    : 0,  # Optional. Integer\n                             representation of the\
    \ file type (0 = JMX_FILE, 1 =\n                             USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are:\n                             0,\
    \ 1, and 2.\n                           \"filename\": \"str\",  # Optional. Name\n\
    \                             of the file.\n                           \"url\"\
    : \"str\",  # Optional. File URL.\n                           \"validationStatus\"\
    : \"str\"  #\n                             Optional. Validation status of the\
    \ file.\n                       },\n                       \"inputArtifactsZipFileurl\"\
    : {\n                           \"expireTime\": \"2020-02-20 00:00:00\",\n   \
    \                          # Optional. Expiry time of the file.\n            \
    \               \"fileId\": \"str\",  # Optional. File\n                     \
    \        unique identifier.\n                           \"fileType\": 0,  # Optional.\
    \ Integer\n                             representation of the file type (0 = JMX_FILE,\
    \ 1 =\n                             USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\
    \ Known values are:\n                             0, 1, and 2.\n             \
    \              \"filename\": \"str\",  # Optional. Name\n                    \
    \         of the file.\n                           \"url\": \"str\",  # Optional.\
    \ File URL.\n                           \"validationStatus\": \"str\"  #\n   \
    \                          Optional. Validation status of the file.\n        \
    \               },\n                       \"testScriptUrl\": {\n            \
    \               \"expireTime\": \"2020-02-20 00:00:00\",\n                   \
    \          # Optional. Expiry time of the file.\n                           \"\
    fileId\": \"str\",  # Optional. File\n                             unique identifier.\n\
    \                           \"fileType\": 0,  # Optional. Integer\n          \
    \                   representation of the file type (0 = JMX_FILE, 1 =\n     \
    \                        USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values\
    \ are:\n                             0, 1, and 2.\n                          \
    \ \"filename\": \"str\",  # Optional. Name\n                             of the\
    \ file.\n                           \"url\": \"str\",  # Optional. File URL.\n\
    \                           \"validationStatus\": \"str\"  #\n               \
    \              Optional. Validation status of the file.\n                    \
    \   },\n                       \"userPropUrl\": {\n                          \
    \ \"expireTime\": \"2020-02-20 00:00:00\",\n                             # Optional.\
    \ Expiry time of the file.\n                           \"fileId\": \"str\",  #\
    \ Optional. File\n                             unique identifier.\n          \
    \                 \"fileType\": 0,  # Optional. Integer\n                    \
    \         representation of the file type (0 = JMX_FILE, 1 =\n               \
    \              USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS). Known values are:\n\
    \                             0, 1, and 2.\n                           \"filename\"\
    : \"str\",  # Optional. Name\n                             of the file.\n    \
    \                       \"url\": \"str\",  # Optional. File URL.\n           \
    \                \"validationStatus\": \"str\"  #\n                          \
    \   Optional. Validation status of the file.\n                       }\n     \
    \              },\n                   \"outputArtifacts\": {\n               \
    \        \"logsUrl\": {\n                           \"expireTime\": \"2020-02-20\
    \ 00:00:00\",\n                             # Optional. Expiry time of the file.\n\
    \                           \"fileId\": \"str\",  # Optional. File\n         \
    \                    unique identifier.\n                           \"fileType\"\
    : 0,  # Optional. Integer\n                             representation of the\
    \ file type (0 = JMX_FILE, 1 =\n                             USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are:\n                             0,\
    \ 1, and 2.\n                           \"filename\": \"str\",  # Optional. Name\n\
    \                             of the file.\n                           \"url\"\
    : \"str\",  # Optional. File URL.\n                           \"validationStatus\"\
    : \"str\"  #\n                             Optional. Validation status of the\
    \ file.\n                       },\n                       \"resultUrl\": {\n\
    \                           \"expireTime\": \"2020-02-20 00:00:00\",\n       \
    \                      # Optional. Expiry time of the file.\n                \
    \           \"fileId\": \"str\",  # Optional. File\n                         \
    \    unique identifier.\n                           \"fileType\": 0,  # Optional.\
    \ Integer\n                             representation of the file type (0 = JMX_FILE,\
    \ 1 =\n                             USER_PROPERTIES, 2 = ADDITIONAL_ARTIFACTS).\
    \ Known values are:\n                             0, 1, and 2.\n             \
    \              \"filename\": \"str\",  # Optional. Name\n                    \
    \         of the file.\n                           \"url\": \"str\",  # Optional.\
    \ File URL.\n                           \"validationStatus\": \"str\"  #\n   \
    \                          Optional. Validation status of the file.\n        \
    \               }\n                   }\n               },\n               \"\
    testId\": \"str\",  # Optional. Associated test Id.\n               \"testResult\"\
    : \"str\",  # Optional. Test result for pass/Fail\n                 criteria used\
    \ during the test run. possible outcome - \"u2018Passed\"u2019\n             \
    \    , \"u2018Failed\"u2019 , \"u2018Not Applicable\"u2019.\n               \"\
    testRunId\": \"str\",  # Optional. Unique test run name as\n                 identifier.\n\
    \               \"testRunStatistics\": {\n                   \"str\": {\n    \
    \                   \"errorCount\": 0.0,  # Optional. Error count.\n         \
    \              \"errorPct\": 0.0,  # Optional. Error\n                       \
    \  percentage.\n                       \"maxResTime\": 0.0,  # Optional. Max response\n\
    \                         time.\n                       \"meanResTime\": 0.0,\
    \  # Optional. Mean\n                         response time.\n               \
    \        \"medianResTime\": 0.0,  # Optional. Median\n                       \
    \  response time.\n                       \"minResTime\": 0.0,  # Optional. Minimum\n\
    \                         response time.\n                       \"pct1ResTime\"\
    : 0.0,  # Optional. 90\n                         percentile response time.\n \
    \                      \"pct2ResTime\": 0.0,  # Optional. 95\n               \
    \          percentile response time.\n                       \"pct3ResTime\":\
    \ 0.0,  # Optional. 99\n                         percentile response time.\n \
    \                      \"receivedKBytesPerSec\": 0.0,  # Optional.\n         \
    \                Received network bytes.\n                       \"sampleCount\"\
    : 0.0,  # Optional. Sampler\n                         count.\n               \
    \        \"sentKBytesPerSec\": 0.0,  # Optional. Sent\n                      \
    \   network bytes.\n                       \"throughput\": 0.0,  # Optional. Throughput.\n\
    \                       \"transaction\": \"str\"  # Optional. Transaction\n  \
    \                       name.\n                   }\n               },\n     \
    \          \"vusers\": 0  # Optional. Number of virtual users, for which\n   \
    \              test has been run.\n           }\n       ],\n       \"nextLink\"\
    : \"str\"  # Optional. Link for the next list of resources in case of\n      \
    \   paginated results, if applicable.\n   }\n   ````\n"
- uid: azure.developer.loadtesting.operations.TestRunOperations.stop_test_run
  name: stop_test_run
  summary: 'Stop test run by name.


    Stop test run by name.'
  signature: 'stop_test_run(test_run_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: test_run_id
    description: 'Unique name of the load test run, must be a valid URL character

      ^[>>a-z0-9_<<-]*$. Required.'
    isRequired: true
    types:
    - <xref:azure.developer.loadtesting.operations.str>
  return:
    description: JSON object
    types:
    - <xref:azure.developer.loadtesting.operations.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"createdBy\"\
    : \"str\",  # Optional. The user that created the test run.\n       \"createdDateTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The created\n         DateTime(ISO 8601\
    \ literal format) of the test run.\n       \"description\": \"str\",  # Optional.\
    \ The test run description.\n       \"displayName\": \"str\",  # Optional. Display\
    \ name of a test run.\n       \"duration\": 0,  # Optional. Test run duration\
    \ in milliseconds.\n       \"endDateTime\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The test run end\n         DateTime(ISO 8601 literal format).\n       \"environmentVariables\"\
    : {\n           \"str\": \"str\"  # Optional. Environment variables which are\
    \ defined as\n             a set of <name,value> pairs.\n       },\n       \"\
    executedDateTime\": \"2020-02-20 00:00:00\",  # Optional. Test run initiated\n\
    \         time.\n       \"lastModifiedBy\": \"str\",  # Optional. The user that\
    \ updated the test run.\n       \"lastModifiedDateTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional. The last updated\n         DateTime(ISO 8601 literal format) of\
    \ the test run.\n       \"loadTestConfig\": {\n           \"engineInstances\"\
    : 0,  # Optional. The number of engine instances to\n             execute load\
    \ test. Supported values are in range of 1-45. Required for\n             creating\
    \ a new test.\n           \"splitAllCSVs\": bool  # Optional. Whether all the\
    \ input CSV files\n             should be split evenly across all engines.\n \
    \      },\n       \"passFailCriteria\": {\n           \"passFailMetrics\": {\n\
    \               \"str\": {\n                   \"action\": \"str\",  # Optional.\
    \ Either \"u2018stop\"u2019\n                     or \"u2018continue\"u2019 after\
    \ the threshold is met. Default is\n                     \"u2018continue\"u2019.\n\
    \                   \"actualValue\": 0.0,  # Optional. The actual value of\n \
    \                    the client metric for the test run.\n                   \"\
    aggregate\": \"str\",  # Optional. The aggregation\n                     function\
    \ to be applied on the client metric. Allowed functions -\n                  \
    \   \"u2018percentage\"u2019 - for error metric ,\"u2018avg\"u2019,\n        \
    \             \"u2018p50\"u2019, \"u2018p90\"u2019, \"u2018p95\"u2019, \"u2018p99\"\
    u2019,\n                     \"u2018min\"u2019, \"u2018max\"u2019 - for response_time_ms\
    \ and latency\n                     metric, \"u2018avg\"u2019 - for requests_per_sec,\
    \ \"u2018count\"u2019 -\n                     for requests.\n                \
    \   \"clientmetric\": \"str\",  # Optional. The client metric\n              \
    \       on which the criteria should be applied. Allowed values -\n          \
    \           \"u2018response_time_ms\"u2019 , \"u2018latency\"u2019,\n        \
    \             \"u2018error\"u2019, \"u2018requests\"u2019,\n                 \
    \    \"u2018requests_per_sec\"u2019.\n                   \"condition\": \"str\"\
    ,  # Optional. The comparison\n                     operator. Supported types\
    \ \"u2018>\"u2019.\n                   \"requestName\": \"str\",  # Optional.\
    \ Request name for\n                     which the Pass fail criteria has to be\
    \ applied.\n                   \"result\": \"str\",  # Optional. Outcome of the\
    \ test\n                     run. possible outcome - \"u2018passed\"u2019 , \"\
    u2018failed\"u2019 ,\n                     \"u2018undetermined\"u2019.\n     \
    \              \"value\": 0.0  # Optional. The value to compare with\n       \
    \              the client metric. Allowed values - \"u2018error : [0.0 , 100.0]\
    \ unit-\n                     % \"u2019, response_time_ms and latency : any integer\
    \ value unit- ms.\n               }\n           }\n       },\n       \"portalUrl\"\
    : \"str\",  # Optional. Portal url.\n       \"resourceId\": \"str\",  # Optional.\
    \ Load test resource Id.\n       \"secrets\": {\n           \"str\": {\n     \
    \          \"type\": \"str\",  # Optional. Type of secret. eg.\n             \
    \    AKV_SECRET_URI/SECRET_VALUE.\n               \"value\": \"str\"  # Optional.\
    \ The value of the secret, of type\n                 AKV_SECRET_URI or SECRET_VALUE.\n\
    \           }\n       },\n       \"startDateTime\": \"2020-02-20 00:00:00\", \
    \ # Optional. The test run start\n         DateTime(ISO 8601 literal format).\n\
    \       \"status\": \"str\",  # Optional. The test run status.\n       \"subnetId\"\
    : \"str\",  # Optional. Subnet ID on which the load test instances\n         should\
    \ run.\n       \"testArtifacts\": {\n           \"inputArtifacts\": {\n      \
    \         \"additionalUrls\": [\n                   {\n                      \
    \ \"expireTime\": \"2020-02-20 00:00:00\",  #\n                         Optional.\
    \ Expiry time of the file.\n                       \"fileId\": \"str\",  # Optional.\
    \ File unique\n                         identifier.\n                       \"\
    fileType\": 0,  # Optional. Integer\n                         representation of\
    \ the file type (0 = JMX_FILE, 1 =\n                         USER_PROPERTIES,\
    \ 2 = ADDITIONAL_ARTIFACTS). Known values are: 0,\n                         1,\
    \ and 2.\n                       \"filename\": \"str\",  # Optional. Name of the\n\
    \                         file.\n                       \"url\": \"str\",  # Optional.\
    \ File URL.\n                       \"validationStatus\": \"str\"  # Optional.\n\
    \                         Validation status of the file.\n                   }\n\
    \               ],\n               \"configUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"inputArtifactsZipFileurl\"\
    : {\n                   \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n\
    \                     Expiry time of the file.\n                   \"fileId\"\
    : \"str\",  # Optional. File unique identifier.\n                   \"fileType\"\
    : 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               },\n               \"\
    testScriptUrl\": {\n                   \"expireTime\": \"2020-02-20 00:00:00\"\
    ,  # Optional.\n                     Expiry time of the file.\n              \
    \     \"fileId\": \"str\",  # Optional. File unique identifier.\n            \
    \       \"fileType\": 0,  # Optional. Integer representation of\n            \
    \         the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n            \
    \         ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n            \
    \       \"filename\": \"str\",  # Optional. Name of the file.\n              \
    \     \"url\": \"str\",  # Optional. File URL.\n                   \"validationStatus\"\
    : \"str\"  # Optional. Validation\n                     status of the file.\n\
    \               },\n               \"userPropUrl\": {\n                   \"expireTime\"\
    : \"2020-02-20 00:00:00\",  # Optional.\n                     Expiry time of the\
    \ file.\n                   \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               }\n           },\n           \"outputArtifacts\"\
    : {\n               \"logsUrl\": {\n                   \"expireTime\": \"2020-02-20\
    \ 00:00:00\",  # Optional.\n                     Expiry time of the file.\n  \
    \                 \"fileId\": \"str\",  # Optional. File unique identifier.\n\
    \                   \"fileType\": 0,  # Optional. Integer representation of\n\
    \                     the file type (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n\
    \                     ADDITIONAL_ARTIFACTS). Known values are: 0, 1, and 2.\n\
    \                   \"filename\": \"str\",  # Optional. Name of the file.\n  \
    \                 \"url\": \"str\",  # Optional. File URL.\n                 \
    \  \"validationStatus\": \"str\"  # Optional. Validation\n                   \
    \  status of the file.\n               },\n               \"resultUrl\": {\n \
    \                  \"expireTime\": \"2020-02-20 00:00:00\",  # Optional.\n   \
    \                  Expiry time of the file.\n                   \"fileId\": \"\
    str\",  # Optional. File unique identifier.\n                   \"fileType\":\
    \ 0,  # Optional. Integer representation of\n                     the file type\
    \ (0 = JMX_FILE, 1 = USER_PROPERTIES, 2 =\n                     ADDITIONAL_ARTIFACTS).\
    \ Known values are: 0, 1, and 2.\n                   \"filename\": \"str\",  #\
    \ Optional. Name of the file.\n                   \"url\": \"str\",  # Optional.\
    \ File URL.\n                   \"validationStatus\": \"str\"  # Optional. Validation\n\
    \                     status of the file.\n               }\n           }\n  \
    \     },\n       \"testId\": \"str\",  # Optional. Associated test Id.\n     \
    \  \"testResult\": \"str\",  # Optional. Test result for pass/Fail criteria used\n\
    \         during the test run. possible outcome - \"u2018Passed\"u2019 , \"u2018Failed\"\
    u2019 ,\n         \"u2018Not Applicable\"u2019.\n       \"testRunId\": \"str\"\
    ,  # Optional. Unique test run name as identifier.\n       \"testRunStatistics\"\
    : {\n           \"str\": {\n               \"errorCount\": 0.0,  # Optional. Error\
    \ count.\n               \"errorPct\": 0.0,  # Optional. Error percentage.\n \
    \              \"maxResTime\": 0.0,  # Optional. Max response time.\n        \
    \       \"meanResTime\": 0.0,  # Optional. Mean response time.\n             \
    \  \"medianResTime\": 0.0,  # Optional. Median response time.\n              \
    \ \"minResTime\": 0.0,  # Optional. Minimum response time.\n               \"\
    pct1ResTime\": 0.0,  # Optional. 90 percentile response time.\n              \
    \ \"pct2ResTime\": 0.0,  # Optional. 95 percentile response time.\n          \
    \     \"pct3ResTime\": 0.0,  # Optional. 99 percentile response time.\n      \
    \         \"receivedKBytesPerSec\": 0.0,  # Optional. Received network\n     \
    \            bytes.\n               \"sampleCount\": 0.0,  # Optional. Sampler\
    \ count.\n               \"sentKBytesPerSec\": 0.0,  # Optional. Sent network\
    \ bytes.\n               \"throughput\": 0.0,  # Optional. Throughput.\n     \
    \          \"transaction\": \"str\"  # Optional. Transaction name.\n         \
    \  }\n       },\n       \"vusers\": 0  # Optional. Number of virtual users, for\
    \ which test has been\n         run.\n   }\n   ````\n"
