### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update_by_id
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete_by_id
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_move_resources
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update_by_id
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_validate_move_resources
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence_by_id
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get_by_id
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list_by_resource_group
  - azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.models
  class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: ResourcesOperations
  summary: 'ResourcesOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: ResourcesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_create_or_update(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, parameters, **kwargs)
  namewithoutparameters: begin_create_or_update
  summary: "Creates a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group for the resource. The name is case\n\n\ninsensitive.\n  \
    \ type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type of the resource to create.\n\n   type resource_type:\n      str\n\
    \n   param resource_name:\n      The name of the resource to create.\n\n   type\
    \ resource_name:\n      str\n\n   param parameters:\n      Parameters for creating\
    \ or updating the resource.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_create_or_update(resource_group_name, resource_provider_namespace,
      parent_resource_path, resource_type, resource_name, parameters, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: resource_provider_namespace
      isRequired: true
    - id: parent_resource_path
      isRequired: true
    - id: resource_type
      isRequired: true
    - id: resource_name
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update_by_id
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_create_or_update_by_id(resource_id, parameters, **kwargs)
  namewithoutparameters: begin_create_or_update_by_id
  summary: "Create a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   param parameters:\n      Create or update\
    \ resource parameters.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_create_or_update_by_id(resource_id, parameters, **kwargs)
    parameters:
    - id: resource_id
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update_by_id
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_delete(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  namewithoutparameters: begin_delete
  summary: "Deletes a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group that contains the resource to\n\n\ndelete. The name is case\
    \ insensitive.\n   type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type.\n\n   type resource_type:\n      str\n\n   param resource_name:\n\
    \      The name of the resource to delete.\n\n   type resource_name:\n      str\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either None or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_delete(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: resource_provider_namespace
      isRequired: true
    - id: parent_resource_path
      isRequired: true
    - id: resource_type
      isRequired: true
    - id: resource_name
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete_by_id
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_delete_by_id(resource_id, **kwargs)
  namewithoutparameters: begin_delete_by_id
  summary: "Deletes a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   keyword callable cls:\n      A custom\
    \ type or function that will be passed the direct response\n\n   keyword str continuation_token:\n\
    \      A continuation token to restart a poller from a saved state.\n\n   keyword\
    \ polling:\n      True for ARMPolling, False for no polling, or a\n      polling\
    \ object for personal polling strategy\n\n   paramtype polling:\n      bool or\
    \ ~azure.core.polling.PollingMethod\n\n   keyword int polling_interval:\n    \
    \  Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n   return:\n      An instance of LROPoller that returns\
    \ either None or the result of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_delete_by_id(resource_id, **kwargs)
    parameters:
    - id: resource_id
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete_by_id
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_move_resources
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_move_resources(source_resource_group_name, parameters, **kwargs)
  namewithoutparameters: begin_move_resources
  summary: "Moves resources from one resource group to another resource group.\n\n\
    \   The resources to move must be in the same source resource group. The target\
    \ resource group may\n\n\nbe in a different subscription. When moving resources,\
    \ both the source group and the target\ngroup are locked for the duration of the\
    \ operation. Write and delete operations are blocked on\nthe groups until the\
    \ move completes.\n\n      param source_resource_group_name:\n         The name\
    \ of the resource group containing the resources to\n\n   move.\n      type source_resource_group_name:\n\
    \         str\n\n      param parameters:\n         Parameters for moving resources.\n\
    \n      type parameters:\n         ~azure.mgmt.resource.resources.v2019_05_10.models.ResourcesMoveInfo\n\
    \n      keyword callable cls:\n         A custom type or function that will be\
    \ passed the direct response\n\n      keyword str continuation_token:\n      \
    \   A continuation token to restart a poller from a saved state.\n\n      keyword\
    \ polling:\n         True for ARMPolling, False for no polling, or a\n       \
    \  polling object for personal polling strategy\n\n      paramtype polling:\n\
    \         bool or ~azure.core.polling.PollingMethod\n\n      keyword int polling_interval:\n\
    \         Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n      return:\n         An instance of LROPoller that\
    \ returns either None or the result of cls(response)\n\n      rtype:\n       \
    \  ~azure.core.polling.LROPoller[None]\n\n      raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_move_resources(source_resource_group_name, parameters, **kwargs)
    parameters:
    - id: source_resource_group_name
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_move_resources
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_update(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, parameters, **kwargs)
  namewithoutparameters: begin_update
  summary: "Updates a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group for the resource. The name is case\n\n\ninsensitive.\n  \
    \ type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type of the resource to update.\n\n   type resource_type:\n      str\n\
    \n   param resource_name:\n      The name of the resource to update.\n\n   type\
    \ resource_name:\n      str\n\n   param parameters:\n      Parameters for updating\
    \ the resource.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_update(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, parameters, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: resource_provider_namespace
      isRequired: true
    - id: parent_resource_path
      isRequired: true
    - id: resource_type
      isRequired: true
    - id: resource_name
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update_by_id
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_update_by_id(resource_id, parameters, **kwargs)
  namewithoutparameters: begin_update_by_id
  summary: "Updates a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   param parameters:\n      Update resource\
    \ parameters.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_05_10.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_update_by_id(resource_id, parameters, **kwargs)
    parameters:
    - id: resource_id
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update_by_id
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_validate_move_resources
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: begin_validate_move_resources(source_resource_group_name, parameters, **kwargs)
  namewithoutparameters: begin_validate_move_resources
  summary: "Validates whether resources can be moved from one resource group to another\
    \ resource group.\n\n   This operation checks whether the specified resources\
    \ can be moved to the target. The resources\n\n\nto move must be in the same source\
    \ resource group. The target resource group may be in a\ndifferent subscription.\
    \ If validation succeeds, it returns HTTP response code 204 (no content).\nIf\
    \ validation fails, it returns HTTP response code 409 (Conflict) with an error\
    \ message.\nRetrieve the URL in the Location header value to check the result\
    \ of the long-running\noperation.\n\n      param source_resource_group_name:\n\
    \         The name of the resource group containing the resources to\n\n   validate\
    \ for move.\n      type source_resource_group_name:\n         str\n\n      param\
    \ parameters:\n         Parameters for moving resources.\n\n      type parameters:\n\
    \         ~azure.mgmt.resource.resources.v2019_05_10.models.ResourcesMoveInfo\n\
    \n      keyword callable cls:\n         A custom type or function that will be\
    \ passed the direct response\n\n      keyword str continuation_token:\n      \
    \   A continuation token to restart a poller from a saved state.\n\n      keyword\
    \ polling:\n         True for ARMPolling, False for no polling, or a\n       \
    \  polling object for personal polling strategy\n\n      paramtype polling:\n\
    \         bool or ~azure.core.polling.PollingMethod\n\n      keyword int polling_interval:\n\
    \         Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n      return:\n         An instance of LROPoller that\
    \ returns either None or the result of cls(response)\n\n      rtype:\n       \
    \  ~azure.core.polling.LROPoller[None]\n\n      raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_validate_move_resources(source_resource_group_name, parameters,
      **kwargs)
    parameters:
    - id: source_resource_group_name
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_validate_move_resources
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: check_existence(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  namewithoutparameters: check_existence
  summary: Checks whether a resource exists.
  syntax:
    content: check_existence(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, **kwargs)
    parameters:
    - description: 'The name of the resource group containing the resource to check.

        The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resource provider of the resource to check.
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: The parent resource identity.
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: The resource type.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource to check whether it exists.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence_by_id
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: check_existence_by_id(resource_id, **kwargs)
  namewithoutparameters: check_existence_by_id
  summary: Checks by ID whether a resource exists.
  syntax:
    content: check_existence_by_id(resource_id, **kwargs)
    parameters:
    - description: 'The fully qualified ID of the resource, including the resource
        name and

        resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-

        name}/{resource-provider-namespace}/{resource-type}/{resource-name}.'
      id: resource_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence_by_id
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: get(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  namewithoutparameters: get
  summary: Gets a resource.
  syntax:
    content: get(resource_group_name, resource_provider_namespace, parent_resource_path,
      resource_type, resource_name, **kwargs)
    parameters:
    - description: 'The name of the resource group containing the resource to get.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace of the resource provider.
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: The parent resource identity.
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: The resource type of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource to get.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: GenericResource, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_05_10.models.GenericResource
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get_by_id
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: get_by_id(resource_id, **kwargs)
  namewithoutparameters: get_by_id
  summary: Gets a resource by ID.
  syntax:
    content: get_by_id(resource_id, **kwargs)
    parameters:
    - description: 'The fully qualified ID of the resource, including the resource
        name and

        resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-

        name}/{resource-provider-namespace}/{resource-type}/{resource-name}.'
      id: resource_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: GenericResource, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_05_10.models.GenericResource
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get_by_id
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: list(filter=None, expand=None, top=None, **kwargs)
  namewithoutparameters: list
  summary: "Get all the resources in a subscription.\n\n   param filter:\n      The\
    \ filter to apply on the operation.:code:*<br>*:code:>>`<<<br>`The properties\
    \ you\n\n\ncan use for eq (equals) or ne (not equals) are: location, resourceType,\
    \ name, resourceGroup,\nidentity, identity/principalId, plan, plan/publisher,\
    \ plan/product, plan/name, plan/version,\nand plan/promotionCode.:code:*<br>*`<br>`For\
    \ example, to filter by a resource type, use:\n$filter=resourceType eq 'Microsoft.Network/virtualNetworks':code:`<br>``<br>`You\
    \ can use\nsubstringof(value, property) in the filter. The properties you can\
    \ use for substring are: name\nand resourceGroup.:code:`<br>``<br>`For example,\
    \ to get all resources with 'demo'\nanywhere in the name, use: $filter=substringof('demo',\
    \ name):code:`<br>``<br>`You can\nlink more than one substringof together by adding\
    \ and/or operators.:code:`<br>``<br>`You\ncan filter by tag names and values.\
    \ For example, to filter for a tag name and value, use\n$filter=tagName eq 'tag1'\
    \ and tagValue eq 'Value1':code:`<br>`:code:>>`<<<br>`You can use some\nproperties\
    \ together when filtering. The combinations you can use are: substringof and/or\n\
    resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.\n\
    \n\n\n   type filter:\n      str\n\n   param expand:\n      Comma-separated list\
    \ of additional properties to be included in the response.\n\n\nValid values include\
    \ `createdTime`, `changedTime` and `provisioningState`. For example,\n`$expand=createdTime,changedTime`.\n\
    \n\n   type expand:\n      str\n\n   param top:\n      The number of results to\
    \ return. If null is passed, returns all resource groups.\n\n   type top:\n  \
    \    int\n\n   keyword callable cls:\n      A custom type or function that will\
    \ be passed the direct response\n\n   return:\n      An iterator like instance\
    \ of either ResourceListResult or the result of cls(response)\n\n   rtype:\n \
    \     ~azure.core.paging.ItemPaged[~azure.mgmt.resource.resources.v2019_05_10.models.ResourceListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: list(filter=None, expand=None, top=None, **kwargs)
    parameters:
    - defaultValue: None
      id: filter
    - defaultValue: None
      id: expand
    - defaultValue: None
      id: top
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: list_by_resource_group(resource_group_name, filter=None, expand=None, top=None,
    **kwargs)
  namewithoutparameters: list_by_resource_group
  summary: "Get all the resources for a resource group.\n\n   param resource_group_name:\n\
    \      The resource group with the resources to get.\n\n   type resource_group_name:\n\
    \      str\n\n   param filter:\n      The filter to apply on the operation.:code:*<br>*:code:>>`<<<br>`The\
    \ properties you\n\n\ncan use for eq (equals) or ne (not equals) are: location,\
    \ resourceType, name, resourceGroup,\nidentity, identity/principalId, plan, plan/publisher,\
    \ plan/product, plan/name, plan/version,\nand plan/promotionCode.:code:*<br>*`<br>`For\
    \ example, to filter by a resource type, use:\n$filter=resourceType eq 'Microsoft.Network/virtualNetworks':code:`<br>``<br>`You\
    \ can use\nsubstringof(value, property) in the filter. The properties you can\
    \ use for substring are: name\nand resourceGroup.:code:`<br>``<br>`For example,\
    \ to get all resources with 'demo'\nanywhere in the name, use: $filter=substringof('demo',\
    \ name):code:`<br>``<br>`You can\nlink more than one substringof together by adding\
    \ and/or operators.:code:`<br>``<br>`You\ncan filter by tag names and values.\
    \ For example, to filter for a tag name and value, use\n$filter=tagName eq 'tag1'\
    \ and tagValue eq 'Value1':code:`<br>`:code:>>`<<<br>`You can use some\nproperties\
    \ together when filtering. The combinations you can use are: substringof and/or\n\
    resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.\n\
    \n\n\n   type filter:\n      str\n\n   param expand:\n      Comma-separated list\
    \ of additional properties to be included in the response.\n\n\nValid values include\
    \ `createdTime`, `changedTime` and `provisioningState`. For example,\n`$expand=createdTime,changedTime`.\n\
    \n\n   type expand:\n      str\n\n   param top:\n      The number of results to\
    \ return. If null is passed, returns all resources.\n\n   type top:\n      int\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   return:\n      An iterator like instance of either\
    \ ResourceListResult or the result of cls(response)\n\n   rtype:\n      ~azure.core.paging.ItemPaged[~azure.mgmt.resource.resources.v2019_05_10.models.ResourceListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: list_by_resource_group(resource_group_name, filter=None, expand=None,
      top=None, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - defaultValue: None
      id: filter
    - defaultValue: None
      id: expand
    - defaultValue: None
      id: top
  type: method
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list_by_resource_group
- class: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.models
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_05_10.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resource.resources.v2019_05_10.models' from
      'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2019_05_10\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.models
references:
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update
  isExternal: false
  name: begin_create_or_update(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update_by_id
  isExternal: false
  name: begin_create_or_update_by_id(resource_id, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_create_or_update_by_id
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete
  isExternal: false
  name: begin_delete(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete_by_id
  isExternal: false
  name: begin_delete_by_id(resource_id, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_delete_by_id
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_move_resources
  isExternal: false
  name: begin_move_resources(source_resource_group_name, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_move_resources
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update
  isExternal: false
  name: begin_update(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update_by_id
  isExternal: false
  name: begin_update_by_id(resource_id, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_update_by_id
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_validate_move_resources
  isExternal: false
  name: begin_validate_move_resources(source_resource_group_name, parameters, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.begin_validate_move_resources
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence
  isExternal: false
  name: check_existence(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence_by_id
  isExternal: false
  name: check_existence_by_id(resource_id, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.check_existence_by_id
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get
  isExternal: false
  name: get(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get_by_id
  isExternal: false
  name: get_by_id(resource_id, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.get_by_id
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list
  isExternal: false
  name: list(filter=None, expand=None, top=None, **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, filter=None, expand=None, top=None,
    **kwargs)
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.list_by_resource_group
- fullName: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations
  uid: azure.mgmt.resource.resources.v2019_05_10.operations.ResourcesOperations.models
