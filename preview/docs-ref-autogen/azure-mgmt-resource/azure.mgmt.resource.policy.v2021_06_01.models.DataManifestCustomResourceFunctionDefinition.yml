### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2021_06_01.models.DataManifestCustomResourceFunctionDefinition
name: DataManifestCustomResourceFunctionDefinition
fullName: azure.mgmt.resource.policy.v2021_06_01.models.DataManifestCustomResourceFunctionDefinition
module: azure.mgmt.resource.policy.v2021_06_01.models
inheritances:
- msrest.serialization.Model
summary: The custom resource function definition.
constructor:
  syntax: 'DataManifestCustomResourceFunctionDefinition(*, name: str | None = None,
    fully_qualified_resource_type: str | None = None, default_properties: List[str]
    | None = None, allow_custom_properties: bool | None = None, **kwargs)'
variables:
- description: The function name as it will appear in the policy rule. eg - 'vault'.
  name: name
  types:
  - <xref:azure.mgmt.resource.policy.v2021_06_01.models.str>
- description: 'The fully qualified control plane resource type that this

    function represents. eg - ''Microsoft.KeyVault/vaults''.'
  name: fully_qualified_resource_type
  types:
  - <xref:azure.mgmt.resource.policy.v2021_06_01.models.str>
- description: 'The top-level properties that can be selected on the function''s

    output. eg - [ "name", "location" ] if vault().name and vault().location are supported.'
  name: default_properties
  types:
  - <xref:azure.mgmt.resource.policy.v2021_06_01.models.list>[<xref:azure.mgmt.resource.policy.v2021_06_01.models.str>]
- description: 'A value indicating whether the custom properties within the

    property bag are allowed. Needs api-version to be specified in the policy rule
    eg -

    vault(''2019-06-01'').'
  name: allow_custom_properties
  types:
  - <xref:azure.mgmt.resource.policy.v2021_06_01.models.bool>
