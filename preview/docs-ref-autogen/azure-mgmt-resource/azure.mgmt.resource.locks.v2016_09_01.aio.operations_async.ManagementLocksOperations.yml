### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_group_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_subscription_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_by_scope
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_group_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_subscription_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_by_scope
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_group_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_subscription_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_by_scope
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_group_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_subscription_level
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_by_scope
  - azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.models
  class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: ManagementLocksOperations
  summary: 'ManagementLocksOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: ManagementLocksOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_group_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'create_or_update_at_resource_group_level(resource_group_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: create_or_update_at_resource_group_level
  summary: 'Creates or updates a management lock at the resource group level.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'create_or_update_at_resource_group_level(resource_group_name: str, lock_name:
      str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
      **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The name of the resource group to lock.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The lock name. The lock name can be a maximum of 260 characters.
        It cannot

        contain <, > %, &, :, , ?, /, or any control characters.'
      id: lock_name
      isRequired: true
      type:
      - str
    - description: The management lock parameters.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_group_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'create_or_update_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: create_or_update_at_resource_level
  summary: 'Creates or updates a management lock at the resource level or any level
    below the resource.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'create_or_update_at_resource_level(resource_group_name: str, resource_provider_namespace:
      str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
      str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
      **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The name of the resource group containing the resource to lock.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resource provider namespace of the resource to lock.
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: The parent resource identity.
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: The resource type of the resource to lock.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource to lock.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: 'The name of lock. The lock name can be a maximum of 260 characters.
        It cannot

        contain <, > %, &, :, , ?, /, or any control characters.'
      id: lock_name
      isRequired: true
      type:
      - str
    - description: Parameters for creating or updating a  management lock.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_subscription_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'create_or_update_at_subscription_level(lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: create_or_update_at_subscription_level
  summary: 'Creates or updates a management lock at the subscription level.


    When you apply a lock at a parent scope, all child resources inherit the same
    lock. To create

    management locks, you must have access to Microsoft.Authorization/* or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'create_or_update_at_subscription_level(lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
      **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: 'The name of lock. The lock name can be a maximum of 260 characters.
        It cannot

        contain <, > %, &, :, , ?, /, or any control characters.'
      id: lock_name
      isRequired: true
      type:
      - str
    - description: The management lock parameters.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_subscription_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_by_scope
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'create_or_update_by_scope(scope: str, lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: create_or_update_by_scope
  summary: Create or update a management lock by scope.
  syntax:
    content: 'create_or_update_by_scope(scope: str, lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
      **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: 'The scope for the lock. When providing a scope for the assignment,
        use

        ''/subscriptions/{subscriptionId}'' for subscriptions,

        ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'' for
        resource groups, and

        ''/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}''

        for resources.'
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of lock.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: Create or update management lock parameters.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_by_scope
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_group_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'delete_at_resource_group_level(resource_group_name: str, lock_name: str,
    **kwargs) -> None'
  namewithoutparameters: delete_at_resource_group_level
  summary: 'Deletes a management lock at the resource group level.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'delete_at_resource_group_level(resource_group_name: str, lock_name:
      str, **kwargs) -> None'
    parameters:
    - description: The name of the resource group containing the lock.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of lock to delete.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_group_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'delete_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs) -> None'
  namewithoutparameters: delete_at_resource_level
  summary: 'Deletes the management lock of a resource or any level below the resource.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'delete_at_resource_level(resource_group_name: str, resource_provider_namespace:
      str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
      str, **kwargs) -> None'
    parameters:
    - description: 'The name of the resource group containing the resource with the

        lock to delete.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The resource provider namespace of the resource with the

        lock to delete.'
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: The parent resource identity.
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: The resource type of the resource with the lock to delete.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource with the lock to delete.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: The name of the lock to delete.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_subscription_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'delete_at_subscription_level(lock_name: str, **kwargs) -> None'
  namewithoutparameters: delete_at_subscription_level
  summary: 'Deletes the management lock at the subscription level.


    To delete management locks, you must have access to Microsoft.Authorization/*
    or

    Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner and
    User Access

    Administrator are granted those actions.'
  syntax:
    content: 'delete_at_subscription_level(lock_name: str, **kwargs) -> None'
    parameters:
    - description: The name of lock to delete.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_subscription_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_by_scope
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'delete_by_scope(scope: str, lock_name: str, **kwargs) -> None'
  namewithoutparameters: delete_by_scope
  summary: Delete a management lock by scope.
  syntax:
    content: 'delete_by_scope(scope: str, lock_name: str, **kwargs) -> None'
    parameters:
    - description: The scope for the lock.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of lock.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_by_scope
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_group_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'get_at_resource_group_level(resource_group_name: str, lock_name: str, **kwargs)
    -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: get_at_resource_group_level
  summary: Gets a management lock at the resource group level.
  syntax:
    content: 'get_at_resource_group_level(resource_group_name: str, lock_name: str,
      **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The name of the locked resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the lock to get.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_group_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'get_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: get_at_resource_level
  summary: Get the management lock of a resource or any level below resource.
  syntax:
    content: 'get_at_resource_level(resource_group_name: str, resource_provider_namespace:
      str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
      str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The namespace of the resource provider.
      id: resource_provider_namespace
      isRequired: true
      type:
      - str
    - description: 'An extra path parameter needed in some services, like SQL

        Databases.'
      id: parent_resource_path
      isRequired: true
      type:
      - str
    - description: The type of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The name of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: The name of lock.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_subscription_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'get_at_subscription_level(lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: get_at_subscription_level
  summary: Gets a management lock at the subscription level.
  syntax:
    content: 'get_at_subscription_level(lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The name of the lock to get.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_subscription_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_by_scope
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'get_by_scope(scope: str, lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  namewithoutparameters: get_by_scope
  summary: Get a management lock by scope.
  syntax:
    content: 'get_by_scope(scope: str, lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
    parameters:
    - description: The scope for the lock.
      id: scope
      isRequired: true
      type:
      - str
    - description: The name of lock.
      id: lock_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ManagementLockObject, or the result of cls(response)
      type:
      - azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockObject
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_by_scope
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_group_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'list_at_resource_group_level(resource_group_name: str, filter: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  namewithoutparameters: list_at_resource_group_level
  summary: Gets all the management locks for a resource group.
  syntax:
    content: 'list_at_resource_group_level(resource_group_name: str, filter: typing.Union[str,
      NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
    parameters:
    - description: The name of the resource group containing the locks to get.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The filter to apply on the operation.
      id: filter
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either ManagementLockListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_group_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'list_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  namewithoutparameters: list_at_resource_level
  summary: "Gets all the management locks for a resource or any level below resource.\n\
    \n   param resource_group_name:\n      The name of the resource group containing\
    \ the locked resource. The\n\n\nname is case insensitive.\n   type resource_group_name:\n\
    \      str\n\n   param resource_provider_namespace:\n      The namespace of the\
    \ resource provider.\n\n   type resource_provider_namespace:\n      str\n\n  \
    \ param parent_resource_path:\n      The parent resource identity.\n\n   type\
    \ parent_resource_path:\n      str\n\n   param resource_type:\n      The resource\
    \ type of the locked resource.\n\n   type resource_type:\n      str\n\n   param\
    \ resource_name:\n      The name of the locked resource.\n\n   type resource_name:\n\
    \      str\n\n   param filter:\n      The filter to apply on the operation.\n\n\
    \   type filter:\n      str\n\n   keyword callable cls:\n      A custom type or\
    \ function that will be passed the direct response\n\n   return:\n      An iterator\
    \ like instance of either ManagementLockListResult or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.async_paging.AsyncItemPaged[~azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: 'list_at_resource_level(resource_group_name: str, resource_provider_namespace:
      str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
      typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_subscription_level
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'list_at_subscription_level(filter: typing.Union[str, NoneType] = None, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  namewithoutparameters: list_at_subscription_level
  summary: Gets all the management locks for a subscription.
  syntax:
    content: 'list_at_subscription_level(filter: typing.Union[str, NoneType] = None,
      **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
    parameters:
    - description: The filter to apply on the operation.
      id: filter
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either ManagementLockListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_subscription_level
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_by_scope
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: 'list_by_scope(scope: str, filter: typing.Union[str, NoneType] = None, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  namewithoutparameters: list_by_scope
  summary: "Gets all the management locks for a scope.\n\n   param scope:\n      The\
    \ scope for the lock. When providing a scope for the assignment, use\n\n\n'/subscriptions/{subscriptionId}'\
    \ for subscriptions,\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'\
    \ for resource groups, and\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'\n\
    for resources.\n\n\n   type scope:\n      str\n\n   param filter:\n      The filter\
    \ to apply on the operation.\n\n   type filter:\n      str\n\n   keyword callable\
    \ cls:\n      A custom type or function that will be passed the direct response\n\
    \n   return:\n      An iterator like instance of either ManagementLockListResult\
    \ or the result of cls(response)\n\n   rtype:\n      ~azure.core.async_paging.AsyncItemPaged[~azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: 'list_by_scope(scope: str, filter: typing.Union[str, NoneType] = None,
      **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  type: method
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_by_scope
- class: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.models
  langs:
  - python
  module: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resource.locks.v2016_09_01.models' from
      'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\locks\\v2016_09_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.models
references:
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_group_level
  isExternal: false
  name: 'create_or_update_at_resource_group_level(resource_group_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_group_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_level
  isExternal: false
  name: 'create_or_update_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_resource_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_subscription_level
  isExternal: false
  name: 'create_or_update_at_subscription_level(lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_at_subscription_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_by_scope
  isExternal: false
  name: 'create_or_update_by_scope(scope: str, lock_name: str, parameters: azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject,
    **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.create_or_update_by_scope
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_group_level
  isExternal: false
  name: 'delete_at_resource_group_level(resource_group_name: str, lock_name: str,
    **kwargs) -> None'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_group_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_level
  isExternal: false
  name: 'delete_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs) -> None'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_resource_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_subscription_level
  isExternal: false
  name: 'delete_at_subscription_level(lock_name: str, **kwargs) -> None'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_at_subscription_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_by_scope
  isExternal: false
  name: 'delete_by_scope(scope: str, lock_name: str, **kwargs) -> None'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.delete_by_scope
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_group_level
  isExternal: false
  name: 'get_at_resource_group_level(resource_group_name: str, lock_name: str, **kwargs)
    -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_group_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_level
  isExternal: false
  name: 'get_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, lock_name:
    str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_resource_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_subscription_level
  isExternal: false
  name: 'get_at_subscription_level(lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_at_subscription_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_by_scope
  isExternal: false
  name: 'get_by_scope(scope: str, lock_name: str, **kwargs) -> azure.mgmt.resource.locks.v2016_09_01.models._models_py3.ManagementLockObject'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.get_by_scope
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_group_level
  isExternal: false
  name: 'list_at_resource_group_level(resource_group_name: str, filter: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_group_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_level
  isExternal: false
  name: 'list_at_resource_level(resource_group_name: str, resource_provider_namespace:
    str, parent_resource_path: str, resource_type: str, resource_name: str, filter:
    typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_resource_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_subscription_level
  isExternal: false
  name: 'list_at_subscription_level(filter: typing.Union[str, NoneType] = None, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_at_subscription_level
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_by_scope
  isExternal: false
  name: 'list_by_scope(scope: str, filter: typing.Union[str, NoneType] = None, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.ManagementLockListResult'')]'
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.list_by_scope
- fullName: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations
  uid: azure.mgmt.resource.locks.v2016_09_01.aio.operations_async.ManagementLocksOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]
  name: AsyncItemPaged[ManagementLockListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult
    name: ManagementLockListResult
    uid: azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.locks.v2016_09_01.models.ManagementLockListResult]
