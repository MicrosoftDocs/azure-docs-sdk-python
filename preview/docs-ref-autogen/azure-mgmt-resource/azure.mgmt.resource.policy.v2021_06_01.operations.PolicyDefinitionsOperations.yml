### YamlMime:PythonClass
uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations
name: PolicyDefinitionsOperations
fullName: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations
module: azure.mgmt.resource.policy.v2021_06_01.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.resource.policy.v2021_06_01.PolicyClient>'s\n\
  >\n> <xref:policy_definitions> attribute.\n>"
constructor:
  syntax: PolicyDefinitionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.create_or_update
  name: create_or_update
  summary: 'Creates or updates a policy definition in a subscription.


    This operation creates or updates a policy definition in the given subscription
    with the given

    name.'
  signature: 'create_or_update(policy_definition_name: str, parameters: _models.PolicyDefinition,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.PolicyDefinition'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The policy definition properties. Is either a PolicyDefinition type
      or a IO

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.create_or_update_at_management_group
  name: create_or_update_at_management_group
  summary: 'Creates or updates a policy definition in a management group.


    This operation creates or updates a policy definition in the given management
    group with the

    given name.'
  signature: 'create_or_update_at_management_group(policy_definition_name: str, management_group_id:
    str, parameters: _models.PolicyDefinition, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.PolicyDefinition'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to create. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The policy definition properties. Is either a PolicyDefinition type
      or a IO

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.delete
  name: delete
  summary: 'Deletes a policy definition in a subscription.


    This operation deletes the policy definition in the given subscription with the
    given name.'
  signature: 'delete(policy_definition_name: str, **kwargs: Any) -> None'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.delete_at_management_group
  name: delete_at_management_group
  summary: 'Deletes a policy definition in a management group.


    This operation deletes the policy definition in the given management group with
    the given name.'
  signature: 'delete_at_management_group(policy_definition_name: str, management_group_id:
    str, **kwargs: Any) -> None'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.get
  name: get
  summary: 'Retrieves a policy definition in a subscription.


    This operation retrieves the policy definition in the given subscription with
    the given name.'
  signature: 'get(policy_definition_name: str, **kwargs: Any) -> PolicyDefinition'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.get_at_management_group
  name: get_at_management_group
  summary: 'Retrieve a policy definition in a management group.


    This operation retrieves the policy definition in the given management group with
    the given

    name.'
  signature: 'get_at_management_group(policy_definition_name: str, management_group_id:
    str, **kwargs: Any) -> PolicyDefinition'
  parameters:
  - name: policy_definition_name
    description: The name of the policy definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.get_built_in
  name: get_built_in
  summary: 'Retrieves a built-in policy definition.


    This operation retrieves the built-in policy definition with the given name.'
  signature: 'get_built_in(policy_definition_name: str, **kwargs: Any) -> PolicyDefinition'
  parameters:
  - name: policy_definition_name
    description: The name of the built-in policy definition to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: PolicyDefinition or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.list
  name: list
  summary: 'Retrieves policy definitions in a subscription.


    This operation retrieves a list of all the policy definitions in a given subscription
    that

    match the optional given $filter. Valid values for $filter are: ''atExactScope()'',
    ''policyType

    -eq {value}'' or ''category eq ''{value}''''. If $filter is not provided, the
    unfiltered list

    includes all policy definitions associated with the subscription, including those
    that apply

    directly or from management groups that contain the given subscription. If

    $filter=atExactScope() is provided, the returned list only includes all policy
    definitions that

    at the given subscription. If $filter=''policyType -eq {value}'' is provided,
    the returned list

    only includes all policy definitions whose type match the {value}. Possible policyType
    values

    are NotSpecified, BuiltIn, Custom, and Static. If $filter=''category -eq {value}''
    is provided,

    the returned list only includes all policy definitions whose category match the
    {value}.'
  signature: 'list(filter: str | None = None, top: int | None = None, **kwargs: Any)
    -> Iterable[PolicyDefinition]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy definitions
      whose type match

      the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and
      Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy

      definitions whose category match the {value}. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicyDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.list_built_in
  name: list_built_in
  summary: 'Retrieve built-in policy definitions.


    This operation retrieves a list of all the built-in policy definitions that match
    the optional

    given $filter. If $filter=''policyType -eq {value}'' is provided, the returned
    list only includes

    all built-in policy definitions whose type match the {value}. Possible policyType
    values are

    NotSpecified, BuiltIn, Custom, and Static. If $filter=''category -eq {value}''
    is provided, the

    returned list only includes all built-in policy definitions whose category match
    the {value}.'
  signature: 'list_built_in(filter: str | None = None, top: int | None = None, **kwargs:
    Any) -> Iterable[PolicyDefinition]'
  parameters:
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy definitions
      whose type match

      the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and
      Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy

      definitions whose category match the {value}. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicyDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.list_by_management_group
  name: list_by_management_group
  summary: 'Retrieve policy definitions in a management group.


    This operation retrieves a list of all the policy definitions in a given management
    group that

    match the optional given $filter. Valid values for $filter are: ''atExactScope()'',
    ''policyType

    -eq {value}'' or ''category eq ''{value}''''. If $filter is not provided, the
    unfiltered list

    includes all policy definitions associated with the management group, including
    those that

    apply directly or from management groups that contain the given management group.
    If

    $filter=atExactScope() is provided, the returned list only includes all policy
    definitions that

    at the given management group. If $filter=''policyType -eq {value}'' is provided,
    the returned

    list only includes all policy definitions whose type match the {value}. Possible
    policyType

    values are NotSpecified, BuiltIn, Custom, and Static. If $filter=''category -eq
    {value}'' is

    provided, the returned list only includes all policy definitions whose category
    match the

    {value}.'
  signature: 'list_by_management_group(management_group_id: str, filter: str | None
    = None, top: int | None = None, **kwargs: Any) -> Iterable[PolicyDefinition]'
  parameters:
  - name: management_group_id
    description: The ID of the management group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The filter to apply on the operation. Valid values for $filter are:

      ''atExactScope()'', ''policyType -eq {value}'' or ''category eq ''{value}''''.
      If $filter is not

      provided, no filtering is performed. If $filter=atExactScope() is provided,
      the returned list

      only includes all policy definitions that at the given scope. If $filter=''policyType
      -eq

      {value}'' is provided, the returned list only includes all policy definitions
      whose type match

      the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and
      Static. If

      $filter=''category -eq {value}'' is provided, the returned list only includes
      all policy

      definitions whose category match the {value}. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'Maximum number of records to return. When the $top filter is not
      provided, it will

      return 500 records. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either PolicyDefinition or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.resource.policy.v2021_06_01.models.PolicyDefinition>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.resource.policy.v2021_06_01.operations.PolicyDefinitionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.policy.v2021_06_01.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\resource\\policy\\v2021_06_01\\models\\__init__.py'>
