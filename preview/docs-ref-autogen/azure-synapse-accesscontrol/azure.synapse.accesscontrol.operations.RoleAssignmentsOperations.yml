### YamlMime:PythonClass
uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations
name: RoleAssignmentsOperations
fullName: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations
module: azure.synapse.accesscontrol.operations
inheritances:
- builtins.object
summary: 'RoleAssignmentsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RoleAssignmentsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.check_principal_access
  name: check_principal_access
  summary: Check if the given principalId has access to perform list of actions at
    a given scope.
  signature: check_principal_access(subject, actions, scope, **kwargs)
  parameters:
  - name: subject
    description: Subject details.
    isRequired: true
    types:
    - <xref:azure.synapse.accesscontrol.models.SubjectInfo>
  - name: actions
    description: List of actions.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.synapse.accesscontrol.models.RequiredAction>]
  - name: scope
    description: Scope at which the check access is done.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: CheckPrincipalAccessResponse, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.CheckPrincipalAccessResponse>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.create_role_assignment
  name: create_role_assignment
  summary: Create role assignment.
  signature: create_role_assignment(role_assignment_id, role_id, principal_id, scope,
    principal_type=None, **kwargs)
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: role_id
    description: Role ID of the Synapse Built-In Role.
    isRequired: true
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    isRequired: true
    types:
    - <xref:str>
  - name: scope
    description: Scope at which the role assignment is created.
    isRequired: true
    types:
    - <xref:str>
  - name: principal_type
    description: 'Type of the principal Id: User, Group or ServicePrincipal.'
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.delete_role_assignment_by_id
  name: delete_role_assignment_by_id
  summary: Delete role assignment by role assignment Id.
  signature: delete_role_assignment_by_id(role_assignment_id, scope=None, **kwargs)
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: scope
    description: Scope of the Synapse Built-in Role.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.get_role_assignment_by_id
  name: get_role_assignment_by_id
  summary: Get role assignment by role assignment Id.
  signature: get_role_assignment_by_id(role_assignment_id, **kwargs)
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.list_role_assignments
  name: list_role_assignments
  summary: List role assignments.
  signature: list_role_assignments(role_id=None, principal_id=None, scope=None, continuation_token_parameter=None,
    **kwargs)
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: scope
    description: Scope of the Synapse Built-in Role.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: continuation_token_parameter
    description: Continuation token.
    isRequired: true
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetailsList, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetailsList>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.synapse.accesscontrol.operations.RoleAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.synapse.accesscontrol.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\accesscontrol\\models\\__init__.py'>
