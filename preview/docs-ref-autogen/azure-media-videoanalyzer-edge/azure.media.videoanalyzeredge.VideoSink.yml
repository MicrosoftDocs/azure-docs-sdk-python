### YamlMime:PythonClass
uid: azure.media.videoanalyzeredge.VideoSink
name: VideoSink
fullName: azure.media.videoanalyzeredge.VideoSink
module: azure.media.videoanalyzeredge
inheritances:
- azure.media.videoanalyzeredge._generated.models._models_py3.SinkNodeBase
summary: 'Video sink allows for video and audio to be recorded to the Video Analyzer
  service. The recorded video can be played from anywhere and further managed from
  the cloud. Due to security reasons, a given Video Analyzer edge module instance
  can only record content to new video entries, or existing video entries previously
  recorded by the same module. Any attempt to record content to an existing video
  which has not been created by the same module instance will result in failure to
  record.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VideoSink(*, name: str, inputs: List[NodeInput], video_name: str, local_media_cache_path:
    str, local_media_cache_maximum_size_mi_b: str, video_creation_properties: VideoCreationProperties
    | None = None, video_publishing_options: VideoPublishingOptions | None = None,
    **kwargs)'
  keywordOnlyParameters:
  - name: name
    description: Required. Node name. Must be unique within the topology.
    types:
    - <xref:str>
  - name: inputs
    description: 'Required. An array of upstream node references within the topology
      to be used

      as inputs for this node.'
    types:
    - <xref:list>[<xref:azure.media.videoanalyzer.edge.models.NodeInput>]
  - name: video_name
    description: 'Required. Name of a new or existing Video Analyzer video resource
      used for

      the media recording.'
    types:
    - <xref:str>
  - name: video_creation_properties
    description: 'Optional video properties to be used in case a new video

      resource needs to be created on the service.'
    types:
    - <xref:azure.media.videoanalyzer.edge.models.VideoCreationProperties>
  - name: video_publishing_options
    description: 'Optional video publishing options to be used for changing

      publishing behavior of the output video.'
    types:
    - <xref:azure.media.videoanalyzer.edge.models.VideoPublishingOptions>
  - name: local_media_cache_path
    description: 'Required. Path to a local file system directory for caching of

      temporary media files. This will also be used to store content which cannot
      be immediately

      uploaded to Azure due to Internet connectivity issues.'
    types:
    - <xref:str>
  - name: local_media_cache_maximum_size_mi_b
    description: 'Required. Maximum amount of disk space that can

      be used for caching of temporary media files. Once this limit is reached, the
      oldest segments

      of the media archive will be continuously deleted in order to make space for
      new media, thus

      leading to gaps in the cloud recorded content.'
    types:
    - <xref:str>
variables:
- description: Required. Type discriminator for the derived types.Constant filled
    by server.
  name: type
  types:
  - <xref:str>
- description: Required. Node name. Must be unique within the topology.
  name: name
  types:
  - <xref:str>
- description: 'Required. An array of upstream node references within the topology
    to be used as

    inputs for this node.'
  name: inputs
  types:
  - <xref:list>[<xref:azure.media.videoanalyzer.edge.models.NodeInput>]
- description: 'Required. Name of a new or existing Video Analyzer video resource
    used for

    the media recording.'
  name: video_name
  types:
  - <xref:str>
- description: 'Optional video properties to be used in case a new video

    resource needs to be created on the service.'
  name: video_creation_properties
  types:
  - <xref:azure.media.videoanalyzer.edge.models.VideoCreationProperties>
- description: 'Optional video publishing options to be used for changing

    publishing behavior of the output video.'
  name: video_publishing_options
  types:
  - <xref:azure.media.videoanalyzer.edge.models.VideoPublishingOptions>
- description: 'Required. Path to a local file system directory for caching of

    temporary media files. This will also be used to store content which cannot be
    immediately

    uploaded to Azure due to Internet connectivity issues.'
  name: local_media_cache_path
  types:
  - <xref:str>
- description: 'Required. Maximum amount of disk space that can be

    used for caching of temporary media files. Once this limit is reached, the oldest
    segments of

    the media archive will be continuously deleted in order to make space for new
    media, thus

    leading to gaps in the cloud recorded content.'
  name: local_media_cache_maximum_size_mi_b
  types:
  - <xref:str>
methods:
- uid: azure.media.videoanalyzeredge.VideoSink.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.media.videoanalyzeredge.VideoSink.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.VideoSink.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.media.videoanalyzeredge.VideoSink.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.VideoSink.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.media.videoanalyzeredge.VideoSink.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.media.videoanalyzeredge.VideoSink.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
