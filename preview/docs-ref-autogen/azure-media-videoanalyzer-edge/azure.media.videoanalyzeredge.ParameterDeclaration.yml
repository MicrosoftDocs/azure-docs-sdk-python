### YamlMime:PythonClass
uid: azure.media.videoanalyzeredge.ParameterDeclaration
name: ParameterDeclaration
fullName: azure.media.videoanalyzeredge.ParameterDeclaration
module: azure.media.videoanalyzeredge
inheritances:
- msrest.serialization.Model
summary: 'Single topology parameter declaration. Declared parameters can and must
  be referenced throughout the topology and can optionally have default values to
  be used when they are not defined in the pipeline instances.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ParameterDeclaration(*, name: str, type: str | ParameterType, description:
    str | None = None, default: str | None = None, **kwargs)'
  keywordOnlyParameters:
  - name: name
    description: Required. Name of the parameter.
    types:
    - <xref:str>
  - name: type
    description: 'Required. Type of the parameter. Possible values include: "string",

      "secretString", "int", "double", "bool".'
    types:
    - <xref:str>
    - <xref:azure.media.videoanalyzer.edge.models.ParameterType>
  - name: description
    description: Description of the parameter.
    types:
    - <xref:str>
  - name: default
    description: 'The default value for the parameter to be used if the live pipeline
      does not

      specify a value.'
    types:
    - <xref:str>
variables:
- description: Required. Name of the parameter.
  name: name
  types:
  - <xref:str>
- description: 'Required. Type of the parameter. Possible values include: "string",
    "secretString",

    "int", "double", "bool".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.media.videoanalyzer.edge.models.ParameterType>
- description: Description of the parameter.
  name: description
  types:
  - <xref:str>
- description: 'The default value for the parameter to be used if the live pipeline
    does not

    specify a value.'
  name: default
  types:
  - <xref:str>
methods:
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.media.videoanalyzeredge.ParameterDeclaration.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
