### YamlMime:PythonClass
uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest
name: PipelineTopologySetRequest
fullName: azure.media.videoanalyzeredge.PipelineTopologySetRequest
module: azure.media.videoanalyzeredge
inheritances:
- azure.media.videoanalyzeredge._generated.models._models_py3.MethodRequest
summary: 'Creates a new pipeline topology or updates an existing one.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'PipelineTopologySetRequest(*, pipeline_topology: PipelineTopology, api_version:
    str | None = ''1.1'', **kwargs)'
  keywordOnlyParameters:
  - name: api_version
    description: 'Video Analyzer API version. The only acceptable values to pass in
      are

      None and "1.1". The default value is "1.1".'
    defaultValue: '1.1'
    types:
    - <xref:str>
  - name: pipeline_topology
    description: "Required. Pipeline topology describes the processing steps to be\n\
      applied when processing media for a particular outcome. The topology should\
      \ be defined\naccording to the scenario to be achieved and can be reused across\
      \ many pipeline instances which\nshare the same processing characteristics.\
      \ For instance, a pipeline topology which acquires\ndata from a RTSP camera,\
      \ process it with an specific AI model and stored the data on the cloud\ncan\
      \ be reused across many different cameras, as long as the same processing should\
      \ be applied\nacross all the cameras. Individual instance properties can be\
      \ defined through the use of\nuser-defined parameters, which allow for a topology\
      \ to be parameterized, thus allowing\nindividual pipelines to refer to different\
      \ values, such as individual cameras RTSP endpoints\nand credentials. Overall\
      \ a topology is composed of the following:\n\n* Parameters: list of user defined\
      \ parameters that can be references across the topology \n\nnodes.\n* Sources:\
      \ list of one or more data sources nodes such as an RTSP source which allows\
      \ for\nmedia to be ingested from cameras.\n* Processors: list of nodes which\
      \ perform data analysis or transformations.\n\n   -Sinks: list of one or more\
      \ data sinks which allow for data to be stored or exported to\n\nother destinations."
    types:
    - <xref:azure.media.videoanalyzer.edge.models.PipelineTopology>
variables:
- description: Required. Direct method method name.Constant filled by server.
  name: method_name
  types:
  - <xref:str>
- description: 'Video Analyzer API version. The only acceptable values to pass in
    are None

    and "1.1". The default value is "1.1".'
  name: api_version
  types:
  - <xref:str>
- description: "Required. Pipeline topology describes the processing steps to be\n\
    applied when processing media for a particular outcome. The topology should be\
    \ defined\naccording to the scenario to be achieved and can be reused across many\
    \ pipeline instances which\nshare the same processing characteristics. For instance,\
    \ a pipeline topology which acquires\ndata from a RTSP camera, process it with\
    \ an specific AI model and stored the data on the cloud\ncan be reused across\
    \ many different cameras, as long as the same processing should be applied\nacross\
    \ all the cameras. Individual instance properties can be defined through the use\
    \ of\nuser-defined parameters, which allow for a topology to be parameterized,\
    \ thus allowing\nindividual pipelines to refer to different values, such as individual\
    \ cameras RTSP endpoints\nand credentials. Overall a topology is composed of the\
    \ following:\n\n* Parameters: list of user defined parameters that can be references\
    \ across the topology \n\nnodes.\n* Sources: list of one or more data sources\
    \ nodes such as an RTSP source which allows for\nmedia to be ingested from cameras.\n\
    * Processors: list of nodes which perform data analysis or transformations.\n\n\
    \   -Sinks: list of one or more data sinks which allow for data to be stored or\
    \ exported to\n\nother destinations."
  name: pipeline_topology
  types:
  - <xref:azure.media.videoanalyzer.edge.models.PipelineTopology>
methods:
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.serialize
  name: serialize
  signature: serialize()
- uid: azure.media.videoanalyzeredge.PipelineTopologySetRequest.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
