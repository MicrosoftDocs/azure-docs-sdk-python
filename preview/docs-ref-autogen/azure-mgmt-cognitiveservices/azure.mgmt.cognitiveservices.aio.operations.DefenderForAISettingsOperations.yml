### YamlMime:PythonClass
uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations
name: DefenderForAISettingsOperations
fullName: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations
module: azure.mgmt.cognitiveservices.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.cognitiveservices.aio.CognitiveServicesManagementClient>'s\n\
  >\n> <xref:defender_for_ai_settings> attribute.\n>"
constructor:
  syntax: DefenderForAISettingsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations.create_or_update
  name: create_or_update
  summary: Creates or Updates the specified Defender for AI setting.
  signature: 'async create_or_update(resource_group_name: str, account_name: str,
    defender_for_ai_setting_name: str, defender_for_ai_settings: _models.DefenderForAISetting,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.DefenderForAISetting'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of Cognitive Services account. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: defender_for_ai_setting_name
    description: The name of the defender for AI setting. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: defender_for_ai_settings
    description: 'Properties describing the Defender for AI setting. Is either a

      DefenderForAISetting type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: DefenderForAISetting or the result of cls(response)
    types:
    - <xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations.get
  name: get
  summary: Gets the specified Defender for AI setting by name.
  signature: 'async get(resource_group_name: str, account_name: str, defender_for_ai_setting_name:
    str, **kwargs: Any) -> DefenderForAISetting'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of Cognitive Services account. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: defender_for_ai_setting_name
    description: The name of the defender for AI setting. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DefenderForAISetting or the result of cls(response)
    types:
    - <xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations.list
  name: list
  summary: Lists the Defender for AI settings.
  signature: 'list(resource_group_name: str, account_name: str, **kwargs: Any) ->
    AsyncIterable[DefenderForAISetting]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of Cognitive Services account. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either DefenderForAISetting or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations.update
  name: update
  summary: Updates the specified Defender for AI setting.
  signature: 'async update(resource_group_name: str, account_name: str, defender_for_ai_setting_name:
    str, defender_for_ai_settings: _models.DefenderForAISetting, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.DefenderForAISetting'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of Cognitive Services account. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: defender_for_ai_setting_name
    description: The name of the defender for AI setting. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: defender_for_ai_settings
    description: 'Properties describing the Defender for AI setting. Is either a

      DefenderForAISetting type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: DefenderForAISetting or the result of cls(response)
    types:
    - <xref:azure.mgmt.cognitiveservices.models.DefenderForAISetting>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.cognitiveservices.aio.operations.DefenderForAISettingsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.cognitiveservices.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv83\\Lib\\site-packages\\azure\\mgmt\\cognitiveservices\\models\\__init__.py'>
