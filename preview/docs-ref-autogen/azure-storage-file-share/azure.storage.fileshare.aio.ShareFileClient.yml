### YamlMime:PythonClass
uid: azure.storage.fileshare.aio.ShareFileClient
name: ShareFileClient
fullName: azure.storage.fileshare.aio.ShareFileClient
module: azure.storage.fileshare.aio
inheritances:
- azure.storage.fileshare._shared.base_client_async.AsyncStorageAccountHostsMixin
- azure.storage.fileshare._file_client.ShareFileClient
summary: A client to interact with a specific file, although that file may not yet
  exist.
constructor:
  syntax: 'ShareFileClient(account_url: str, share_name: str, file_path: str, snapshot:
    Optional[Union[str, Dict[str, Any]]] = None, credential: Optional[Any] = None,
    **kwargs: Any)'
  parameters:
  - name: account_url
    description: 'The URI to the storage account. In order to create a client given
      the full URI to the

      file, use the <xref:azure.storage.fileshare.aio.from_file_url> classmethod.'
    isRequired: true
    types:
    - <xref:str>
  - name: share_name
    description: The name of the share for the file.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: 'The file path to the file with which to interact. If specified,
      this value will override

      a file value specified in the file URL.'
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'An optional file snapshot on which to operate. This can be the snapshot
      ID string

      or the response returned from <xref:azure.storage.fileshare.aio.ShareClient.create_snapshot>.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credential with which to authenticate. This is optional if the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential from azure.core.credentials or an account

      shared access key.'
    isRequired: true
  - name: api_version
    description: 'The Storage API version to use for requests. Default value is the
      most recent service version that is

      compatible with the current SDK. Setting to an older version may result in reduced
      feature compatibility.


      New in version 12.1.0.'
    types:
    - <xref:str>
  - name: secondary_hostname
    description: The hostname of the secondary endpoint.
    types:
    - <xref:str>
  - name: loop
    description: The event loop to run the asynchronous tasks.
  - name: max_range_size
    description: The maximum range size used for a file upload. Defaults to 4*1024*1024.
    types:
    - <xref:int>
methods:
- uid: azure.storage.fileshare.aio.ShareFileClient.abort_copy
  name: abort_copy
  summary: 'Abort an ongoing copy operation.


    This will leave a destination file with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  signature: 'abort_copy(copy_id: Union[str, FileProperties], **kwargs: Any) -> None'
  parameters:
  - name: copy_id
    description: 'The copy operation to abort. This can be either an ID, or an

      instance of FileProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.FileProperties>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
- uid: azure.storage.fileshare.aio.ShareFileClient.acquire_lease
  name: acquire_lease
  summary: 'Requests a new lease.


    If the file does not have an active lease, the File

    Service creates a lease on the blob and returns a new lease.'
  signature: 'acquire_lease(lease_id: Optional[str] = None, **kwargs: Any) -> azure.storage.fileshare.aio._lease_async.ShareLeaseClient'
  parameters:
  - name: lease_id
    description: 'Proposed lease ID, in a GUID string format. The File Service

      returns 400 (Invalid request) if the proposed lease ID is not

      in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: A ShareLeaseClient object.
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
- uid: azure.storage.fileshare.aio.ShareFileClient.clear_range
  name: clear_range
  summary: 'Clears the specified range and releases the space used in storage for

    that range.'
  signature: 'clear_range(offset: int, length: int, **kwargs) -> Dict[str, Any]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.close_all_handles
  name: close_all_handles
  summary: 'Close any open file handles.


    This operation will block until the service has closed all open handles.'
  signature: 'close_all_handles(**kwargs: Any) -> Dict[str, int]'
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.aio.ShareFileClient.close_handle
  name: close_handle
  summary: Close an open file handle.
  signature: 'close_handle(handle: Union[str, HandleItem], **kwargs: Any) -> Dict[str,
    int]'
  parameters:
  - name: handle
    description: A specific handle to close.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.Handle>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.aio.ShareFileClient.create_file
  name: create_file
  summary: 'Creates a new file.


    Note that it only initializes the file with no content.'
  signature: 'create_file(size: int, file_attributes: Union[str, NTFSAttributes] =
    ''none'', file_creation_time: Union[str, datetime] = ''now'', file_last_write_time:
    Union[str, datetime] = ''now'', file_permission: Optional[str] = None, permission_key:
    Optional[str] = None, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: size
    description: 'Specifies the maximum size for the file,

      up to 1 TB.'
    isRequired: true
    types:
    - <xref:int>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, the default value would be "None" and the attributes will be set
      to "Archive".

      Here is an example for when the var type is str: ''Temporary|Archive''.

      file_attributes value is not case sensitive.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    types:
    - <xref:dict>(<xref:str,str>)
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
  examples:
  - "Create a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\81\\\\\
    azure-storage-file-share-12.7.0b1\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Create and allocate bytes for the file (no content added yet)\n   await\
    \ my_allocated_file.create_file(size=100)\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.delete_file
  name: delete_file
  summary: 'Marks the specified file for deletion. The file is

    later deleted during garbage collection.'
  signature: 'delete_file(**kwargs: Any) -> None'
  parameters:
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:None>
  examples:
  - "Delete a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\81\\\\\
    azure-storage-file-share-12.7.0b1\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   await my_file.delete_file()\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.download_file
  name: download_file
  summary: 'Downloads a file to the StorageStreamDownloader. The readall() method
    must

    be used to read all the content or readinto() must be used to download the file
    into

    a stream. Using chunks() returns an async iterator which allows the user to iterate
    over the content in chunks.'
  signature: 'download_file(offset: Optional[int] = None, length: Optional[int] =
    None, **kwargs: Any) -> azure.storage.fileshare.aio._download_async.StorageStreamDownloader'
  parameters:
  - name: offset
    description: 'Start of byte range to use for downloading a section of the file.

      Must be set if length is provided.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    isRequired: true
    types:
    - <xref:int>
  - name: max_concurrency
    description: Maximum number of parallel connections to use.
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each chunk of the file. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https as https (the default) will

      already validate. Note that this MD5 hash is not stored with the

      file. Also note that if enabled, the memory-efficient upload algorithm

      will not be used, because computing the MD5 hash requires buffering

      entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: A streaming object (StorageStreamDownloader)
    types:
    - <xref:azure.storage.fileshare.aio.StorageStreamDownloader>
  examples:
  - "Download a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\81\\\\\
    azure-storage-file-share-12.7.0b1\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   with open(DEST_FILE, \"wb\") as data:\n       stream = await my_file.download_file()\n\
    \       data.write(await stream.readall())\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.get_file_properties
  name: get_file_properties
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the file.'
  signature: 'get_file_properties(**kwargs: Any) -> FileProperties'
  parameters:
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: FileProperties
    types:
    - <xref:azure.storage.fileshare.FileProperties>
- uid: azure.storage.fileshare.aio.ShareFileClient.get_ranges
  name: get_ranges
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.'
  signature: 'get_ranges(offset: Optional[int] = None, length: Optional[int] = None,
    **kwargs: Any) -> List[Dict[str, int]]'
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: A list of valid ranges.
    types:
    - <xref:List>[<xref:dict>[<xref:str>, <xref:int>]]
- uid: azure.storage.fileshare.aio.ShareFileClient.get_ranges_diff
  name: get_ranges_diff
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.


    New in version 12.6.0.'
  signature: 'get_ranges_diff(previous_sharesnapshot: Union[str, Dict[str, Any]],
    offset: Optional[int] = None, length: Optional[int] = None, **kwargs: Any) ->
    Tuple[List[Dict[str, int]], List[Dict[str, int]]]'
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: previous_sharesnapshot
    description: 'The snapshot diff parameter that contains an opaque DateTime value
      that

      specifies a previous file snapshot to be compared

      against a more recent snapshot or the current file.'
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.'
    types:
    - <xref:azure.storage.fileshare.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: 'A tuple of two lists of file ranges as dictionaries with ''start''
      and ''end'' keys.

      The first element are filled file ranges, the 2nd element is cleared file ranges.'
    types:
    - <xref:tuple>(<xref:list>(<xref:dict>(<xref:str>, <xref:str>), <xref:list>(<xref:dict>(<xref:str>,
      <xref:str>))
- uid: azure.storage.fileshare.aio.ShareFileClient.list_handles
  name: list_handles
  summary: Lists handles for file.
  signature: 'list_handles(**kwargs: Any) -> azure.core.async_paging.AsyncItemPaged'
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: An auto-paging iterable of HandleItem
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.storage.fileshare.HandleItem>]
- uid: azure.storage.fileshare.aio.ShareFileClient.resize_file
  name: resize_file
  summary: Resizes a file to the specified size.
  signature: 'resize_file(size: int, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: size
    description: Size to resize file to (in bytes)
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.set_file_metadata
  name: set_file_metadata
  summary: 'Sets user-defined metadata for the specified file as one or more

    name-value pairs.


    Each call to this operation replaces all existing metadata

    attached to the file. To remove all metadata from the file,

    call this operation with no metadata dict.'
  signature: 'set_file_metadata(metadata: Optional[Dict[str, Any]] = None, **kwargs:
    Any) -> Dict[str, Any]'
  parameters:
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.fileshare.aio.ShareFileClient.set_http_headers
  name: set_http_headers
  summary: Sets HTTP headers on the file.
  signature: 'set_http_headers(content_settings: ContentSettings, file_attributes:
    Union[str, NTFSAttributes] = ''preserve'', file_creation_time: Union[str, datetime]
    = ''preserve'', file_last_write_time: Union[str, datetime] = ''preserve'', file_permission:
    Optional[str] = None, permission_key: Optional[str] = None, **kwargs: Any) ->
    Dict[str, Any]'
  parameters:
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, indicates preservation of existing values.

      Here is an example for when the var type is str: ''Temporary|Archive'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
- uid: azure.storage.fileshare.aio.ShareFileClient.start_copy_from_url
  name: start_copy_from_url
  summary: 'Initiates the copying of data from a source URL into the file

    referenced by the client.


    The status of this copy operation can be found using the *get_properties*

    method.'
  signature: 'start_copy_from_url(source_url: str, **kwargs: Any) -> Any'
  parameters:
  - name: source_url
    description: Specifies the URL of the source file.
    isRequired: true
    types:
    - <xref:str>
  - name: file_permission
    description: 'If specified the permission (security descriptor) shall be set for
      the directory/file.

      This value can be set to "source" to copy the security descriptor from the source
      file.

      Otherwise if set, this value will be used to override the source value. If not
      set, permission value

      is inherited from the parent directory of the target file. This setting can
      be

      used if Permission size is <= 8KB, otherwise permission_key shall be used.

      If SDDL is specified as input, it must have owner, group and dacl.

      Note: Only one of the file_permission or permission_key should be specified.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the directory/file.

      This value can be set to "source" to copy the security descriptor from the source
      file.

      Otherwise if set, this value will be used to override the source value. If not
      set, permission value

      is inherited from the parent directory of the target file.

      Note: Only one of the file_permission or permission_key should be specified.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
  - name: file_attributes
    description: 'This value can be set to "source" to copy file attributes from the
      source file to the target file,

      or to clear all attributes, it can be set to "None". Otherwise it can be set
      to a list of attributes

      to set on the target file. If this is not set, the default value is "Archive".


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'This value can be set to "source" to copy the creation time from
      the source file to the target file,

      or a datetime to set as creation time on the target file. This could also be
      a string in ISO 8601 format.

      If this is not set, creation time will be set to the date time value of the
      creation

      (or when it was overwritten) of the target file by copy engine.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'This value can be set to "source" to copy the last write time from
      the source file to the target file, or

      a datetime to set as the last write time on the target file. This could also
      be a string in ISO 8601 format.

      If this is not set, value will be the last write time to the file by the copy
      engine.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: ignore_read_only
    description: 'Specifies the option to overwrite the target file if it already
      exists and has read-only attribute set.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:bool>
  - name: set_archive_attribute
    description: 'Specifies the option to set the archive attribute on the target
      file.

      True means the archive attribute will be set on the target file despite attribute

      overrides or the source file state.


      New in version 12.1.0: This parameter was introduced in API version ''2019-07-07''.'
    types:
    - <xref:bool>
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
  examples:
  - "Copy a file from a URL<!--[!code-python[Main](les\\file_samples_client_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\81\\\\azure-storage-file-share-12.7.0b1\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   await destination_file.start_copy_from_url(source_url=source_url)\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_file
  name: upload_file
  summary: Uploads a new file.
  signature: 'upload_file(data: Any, length: Optional[int] = None, file_attributes:
    Union[str, NTFSAttributes] = ''none'', file_creation_time: Union[str, datetime]
    = ''now'', file_last_write_time: Union[str, datetime] = ''now'', file_permission:
    Optional[str] = None, permission_key: Optional[str] = None, **kwargs: Any) ->
    Dict[str, Any]'
  parameters:
  - name: data
    description: Content of the file.
    isRequired: true
    types:
    - <xref:Any>
  - name: length
    description: Length of the file in bytes. Specify its maximum size, up to 1 TiB.
    isRequired: true
    types:
    - <xref:int>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, the default value would be "None" and the attributes will be set
      to "Archive".

      Here is an example for when the var type is str: ''Temporary|Archive''.

      file_attributes value is not case sensitive.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    types:
    - <xref:dict>(<xref:str,str>)
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: validate_content
    description: 'If true, calculates an MD5 hash for each range of the file. The
      storage

      service checks the hash of the content that has arrived with the hash

      that was sent. This is primarily valuable for detecting bitflips on

      the wire if using http instead of https as https (the default) will

      already validate. Note that this MD5 hash is not stored with the

      file.'
    types:
    - <xref:bool>
  - name: max_concurrency
    description: Maximum number of parallel connections to use.
    types:
    - <xref:int>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:Any>)
  examples:
  - "Upload a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\81\\\\\
    azure-storage-file-share-12.7.0b1\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   with open(SOURCE_FILE, \"rb\") as source:\n       await my_file.upload_file(source)\n\
    \n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_range
  name: upload_range
  summary: Upload a range of bytes to a file.
  signature: 'upload_range(data: bytes, offset: int, length: int, **kwargs) -> Dict[str,
    Any]'
  parameters:
  - name: data
    description: The data to upload.
    isRequired: true
    types:
    - <xref:bytes>
  - name: offset
    description: 'Start of byte range to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: validate_content
    description: 'If true, calculates an MD5 hash of the page content. The storage

      service checks the hash of the content that has arrived

      with the hash that was sent. This is primarily valuable for detecting

      bitflips on the wire if using http instead of https as https (the default)

      will already validate. Note that this MD5 hash is not stored with the

      file.'
    types:
    - <xref:bool>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  - name: encoding
    description: Defaults to UTF-8.
    types:
    - <xref:str>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_range_from_url
  name: upload_range_from_url
  summary: Writes the bytes from one Azure File endpoint into the specified range
    of another Azure File endpoint.
  signature: 'upload_range_from_url(source_url: str, offset: int, length: int, source_offset:
    int, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: offset
    description: 'Start of byte range to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: source_url
    description: 'A URL of up to 2 KB in length that specifies an Azure file or blob.

      The value should be URL-encoded as it would appear in a request URI.

      If the source is in another account, the source must either be public

      or must be authenticated via a shared access signature. If the source

      is public, no authentication is required.

      Examples:

      [https://myaccount.file.core.windows.net/myshare/mydir/myfile](https://myaccount.file.core.windows.net/myshare/mydir/myfile)

      [https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken](https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken)'
    isRequired: true
    types:
    - <xref:str>
  - name: source_offset
    description: 'This indicates the start of the range of bytes(inclusive) that has
      to be taken from the copy source.

      The service will read the same number of bytes as the destination range (length-offset).'
    isRequired: true
    types:
    - <xref:int>
  - name: lease
    description: 'Required if the file has an active lease. Value can be a ShareLeaseClient
      object

      or the lease ID as a string.


      New in version 12.1.0.'
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  - name: source_authorization
    description: 'Authenticate as a service principal using a client secret to access
      a source blob. Ensure "bearer " is

      the prefix of the source_authorization string.'
    types:
    - <xref:str>
