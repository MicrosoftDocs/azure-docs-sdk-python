### YamlMime:PythonClass
uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations
name: LargeFaceListOperations
fullName: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations
module: azure.cognitiveservices.vision.face.operations
inheritances:
- builtins.object
summary: 'LargeFaceListOperations operations.


  You should not instantiate directly this class, but create a Client instance that
  will create it for you and attach it as attribute.'
constructor:
  syntax: LargeFaceListOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
methods:
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.add_face_from_stream
  name: add_face_from_stream
  summary: 'Add a face to a specified large face list, up to 1,000,000 faces.

    <br /> To deal with an image contains multiple faces, input face can be

    specified as an image with a targetFace rectangle. It returns a

    persistedFaceId representing the added face. No image will be stored.

    Only the extracted face feature will be stored on server until

    [LargeFaceList Face -

    Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/deleteface)

    or [LargeFaceList -

    Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)

    is called.

    <br /> Note persistedFaceId is different from faceId generated by [Face

    -

    Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

    * Higher face image quality means better recognition precision. Please

    consider high-quality faces: frontal, clear, and face size is 200x200

    pixels (100 pixels between eyes) or bigger.

    * JPEG, PNG, GIF (the first frame), and BMP format are supported. The

    allowed image file size is from 1KB to 6MB.

    * "targetFace" rectangle should contain one face. Zero or multiple

    faces will be regarded as an error. If the provided "targetFace"

    rectangle is not returned from [Face -

    Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),

    there''s no guarantee to detect and add the face successfully.

    * Out of detectable face size (36x36 - 4096x4096 pixels), large

    head-pose, or large occlusions will cause failures.

    * Adding/deleting faces to/from a same face list are processed

    sequentially and to/from different face lists are in parallel.

    * The minimum detectable face size is 36x36 pixels in an image no

    larger than 1920x1080 pixels. Images with dimensions higher than

    1920x1080 pixels will need a proportionally larger minimum face size.

    * Different ''detectionModel'' values can be provided. To use and compare

    different detection models, please refer to [How to specify a detection

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).

    Quota:

    * Free-tier subscription quota: 1,000 faces per large face list.

    * S0-tier subscription quota: 1,000,000 faces per large face list.'
  signature: add_face_from_stream(large_face_list_id, image, user_data=None, target_face=None,
    detection_model='detection_01', custom_headers=None, raw=False, callback=None,
    **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: image
    description: An image stream.
    isRequired: true
    types:
    - <xref:typing.Generator>
  - name: user_data
    description: 'User-specified data about the face for any purpose.

      The maximum length is 1KB.'
    defaultValue: None
    types:
    - <xref:str>
  - name: target_face
    description: 'A face rectangle to specify the target face to be

      added to a person in the format of "targetFace=left,top,width,height".

      E.g. "targetFace=10,10,100,100". If there is more than one face in the

      image, targetFace is required to specify which face to add. No

      targetFace means there is only one face detected in the entire image.'
    defaultValue: None
    types:
    - <xref:list>[<xref:int>]
  - name: detection_model
    description: 'Name of detection model. Detection model is

      used to detect faces in the submitted image. A detection model name

      can be provided when performing Face - Detect or (Large)FaceList - Add

      Face or (Large)PersonGroup - Add Face. The default value is

      ''detection_01'', if another model is needed, please explicitly specify

      it. Possible values include: ''detection_01'', ''detection_02'',

      ''detection_03'''
    defaultValue: detection_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.DetectionModel>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: callback
    description: 'When specified, will be called with each chunk of

      data that is streamed. The callback should take two arguments, the

      bytes of the current chunk of data and the response object. If the

      data is uploading, response will be None.'
    defaultValue: None
    types:
    - <xref:typing.Callable>[<xref:Bytes>, <xref:response=None>]
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: PersistedFace or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.PersistedFace>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.add_face_from_url
  name: add_face_from_url
  summary: 'Add a face to a specified large face list, up to 1,000,000 faces.

    <br /> To deal with an image contains multiple faces, input face can be

    specified as an image with a targetFace rectangle. It returns a

    persistedFaceId representing the added face. No image will be stored.

    Only the extracted face feature will be stored on server until

    [LargeFaceList Face -

    Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/deleteface)

    or [LargeFaceList -

    Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)

    is called.

    <br /> Note persistedFaceId is different from faceId generated by [Face

    -

    Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

    * Higher face image quality means better recognition precision. Please

    consider high-quality faces: frontal, clear, and face size is 200x200

    pixels (100 pixels between eyes) or bigger.

    * JPEG, PNG, GIF (the first frame), and BMP format are supported. The

    allowed image file size is from 1KB to 6MB.

    * "targetFace" rectangle should contain one face. Zero or multiple

    faces will be regarded as an error. If the provided "targetFace"

    rectangle is not returned from [Face -

    Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),

    there''s no guarantee to detect and add the face successfully.

    * Out of detectable face size (36x36 - 4096x4096 pixels), large

    head-pose, or large occlusions will cause failures.

    * Adding/deleting faces to/from a same face list are processed

    sequentially and to/from different face lists are in parallel.

    * The minimum detectable face size is 36x36 pixels in an image no

    larger than 1920x1080 pixels. Images with dimensions higher than

    1920x1080 pixels will need a proportionally larger minimum face size.

    * Different ''detectionModel'' values can be provided. To use and compare

    different detection models, please refer to [How to specify a detection

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

    Quota:

    * Free-tier subscription quota: 1,000 faces per large face list.

    * S0-tier subscription quota: 1,000,000 faces per large face list.'
  signature: add_face_from_url(large_face_list_id, url, user_data=None, target_face=None,
    detection_model='detection_01', custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: url
    description: Publicly reachable URL of an image
    isRequired: true
    types:
    - <xref:str>
  - name: user_data
    description: 'User-specified data about the face for any purpose.

      The maximum length is 1KB.'
    defaultValue: None
    types:
    - <xref:str>
  - name: target_face
    description: 'A face rectangle to specify the target face to be

      added to a person in the format of "targetFace=left,top,width,height".

      E.g. "targetFace=10,10,100,100". If there is more than one face in the

      image, targetFace is required to specify which face to add. No

      targetFace means there is only one face detected in the entire image.'
    defaultValue: None
    types:
    - <xref:list>[<xref:int>]
  - name: detection_model
    description: 'Name of detection model. Detection model is

      used to detect faces in the submitted image. A detection model name

      can be provided when performing Face - Detect or (Large)FaceList - Add

      Face or (Large)PersonGroup - Add Face. The default value is

      ''detection_01'', if another model is needed, please explicitly specify

      it. Possible values include: ''detection_01'', ''detection_02'',

      ''detection_03'''
    defaultValue: detection_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.DetectionModel>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: PersistedFace or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.PersistedFace>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.create
  name: create
  summary: 'Create an empty large face list with user-specified largeFaceListId,

    name, an optional userData and recognitionModel.

    <br /> Large face list is a list of faces, up to 1,000,000 faces, and

    used by [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

    <br /> After creation, user should use [LargeFaceList Face -

    Add](https://docs.microsoft.com/rest/api/faceapi/largefacelist/addfacefromurl)

    to import the faces and [LargeFaceList -

    Train](https://docs.microsoft.com/rest/api/faceapi/largefacelist/train)

    to make it ready for [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

    No image will be stored. Only the extracted face features are stored on

    server until [LargeFaceList -

    Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)

    is called.

    <br /> Find Similar is used for scenario like finding celebrity-like

    faces, similar face filtering, or as a light way face identification.

    But if the actual use is to identify person, please use

    [PersonGroup](https://docs.microsoft.com/rest/api/faceapi/persongroup)

    /

    [LargePersonGroup](https://docs.microsoft.com/rest/api/faceapi/largepersongroup)

    and [Face -

    Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify).

    <br/>''recognitionModel'' should be specified to associate with this

    large face list. The default value for ''recognitionModel'' is

    ''recognition_01'', if the latest model needed, please explicitly specify

    the model you need in this parameter. New faces that are added to an

    existing large face list will use the recognition model that''s already

    associated with the collection. Existing face features in a large face

    list can''t be updated to features extracted by another version of

    recognition model. Please refer to [Specify a recognition

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).

    Large face list quota:

    * Free-tier subscription quota: 64 large face lists.

    * S0-tier subscription quota: 1,000,000 large face lists.'
  signature: create(large_face_list_id, name, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: User defined name, maximum length is 128.
    isRequired: true
    types:
    - <xref:str>
  - name: user_data
    description: User specified data. Length should not exceed 16KB.
    defaultValue: None
    types:
    - <xref:str>
  - name: recognition_model
    description: 'Possible values include: ''recognition_01'',

      ''recognition_02'', ''recognition_03'', ''recognition_04'''
    defaultValue: recognition_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.RecognitionModel>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.delete
  name: delete
  summary: Delete a specified large face list.
  signature: delete(large_face_list_id, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.delete_face
  name: delete_face
  summary: 'Delete a face from a large face list by specified largeFaceListId and

    persistedFaceId.

    <br /> Adding/deleting faces to/from a same large face list are

    processed sequentially and to/from different large face lists are in

    parallel.'
  signature: delete_face(large_face_list_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: persisted_face_id
    description: 'Id referencing a particular persistedFaceId

      of an existing face.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.get
  name: get
  summary: 'Retrieve a large face list''s largeFaceListId, name, userData and

    recognitionModel.'
  signature: get(large_face_list_id, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: return_recognition_model
    description: 'A value indicating whether the

      operation should return ''recognitionModel'' in response.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: LargeFaceList or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.LargeFaceList>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.get_face
  name: get_face
  summary: 'Retrieve information about a persisted face (specified by

    persistedFaceId and its belonging largeFaceListId).'
  signature: get_face(large_face_list_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: persisted_face_id
    description: 'Id referencing a particular persistedFaceId

      of an existing face.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: PersistedFace or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.PersistedFace>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.get_training_status
  name: get_training_status
  summary: 'Retrieve the training status of a large face list (completed or

    ongoing).'
  signature: get_training_status(large_face_list_id, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: TrainingStatus or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.TrainingStatus>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.list
  name: list
  summary: 'List large face lists'' information of largeFaceListId, name, userData

    and recognitionModel. <br />

    To get face information inside largeFaceList use [LargeFaceList Face -

    Get](https://docs.microsoft.com/rest/api/faceapi/largefacelist/getface)<br

    />

    * Large face lists are stored in alphabetical order of largeFaceListId.

    * "start" parameter (string, optional) is a user-provided

    largeFaceListId value that returned entries have larger ids by string

    comparison. "start" set to empty to indicate return from the first

    item.

    * "top" parameter (int, optional) specifies the number of entries to

    return. A maximal of 1000 entries can be returned in one call. To fetch

    more, you can specify "start" with the last returned entry''s Id of the

    current call.

    <br />

    For example, total 5 large person lists: "list1", ..., "list5".

    <br /> "start=&top=" will return all 5 lists.

    <br /> "start=&top=2" will return "list1", "list2".

    <br /> "start=list2&top=3" will return "list3", "list4", "list5".

    .'
  signature: list(return_recognition_model=False, start=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: return_recognition_model
    description: 'A value indicating whether the

      operation should return ''recognitionModel'' in response.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: start
    description: 'Starting large face list id to return (used to list a

      range of large face lists).'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Number of large face lists to return starting with the

      large face list id indicated by the ''start'' parameter.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.LargeFaceList>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.list_faces
  name: list_faces
  summary: 'List all faces in a large face list, and retrieve face information

    (including userData and persistedFaceIds of registered faces of the

    face).'
  signature: list_faces(large_face_list_id, start=None, top=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: start
    description: 'Starting face id to return (used to list a range of

      faces).'
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Number of faces to return starting with the face id

      indicated by the ''start'' parameter.'
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.PersistedFace>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.train
  name: train
  summary: 'Queue a large face list training task, the training task may not be

    started immediately.'
  signature: train(large_face_list_id, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.update
  name: update
  summary: Update information of a large face list.
  signature: update(large_face_list_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: name
    description: User defined name, maximum length is 128.
    defaultValue: None
    types:
    - <xref:str>
  - name: user_data
    description: User specified data. Length should not exceed 16KB.
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.update_face
  name: update_face
  summary: Update a persisted face's userData field.
  signature: update_face(large_face_list_id, persisted_face_id, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: large_face_list_id
    description: 'Id referencing a particular large face

      list.'
    isRequired: true
    types:
    - <xref:str>
  - name: persisted_face_id
    description: 'Id referencing a particular persistedFaceId

      of an existing face.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_data
    description: 'User-provided data attached to the face. The size

      limit is 1KB.'
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
attributes:
- uid: azure.cognitiveservices.vision.face.operations.LargeFaceListOperations.models
  name: models
  signature: models = <module 'azure.cognitiveservices.vision.face.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
