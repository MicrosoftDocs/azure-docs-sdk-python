### YamlMime:PythonClass
uid: azure.cognitiveservices.vision.face.models.OperationStatus
name: OperationStatus
fullName: azure.cognitiveservices.vision.face.models.OperationStatus
module: azure.cognitiveservices.vision.face.models
inheritances:
- msrest.serialization.Model
summary: 'Operation status object. Operation refers to the asynchronous backend task

  including taking a snapshot and applying a snapshot.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'OperationStatus(*, status, created_time, last_action_time=None, resource_location:
    str = None, message: str = None, **kwargs)'
  parameters:
  - name: status
    description: 'Required. Operation status: notstarted, running, succeeded,

      failed. If the operation is requested and waiting to perform, the status

      is notstarted. If the operation is ongoing in backend, the status is

      running. Status succeeded means the operation is completed successfully,

      specifically for snapshot taking operation, it illustrates the snapshot is

      well taken and ready to apply, and for snapshot applying operation, it

      presents the target object has finished creating by the snapshot and ready

      to be used. Status failed is often caused by editing the source object

      while taking the snapshot or editing the target object while applying the

      snapshot before completion, see the field "message" to check the failure

      reason. Possible values include: ''notstarted'', ''running'', ''succeeded'',

      ''failed'''
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.OperationStatusType>
  - name: created_time
    description: 'Required. A combined UTC date and time string that

      describes the time when the operation (take or apply a snapshot) is

      requested. E.g. 2018-12-25T11:41:02.2331413Z.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: last_action_time
    description: 'A combined UTC date and time string that

      describes the last time the operation (take or apply a snapshot) is

      actively migrating data. The lastActionTime will keep increasing until the

      operation finishes. E.g. 2018-12-25T11:51:27.8705696Z.'
    isRequired: true
    types:
    - <xref:datetime>
  - name: resource_location
    description: 'When the operation succeeds successfully, for

      snapshot taking operation the snapshot id will be included in this field,

      and for snapshot applying operation, the path to get the target object

      will be returned in this field.'
    isRequired: true
    types:
    - <xref:str>
  - name: message
    description: 'Show failure message when operation fails (omitted when

      operation succeeds).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: status
    isRequired: true
  - name: created_time
    isRequired: true
  - name: last_action_time
    isRequired: true
  - name: resource_location
    isRequired: true
  - name: message
    isRequired: true
methods:
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.cognitiveservices.vision.face.models.OperationStatus.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
