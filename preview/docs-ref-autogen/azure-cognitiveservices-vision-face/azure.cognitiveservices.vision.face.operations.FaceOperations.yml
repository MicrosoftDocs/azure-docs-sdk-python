### YamlMime:PythonClass
uid: azure.cognitiveservices.vision.face.operations.FaceOperations
name: FaceOperations
fullName: azure.cognitiveservices.vision.face.operations.FaceOperations
module: azure.cognitiveservices.vision.face.operations
inheritances:
- builtins.object
summary: 'FaceOperations operations.


  You should not instantiate directly this class, but create a Client instance that
  will create it for you and attach it as attribute.'
constructor:
  syntax: FaceOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
methods:
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.detect_with_stream
  name: detect_with_stream
  summary: 'Detect human faces in an image, return face rectangles, and optionally

    with faceIds, landmarks, and attributes.<br />

    * No image will be stored. Only the extracted face feature will be

    stored on server. The faceId is an identifier of the face feature and

    will be used in [Face -

    Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify),

    [Face -

    Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface),

    and [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

    The stored face feature(s) will expire and be deleted at the time

    specified by faceIdTimeToLive after the original detection call.

    * Optional parameters include faceId, landmarks, and attributes.

    Attributes include age, gender, headPose, smile, facialHair, glasses,

    emotion, hair, makeup, occlusion, accessories, blur, exposure, noise,

    mask, and qualityForRecognition. Some of the results returned for

    specific attributes may not be highly accurate.

    * JPEG, PNG, GIF (the first frame), and BMP format are supported. The

    allowed image file size is from 1KB to 6MB.

    * Up to 100 faces can be returned for an image. Faces are ranked by

    face rectangle size from large to small.

    * For optimal results when querying [Face -

    Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify),

    [Face -

    Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface),

    and [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar)

    (''returnFaceId'' is true), please use faces that are: frontal, clear,

    and with a minimum size of 200x200 pixels (100 pixels between eyes).

    * The minimum detectable face size is 36x36 pixels in an image no

    larger than 1920x1080 pixels. Images with dimensions higher than

    1920x1080 pixels will need a proportionally larger minimum face size.

    * Different ''detectionModel'' values can be provided. To use and compare

    different detection models, please refer to [How to specify a detection

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)

    * Different ''recognitionModel'' values are provided. If follow-up

    operations like Verify, Identify, Find Similar are needed, please

    specify the recognition model with ''recognitionModel'' parameter. The

    default value for ''recognitionModel'' is ''recognition_01'', if latest

    model needed, please explicitly specify the model you need in this

    parameter. Once specified, the detected faceIds will be associated with

    the specified recognition model. More details, please refer to [Specify

    a recognition

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).'
  signature: detect_with_stream(image, return_face_id=True, return_face_landmarks=False,
    return_face_attributes=None, recognition_model='recognition_01', return_recognition_model=False,
    detection_model='detection_01', face_id_time_to_live=86400, custom_headers=None,
    raw=False, callback=None, **operation_config)
  parameters:
  - name: image
    description: An image stream.
    isRequired: true
    types:
    - <xref:typing.Generator>
  - name: return_face_id
    description: 'A value indicating whether the operation should

      return faceIds of detected faces.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: return_face_landmarks
    description: 'A value indicating whether the operation

      should return landmarks of the detected faces.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: return_face_attributes
    description: 'Analyze and return the one or more

      specified face attributes in the comma-separated string like

      "returnFaceAttributes=age,gender". The available attributes depends on

      the ''detectionModel'' specified. ''detection_01'' supports age, gender,

      headPose, smile, facialHair, glasses, emotion, hair, makeup,

      occlusion, accessories, blur, exposure, noise, and

      qualityForRecognition. While ''detection_02'' does not support any

      attributes and ''detection_03'' only supports mask and

      qualityForRecognition. Additionally, qualityForRecognition is only

      supported when the ''recognitionModel'' is specified as ''recognition_03''

      or ''recognition_04''. Note that each face attribute analysis has

      additional computational and time cost.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.FaceAttributeType>]
  - name: recognition_model
    description: 'Name of recognition model. Recognition model

      is used when the face features are extracted and associated with

      detected faceIds, (Large)FaceList or (Large)PersonGroup. A recognition

      model name can be provided when performing Face - Detect or

      (Large)FaceList - Create or (Large)PersonGroup - Create. The default

      value is ''recognition_01'', if latest model needed, please explicitly

      specify the model you need. Possible values include: ''recognition_01'',

      ''recognition_02'', ''recognition_03'', ''recognition_04'''
    defaultValue: recognition_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.RecognitionModel>
  - name: return_recognition_model
    description: 'A value indicating whether the

      operation should return ''recognitionModel'' in response.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: detection_model
    description: 'Name of detection model. Detection model is

      used to detect faces in the submitted image. A detection model name

      can be provided when performing Face - Detect or (Large)FaceList - Add

      Face or (Large)PersonGroup - Add Face. The default value is

      ''detection_01'', if another model is needed, please explicitly specify

      it. Possible values include: ''detection_01'', ''detection_02'',

      ''detection_03'''
    defaultValue: detection_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.DetectionModel>
  - name: face_id_time_to_live
    description: 'The number of seconds for the faceId

      being cached. Supported range from 60 seconds up to 86400 seconds. The

      default value is 86400 (24 hours).'
    defaultValue: '86400'
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: callback
    description: 'When specified, will be called with each chunk of

      data that is streamed. The callback should take two arguments, the

      bytes of the current chunk of data and the response object. If the

      data is uploading, response will be None.'
    defaultValue: None
    types:
    - <xref:typing.Callable>[<xref:Bytes>, <xref:response=None>]
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.DetectedFace>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.detect_with_url
  name: detect_with_url
  summary: 'Detect human faces in an image, return face rectangles, and optionally

    with faceIds, landmarks, and attributes.<br />

    * No image will be stored. Only the extracted face feature will be

    stored on server. The faceId is an identifier of the face feature and

    will be used in [Face -

    Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify),

    [Face -

    Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface),

    and [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

    The stored face feature(s) will expire and be deleted at the time

    specified by faceIdTimeToLive after the original detection call.

    * Optional parameters include faceId, landmarks, and attributes.

    Attributes include age, gender, headPose, smile, facialHair, glasses,

    emotion, hair, makeup, occlusion, accessories, blur, exposure, noise,

    mask, and qualityForRecognition. Some of the results returned for

    specific attributes may not be highly accurate.

    * JPEG, PNG, GIF (the first frame), and BMP format are supported. The

    allowed image file size is from 1KB to 6MB.

    * Up to 100 faces can be returned for an image. Faces are ranked by

    face rectangle size from large to small.

    * For optimal results when querying [Face -

    Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify),

    [Face -

    Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface),

    and [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar)

    (''returnFaceId'' is true), please use faces that are: frontal, clear,

    and with a minimum size of 200x200 pixels (100 pixels between eyes).

    * The minimum detectable face size is 36x36 pixels in an image no

    larger than 1920x1080 pixels. Images with dimensions higher than

    1920x1080 pixels will need a proportionally larger minimum face size.

    * Different ''detectionModel'' values can be provided. To use and compare

    different detection models, please refer to [How to specify a detection

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).

    * Different ''recognitionModel'' values are provided. If follow-up

    operations like Verify, Identify, Find Similar are needed, please

    specify the recognition model with ''recognitionModel'' parameter. The

    default value for ''recognitionModel'' is ''recognition_01'', if latest

    model needed, please explicitly specify the model you need in this

    parameter. Once specified, the detected faceIds will be associated with

    the specified recognition model. More details, please refer to [Specify

    a recognition

    model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).'
  signature: detect_with_url(url, return_face_id=True, return_face_landmarks=False,
    return_face_attributes=None, recognition_model='recognition_01', return_recognition_model=False,
    detection_model='detection_01', face_id_time_to_live=86400, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: url
    description: Publicly reachable URL of an image
    isRequired: true
    types:
    - <xref:str>
  - name: return_face_id
    description: 'A value indicating whether the operation should

      return faceIds of detected faces.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: return_face_landmarks
    description: 'A value indicating whether the operation

      should return landmarks of the detected faces.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: return_face_attributes
    description: 'Analyze and return the one or more

      specified face attributes in the comma-separated string like

      "returnFaceAttributes=age,gender". The available attributes depends on

      the ''detectionModel'' specified. ''detection_01'' supports age, gender,

      headPose, smile, facialHair, glasses, emotion, hair, makeup,

      occlusion, accessories, blur, exposure, noise, and

      qualityForRecognition. While ''detection_02'' does not support any

      attributes and ''detection_03'' only supports mask and

      qualityForRecognition. Additionally, qualityForRecognition is only

      supported when the ''recognitionModel'' is specified as ''recognition_03''

      or ''recognition_04''. Note that each face attribute analysis has

      additional computational and time cost.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.FaceAttributeType>]
  - name: recognition_model
    description: 'Name of recognition model. Recognition model

      is used when the face features are extracted and associated with

      detected faceIds, (Large)FaceList or (Large)PersonGroup. A recognition

      model name can be provided when performing Face - Detect or

      (Large)FaceList - Create or (Large)PersonGroup - Create. The default

      value is ''recognition_01'', if latest model needed, please explicitly

      specify the model you need. Possible values include: ''recognition_01'',

      ''recognition_02'', ''recognition_03'', ''recognition_04'''
    defaultValue: recognition_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.RecognitionModel>
  - name: return_recognition_model
    description: 'A value indicating whether the

      operation should return ''recognitionModel'' in response.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: detection_model
    description: 'Name of detection model. Detection model is

      used to detect faces in the submitted image. A detection model name

      can be provided when performing Face - Detect or (Large)FaceList - Add

      Face or (Large)PersonGroup - Add Face. The default value is

      ''detection_01'', if another model is needed, please explicitly specify

      it. Possible values include: ''detection_01'', ''detection_02'',

      ''detection_03'''
    defaultValue: detection_01
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.DetectionModel>
  - name: face_id_time_to_live
    description: 'The number of seconds for the faceId

      being cached. Supported range from 60 seconds up to 86400 seconds. The

      default value is 86400 (24 hours).'
    defaultValue: '86400'
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.DetectedFace>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.find_similar
  name: find_similar
  summary: 'Given query face''s faceId, to search the similar-looking faces from a

    faceId array, a face list or a large face list. faceId array contains

    the faces created by [Face - Detect With

    Url](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl) or

    [Face - Detect With

    Stream](https://docs.microsoft.com/rest/api/faceapi/face/detectwithstream),

    which will expire at the time specified by faceIdTimeToLive after

    creation. A "faceListId" is created by [FaceList -

    Create](https://docs.microsoft.com/rest/api/faceapi/facelist/create)

    containing persistedFaceIds that will not expire. And a

    "largeFaceListId" is created by [LargeFaceList -

    Create](https://docs.microsoft.com/rest/api/faceapi/largefacelist/create)

    containing persistedFaceIds that will also not expire. Depending on the

    input the returned similar faces list contains faceIds or

    persistedFaceIds ranked by similarity.

    <br/>Find similar has two working modes, "matchPerson" and "matchFace".

    "matchPerson" is the default mode that it tries to find faces of the

    same person as possible by using internal same-person thresholds. It is

    useful to find a known person''s other photos. Note that an empty list

    will be returned if no faces pass the internal thresholds. "matchFace"

    mode ignores same-person thresholds and returns ranked similar faces

    anyway, even the similarity is low. It can be used in the cases like

    searching celebrity-looking faces.

    <br/>The ''recognitionModel'' associated with the query face''s faceId

    should be the same as the ''recognitionModel'' used by the target faceId

    array, face list or large face list.

    .'
  signature: find_similar(face_id, face_list_id=None, large_face_list_id=None, face_ids=None,
    max_num_of_candidates_returned=20, mode='matchPerson', custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: face_id
    description: 'FaceId of the query face. User needs to call Face -

      Detect first to get a valid faceId. Note that this faceId is not

      persisted and will expire at the time specified by faceIdTimeToLive

      after the detection call'
    isRequired: true
    types:
    - <xref:str>
  - name: face_list_id
    description: 'An existing user-specified unique candidate face

      list, created in Face List - Create a Face List. Face list contains a

      set of persistedFaceIds which are persisted and will never expire.

      Parameter faceListId, largeFaceListId and faceIds should not be

      provided at the same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: large_face_list_id
    description: 'An existing user-specified unique candidate

      large face list, created in LargeFaceList - Create. Large face list

      contains a set of persistedFaceIds which are persisted and will never

      expire. Parameter faceListId, largeFaceListId and faceIds should not

      be provided at the same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: face_ids
    description: 'An array of candidate faceIds. All of them are

      created by Face - Detect and the faceIds will expire at the time

      specified by faceIdTimeToLive after the detection call. The number of

      faceIds is limited to 1000. Parameter faceListId, largeFaceListId and

      faceIds should not be provided at the same time.'
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: max_num_of_candidates_returned
    description: 'The number of top similar faces

      returned. The valid range is [1, 1000].'
    defaultValue: '20'
    types:
    - <xref:int>
  - name: mode
    description: 'Similar face searching mode. It can be "matchPerson" or

      "matchFace". Possible values include: ''matchPerson'', ''matchFace'''
    defaultValue: matchPerson
    types:
    - <xref:str>
    - <xref:azure.cognitiveservices.vision.face.models.FindSimilarMatchMode>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.SimilarFace>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.group
  name: group
  summary: 'Divide candidate faces into groups based on face similarity.<br />

    * The output is one or more disjointed face groups and a messyGroup. A

    face group contains faces that have similar looking, often of the same

    person. Face groups are ranked by group size, i.e. number of faces.

    Notice that faces belonging to a same person might be split into

    several groups in the result.

    * MessyGroup is a special face group containing faces that cannot find

    any similar counterpart face from original faces. The messyGroup will

    not appear in the result if all faces found their counterparts.

    * Group API needs at least 2 candidate faces and 1000 at most. We

    suggest to try [Face -

    Verify](https://docs.microsoft.com/rest/api/faceapi/face/verifyfacetoface)

    when you only have 2 candidate faces.

    * The ''recognitionModel'' associated with the query faces'' faceIds

    should be the same.

    .'
  signature: group(face_ids, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: face_ids
    description: 'Array of candidate faceId created by Face - Detect.

      The maximum is 1000 faces'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: GroupResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.GroupResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.identify
  name: identify
  summary: '1-to-many identification to find the closest matches of the specific

    query person face from a person group or large person group.

    <br/> For each face in the faceIds array, Face Identify will compute

    similarities between the query face and all the faces in the person

    group (given by personGroupId) or large person group (given by

    largePersonGroupId), and return candidate person(s) for that face

    ranked by similarity confidence. The person group/large person group

    should be trained to make it ready for identification. See more in

    [PersonGroup -

    Train](https://docs.microsoft.com/rest/api/faceapi/persongroup/train)

    and [LargePersonGroup -

    Train](https://docs.microsoft.com/rest/api/faceapi/largepersongroup/train).

    <br/>

    Remarks:<br />

    * The algorithm allows more than one face to be identified

    independently at the same request, but no more than 10 faces.

    * Each person in the person group/large person group could have more

    than one face, but no more than 248 faces.

    * Higher face image quality means better identification precision.

    Please consider high-quality faces: frontal, clear, and face size is

    200x200 pixels (100 pixels between eyes) or bigger.

    * Number of candidates returned is restricted by

    maxNumOfCandidatesReturned and confidenceThreshold. If no person is

    identified, the returned candidates will be an empty array.

    * Try [Face - Find

    Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar)

    when you need to find similar faces from a face list/large face list

    instead of a person group/large person group.

    * The ''recognitionModel'' associated with the query faces'' faceIds

    should be the same as the ''recognitionModel'' used by the target person

    group or large person group.

    .'
  signature: identify(face_ids, person_group_id=None, large_person_group_id=None,
    max_num_of_candidates_returned=1, confidence_threshold=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: face_ids
    description: 'Array of query faces faceIds, created by the Face -

      Detect. Each of the faces are identified independently. The valid

      number of faceIds is between [1, 10].'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: person_group_id
    description: 'PersonGroupId of the target person group,

      created by PersonGroup - Create. Parameter personGroupId and

      largePersonGroupId should not be provided at the same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: large_person_group_id
    description: 'LargePersonGroupId of the target large

      person group, created by LargePersonGroup - Create. Parameter

      personGroupId and largePersonGroupId should not be provided at the

      same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: max_num_of_candidates_returned
    description: 'The range of

      maxNumOfCandidatesReturned is between 1 and 100 (default is 1).'
    defaultValue: '1'
    types:
    - <xref:int>
  - name: confidence_threshold
    description: 'Confidence threshold of identification,

      used to judge whether one face belong to one person. The range of

      confidenceThreshold is [0, 1] (default specified by algorithm).'
    defaultValue: None
    types:
    - <xref:float>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.face.models.IdentifyResult>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.verify_face_to_face
  name: verify_face_to_face
  summary: 'Verify whether two faces belong to a same person or whether one face

    belongs to a person.

    <br/>

    Remarks:<br />

    * Higher face image quality means better identification precision.

    Please consider high-quality faces: frontal, clear, and face size is

    200x200 pixels (100 pixels between eyes) or bigger.

    * For the scenarios that are sensitive to accuracy please make your own

    judgment.

    * The ''recognitionModel'' associated with the query faces'' faceIds

    should be the same as the ''recognitionModel'' used by the target face,

    person group or large person group.

    .'
  signature: verify_face_to_face(face_id1, face_id2, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: face_id1
    description: FaceId of the first face, comes from Face - Detect
    isRequired: true
    types:
    - <xref:str>
  - name: face_id2
    description: FaceId of the second face, comes from Face - Detect
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: VerifyResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.VerifyResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.verify_face_to_person
  name: verify_face_to_person
  summary: 'Verify whether two faces belong to a same person. Compares a face Id

    with a Person Id.'
  signature: verify_face_to_person(face_id, person_id, person_group_id=None, large_person_group_id=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: face_id
    description: FaceId of the face, comes from Face - Detect
    isRequired: true
    types:
    - <xref:str>
  - name: person_id
    description: 'Specify a certain person in a person group or a

      large person group. personId is created in PersonGroup Person - Create

      or LargePersonGroup Person - Create.'
    isRequired: true
    types:
    - <xref:str>
  - name: person_group_id
    description: 'Using existing personGroupId and personId for

      fast loading a specified person. personGroupId is created in

      PersonGroup - Create. Parameter personGroupId and largePersonGroupId

      should not be provided at the same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: large_person_group_id
    description: 'Using existing largePersonGroupId and

      personId for fast loading a specified person. largePersonGroupId is

      created in LargePersonGroup - Create. Parameter personGroupId and

      largePersonGroupId should not be provided at the same time.'
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: VerifyResult or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.face.models.VerifyResult>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
attributes:
- uid: azure.cognitiveservices.vision.face.operations.FaceOperations.models
  name: models
  signature: models = <module 'azure.cognitiveservices.vision.face.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
