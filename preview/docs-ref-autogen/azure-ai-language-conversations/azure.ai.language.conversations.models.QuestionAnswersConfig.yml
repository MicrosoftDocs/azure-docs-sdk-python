### YamlMime:PythonClass
uid: azure.ai.language.conversations.models.QuestionAnswersConfig
name: QuestionAnswersConfig
fullName: azure.ai.language.conversations.models.QuestionAnswersConfig
module: azure.ai.language.conversations.models
summary: Parameters to query a knowledge base.
constructor:
  syntax: 'QuestionAnswersConfig(*args: Any, **kwargs: Any)'
variables:
- description: 'Exact QnA ID to fetch from the knowledge base, this field takes priority
    over

    question.'
  name: qna_id
  types:
  - <xref:int>
- description: User question to query against the knowledge base.
  name: question
  types:
  - <xref:str>
- description: Max number of answers to be returned for the question.
  name: top
  types:
  - <xref:int>
- description: Unique identifier for the user.
  name: user_id
  types:
  - <xref:str>
- description: Minimum threshold score for answers, value ranges from 0 to 1.
  name: confidence_threshold
  types:
  - <xref:float>
- description: Context object with previous QnA's information.
  name: answer_context
  types:
  - <xref:azure.ai.language.conversations.models.KnowledgeBaseAnswerContext>
- description: 'Type of ranker to be used. Known values are: "Default" and "QuestionOnly".'
  name: ranker_kind
  types:
  - <xref:str>
  - <xref:azure.ai.language.conversations.models.RankerKind>
- description: Filter QnAs based on given metadata list and knowledge base sources.
  name: filters
  types:
  - <xref:azure.ai.language.conversations.models.QueryFilters>
- description: To configure Answer span prediction feature.
  name: short_answer_options
  types:
  - <xref:azure.ai.language.conversations.models.ShortAnswerConfig>
- description: (Optional) Flag to enable Query over Unstructured Sources.
  name: include_unstructured_sources
  types:
  - <xref:bool>
methods:
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.answer_context
  name: answer_context
  summary: Context object with previous QnA's information.
  signature: 'answer_context: _models.KnowledgeBaseAnswerContext | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.confidence_threshold
  name: confidence_threshold
  summary: Minimum threshold score for answers, value ranges from 0 to 1.
  signature: 'confidence_threshold: float | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.filters
  name: filters
  summary: Filter QnAs based on given metadata list and knowledge base sources.
  signature: 'filters: _models.QueryFilters | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.include_unstructured_sources
  name: include_unstructured_sources
  summary: (Optional) Flag to enable Query over Unstructured Sources.
  signature: 'include_unstructured_sources: bool | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.qna_id
  name: qna_id
  summary: Exact QnA ID to fetch from the knowledge base, this field takes priority
    over question.
  signature: 'qna_id: int | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.question
  name: question
  summary: User question to query against the knowledge base.
  signature: 'question: str | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.ranker_kind
  name: ranker_kind
  summary: '"Default" and "QuestionOnly".'
  signature: 'ranker_kind: str | _models.RankerKind | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.short_answer_options
  name: short_answer_options
  summary: To configure Answer span prediction feature.
  signature: 'short_answer_options: _models.ShortAnswerConfig | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.top
  name: top
  summary: Max number of answers to be returned for the question.
  signature: 'top: int | None'
- uid: azure.ai.language.conversations.models.QuestionAnswersConfig.user_id
  name: user_id
  summary: Unique identifier for the user.
  signature: 'user_id: str | None'
