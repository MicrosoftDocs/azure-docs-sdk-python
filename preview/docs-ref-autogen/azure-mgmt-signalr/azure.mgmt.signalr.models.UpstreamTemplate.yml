### YamlMime:PythonClass
uid: azure.mgmt.signalr.models.UpstreamTemplate
name: UpstreamTemplate
fullName: azure.mgmt.signalr.models.UpstreamTemplate
module: azure.mgmt.signalr.models
inheritances:
- azure.mgmt.signalr._serialization.Model
summary: 'Upstream template item settings. It defines the Upstream URL of the incoming
  requests.

  The template defines the pattern of the event, the hub or the category of the incoming
  request

  that matches current URL template.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'UpstreamTemplate(*, url_template: str, hub_pattern: str | None = None,
    event_pattern: str | None = None, category_pattern: str | None = None, auth: _models.UpstreamAuthSettings
    | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: hub_pattern
    description: "Gets or sets the matching pattern for hub names. If not set, it\
      \ matches\nany hub.\nThere are 3 kind of patterns supported:\n\n<!-- literal_block\
      \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
      : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"default\"\
      , \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\n   1. \"\
      *\", it to matches any hub name.\n   2. Combine multiple hubs with \",\", for\
      \ example \"hub1,hub2\", it matches \"hub1\" and \"hub2\".\n   3. The single\
      \ hub name, for example, \"hub1\", it matches \"hub1\".\n   ````"
    types:
    - <xref:str>
  - name: event_pattern
    description: "Gets or sets the matching pattern for event names. If not set, it\n\
      matches any event.\nThere are 3 kind of patterns supported:\n\n<!-- literal_block\
      \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
      : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"default\"\
      , \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\n   1. \"\
      *\", it to matches any event name.\n   2. Combine multiple events with \",\"\
      , for example \"connect,disconnect\", it matches event\n   ````\n\n\"connect\"\
      \ and \"disconnect\".\n   3. The single event name, for example, \"connect\"\
      , it matches \"connect\"."
    types:
    - <xref:str>
  - name: category_pattern
    description: "Gets or sets the matching pattern for category names. If not set,\
      \ it\nmatches any category.\nThere are 3 kind of patterns supported:\n\n<!--\
      \ literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\":\
      \ [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
      : \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\
      \n   1. \"*\", it to matches any category name.\n   2. Combine multiple categories\
      \ with \",\", for example \"connections,messages\", it matches\n   ````\n\n\
      category \"connections\" and \"messages\".\n   3. The single category name,\
      \ for example, \"connections\", it matches the category \n\n\"connections\"."
    types:
    - <xref:str>
  - name: url_template
    description: 'Gets or sets the Upstream URL template. You can use 3 predefined

      parameters {hub}, {category} {event} inside the template, the value of the Upstream
      URL is

      dynamically calculated when the client request comes in.

      For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with
      a client

      request from hub `chat` connects, it will first POST to this URL:

      `http://example.com/chat/api/connect`. Required.'
    types:
    - <xref:str>
  - name: auth
    description: Upstream auth settings. If not set, no auth is used for upstream
      messages.
    types:
    - <xref:azure.mgmt.signalr.models.UpstreamAuthSettings>
variables:
- description: "Gets or sets the matching pattern for hub names. If not set, it matches\
    \ any\nhub.\nThere are 3 kind of patterns supported:\n\n<!-- literal_block {\"\
    ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [],\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"default\", \"\
    highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\n   1. \"*\", it\
    \ to matches any hub name.\n   2. Combine multiple hubs with \",\", for example\
    \ \"hub1,hub2\", it matches \"hub1\" and \"hub2\".\n   3. The single hub name,\
    \ for example, \"hub1\", it matches \"hub1\".\n   ````"
  name: hub_pattern
  types:
  - <xref:str>
- description: "Gets or sets the matching pattern for event names. If not set, it\
    \ matches\nany event.\nThere are 3 kind of patterns supported:\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"default\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\n   1. \"*\"\
    , it to matches any event name.\n   2. Combine multiple events with \",\", for\
    \ example \"connect,disconnect\", it matches event\n   ````\n\n\"connect\" and\
    \ \"disconnect\".\n   3. The single event name, for example, \"connect\", it matches\
    \ \"connect\"."
  name: event_pattern
  types:
  - <xref:str>
- description: "Gets or sets the matching pattern for category names. If not set,\
    \ it\nmatches any category.\nThere are 3 kind of patterns supported:\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"default\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\n   1. \"*\"\
    , it to matches any category name.\n   2. Combine multiple categories with \"\
    ,\", for example \"connections,messages\", it matches\n   ````\n\ncategory \"\
    connections\" and \"messages\".\n   3. The single category name, for example,\
    \ \"connections\", it matches the category \n\n\"connections\"."
  name: category_pattern
  types:
  - <xref:str>
- description: 'Gets or sets the Upstream URL template. You can use 3 predefined parameters

    {hub}, {category} {event} inside the template, the value of the Upstream URL is
    dynamically

    calculated when the client request comes in.

    For example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with
    a client

    request from hub `chat` connects, it will first POST to this URL:

    `http://example.com/chat/api/connect`. Required.'
  name: url_template
  types:
  - <xref:str>
- description: Upstream auth settings. If not set, no auth is used for upstream messages.
  name: auth
  types:
  - <xref:azure.mgmt.signalr.models.UpstreamAuthSettings>
