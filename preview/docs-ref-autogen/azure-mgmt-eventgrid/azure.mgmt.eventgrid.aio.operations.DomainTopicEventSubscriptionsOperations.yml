### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations
name: DomainTopicEventSubscriptionsOperations
fullName: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations
module: azure.mgmt.eventgrid.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.eventgrid.aio.EventGridManagementClient>'s\n\
  >\n> <xref:domain_topic_event_subscriptions> attribute.\n>"
constructor:
  syntax: DomainTopicEventSubscriptionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update a nested event subscription to a domain topic.


    Asynchronously creates a new event subscription or updates an existing event subscription.'
  signature: 'async begin_create_or_update(resource_group_name: str, domain_name:
    str, topic_name: str, event_subscription_name: str, event_subscription_info: _models.EventSubscription,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.EventSubscription]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: 'Name of the event subscription to be created. Event

      subscription names must be between 3 and 64 characters in length and use alphanumeric
      letters

      only. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_info
    description: 'Event subscription properties containing the destination and

      filter information. Is either a EventSubscription type or a IO[bytes] type.
      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either EventSubscription
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.begin_delete
  name: begin_delete
  summary: 'Delete a nested event subscription for a domain topic.


    Delete a nested existing event subscription for a domain topic.'
  signature: 'async begin_delete(resource_group_name: str, domain_name: str, topic_name:
    str, event_subscription_name: str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription to be deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.begin_update
  name: begin_update
  summary: 'Update a nested event subscription for a domain topic.


    Update an existing event subscription for a domain topic.'
  signature: 'async begin_update(resource_group_name: str, domain_name: str, topic_name:
    str, event_subscription_name: str, event_subscription_update_parameters: _models.EventSubscriptionUpdateParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.EventSubscription]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription to be updated. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_update_parameters
    description: 'Updated event subscription information. Is either

      a EventSubscriptionUpdateParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionUpdateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either EventSubscription
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.get
  name: get
  summary: 'Get a nested event subscription for domain topic.


    Get properties of a nested event subscription for a domain topic.'
  signature: 'async get(resource_group_name: str, domain_name: str, topic_name: str,
    event_subscription_name: str, **kwargs: Any) -> EventSubscription'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription to be found. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: EventSubscription or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscription>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.get_delivery_attributes
  name: get_delivery_attributes
  summary: 'Get delivery attributes for an event subscription for domain topic.


    Get all delivery attributes for an event subscription for domain topic.'
  signature: 'async get_delivery_attributes(resource_group_name: str, domain_name:
    str, topic_name: str, event_subscription_name: str, **kwargs: Any) -> DeliveryAttributeListResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: DeliveryAttributeListResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.DeliveryAttributeListResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.get_full_url
  name: get_full_url
  summary: 'Get full URL of a nested event subscription for domain topic.


    Get the full endpoint URL for a nested event subscription for domain topic.'
  signature: 'async get_full_url(resource_group_name: str, domain_name: str, topic_name:
    str, event_subscription_name: str, **kwargs: Any) -> EventSubscriptionFullUrl'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: event_subscription_name
    description: Name of the event subscription. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: EventSubscriptionFullUrl or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionFullUrl>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.list
  name: list
  summary: 'List all nested event subscriptions for a specific domain topic.


    List all event subscriptions that have been created for a specific domain topic.'
  signature: 'list(resource_group_name: str, domain_name: str, topic_name: str, filter:
    str | None = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[EventSubscription]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: domain_name
    description: Name of the top level domain. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the domain topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either EventSubscription or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.EventSubscription>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventgrid.aio.operations.DomainTopicEventSubscriptionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
