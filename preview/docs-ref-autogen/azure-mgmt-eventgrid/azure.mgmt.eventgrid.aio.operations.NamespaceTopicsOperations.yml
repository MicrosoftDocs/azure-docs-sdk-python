### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations
name: NamespaceTopicsOperations
fullName: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations
module: azure.mgmt.eventgrid.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.eventgrid.aio.EventGridManagementClient>'s\n\
  >\n> <xref:namespace_topics> attribute.\n>"
constructor:
  syntax: NamespaceTopicsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create a namespace topic.


    Asynchronously creates a new namespace topic with the specified parameters.'
  signature: 'async begin_create_or_update(resource_group_name: str, namespace_name:
    str, topic_name: str, namespace_topic_info: _models.NamespaceTopic, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.NamespaceTopic]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the namespace topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_topic_info
    description: 'Namespace topic information. Is either a NamespaceTopic type or
      a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.NamespaceTopic>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either NamespaceTopic
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.NamespaceTopic>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.begin_delete
  name: begin_delete
  summary: 'Delete a namespace topic.


    Delete existing namespace topic.'
  signature: 'async begin_delete(resource_group_name: str, namespace_name: str, topic_name:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the topic. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.begin_regenerate_key
  name: begin_regenerate_key
  summary: 'Regenerate key for a namespace topic.


    Regenerate a shared access key for a namespace topic.'
  signature: 'async begin_regenerate_key(resource_group_name: str, namespace_name:
    str, topic_name: str, regenerate_key_request: _models.TopicRegenerateKeyRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.TopicSharedAccessKeys]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: regenerate_key_request
    description: 'Request body to regenerate key. Is either a

      TopicRegenerateKeyRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicRegenerateKeyRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either TopicSharedAccessKeys
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.TopicSharedAccessKeys>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.begin_update
  name: begin_update
  summary: 'Update a namespace topic.


    Asynchronously updates a namespace topic with the specified parameters.'
  signature: 'async begin_update(resource_group_name: str, namespace_name: str, topic_name:
    str, namespace_topic_update_parameters: _models.NamespaceTopicUpdateParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.NamespaceTopic]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the namespace topic. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_topic_update_parameters
    description: 'Namespace topic update information. Is either a

      NamespaceTopicUpdateParameters type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.NamespaceTopicUpdateParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either NamespaceTopic
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.NamespaceTopic>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.get
  name: get
  summary: 'Get a namespace topic.


    Get properties of a namespace topic.'
  signature: 'async get(resource_group_name: str, namespace_name: str, topic_name:
    str, **kwargs: Any) -> NamespaceTopic'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the namespace topic. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: NamespaceTopic or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.NamespaceTopic>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.list_by_namespace
  name: list_by_namespace
  summary: 'List namespace topics under a namespace.


    List all the namespace topics under a namespace.'
  signature: 'list_by_namespace(resource_group_name: str, namespace_name: str, filter:
    str | None = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[NamespaceTopic]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either NamespaceTopic or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.NamespaceTopic>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.list_shared_access_keys
  name: list_shared_access_keys
  summary: 'List keys for a namespace topic.


    List the two keys used to publish to a namespace topic.'
  signature: 'async list_shared_access_keys(resource_group_name: str, namespace_name:
    str, topic_name: str, **kwargs: Any) -> TopicSharedAccessKeys'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: topic_name
    description: Name of the topic. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TopicSharedAccessKeys or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicSharedAccessKeys>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventgrid.aio.operations.NamespaceTopicsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
