### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.operations.ClientsOperations
name: ClientsOperations
fullName: azure.mgmt.eventgrid.operations.ClientsOperations
module: azure.mgmt.eventgrid.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.eventgrid.EventGridManagementClient>'s\n\
  >\n> <xref:clients> attribute.\n>"
constructor:
  syntax: ClientsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.eventgrid.operations.ClientsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or update a client.


    Create or update a client with the specified parameters.'
  signature: 'begin_create_or_update(resource_group_name: str, namespace_name: str,
    client_name: str, client_info: _models.Client, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.Client]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: client_name
    description: The client name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: client_info
    description: Client information. Is either a Client type or a IO[bytes] type.
      Required.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.Client>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Client or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.eventgrid.models.Client>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.ClientsOperations.begin_delete
  name: begin_delete
  summary: 'Delete a client.


    Delete an existing client.'
  signature: 'begin_delete(resource_group_name: str, namespace_name: str, client_name:
    str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: client_name
    description: Name of the client. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.ClientsOperations.get
  name: get
  summary: 'Get a client.


    Get properties of a client.'
  signature: 'get(resource_group_name: str, namespace_name: str, client_name: str,
    **kwargs: Any) -> Client'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: client_name
    description: Name of the client. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Client or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.Client>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.eventgrid.operations.ClientsOperations.list_by_namespace
  name: list_by_namespace
  summary: 'List all permission bindings under a namespace.


    Get all the permission bindings under a namespace.'
  signature: 'list_by_namespace(resource_group_name: str, namespace_name: str, filter:
    str | None = None, top: int | None = None, **kwargs: Any) -> Iterable[Client]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Name of the namespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.
      Default value is

      None.'
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page. Default value is None.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either Client or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.eventgrid.models.Client>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.eventgrid.operations.ClientsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
