### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.changefeed.ChangeFeedClient.from_connection_string
  - azure.storage.blob.changefeed.ChangeFeedClient.list_changes
  class: azure.storage.blob.changefeed.ChangeFeedClient
  example:
  - "Creating the ChangeFeedClient from a URL to a public blob (no auth needed).<!--[!code-python[Main](les\\\
    change_feed_samples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\":\
    \ [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\18\\\\azure-storage-blob-changefeed-12.0.0b1\\\\samples\\\
    \\change_feed_samples.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
    , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
    \n   cf_client = ChangeFeedClient(\"http://{}.blob.core.windows.net\".format(self.ACCOUNT_NAME),\n\
    \                                credential=self.ACCOUNT_KEY)\n\n   ````\n"
  fullName: azure.storage.blob.changefeed.ChangeFeedClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.storage.blob.changefeed
  name: ChangeFeedClient
  summary: A client to interact with a specific account change feed.
  syntax:
    content: ChangeFeedClient(account_url, credential=None, **kwargs)
    parameters:
    - description: The URI to the storage account.
      id: account_url
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string,
        an account

        shared access key, or an instance of a TokenCredentials class from azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    - description: The hostname of the secondary endpoint.
      id: secondary_hostname
      type:
      - str
  type: class
  uid: azure.storage.blob.changefeed.ChangeFeedClient
- class: azure.storage.blob.changefeed.ChangeFeedClient
  fullName: azure.storage.blob.changefeed.ChangeFeedClient.from_connection_string
  langs:
  - python
  module: azure.storage.blob.changefeed
  name: from_connection_string(conn_str, credential=None, **kwargs)
  namewithoutparameters: from_connection_string
  summary: Create ChangeFeedClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, credential=None, **kwargs)
    parameters:
    - description: A connection string to an Azure Storage account.
      id: conn_str
      isRequired: true
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token, or the connection string already has
        shared

        access key values. The value can be a SAS token string, an account shared
        access

        key, or an instance of a TokenCredentials class from azure.identity.

        Credentials provided here will take precedence over those in the connection
        string.'
      id: credential
      isRequired: true
    - defaultValue: None
      id: credential
    return:
      description: A change feed client.
      type:
      - azure.storage.blob.changefeed.ChangeFeedClient
  type: method
  uid: azure.storage.blob.changefeed.ChangeFeedClient.from_connection_string
- class: azure.storage.blob.changefeed.ChangeFeedClient
  example:
  - "List all change feed events.<!--[!code-python[Main](les\\change_feed_samples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\18\\\\azure-storage-blob-changefeed-12.0.0b1\\\\samples\\\\change_feed_samples.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   cf_client = ChangeFeedClient(\"\
    http://{}.blob.core.windows.net\".format(self.ACCOUNT_NAME),\n               \
    \                 credential=self.ACCOUNT_KEY)\n   change_feed = cf_client.list_changes()\n\
    \n   # print all events\n   for event in change_feed:\n       print(event)\n \
    \  ND list_all_events]\n\n   list_range_of_events(self):\n   cf_client = ChangeFeedClient(\"\
    http://{}.blob.core.windows.net\".format(self.ACCOUNT_NAME),\n               \
    \                 credential=self.ACCOUNT_KEY)\n   start_time = datetime(2019,\
    \ 1, 1)\n   end_time = datetime(2020, 3, 4)\n   change_feed = cf_client.list_changes(start_time=start_time,\
    \ end_time=end_time)\n\n   # print first page of events\n   for event in change_feed:\n\
    \       print(event)\n\n   list_events_using_continuation_token(self):\n\n   #\
    \ Instantiate a ChangeFeedClient\n   cf_client = ChangeFeedClient(\"http://{}.blob.core.windows.net\"\
    .format(self.ACCOUNT_NAME),\n                                credential=self.ACCOUNT_KEY)\n\
    \   # to get continuation token\n   change_feed = cf_client.list_changes(results_per_page=2).by_page()\n\
    \   change_feed_page1 = next(change_feed)\n   for event in change_feed_page1:\n\
    \       print(event)\n   token = change_feed.continuation_token\n\n   # restart\
    \ using the continuation token\n   change_feed2 = cf_client.list_changes(results_per_page=3).by_page(continuation_token=token)\n\
    \   change_feed_page2 = next(change_feed2)\n   for event in change_feed_page2:\n\
    \       print(event)\n\n\n   e__ == '__main__':\n   le = ChangeFeedSamples()\n\
    \   le.list_events_by_page()\n   le.list_all_events()\n   le.list_range_of_events()\n\
    \   le.list_events_using_continuation_token()\n\n\n   ````\n\nList change feed\
    \ events by page.<!--[!code-python[Main](les\\change_feed_samples.py )]-->\n\n\
    <!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\18\\\\\
    azure-storage-blob-changefeed-12.0.0b1\\\\samples\\\\change_feed_samples.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   # [START create_change_feed_client]\n\
    \   cf_client = ChangeFeedClient(\"http://{}.blob.core.windows.net\".format(self.ACCOUNT_NAME),\n\
    \                                credential=self.ACCOUNT_KEY)\n   # [END create_change_feed_client]\n\
    \n   change_feed = cf_client.list_changes(results_per_page=10).by_page()\n\n \
    \  # print first page of events\n   change_feed_page1 = next(change_feed)\n  \
    \ for event in change_feed_page1:\n       print(event)\n\n   # print second page\
    \ of events\n   change_feed_page2 = next(change_feed)\n   for event in change_feed_page2:\n\
    \       print(event)\n\n   ````\n"
  fullName: azure.storage.blob.changefeed.ChangeFeedClient.list_changes
  langs:
  - python
  module: azure.storage.blob.changefeed
  name: list_changes(**kwargs)
  namewithoutparameters: list_changes
  summary: 'Returns a generator to list the change feed events.

    The generator will lazily follow the continuation tokens returned by

    the service.'
  syntax:
    content: list_changes(**kwargs)
    parameters:
    - description: Filters the results to return only events which happened after
        this time.
      id: start_time
      isRequired: true
      type:
      - datetime
    - description: Filters the results to return only events which happened before
        this time.
      id: end_time
      isRequired: true
      type:
      - datetime
    - description: The page size when list events by page using by_page() method on
        the generator.
      id: results_per_page
      isRequired: true
      type:
      - int
    return:
      description: An iterable (auto-paging) response of events whose type is dictionary.
      type:
      - azure.core.paging.ItemPaged[dict]
  type: method
  uid: azure.storage.blob.changefeed.ChangeFeedClient.list_changes
references:
- fullName: azure.storage.blob.changefeed.ChangeFeedClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, credential=None, **kwargs)
  parent: azure.storage.blob.changefeed.ChangeFeedClient
  uid: azure.storage.blob.changefeed.ChangeFeedClient.from_connection_string
- fullName: azure.storage.blob.changefeed.ChangeFeedClient.list_changes
  isExternal: false
  name: list_changes(**kwargs)
  parent: azure.storage.blob.changefeed.ChangeFeedClient
  uid: azure.storage.blob.changefeed.ChangeFeedClient.list_changes
- fullName: azure.core.paging.ItemPaged[dict]
  name: ItemPaged[dict]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: dict
    name: dict
    uid: dict
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[dict]
