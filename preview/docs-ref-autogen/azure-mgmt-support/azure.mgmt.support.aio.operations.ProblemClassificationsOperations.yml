### YamlMime:PythonClass
uid: azure.mgmt.support.aio.operations.ProblemClassificationsOperations
name: ProblemClassificationsOperations
fullName: azure.mgmt.support.aio.operations.ProblemClassificationsOperations
module: azure.mgmt.support.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.support.aio.MicrosoftSupport>'s\n\
  >\n> <xref:problem_classifications> attribute.\n>"
constructor:
  syntax: ProblemClassificationsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.support.aio.operations.ProblemClassificationsOperations.classify_problems
  name: classify_problems
  summary: Classify the right problem classifications (categories) available for a
    specific Azure service.
  signature: 'async classify_problems(problem_service_name: str, problem_classifications_classification_input:
    _models.ProblemClassificationsClassificationInput, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.ProblemClassificationsClassificationOutput'
  parameters:
  - name: problem_service_name
    description: 'Name of the Azure service for which the problem classifications

      need to be retrieved. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: problem_classifications_classification_input
    description: 'Input to check. Is either a

      ProblemClassificationsClassificationInput type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.support.models.ProblemClassificationsClassificationInput>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: ProblemClassificationsClassificationOutput or the result of cls(response)
    types:
    - <xref:azure.mgmt.support.models.ProblemClassificationsClassificationOutput>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.aio.operations.ProblemClassificationsOperations.get
  name: get
  summary: Get problem classification details for a specific Azure service.
  signature: 'async get(service_name: str, problem_classification_name: str, **kwargs:
    Any) -> ProblemClassification'
  parameters:
  - name: service_name
    description: 'Name of the Azure service for which the problem classifications
      need to be

      retrieved. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: problem_classification_name
    description: Name of problem classification. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ProblemClassification or the result of cls(response)
    types:
    - <xref:azure.mgmt.support.models.ProblemClassification>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.support.aio.operations.ProblemClassificationsOperations.list
  name: list
  summary: 'Lists all the problem classifications (categories) available for a specific
    Azure service.

    Always use the service and problem classifications obtained programmatically.
    This practice

    ensures that you always have the most recent set of service and problem classification
    Ids.'
  signature: 'list(service_name: str, **kwargs: Any) -> AsyncIterable[ProblemClassification]'
  parameters:
  - name: service_name
    description: 'Name of the Azure service for which the problem classifications
      need to be

      retrieved. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either ProblemClassification or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.support.models.ProblemClassification>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.support.aio.operations.ProblemClassificationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.support.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\support\\models\\__init__.py'>
