### YamlMime:PythonClass
uid: azure.ai.vision.imageanalysis.models.SmartCropsResult
name: SmartCropsResult
fullName: azure.ai.vision.imageanalysis.models.SmartCropsResult
module: azure.ai.vision.imageanalysis.models
inheritances:
- azure.ai.vision.imageanalysis._model_base.Model
summary: 'Smart cropping result. A list of crop regions at the desired as aspect ratios
  (if provided)

  that can be used as image thumbnails.

  These regions preserve as much content as possible from the analyzed image, with
  priority given

  to detected faces.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'SmartCropsResult(*args: Any, **kwargs: Any)'
variables:
- description: A list of crop regions. Required.
  name: list
  types:
  - <xref:list>[<xref:azure.ai.vision.imageanalysis.models.CropRegion>]
methods:
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.imageanalysis.models.SmartCropsResult.list
  name: list
  summary: A list of crop regions. Required.
  signature: 'list: List[_models.CropRegion]'
