### YamlMime:PythonClass
uid: azure.ai.vision.imageanalysis.models.TagsResult
name: TagsResult
fullName: azure.ai.vision.imageanalysis.models.TagsResult
module: azure.ai.vision.imageanalysis.models
inheritances:
- azure.ai.vision.imageanalysis._model_base.Model
summary: 'A list of entities observed in the image. Tags can be physical objects,
  living being, scenery,

  or actions

  that appear in the image.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'TagsResult(*args: Any, **kwargs: Any)'
variables:
- description: A list of tags. Required.
  name: list
  types:
  - <xref:list>[<xref:azure.ai.vision.imageanalysis.models.DetectedTag>]
methods:
- uid: azure.ai.vision.imageanalysis.models.TagsResult.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.vision.imageanalysis.models.TagsResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.vision.imageanalysis.models.TagsResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.vision.imageanalysis.models.TagsResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.vision.imageanalysis.models.TagsResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.vision.imageanalysis.models.TagsResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.vision.imageanalysis.models.TagsResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.imageanalysis.models.TagsResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.vision.imageanalysis.models.TagsResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.vision.imageanalysis.models.TagsResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.vision.imageanalysis.models.TagsResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.vision.imageanalysis.models.TagsResult.list
  name: list
  summary: A list of tags. Required.
  signature: 'list: List[_models.DetectedTag]'
