### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.aio.AutoLockRenew.register
  - azure.servicebus.aio.AutoLockRenew.shutdown
  class: azure.servicebus.aio.AutoLockRenew
  example:
  - "Automatically renew a message lock<!--[!code-python[Main](les\\async_samples\\\
    sample_code_servicebus_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b4\\\\samples\\\\async_samples\\\
    \\sample_code_servicebus_async.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n   from azure.servicebus.aio import AutoLockRenew\n\n   lock_renewal\
    \ = AutoLockRenew()\n   async with servicebus_receiver:\n       async for message\
    \ in servicebus_receiver:\n           lock_renewal.register(message, timeout=60)\n\
    \           await process_message(message)\n           await message.complete()\n\
    \n   ````\n\nAutomatically renew a session lock<!--[!code-python[Main](les\\async_samples\\\
    sample_code_servicebus_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b4\\\\samples\\\\async_samples\\\
    \\sample_code_servicebus_async.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n       from azure.servicebus.aio import AutoLockRenew\n\n    \
    \   lock_renewal = AutoLockRenew()\n       async with servicebus_client.get_queue_session_receiver(queue_name=queue_name,\
    \ session_id=session_id) as receiver:\n           session = receiver.session\n\
    \           # Auto renew session lock for 2 minutes\n           lock_renewal.register(session,\
    \ timeout=120)\n           async for message in receiver:\n               await\
    \ process_message(message)\n               await message.complete()\n\n   ````\n"
  fullName: azure.servicebus.aio.AutoLockRenew
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus.aio
  name: AutoLockRenew
  summary: 'Auto lock renew.


    An asynchronous AutoLockRenew handler for renewing the lock

    tokens of messages and/or sessions in the background.'
  syntax:
    content: AutoLockRenew(loop=None)
    parameters:
    - description: An async event loop.
      id: loop
      type:
      - asyncio.EventLoop
  type: class
  uid: azure.servicebus.aio.AutoLockRenew
- class: azure.servicebus.aio.AutoLockRenew
  fullName: azure.servicebus.aio.AutoLockRenew.register
  langs:
  - python
  module: azure.servicebus.aio
  name: register(renewable, timeout=300)
  namewithoutparameters: register
  summary: Register a renewable entity for automatic lock renewal.
  syntax:
    content: register(renewable, timeout=300)
    parameters:
    - description: A locked entity that needs to be renewed.
      id: renewable
      isRequired: true
      type:
      - azure.servicebus.aio.ReceivedMessage
      - azure.servicebus.aio.Session
    - defaultValue: '300'
      description: 'A time in seconds that the lock should be maintained for.

        Default value is 300 (5 minutes).'
      id: timeout
      type:
      - float
  type: method
  uid: azure.servicebus.aio.AutoLockRenew.register
- class: azure.servicebus.aio.AutoLockRenew
  fullName: azure.servicebus.aio.AutoLockRenew.shutdown
  langs:
  - python
  module: azure.servicebus.aio
  name: shutdown()
  namewithoutparameters: shutdown
  summary: Cancel remaining open lock renewal futures.
  syntax:
    content: shutdown()
    parameters: []
  type: method
  uid: azure.servicebus.aio.AutoLockRenew.shutdown
references:
- fullName: azure.servicebus.aio.AutoLockRenew.register
  isExternal: false
  name: register(renewable, timeout=300)
  parent: azure.servicebus.aio.AutoLockRenew
  uid: azure.servicebus.aio.AutoLockRenew.register
- fullName: azure.servicebus.aio.AutoLockRenew.shutdown
  isExternal: false
  name: shutdown()
  parent: azure.servicebus.aio.AutoLockRenew
  uid: azure.servicebus.aio.AutoLockRenew.shutdown
