### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.AutoMLVertical
name: AutoMLVertical
fullName: azure.mgmt.machinelearningservices.models.AutoMLVertical
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices._serialization.Model
summary: "AutoML vertical class.\nBase class for AutoML verticals - TableVertical/ImageVertical/NLPVertical.\n\
  \n   You probably want to use the sub-classes and not this class directly. Known\
  \ sub-classes are:\n   Classification, Forecasting, ImageClassification, ImageClassificationMultilabel,\n\
  \   ImageInstanceSegmentation, ImageObjectDetection, Regression, TextClassification,\n\
  \   TextClassificationMultilabel, TextNer\n\n   All required parameters must be\
  \ populated in order to send to Azure.\n\n   ivar log_verbosity:\n      Log verbosity\
  \ for the job. Known values are: \"NotSet\", \"Debug\", \"Info\",\n      \"Warning\"\
  , \"Error\", and \"Critical\".\n\n   vartype log_verbosity:\n      str or ~azure.mgmt.machinelearningservices.models.LogVerbosity\n\
  \n   ivar target_column_name:\n      Target column name: This is prediction values\
  \ column.\n      Also known as label column name in context of classification tasks.\n\
  \n   vartype target_column_name:\n      str\n\n   ivar task_type:\n      [Required]\
  \ Task type for AutoMLJob. Required. Known values are:\n      \"Classification\"\
  , \"Regression\", \"Forecasting\", \"ImageClassification\",\n      \"ImageClassificationMultilabel\"\
  , \"ImageObjectDetection\", \"ImageInstanceSegmentation\",\n      \"TextClassification\"\
  , \"TextClassificationMultilabel\", and \"TextNER\".\n\n   vartype task_type:\n\
  \      str or ~azure.mgmt.machinelearningservices.models.TaskType\n\n   ivar training_data:\n\
  \      [Required] Training data input. Required.\n\n   vartype training_data:\n\
  \      ~azure.mgmt.machinelearningservices.models.MLTableJobInput"
constructor:
  syntax: 'AutoMLVertical(*, training_data: _models.MLTableJobInput, log_verbosity:
    str | _models.LogVerbosity | None = None, target_column_name: str | None = None,
    **kwargs)'
