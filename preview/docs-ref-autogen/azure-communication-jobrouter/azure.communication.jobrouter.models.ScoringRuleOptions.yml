### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.ScoringRuleOptions
name: ScoringRuleOptions
fullName: azure.communication.jobrouter.models.ScoringRuleOptions
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter._model_base.Model
summary: Encapsulates all options that can be passed as parameters for scoring rule
  with BestWorkerMode.
constructor:
  syntax: 'ScoringRuleOptions(*args: Any, **kwargs: Any)'
variables:
- description: 'Set batch size when ''isBatchScoringEnabled'' is set to true. Defaults
    to 20 if

    not configured.'
  name: batch_size
  types:
  - <xref:int>
- description: 'List of extra parameters from a job that will be sent as part of the

    payload to scoring rule. If not set, a job''s labels (sent in the payload as `job`)
    and a

    job''s worker selectors (sent in the payload as `selectors`) are added to the
    payload of the

    scoring rule by default. Note: Worker labels are always sent with scoring payload.'
  name: scoring_parameters
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.communication.jobrouter.models.ScoringRuleParameterSelector>]
- description: 'If set to true, will score workers in batches, and the

    parameter name of the worker labels will be sent as `workers`. By default, set
    to false and

    the parameter name for the worker labels will be sent as `worker`. Note: If enabled,
    use

    ''batchSize'' to set batch size.'
  name: is_batch_scoring_enabled
  types:
  - <xref:bool>
- description: If false, will sort scores by ascending order. By default, set to true.
  name: descending_order
  types:
  - <xref:bool>
methods:
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.batch_size
  name: batch_size
  summary: Set batch size when 'isBatchScoringEnabled' is set to true. Defaults to
    20 if not configured.
  signature: 'batch_size: int | None'
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.descending_order
  name: descending_order
  summary: If false, will sort scores by ascending order. By default, set to true.
  signature: 'descending_order: bool | None'
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.is_batch_scoring_enabled
  name: is_batch_scoring_enabled
  summary: 'If set to true, will score workers in batches, and the parameter name
    of the worker labels will

    be sent as `workers`. By default, set to false and the parameter name for the
    worker labels

    will be sent as `worker`. Note: If enabled, use ''batchSize'' to set batch size.'
  signature: 'is_batch_scoring_enabled: bool | None'
- uid: azure.communication.jobrouter.models.ScoringRuleOptions.scoring_parameters
  name: scoring_parameters
  summary: 'List of extra parameters from a job that will be sent as part of the payload
    to scoring rule.

    If not set, a job''s labels (sent in the payload as `job`) and a job''s worker
    selectors

    (sent in the payload as `selectors`) are added to the payload of the scoring rule
    by

    default. Note: Worker labels are always sent with scoring payload.'
  signature: 'scoring_parameters: List[str | _models.ScoringRuleParameterSelector]
    | None'
