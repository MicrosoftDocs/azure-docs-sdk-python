### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.RouterQueue
name: RouterQueue
fullName: azure.communication.jobrouter.models.RouterQueue
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter._model_base.Model
summary: 'A queue that can contain jobs to be routed.


  Readonly variables are only populated by the server, and will be ignored when sending
  a request.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'RouterQueue(*args: Any, **kwargs: Any)'
variables:
- description: The entity tag for this resource. Required.
  name: etag
  types:
  - <xref:str>
- description: Id of a queue. Required.
  name: id
  types:
  - <xref:str>
- description: Friendly name of this queue.
  name: name
  types:
  - <xref:str>
- description: 'Id of a distribution policy that will determine how a job is

    distributed to workers.'
  name: distribution_policy_id
  types:
  - <xref:str>
- description: 'A set of key/value pairs that are identifying attributes used by the
    rules

    engines to make decisions. Values must be primitive values - number, string, boolean.'
  name: labels
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: 'Id of an exception policy that determines various job escalation

    rules.'
  name: exception_policy_id
  types:
  - <xref:str>
methods:
- uid: azure.communication.jobrouter.models.RouterQueue.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.RouterQueue.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.RouterQueue.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.RouterQueue.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.RouterQueue.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.RouterQueue.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.RouterQueue.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.RouterQueue.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.RouterQueue.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.RouterQueue.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.RouterQueue.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.RouterQueue.distribution_policy_id
  name: distribution_policy_id
  summary: Id of a distribution policy that will determine how a job is distributed
    to workers.
  signature: 'distribution_policy_id: str | None'
- uid: azure.communication.jobrouter.models.RouterQueue.etag
  name: etag
  summary: The entity tag for this resource. Required.
  signature: 'etag: str'
- uid: azure.communication.jobrouter.models.RouterQueue.exception_policy_id
  name: exception_policy_id
  summary: Id of an exception policy that determines various job escalation rules.
  signature: 'exception_policy_id: str | None'
- uid: azure.communication.jobrouter.models.RouterQueue.id
  name: id
  summary: Id of a queue. Required.
  signature: 'id: str'
- uid: azure.communication.jobrouter.models.RouterQueue.labels
  name: labels
  summary: 'A set of key/value pairs that are identifying attributes used by the rules
    engines to make

    decisions. Values must be primitive values - number, string, boolean.'
  signature: 'labels: Dict[str, Any] | None'
- uid: azure.communication.jobrouter.models.RouterQueue.name
  name: name
  summary: Friendly name of this queue.
  signature: 'name: str | None'
