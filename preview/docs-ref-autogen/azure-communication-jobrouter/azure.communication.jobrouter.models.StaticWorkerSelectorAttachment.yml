### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment
name: StaticWorkerSelectorAttachment
fullName: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter.models._models.WorkerSelectorAttachment
summary: 'Describes a worker selector that will be attached to a job.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'StaticWorkerSelectorAttachment(*args: Any, **kwargs: Any)'
variables:
- description: The worker selector to attach. Required.
  name: worker_selector
  types:
  - <xref:azure.communication.jobrouter.models.RouterWorkerSelector>
- description: 'The type discriminator describing the type of worker selector attachment.
    Required.

    Discriminator value for StaticWorkerSelectorAttachment.'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.communication.jobrouter.models.STATIC>
methods:
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.clear
  name: clear
  signature: clear() -> None
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.copy
  name: copy
  signature: copy() -> Model
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.kind
  name: kind
  summary: 'The type discriminator describing the type of worker selector attachment.
    Required.

    Discriminator value for StaticWorkerSelectorAttachment.'
  signature: 'kind: STATIC: ''static''>]'
- uid: azure.communication.jobrouter.models.StaticWorkerSelectorAttachment.worker_selector
  name: worker_selector
  summary: The worker selector to attach. Required.
  signature: 'worker_selector: _models.RouterWorkerSelector'
