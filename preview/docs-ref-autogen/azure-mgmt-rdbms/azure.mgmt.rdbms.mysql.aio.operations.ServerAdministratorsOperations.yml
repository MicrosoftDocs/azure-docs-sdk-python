### YamlMime:PythonClass
uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations
name: ServerAdministratorsOperations
fullName: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations
module: azure.mgmt.rdbms.mysql.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.rdbms.mysql.aio.MySQLManagementClient>'s\n\
  >\n> <xref:server_administrators> attribute.\n>"
constructor:
  syntax: ServerAdministratorsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates or update active directory administrator on an existing server.
    The update action will

    overwrite the existing administrator.'
  signature: 'async begin_create_or_update(resource_group_name: str, server_name:
    str, properties: _models.ServerAdministratorResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.ServerAdministratorResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: properties
    description: 'The required parameters for creating or updating an AAD server

      administrator. Is either a ServerAdministratorResource type or a IO[bytes] type.
      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql.models.ServerAdministratorResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ServerAdministratorResource
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.rdbms.mysql.models.ServerAdministratorResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations.begin_delete
  name: begin_delete
  summary: Deletes server active directory administrator.
  signature: 'async begin_delete(resource_group_name: str, server_name: str, **kwargs:
    Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations.get
  name: get
  summary: Gets information about a AAD server administrator.
  signature: 'async get(resource_group_name: str, server_name: str, **kwargs: Any)
    -> ServerAdministratorResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ServerAdministratorResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.rdbms.mysql.models.ServerAdministratorResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations.list
  name: list
  summary: Returns a list of server Administrators.
  signature: 'list(resource_group_name: str, server_name: str, **kwargs: Any) -> AsyncIterable[ServerAdministratorResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either ServerAdministratorResource
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.rdbms.mysql.models.ServerAdministratorResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerAdministratorsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.rdbms.mysql.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\rdbms\\mysql\\models\\__init__.py'>
