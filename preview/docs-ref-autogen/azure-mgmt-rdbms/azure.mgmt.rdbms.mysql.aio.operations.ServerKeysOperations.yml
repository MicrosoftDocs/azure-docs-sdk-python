### YamlMime:PythonClass
uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations
name: ServerKeysOperations
fullName: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations
module: azure.mgmt.rdbms.mysql.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.rdbms.mysql.aio.MySQLManagementClient>'s\n\
  >\n> <xref:server_keys> attribute.\n>"
constructor:
  syntax: ServerKeysOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates a MySQL Server key.
  signature: 'async begin_create_or_update(server_name: str, key_name: str, resource_group_name:
    str, parameters: _models.ServerKey, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.ServerKey]'
  parameters:
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: 'The name of the MySQL Server key to be operated on (updated or created).

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The requested MySQL Server key resource state. Is either a ServerKey
      type or

      a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql.models.ServerKey>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of AsyncLROPoller that returns either ServerKey or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.rdbms.mysql.models.ServerKey>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations.begin_delete
  name: begin_delete
  summary: Deletes the MySQL Server key with the given name.
  signature: 'async begin_delete(server_name: str, key_name: str, resource_group_name:
    str, **kwargs: Any) -> AsyncLROPoller[None]'
  parameters:
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the MySQL Server key to be deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations.get
  name: get
  summary: Gets a MySQL Server key.
  signature: 'async get(resource_group_name: str, server_name: str, key_name: str,
    **kwargs: Any) -> ServerKey'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: key_name
    description: The name of the MySQL Server key to be retrieved. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ServerKey or the result of cls(response)
    types:
    - <xref:azure.mgmt.rdbms.mysql.models.ServerKey>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations.list
  name: list
  summary: Gets a list of  Server keys.
  signature: 'list(resource_group_name: str, server_name: str, **kwargs: Any) -> AsyncIterable[ServerKey]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either ServerKey or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.rdbms.mysql.models.ServerKey>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.rdbms.mysql.aio.operations.ServerKeysOperations.models
  name: models
  signature: models = <module 'azure.mgmt.rdbms.mysql.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\rdbms\\mysql\\models\\__init__.py'>
