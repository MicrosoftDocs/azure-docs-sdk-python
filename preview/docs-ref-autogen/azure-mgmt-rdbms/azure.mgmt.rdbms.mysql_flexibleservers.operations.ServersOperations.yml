### YamlMime:PythonClass
uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations
name: ServersOperations
fullName: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations
module: azure.mgmt.rdbms.mysql_flexibleservers.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.rdbms.mysql_flexibleservers.MySQLManagementClient>'s\n\
  >\n> <xref:servers> attribute.\n>"
constructor:
  syntax: ServersOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_create
  name: begin_create
  summary: 'Creates a new server or updates an existing server. The update action
    will overwrite the

    existing server.'
  signature: 'begin_create(resource_group_name: str, server_name: str, parameters:
    _models.Server, *, content_type: str = ''application/json'', **kwargs: Any) ->
    LROPoller[_models.Server]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The required parameters for creating or updating a server. Is either
      a

      Server type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Server or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_delete
  name: begin_delete
  summary: Deletes a server.
  signature: 'begin_delete(resource_group_name: str, server_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_failover
  name: begin_failover
  summary: Manual failover a server.
  signature: 'begin_failover(resource_group_name: str, server_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_reset_gtid
  name: begin_reset_gtid
  summary: Resets GTID on a server.
  signature: 'begin_reset_gtid(resource_group_name: str, server_name: str, parameters:
    _models.ServerGtidSetParameter, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The required parameters for resetting GTID on a server. Is either
      a

      ServerGtidSetParameter type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.ServerGtidSetParameter>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_restart
  name: begin_restart
  summary: Restarts a server.
  signature: 'begin_restart(resource_group_name: str, server_name: str, parameters:
    _models.ServerRestartParameter, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The required parameters for restarting a server. Is either a

      ServerRestartParameter type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.ServerRestartParameter>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_start
  name: begin_start
  summary: Starts a server.
  signature: 'begin_start(resource_group_name: str, server_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_stop
  name: begin_stop
  summary: Stops a server.
  signature: 'begin_stop(resource_group_name: str, server_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.begin_update
  name: begin_update
  summary: 'Updates an existing server. The request body can contain one to many of
    the properties present

    in the normal server definition.'
  signature: 'begin_update(resource_group_name: str, server_name: str, parameters:
    _models.ServerForUpdate, *, content_type: str = ''application/json'', **kwargs:
    Any) -> LROPoller[_models.Server]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The required parameters for updating a server. Is either a ServerForUpdate

      type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.ServerForUpdate>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: An instance of LROPoller that returns either Server or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.get
  name: get
  summary: Gets information about a server.
  signature: 'get(resource_group_name: str, server_name: str, **kwargs: Any) -> Server'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Server or the result of cls(response)
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.list
  name: list
  summary: List all the servers in a given subscription.
  signature: 'list(**kwargs: Any) -> Iterable[Server]'
  return:
    description: An iterator like instance of either Server or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.list_by_resource_group
  name: list_by_resource_group
  summary: List all the servers in a given resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[Server]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either Server or the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.Server>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.validate_estimate_high_availability
  name: validate_estimate_high_availability
  summary: Validate a deployment of high availability.
  signature: 'validate_estimate_high_availability(resource_group_name: str, server_name:
    str, parameters: _models.HighAvailabilityValidationEstimation, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.HighAvailabilityValidationEstimation'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The required parameters for validation of high availability deployment.
      Is

      either a HighAvailabilityValidationEstimation type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.HighAvailabilityValidationEstimation>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: HighAvailabilityValidationEstimation or the result of cls(response)
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.HighAvailabilityValidationEstimation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.ServersOperations.models
  name: models
  signature: models = <module 'azure.mgmt.rdbms.mysql_flexibleservers.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\rdbms\\mysql_flexibleservers\\models\\__init__.py'>
