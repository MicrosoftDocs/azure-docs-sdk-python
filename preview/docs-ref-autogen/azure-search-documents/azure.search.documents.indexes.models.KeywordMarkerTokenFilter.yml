### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.search.documents.indexes.models.KeywordMarkerTokenFilter
  fullName: azure.search.documents.indexes.models.KeywordMarkerTokenFilter
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.search.documents.indexes._internal._generated.models._models_py3.TokenFilter
  langs:
  - python
  module: azure.search.documents.indexes.models
  name: KeywordMarkerTokenFilter
  summary: 'Marks terms as keywords. This token filter is implemented using Apache
    Lucene.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'KeywordMarkerTokenFilter(*, name: str, keywords: typing.List[str], ignore_case:
      typing.Union[bool, NoneType] = False, **kwargs)'
    parameters:
    - description: 'Required. Identifies the concrete type of the token filter.Constant
        filled

        by server.'
      id: odata_type
      type:
      - str
    - description: 'Required. The name of the token filter. It must only contain letters,
        digits,

        spaces, dashes or underscores, can only start and end with alphanumeric characters,
        and is

        limited to 128 characters.'
      id: name
      type:
      - str
    - description: Required. A list of words to mark as keywords.
      id: keywords
      type:
      - list[str]
    - description: 'A value indicating whether to ignore case. If true, all words
        are converted

        to lower case first. Default is false.'
      id: ignore_case
      type:
      - bool
  type: class
  uid: azure.search.documents.indexes.models.KeywordMarkerTokenFilter
references:
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
