### YamlMime:PythonClass
uid: azure.search.documents.aio.AsyncSearchItemPaged
name: AsyncSearchItemPaged
fullName: azure.search.documents.aio.AsyncSearchItemPaged
module: azure.search.documents.aio
inheritances:
- azure.core.async_paging.AsyncItemPaged
constructor:
  syntax: AsyncSearchItemPaged(*args, **kwargs)
methods:
- uid: azure.search.documents.aio.AsyncSearchItemPaged.by_page
  name: by_page
  summary: Get an async iterator of pages of objects, instead of an async iterator
    of objects.
  signature: 'by_page(continuation_token: str | None = None) -> AsyncIterator[AsyncIterator[ReturnType]]'
  parameters:
  - name: continuation_token
    description: 'An opaque continuation token. This value can be retrieved from the

      continuation_token field of a previous generator object. If specified,

      this generator will begin returning results from this point.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An async iterator of pages (themselves async iterator of objects)
    types:
    - <xref:typing.AsyncIterator>[<xref:typing.AsyncIterator>[<xref:ReturnType>]]
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_answers
  name: get_answers
  summary: 'Return semantic answers. Only included if the semantic ranker is used

    and answers are requested in the search query via the query_answer parameter.'
  signature: async get_answers() -> List[QueryAnswerResult] | None
  return:
    description: Answers.
    types:
    - <xref:list>[<xref:azure.search.documents.QueryAnswerResult>]
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_count
  name: get_count
  summary: 'Return the count of results if *include_total_count* was

    set for the query.'
  signature: async get_count() -> int
  return:
    description: Count of results.
    types:
    - <xref:int>
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_coverage
  name: get_coverage
  summary: 'Return the coverage percentage, if *minimum_coverage* was

    specificied for the query.'
  signature: async get_coverage() -> float
  return:
    description: Coverage percentage.
    types:
    - <xref:float>
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_facets
  name: get_facets
  summary: Return any facet results if faceting was requested.
  signature: async get_facets() -> Dict | None
  return:
    description: Facet results.
    types:
    - <xref:dict>
