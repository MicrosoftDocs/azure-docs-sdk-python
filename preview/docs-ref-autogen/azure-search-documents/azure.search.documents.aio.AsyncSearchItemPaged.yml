### YamlMime:PythonClass
uid: azure.search.documents.aio.AsyncSearchItemPaged
name: AsyncSearchItemPaged
fullName: azure.search.documents.aio.AsyncSearchItemPaged
module: azure.search.documents.aio
inheritances:
- azure.core.async_paging.AsyncItemPaged
constructor:
  syntax: AsyncSearchItemPaged(*args, **kwargs)
methods:
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_answers
  name: get_answers
  summary: Return answers.
  signature: async get_answers() -> List[AnswerResult] | None
  return:
    description: Answers.
    types:
    - <xref:list>[<xref:azure.search.documents.AnswerResult>]
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_count
  name: get_count
  summary: 'Return the count of results if *include_total_count* was

    set for the query.'
  signature: async get_count() -> int
  return:
    description: Count of results.
    types:
    - <xref:int>
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_coverage
  name: get_coverage
  summary: 'Return the coverage percentage, if *minimum_coverage* was

    specificied for the query.'
  signature: async get_coverage() -> float
  return:
    description: Coverage percentage.
    types:
    - <xref:float>
- uid: azure.search.documents.aio.AsyncSearchItemPaged.get_facets
  name: get_facets
  summary: Return any facet results if faceting was requested.
  signature: async get_facets() -> Dict | None
  return:
    description: Facet results.
    types:
    - <xref:dict>
