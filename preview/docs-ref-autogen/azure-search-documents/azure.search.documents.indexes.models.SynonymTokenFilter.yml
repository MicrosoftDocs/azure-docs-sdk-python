### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SynonymTokenFilter
name: SynonymTokenFilter
fullName: azure.search.documents.indexes.models.SynonymTokenFilter
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated.models._models_py3.TokenFilter
summary: 'Matches single or multi-word synonyms in a token stream. This token filter
  is implemented using

  Apache Lucene.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SynonymTokenFilter(*, name: str, synonyms: List[str], ignore_case: bool
    = False, expand: bool = True, **kwargs: Any)'
  parameters:
  - name: name
    description: 'The name of the token filter. It must only contain letters, digits,
      spaces,

      dashes or underscores, can only start and end with alphanumeric characters,
      and is limited to

      128 characters. Required.'
    types:
    - <xref:str>
  - name: synonyms
    description: 'A list of synonyms in following one of two formats: 1. incredible,

      unbelievable, fabulous => amazing - all terms on the left side of => symbol
      will be replaced

      with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing
      - comma

      separated list of equivalent words. Set the expand option to change how this
      list is

      interpreted. Required.'
    types:
    - <xref:list>[<xref:str>]
  - name: ignore_case
    description: 'A value indicating whether to case-fold input for matching. Default
      is

      false.'
    types:
    - <xref:bool>
  - name: expand
    description: 'A value indicating whether all words in the list of synonyms (if
      => notation

      is not used) will map to one another. If true, all words in the list of synonyms
      (if =>

      notation is not used) will map to one another. The following list: incredible,
      unbelievable,

      fabulous, amazing is equivalent to: incredible, unbelievable, fabulous, amazing
      => incredible,

      unbelievable, fabulous, amazing. If false, the following list: incredible, unbelievable,

      fabulous, amazing will be equivalent to: incredible, unbelievable, fabulous,
      amazing =>

      incredible. Default is true.'
    types:
    - <xref:bool>
variables:
- description: Identifies the concrete type of the token filter. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'The name of the token filter. It must only contain letters, digits,
    spaces, dashes

    or underscores, can only start and end with alphanumeric characters, and is limited
    to 128

    characters. Required.'
  name: name
  types:
  - <xref:str>
- description: 'A list of synonyms in following one of two formats: 1. incredible,

    unbelievable, fabulous => amazing - all terms on the left side of => symbol will
    be replaced

    with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing
    - comma

    separated list of equivalent words. Set the expand option to change how this list
    is

    interpreted. Required.'
  name: synonyms
  types:
  - <xref:list>[<xref:str>]
- description: 'A value indicating whether to case-fold input for matching. Default
    is

    false.'
  name: ignore_case
  types:
  - <xref:bool>
- description: 'A value indicating whether all words in the list of synonyms (if =>
    notation is

    not used) will map to one another. If true, all words in the list of synonyms
    (if => notation

    is not used) will map to one another. The following list: incredible, unbelievable,
    fabulous,

    amazing is equivalent to: incredible, unbelievable, fabulous, amazing => incredible,

    unbelievable, fabulous, amazing. If false, the following list: incredible, unbelievable,

    fabulous, amazing will be equivalent to: incredible, unbelievable, fabulous, amazing
    =>

    incredible. Default is true.'
  name: expand
  types:
  - <xref:bool>
