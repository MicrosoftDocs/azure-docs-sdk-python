### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.CustomEntity
name: CustomEntity
fullName: azure.search.documents.indexes.models.CustomEntity
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated._serialization.Model
summary: 'An object that contains information about the matches that were found, and
  related metadata.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'CustomEntity(*, name: str, description: str | None = None, type: str |
    None = None, subtype: str | None = None, id: str | None = None, case_sensitive:
    bool | None = None, accent_sensitive: bool | None = None, fuzzy_edit_distance:
    int | None = None, default_case_sensitive: bool | None = None, default_accent_sensitive:
    bool | None = None, default_fuzzy_edit_distance: int | None = None, aliases: List[_models.CustomEntityAlias]
    | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    description: 'The top-level entity descriptor. Matches in the skill output will
      be grouped by

      this name, and it should represent the "normalized" form of the text being found.
      Required.'
    types:
    - <xref:str>
  - name: description
    description: 'This field can be used as a passthrough for custom metadata about
      the

      matched text(s). The value of this field will appear with every match of its
      entity in the

      skill output.'
    types:
    - <xref:str>
  - name: type
    description: 'This field can be used as a passthrough for custom metadata about
      the matched

      text(s). The value of this field will appear with every match of its entity
      in the skill

      output.'
    types:
    - <xref:str>
  - name: subtype
    description: 'This field can be used as a passthrough for custom metadata about
      the matched

      text(s). The value of this field will appear with every match of its entity
      in the skill

      output.'
    types:
    - <xref:str>
  - name: id
    description: 'This field can be used as a passthrough for custom metadata about
      the matched

      text(s). The value of this field will appear with every match of its entity
      in the skill

      output.'
    types:
    - <xref:str>
  - name: case_sensitive
    description: 'Defaults to false. Boolean value denoting whether comparisons with
      the

      entity name should be sensitive to character casing. Sample case insensitive
      matches of

      "Microsoft" could be: microsoft, microSoft, MICROSOFT.'
    types:
    - <xref:bool>
  - name: accent_sensitive
    description: 'Defaults to false. Boolean value denoting whether comparisons with

      the entity name should be sensitive to accent.'
    types:
    - <xref:bool>
  - name: fuzzy_edit_distance
    description: 'Defaults to 0. Maximum value of 5. Denotes the acceptable number

      of divergent characters that would still constitute a match with the entity
      name. The smallest

      possible fuzziness for any given match is returned. For instance, if the edit
      distance is set

      to 3, "Windows10" would still match "Windows", "Windows10" and "Windows 7".
      When case

      sensitivity is set to false, case differences do NOT count towards fuzziness
      tolerance, but

      otherwise do.'
    types:
    - <xref:int>
  - name: default_case_sensitive
    description: 'Changes the default case sensitivity value for this entity. It

      be used to change the default value of all aliases caseSensitive values.'
    types:
    - <xref:bool>
  - name: default_accent_sensitive
    description: 'Changes the default accent sensitivity value for this

      entity. It be used to change the default value of all aliases accentSensitive
      values.'
    types:
    - <xref:bool>
  - name: default_fuzzy_edit_distance
    description: 'Changes the default fuzzy edit distance value for this

      entity. It can be used to change the default value of all aliases fuzzyEditDistance
      values.'
    types:
    - <xref:int>
  - name: aliases
    description: 'An array of complex objects that can be used to specify alternative
      spellings

      or synonyms to the root entity name.'
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.CustomEntityAlias>]
variables:
- description: 'The top-level entity descriptor. Matches in the skill output will
    be grouped by

    this name, and it should represent the "normalized" form of the text being found.
    Required.'
  name: name
  types:
  - <xref:str>
- description: 'This field can be used as a passthrough for custom metadata about
    the

    matched text(s). The value of this field will appear with every match of its entity
    in the

    skill output.'
  name: description
  types:
  - <xref:str>
- description: 'This field can be used as a passthrough for custom metadata about
    the matched

    text(s). The value of this field will appear with every match of its entity in
    the skill

    output.'
  name: type
  types:
  - <xref:str>
- description: 'This field can be used as a passthrough for custom metadata about
    the matched

    text(s). The value of this field will appear with every match of its entity in
    the skill

    output.'
  name: subtype
  types:
  - <xref:str>
- description: 'This field can be used as a passthrough for custom metadata about
    the matched

    text(s). The value of this field will appear with every match of its entity in
    the skill

    output.'
  name: id
  types:
  - <xref:str>
- description: 'Defaults to false. Boolean value denoting whether comparisons with
    the

    entity name should be sensitive to character casing. Sample case insensitive matches
    of

    "Microsoft" could be: microsoft, microSoft, MICROSOFT.'
  name: case_sensitive
  types:
  - <xref:bool>
- description: 'Defaults to false. Boolean value denoting whether comparisons with
    the

    entity name should be sensitive to accent.'
  name: accent_sensitive
  types:
  - <xref:bool>
- description: 'Defaults to 0. Maximum value of 5. Denotes the acceptable number of

    divergent characters that would still constitute a match with the entity name.
    The smallest

    possible fuzziness for any given match is returned. For instance, if the edit
    distance is set

    to 3, "Windows10" would still match "Windows", "Windows10" and "Windows 7". When
    case

    sensitivity is set to false, case differences do NOT count towards fuzziness tolerance,
    but

    otherwise do.'
  name: fuzzy_edit_distance
  types:
  - <xref:int>
- description: 'Changes the default case sensitivity value for this entity. It be

    used to change the default value of all aliases caseSensitive values.'
  name: default_case_sensitive
  types:
  - <xref:bool>
- description: 'Changes the default accent sensitivity value for this entity.

    It be used to change the default value of all aliases accentSensitive values.'
  name: default_accent_sensitive
  types:
  - <xref:bool>
- description: 'Changes the default fuzzy edit distance value for this

    entity. It can be used to change the default value of all aliases fuzzyEditDistance
    values.'
  name: default_fuzzy_edit_distance
  types:
  - <xref:int>
- description: 'An array of complex objects that can be used to specify alternative
    spellings or

    synonyms to the root entity name.'
  name: aliases
  types:
  - <xref:list>[<xref:azure.search.documents.indexes.models.CustomEntityAlias>]
methods:
- uid: azure.search.documents.indexes.models.CustomEntity.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.CustomEntity.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.CustomEntity.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.CustomEntity.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.CustomEntity.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.CustomEntity.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
