### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.HnswParameters
name: HnswParameters
fullName: azure.search.documents.indexes.models.HnswParameters
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated._serialization.Model
summary: Contains the parameters specific to the HNSW algorithm.
constructor:
  syntax: 'HnswParameters(*, m: int = 4, ef_construction: int = 400, ef_search: int
    = 500, metric: str | _models.VectorSearchAlgorithmMetric | None = None, **kwargs:
    Any)'
  keywordOnlyParameters:
  - name: m
    description: 'The number of bi-directional links created for every new element
      during

      construction. Increasing this parameter value may improve recall and reduce
      retrieval times for

      datasets with high intrinsic dimensionality at the expense of increased memory
      consumption and

      longer indexing time.'
    defaultValue: '4'
    types:
    - <xref:int>
  - name: ef_construction
    description: 'The size of the dynamic list containing the nearest neighbors, which

      is used during index time. Increasing this parameter may improve index quality,
      at the expense

      of increased indexing time. At a certain point, increasing this parameter leads
      to diminishing

      returns.'
    defaultValue: '400'
    types:
    - <xref:int>
  - name: ef_search
    description: 'The size of the dynamic list containing the nearest neighbors, which
      is

      used during search time. Increasing this parameter may improve search results,
      at the expense

      of slower search. At a certain point, increasing this parameter leads to diminishing
      returns.'
    defaultValue: '500'
    types:
    - <xref:int>
  - name: metric
    description: 'The similarity metric to use for vector comparisons. Known values
      are:

      "cosine", "euclidean", and "dotProduct".'
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.VectorSearchAlgorithmMetric>
variables:
- description: 'The number of bi-directional links created for every new element during
    construction.

    Increasing this parameter value may improve recall and reduce retrieval times
    for datasets with

    high intrinsic dimensionality at the expense of increased memory consumption and
    longer

    indexing time.'
  name: m
  types:
  - <xref:int>
- description: 'The size of the dynamic list containing the nearest neighbors, which
    is

    used during index time. Increasing this parameter may improve index quality, at
    the expense of

    increased indexing time. At a certain point, increasing this parameter leads to
    diminishing

    returns.'
  name: ef_construction
  types:
  - <xref:int>
- description: 'The size of the dynamic list containing the nearest neighbors, which
    is used

    during search time. Increasing this parameter may improve search results, at the
    expense of

    slower search. At a certain point, increasing this parameter leads to diminishing
    returns.'
  name: ef_search
  types:
  - <xref:int>
- description: 'The similarity metric to use for vector comparisons. Known values
    are: "cosine",

    "euclidean", and "dotProduct".'
  name: metric
  types:
  - <xref:str>
  - <xref:azure.search.documents.indexes.models.VectorSearchAlgorithmMetric>
methods:
- uid: azure.search.documents.indexes.models.HnswParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.HnswParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.HnswParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.HnswParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.HnswParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.HnswParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
