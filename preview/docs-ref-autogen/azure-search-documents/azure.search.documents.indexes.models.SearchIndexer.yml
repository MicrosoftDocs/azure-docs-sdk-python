### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchIndexer
name: SearchIndexer
fullName: azure.search.documents.indexes.models.SearchIndexer
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated._serialization.Model
summary: 'Represents an indexer.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'SearchIndexer(*, name: str, data_source_name: str, target_index_name: str,
    description: str | None = None, skillset_name: str | None = None, schedule: _models.IndexingSchedule
    | None = None, parameters: _models.IndexingParameters | None = None, field_mappings:
    List[_models.FieldMapping] | None = None, output_field_mappings: List[_models.FieldMapping]
    | None = None, is_disabled: bool = False, e_tag: str | None = None, encryption_key:
    _models.SearchResourceEncryptionKey | None = None, cache: _models.SearchIndexerCache
    | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    description: The name of the indexer. Required.
    types:
    - <xref:str>
  - name: description
    description: The description of the indexer.
    types:
    - <xref:str>
  - name: data_source_name
    description: 'The name of the datasource from which this indexer reads data.

      Required.'
    types:
    - <xref:str>
  - name: skillset_name
    description: The name of the skillset executing with this indexer.
    types:
    - <xref:str>
  - name: target_index_name
    description: The name of the index to which this indexer writes data. Required.
    types:
    - <xref:str>
  - name: schedule
    description: The schedule for this indexer.
    types:
    - <xref:azure.search.documents.indexes.models.IndexingSchedule>
  - name: parameters
    description: Parameters for indexer execution.
    types:
    - <xref:azure.search.documents.indexes.models.IndexingParameters>
  - name: field_mappings
    description: 'Defines mappings between fields in the data source and corresponding

      target fields in the index.'
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
  - name: output_field_mappings
    description: 'Output field mappings are applied after enrichment and

      immediately before indexing.'
    types:
    - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
  - name: is_disabled
    description: A value indicating whether the indexer is disabled. Default is false.
    types:
    - <xref:bool>
  - name: e_tag
    description: The ETag of the indexer.
    types:
    - <xref:str>
  - name: encryption_key
    description: 'A description of an encryption key that you create in Azure Key
      Vault.

      This key is used to provide an additional level of encryption-at-rest for your
      indexer

      definition (as well as indexer execution status) when you want full assurance
      that no one, not

      even Microsoft, can decrypt them. Once you have encrypted your indexer definition,
      it will

      always remain encrypted. The search service will ignore attempts to set this
      property to null.

      You can change this property as needed if you want to rotate your encryption
      key; Your indexer

      definition (and indexer execution status) will be unaffected. Encryption with
      customer-managed

      keys is not available for free search services, and is only available for paid
      services created

      on or after January 1, 2019.'
    types:
    - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
  - name: cache
    description: 'Adds caching to an enrichment pipeline to allow for incremental
      modification

      steps without having to rebuild the index every time.'
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerCache>
variables:
- description: The name of the indexer. Required.
  name: name
  types:
  - <xref:str>
- description: The description of the indexer.
  name: description
  types:
  - <xref:str>
- description: 'The name of the datasource from which this indexer reads data.

    Required.'
  name: data_source_name
  types:
  - <xref:str>
- description: The name of the skillset executing with this indexer.
  name: skillset_name
  types:
  - <xref:str>
- description: The name of the index to which this indexer writes data. Required.
  name: target_index_name
  types:
  - <xref:str>
- description: The schedule for this indexer.
  name: schedule
  types:
  - <xref:azure.search.documents.indexes.models.IndexingSchedule>
- description: Parameters for indexer execution.
  name: parameters
  types:
  - <xref:azure.search.documents.indexes.models.IndexingParameters>
- description: 'Defines mappings between fields in the data source and corresponding

    target fields in the index.'
  name: field_mappings
  types:
  - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
- description: 'Output field mappings are applied after enrichment and immediately

    before indexing.'
  name: output_field_mappings
  types:
  - <xref:list>[<xref:azure.search.documents.indexes.models.FieldMapping>]
- description: A value indicating whether the indexer is disabled. Default is false.
  name: is_disabled
  types:
  - <xref:bool>
- description: The ETag of the indexer.
  name: e_tag
  types:
  - <xref:str>
- description: 'A description of an encryption key that you create in Azure Key Vault.

    This key is used to provide an additional level of encryption-at-rest for your
    indexer

    definition (as well as indexer execution status) when you want full assurance
    that no one, not

    even Microsoft, can decrypt them. Once you have encrypted your indexer definition,
    it will

    always remain encrypted. The search service will ignore attempts to set this property
    to null.

    You can change this property as needed if you want to rotate your encryption key;
    Your indexer

    definition (and indexer execution status) will be unaffected. Encryption with
    customer-managed

    keys is not available for free search services, and is only available for paid
    services created

    on or after January 1, 2019.'
  name: encryption_key
  types:
  - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
- description: 'Adds caching to an enrichment pipeline to allow for incremental modification
    steps

    without having to rebuild the index every time.'
  name: cache
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerCache>
methods:
- uid: azure.search.documents.indexes.models.SearchIndexer.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchIndexer.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexer.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.SearchIndexer.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchIndexer.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.SearchIndexer.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
