### YamlMime:PythonClass
uid: azure.search.documents.models.VectorizedQuery
name: VectorizedQuery
fullName: azure.search.documents.models.VectorizedQuery
module: azure.search.documents.models
inheritances:
- azure.search.documents._generated.models._models_py3.VectorQuery
summary: 'The query parameters to use for vector search when a raw vector value is
  provided.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'VectorizedQuery(*, vector: List[float], k_nearest_neighbors: int | None
    = None, fields: str | None = None, exhaustive: bool | None = None, oversampling:
    float | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: k_nearest_neighbors
    description: Number of nearest neighbors to return as top hits.
    types:
    - <xref:int>
  - name: fields
    description: 'Vector Fields of type Collection(Edm.Single) to be included in the
      vector

      searched.'
    types:
    - <xref:str>
  - name: exhaustive
    description: 'When true, triggers an exhaustive k-nearest neighbor search across
      all

      vectors within the vector index. Useful for scenarios where exact matches are
      critical, such as

      determining ground truth values.'
    types:
    - <xref:bool>
  - name: oversampling
    description: 'Oversampling factor. Minimum value is 1. It overrides the

      ''defaultOversampling'' parameter configured in the index definition. It can
      be set only when

      ''rerankWithOriginalVectors'' is true. This parameter is only permitted when
      a compression method

      is used on the underlying vector field.'
    types:
    - <xref:float>
  - name: vector
    description: The vector representation of a search query. Required.
    types:
    - <xref:list>[<xref:float>]
variables:
- description: 'The kind of vector query being performed. Required. Known values are:
    "vector" and

    "text".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.search.documents.models.VectorQueryKind>
- description: Number of nearest neighbors to return as top hits.
  name: k_nearest_neighbors
  types:
  - <xref:int>
- description: 'Vector Fields of type Collection(Edm.Single) to be included in the
    vector

    searched.'
  name: fields
  types:
  - <xref:str>
- description: 'When true, triggers an exhaustive k-nearest neighbor search across
    all

    vectors within the vector index. Useful for scenarios where exact matches are
    critical, such as

    determining ground truth values.'
  name: exhaustive
  types:
  - <xref:bool>
- description: 'Oversampling factor. Minimum value is 1. It overrides the

    ''defaultOversampling'' parameter configured in the index definition. It can be
    set only when

    ''rerankWithOriginalVectors'' is true. This parameter is only permitted when a
    compression method

    is used on the underlying vector field.'
  name: oversampling
  types:
  - <xref:float>
- description: The vector representation of a search query. Required.
  name: vector
  types:
  - <xref:list>[<xref:float>]
methods:
- uid: azure.search.documents.models.VectorizedQuery.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.models.VectorizedQuery.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.models.VectorizedQuery.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.models.VectorizedQuery.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.models.VectorizedQuery.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.models.VectorizedQuery.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
