### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter
name: WordDelimiterTokenFilter
fullName: azure.search.documents.indexes.models.WordDelimiterTokenFilter
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated.models._models_py3.TokenFilter
summary: 'Splits words into subwords and performs optional transformations on subword
  groups. This token

  filter is implemented using Apache Lucene.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'WordDelimiterTokenFilter(*, name: str, generate_word_parts: bool = True,
    generate_number_parts: bool = True, catenate_words: bool = False, catenate_numbers:
    bool = False, catenate_all: bool = False, split_on_case_change: bool = True, preserve_original:
    bool = False, split_on_numerics: bool = True, stem_english_possessive: bool =
    True, protected_words: List[str] | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    description: 'The name of the token filter. It must only contain letters, digits,
      spaces,

      dashes or underscores, can only start and end with alphanumeric characters,
      and is limited to

      128 characters. Required.'
    types:
    - <xref:str>
  - name: generate_word_parts
    description: 'A value indicating whether to generate part words. If set, causes

      parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search".
      Default is

      true.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: generate_number_parts
    description: 'A value indicating whether to generate number subwords. Default

      is true.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: catenate_words
    description: 'A value indicating whether maximum runs of word parts will be

      catenated. For example, if this is set to true, "Azure-Search" becomes "AzureSearch".
      Default

      is false.'
    types:
    - <xref:bool>
  - name: catenate_numbers
    description: 'A value indicating whether maximum runs of number parts will be

      catenated. For example, if this is set to true, "1-2" becomes "12". Default
      is false.'
    types:
    - <xref:bool>
  - name: catenate_all
    description: 'A value indicating whether all subword parts will be catenated.
      For

      example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default
      is false.'
    types:
    - <xref:bool>
  - name: split_on_case_change
    description: 'A value indicating whether to split words on caseChange. For

      example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default
      is true.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: preserve_original
    description: 'A value indicating whether original words will be preserved and

      added to the subword list. Default is false.'
    types:
    - <xref:bool>
  - name: split_on_numerics
    description: 'A value indicating whether to split on numbers. For example, if

      this is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is
      true.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: stem_english_possessive
    description: 'A value indicating whether to remove trailing "''s" for each

      subword. Default is true.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: protected_words
    description: A list of tokens to protect from being delimited.
    types:
    - <xref:list>[<xref:str>]
variables:
- description: A URI fragment specifying the type of token filter. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'The name of the token filter. It must only contain letters, digits,
    spaces, dashes

    or underscores, can only start and end with alphanumeric characters, and is limited
    to 128

    characters. Required.'
  name: name
  types:
  - <xref:str>
- description: 'A value indicating whether to generate part words. If set, causes

    parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search".
    Default is

    true.'
  name: generate_word_parts
  types:
  - <xref:bool>
- description: 'A value indicating whether to generate number subwords. Default is

    true.'
  name: generate_number_parts
  types:
  - <xref:bool>
- description: 'A value indicating whether maximum runs of word parts will be catenated.

    For example, if this is set to true, "Azure-Search" becomes "AzureSearch". Default
    is false.'
  name: catenate_words
  types:
  - <xref:bool>
- description: 'A value indicating whether maximum runs of number parts will be

    catenated. For example, if this is set to true, "1-2" becomes "12". Default is
    false.'
  name: catenate_numbers
  types:
  - <xref:bool>
- description: 'A value indicating whether all subword parts will be catenated. For

    example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default
    is false.'
  name: catenate_all
  types:
  - <xref:bool>
- description: 'A value indicating whether to split words on caseChange. For

    example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default
    is true.'
  name: split_on_case_change
  types:
  - <xref:bool>
- description: 'A value indicating whether original words will be preserved and added

    to the subword list. Default is false.'
  name: preserve_original
  types:
  - <xref:bool>
- description: 'A value indicating whether to split on numbers. For example, if this

    is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is true.'
  name: split_on_numerics
  types:
  - <xref:bool>
- description: 'A value indicating whether to remove trailing "''s" for each

    subword. Default is true.'
  name: stem_english_possessive
  types:
  - <xref:bool>
- description: A list of tokens to protect from being delimited.
  name: protected_words
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.WordDelimiterTokenFilter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
