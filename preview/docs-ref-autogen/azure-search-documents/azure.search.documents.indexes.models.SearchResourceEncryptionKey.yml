### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey
name: SearchResourceEncryptionKey
fullName: azure.search.documents.indexes.models.SearchResourceEncryptionKey
module: azure.search.documents.indexes.models
summary: 'A customer-managed encryption key in Azure Key Vault. Keys that you create
  and manage can be

  used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes
  and synonym maps.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SearchResourceEncryptionKey(*, key_name: str, key_version: str, vault_uri:
    str, application_id: str | None = None, application_secret: str | None = None,
    identity: SearchIndexerDataIdentity | None = None, **kwargs)'
  keywordOnlyParameters:
  - name: key_name
    isRequired: true
  - name: key_version
    isRequired: true
  - name: vault_uri
    isRequired: true
  - name: application_id
    defaultValue: None
  - name: application_secret
    defaultValue: None
  - name: identity
    defaultValue: None
variables:
- description: 'Required. The name of your Azure Key Vault key to be used to encrypt
    your data

    at rest.'
  name: key_name
  types:
  - <xref:str>
- description: 'Required. The version of your Azure Key Vault key to be used to encrypt

    your data at rest.'
  name: key_version
  types:
  - <xref:str>
- description: 'Required. The URI of your Azure Key Vault, also referred to as DNS
    name, that

    contains the key to be used to encrypt your data at rest. An example URI might
    be [https://my](https://my)-

    keyvault-name.vault.azure.net.'
  name: vault_uri
  types:
  - <xref:str>
- description: 'Required. An AAD Application ID that was granted the required access

    permissions to the Azure Key Vault that is to be used when encrypting your data
    at rest. The

    Application ID should not be confused with the Object ID for your AAD Application.'
  name: application_id
  types:
  - <xref:str>
- description: The authentication key of the specified AAD application.
  name: application_secret
  types:
  - <xref:str>
- description: 'An explicit managed identity to use for this encryption key. If not
    specified

    and the access credentials property is null, the system-assigned managed identity
    is used. On

    update to the resource, if the explicit identity is unspecified, it remains unchanged.
    If

    "none" is specified, the value of this property is cleared.'
  name: identity
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerDataIdentity>
methods:
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.as_dict
  name: as_dict
  summary: Return a dict that can be serialized using json.dump.
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A callable that will transform the key of the dict
    types:
    - <xref:typing.Callable>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a SearchResourceEncryptionKey
    instance.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchResourceEncryptionKey instance
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self | None'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A callable that will extract a key from a dict
    defaultValue: None
    types:
    - <xref:typing.Callable>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchResourceEncryptionKey instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.serialize
  name: serialize
  summary: Return the JSON that would be sent to server from this model.
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
