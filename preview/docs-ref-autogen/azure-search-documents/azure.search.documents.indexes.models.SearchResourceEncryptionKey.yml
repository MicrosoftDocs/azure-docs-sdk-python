### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey
name: SearchResourceEncryptionKey
fullName: azure.search.documents.indexes.models.SearchResourceEncryptionKey
module: azure.search.documents.indexes.models
inheritances:
- builtins.object
summary: 'A customer-managed encryption key in Azure Key Vault. Keys that you create
  and manage can be

  used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes
  and synonym maps.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: SearchResourceEncryptionKey(**kwargs)
variables:
- description: 'Required. The name of your Azure Key Vault key to be used to encrypt
    your data

    at rest.'
  name: key_name
  types:
  - <xref:str>
- description: 'Required. The version of your Azure Key Vault key to be used to encrypt

    your data at rest.'
  name: key_version
  types:
  - <xref:str>
- description: 'Required. The URI of your Azure Key Vault, also referred to as DNS
    name, that

    contains the key to be used to encrypt your data at rest. An example URI might
    be [https://my](https://my)-

    keyvault-name.vault.azure.net.'
  name: vault_uri
  types:
  - <xref:str>
- description: 'Required. An AAD Application ID that was granted the required access

    permissions to the Azure Key Vault that is to be used when encrypting your data
    at rest. The

    Application ID should not be confused with the Object ID for your AAD Application.'
  name: application_id
  types:
  - <xref:str>
- description: The authentication key of the specified AAD application.
  name: application_secret
  types:
  - <xref:str>
methods:
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.as_dict
  name: as_dict
  summary: Return a dict that can be serialized using json.dump.
  signature: 'as_dict(keep_readonly: bool = True, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a SearchResourceEncryptionKey
    instance.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> SearchResourceEncryptionKey
    | None'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchResourceEncryptionKey instance
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.from_dict
  name: from_dict
  summary: Parse a dict using given key extractor return a model.
  signature: 'from_dict(data: Any, content_type: str | None = None) -> SearchResourceEncryptionKey
    | None'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: A SearchResourceEncryptionKey instance
    types:
    - <xref:azure.search.documents.indexes.models.SearchResourceEncryptionKey>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.SearchResourceEncryptionKey.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.

    :param bool keep_readonly: If you want to serialize the readonly attributes

    :returns: A dict JSON compatible object

    :rtype: dict'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    defaultValue: 'False'
