### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters
name: AzureBlobKnowledgeSourceParameters
fullName: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters
module: azure.search.documents.indexes.models
summary: 'Parameters for Azure Blob Storage knowledge source.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'AzureBlobKnowledgeSourceParameters(*, connection_string: str, container_name:
    str, identity: _models.SearchIndexerDataIdentity | None = None, folder_path: str
    | None = None, embedding_model: _models.VectorSearchVectorizer | None = None,
    chat_completion_model: _models.KnowledgeAgentModel | None = None, ingestion_schedule:
    _models.IndexingSchedule | None = None, disable_image_verbalization: bool | None
    = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: identity
    description: An explicit identity to use for this knowledge source.
    defaultValue: None
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndexerDataIdentity>
  - name: connection_string
    description: 'Key-based connection string or the ResourceId format if using a

      managed identity. Required.'
    types:
    - <xref:str>
  - name: container_name
    description: The name of the blob storage container. Required.
    types:
    - <xref:str>
  - name: folder_path
    description: Optional folder path within the container.
    defaultValue: None
    types:
    - <xref:str>
  - name: embedding_model
    description: Optional vectorizer configuration for vectorizing content.
    defaultValue: None
    types:
    - <xref:azure.search.documents.indexes.models.VectorSearchVectorizer>
  - name: chat_completion_model
    description: 'Optional chat completion model for image verbalization or

      context extraction.'
    defaultValue: None
    types:
    - <xref:azure.search.documents.indexes.models.KnowledgeAgentModel>
  - name: ingestion_schedule
    description: Optional schedule for data ingestion.
    defaultValue: None
    types:
    - <xref:azure.search.documents.indexes.models.IndexingSchedule>
  - name: disable_image_verbalization
    description: Indicates whether image verbalization should be disabled.
    defaultValue: None
    types:
    - <xref:bool>
variables:
- description: An explicit identity to use for this knowledge source.
  name: identity
  types:
  - <xref:azure.search.documents.indexes.models.SearchIndexerDataIdentity>
- description: 'Key-based connection string or the ResourceId format if using a

    managed identity. Required.'
  name: connection_string
  types:
  - <xref:str>
- description: The name of the blob storage container. Required.
  name: container_name
  types:
  - <xref:str>
- description: Optional folder path within the container.
  name: folder_path
  types:
  - <xref:str>
- description: Optional vectorizer configuration for vectorizing content.
  name: embedding_model
  types:
  - <xref:azure.search.documents.indexes.models.VectorSearchVectorizer>
- description: 'Optional chat completion model for image verbalization or context

    extraction.'
  name: chat_completion_model
  types:
  - <xref:azure.search.documents.indexes.models.KnowledgeAgentModel>
- description: Optional schedule for data ingestion.
  name: ingestion_schedule
  types:
  - <xref:azure.search.documents.indexes.models.IndexingSchedule>
- description: Resources created by the knowledge source.
  name: created_resources
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Indicates whether image verbalization should be disabled.
  name: disable_image_verbalization
  types:
  - <xref:bool>
methods:
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    dict[str, typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A key extractor function.
    defaultValue: None
    types:
    - <xref:function>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.AzureBlobKnowledgeSourceParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
