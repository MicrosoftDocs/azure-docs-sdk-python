### YamlMime:PythonClass
uid: azure.search.documents.aio.SearchIndexingBufferedSender
name: SearchIndexingBufferedSender
fullName: azure.search.documents.aio.SearchIndexingBufferedSender
module: azure.search.documents.aio
inheritances:
- azure.search.documents._search_indexing_buffered_sender_base.SearchIndexingBufferedSenderBase
- azure.search.documents._headers_mixin.HeadersMixin
summary: A buffered sender for document indexing actions.
constructor:
  syntax: 'SearchIndexingBufferedSender(endpoint: str, index_name: str, credential:
    AzureKeyCredential | AsyncTokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: The URL endpoint of an Azure search service
    isRequired: true
    types:
    - <xref:str>
  - name: index_name
    description: The name of the index to connect to
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: A credential to authorize search client requests
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: auto_flush_interval
    description: 'how many max seconds if between 2 flushes. This only takes effect

      when auto_flush is on. Default to 60 seconds.'
    types:
    - <xref:int>
  - name: initial_batch_action_count
    description: 'The initial number of actions to group into a batch when

      tuning the behavior of the sender. The default value is 512.'
    types:
    - <xref:int>
  - name: max_retries_per_action
    description: The number of times to retry a failed document. The default value
      is 3.
    types:
    - <xref:int>
  - name: on_new
    description: 'If it is set, the client will call corresponding methods when there

      is a new IndexAction added.'
    types:
    - <xref:callable>
  - name: on_progress
    description: 'If it is set, the client will call corresponding methods when there

      is a IndexAction succeeds.'
    types:
    - <xref:callable>
  - name: on_error
    description: 'If it is set, the client will call corresponding methods when there

      is a IndexAction fails.'
    types:
    - <xref:callable>
  - name: on_remove
    description: 'If it is set, the client will call corresponding methods when there

      is a IndexAction removed from the queue (succeeds or fails).'
    types:
    - <xref:callable>
  - name: api_version
    description: The Search API version to use for requests.
    types:
    - <xref:str>
  - name: audience
    description: 'sets the Audience to use for authentication with Azure Active Directory
      (AAD). The

      audience is not considered when using a shared key. If audience is not provided,
      the public cloud audience

      will be assumed.'
    types:
    - <xref:str>
methods:
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.close
  name: close
  summary: 'Close the session.

    :return: None

    :rtype: None'
  signature: 'async close(**kwargs: Any) -> None'
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.delete_documents
  name: delete_documents
  summary: 'Queue delete documents actions

    :param documents: A list of documents to delete.

    :type documents: list[Dict]'
  signature: 'async delete_documents(documents: List[Dict], **kwargs: Any) -> None'
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.flush
  name: flush
  summary: 'Flush the batch.

    :param int timeout: time out setting. Default is 86400s (one day)

    :return: True if there are errors. Else False

    :rtype: bool

    :raises ~azure.core.exceptions.ServiceResponseTimeoutError:'
  signature: 'async flush(timeout: int = 86400, **kwargs) -> bool'
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.index_documents
  name: index_documents
  summary: 'Specify a document operations to perform as a batch.


    :raises ~azure.search.documents.RequestEntityTooLargeError'
  signature: 'async index_documents(batch: IndexDocumentsBatch, **kwargs: Any) ->
    List[IndexingResult]'
  parameters:
  - name: batch
    description: A batch of document operations to perform.
    isRequired: true
    types:
    - <xref:azure.search.documents.IndexDocumentsBatch>
  return:
    description: Indexing result for each action in the batch.
    types:
    - <xref:list>[<xref:azure.search.documents.models.IndexingResult>]
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.merge_documents
  name: merge_documents
  summary: 'Queue merge documents actions

    :param documents: A list of documents to merge.

    :type documents: list[dict]'
  signature: 'async merge_documents(documents: List[Dict], **kwargs: Any) -> None'
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.merge_or_upload_documents
  name: merge_or_upload_documents
  summary: 'Queue merge documents or upload documents actions

    :param documents: A list of documents to merge or upload.

    :type documents: list[dict]'
  signature: 'async merge_or_upload_documents(documents: List[Dict], **kwargs: Any)
    -> None'
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.upload_documents
  name: upload_documents
  summary: 'Queue upload documents actions.

    :param documents: A list of documents to upload.

    :type documents: list[dict]'
  signature: 'async upload_documents(documents: List[Dict], **kwargs: Any) -> None'
attributes:
- uid: azure.search.documents.aio.SearchIndexingBufferedSender.actions
  name: actions
  summary: 'The list of currently index actions in queue to index.

    :return: The list of currently index actions in queue to index.

    :rtype: list[IndexAction]'
