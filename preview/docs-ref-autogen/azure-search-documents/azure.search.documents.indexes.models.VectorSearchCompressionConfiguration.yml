### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration
name: VectorSearchCompressionConfiguration
fullName: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated._serialization.Model
summary: 'Contains configuration options specific to the compression method used during
  indexing or

  querying.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  ScalarQuantizationCompressionConfiguration


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'VectorSearchCompressionConfiguration(*, name: str, rerank_with_original_vectors:
    bool = True, default_oversampling: float | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    description: The name to associate with this particular configuration. Required.
    types:
    - <xref:str>
  - name: rerank_with_original_vectors
    description: 'If set to true, once the ordered set of results

      calculated using compressed vectors are obtained, they will be reranked again
      by recalculating

      the full-precision similarity scores. This will improve recall at the expense
      of latency.'
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: default_oversampling
    description: 'Default oversampling factor. Oversampling will internally

      request more documents (specified by this multiplier) in the initial search.
      This increases the

      set of results that will be reranked using recomputed similarity scores from
      full-precision

      vectors. Minimum value is 1, meaning no oversampling (1x). This parameter can
      only be set when

      rerankWithOriginalVectors is true. Higher values improve recall at the expense
      of latency.'
    types:
    - <xref:float>
variables:
- description: The name to associate with this particular configuration. Required.
  name: name
  types:
  - <xref:str>
- description: 'The name of the kind of compression method being configured for use
    with vector

    search. Required. "scalarQuantization"'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.search.documents.indexes.models.VectorSearchCompressionKind>
- description: 'If set to true, once the ordered set of results calculated

    using compressed vectors are obtained, they will be reranked again by recalculating
    the

    full-precision similarity scores. This will improve recall at the expense of latency.'
  name: rerank_with_original_vectors
  types:
  - <xref:bool>
- description: 'Default oversampling factor. Oversampling will internally request

    more documents (specified by this multiplier) in the initial search. This increases
    the set of

    results that will be reranked using recomputed similarity scores from full-precision
    vectors.

    Minimum value is 1, meaning no oversampling (1x). This parameter can only be set
    when

    rerankWithOriginalVectors is true. Higher values improve recall at the expense
    of latency.'
  name: default_oversampling
  types:
  - <xref:float>
methods:
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.VectorSearchCompressionConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
