### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer
name: MicrosoftLanguageStemmingTokenizer
fullName: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer
module: azure.search.documents.indexes.models
inheritances:
- azure.search.documents.indexes._generated.models._models_py3.LexicalTokenizer
summary: 'Divides text using language-specific rules and reduces words to their base
  forms.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'MicrosoftLanguageStemmingTokenizer(*, name: str, max_token_length: int
    = 255, is_search_tokenizer: bool = False, language: str | _models.MicrosoftStemmingTokenizerLanguage
    | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: name
    description: 'The name of the tokenizer. It must only contain letters, digits,
      spaces, dashes

      or underscores, can only start and end with alphanumeric characters, and is
      limited to 128

      characters. Required.'
    types:
    - <xref:str>
  - name: max_token_length
    description: 'The maximum token length. Tokens longer than the maximum length
      are

      split. Maximum token length that can be used is 300 characters. Tokens longer
      than 300

      characters are first split into tokens of length 300 and then each of those
      tokens is split

      based on the max token length set. Default is 255.'
    defaultValue: '255'
    types:
    - <xref:int>
  - name: is_search_tokenizer
    description: 'A value indicating how the tokenizer is used. Set to true if used

      as the search tokenizer, set to false if used as the indexing tokenizer. Default
      is false.'
    types:
    - <xref:bool>
  - name: language
    description: 'The language to use. The default is English. Known values are: "arabic",

      "bangla", "bulgarian", "catalan", "croatian", "czech", "danish", "dutch", "english",

      "estonian", "finnish", "french", "german", "greek", "gujarati", "hebrew", "hindi",
      "hungarian",

      "icelandic", "indonesian", "italian", "kannada", "latvian", "lithuanian", "malay",
      "malayalam",

      "marathi", "norwegianBokmaal", "polish", "portuguese", "portugueseBrazilian",
      "punjabi",

      "romanian", "russian", "serbianCyrillic", "serbianLatin", "slovak", "slovenian",
      "spanish",

      "swedish", "tamil", "telugu", "turkish", "ukrainian", and "urdu".'
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.MicrosoftStemmingTokenizerLanguage>
variables:
- description: A URI fragment specifying the type of tokenizer. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'The name of the tokenizer. It must only contain letters, digits, spaces,
    dashes or

    underscores, can only start and end with alphanumeric characters, and is limited
    to 128

    characters. Required.'
  name: name
  types:
  - <xref:str>
- description: 'The maximum token length. Tokens longer than the maximum length are

    split. Maximum token length that can be used is 300 characters. Tokens longer
    than 300

    characters are first split into tokens of length 300 and then each of those tokens
    is split

    based on the max token length set. Default is 255.'
  name: max_token_length
  types:
  - <xref:int>
- description: 'A value indicating how the tokenizer is used. Set to true if used
    as

    the search tokenizer, set to false if used as the indexing tokenizer. Default
    is false.'
  name: is_search_tokenizer
  types:
  - <xref:bool>
- description: 'The language to use. The default is English. Known values are: "arabic",

    "bangla", "bulgarian", "catalan", "croatian", "czech", "danish", "dutch", "english",

    "estonian", "finnish", "french", "german", "greek", "gujarati", "hebrew", "hindi",
    "hungarian",

    "icelandic", "indonesian", "italian", "kannada", "latvian", "lithuanian", "malay",
    "malayalam",

    "marathi", "norwegianBokmaal", "polish", "portuguese", "portugueseBrazilian",
    "punjabi",

    "romanian", "russian", "serbianCyrillic", "serbianLatin", "slovak", "slovenian",
    "spanish",

    "swedish", "tamil", "telugu", "turkish", "ukrainian", and "urdu".'
  name: language
  types:
  - <xref:str>
  - <xref:azure.search.documents.indexes.models.MicrosoftStemmingTokenizerLanguage>
methods:
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.MicrosoftLanguageStemmingTokenizer.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
