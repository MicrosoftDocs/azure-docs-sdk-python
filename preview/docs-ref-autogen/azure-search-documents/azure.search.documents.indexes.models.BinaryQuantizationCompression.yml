### YamlMime:PythonClass
uid: azure.search.documents.indexes.models.BinaryQuantizationCompression
name: BinaryQuantizationCompression
fullName: azure.search.documents.indexes.models.BinaryQuantizationCompression
module: azure.search.documents.indexes.models
summary: 'Contains configuration options specific to the binary quantization compression
  method used

  during indexing and querying.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BinaryQuantizationCompression(*, compression_name: str, rerank_with_original_vectors:
    bool | None = None, default_oversampling: float | None = None, rescoring_options:
    _models.RescoringOptions | None = None, truncation_dimension: int | None = None,
    **kwargs: Any)'
  keywordOnlyParameters:
  - name: compression_name
    description: The name to associate with this particular configuration. Required.
    types:
    - <xref:str>
  - name: rerank_with_original_vectors
    description: 'If set to true, once the ordered set of results

      calculated using compressed vectors are obtained, they will be reranked again
      by recalculating

      the full-precision similarity scores. This will improve recall at the expense
      of latency.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: default_oversampling
    description: 'Default oversampling factor. Oversampling will internally

      request more documents (specified by this multiplier) in the initial search.
      This increases the

      set of results that will be reranked using recomputed similarity scores from
      full-precision

      vectors. Minimum value is 1, meaning no oversampling (1x). This parameter can
      only be set when

      rerankWithOriginalVectors is true. Higher values improve recall at the expense
      of latency.'
    defaultValue: None
    types:
    - <xref:float>
  - name: rescoring_options
    description: Contains the options for rescoring.
    defaultValue: None
    types:
    - <xref:azure.search.documents.indexes.models.RescoringOptions>
  - name: truncation_dimension
    description: 'The number of dimensions to truncate the vectors to. Truncating

      the vectors reduces the size of the vectors and the amount of data that needs
      to be transferred

      during search. This can save storage cost and improve search performance at
      the expense of

      recall. It should be only used for embeddings trained with Matryoshka Representation
      Learning

      (MRL) such as OpenAI text-embedding-3-large (small). The default value is null,
      which means no

      truncation.'
    defaultValue: None
    types:
    - <xref:int>
variables:
- description: The name to associate with this particular configuration. Required.
  name: compression_name
  types:
  - <xref:str>
- description: 'The name of the kind of compression method being configured for use
    with vector

    search. Required. Known values are: "scalarQuantization" and "binaryQuantization".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.search.documents.indexes.models.VectorSearchCompressionKind>
- description: 'If set to true, once the ordered set of results calculated

    using compressed vectors are obtained, they will be reranked again by recalculating
    the

    full-precision similarity scores. This will improve recall at the expense of latency.'
  name: rerank_with_original_vectors
  types:
  - <xref:bool>
- description: 'Default oversampling factor. Oversampling will internally request

    more documents (specified by this multiplier) in the initial search. This increases
    the set of

    results that will be reranked using recomputed similarity scores from full-precision
    vectors.

    Minimum value is 1, meaning no oversampling (1x). This parameter can only be set
    when

    rerankWithOriginalVectors is true. Higher values improve recall at the expense
    of latency.'
  name: default_oversampling
  types:
  - <xref:float>
- description: Contains the options for rescoring.
  name: rescoring_options
  types:
  - <xref:azure.search.documents.indexes.models.RescoringOptions>
- description: 'The number of dimensions to truncate the vectors to. Truncating the

    vectors reduces the size of the vectors and the amount of data that needs to be
    transferred

    during search. This can save storage cost and improve search performance at the
    expense of

    recall. It should be only used for embeddings trained with Matryoshka Representation
    Learning

    (MRL) such as OpenAI text-embedding-3-large (small). The default value is null,
    which means no

    truncation.'
  name: truncation_dimension
  types:
  - <xref:int>
methods:
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A key extractor function.
    defaultValue: None
    types:
    - <xref:function>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.search.documents.indexes.models.BinaryQuantizationCompression.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
