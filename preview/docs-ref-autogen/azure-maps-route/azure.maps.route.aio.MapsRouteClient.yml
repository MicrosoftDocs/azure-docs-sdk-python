### YamlMime:PythonClass
uid: azure.maps.route.aio.MapsRouteClient
name: MapsRouteClient
fullName: azure.maps.route.aio.MapsRouteClient
module: azure.maps.route.aio
inheritances:
- azure.maps.route.aio._base_client_async.AsyncMapsRouteClientBase
summary: "Azure Maps Route REST APIs.\n:param credential:\n\n   Credential needed\
  \ for the client to connect to Azure."
constructor:
  syntax: 'MapsRouteClient(credential: AzureKeyCredential | AsyncTokenCredential,
    **kwargs: Any)'
  parameters:
  - name: credential
    isRequired: true
  keywordOnlyParameters:
  - name: base_url
    description: 'Supported Maps Services or Language resource base_url

      (protocol and hostname, for example: ''[https://us.atlas.microsoft.com](https://us.atlas.microsoft.com)'').'
    types:
    - <xref:str>
  - name: client_id
    description: 'Specifies which account is intended for usage with the Azure AD
      security model.

      It represents a unique ID for the Azure Maps account.'
    types:
    - <xref:str>
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to the latest service version.

      Setting to an older version may result in reduced feature compatibility.'
    types:
    - <xref:str>
methods:
- uid: azure.maps.route.aio.MapsRouteClient.begin_get_route_directions_batch
  name: begin_get_route_directions_batch
  summary: 'Sends batches of route direction queries.

    The method returns a poller for retrieving the result later.'
  signature: 'async begin_get_route_directions_batch(batch_id: str, **kwargs: Any)
    -> AsyncLROPoller[RouteDirectionsBatchResult]'
  keywordOnlyParameters:
  - name: queries
    description: 'The list of route directions queries/requests to

      process. The list can contain a max of 700 queries for async and 100 queries
      for sync version

      and must contain at least 1 query. Required.'
    types:
    - <xref:typing.List>[<xref:str>]
  - name: batch_id
    description: Batch id for querying the operation. Required.
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns RouteDirectionsBatchResult
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.maps.route.models.RouteDirectionsBatchResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.route.aio.MapsRouteClient.begin_get_route_matrix_batch
  name: begin_get_route_matrix_batch
  summary: "Calculates a matrix of route summaries for a set of routes defined by\
    \ origin and destination locations.\nThe method returns a poller for retrieving\
    \ the result later.\n\nThe maximum size of a matrix for this method is 700\n \
    \  (the number of origins multiplied by the number of destinations)"
  signature: 'async begin_get_route_matrix_batch(query: RouteMatrixQuery, **kwargs:
    Any) -> AsyncLROPoller[RouteMatrixResult]'
  keywordOnlyParameters:
  - name: query
    description: 'The matrix of origin and destination coordinates to compute the

      route distance, travel time and other summary for each cell of the matrix based
      on the input

      parameters. The minimum and the maximum cell count supported are 1 and **700**
      for async and

      **100** for sync respectively. For example, it can be 35 origins and 20 destinations
      or 25

      origins and 25 destinations for async API. Required.'
    types:
    - <xref:azure.maps.route.models.RouteMatrixQuery>
  - name: matrix_id
    description: 'Matrix id received after the Matrix Route request was accepted successfully.

      Required.'
    types:
    - <xref:str>
  - name: wait_for_results
    description: 'Boolean to indicate whether to execute the request synchronously.
      If

      set to true, user will get a 200 response if the request is finished under 120
      seconds.

      Otherwise, user will get a 202 response right away. Please refer to the API
      description for

      more details on 202 response. **Supported only for async request**. Default
      value is None.'
    types:
    - <xref:bool>
  - name: compute_travel_time
    description: 'Specifies whether to return additional travel times using

      different types of traffic information (none, historic, live) as well as the
      default

      best-estimate travel time. Known values are: "none" and "all". Default value
      is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.ComputeTravelTime>
  - name: filter_section_type
    description: 'Specifies which of the section types is reported in the route

      response. `<br>`:code:>>`<<<br>`For example if sectionType = pedestrian the
      sections which

      are suited for pedestrians only are returned. Multiple types can be used. The
      default

      sectionType refers to the travelMode input. By default travelMode is set to
      car. Known values

      are: "carTrain", "country", "ferry", "motorway", "pedestrian", "tollRoad", "tollVignette",

      "traffic", "travelMode", "tunnel", "carpool", and "urban". Default value is
      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.SectionType>
  - name: arrive_at
    description: 'The date and time of arrival at the destination point. It must be
      specified

      as a dateTime. When a time zone offset is not specified it will be assumed to
      be that of the

      destination point. The arriveAt value must be in the future. The arriveAt parameter
      cannot be

      used in conjunction with departAt, minDeviationDistance or minDeviationTime.
      Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: depart_at
    description: 'The date and time of departure from the origin point. Departure
      times apart

      from now must be specified as a dateTime. When a time zone offset is not specified,
      it will be

      assumed to be that of the origin point. The departAt value must be in the future
      in the

      date-time format (1996-12-19T16:39:57-08:00). Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: vehicle_axle_weight
    description: 'Weight per axle of the vehicle in kg. A value of 0 means that

      weight restrictions per axle are not considered. Default value is 0.'
    types:
    - <xref:int>
  - name: vehicle_length
    description: 'Length of the vehicle in meters. A value of 0 means that length

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_height
    description: 'Height of the vehicle in meters. A value of 0 means that height

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_width
    description: 'Width of the vehicle in meters. A value of 0 means that width

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_max_speed
    description: Maximum speed of the vehicle in km/hour. Default value is 0.
    types:
    - <xref:int>
  - name: vehicle_weight
    description: Weight of the vehicle in kilograms. Default value is 0.
    types:
    - <xref:int>
  - name: windingness
    description: 'Level of turns for thrilling route. This parameter can only be used
      in

      conjunction with >>``<<routeType``=thrilling. Known values are: "low", "normal",
      and "high".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.WindingnessLevel>
  - name: incline_level
    description: 'Degree of hilliness for thrilling route. This parameter can only
      be

      used in conjunction with >>``<<routeType``=thrilling. Known values are: "low",
      "normal", and

      "high". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.InclineLevel>
  - name: travel_mode
    description: 'The mode of travel for the requested route. If not defined, default
      is

      ''car''. Note that the requested travelMode may not be available for the entire
      route. Where the

      requested travelMode is not available for a particular section, the travelMode
      element of the

      response for that section will be "other". Note that travel modes bus, motorcycle,
      taxi and van

      are BETA functionality. Full restriction data is not available in all areas.
      In

      **calculateReachableRange** requests, the values bicycle and pedestrian must
      not be used. Known

      values are: "car", "truck", "taxi", "bus", "van", "motorcycle", "bicycle", and
      "pedestrian".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.TravelMode>
  - name: avoid
    description: 'Specifies something that the route calculation should try to avoid
      when

      determining the route. Can be specified multiple times in one request, for example,

      ''&avoid=motorways&avoid=tollRoads&avoid=ferries''. In calculateReachableRange
      requests, the

      value alreadyUsedRoads must not be used. Default value is None.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.route.models.RouteAvoidType>]
  - name: use_traffic_data
    description: 'Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing. Note that although the
      current traffic

      data is ignored during routing,

      the effect of historic traffic on effective road speeds is still

      incorporated. Default value is None.'
    types:
    - <xref:bool>
  - name: route_type
    description: 'The type of route requested. Known values are: "fastest", "shortest",

      "eco", and "thrilling". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteType>
  - name: vehicle_load_type
    description: 'Types of cargo that may be classified as hazardous materials and

      restricted from some roads. Available vehicleLoadType values are US Hazmat classes
      1 through 9,

      plus generic classifications for use in other countries. Values beginning with
      USHazmat are for

      US routing while otherHazmat should be used for all other countries. vehicleLoadType
      can be

      specified multiple times. This parameter is currently only considered for travelMode=truck.

      Known values are: "USHazmatClass1", "USHazmatClass2", "USHazmatClass3", "USHazmatClass4",

      "USHazmatClass5", "USHazmatClass6", "USHazmatClass7", "USHazmatClass8", "USHazmatClass9",

      "otherHazmatExplosive", "otherHazmatGeneral", and "otherHazmatHarmfulToWater".
      Default value is

      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleLoadType>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be LROBasePolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns RouteMatrixResult
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.maps.route.models.RouteMatrixResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.route.aio.MapsRouteClient.get_route_directions
  name: get_route_directions
  summary: 'Returns a route between an origin and a destination, passing through waypoints
    if they are

    specified. The route will take into account factors such as current traffic and
    the typical

    road speeds on the requested day of the week and time of day.


    Information returned includes the distance, estimated travel time, and a representation
    of the

    route geometry. Additional routing information such as optimized waypoint order
    or turn by turn

    instructions is also available, depending on the options selected.'
  signature: 'async get_route_directions(route_points: List[LatLon] | List[Tuple],
    **kwargs: Any) -> RouteDirections'
  parameters:
  - name: route_points
    description: The Coordinate from which the range calculation should start, coordinates
      as (lat, lon)
    isRequired: true
    types:
    - <xref:typing.List>[<xref:azure.maps.route.models.LatLon>]
    - <xref:typing.List>[<xref:typing.Tuple>]
  keywordOnlyParameters:
  - name: supporting_points
    description: 'A GeoJSON Geometry collection representing sequence of coordinates

      used as input for route reconstruction and for calculating zero or more alternative
      routes to

      this reference route.'
    types:
    - <xref:azure.maps.route.models.GeoJsonGeometryCollection>
  - name: avoid_vignette
    description: 'This is a list of 3-character, ISO 3166-1, alpha-3 country codes
      of

      countries in which all toll roads with vignettes are to be avoided, e.g. "AUS,CHE".
      Toll roads

      with vignettes in countries not in the list are unaffected.'
    types:
    - <xref:list>[<xref:str>]
  - name: allow_vignette
    description: 'This is a list of 3-character, ISO 3166-1, alpha-3 country codes
      of

      countries in which toll roads with vignettes are allowed, e.g. "AUS,CHE". Specifying

      **allowVignette** with some countries X is equivalent to specifying **avoidVignette**
      with all

      countries but X. Specifying **allowVignette** with an empty list is the same
      as avoiding all

      toll roads with vignettes.'
    types:
    - <xref:list>[<xref:str>]
  - name: avoid_areas
    description: 'A GeoJSON MultiPolygon representing list of areas to avoid. Only
      rectangle

      polygons are supported. The maximum size of a rectangle is about 160x160 km.
      Maximum number of

      avoided areas is **10**.'
    types:
    - <xref:azure.maps.route.models.GeoJsonMultiPolygon>
  - name: max_alternatives
    description: 'Number of desired alternative routes to be calculated. Default:
      0,

      minimum: 0 and maximum: 5. Default value is None.'
    types:
    - <xref:int>
  - name: alternative_type
    description: 'Controls the optimality, with respect to the given planning

      criteria, of the calculated alternatives compared to the reference route. Known
      values are:

      "anyRoute" and "betterRoute". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.AlternativeRouteType>
  - name: min_deviation_distance
    description: 'All alternative routes returned will follow the reference

      route (see section POST Requests) from the origin point of the calculateRoute
      request for at

      least this number of meters. Can only be used when reconstructing a route. The

      minDeviationDistance parameter cannot be used in conjunction with arriveAt.
      Default value is

      None.'
    types:
    - <xref:int>
  - name: min_deviation_time
    description: 'All alternative routes returned will follow the reference route

      (see section POST Requests) from the origin point of the calculateRoute request
      for at least

      this number of seconds. Can only be used when reconstructing a route. The minDeviationTime

      parameter cannot be used in conjunction with arriveAt. Default value is 0.'
    types:
    - <xref:int>
  - name: instructions_type
    description: 'If specified, guidance instructions will be returned. Note that
      the

      instructionsType parameter cannot be used in conjunction with routeRepresentation=none.
      Known

      values are: "coded", "text", and "tagged". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteInstructionsType>
  - name: language
    description: 'The language parameter determines the language of the guidance messages.
      It

      does not affect proper nouns (the names of streets, plazas, etc.) It has no
      effect when

      instructionsType=coded. Allowed values are (a subset of) the IETF language tags
      described.

      Default value is None.'
    types:
    - <xref:str>
  - name: compute_best_waypoint_order
    description: 'Re-order the route waypoints using a fast heuristic

      algorithm to reduce the route length. Yields best results when used in conjunction
      with

      routeType *shortest*. Notice that origin and destination are excluded from the
      optimized

      waypoint indices. To include origin and destination in the response, please
      increase all the

      indices by 1 to account for the origin, and then add the destination as the
      final index.

      Possible values are true or false. True computes a better order if possible,
      but is not allowed

      to be used in conjunction with maxAlternatives value greater than 0 or in conjunction
      with

      circle waypoints. False will use the locations in the given order and not allowed
      to be used in

      conjunction with routeRepresentation *none*. Default value is None.'
    types:
    - <xref:bool>
  - name: route_representation_for_best_order
    description: 'Specifies the representation of the set of routes

      provided as response. This parameter value can only be used in conjunction with

      computeBestOrder=true. Known values are: "polyline", "summaryOnly", and "none".
      Default value

      is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteRepresentationForBestOrder>
  - name: compute_travel_time
    description: 'Specifies whether to return additional travel times using

      different types of traffic information (none, historic, live) as well as the
      default

      best-estimate travel time. Known values are: "none" and "all". Default value
      is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.ComputeTravelTime>
  - name: vehicle_heading
    description: 'The directional heading of the vehicle in degrees starting at true

      North and continuing in clockwise direction. North is 0 degrees, east is 90
      degrees, south is

      180 degrees, west is 270 degrees. Possible values 0-359. Default value is None.'
    types:
    - <xref:int>
  - name: report
    description: 'Specifies which data should be reported for diagnosis purposes.
      The only

      possible value is *effectiveSettings*. Reports the effective parameters or data
      used when

      calling the API. In the case of defaulted parameters the default will be reflected
      where the

      parameter was not specified by the caller. "effectiveSettings" Default value
      is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.Report>
  - name: filter_section_type
    description: 'Specifies which of the section types is reported in the route

      response. `<br>`:code:>>`<<<br>`For example if sectionType = pedestrian the
      sections which

      are suited for pedestrians only are returned. Multiple types can be used. The
      default

      sectionType refers to the travelMode input. By default travelMode is set to
      car. Known values

      are: "carTrain", "country", "ferry", "motorway", "pedestrian", "tollRoad", "tollVignette",

      "traffic", "travelMode", "tunnel", "carpool", and "urban". Default value is
      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.SectionType>
  - name: arrive_at
    description: 'The date and time of arrival at the destination point. It must be
      specified

      as a dateTime. When a time zone offset is not specified it will be assumed to
      be that of the

      destination point. The arriveAt value must be in the future. The arriveAt parameter
      cannot be

      used in conjunction with departAt, minDeviationDistance or minDeviationTime.
      Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: depart_at
    description: 'The date and time of departure from the origin point. Departure
      times apart

      from now must be specified as a dateTime. When a time zone offset is not specified,
      it will be

      assumed to be that of the origin point. The departAt value must be in the future
      in the

      date-time format (1996-12-19T16:39:57-08:00). Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: vehicle_axle_weight
    description: 'Weight per axle of the vehicle in kg. A value of 0 means that

      weight restrictions per axle are not considered. Default value is 0.'
    types:
    - <xref:int>
  - name: vehicle_length
    description: 'Length of the vehicle in meters. A value of 0 means that length

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_height
    description: 'Height of the vehicle in meters. A value of 0 means that height

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_width
    description: 'Width of the vehicle in meters. A value of 0 means that width

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_max_speed
    description: 'Maximum speed of the vehicle in km/hour. The max speed in the

      vehicle profile is used to check whether a vehicle is allowed on motorways.'
    types:
    - <xref:int>
  - name: vehicle_weight
    description: Weight of the vehicle in kilograms.
    types:
    - <xref:int>
  - name: is_commercial_vehicle
    description: 'Whether the vehicle is used for commercial purposes. Commercial

      vehicles may not be allowed to drive on some roads. Default value is False.'
    types:
    - <xref:bool>
  - name: windingness
    description: 'Level of turns for thrilling route. This parameter can only be used
      in

      conjunction with >>``<<routeType``=thrilling. Known values are: "low", "normal",
      and "high".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.WindingnessLevel>
  - name: incline_level
    description: 'Degree of hilliness for thrilling route. This parameter can only
      be

      used in conjunction with >>``<<routeType``=thrilling. Known values are: "low",
      "normal", and

      "high". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.InclineLevel>
  - name: travel_mode
    description: 'The mode of travel for the requested route. If not defined, default
      is

      ''car''. Note that the requested travelMode may not be available for the entire
      route. Where the

      requested travelMode is not available for a particular section, the travelMode
      element of the

      response for that section will be "other". Note that travel modes bus, motorcycle,
      taxi and van

      are BETA functionality. Full restriction data is not available in all areas.
      In

      **calculateReachableRange** requests, the values bicycle and pedestrian must
      not be used. Known

      values are: "car", "truck", "taxi", "bus", "van", "motorcycle", "bicycle", and
      "pedestrian".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.TravelMode>
  - name: avoid
    description: 'Specifies something that the route calculation should try to avoid
      when

      determining the route. Can be specified multiple times in one request, for example,

      ''&avoid=motorways&avoid=tollRoads&avoid=ferries''. In calculateReachableRange
      requests, the

      value alreadyUsedRoads must not be used. Default value is None.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.route.models.RouteAvoidType>]
  - name: use_traffic_data
    description: 'Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing.'
    types:
    - <xref:bool>
  - name: route_type
    description: 'The type of route requested. Known values are: "fastest", "shortest",

      "eco", and "thrilling". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteType>
  - name: vehicle_load_type
    description: 'Types of cargo that may be classified as hazardous materials and

      restricted from some roads. Available vehicleLoadType values are US Hazmat classes
      1 through 9,

      plus generic classifications for use in other countries. Values beginning with
      USHazmat are for

      US routing while otherHazmat should be used for all other countries. vehicleLoadType
      can be

      specified multiple times. This parameter is currently only considered for travelMode=truck.

      Known values are: "USHazmatClass1", "USHazmatClass2", "USHazmatClass3", "USHazmatClass4",

      "USHazmatClass5", "USHazmatClass6", "USHazmatClass7", "USHazmatClass8", "USHazmatClass9",

      "otherHazmatExplosive", "otherHazmatGeneral", and "otherHazmatHarmfulToWater".
      Default value is

      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleLoadType>
  - name: vehicle_engine_type
    description: 'Engine type of the vehicle. When a detailed Consumption Model is

      specified, it must be consistent with the value of **vehicleEngineType**. Known
      values are:

      "combustion" and "electric". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleEngineType>
  - name: constant_speed_consumption_in_liters_per_hundred_km
    description: 'Specifies the speed-dependent

      component of consumption.'
    types:
    - <xref:str>
  - name: current_fuel_in_liters
    description: Specifies the current supply of fuel in liters.
    types:
    - <xref:float>
  - name: auxiliary_power_in_liters_per_hour
    description: 'Specifies the amount of fuel consumed for

      sustaining auxiliary systems of the vehicle, in liters per hour.'
    types:
    - <xref:float>
  - name: fuel_energy_density_in_megajoules_per_liter
    description: 'Specifies the amount of chemical energy

      stored in one liter of fuel in megajoules (MJ).'
    types:
    - <xref:float>
  - name: acceleration_efficiency
    description: 'Specifies the efficiency of converting chemical energy stored

      in fuel to kinetic energy when the vehicle accelerates *(i.e.

      KineticEnergyGained/ChemicalEnergyConsumed). ChemicalEnergyConsumed* is obtained
      by converting

      consumed fuel to chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.'
    types:
    - <xref:float>
  - name: deceleration_efficiency
    description: 'Specifies the efficiency of converting kinetic energy to

      saved (not consumed) fuel when the vehicle decelerates *(i.e.

      ChemicalEnergySaved/KineticEnergyLost). ChemicalEnergySaved* is obtained by
      converting saved

      (not consumed) fuel to energy using **fuelEnergyDensityInMJoulesPerLiter**.'
    types:
    - <xref:float>
  - name: uphill_efficiency
    description: 'Specifies the efficiency of converting chemical energy stored in

      fuel to potential energy when the vehicle gains elevation *(i.e.

      PotentialEnergyGained/ChemicalEnergyConsumed). ChemicalEnergyConsumed* is obtained
      by

      converting consumed fuel to chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.'
    types:
    - <xref:float>
  - name: downhill_efficiency
    description: 'Specifies the efficiency of converting potential energy to saved

      (not consumed) fuel when the vehicle loses elevation *(i.e.

      ChemicalEnergySaved/PotentialEnergyLost). ChemicalEnergySaved* is obtained by
      converting saved

      (not consumed) fuel to energy using **fuelEnergyDensityInMJoulesPerLiter**.'
    types:
    - <xref:float>
  - name: constant_speed_consumption_in_kw_h_per_hundred_km
    description: 'Specifies the speed-dependent

      component of consumption.'
    types:
    - <xref:str>
  - name: current_charge_in_kw_h
    description: 'Specifies the current electric energy supply in kilowatt hours

      (kWh).'
    types:
    - <xref:float>
  - name: max_charge_in_kw_h
    description: 'Specifies the maximum electric energy supply in kilowatt hours

      (kWh) that may be stored in the vehicle''s battery.'
    types:
    - <xref:float>
  - name: auxiliary_power_in_kw
    description: 'Specifies the amount of power consumed for sustaining auxiliary

      systems, in kilowatts (kW).'
    types:
    - <xref:float>
  return:
    description: RouteDirections
    types:
    - <xref:azure.maps.route.models.RouteDirections>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.route.aio.MapsRouteClient.get_route_directions_batch_sync
  name: get_route_directions_batch_sync
  summary: 'Sends batches of route directions requests.

    The method return the result directly.'
  signature: 'async get_route_directions_batch_sync(queries: List[str], **kwargs:
    Any) -> RouteDirectionsBatchResult'
  parameters:
  - name: queries
    description: 'The list of route directions queries/requests to

      process. The list can contain  a max of 700 queries for async and 100 queries
      for sync version

      and must contain at least 1 query. Required.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: RouteDirectionsBatchResult
    types:
    - <xref:azure.maps.route.models.RouteDirectionsBatchResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.route.aio.MapsRouteClient.get_route_matrix
  name: get_route_matrix
  summary: "Calculates a matrix of route summaries for a set of routes defined by\
    \ origin and destination locations.\nThe method return the result directly.\n\n\
    The maximum size of a matrix for this method is 100\n   (the number of origins\
    \ multiplied by the number of destinations)"
  signature: 'async get_route_matrix(query: RouteMatrixQuery, **kwargs: Any) -> RouteMatrixResult'
  parameters:
  - name: query
    description: 'The matrix of origin and destination coordinates to compute the

      route distance, travel time and other summary for each cell of the matrix based
      on the input

      parameters. The minimum and the maximum cell count supported are 1 and **700**
      for async and

      **100** for sync respectively. For example, it can be 35 origins and 20 destinations
      or 25

      origins and 25 destinations for async API. Is either a model type or a IO type.
      Required.'
    isRequired: true
    types:
    - <xref:azure.maps.route.models.RouteMatrixQuery>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: wait_for_results
    description: 'Boolean to indicate whether to execute the request synchronously.
      If

      set to true, user will get a 200 response if the request is finished under 120
      seconds.

      Otherwise, user will get a 202 response right away. Please refer to the API
      description for

      more details on 202 response. **Supported only for async request**. Default
      value is None.'
    types:
    - <xref:bool>
  - name: compute_travel_time
    description: 'Specifies whether to return additional travel times using

      different types of traffic information (none, historic, live) as well as the
      default

      best-estimate travel time. Known values are: "none" and "all". Default value
      is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.ComputeTravelTime>
  - name: filter_section_type
    description: 'Specifies which of the section types is reported in the route

      response. `<br>`:code:>>`<<<br>`For example if sectionType = pedestrian the
      sections which

      are suited for pedestrians only are returned. Multiple types can be used. The
      default

      sectionType refers to the travelMode input. By default travelMode is set to
      car. Known values

      are: "carTrain", "country", "ferry", "motorway", "pedestrian", "tollRoad", "tollVignette",

      "traffic", "travelMode", "tunnel", "carpool", and "urban". Default value is
      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.SectionType>
  - name: arrive_at
    description: 'The date and time of arrival at the destination point. It must be
      specified

      as a dateTime. When a time zone offset is not specified it will be assumed to
      be that of the

      destination point. The arriveAt value must be in the future. The arriveAt parameter
      cannot be

      used in conjunction with departAt, minDeviationDistance or minDeviationTime.
      Default value is

      None.'
    types:
    - <xref:datetime.datetime>
  - name: depart_at
    description: 'The date and time of departure from the origin point. Departure
      times apart

      from now must be specified as a dateTime. When a time zone offset is not specified,
      it will be

      assumed to be that of the origin point. The departAt value must be in the future
      in the

      date-time format (1996-12-19T16:39:57-08:00). Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: vehicle_axle_weight
    description: 'Weight per axle of the vehicle in kg. A value of 0 means that

      weight restrictions per axle are not considered. Default value is 0.'
    types:
    - <xref:int>
  - name: vehicle_length
    description: 'Length of the vehicle in meters. A value of 0 means that length

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_height
    description: 'Height of the vehicle in meters. A value of 0 means that height

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_width
    description: 'Width of the vehicle in meters. A value of 0 means that width

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_max_speed
    description: Maximum speed of the vehicle in km/hour. Default value is 0.
    types:
    - <xref:int>
  - name: vehicle_weight
    description: Weight of the vehicle in kilograms. Default value is 0.
    types:
    - <xref:int>
  - name: windingness
    description: 'Level of turns for thrilling route. This parameter can only be used
      in

      conjunction with >>``<<routeType``=thrilling. Known values are: "low", "normal",
      and "high".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.WindingnessLevel>
  - name: incline_level
    description: 'Degree of hilliness for thrilling route. This parameter can only
      be

      used in conjunction with >>``<<routeType``=thrilling. Known values are: "low",
      "normal", and

      "high". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.InclineLevel>
  - name: travel_mode
    description: 'The mode of travel for the requested route. If not defined, default
      is

      ''car''. Note that the requested travelMode may not be available for the entire
      route. Where the

      requested travelMode is not available for a particular section, the travelMode
      element of the

      response for that section will be "other". Note that travel modes bus, motorcycle,
      taxi and van

      are BETA functionality. Full restriction data is not available in all areas.
      In

      **calculateReachableRange** requests, the values bicycle and pedestrian must
      not be used. Known

      values are: "car", "truck", "taxi", "bus", "van", "motorcycle", "bicycle", and
      "pedestrian".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.TravelMode>
  - name: avoid
    description: 'Specifies something that the route calculation should try to avoid
      when

      determining the route. Can be specified multiple times in one request, for example,

      ''&avoid=motorways&avoid=tollRoads&avoid=ferries''. In calculateReachableRange
      requests, the

      value alreadyUsedRoads must not be used. Default value is None.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.route.models.RouteAvoidType>]
  - name: use_traffic_data
    description: 'Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing. Note that although the
      current traffic

      data is ignored during routing,

      the effect of historic traffic on effective road speeds is still

      incorporated. Default value is None.'
    types:
    - <xref:bool>
  - name: route_type
    description: 'The type of route requested. Known values are: "fastest", "shortest",

      "eco", and "thrilling". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteType>
  - name: vehicle_load_type
    description: 'Types of cargo that may be classified as hazardous materials and

      restricted from some roads. Available vehicleLoadType values are US Hazmat classes
      1 through 9,

      plus generic classifications for use in other countries. Values beginning with
      USHazmat are for

      US routing while otherHazmat should be used for all other countries. vehicleLoadType
      can be

      specified multiple times. This parameter is currently only considered for travelMode=truck.

      Known values are: "USHazmatClass1", "USHazmatClass2", "USHazmatClass3", "USHazmatClass4",

      "USHazmatClass5", "USHazmatClass6", "USHazmatClass7", "USHazmatClass8", "USHazmatClass9",

      "otherHazmatExplosive", "otherHazmatGeneral", and "otherHazmatHarmfulToWater".
      Default value is

      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleLoadType>
  return:
    description: RouteMatrixResult
    types:
    - <xref:azure.maps.route.models.RouteMatrixResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.route.aio.MapsRouteClient.get_route_range
  name: get_route_range
  summary: '**Route Range (Isochrone) API**


    This service will calculate a set of locations that can be reached from the origin
    point based

    on fuel, energy,  time or distance budget that is specified. A polygon boundary
    (or Isochrone)

    is returned in a counterclockwise  orientation as well as the precise polygon
    center which was

    the result of the origin point.'
  signature: 'async get_route_range(coordinates: LatLon | Tuple, **kwargs: Any) ->
    RouteRangeResult'
  parameters:
  - name: coordinates
    description: The Coordinate from which the range calculation should start, coordinates
      as (lat, lon)
    isRequired: true
    types:
    - <xref:azure.maps.route.models.LatLon>
    - <xref:typing.Tuple>
  keywordOnlyParameters:
  - name: fuel_budget_in_liters
    description: 'Fuel budget in liters that determines maximal range which can

      be travelled using the specified Combustion Consumption Model.:code:*<br>* When

      fuelBudgetInLiters is used, it is mandatory to specify a detailed  Combustion
      Consumption

      Model.:code:*<br>* Exactly one budget (fuelBudgetInLiters, energyBudgetInkWh,
      timeBudgetInSec,

      or distanceBudgetInMeters) must be used. Default value is None.'
    types:
    - <xref:float>
  - name: energy_budget_in_kw_h
    description: 'Electric energy budget in kilowatt hours (kWh) that determines

      maximal range which can be travelled using the specified Electric Consumption

      Model.:code:*<br>* When energyBudgetInkWh is used, it is mandatory to specify
      a detailed

      Electric Consumption Model.:code:*<br>* Exactly one budget (fuelBudgetInLiters,

      energyBudgetInkWh, timeBudgetInSec, or distanceBudgetInMeters) must be used.
      Default value is

      None.'
    types:
    - <xref:float>
  - name: time_budget_in_sec
    description: 'Time budget in seconds that determines maximal range which can be

      travelled using driving time. The Consumption Model will only affect the range
      when routeType

      is eco.:code:*<br>* Exactly one budget (fuelBudgetInLiters, energyBudgetInkWh,
      timeBudgetInSec,

      or distanceBudgetInMeters) must be used. Default value is None.'
    types:
    - <xref:float>
  - name: distance_budget_in_meters
    description: 'Distance budget in meters that determines maximal range

      which can be travelled using driving distance.  The Consumption Model will only
      affect the

      range when routeType is eco.:code:*<br>* Exactly one budget (fuelBudgetInLiters,

      energyBudgetInkWh, timeBudgetInSec, or distanceBudgetInMeters) must be used.
      Default value is

      None.'
    types:
    - <xref:float>
  - name: depart_at
    description: 'The date and time of departure from the origin point. Departure
      times apart

      from now must be specified as a dateTime. When a time zone offset is not specified,
      it will be

      assumed to be that of the origin point. The departAt value must be in the future
      in the

      date-time format (1996-12-19T16:39:57-08:00). Default value is None.'
    types:
    - <xref:datetime.datetime>
  - name: route_type
    description: 'The type of route requested. Known values are: "fastest", "shortest",

      "eco", and "thrilling". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.RouteType>
  - name: use_traffic_data
    description: 'Possible values:

      * true - Do consider all available traffic information during routing

      * false - Ignore current traffic data during routing.'
    types:
    - <xref:bool>
  - name: avoid
    description: 'Specifies something that the route calculation should try to avoid
      when

      determining the route. Can be specified multiple times in one request, for example,

      ''&avoid=motorways&avoid=tollRoads&avoid=ferries''. In calculateReachableRange
      requests, the

      value alreadyUsedRoads must not be used. Default value is None.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.route.models.RouteAvoidType>]
  - name: travel_mode
    description: 'The mode of travel for the requested route. If not defined, default
      is

      ''car''. Note that the requested travelMode may not be available for the entire
      route. Where the

      requested travelMode is not available for a particular section, the travelMode
      element of the

      response for that section will be "other". Note that travel modes bus, motorcycle,
      taxi and van

      are BETA functionality. Full restriction data is not available in all areas.
      In

      **calculateReachableRange** requests, the values bicycle and pedestrian must
      not be used. Known

      values are: "car", "truck", "taxi", "bus", "van", "motorcycle", "bicycle", and
      "pedestrian".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.TravelMode>
  - name: incline_level
    description: 'Degree of hilliness for thrilling route. This parameter can only
      be

      used in conjunction with >>``<<routeType``=thrilling. Known values are: "low",
      "normal", and

      "high". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.InclineLevel>
  - name: windingness
    description: 'Level of turns for thrilling route. This parameter can only be used
      in

      conjunction with >>``<<routeType``=thrilling. Known values are: "low", "normal",
      and "high".

      Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.WindingnessLevel>
  - name: vehicle_axle_weight
    description: 'Weight per axle of the vehicle in kg. A value of 0 means that

      weight restrictions per axle are not considered. Default value is 0.'
    types:
    - <xref:int>
  - name: vehicle_width
    description: 'Width of the vehicle in meters. A value of 0 means that width

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_height
    description: 'Height of the vehicle in meters. A value of 0 means that height

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_length
    description: 'Length of the vehicle in meters. A value of 0 means that length

      restrictions are not considered. Default value is 0.'
    types:
    - <xref:float>
  - name: vehicle_max_speed
    description: 'Maximum speed of the vehicle in km/hour. The max speed in the

      vehicle profile is used to check whether a vehicle is allowed on motorways.

      Default value is 0.'
    types:
    - <xref:int>
  - name: vehicle_weight
    description: 'Weight of the vehicle in kilograms. Default

      value is 0.'
    types:
    - <xref:int>
  - name: is_commercial_vehicle
    description: 'Whether the vehicle is used for commercial purposes. Commercial

      vehicles may not be allowed to drive on some roads. Default value is False.'
    types:
    - <xref:bool>
  - name: vehicle_load_type
    description: 'Types of cargo that may be classified as hazardous materials and

      restricted from some roads. Available vehicleLoadType values are US Hazmat classes
      1 through 9,

      plus generic classifications for use in other countries. Values beginning with
      USHazmat are for

      US routing while otherHazmat should be used for all other countries. vehicleLoadType
      can be

      specified multiple times. This parameter is currently only considered for travelMode=truck.

      Known values are: "USHazmatClass1", "USHazmatClass2", "USHazmatClass3", "USHazmatClass4",

      "USHazmatClass5", "USHazmatClass6", "USHazmatClass7", "USHazmatClass8", "USHazmatClass9",

      "otherHazmatExplosive", "otherHazmatGeneral", and "otherHazmatHarmfulToWater".
      Default value is

      None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleLoadType>
  - name: vehicle_engine_type
    description: 'Engine type of the vehicle. When a detailed Consumption Model is

      specified, it must be consistent with the value of **vehicleEngineType**. Known
      values are:

      "combustion" and "electric". Default value is None.'
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.VehicleEngineType>
  - name: constant_speed_consumption_in_liters_per_hundred_km
    description: 'Specifies the speed-dependent

      component of consumption.'
    types:
    - <xref:str>
  - name: current_fuel_in_liters
    description: Specifies the current supply of fuel in liters.
    types:
    - <xref:float>
  - name: auxiliary_power_in_liters_per_hour
    description: 'Specifies the amount of fuel consumed for

      sustaining auxiliary systems of the vehicle, in liters per hour.'
    types:
    - <xref:float>
  - name: fuel_energy_density_in_megajoules_per_liter
    description: 'Specifies the amount of chemical energy

      stored in one liter of fuel in megajoules (MJ). It is used in conjunction with
      the

      ***Efficiency** parameters for conversions between saved or consumed energy
      and fuel.'
    types:
    - <xref:float>
  - name: acceleration_efficiency
    description: 'Specifies the efficiency of converting chemical energy stored

      in fuel to kinetic energy when the vehicle accelerates *(i.e.

      KineticEnergyGained/ChemicalEnergyConsumed). ChemicalEnergyConsumed* is obtained
      by converting

      consumed fuel to chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.'
    types:
    - <xref:float>
  - name: deceleration_efficiency
    description: 'Specifies the efficiency of converting kinetic energy to

      saved (not consumed) fuel when the vehicle decelerates *(i.e.

      ChemicalEnergySaved/KineticEnergyLost). ChemicalEnergySaved* is obtained by
      converting saved

      (not consumed) fuel to energy using **fuelEnergyDensityInMJoulesPerLiter**.
      Default

      value is None.'
    types:
    - <xref:float>
  - name: uphill_efficiency
    description: 'Specifies the efficiency of converting chemical energy stored in

      fuel to potential energy when the vehicle gains elevation *(i.e.

      PotentialEnergyGained/ChemicalEnergyConsumed). ChemicalEnergyConsumed* is obtained
      by

      converting consumed fuel to chemical energy using **fuelEnergyDensityInMJoulesPerLiter**.

      Default value is None.'
    types:
    - <xref:float>
  - name: downhill_efficiency
    description: 'Specifies the efficiency of converting potential energy to saved

      (not consumed) fuel when the vehicle loses elevation *(i.e.

      ChemicalEnergySaved/PotentialEnergyLost). ChemicalEnergySaved* is obtained by
      converting saved

      (not consumed) fuel to energy using **fuelEnergyDensityInMJoulesPerLiter**.
      Default

      value is None.'
    types:
    - <xref:float>
  - name: constant_speed_consumption_in_kw_h_per_hundred_km
    description: 'Specifies the speed-dependent

      component of consumption. Default value is None.'
    types:
    - <xref:str>
  - name: current_charge_in_kw_h
    description: 'Specifies the current electric energy supply in kilowatt hours

      (kWh). Default value is None.'
    types:
    - <xref:float>
  - name: max_charge_in_kw_h
    description: 'Specifies the maximum electric energy supply in kilowatt hours

      (kWh) that may be stored in the vehicle''s battery. Default value is None.'
    types:
    - <xref:float>
  - name: auxiliary_power_in_kw
    description: 'Specifies the amount of power consumed for sustaining auxiliary

      systems, in kilowatts (kW). Default value is None.'
    types:
    - <xref:float>
  return:
    description: RouteRangeResult
    types:
    - <xref:azure.maps.route.models.RouteRangeResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
