### YamlMime:PythonClass
uid: azure.maps.route.models.RouteInstruction
name: RouteInstruction
fullName: azure.maps.route.models.RouteInstruction
module: azure.maps.route.models
summary: 'A set of attributes describing a maneuver, e.g. ''Turn right'', ''Keep left'',
  ''Take the ferry'',

  ''Take the motorway'', ''Arrive''.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'RouteInstruction(*, point: _models.LatLongPair | None = None, instruction_type:
    str | _models.GuidanceInstructionType | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: point
    description: A location represented as a latitude and longitude.
    defaultValue: None
    types:
    - <xref:azure.maps.route.models.LatLongPair>
  - name: instruction_type
    description: 'Type of the instruction, e.g., turn or change of road form. Known

      values are: "TURN", "ROAD_CHANGE", "LOCATION_DEPARTURE", "LOCATION_ARRIVAL",
      "DIRECTION_INFO",

      and "LOCATION_WAYPOINT".'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.maps.route.models.GuidanceInstructionType>
variables:
- description: 'Distance from the start of the route to the point of the

    instruction.'
  name: route_offset_in_meters
  types:
  - <xref:int>
- description: 'Estimated travel time up to the point corresponding to

    routeOffsetInMeters.'
  name: travel_time_in_seconds
  types:
  - <xref:int>
- description: A location represented as a latitude and longitude.
  name: point
  types:
  - <xref:azure.maps.route.models.LatLongPair>
- description: 'The index of the point in the list of polyline "points" corresponding
    to the

    point of the instruction.'
  name: point_index
  types:
  - <xref:int>
- description: 'Type of the instruction, e.g., turn or change of road form. Known

    values are: "TURN", "ROAD_CHANGE", "LOCATION_DEPARTURE", "LOCATION_ARRIVAL", "DIRECTION_INFO",

    and "LOCATION_WAYPOINT".'
  name: instruction_type
  types:
  - <xref:str>
  - <xref:azure.maps.route.models.GuidanceInstructionType>
- description: 'The road number(s) of the next significant road segment(s) after the

    maneuver, or of the road(s) to be followed. Example: ["E34", "N205"].'
  name: road_numbers
  types:
  - <xref:list>[<xref:str>]
- description: 'The number(s) of a highway exit taken by the current maneuver. If
    an exit

    has multiple exit numbers, they will be separated by "," and possibly aggregated
    by "-", e.g.,

    "10, 13-15".'
  name: exit_number
  types:
  - <xref:str>
- description: 'Street name of the next significant road segment after the maneuver,
    or of the

    street that should be followed.'
  name: street
  types:
  - <xref:str>
- description: 'The text on a signpost which is most relevant to the maneuver, or
    to the

    direction that should be followed.'
  name: signpost_text
  types:
  - <xref:str>
- description: '3-character [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html)

    alpha-3 country code. E.g. USA.'
  name: country_code
  types:
  - <xref:str>
- description: 'A subdivision (e.g., state) of the country, represented by the second
    part of

    an [ISO 3166-2](https://www.iso.org/standard/63546.html) code. This is only available
    for

    some countries like the US, Canada, and Mexico.'
  name: state_code
  types:
  - <xref:str>
- description: 'The type of the junction where the maneuver takes place. For larger

    roundabouts, two separate instructions are generated for entering and leaving
    the roundabout.

    Known values are: "REGULAR", "ROUNDABOUT", and "BIFURCATION".'
  name: junction_type
  types:
  - <xref:str>
  - <xref:azure.maps.route.models.JunctionType>
- description: "Indicates the direction of an instruction. If junctionType\nindicates\
    \ a turn instruction:\n\n* 180 = U-turn \n\n* [-179, -1] = Left turn \n\n* 0 =\
    \ Straight on (a '0 degree' turn) \n\n* [1, 179] = Right turn \n\nIf junctionType\
    \ indicates a bifurcation instruction:\n\n* <0 - keep left \n\n* &gt;0 - keep\
    \ right."
  name: turn_angle_in_degrees
  types:
  - <xref:int>
- description: This indicates which exit to take at a roundabout.
  name: roundabout_exit_number
  types:
  - <xref:str>
- description: 'It is possible to optionally combine the instruction with the

    next one. This can be used to build messages like "Turn left and then turn right".'
  name: possible_combine_with_next
  types:
  - <xref:bool>
- description: 'Indicates left-hand vs. right-hand side driving at the point of the

    maneuver. Known values are: "LEFT" and "RIGHT".'
  name: driving_side
  types:
  - <xref:str>
  - <xref:azure.maps.route.models.DrivingSide>
- description: 'A code identifying the maneuver. Known values are: "ARRIVE", "ARRIVE_LEFT",

    "ARRIVE_RIGHT", "DEPART", "STRAIGHT", "KEEP_RIGHT", "BEAR_RIGHT", "TURN_RIGHT",
    "SHARP_RIGHT",

    "KEEP_LEFT", "BEAR_LEFT", "TURN_LEFT", "SHARP_LEFT", "MAKE_UTURN", "ENTER_MOTORWAY",

    "ENTER_FREEWAY", "ENTER_HIGHWAY", "TAKE_EXIT", "MOTORWAY_EXIT_LEFT", "MOTORWAY_EXIT_RIGHT",

    "TAKE_FERRY", "ROUNDABOUT_CROSS", "ROUNDABOUT_RIGHT", "ROUNDABOUT_LEFT", "ROUNDABOUT_BACK",

    "TRY_MAKE_UTURN", "FOLLOW", "SWITCH_PARALLEL_ROAD", "SWITCH_MAIN_ROAD", "ENTRANCE_RAMP",

    "WAYPOINT_LEFT", "WAYPOINT_RIGHT", and "WAYPOINT_REACHED".'
  name: maneuver
  types:
  - <xref:str>
  - <xref:azure.maps.route.models.GuidanceManeuver>
- description: A human-readable message for the maneuver.
  name: message
  types:
  - <xref:str>
- description: "A human-readable message for the maneuver combined with the message\n\
    from the next instruction. Sometimes it is possible to combine two successive\
    \ instructions into\na single instruction making it easier to follow. When this\
    \ is the case the\npossibleCombineWithNext flag will be true. For example:\n\n\
    <!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\
    \n   10. Turn left onto Einsteinweg/A10/E22 towards Ring Amsterdam\n   11. Follow\
    \ Einsteinweg/A10/E22 towards Ring Amsterdam\n   ````\n\nThe possibleCombineWithNext\
    \ flag on instruction 10 is true. This indicates to the clients of\ncoded guidance\
    \ that it can be combined with instruction 11. The instructions will be combined\n\
    automatically for clients requesting human-readable guidance. The combinedMessage\
    \ field\ncontains the combined message:\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\"\
    : \"preserve\", \"force\": false, \"language\": \"default\", \"highlight_args\"\
    : {}, \"linenos\": false} -->\n\n````default\n\n   Turn left onto Einsteinweg/A10/E22\
    \ towards Ring Amsterdam\n   then follow Einsteinweg/A10/E22 towards Ring Amsterdam.\n\
    \   ````"
  name: combined_message
  types:
  - <xref:str>
methods:
- uid: azure.maps.route.models.RouteInstruction.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.maps.route.models.RouteInstruction.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:ModelType>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.maps.route.models.RouteInstruction.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.maps.route.models.RouteInstruction.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A key extractor function.
    defaultValue: None
    types:
    - <xref:function>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:ModelType>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.maps.route.models.RouteInstruction.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.maps.route.models.RouteInstruction.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
