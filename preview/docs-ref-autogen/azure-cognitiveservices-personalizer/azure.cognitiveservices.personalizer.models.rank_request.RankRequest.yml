### YamlMime:PythonClass
uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest
name: RankRequest
fullName: azure.cognitiveservices.personalizer.models.rank_request.RankRequest
module: azure.cognitiveservices.personalizer.models.rank_request
inheritances:
- msrest.serialization.Model
summary: 'Request a set of actions to be ranked by the Personalizer service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: RankRequest(**kwargs)
  parameters:
  - name: context_features
    description: 'Features of the context used for Personalizer as

      a

      dictionary of dictionaries. This depends on the application, and

      typically includes features about the current user, their

      device, profile information, data about time and date, etc.'
    isRequired: true
    types:
    - <xref:list>[<xref:object>]
  - name: actions
    description: 'Required. The set of actions the Personalizer service can

      pick from.

      The set should not contain more than 50 actions.

      The order of the actions does not affect the rank result but the order

      should match the sequence your application would have used to display

      them.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.personalizer.models.RankableAction>]
  - name: excluded_actions
    description: The set of action ids to exclude from ranking.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: event_id
    description: 'Optionally pass an eventId that uniquely identifies this

      Rank event.

      If null, the service generates a unique eventId. The eventId will be used

      for

      associating this request with its reward, as well as seeding the

      pseudo-random

      generator when making a Personalizer call.'
    isRequired: true
    types:
    - <xref:str>
  - name: defer_activation
    description: 'Send false if the user will see the rank results,

      therefore

      Personalizer will expect a Reward call, otherwise it will assign the

      default

      Reward to the event. Send true if it is possible the user will not see the

      rank results, because the page is rendering later, or the Rank results may

      be

      overridden by code further downstream. Default value: False .'
    isRequired: true
    types:
    - <xref:bool>
methods:
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.cognitiveservices.personalizer.models.rank_request.RankRequest.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
