### YamlMime:PythonClass
uid: azure.mgmt.datalake.store.operations.AccountsOperations
name: AccountsOperations
fullName: azure.mgmt.datalake.store.operations.AccountsOperations
module: azure.mgmt.datalake.store.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.datalake.store.DataLakeStoreAccountManagementClient>'s\n\
  >\n> <xref:accounts> attribute.\n>"
constructor:
  syntax: AccountsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.begin_create
  name: begin_create
  summary: Creates the specified Data Lake Store account.
  signature: 'begin_create(resource_group_name: str, account_name: str, parameters:
    _models.CreateDataLakeStoreAccountParameters, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.DataLakeStoreAccount]'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of the Data Lake Store account. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to create the Data Lake Store account. Is either
      a

      CreateDataLakeStoreAccountParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.store.models.CreateDataLakeStoreAccountParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either DataLakeStoreAccount
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.datalake.store.models.DataLakeStoreAccount>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.begin_delete
  name: begin_delete
  summary: Deletes the specified Data Lake Store account.
  signature: 'begin_delete(resource_group_name: str, account_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of the Data Lake Store account. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.begin_update
  name: begin_update
  summary: Updates the specified Data Lake Store account information.
  signature: 'begin_update(resource_group_name: str, account_name: str, parameters:
    _models.UpdateDataLakeStoreAccountParameters, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.DataLakeStoreAccount]'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of the Data Lake Store account. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to update the Data Lake Store account. Is either
      a

      UpdateDataLakeStoreAccountParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either DataLakeStoreAccount
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.datalake.store.models.DataLakeStoreAccount>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.check_name_availability
  name: check_name_availability
  summary: Checks whether the specified account name is available or taken.
  signature: 'check_name_availability(location: str, parameters: _models.CheckNameAvailabilityParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.NameAvailabilityInformation'
  parameters:
  - name: location
    description: The resource location without whitespace. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to check the Data Lake Store account name availability.

      Is either a CheckNameAvailabilityParameters type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.store.models.CheckNameAvailabilityParameters>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NameAvailabilityInformation or the result of cls(response)
    types:
    - <xref:azure.mgmt.datalake.store.models.NameAvailabilityInformation>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.enable_key_vault
  name: enable_key_vault
  summary: 'Attempts to enable a user managed Key Vault for encryption of the specified
    Data Lake Store

    account.'
  signature: 'enable_key_vault(resource_group_name: str, account_name: str, **kwargs:
    Any) -> None'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of the Data Lake Store account. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.get
  name: get
  summary: Gets the specified Data Lake Store account.
  signature: 'get(resource_group_name: str, account_name: str, **kwargs: Any) -> DataLakeStoreAccount'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The name of the Data Lake Store account. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DataLakeStoreAccount or the result of cls(response)
    types:
    - <xref:azure.mgmt.datalake.store.models.DataLakeStoreAccount>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.list
  name: list
  summary: 'Lists the Data Lake Store accounts within the subscription. The response
    includes a link to the

    next page of results, if any.'
  signature: 'list(filter: str | None = None, top: int | None = None, skip: int |
    None = None, select: str | None = None, orderby: str | None = None, count: bool
    | None = None, **kwargs: Any) -> Iterable[DataLakeStoreAccountBasic]'
  parameters:
  - name: filter
    description: OData filter. Optional. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The number of items to return. Optional. Default value is None.
    isRequired: true
    types:
    - <xref:int>
  - name: skip
    description: 'The number of items to skip over before returning elements. Optional.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  - name: select
    description: 'OData Select statement. Limits the properties on each entry to just
      those

      requested, e.g. Categories?$select=CategoryName,Description. Optional. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: orderby
    description: 'OrderBy clause. One or more comma-separated expressions with an
      optional "asc"

      (the default) or "desc" depending on the order you''d like the values sorted,
      e.g.

      Categories?$orderby=CategoryName desc. Optional. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: count
    description: 'The Boolean value of true or false to request a count of the matching
      resources

      included with the resources in the response, e.g. Categories?$count=true. Optional.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either DataLakeStoreAccountBasic or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.datalake.store.models.DataLakeStoreAccountBasic>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Lists the Data Lake Store accounts within a specific resource group. The
    response includes a

    link to the next page of results, if any.'
  signature: 'list_by_resource_group(resource_group_name: str, filter: str | None
    = None, top: int | None = None, skip: int | None = None, select: str | None =
    None, orderby: str | None = None, count: bool | None = None, **kwargs: Any) ->
    Iterable[DataLakeStoreAccountBasic]'
  parameters:
  - name: resource_group_name
    description: The name of the Azure resource group. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: OData filter. Optional. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: The number of items to return. Optional. Default value is None.
    isRequired: true
    types:
    - <xref:int>
  - name: skip
    description: 'The number of items to skip over before returning elements. Optional.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:int>
  - name: select
    description: 'OData Select statement. Limits the properties on each entry to just
      those

      requested, e.g. Categories?$select=CategoryName,Description. Optional. Default
      value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: orderby
    description: 'OrderBy clause. One or more comma-separated expressions with an
      optional "asc"

      (the default) or "desc" depending on the order you''d like the values sorted,
      e.g.

      Categories?$orderby=CategoryName desc. Optional. Default value is None.'
    isRequired: true
    types:
    - <xref:str>
  - name: count
    description: 'A Boolean value of true or false to request a count of the matching
      resources

      included with the resources in the response, e.g. Categories?$count=true. Optional.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:bool>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either DataLakeStoreAccountBasic or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.datalake.store.models.DataLakeStoreAccountBasic>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.datalake.store.operations.AccountsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.datalake.store.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\datalake\\store\\models\\__init__.py'>
