### YamlMime:PythonClass
uid: azure.maps.render.MapsRenderClient
name: MapsRenderClient
fullName: azure.maps.render.MapsRenderClient
module: azure.maps.render
constructor:
  syntax: 'MapsRenderClient(credential: AzureKeyCredential | AzureSasCredential |
    TokenCredential, **kwargs: Any)'
  parameters:
  - name: credential
    isRequired: true
methods:
- uid: azure.maps.render.MapsRenderClient.close
  name: close
  signature: close() -> None
- uid: azure.maps.render.MapsRenderClient.get_copyright_caption
  name: get_copyright_caption
  summary: 'Use to get copyright information to use when rendering a tile.


    The `Get Copyright Caption` API is an HTTP GET request designed to serve copyright

    information to be used with tiles requested from the Render service. In addition
    to a basic

    copyright for the whole map, it can serve specific groups of copyrights for some

    countries/regions.


    As an alternative to copyrights for map request, it can also return captions for
    displaying

    provider information on the map.'
  signature: 'get_copyright_caption(format: str = ''json'', **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Value can be either *json* or *xml*.
      Known

      values are: "json" and "xml". Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"copyrightsCaption\"\
    : \"str\",\n       \"formatVersion\": \"str\"\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.get_copyright_for_tile
  name: get_copyright_for_tile
  summary: 'Use to get copyright information.


    To obtain the copyright information for a particular tile, the request should
    specify the

    tile''s zoom level and x and y coordinates. For more information, see [Zoom Levels
    and Tile Grid](/azure/azure-maps/zoom-levels-and-tile-grid).


    Copyrights API is designed to serve copyright information for Render service.
    In addition to

    basic copyright for the whole map, API is serving specific groups of copyrights
    for some

    countries/regions.'
  signature: 'get_copyright_for_tile(format: str = ''json'', *, z: int, x: int, y:
    int, include_text: str | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Value can be either *json* or *xml*.
      Known

      values are: "json" and "xml". Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: z
    description: 'Zoom level for the desired tile.


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: x
    description: 'X coordinate of the tile on zoom grid. Value must be in the range
      [0,

      2:code:*<sup>`zoom`</sup>* -1].


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: y
    description: 'Y coordinate of the tile on zoom grid. Value must be in the range
      [0,

      2:code:*<sup>`zoom`</sup>* -1].


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: include_text
    description: 'Yes/no value to exclude textual data from response. Only images
      and

      country/region names will be in response. Known values are: "yes" and "no".
      Default value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"formatVersion\"\
    : \"str\",\n       \"generalCopyrights\": [\n           \"str\"\n       ],\n \
    \      \"regions\": [\n           {\n               \"copyrights\": [\n      \
    \             \"str\"\n               ],\n               \"country\": {\n    \
    \               \"ISO3\": \"str\",\n                   \"label\": \"str\"\n  \
    \             }\n           }\n       ]\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.get_copyright_for_world
  name: get_copyright_for_world
  summary: 'Use to get copyright information for for the world.


    Returns the copyright information for the world. To obtain the default copyright
    information

    for the whole world, don''t specify a tile or bounding box.


    Copyrights API is designed to serve copyright information for Render service.
    In addition to

    basic copyright for the whole map, API is serving specific groups of copyrights
    for some

    countries/regions.'
  signature: 'get_copyright_for_world(format: str = ''json'', *, include_text: str
    | None = None, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Value can be either *json* or *xml*.
      Known

      values are: "json" and "xml". Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: include_text
    description: 'Yes/no value to exclude textual data from response. Only images
      and

      country/region names will be in response. Known values are: "yes" and "no".
      Default value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"formatVersion\"\
    : \"str\",\n       \"generalCopyrights\": [\n           \"str\"\n       ],\n \
    \      \"regions\": [\n           {\n               \"copyrights\": [\n      \
    \             \"str\"\n               ],\n               \"country\": {\n    \
    \               \"ISO3\": \"str\",\n                   \"label\": \"str\"\n  \
    \             }\n           }\n       ]\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.get_copyright_from_bounding_box
  name: get_copyright_from_bounding_box
  summary: 'Use to get copyright information for the specified bounding box.


    Returns copyright information for a given bounding box. Bounding-box requests
    should specify

    the minimum and maximum longitude and latitude (EPSG-3857) coordinates.'
  signature: 'get_copyright_from_bounding_box(format: str = ''json'', *, south_west:
    List[float], north_east: List[float], include_text: str | None = None, **kwargs:
    Any) -> MutableMapping[str, Any]'
  parameters:
  - name: format
    description: 'Desired format of the response. Value can be either *json* or *xml*.
      Known

      values are: "json" and "xml". Default value is "json".'
    defaultValue: json
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: south_west
    description: 'Minimum coordinates (south-west point) of bounding box in latitude

      longitude coordinate system. E.g. 52.41064,4.84228. Required.'
    types:
    - <xref:list>[<xref:float>]
  - name: north_east
    description: 'Maximum coordinates (north-east point) of bounding box in latitude

      longitude coordinate system. E.g. 52.41064,4.84228. Required.'
    types:
    - <xref:list>[<xref:float>]
  - name: include_text
    description: 'Yes/no value to exclude textual data from response. Only images
      and

      country/region names will be in response. Known values are: "yes" and "no".
      Default value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"formatVersion\"\
    : \"str\",\n       \"generalCopyrights\": [\n           \"str\"\n       ],\n \
    \      \"regions\": [\n           {\n               \"copyrights\": [\n      \
    \             \"str\"\n               ],\n               \"country\": {\n    \
    \               \"ISO3\": \"str\",\n                   \"label\": \"str\"\n  \
    \             }\n           }\n       ]\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.get_map_attribution
  name: get_map_attribution
  summary: 'Use to get map copyright attribution information.


    The `Get Map Attribution` API allows users to request map copyright attribution
    information

    for a section of a tileset.'
  signature: 'get_map_attribution(*, tileset_id: str, zoom: int, bounds: List[float],
    **kwargs: Any) -> MutableMapping[str, Any]'
  keywordOnlyParameters:
  - name: tileset_id
    description: 'A tileset is a collection of raster or vector data broken up into
      a

      uniform grid of square tiles at preset  zoom levels. Every tileset has a **tilesetId**
      to use

      when making requests. The **tilesetId** for tilesets created using [Azure Maps
      Creator](https://aka.ms/amcreator) are generated through the  [Tileset Create
      API](https://docs.microsoft.com/rest/api/maps-creator/tileset). The ready-to-use
      tilesets

      supplied  by Azure Maps are listed below. For example, microsoft.base. Known
      values are:

      "microsoft.base", "microsoft.base.labels", "microsoft.base.hybrid", "microsoft.terra.main",

      "microsoft.base.road", "microsoft.base.darkgrey", "microsoft.base.labels.road",

      "microsoft.base.labels.darkgrey", "microsoft.base.hybrid.road",

      "microsoft.base.hybrid.darkgrey", "microsoft.imagery", "microsoft.weather.radar.main",

      "microsoft.weather.infrared.main", "microsoft.traffic.absolute",

      "microsoft.traffic.absolute.main", "microsoft.traffic.relative",

      "microsoft.traffic.relative.main", "microsoft.traffic.relative.dark",

      "microsoft.traffic.delay", "microsoft.traffic.delay.main", "microsoft.traffic.reduced.main",

      and "microsoft.traffic.incident". Required.'
    types:
    - <xref:str>
  - name: zoom
    description: Zoom level for the desired map attribution. Required.
    types:
    - <xref:int>
  - name: bounds
    description: 'The string that represents the rectangular area of a bounding box.
      The bounds

      parameter is defined by the 4 bounding box coordinates, with WGS84 longitude
      and latitude of

      the southwest corner followed by  WGS84 longitude and latitude of the northeast
      corner. The

      string is presented in the following  format: `[SouthwestCorner_Longitude,

      SouthwestCorner_Latitude, NortheastCorner_Longitude,  NortheastCorner_Latitude]`.
      Required.'
    types:
    - <xref:list>[<xref:float>]
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"copyrights\"\
    : [\n           \"str\"\n       ]\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.get_map_state_tile
  name: get_map_state_tile
  summary: 'Use to get state tiles in vector format that can then be used to display
    feature state

    information in an indoor map.


    Fetches state tiles in vector format typically to be integrated into indoor maps
    module of map

    control or SDK. The map control will call this API after user turns on dynamic
    styling. For

    more information, see [Zoom Levels and Tile Grid](/azure/location-based-services/zoom-levels-and-tile-grid).'
  signature: 'get_map_state_tile(*, z: int, x: int, y: int, stateset_id: str, **kwargs:
    Any) -> Iterator[bytes]'
  keywordOnlyParameters:
  - name: z
    description: 'Zoom level for the desired tile.


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: x
    description: 'X coordinate of the tile on zoom grid. Value must be in the range
      [0,

      2:code:*<sup>`zoom`</sup>* -1].


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: y
    description: 'Y coordinate of the tile on zoom grid. Value must be in the range
      [0,

      2:code:*<sup>`zoom`</sup>* -1].


      Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid)
      for

      details. Required.'
    types:
    - <xref:int>
  - name: stateset_id
    description: The stateset id. Required.
    types:
    - <xref:str>
  return:
    description: Iterator[bytes]
    types:
    - <xref:typing.Iterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.render.MapsRenderClient.get_map_static_image
  name: get_map_static_image
  summary: "This rendering API produces static, rasterized map views of a user-defined\
    \ area. It's suitable\nfor lightweight web applications, when the desired user\
    \ experience doesn't require interactive\nmap controls, or when bandwidth is limited.\
    \ This API is also useful for embedding maps in\napplications outside of the browser,\
    \ in backend services, report generation, or desktop\napplications.\n\n   This\
    \ API includes parameters for basic data visualization:\n\n* Labeled pushpins\
    \ in multiple styles. \n\n* Render circle, path, and polygon geometry types. \n\
    \nFor more information and detailed examples, see [Render custom data on a raster\
    \ map](/azure/azure-maps/how-to-render-custom-data).\n`<br>``<br>`\nThe dimensions\
    \ of the bbox parameter are constrained, depending on the zoom level. This ensures\n\
    the resulting image has an appropriate level of detail.\n`<br>``<br>`\n\n:::row:::\n\
    :::column:::\n**Zoom Level**\n:::column-end:::\n:::column:::\n**Min Lon Range**\n\
    :::column-end:::\n:::column:::\n**Max Lon Range**\n:::column-end:::\n:::column:::\n\
    **Min Lat Range**\n:::column-end:::\n:::column:::\n**Max Lat Range**\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n0\n:::column-end:::\n:::column:::\n56.25\n\
    :::column-end:::\n:::column:::\n360.0\n:::column-end:::\n:::column:::\n30.1105585173\n\
    :::column-end:::\n:::column:::\n180.0\n:::column-end:::\n:::row-end:::\n:::row:::\n\
    :::column:::\n1\n:::column-end:::\n:::column:::\n28.125\n:::column-end:::\n:::column:::\n\
    360.0\n:::column-end:::\n:::column:::\n14.87468995\n:::column-end:::\n:::column:::\n\
    180.0\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n2\n:::column-end:::\n\
    :::column:::\n14.063\n:::column-end:::\n:::column:::\n351.5625\n:::column-end:::\n\
    :::column:::\n7.4130741851\n:::column-end:::\n:::column:::\n137.9576312246\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n3\n:::column-end:::\n:::column:::\n7.03125\n\
    :::column-end:::\n:::column:::\n175.78125\n:::column-end:::\n:::column:::\n3.7034501005\n\
    :::column-end:::\n:::column:::\n73.6354071932\n:::column-end:::\n:::row-end:::\n\
    :::row:::\n:::column:::\n4\n:::column-end:::\n:::column:::\n3.515625\n:::column-end:::\n\
    :::column:::\n87.890625\n:::column-end:::\n:::column:::\n1.8513375155\n:::column-end:::\n\
    :::column:::\n35.4776115315\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    5\n:::column-end:::\n:::column:::\n1.7578125\n:::column-end:::\n:::column:::\n\
    43.9453125\n:::column-end:::\n:::column:::\n0.925620264\n:::column-end:::\n:::column:::\n\
    17.4589959239\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n6\n:::column-end:::\n\
    :::column:::\n0.87890625\n:::column-end:::\n:::column:::\n21.97265625\n:::column-end:::\n\
    :::column:::\n0.4628040687\n:::column-end:::\n:::column:::\n8.6907788223\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n7\n:::column-end:::\n:::column:::\n0.439453125\n\
    :::column-end:::\n:::column:::\n10.986328125\n:::column-end:::\n:::column:::\n\
    0.2314012764\n:::column-end:::\n:::column:::\n4.3404320789\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n8\n:::column-end:::\n:::column:::\n0.2197265625\n\
    :::column-end:::\n:::column:::\n5.4931640625\n:::column-end:::\n:::column:::\n\
    0.1157005434\n:::column-end:::\n:::column:::\n2.1695927024\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n9\n:::column-end:::\n:::column:::\n0.1098632812\n\
    :::column-end:::\n:::column:::\n2.7465820312\n:::column-end:::\n:::column:::\n\
    0.0578502599\n:::column-end:::\n:::column:::\n1.0847183194\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n10\n:::column-end:::\n:::column:::\n0.0549316406\n\
    :::column-end:::\n:::column:::\n1.3732910156\n:::column-end:::\n:::column:::\n\
    0.0289251285\n:::column-end:::\n:::column:::\n0.5423494021\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n11\n:::column-end:::\n:::column:::\n0.0274658203\n\
    :::column-end:::\n:::column:::\n0.6866455078\n:::column-end:::\n:::column:::\n\
    0.014462564\n:::column-end:::\n:::column:::\n0.2711734813\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n12\n:::column-end:::\n:::column:::\n0.0137329102\n\
    :::column-end:::\n:::column:::\n0.3433227539\n:::column-end:::\n:::column:::\n\
    0.007231282\n:::column-end:::\n:::column:::\n0.1355865882\n:::column-end:::\n\
    :::row-end:::\n:::row:::\n:::column:::\n13\n:::column-end:::\n:::column:::\n0.0068664551\n\
    :::column-end:::\n:::column:::\n0.171661377\n:::column-end:::\n:::column:::\n\
    0.003615641\n:::column-end:::\n:::column:::\n0.067793275\n:::column-end:::\n:::row-end:::\n\
    :::row:::\n:::column:::\n14\n:::column-end:::\n:::column:::\n0.0034332275\n:::column-end:::\n\
    :::column:::\n0.0858306885\n:::column-end:::\n:::column:::\n0.0018078205\n:::column-end:::\n\
    :::column:::\n0.0338966351\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    15\n:::column-end:::\n:::column:::\n0.0017166138\n:::column-end:::\n:::column:::\n\
    0.0429153442\n:::column-end:::\n:::column:::\n0.0009039102\n:::column-end:::\n\
    :::column:::\n0.0169483173\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    16\n:::column-end:::\n:::column:::\n0.0008583069\n:::column-end:::\n:::column:::\n\
    0.0214576721\n:::column-end:::\n:::column:::\n0.0004519551\n:::column-end:::\n\
    :::column:::\n0.0084741586\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    17\n:::column-end:::\n:::column:::\n0.0004291534\n:::column-end:::\n:::column:::\n\
    0.0107288361\n:::column-end:::\n:::column:::\n0.0002259776\n:::column-end:::\n\
    :::column:::\n0.0042370793\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    18\n:::column-end:::\n:::column:::\n0.0002145767\n:::column-end:::\n:::column:::\n\
    0.005364418\n:::column-end:::\n:::column:::\n0.0001129888\n:::column-end:::\n\
    :::column:::\n0.0021185396\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
    19\n:::column-end:::\n:::column:::\n0.0001072884\n:::column-end:::\n:::column:::\n\
    0.002682209\n:::column-end:::\n:::column:::\n5.64944E-05\n:::column-end:::\n:::column:::\n\
    0.0010592698\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n20\n:::column-end:::\n\
    :::column:::\n5.36442E-05\n:::column-end:::\n:::column:::\n0.0013411045\n:::column-end:::\n\
    :::column:::\n2.82472E-05\n:::column-end:::\n:::column:::\n0.0005296349\n:::column-end:::\n\
    :::row-end:::\n\n*Note* : Either **center** or **bbox** parameter must be supplied\
    \ to the API."
  signature: 'get_map_static_image(*, tileset_id: str | None = None, traffic_layer:
    str | None = None, zoom: int | None = None, center: List[float] | None = None,
    bounding_box_private: List[float] | None = None, height: int | None = None, width:
    int | None = None, language: str | None = None, localized_map_view: str | None
    = None, pins: List[str] | None = None, path: List[str] | None = None, **kwargs:
    Any) -> Iterator[bytes]'
  keywordOnlyParameters:
  - name: tileset_id
    description: 'Map style to be returned. Possible values are microsoft.base.road,

      microsoft.base.darkgrey, and microsoft.imagery.  Default value is set to be

      microsoft.base.road. For more information, see [Render TilesetId](https://learn.microsoft.com/en-us/rest/api/maps/render/get-map-tileset?view=rest-maps-2023-06-01&tabs=HTTP#tilesetid).

      Known values are: "microsoft.base", "microsoft.base.labels", "microsoft.base.hybrid",

      "microsoft.terra.main", "microsoft.base.road", "microsoft.base.darkgrey",

      "microsoft.base.labels.road", "microsoft.base.labels.darkgrey", "microsoft.base.hybrid.road",

      "microsoft.base.hybrid.darkgrey", "microsoft.imagery", "microsoft.weather.radar.main",

      "microsoft.weather.infrared.main", "microsoft.traffic.absolute",

      "microsoft.traffic.absolute.main", "microsoft.traffic.relative",

      "microsoft.traffic.relative.main", "microsoft.traffic.relative.dark",

      "microsoft.traffic.delay", "microsoft.traffic.delay.main", "microsoft.traffic.reduced.main",

      and "microsoft.traffic.incident". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: traffic_layer
    description: 'Optional Value, indicating no traffic flow overlaid on the image

      result. Possible values are microsoft.traffic.relative.main and none. Default
      value is none,

      indicating no traffic flow returned. If traffic related tilesetId is provided,
      will return map

      image with corresponding traffic layer. For more information, see [Render TilesetId](https://learn.microsoft.com/en-us/rest/api/maps/render/get-map-tileset?view=rest-maps-2023-06-01&tabs=HTTP#tilesetid).

      Known values are: "microsoft.traffic.relative.main" and "none". Default value
      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: zoom
    description: 'Desired zoom level of the map. Support zoom value range from 0-20
      (inclusive)

      for tilesetId being microsoft.base.road or microsoft.base.darkgrey. Support
      zoom value range

      from 0-19 (inclusive) for tilesetId being microsoft.imagery.

      For more information, see [Zoom Levels and Tile Grid](https://docs.microsoft.com/azure/location-based-services/zoom-levels-and-tile-grid).
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: center
    description: 'Coordinates of the center point in double. Format: ''lon,lat''.
      Longitude range:

      -180 to 180. Latitude range: -90 to 90.


      Note: Either center or bbox are required parameters. They are

      mutually exclusive. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:float>]
  - name: bounding_box_private
    description: 'A bounding box is defined by two latitudes and two longitudes

      that represent the four sides of a rectangular area on the Earth. Format : ''minLon,
      minLat,

      maxLon, maxLat'' (in double).


      Note: Either bbox or center are required

      parameters. They are mutually exclusive. bbox shouldn''t be used with

      height or width.


      The maximum and minimum allowed ranges for Lat and Lon are defined for each
      zoom level

      in the table at the top of this page. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:float>]
  - name: height
    description: 'Height of the resulting image in pixels. Range from 80 to 1500.
      Default

      is 512. It shouldn''t be used with bbox. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: width
    description: 'Width of the resulting image in pixels. Range from 80 to 2000. Default
      is 512.

      It should not be used with bbox. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive. When data in specified language
      is not

      available for a specific field, default language is used.


      Please refer to [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages)
      for details. Default value

      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter)

      allows you to show the correct maps for a certain country/region for geopolitically
      disputed

      regions. Different countries/regions have different views of such regions, and
      the View

      parameter allows your application to comply with the view required by the country/region
      your

      application will be serving. By default, the View parameter is set to "Unified"
      even if you

      haven''t defined it in  the request. It is your responsibility to determine
      the location of your

      users, and then set the View parameter correctly for that location. Alternatively,
      you have the

      option to set ''View=Auto'', which will return the map data based on the IP  address
      of the

      request. The View parameter in Azure Maps must be used in compliance with applicable
      laws,

      including those  regarding mapping, of the country/region where maps, images
      and other data and

      third party content that you are authorized to  access via Azure Maps is made
      available.

      Example: view=IN.


      Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews)
      for details and

      to see the available Views. Known values are: "AE", "AR", "BH", "IN", "IQ",
      "JO", "KW", "LB",

      "MA", "OM", "PK", "PS", "QA", "SA", "SY", "YE", "Auto", and "Unified". Default
      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: pins
    description: "Pushpin style and instances. Use this parameter to optionally add\
      \ pushpins to\nthe image.\nThe pushpin style describes the appearance of the\
      \ pushpins, and the instances specify\nthe coordinates of the pushpins (in double)\
      \ and optional labels for each pin. (Be sure to\nproperly URL-encode values\
      \ of this\nparameter since it will contain reserved characters such as pipes\
      \ and punctuation.)\n\nThe Azure Maps account S0 SKU only supports a single\
      \ instance of the pins parameter. Other\nSKUs\nallow multiple instances of the\
      \ pins parameter to specify multiple pin styles.\n\nTo render a pushpin at latitude\
      \ 45\xB0N and longitude 122\xB0W using the default built-in pushpin\nstyle,\
      \ add the\nquerystring parameter\n\n`pins=default||-122 45`\n\nNote that the\
      \ longitude comes before the latitude.\nAfter URL encoding this will look like\n\
      \n`pins=default%7C%7C-122+45`\n\nAll of the examples here show the pins\nparameter\
      \ without URL encoding, for clarity.\n\nTo render a pin at multiple locations,\
      \ separate each location with a pipe character. For\nexample, use\n\n`pins=default||-122\
      \ 45|-119.5 43.2|-121.67 47.12`\n\nThe S0 Azure Maps account SKU only allows\
      \ five pushpins. Other account SKUs do not have this\nlimitation.\n\n**Style\
      \ Modifiers**\n\nYou can modify the appearance of the pins by adding style modifiers.\
      \ These are added after the\nstyle but before\nthe locations and labels. Style\
      \ modifiers each have a two-letter name. These abbreviated names\nare used to\
      \ help\nreduce the length of the URL.\n\nTo change the color of the pushpin,\
      \ use the 'co' style modifier and specify the color using\nthe HTML/CSS RGB\
      \ color\nformat which is a six-digit hexadecimal number (the three-digit form\
      \ is not supported). For\nexample, to use\na deep pink color which you would\
      \ specify as #FF1493 in CSS, use\n\n`pins=default|coFF1493||-122 45`\n\n**Pushpin\
      \ Labels**\n\nTo add a label to the pins, put the label in single quotes just\
      \ before the coordinates. Avoid\nusing special character such as `|` or `||`\
      \ in label. For example, to label\nthree pins with the values '1', '2', and\
      \ '3', use\n\n`pins=default||'1'-122 45|'2'-119.5 43.2|'3'-121.67 47.12`\n\n\
      There is a built-in pushpin style called 'none' that does not display a pushpin\
      \ image. You can\nuse this if\nyou want to display labels without any pin image.\
      \ For example,\n\n`pins=none||'A'-122 45|'B'-119.5 43.2`\n\nTo change the color\
      \ of the pushpin labels, use the 'lc' label color style modifier. For\nexample,\
      \ to use pink\npushpins with black labels, use\n\n`pins=default|coFF1493|lc000000||-122\
      \ 45`\n\nTo change the size of the labels, use the 'ls' label size style modifier.\
      \ The label size\nrepresents the approximate\nheight of the label text in pixels.\
      \ For example, to increase the label size to 12, use\n\n`pins=default|ls12||'A'-122\
      \ 45|'B'-119 43`\n\nThe labels are centered at the pushpin 'label anchor.' The\
      \ anchor location is predefined for\nbuilt-in pushpins and\nis at the top center\
      \ of custom pushpins (see below). To override the label anchor, using the\n\
      'la' style modifier\nand provide X and Y pixel coordinates for the anchor. These\
      \ coordinates are relative to the\ntop left corner of the\npushpin image. Positive\
      \ X values move the anchor to the right, and positive Y values move the\nanchor\
      \ down. For example,\nto position the label anchor 10 pixels right and 4 pixels\
      \ above the top left corner of the\npushpin image,\nuse\n\n`pins=default|la10\
      \ -4||'A'-122 45|'B'-119 43`\n\n**Custom Pushpins**\n\nTo use a custom pushpin\
      \ image, use the word 'custom' as the pin style name, and then specify a\nURL\
      \ after the\nlocation and label information. The maximum allowed size for a\
      \ customized label image is\n65,536 pixels. Use two pipe characters to indicate\
      \ that you're done specifying locations and\nare\nstarting the URL. For example,\n\
      \n`pins=custom||-122 45||http://contoso.com/pushpins/red.png`\n\nAfter URL encoding,\
      \ this would look like\n\nBy default, custom pushpin images are drawn centered\
      \ at the pin coordinates. This usually\nisn't ideal as it obscures\nthe location\
      \ that you're trying to highlight. To override the anchor location of the pin\n\
      image, use the 'an'\nstyle modifier. This uses the same format as the 'la' label\
      \ anchor style modifier. For\nexample, if your custom\npin image has the tip\
      \ of the pin at the top left corner of the image, you can set the anchor\nto\
      \ that spot by\nusing\n\n`pins=custom|an0 0||-122 45||http://contoso.com/pushpins/red.png`\n\
      \nNote: If you use the 'co' color modifier with a custom pushpin image, the\
      \ specified color will\nreplace the RGB\nchannels of the pixels in the image\
      \ but will leave the alpha (opacity) channel unchanged. This\nwould usually\n\
      only be done with a solid-color custom image.\n\n**Scale, Rotation, and Opacity**\n\
      \nYou can make pushpins and their labels larger or smaller by using the 'sc'\
      \ scale style\nmodifier. This is a\nvalue greater than zero. A value of 1 is\
      \ the standard scale. Values larger than 1 will make\nthe pins larger, and\n\
      values smaller than 1 will make them smaller. For example, to draw the pushpins\
      \ 50% larger\nthan normal, use\n\n`pins=default|sc1.5||-122 45`\n\nYou can rotate\
      \ pushpins and their labels by using the 'ro' rotation style modifier. This\
      \ is a\nnumber of degrees\nof clockwise rotation. Use a negative number to rotate\
      \ counter-clockwise. For example, to\nrotate the pushpins\n90 degrees clockwise\
      \ and double their size, use\n\n`pins=default|ro90|sc2||-122 45`\n\nYou can\
      \ make pushpins and their labels partially transparent by specifying the 'al'\
      \ alpha\nstyle modifier.\nThis is a number between 0 and 1 indicating the opacity\
      \ of the pushpins. Zero makes them\ncompletely transparent\n(and not visible)\
      \ and 1 makes them completely opaque (which is the default). For example, to\n\
      make pushpins\nand their labels only 67% opaque, use\n\n`pins=default|al.67||-122\
      \ 45`\n\n**Style Modifier Summary**\n\n:::row:::\n:::column:::\n**Modifier**\n\
      :::column-end:::\n:::column:::\n**Description**\n:::column-end:::\n:::column:::\n\
      **Type**\n:::column-end:::\n:::column:::\n**Range**\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\nal\n:::column-end:::\n:::column:::\nAlpha (opacity)\n\
      :::column-end:::\n:::column:::\nfloat\n:::column-end:::\n:::column:::\n0 to\
      \ 1\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nan\n:::column-end:::\n\
      :::column:::\nPin anchor\n:::column-end:::\n:::column:::\n<int32, int32>\n:::column-end:::\n\
      :::column:::\n\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nco\n\
      :::column-end:::\n:::column:::\nPin color\n:::column-end:::\n:::column:::\n\
      string\n:::column-end:::\n:::column:::\n000000 to FFFFFF\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nla\n:::column-end:::\n:::column:::\n\
      Label anchor\n:::column-end:::\n:::column:::\n<int32, int32>\n:::column-end:::\n\
      :::column:::\n\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nlc\n\
      :::column-end:::\n:::column:::\nLabel color\n:::column-end:::\n:::column:::\n\
      string\n:::column-end:::\n:::column:::\n000000 to FFFFFF\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nls\n:::column-end:::\n:::column:::\n\
      Label size\n:::column-end:::\n:::column:::\nfloat\n:::column-end:::\n:::column:::\n\
      Greater than 0\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nro\n\
      :::column-end:::\n:::column:::\nRotation\n:::column-end:::\n:::column:::\nfloat\n\
      :::column-end:::\n:::column:::\n-360 to 360\n:::column-end:::\n:::row-end:::\n\
      :::row:::\n:::column:::\nsc\n:::column-end:::\n:::column:::\nScale\n:::column-end:::\n\
      :::column:::\nfloat\n:::column-end:::\n:::column:::\nGreater than 0\n:::column-end:::\n\
      :::row-end:::\n\n* X and Y coordinates can be anywhere within pin image or a\
      \ margin around it. The margin size is the minimum of the pin width and height.\
      \ Default value is None."
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: path
    description: "Path style and locations (in double). Use this parameter to optionally\
      \ add\nlines, polygons or circles to the image.\nThe path style describes the\
      \ appearance of the line and fill. (Be sure to properly URL-encode\nvalues of\
      \ this\nparameter since it will contain reserved characters such as pipes and\
      \ punctuation.)\n\nPath parameter is supported in Azure Maps account SKU starting\
      \ with S1. Multiple instances of\nthe path parameter\nallow to specify multiple\
      \ geometries with their styles. Number of parameters per request is\nlimited\
      \ to 10 and\nnumber of locations is limited to 100 per path.\n\nTo render a\
      \ circle with radius 100 meters and center point at latitude 45\xB0N and longitude\n\
      122\xB0W using the default style, add the\nquerystring parameter\n\n`path=ra100||-122\
      \ 45`\n\nNote that the longitude comes before the latitude.\nAfter URL encoding\
      \ this will look like\n\n`path=ra100%7C%7C-122+45`\n\nAll of the examples here\
      \ show the path parameter without URL encoding, for clarity.\n\nTo render a\
      \ line, separate each location with a pipe character. For example, use\n\n`path=||-122\
      \ 45|-119.5 43.2|-121.67 47.12`\n\nA polygon is specified with a closed path,\
      \ where the first and last points are equal. For\nexample, use\n\n`path=||-122\
      \ 45|-119.5 43.2|-121.67 47.12|-122 45`\n\nLongitude value for locations of\
      \ lines and polygons can be in the range from -360 to 360 to\nallow for rendering\
      \ of geometries crossing the anti-meridian.\n\n**Style Modifiers**\n\nYou can\
      \ modify the appearance of the path by adding style modifiers. These are added\
      \ before\nthe locations.\nStyle modifiers each have a two-letter name. These\
      \ abbreviated names are used to help reduce\nthe length\nof the URL.\n\nTo change\
      \ the color of the outline, use the 'lc' style modifier and specify the color\
      \ using\nthe HTML/CSS RGB color\nformat which is a six-digit hexadecimal number\
      \ (the three-digit form is not supported). For\nexample, to use\na deep pink\
      \ color which you would specify as #FF1493 in CSS, use\n\n`path=lcFF1493||-122\
      \ 45|-119.5 43.2`\n\nMultiple style modifiers may be combined to create a more\
      \ complex visual style.\n\n`lc0000FF|lw3|la0.60|fa0.50||-122.2 47.6|-122.2 47.7|-122.3\
      \ 47.7|-122.3 47.6|-122.2 47.6`\n\n**Style Modifier Summary**\n\n:::row:::\n\
      :::column:::\n**Modifier**\n:::column-end:::\n:::column:::\n**Description**\n\
      :::column-end:::\n:::column:::\n**Type**\n:::column-end:::\n:::column:::\n**Range**\n\
      :::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nlc\n:::column-end:::\n\
      :::column:::\nLine color\n:::column-end:::\n:::column:::\nstring\n:::column-end:::\n\
      :::column:::\n000000 to FFFFFF\n:::column-end:::\n:::row-end:::\n:::row:::\n\
      :::column:::\nfc\n:::column-end:::\n:::column:::\nFill color\n:::column-end:::\n\
      :::column:::\nstring\n:::column-end:::\n:::column:::\n000000 to FFFFFF\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nla\n:::column-end:::\n:::column:::\n\
      Line alpha (opacity)\n:::column-end:::\n:::column:::\nfloat\n:::column-end:::\n\
      :::column:::\n0 to 1\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\n\
      fa\n:::column-end:::\n:::column:::\nFill alpha (opacity)\n:::column-end:::\n\
      :::column:::\nfloat\n:::column-end:::\n:::column:::\n0 to 1\n:::column-end:::\n\
      :::row-end:::\n:::row:::\n:::column:::\nlw\n:::column-end:::\n:::column:::\n\
      Line width\n:::column-end:::\n:::column:::\nint32\n:::column-end:::\n:::column:::\n\
      (0, 50]\n:::column-end:::\n:::row-end:::\n:::row:::\n:::column:::\nra\n:::column-end:::\n\
      :::column:::\nCircle radius (meters)\n:::column-end:::\n:::column:::\nfloat\n\
      :::column-end:::\n:::column:::\nGreater than 0. Default value is None.\n:::column-end:::\n\
      :::row-end:::"
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: Iterator[bytes]
    types:
    - <xref:typing.Iterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.render.MapsRenderClient.get_map_tile
  name: get_map_tile
  summary: "Use to request map tiles in vector or raster format.\n\nThe `Get Map Tiles`\
    \ API in an HTTP GET request that allows users to request map tiles in\nvector\
    \ or raster formats typically to be integrated  into a map control or SDK. Some\
    \ example\ntiles that can be requested are Azure Maps road tiles, real-time  Weather\
    \ Radar tiles or the\nmap tiles created using [Azure Maps Creator](https://aka.ms/amcreator).\
    \ By default,  Azure\nMaps uses vector tiles for its web map control ([Web SDK](/azure/azure-maps/about-azure-maps#web-sdk))\
    \ and [Android SDK](/azure/azure-maps/about-azure-maps#android-sdk).\n\n* microsoft.weather.infrared.main:\
    \ We provide tiles up to 3 hours in the past. Tiles are available in 10-minute\
    \ intervals. We round the timeStamp value to the nearest 10-minute time frame.\
    \ \n\n* microsoft.weather.radar.main: We provide tiles up to 1.5 hours in the\
    \ past and up to 2 hours in the future. Tiles are available in 5-minute intervals.\
    \ We round the timeStamp value to the nearest 5-minute time frame. Default value\
    \ is None."
  signature: 'get_map_tile(*, tileset_id: str, z: int, x: int, y: int, time_stamp:
    datetime | None = None, tile_size: str | None = None, language: str | None = None,
    localized_map_view: str | None = None, **kwargs: Any) -> Iterator[bytes]'
  keywordOnlyParameters:
  - name: tile_size
    description: 'The size of the returned map tile in pixels. Known values are: "256"
      and

      "512". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive. When data in specified language
      is not

      available for a specific field, default language is used.


      Please refer to [Supported Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages)
      for details. Default value

      is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter)

      allows you to show the correct maps for a certain country/region for geopolitically
      disputed

      regions. Different countries/regions have different views of such regions, and
      the View

      parameter allows your application to comply with the view required by the country/region
      your

      application will be serving. By default, the View parameter is set to "Unified"
      even if you

      haven''t defined it in  the request. It is your responsibility to determine
      the location of your

      users, and then set the View parameter correctly for that location. Alternatively,
      you have the

      option to set ''View=Auto'', which will return the map data based on the IP  address
      of the

      request. The View parameter in Azure Maps must be used in compliance with applicable
      laws,

      including those  regarding mapping, of the country/region where maps, images
      and other data and

      third party content that you are authorized to  access via Azure Maps is made
      available.

      Example: view=IN.


      Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews)
      for details and

      to see the available Views. Known values are: "AE", "AR", "BH", "IN", "IQ",
      "JO", "KW", "LB",

      "MA", "OM", "PK", "PS", "QA", "SA", "SY", "YE", "Auto", and "Unified". Default
      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tileset_id
    isRequired: true
  - name: z
    isRequired: true
  - name: x
    isRequired: true
  - name: y
    isRequired: true
  - name: time_stamp
    defaultValue: None
  return:
    description: Iterator[bytes]
    types:
    - <xref:typing.Iterator>[<xref:bytes>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.render.MapsRenderClient.get_map_tileset
  name: get_map_tileset
  summary: 'Use to get metadata for a tileset.


    The Get Map Tileset API allows users to request metadata for a tileset.'
  signature: 'get_map_tileset(*, tileset_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  keywordOnlyParameters:
  - name: tileset_id
    description: 'A tileset is a collection of raster or vector data broken up into
      a

      uniform grid of square tiles at preset  zoom levels. Every tileset has a **tilesetId**
      to use

      when making requests. The **tilesetId** for tilesets created using [Azure Maps
      Creator](https://aka.ms/amcreator) are generated through the  [Tileset Create
      API](https://docs.microsoft.com/rest/api/maps-creator/tileset). The ready-to-use
      tilesets

      supplied  by Azure Maps are listed below. For example, microsoft.base. Known
      values are:

      "microsoft.base", "microsoft.base.labels", "microsoft.base.hybrid", "microsoft.terra.main",

      "microsoft.base.road", "microsoft.base.darkgrey", "microsoft.base.labels.road",

      "microsoft.base.labels.darkgrey", "microsoft.base.hybrid.road",

      "microsoft.base.hybrid.darkgrey", "microsoft.imagery", "microsoft.weather.radar.main",

      "microsoft.weather.infrared.main", "microsoft.traffic.absolute",

      "microsoft.traffic.absolute.main", "microsoft.traffic.relative",

      "microsoft.traffic.relative.main", "microsoft.traffic.relative.dark",

      "microsoft.traffic.delay", "microsoft.traffic.delay.main", "microsoft.traffic.reduced.main",

      and "microsoft.traffic.incident". Required.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:azure.maps.render.ResponseFormat.JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"attribution\"\
    : \"str\",\n       \"bounds\": [\n           0.0\n       ],\n       \"center\"\
    : [\n           0.0\n       ],\n       \"data\": [\n           \"str\"\n     \
    \  ],\n       \"description\": \"str\",\n       \"grids\": [\n           \"str\"\
    \n       ],\n       \"legend\": \"str\",\n       \"maxzoom\": 0,\n       \"minzoom\"\
    : 0,\n       \"name\": \"str\",\n       \"scheme\": \"str\",\n       \"template\"\
    : \"str\",\n       \"tilejson\": \"str\",\n       \"tiles\": [\n           \"\
    str\"\n       ],\n       \"version\": \"str\"\n   }\n   ````\n"
- uid: azure.maps.render.MapsRenderClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
