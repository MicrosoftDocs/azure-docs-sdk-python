### YamlMime:PythonClass
uid: azure.maps.render.models.MapTileset
name: MapTileset
fullName: azure.maps.render.models.MapTileset
module: azure.maps.render.models
inheritances:
- azure.maps.render._generated.models._models.MapTileset
summary: Metadata for a tileset in the TileJSON format.
constructor:
  syntax: 'MapTileset(**kwargs: Any)'
  keywordOnlyParameters:
  - name: tilejson_version
    description: 'Describes the version of the TileJSON spec that is implemented by
      this JSON

      object.'
    types:
    - <xref:str>
  - name: name
    description: 'A name describing the tileset. The name can contain any legal character.

      Implementations SHOULD NOT interpret the name as HTML.'
    types:
    - <xref:str>
  - name: description
    description: 'Text description of the tileset. The description can contain any
      legal

      character. Implementations SHOULD NOT interpret the description as HTML.'
    types:
    - <xref:str>
  - name: version
    description: 'A semver.org style version number for the tiles contained within
      the tileset.

      When changes across tiles are introduced, the minor version MUST change.'
    types:
    - <xref:str>
  - name: map_attribution
    description: 'Copyright attribution to be displayed on the map. Implementations
      MAY decide

      to treat this as HTML or literal text. For security reasons, make absolutely
      sure that this

      field can''t be abused as a vector for XSS or beacon tracking.'
    types:
    - <xref:azure.maps.render.models.MapAttribution>
  - name: template
    description: A mustache template to be used to format data from grids for interaction.
    types:
    - <xref:str>
  - name: legend
    description: 'A legend to be displayed with the map. Implementations MAY decide
      to treat this

      as HTML or literal text. For security reasons, make absolutely sure that this
      field can''t be

      abused as a vector for XSS or beacon tracking.'
    types:
    - <xref:str>
  - name: scheme
    description: 'Default: "xyz". Either "xyz" or "tms". Influences the y direction
      of the tile

      coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.'
    types:
    - <xref:str>
  - name: tiles_endpoints
    description: 'An array of tile endpoints. If multiple endpoints are specified,
      clients may use

      any combination of endpoints. All endpoints MUST return the same content for
      the same URL. The

      array MUST contain at least one endpoint.'
    types:
    - <xref:list>[<xref:str>]
  - name: grid_endpoints
    description: An array of interactivity endpoints.
    types:
    - <xref:list>[<xref:str>]
  - name: data_files
    description: An array of data files in GeoJSON format.
    types:
    - <xref:list>[<xref:str>]
  - name: min_zoom
    description: The minimum zoom level.
    types:
    - <xref:int>
  - name: max_zoom
    description: The maximum zoom level.
    types:
    - <xref:int>
  - name: bounds
    description: 'The maximum extent of available map tiles. Bounds MUST define an
      area covered by

      all zoom levels. The bounds are represented in WGS:84 latitude and longitude
      values, in the

      order left, bottom, right, top. Values may be integers or floating point numbers.'
    types:
    - <xref:azure.maps.render.models.BoundingBox>
  - name: center
    description: 'The default location of the tileset in the form [longitude, latitude,
      zoom]. The

      zoom level MUST be between minzoom and maxzoom. Implementations can use this
      value to set the

      default location.'
    types:
    - <xref:azure.maps.render.models.LatLon>
methods:
- uid: azure.maps.render.models.MapTileset.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.maps.render.models.MapTileset.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.maps.render.models.MapTileset.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.maps.render.models.MapTileset.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.maps.render.models.MapTileset.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.maps.render.models.MapTileset.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
