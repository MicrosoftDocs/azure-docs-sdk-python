### YamlMime:PythonClass
uid: azure.mgmt.mysqlflexibleservers.operations.CheckNameAvailabilityWithoutLocationOperations
name: CheckNameAvailabilityWithoutLocationOperations
fullName: azure.mgmt.mysqlflexibleservers.operations.CheckNameAvailabilityWithoutLocationOperations
module: azure.mgmt.mysqlflexibleservers.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.mysqlflexibleservers.MySQLManagementClient>'s\n\
  >\n> <xref:check_name_availability_without_location> attribute.\n>"
constructor:
  syntax: CheckNameAvailabilityWithoutLocationOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.mysqlflexibleservers.operations.CheckNameAvailabilityWithoutLocationOperations.execute
  name: execute
  summary: Check the availability of name for server.
  signature: 'execute(name_availability_request: _models.NameAvailabilityRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.NameAvailability'
  parameters:
  - name: name_availability_request
    description: 'The required parameters for checking if server name is

      available. Is either a NameAvailabilityRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.mysqlflexibleservers.models.NameAvailabilityRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: NameAvailability or the result of cls(response)
    types:
    - <xref:azure.mgmt.mysqlflexibleservers.models.NameAvailability>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.mysqlflexibleservers.operations.CheckNameAvailabilityWithoutLocationOperations.models
  name: models
  signature: models = <module 'azure.mgmt.mysqlflexibleservers.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv178\\Lib\\site-packages\\azure\\mgmt\\mysqlflexibleservers\\models\\__init__.py'>
