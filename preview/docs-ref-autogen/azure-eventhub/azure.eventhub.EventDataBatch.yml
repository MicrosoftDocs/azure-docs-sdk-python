### YamlMime:PythonClass
uid: azure.eventhub.EventDataBatch
name: EventDataBatch
fullName: azure.eventhub.EventDataBatch
module: azure.eventhub
inheritances:
- builtins.object
summary: 'A batch of events.


  Sending events in a batch is more performant than sending individual events.

  EventDataBatch helps you create the maximum allowed size batch of *EventData* to
  improve sending performance.


  Use the *add* method to add events until the maximum batch size limit in bytes has
  been reached -

  at which point a *ValueError* will be raised.

  Use the *send_batch* method of <xref:azure.eventhub.EventHubProducerClient>

  or the async <xref:azure.eventhub.aio.EventHubProducerClient>

  for sending.


  **Please use the create_batch method of EventHubProducerClient

  to create an EventDataBatch object instead of instantiating an EventDataBatch object
  directly.**


  **WARNING: Updating the value of the instance variable max_size_in_bytes on an instantiated
  EventDataBatch object

  is HIGHLY DISCOURAGED. The updated max_size_in_bytes value may conflict with the
  maximum size of events allowed

  by the Event Hubs service and result in a sending failure.**'
constructor:
  syntax: 'EventDataBatch(max_size_in_bytes: int | None = None, partition_id: str
    | None = None, partition_key: str | bytes | None = None, **kwargs)'
  parameters:
  - name: max_size_in_bytes
    description: The maximum size of bytes data that an EventDataBatch object can
      hold.
    defaultValue: None
    types:
    - <xref:azure.eventhub.int>
  - name: partition_id
    description: The specific partition ID to send to.
    defaultValue: None
    types:
    - <xref:azure.eventhub.str>
  - name: partition_key
    description: 'With the given partition_key, event data will be sent to a particular
      partition of the

      Event Hub decided by the service.'
    defaultValue: None
    types:
    - <xref:azure.eventhub.str>
methods:
- uid: azure.eventhub.EventDataBatch.add
  name: add
  summary: 'Try to add an EventData to the batch.


    The total size of an added event is the sum of its body, properties, etc.

    If this added size results in the batch exceeding the maximum batch size, a *ValueError*
    will

    be raised.'
  signature: 'add(event_data: EventData | AmqpAnnotatedMessage) -> None'
  parameters:
  - name: event_data
    description: The EventData to add to the batch.
    isRequired: true
    types:
    - <xref:azure.eventhub.Union>[<xref:azure.eventhub.EventData>, <xref:azure.eventhub.amqp.AmqpAnnotatedMessage>]
  return:
    types:
    - <xref:azure.eventhub.None>
attributes:
- uid: azure.eventhub.EventDataBatch.message
  name: message
  summary: "Get the underlying uamqp.BatchMessage or LegacyBatchMessage.\n   This\
    \ is deprecated and will be removed in a later release."
  return:
    types:
    - <xref:uamqp.BatchMessage>
    - <xref:azure.eventhub.LegacyBatchMessage>
- uid: azure.eventhub.EventDataBatch.size_in_bytes
  name: size_in_bytes
  summary: The combined size of the events in the batch, in bytes.
  return:
    types:
    - <xref:azure.eventhub.int>
