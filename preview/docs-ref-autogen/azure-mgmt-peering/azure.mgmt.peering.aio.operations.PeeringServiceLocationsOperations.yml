### YamlMime:PythonClass
uid: azure.mgmt.peering.aio.operations.PeeringServiceLocationsOperations
name: PeeringServiceLocationsOperations
fullName: azure.mgmt.peering.aio.operations.PeeringServiceLocationsOperations
module: azure.mgmt.peering.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.peering.aio.PeeringManagementClient>'s\n\
  >\n> <xref:peering_service_locations> attribute.\n>"
constructor:
  syntax: PeeringServiceLocationsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.peering.aio.operations.PeeringServiceLocationsOperations.list
  name: list
  summary: Lists all of the available locations for peering service.
  signature: 'list(country: str | None = None, **kwargs: Any) -> AsyncIterable[PeeringServiceLocation]'
  parameters:
  - name: country
    description: 'The country of interest, in which the locations are to be present.
      Default

      value is None.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either PeeringServiceLocation or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.peering.models.PeeringServiceLocation>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.peering.aio.operations.PeeringServiceLocationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.peering.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\peering\\models\\__init__.py'>
