### YamlMime:PythonClass
uid: azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter
name: AzureMonitorLogExporter
fullName: azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter
module: azure.monitor.opentelemetry.exporter
inheritances:
- azure.monitor.opentelemetry.exporter.export._base.BaseExporter
- opentelemetry.sdk._logs.export.LogExporter
summary: Azure Monitor Log exporter for OpenTelemetry.
constructor:
  syntax: 'AzureMonitorLogExporter(**kwargs: Any)'
methods:
- uid: azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.export
  name: export
  summary: 'Export log data

    :param batch: Open Telemetry LogData(s) to export.

    :type batch: Sequence[~opentelemetry._logs.LogData]

    :rtype: ~opentelemetry.sdk._logs.export.LogData'
  signature: 'export(batch: Sequence[LogData], **kwargs: Any) -> LogExportResult'
  parameters:
  - name: batch
    isRequired: true
- uid: azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.from_connection_string
  name: from_connection_string
  summary: 'Create an AzureMonitorLogExporter from a connection string.


    This is the recommended way of instantation if a connection string is passed in
    explicitly.

    If a user wants to use a connection string provided by environment variable, the
    constructor

    of the exporter can be called directly.


    :returns an instance of ~AzureMonitorLogExporter'
  signature: 'from_connection_string(conn_str: str, **kwargs: Any) -> AzureMonitorLogExporter'
  parameters:
  - name: conn_str
    description: The connection string to be used for authentication.
    isRequired: true
    types:
    - <xref:azure.monitor.opentelemetry.exporter.str>
  - name: api_version
    description: The service API version used. Defaults to latest.
    types:
    - <xref:str>
- uid: azure.monitor.opentelemetry.exporter.AzureMonitorLogExporter.shutdown
  name: shutdown
  summary: 'Shuts down the exporter.


    Called when the SDK is shut down.'
  signature: shutdown() -> None
