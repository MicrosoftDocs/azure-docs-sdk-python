### YamlMime:PythonClass
uid: azure.purview.sharing.aio.PurviewSharingClient
name: PurviewSharingClient
fullName: azure.purview.sharing.aio.PurviewSharingClient
module: azure.purview.sharing.aio
inheritances:
- builtins.object
summary: Creates a data plane client for Purview Share.
constructor:
  syntax: 'PurviewSharingClient(endpoint: str, credential: AsyncTokenCredential, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: 'The sharing endpoint of your purview account. Example:

      [https:/](https:/)/{accountName}.purview.azure.com/share. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: api_version
    description: 'Api Version. Default value is "2023-05-30-preview". Note that overriding

      this default value may result in unsupported behavior.'
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
variables:
- description: ReceivedSharesOperations operations
  name: received_shares
  types:
  - <xref:azure.purview.sharing.aio.operations.ReceivedSharesOperations>
- description: SentSharesOperations operations
  name: sent_shares
  types:
  - <xref:azure.purview.sharing.aio.operations.SentSharesOperations>
- description: ShareResourcesOperations operations
  name: share_resources
  types:
  - <xref:azure.purview.sharing.aio.operations.ShareResourcesOperations>
methods:
- uid: azure.purview.sharing.aio.PurviewSharingClient.close
  name: close
  signature: async close() -> None
- uid: azure.purview.sharing.aio.PurviewSharingClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
