### YamlMime:PythonClass
uid: azure.ai.agents.models.BingGroundingSearchConfiguration
name: BingGroundingSearchConfiguration
fullName: azure.ai.agents.models.BingGroundingSearchConfiguration
module: azure.ai.agents.models
summary: Search configuration for Bing Grounding.
constructor:
  syntax: 'BingGroundingSearchConfiguration(*args: Any, **kwargs: Any)'
variables:
- description: Connection id for grounding with bing search. Required.
  name: connection_id
  types:
  - <xref:str>
- description: 'The market where the results come from. Typically, market is the country
    where

    the user is making the request from. However, it could be a different country
    if the user is

    not located in a country where Bing delivers results. The market must be in the
    form:

    `<language>-<country/region>` where `<language>` is an ISO 639-1 language code
    (neutral

    culture) and `<country/region>` is an ISO 3166 country/region (specific culture)
    code. For

    example, `en-US`. The string is case insensitive. For a list of possible market
    values, see

    [Market codes](https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/market-codes).
    If

    known, you are encouraged to always specify the market. Specifying the market
    helps Bing route

    the request and return an appropriate and optimal response. If you specify a market
    that is not

    listed in Market codes, Bing uses a best fit market code based on an internal
    mapping that is

    subject to change.'
  name: market
  types:
  - <xref:str>
- description: 'The language to use for user interface strings. You may specify the
    language

    using either a 2-letter or 4-letter code. Using 4-letter codes is preferred.

    For a list of supported language codes, see [Bing supported languages](https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/market-codes#bing-supported-language-codes).

    Bing loads the localized strings if this parameter contains a valid 2-letter neutral
    culture

    code (for example `fr`) or a valid 4-letter specific culture code (`fr-ca`). For
    example,

    for `fr-ca`, Bing loads the `fr` neutral culture code strings.

    If the parameter is not valid (for example, `zh`) or Bing doesn''t support the
    language (for

    example, `af`, `af-na`), Bing defaults to `en` (English).

    To specify the 2-letter code, set this parameter to an ISO 639-1 language code.

    To specify the 4-letter code, use the form `<language>-<country/region>` where
    `<language>`

    is an ISO 639-1 language code (neutral culture) and `<country/region>` is an ISO
    3166

    country/region (specific culture) code. For example, use `en-US` for United States
    English.

    Although optional, you should always specify the language. Typically, you set
    this parameter to

    the same language specified by the market value unless the user wants the user
    interface

    strings displayed in a different language.'
  name: set_lang
  types:
  - <xref:str>
- description: "The number of search results to return in the response. The default\
    \ is 5 and the\nmaximum value is 50. The actual number delivered may be less than\
    \ requested.\n\n* It is possible for multiple pages to include some overlap in\
    \ results. \n\n* This parameter affects only web page results. It's possible that\
    \ AI model might not use all search results returned by Bing."
  name: count
  types:
  - <xref:int>
- description: "Filter search results by the following case-insensitive age values:\n\
    \n* Day: Return webpages that Bing discovered within the last 24 hours. \n\n*\
    \ Week: Return webpages that Bing discovered within the last 7 days. \n\n* Month:\
    \ Return webpages that Bing discovered within the last 30 days. To get articles\
    \ discovered by Bing during a specific timeframe, specify a date range in the\
    \ form: *YYYY-MM-DD..YYYY-MM-DD*. For example, *freshness=2019-02-01..2019-05-30.\
    \ To limit the results to a single date, set this parameter to a specific date.\
    \ For example, freshness=2019-02-04*."
  name: freshness
  types:
  - <xref:str>
methods:
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> tuple[str, Any]
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.connection_id
  name: connection_id
  summary: Connection id for grounding with bing search. Required.
  signature: 'connection_id: str'
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.count
  name: count
  summary: "The number of search results to return in the response. The default is\
    \ 5 and the maximum value\nis 50. The actual number delivered may be less than\
    \ requested.\n\n* It is possible for multiple pages to include some overlap in\
    \ results. \n\n* This parameter affects only web page results. It's possible that\
    \ AI model might not use all search results returned by Bing. "
  signature: 'count: int | None'
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.freshness
  name: freshness
  summary: "Filter search results by the following case-insensitive age values:\n\n\
    * Day: Return webpages that Bing discovered within the last 24 hours. \n\n* Week:\
    \ Return webpages that Bing discovered within the last 7 days. \n\n* Month: Return\
    \ webpages that Bing discovered within the last 30 days. To get articles discovered\
    \ by Bing during a specific timeframe, specify a date range in the form: *YYYY-MM-DD..YYYY-MM-DD*.\
    \ For example, *freshness=2019-02-01..2019-05-30. To limit the results to a single\
    \ date, set this parameter to a specific date. For example, freshness=2019-02-04*. "
  signature: 'freshness: str | None'
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.market
  name: market
  summary: 'The market where the results come from. Typically, market is the country
    where the user is

    making the request from. However, it could be a different country if the user
    is not located in

    a country where Bing delivers results. The market must be in the form:

    `<language>-<country/region>` where `<language>` is an ISO 639-1 language code
    (neutral

    culture) and `<country/region>` is an ISO 3166 country/region (specific culture)
    code. For

    example, `en-US`. The string is case insensitive. For a list of possible market
    values, see

    [Market codes](https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/market-codes).
    If

    known, you are encouraged to always specify the market. Specifying the market
    helps Bing route

    the request and return an appropriate and optimal response. If you specify a market
    that is not

    listed in Market codes, Bing uses a best fit market code based on an internal
    mapping that is

    subject to change.'
  signature: 'market: str | None'
- uid: azure.ai.agents.models.BingGroundingSearchConfiguration.set_lang
  name: set_lang
  summary: 'The language to use for user interface strings. You may specify the language
    using either a

    2-letter or 4-letter code. Using 4-letter codes is preferred.

    For a list of supported language codes, see [Bing supported languages](https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/market-codes#bing-supported-language-codes).

    Bing loads the localized strings if this parameter contains a valid 2-letter neutral
    culture

    code (for example `fr`) or a valid 4-letter specific culture code (`fr-ca`). For
    example,

    for `fr-ca`, Bing loads the `fr` neutral culture code strings.

    If the parameter is not valid (for example, `zh`) or Bing doesn''t support the
    language (for

    example, `af`, `af-na`), Bing defaults to `en` (English).

    To specify the 2-letter code, set this parameter to an ISO 639-1 language code.

    To specify the 4-letter code, use the form `<language>-<country/region>` where
    `<language>`

    is an ISO 639-1 language code (neutral culture) and `<country/region>` is an ISO
    3166

    country/region (specific culture) code. For example, use `en-US` for United States
    English.

    Although optional, you should always specify the language. Typically, you set
    this parameter to

    the same language specified by the market value unless the user wants the user
    interface

    strings displayed in a different language.'
  signature: 'set_lang: str | None'
