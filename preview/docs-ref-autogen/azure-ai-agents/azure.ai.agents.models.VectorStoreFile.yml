### YamlMime:PythonClass
uid: azure.ai.agents.models.VectorStoreFile
name: VectorStoreFile
fullName: azure.ai.agents.models.VectorStoreFile
module: azure.ai.agents.models
summary: Description of a file attached to a vector store.
constructor:
  syntax: 'VectorStoreFile(*args: Any, **kwargs: Any)'
variables:
- description: The identifier, which can be referenced in API endpoints. Required.
  name: id
  types:
  - <xref:str>
- description: 'The object type, which is always `vector_store.file`. Required. Default
    value

    is "vector_store.file".'
  name: object
  types:
  - <xref:str>
- description: 'The total vector store usage in bytes. Note that this may be different
    from

    the original file

    size. Required.'
  name: usage_bytes
  types:
  - <xref:int>
- description: 'The Unix timestamp (in seconds) for when the vector store file was
    created.

    Required.'
  name: created_at
  types:
  - <xref:datetime.datetime>
- description: The ID of the vector store that the file is attached to. Required.
  name: vector_store_id
  types:
  - <xref:str>
- description: 'The status of the vector store file, which can be either `in_progress`,

    `completed`, `cancelled`, or `failed`. The status `completed` indicates that the
    vector

    store file is ready for use. Required. Known values are: "in_progress", "completed",
    "failed",

    and "cancelled".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.agents.models.VectorStoreFileStatus>
- description: 'The last error associated with this vector store file. Will be `null`
    if

    there are no errors. Required.'
  name: last_error
  types:
  - <xref:azure.ai.agents.models.VectorStoreFileError>
- description: The strategy used to chunk the file. Required.
  name: chunking_strategy
  types:
  - <xref:azure.ai.agents.models.VectorStoreChunkingStrategyResponse>
methods:
- uid: azure.ai.agents.models.VectorStoreFile.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.agents.models.VectorStoreFile.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.agents.models.VectorStoreFile.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.agents.models.VectorStoreFile.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.agents.models.VectorStoreFile.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.agents.models.VectorStoreFile.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.agents.models.VectorStoreFile.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.agents.models.VectorStoreFile.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> tuple[str, Any]
- uid: azure.ai.agents.models.VectorStoreFile.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.agents.models.VectorStoreFile.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.agents.models.VectorStoreFile.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.agents.models.VectorStoreFile.chunking_strategy
  name: chunking_strategy
  summary: The strategy used to chunk the file. Required.
  signature: 'chunking_strategy: _models.VectorStoreChunkingStrategyResponse'
- uid: azure.ai.agents.models.VectorStoreFile.created_at
  name: created_at
  summary: The Unix timestamp (in seconds) for when the vector store file was created.
    Required.
  signature: 'created_at: datetime'
- uid: azure.ai.agents.models.VectorStoreFile.id
  name: id
  summary: The identifier, which can be referenced in API endpoints. Required.
  signature: 'id: str'
- uid: azure.ai.agents.models.VectorStoreFile.last_error
  name: last_error
  summary: 'The last error associated with this vector store file. Will be `null`
    if there are no errors.

    Required.'
  signature: 'last_error: _models.VectorStoreFileError'
- uid: azure.ai.agents.models.VectorStoreFile.object
  name: object
  summary: 'The object type, which is always `vector_store.file`. Required. Default
    value is

    "vector_store.file".'
  signature: 'object: Literal[''vector_store.file'']'
- uid: azure.ai.agents.models.VectorStoreFile.status
  name: status
  summary: 'The status of the vector store file, which can be either `in_progress`,
    `completed`,

    `cancelled`, or `failed`. The status `completed` indicates that the vector store
    file is

    ready for use. Required. Known values are: "in_progress", "completed", "failed",
    and

    "cancelled".'
  signature: 'status: str | _models.VectorStoreFileStatus'
- uid: azure.ai.agents.models.VectorStoreFile.usage_bytes
  name: usage_bytes
  summary: 'The total vector store usage in bytes. Note that this may be different
    from the original file

    size. Required.'
  signature: 'usage_bytes: int'
- uid: azure.ai.agents.models.VectorStoreFile.vector_store_id
  name: vector_store_id
  summary: The ID of the vector store that the file is attached to. Required.
  signature: 'vector_store_id: str'
