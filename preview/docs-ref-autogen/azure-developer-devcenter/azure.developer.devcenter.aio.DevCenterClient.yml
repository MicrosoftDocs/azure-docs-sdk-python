### YamlMime:PythonClass
uid: azure.developer.devcenter.aio.DevCenterClient
name: DevCenterClient
fullName: azure.developer.devcenter.aio.DevCenterClient
module: azure.developer.devcenter.aio
inheritances:
- azure.developer.devcenter.aio._operations._operations.DevCenterClientOperationsMixin
summary: DevCenterClient.
constructor:
  syntax: 'DevCenterClient(endpoint: str, credential: AsyncTokenCredential, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: The DevCenter-specific URI to operate on. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'The API version to use for this operation. Default value is "2023-04-01".

      Note that overriding this default value may result in unsupported behavior.'
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
methods:
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_create_dev_box
  name: begin_create_dev_box
  summary: Creates or replaces a Dev Box.
  signature: 'async begin_create_dev_box(project_name: str, user_id: str, dev_box_name:
    str, body: MutableMapping[str, Any] | IO, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Represents a environment. Is either a JSON type or a IO type. Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   body\
    \ = {\n       \"name\": \"str\",  # Display name for the Dev Box. Required.\n\
    \       \"poolName\": \"str\",  # The name of the Dev Box pool this machine belongs\
    \ to.\n         Required.\n       \"actionState\": \"str\",  # Optional. The current\
    \ action state of the Dev Box.\n         This is state is based on previous action\
    \ performed by user.\n       \"createdTime\": \"2020-02-20 00:00:00\",  # Optional.\
    \ Creation time of this Dev\n         Box.\n       \"error\": {\n           \"\
    code\": \"str\",  # One of a server-defined set of error codes.\n            \
    \ Required.\n           \"message\": \"str\",  # A human-readable representation\
    \ of the error.\n             Required.\n           \"details\": [\n         \
    \      ...\n           ],\n           \"innererror\": {\n               \"code\"\
    : \"str\",  # Optional. One of a server-defined set of\n                 error\
    \ codes.\n               \"innererror\": ...\n           },\n           \"target\"\
    : \"str\"  # Optional. The target of the error.\n       },\n       \"hardwareProfile\"\
    : {\n           \"memoryGB\": 0,  # Optional. The amount of memory available for\
    \ the\n             Dev Box.\n           \"skuName\": \"str\",  # Optional. The\
    \ name of the SKU.\n           \"vCPUs\": 0  # Optional. The number of vCPUs available\
    \ for the Dev\n             Box.\n       },\n       \"hibernateSupport\": \"str\"\
    ,  # Optional. Indicates whether hibernate is\n         enabled/disabled or unknown.\
    \ Known values are: \"Enabled\", \"Disabled\", and\n         \"OsUnsupported\"\
    .\n       \"imageReference\": {\n           \"name\": \"str\",  # Optional. The\
    \ name of the image used.\n           \"operatingSystem\": \"str\",  # Optional.\
    \ The operating system of the\n             image.\n           \"osBuildNumber\"\
    : \"str\",  # Optional. The operating system build\n             number of the\
    \ image.\n           \"publishedDate\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The datetime\n             that the backing image version was published.\n \
    \          \"version\": \"str\"  # Optional. The version of the image.\n     \
    \  },\n       \"localAdministrator\": \"str\",  # Optional. Indicates whether\
    \ the owner of the\n         Dev Box is a local administrator. Known values are:\
    \ \"Enabled\" and \"Disabled\".\n       \"location\": \"str\",  # Optional. Azure\
    \ region where this Dev Box is located.\n         This will be the same region\
    \ as the Virtual Network it is attached to.\n       \"osType\": \"str\",  # Optional.\
    \ The operating system type of this Dev Box.\n         \"Windows\"\n       \"\
    powerState\": \"str\",  # Optional. The current power state of the Dev Box.\n\
    \         Known values are: \"Unknown\", \"Running\", \"Deallocated\", \"PoweredOff\"\
    , and\n         \"Hibernated\".\n       \"projectName\": \"str\",  # Optional.\
    \ Name of the project this Dev Box belongs\n         to.\n       \"provisioningState\"\
    : \"str\",  # Optional. The current provisioning state of\n         the Dev Box.\n\
    \       \"storageProfile\": {\n           \"osDisk\": {\n               \"diskSizeGB\"\
    : 0  # Optional. The size of the OS Disk in\n                 gigabytes.\n   \
    \        }\n       },\n       \"uniqueId\": \"str\",  # Optional. A unique identifier\
    \ for the Dev Box. This is\n         a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the user this Dev\
    \ Box is\n         assigned to.\n   }\n\n   # response body for status code(s):\
    \ 200, 201\n   response == {\n       \"name\": \"str\",  # Display name for the\
    \ Dev Box. Required.\n       \"poolName\": \"str\",  # The name of the Dev Box\
    \ pool this machine belongs to.\n         Required.\n       \"actionState\": \"\
    str\",  # Optional. The current action state of the Dev Box.\n         This is\
    \ state is based on previous action performed by user.\n       \"createdTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. Creation time of this Dev\n         Box.\n\
    \       \"error\": {\n           \"code\": \"str\",  # One of a server-defined\
    \ set of error codes.\n             Required.\n           \"message\": \"str\"\
    ,  # A human-readable representation of the error.\n             Required.\n \
    \          \"details\": [\n               ...\n           ],\n           \"innererror\"\
    : {\n               \"code\": \"str\",  # Optional. One of a server-defined set\
    \ of\n                 error codes.\n               \"innererror\": ...\n    \
    \       },\n           \"target\": \"str\"  # Optional. The target of the error.\n\
    \       },\n       \"hardwareProfile\": {\n           \"memoryGB\": 0,  # Optional.\
    \ The amount of memory available for the\n             Dev Box.\n           \"\
    skuName\": \"str\",  # Optional. The name of the SKU.\n           \"vCPUs\": 0\
    \  # Optional. The number of vCPUs available for the Dev\n             Box.\n\
    \       },\n       \"hibernateSupport\": \"str\",  # Optional. Indicates whether\
    \ hibernate is\n         enabled/disabled or unknown. Known values are: \"Enabled\"\
    , \"Disabled\", and\n         \"OsUnsupported\".\n       \"imageReference\": {\n\
    \           \"name\": \"str\",  # Optional. The name of the image used.\n    \
    \       \"operatingSystem\": \"str\",  # Optional. The operating system of the\n\
    \             image.\n           \"osBuildNumber\": \"str\",  # Optional. The\
    \ operating system build\n             number of the image.\n           \"publishedDate\"\
    : \"2020-02-20 00:00:00\",  # Optional. The datetime\n             that the backing\
    \ image version was published.\n           \"version\": \"str\"  # Optional. The\
    \ version of the image.\n       },\n       \"localAdministrator\": \"str\",  #\
    \ Optional. Indicates whether the owner of the\n         Dev Box is a local administrator.\
    \ Known values are: \"Enabled\" and \"Disabled\".\n       \"location\": \"str\"\
    ,  # Optional. Azure region where this Dev Box is located.\n         This will\
    \ be the same region as the Virtual Network it is attached to.\n       \"osType\"\
    : \"str\",  # Optional. The operating system type of this Dev Box.\n         \"\
    Windows\"\n       \"powerState\": \"str\",  # Optional. The current power state\
    \ of the Dev Box.\n         Known values are: \"Unknown\", \"Running\", \"Deallocated\"\
    , \"PoweredOff\", and\n         \"Hibernated\".\n       \"projectName\": \"str\"\
    ,  # Optional. Name of the project this Dev Box belongs\n         to.\n      \
    \ \"provisioningState\": \"str\",  # Optional. The current provisioning state\
    \ of\n         the Dev Box.\n       \"storageProfile\": {\n           \"osDisk\"\
    : {\n               \"diskSizeGB\": 0  # Optional. The size of the OS Disk in\n\
    \                 gigabytes.\n           }\n       },\n       \"uniqueId\": \"\
    str\",  # Optional. A unique identifier for the Dev Box. This is\n         a GUID-formatted\
    \ string (e.g. 00000000-0000-0000-0000-000000000000).\n       \"user\": \"str\"\
    \  # Optional. The AAD object id of the user this Dev Box is\n         assigned\
    \ to.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_create_or_update_environment
  name: begin_create_or_update_environment
  summary: Creates or updates an environment.
  signature: 'async begin_create_or_update_environment(project_name: str, user_id:
    str, environment_name: str, body: MutableMapping[str, Any] | IO, **kwargs: Any)
    -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: The name of the environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: Represents an environment. Is either a JSON type or a IO type. Required.
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body parameter Content-Type. Known values are: application/json.
      Default

      value is None.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   body\
    \ = {\n       \"catalogName\": \"str\",  # Name of the catalog. Required.\n  \
    \     \"environmentDefinitionName\": \"str\",  # Name of the environment definition.\n\
    \         Required.\n       \"environmentType\": \"str\",  # Environment type.\
    \ Required.\n       \"error\": {\n           \"code\": \"str\",  # One of a server-defined\
    \ set of error codes.\n             Required.\n           \"message\": \"str\"\
    ,  # A human-readable representation of the error.\n             Required.\n \
    \          \"details\": [\n               ...\n           ],\n           \"innererror\"\
    : {\n               \"code\": \"str\",  # Optional. One of a server-defined set\
    \ of\n                 error codes.\n               \"innererror\": ...\n    \
    \       },\n           \"target\": \"str\"  # Optional. The target of the error.\n\
    \       },\n       \"name\": \"str\",  # Optional. Environment name.\n       \"\
    parameters\": {},  # Optional. Parameters object for the environment.\n      \
    \ \"provisioningState\": \"str\",  # Optional. The provisioning state of the\n\
    \         environment.\n       \"resourceGroupId\": \"str\",  # Optional. The\
    \ identifier of the resource group\n         containing the environment's resources.\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the owner of this\n\
    \         Environment.\n   }\n\n   # response body for status code(s): 201\n \
    \  response == {\n       \"catalogName\": \"str\",  # Name of the catalog. Required.\n\
    \       \"environmentDefinitionName\": \"str\",  # Name of the environment definition.\n\
    \         Required.\n       \"environmentType\": \"str\",  # Environment type.\
    \ Required.\n       \"error\": {\n           \"code\": \"str\",  # One of a server-defined\
    \ set of error codes.\n             Required.\n           \"message\": \"str\"\
    ,  # A human-readable representation of the error.\n             Required.\n \
    \          \"details\": [\n               ...\n           ],\n           \"innererror\"\
    : {\n               \"code\": \"str\",  # Optional. One of a server-defined set\
    \ of\n                 error codes.\n               \"innererror\": ...\n    \
    \       },\n           \"target\": \"str\"  # Optional. The target of the error.\n\
    \       },\n       \"name\": \"str\",  # Optional. Environment name.\n       \"\
    parameters\": {},  # Optional. Parameters object for the environment.\n      \
    \ \"provisioningState\": \"str\",  # Optional. The provisioning state of the\n\
    \         environment.\n       \"resourceGroupId\": \"str\",  # Optional. The\
    \ identifier of the resource group\n         containing the environment's resources.\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the owner of this\n\
    \         Environment.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_delete_dev_box
  name: begin_delete_dev_box
  summary: Deletes a Dev Box.
  signature: 'async begin_delete_dev_box(project_name: str, user_id: str, dev_box_name:
    str, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"status\"\
    : \"str\",  # Provisioning state of the resource. Required. Known\n         values\
    \ are: \"Running\", \"Completed\", \"Canceled\", and \"Failed\".\n       \"endTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The end time of the operation.\n     \
    \  \"error\": {\n           \"code\": \"str\",  # Optional. The error code.\n\
    \           \"message\": \"str\"  # Optional. The error message.\n       },\n\
    \       \"id\": \"str\",  # Optional. Fully qualified ID for the operation status.\n\
    \       \"name\": \"str\",  # Optional. The operation id name.\n       \"percentComplete\"\
    : 0.0,  # Optional. Percent of the operation that is\n         complete.\n   \
    \    \"properties\": {},  # Optional. Custom operation properties, populated only\n\
    \         for a successful operation.\n       \"resourceId\": \"str\",  # Optional.\
    \ The id of the resource.\n       \"startTime\": \"2020-02-20 00:00:00\"  # Optional.\
    \ The start time of the\n         operation.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_delete_environment
  name: begin_delete_environment
  summary: Deletes an environment and all its associated resources.
  signature: 'async begin_delete_environment(project_name: str, user_id: str, environment_name:
    str, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: The name of the environment. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"status\"\
    : \"str\",  # Provisioning state of the resource. Required. Known\n         values\
    \ are: \"Running\", \"Completed\", \"Canceled\", and \"Failed\".\n       \"endTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The end time of the operation.\n     \
    \  \"error\": {\n           \"code\": \"str\",  # Optional. The error code.\n\
    \           \"message\": \"str\"  # Optional. The error message.\n       },\n\
    \       \"id\": \"str\",  # Optional. Fully qualified ID for the operation status.\n\
    \       \"name\": \"str\",  # Optional. The operation id name.\n       \"percentComplete\"\
    : 0.0,  # Optional. Percent of the operation that is\n         complete.\n   \
    \    \"properties\": {},  # Optional. Custom operation properties, populated only\n\
    \         for a successful operation.\n       \"resourceId\": \"str\",  # Optional.\
    \ The id of the resource.\n       \"startTime\": \"2020-02-20 00:00:00\"  # Optional.\
    \ The start time of the\n         operation.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_restart_dev_box
  name: begin_restart_dev_box
  summary: Restarts a Dev Box.
  signature: 'async begin_restart_dev_box(project_name: str, user_id: str, dev_box_name:
    str, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"status\"\
    : \"str\",  # Provisioning state of the resource. Required. Known\n         values\
    \ are: \"Running\", \"Completed\", \"Canceled\", and \"Failed\".\n       \"endTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The end time of the operation.\n     \
    \  \"error\": {\n           \"code\": \"str\",  # Optional. The error code.\n\
    \           \"message\": \"str\"  # Optional. The error message.\n       },\n\
    \       \"id\": \"str\",  # Optional. Fully qualified ID for the operation status.\n\
    \       \"name\": \"str\",  # Optional. The operation id name.\n       \"percentComplete\"\
    : 0.0,  # Optional. Percent of the operation that is\n         complete.\n   \
    \    \"properties\": {},  # Optional. Custom operation properties, populated only\n\
    \         for a successful operation.\n       \"resourceId\": \"str\",  # Optional.\
    \ The id of the resource.\n       \"startTime\": \"2020-02-20 00:00:00\"  # Optional.\
    \ The start time of the\n         operation.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_start_dev_box
  name: begin_start_dev_box
  summary: Starts a Dev Box.
  signature: 'async begin_start_dev_box(project_name: str, user_id: str, dev_box_name:
    str, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"status\"\
    : \"str\",  # Provisioning state of the resource. Required. Known\n         values\
    \ are: \"Running\", \"Completed\", \"Canceled\", and \"Failed\".\n       \"endTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The end time of the operation.\n     \
    \  \"error\": {\n           \"code\": \"str\",  # Optional. The error code.\n\
    \           \"message\": \"str\"  # Optional. The error message.\n       },\n\
    \       \"id\": \"str\",  # Optional. Fully qualified ID for the operation status.\n\
    \       \"name\": \"str\",  # Optional. The operation id name.\n       \"percentComplete\"\
    : 0.0,  # Optional. Percent of the operation that is\n         complete.\n   \
    \    \"properties\": {},  # Optional. Custom operation properties, populated only\n\
    \         for a successful operation.\n       \"resourceId\": \"str\",  # Optional.\
    \ The id of the resource.\n       \"startTime\": \"2020-02-20 00:00:00\"  # Optional.\
    \ The start time of the\n         operation.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.begin_stop_dev_box
  name: begin_stop_dev_box
  summary: Stops a Dev Box.
  signature: 'async begin_stop_dev_box(project_name: str, user_id: str, dev_box_name:
    str, *, hibernate: bool | None = None, **kwargs: Any) -> AsyncLROPoller[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: hibernate
    description: Optional parameter to hibernate the dev box. Default value is None.
    types:
    - <xref:bool>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncLROBasePolling. Pass
      in False

      for this operation to not poll, or pass in your own initialized polling object
      for a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns JSON object
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 202\n   response == {\n       \"status\"\
    : \"str\",  # Provisioning state of the resource. Required. Known\n         values\
    \ are: \"Running\", \"Completed\", \"Canceled\", and \"Failed\".\n       \"endTime\"\
    : \"2020-02-20 00:00:00\",  # Optional. The end time of the operation.\n     \
    \  \"error\": {\n           \"code\": \"str\",  # Optional. The error code.\n\
    \           \"message\": \"str\"  # Optional. The error message.\n       },\n\
    \       \"id\": \"str\",  # Optional. Fully qualified ID for the operation status.\n\
    \       \"name\": \"str\",  # Optional. The operation id name.\n       \"percentComplete\"\
    : 0.0,  # Optional. Percent of the operation that is\n         complete.\n   \
    \    \"properties\": {},  # Optional. Custom operation properties, populated only\n\
    \         for a successful operation.\n       \"resourceId\": \"str\",  # Optional.\
    \ The id of the resource.\n       \"startTime\": \"2020-02-20 00:00:00\"  # Optional.\
    \ The start time of the\n         operation.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.close
  name: close
  signature: async close() -> None
- uid: azure.developer.devcenter.aio.DevCenterClient.delay_all_dev_box_actions
  name: delay_all_dev_box_actions
  summary: Delays all actions.
  signature: 'delay_all_dev_box_actions(project_name: str, user_id: str, dev_box_name:
    str, *, delay_until: datetime, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: delay_until
    description: The time to delay the Dev Box action or actions until. Required.
    types:
    - <xref:datetime.datetime>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # The name of the action. Required.\n       \"result\": \"str\", \
    \ # The result of the delay operation on this action.\n         Required. Known\
    \ values are: \"Succeeded\" and \"Failed\".\n       \"action\": {\n          \
    \ \"actionType\": \"str\",  # The action that will be taken. Required.\n     \
    \        \"Stop\"\n           \"name\": \"str\",  # The name of the action. Required.\n\
    \           \"sourceId\": \"str\",  # The id of the resource which triggered this\n\
    \             action. Required.\n           \"next\": {\n               \"scheduledTime\"\
    : \"2020-02-20 00:00:00\"  # The time the action\n                 will be triggered\
    \ (UTC). Required.\n           },\n           \"suspendedUntil\": \"2020-02-20\
    \ 00:00:00\"  # Optional. The earliest\n             time that the action could\
    \ occur (UTC).\n       },\n       \"error\": {\n           \"code\": \"str\",\
    \  # One of a server-defined set of error codes.\n             Required.\n   \
    \        \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ Optional. One of a server-defined set of\n                 error codes.\n  \
    \             \"innererror\": ...\n           },\n           \"target\": \"str\"\
    \  # Optional. The target of the error.\n       }\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.delay_dev_box_action
  name: delay_dev_box_action
  summary: Delays the occurrence of an action.
  signature: 'async delay_dev_box_action(project_name: str, user_id: str, dev_box_name:
    str, action_name: str, *, delay_until: datetime, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: action_name
    description: The name of an action that will take place on a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: delay_until
    description: The time to delay the Dev Box action or actions until. Required.
    types:
    - <xref:datetime.datetime>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"actionType\"\
    : \"str\",  # The action that will be taken. Required. \"Stop\"\n       \"name\"\
    : \"str\",  # The name of the action. Required.\n       \"sourceId\": \"str\"\
    ,  # The id of the resource which triggered this action.\n         Required.\n\
    \       \"next\": {\n           \"scheduledTime\": \"2020-02-20 00:00:00\"  #\
    \ The time the action will be\n             triggered (UTC). Required.\n     \
    \  },\n       \"suspendedUntil\": \"2020-02-20 00:00:00\"  # Optional. The earliest\
    \ time that\n         the action could occur (UTC).\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_catalog
  name: get_catalog
  summary: Gets the specified catalog within the project.
  signature: 'async get_catalog(project_name: str, catalog_name: str, **kwargs: Any)
    -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: The name of the catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\"  # Name of the catalog. Required.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_dev_box
  name: get_dev_box
  summary: Gets a Dev Box.
  signature: 'async get_dev_box(project_name: str, user_id: str, dev_box_name: str,
    **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Display name for the Dev Box. Required.\n       \"poolName\": \"\
    str\",  # The name of the Dev Box pool this machine belongs to.\n         Required.\n\
    \       \"actionState\": \"str\",  # Optional. The current action state of the\
    \ Dev Box.\n         This is state is based on previous action performed by user.\n\
    \       \"createdTime\": \"2020-02-20 00:00:00\",  # Optional. Creation time of\
    \ this Dev\n         Box.\n       \"error\": {\n           \"code\": \"str\",\
    \  # One of a server-defined set of error codes.\n             Required.\n   \
    \        \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ Optional. One of a server-defined set of\n                 error codes.\n  \
    \             \"innererror\": ...\n           },\n           \"target\": \"str\"\
    \  # Optional. The target of the error.\n       },\n       \"hardwareProfile\"\
    : {\n           \"memoryGB\": 0,  # Optional. The amount of memory available for\
    \ the\n             Dev Box.\n           \"skuName\": \"str\",  # Optional. The\
    \ name of the SKU.\n           \"vCPUs\": 0  # Optional. The number of vCPUs available\
    \ for the Dev\n             Box.\n       },\n       \"hibernateSupport\": \"str\"\
    ,  # Optional. Indicates whether hibernate is\n         enabled/disabled or unknown.\
    \ Known values are: \"Enabled\", \"Disabled\", and\n         \"OsUnsupported\"\
    .\n       \"imageReference\": {\n           \"name\": \"str\",  # Optional. The\
    \ name of the image used.\n           \"operatingSystem\": \"str\",  # Optional.\
    \ The operating system of the\n             image.\n           \"osBuildNumber\"\
    : \"str\",  # Optional. The operating system build\n             number of the\
    \ image.\n           \"publishedDate\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The datetime\n             that the backing image version was published.\n \
    \          \"version\": \"str\"  # Optional. The version of the image.\n     \
    \  },\n       \"localAdministrator\": \"str\",  # Optional. Indicates whether\
    \ the owner of the\n         Dev Box is a local administrator. Known values are:\
    \ \"Enabled\" and \"Disabled\".\n       \"location\": \"str\",  # Optional. Azure\
    \ region where this Dev Box is located.\n         This will be the same region\
    \ as the Virtual Network it is attached to.\n       \"osType\": \"str\",  # Optional.\
    \ The operating system type of this Dev Box.\n         \"Windows\"\n       \"\
    powerState\": \"str\",  # Optional. The current power state of the Dev Box.\n\
    \         Known values are: \"Unknown\", \"Running\", \"Deallocated\", \"PoweredOff\"\
    , and\n         \"Hibernated\".\n       \"projectName\": \"str\",  # Optional.\
    \ Name of the project this Dev Box belongs\n         to.\n       \"provisioningState\"\
    : \"str\",  # Optional. The current provisioning state of\n         the Dev Box.\n\
    \       \"storageProfile\": {\n           \"osDisk\": {\n               \"diskSizeGB\"\
    : 0  # Optional. The size of the OS Disk in\n                 gigabytes.\n   \
    \        }\n       },\n       \"uniqueId\": \"str\",  # Optional. A unique identifier\
    \ for the Dev Box. This is\n         a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the user this Dev\
    \ Box is\n         assigned to.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_dev_box_action
  name: get_dev_box_action
  summary: Gets an action.
  signature: 'async get_dev_box_action(project_name: str, user_id: str, dev_box_name:
    str, action_name: str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: action_name
    description: The name of an action that will take place on a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"actionType\"\
    : \"str\",  # The action that will be taken. Required. \"Stop\"\n       \"name\"\
    : \"str\",  # The name of the action. Required.\n       \"sourceId\": \"str\"\
    ,  # The id of the resource which triggered this action.\n         Required.\n\
    \       \"next\": {\n           \"scheduledTime\": \"2020-02-20 00:00:00\"  #\
    \ The time the action will be\n             triggered (UTC). Required.\n     \
    \  },\n       \"suspendedUntil\": \"2020-02-20 00:00:00\"  # Optional. The earliest\
    \ time that\n         the action could occur (UTC).\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_environment
  name: get_environment
  summary: Gets an environment.
  signature: 'async get_environment(project_name: str, user_id: str, environment_name:
    str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: The name of the environment. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"environmentDefinitionName\"\
    : \"str\",  # Name of the environment definition.\n         Required.\n      \
    \ \"environmentType\": \"str\",  # Environment type. Required.\n       \"error\"\
    : {\n           \"code\": \"str\",  # One of a server-defined set of error codes.\n\
    \             Required.\n           \"message\": \"str\",  # A human-readable\
    \ representation of the error.\n             Required.\n           \"details\"\
    : [\n               ...\n           ],\n           \"innererror\": {\n       \
    \        \"code\": \"str\",  # Optional. One of a server-defined set of\n    \
    \             error codes.\n               \"innererror\": ...\n           },\n\
    \           \"target\": \"str\"  # Optional. The target of the error.\n      \
    \ },\n       \"name\": \"str\",  # Optional. Environment name.\n       \"parameters\"\
    : {},  # Optional. Parameters object for the environment.\n       \"provisioningState\"\
    : \"str\",  # Optional. The provisioning state of the\n         environment.\n\
    \       \"resourceGroupId\": \"str\",  # Optional. The identifier of the resource\
    \ group\n         containing the environment's resources.\n       \"user\": \"\
    str\"  # Optional. The AAD object id of the owner of this\n         Environment.\n\
    \   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_environment_definition
  name: get_environment_definition
  summary: Get an environment definition from a catalog.
  signature: 'async get_environment_definition(project_name: str, catalog_name: str,
    definition_name: str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: The name of the catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: definition_name
    description: The name of the environment definition. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"id\": \"str\",  # The ID\
    \ of the environment definition. Required.\n       \"name\": \"str\",  # Name\
    \ of the environment definition. Required.\n       \"description\": \"str\", \
    \ # Optional. A short description of the environment\n         definition.\n \
    \      \"parameters\": [\n           {\n               \"id\": \"str\",  # Unique\
    \ ID of the parameter. Required.\n               \"required\": bool,  # Whether\
    \ or not this parameter is\n                 required. Required.\n           \
    \    \"type\": \"str\",  # A string of one of the basic JSON types\n         \
    \        (number, integer, array, object, boolean, string). Required. Known values\n\
    \                 are: \"array\", \"boolean\", \"integer\", \"number\", \"object\"\
    , and \"string\".\n               \"allowed\": [\n                   \"str\" \
    \ # Optional. An array of allowed values.\n               ],\n               \"\
    default\": \"str\",  # Optional. Default value of the\n                 parameter.\n\
    \               \"description\": \"str\",  # Optional. Description of the\n  \
    \               parameter.\n               \"name\": \"str\",  # Optional. Display\
    \ name of the parameter.\n               \"readOnly\": bool  # Optional. Whether\
    \ or not this parameter\n                 is read-only.  If true, default should\
    \ have a value.\n           }\n       ],\n       \"parametersSchema\": \"str\"\
    ,  # Optional. JSON schema defining the parameters\n         object passed to\
    \ an environment.\n       \"templatePath\": \"str\"  # Optional. Path to the Environment\
    \ Definition\n         entrypoint file.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_pool
  name: get_pool
  summary: Gets a pool.
  signature: 'async get_pool(project_name: str, pool_name: str, **kwargs: Any) ->
    MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pool_name
    description: The name of a pool of Dev Boxes. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"healthStatus\"\
    : \"str\",  # Overall health status of the Pool. Indicates\n         whether or\
    \ not the Pool is available to create Dev Boxes. Required. Known values\n    \
    \     are: \"Unknown\", \"Pending\", \"Healthy\", \"Warning\", and \"Unhealthy\"\
    .\n       \"location\": \"str\",  # Azure region where Dev Boxes in the pool are\
    \ located.\n         Required.\n       \"name\": \"str\",  # Pool name. Required.\n\
    \       \"hardwareProfile\": {\n           \"memoryGB\": 0,  # Optional. The amount\
    \ of memory available for the\n             Dev Box.\n           \"skuName\":\
    \ \"str\",  # Optional. The name of the SKU.\n           \"vCPUs\": 0  # Optional.\
    \ The number of vCPUs available for the Dev\n             Box.\n       },\n  \
    \     \"hibernateSupport\": \"str\",  # Optional. Indicates whether hibernate\
    \ is\n         enabled/disabled or unknown. Known values are: \"Enabled\", \"\
    Disabled\", and\n         \"OsUnsupported\".\n       \"imageReference\": {\n \
    \          \"name\": \"str\",  # Optional. The name of the image used.\n     \
    \      \"operatingSystem\": \"str\",  # Optional. The operating system of the\n\
    \             image.\n           \"osBuildNumber\": \"str\",  # Optional. The\
    \ operating system build\n             number of the image.\n           \"publishedDate\"\
    : \"2020-02-20 00:00:00\",  # Optional. The datetime\n             that the backing\
    \ image version was published.\n           \"version\": \"str\"  # Optional. The\
    \ version of the image.\n       },\n       \"localAdministrator\": \"str\",  #\
    \ Optional. Indicates whether owners of Dev\n         Boxes in this pool are local\
    \ administrators on the Dev Boxes. Known values are:\n         \"Enabled\" and\
    \ \"Disabled\".\n       \"osType\": \"str\",  # Optional. The operating system\
    \ type of Dev Boxes in this\n         pool. \"Windows\"\n       \"stopOnDisconnect\"\
    : {\n           \"status\": \"str\",  # Indicates whether the feature to stop\
    \ the devbox\n             on disconnect once the grace period has lapsed is enabled.\
    \ Required. Known\n             values are: \"Enabled\" and \"Disabled\".\n  \
    \         \"gracePeriodMinutes\": 0  # Optional. The specified time in minutes\
    \ to\n             wait before stopping a Dev Box once disconnect is detected.\n\
    \       },\n       \"storageProfile\": {\n           \"osDisk\": {\n         \
    \      \"diskSizeGB\": 0  # Optional. The size of the OS Disk in\n           \
    \      gigabytes.\n           }\n       }\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_project
  name: get_project
  summary: Gets a project.
  signature: 'async get_project(project_name: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Name of the project. Required.\n       \"description\": \"str\"\
    ,  # Optional. Description of the project.\n       \"maxDevBoxesPerUser\": 0 \
    \ # Optional. When specified, indicates the maximum\n         number of Dev Boxes\
    \ a single user can create across all pools in the project.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_remote_connection
  name: get_remote_connection
  summary: Gets RDP Connection info.
  signature: 'async get_remote_connection(project_name: str, user_id: str, dev_box_name:
    str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"rdpConnectionUrl\"\
    : \"str\",  # Optional. Link to open a Remote Desktop\n         session.\n   \
    \    \"webUrl\": \"str\"  # Optional. URL to open a browser based RDP session.\n\
    \   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.get_schedule
  name: get_schedule
  summary: Gets a schedule.
  signature: 'async get_schedule(project_name: str, pool_name: str, schedule_name:
    str, **kwargs: Any) -> MutableMapping[str, Any]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pool_name
    description: The name of a pool of Dev Boxes. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: schedule_name
    description: The name of a schedule. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"frequency\"\
    : \"str\",  # The frequency of this scheduled task. Required.\n         \"Daily\"\
    \n       \"name\": \"str\",  # Display name for the Schedule. Required.\n    \
    \   \"time\": \"str\",  # The target time to trigger the action. The format is\
    \ HH:MM.\n         Required.\n       \"timeZone\": \"str\",  # The IANA timezone\
    \ id at which the schedule should\n         execute. Required.\n       \"type\"\
    : \"str\"  # Supported type this scheduled task represents. Required.\n      \
    \   \"StopDevBox\"\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_all_dev_boxes
  name: list_all_dev_boxes
  summary: Lists Dev Boxes that the caller has access to in the DevCenter.
  signature: 'list_all_dev_boxes(*, filter: str | None = None, top: int | None = None,
    **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Display name for the Dev Box. Required.\n       \"poolName\": \"\
    str\",  # The name of the Dev Box pool this machine belongs to.\n         Required.\n\
    \       \"actionState\": \"str\",  # Optional. The current action state of the\
    \ Dev Box.\n         This is state is based on previous action performed by user.\n\
    \       \"createdTime\": \"2020-02-20 00:00:00\",  # Optional. Creation time of\
    \ this Dev\n         Box.\n       \"error\": {\n           \"code\": \"str\",\
    \  # One of a server-defined set of error codes.\n             Required.\n   \
    \        \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ Optional. One of a server-defined set of\n                 error codes.\n  \
    \             \"innererror\": ...\n           },\n           \"target\": \"str\"\
    \  # Optional. The target of the error.\n       },\n       \"hardwareProfile\"\
    : {\n           \"memoryGB\": 0,  # Optional. The amount of memory available for\
    \ the\n             Dev Box.\n           \"skuName\": \"str\",  # Optional. The\
    \ name of the SKU.\n           \"vCPUs\": 0  # Optional. The number of vCPUs available\
    \ for the Dev\n             Box.\n       },\n       \"hibernateSupport\": \"str\"\
    ,  # Optional. Indicates whether hibernate is\n         enabled/disabled or unknown.\
    \ Known values are: \"Enabled\", \"Disabled\", and\n         \"OsUnsupported\"\
    .\n       \"imageReference\": {\n           \"name\": \"str\",  # Optional. The\
    \ name of the image used.\n           \"operatingSystem\": \"str\",  # Optional.\
    \ The operating system of the\n             image.\n           \"osBuildNumber\"\
    : \"str\",  # Optional. The operating system build\n             number of the\
    \ image.\n           \"publishedDate\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The datetime\n             that the backing image version was published.\n \
    \          \"version\": \"str\"  # Optional. The version of the image.\n     \
    \  },\n       \"localAdministrator\": \"str\",  # Optional. Indicates whether\
    \ the owner of the\n         Dev Box is a local administrator. Known values are:\
    \ \"Enabled\" and \"Disabled\".\n       \"location\": \"str\",  # Optional. Azure\
    \ region where this Dev Box is located.\n         This will be the same region\
    \ as the Virtual Network it is attached to.\n       \"osType\": \"str\",  # Optional.\
    \ The operating system type of this Dev Box.\n         \"Windows\"\n       \"\
    powerState\": \"str\",  # Optional. The current power state of the Dev Box.\n\
    \         Known values are: \"Unknown\", \"Running\", \"Deallocated\", \"PoweredOff\"\
    , and\n         \"Hibernated\".\n       \"projectName\": \"str\",  # Optional.\
    \ Name of the project this Dev Box belongs\n         to.\n       \"provisioningState\"\
    : \"str\",  # Optional. The current provisioning state of\n         the Dev Box.\n\
    \       \"storageProfile\": {\n           \"osDisk\": {\n               \"diskSizeGB\"\
    : 0  # Optional. The size of the OS Disk in\n                 gigabytes.\n   \
    \        }\n       },\n       \"uniqueId\": \"str\",  # Optional. A unique identifier\
    \ for the Dev Box. This is\n         a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the user this Dev\
    \ Box is\n         assigned to.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_all_dev_boxes_by_user
  name: list_all_dev_boxes_by_user
  summary: Lists Dev Boxes in the Dev Center for a particular user.
  signature: 'list_all_dev_boxes_by_user(user_id: str, *, filter: str | None = None,
    top: int | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Display name for the Dev Box. Required.\n       \"poolName\": \"\
    str\",  # The name of the Dev Box pool this machine belongs to.\n         Required.\n\
    \       \"actionState\": \"str\",  # Optional. The current action state of the\
    \ Dev Box.\n         This is state is based on previous action performed by user.\n\
    \       \"createdTime\": \"2020-02-20 00:00:00\",  # Optional. Creation time of\
    \ this Dev\n         Box.\n       \"error\": {\n           \"code\": \"str\",\
    \  # One of a server-defined set of error codes.\n             Required.\n   \
    \        \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ Optional. One of a server-defined set of\n                 error codes.\n  \
    \             \"innererror\": ...\n           },\n           \"target\": \"str\"\
    \  # Optional. The target of the error.\n       },\n       \"hardwareProfile\"\
    : {\n           \"memoryGB\": 0,  # Optional. The amount of memory available for\
    \ the\n             Dev Box.\n           \"skuName\": \"str\",  # Optional. The\
    \ name of the SKU.\n           \"vCPUs\": 0  # Optional. The number of vCPUs available\
    \ for the Dev\n             Box.\n       },\n       \"hibernateSupport\": \"str\"\
    ,  # Optional. Indicates whether hibernate is\n         enabled/disabled or unknown.\
    \ Known values are: \"Enabled\", \"Disabled\", and\n         \"OsUnsupported\"\
    .\n       \"imageReference\": {\n           \"name\": \"str\",  # Optional. The\
    \ name of the image used.\n           \"operatingSystem\": \"str\",  # Optional.\
    \ The operating system of the\n             image.\n           \"osBuildNumber\"\
    : \"str\",  # Optional. The operating system build\n             number of the\
    \ image.\n           \"publishedDate\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The datetime\n             that the backing image version was published.\n \
    \          \"version\": \"str\"  # Optional. The version of the image.\n     \
    \  },\n       \"localAdministrator\": \"str\",  # Optional. Indicates whether\
    \ the owner of the\n         Dev Box is a local administrator. Known values are:\
    \ \"Enabled\" and \"Disabled\".\n       \"location\": \"str\",  # Optional. Azure\
    \ region where this Dev Box is located.\n         This will be the same region\
    \ as the Virtual Network it is attached to.\n       \"osType\": \"str\",  # Optional.\
    \ The operating system type of this Dev Box.\n         \"Windows\"\n       \"\
    powerState\": \"str\",  # Optional. The current power state of the Dev Box.\n\
    \         Known values are: \"Unknown\", \"Running\", \"Deallocated\", \"PoweredOff\"\
    , and\n         \"Hibernated\".\n       \"projectName\": \"str\",  # Optional.\
    \ Name of the project this Dev Box belongs\n         to.\n       \"provisioningState\"\
    : \"str\",  # Optional. The current provisioning state of\n         the Dev Box.\n\
    \       \"storageProfile\": {\n           \"osDisk\": {\n               \"diskSizeGB\"\
    : 0  # Optional. The size of the OS Disk in\n                 gigabytes.\n   \
    \        }\n       },\n       \"uniqueId\": \"str\",  # Optional. A unique identifier\
    \ for the Dev Box. This is\n         a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the user this Dev\
    \ Box is\n         assigned to.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_all_environments
  name: list_all_environments
  summary: Lists the environments for a project.
  signature: 'list_all_environments(project_name: str, *, top: int | None = None,
    **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"environmentDefinitionName\"\
    : \"str\",  # Name of the environment definition.\n         Required.\n      \
    \ \"environmentType\": \"str\",  # Environment type. Required.\n       \"error\"\
    : {\n           \"code\": \"str\",  # One of a server-defined set of error codes.\n\
    \             Required.\n           \"message\": \"str\",  # A human-readable\
    \ representation of the error.\n             Required.\n           \"details\"\
    : [\n               ...\n           ],\n           \"innererror\": {\n       \
    \        \"code\": \"str\",  # Optional. One of a server-defined set of\n    \
    \             error codes.\n               \"innererror\": ...\n           },\n\
    \           \"target\": \"str\"  # Optional. The target of the error.\n      \
    \ },\n       \"name\": \"str\",  # Optional. Environment name.\n       \"parameters\"\
    : {},  # Optional. Parameters object for the environment.\n       \"provisioningState\"\
    : \"str\",  # Optional. The provisioning state of the\n         environment.\n\
    \       \"resourceGroupId\": \"str\",  # Optional. The identifier of the resource\
    \ group\n         containing the environment's resources.\n       \"user\": \"\
    str\"  # Optional. The AAD object id of the owner of this\n         Environment.\n\
    \   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_catalogs
  name: list_catalogs
  summary: Lists all of the catalogs available for a project.
  signature: 'list_catalogs(project_name: str, *, top: int | None = None, **kwargs:
    Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\"  # Name of the catalog. Required.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_dev_box_actions
  name: list_dev_box_actions
  summary: Lists actions on a Dev Box.
  signature: 'list_dev_box_actions(project_name: str, user_id: str, dev_box_name:
    str, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"actionType\"\
    : \"str\",  # The action that will be taken. Required. \"Stop\"\n       \"name\"\
    : \"str\",  # The name of the action. Required.\n       \"sourceId\": \"str\"\
    ,  # The id of the resource which triggered this action.\n         Required.\n\
    \       \"next\": {\n           \"scheduledTime\": \"2020-02-20 00:00:00\"  #\
    \ The time the action will be\n             triggered (UTC). Required.\n     \
    \  },\n       \"suspendedUntil\": \"2020-02-20 00:00:00\"  # Optional. The earliest\
    \ time that\n         the action could occur (UTC).\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_dev_boxes
  name: list_dev_boxes
  summary: Lists Dev Boxes in the project for a particular user.
  signature: 'list_dev_boxes(project_name: str, user_id: str, *, filter: str | None
    = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Display name for the Dev Box. Required.\n       \"poolName\": \"\
    str\",  # The name of the Dev Box pool this machine belongs to.\n         Required.\n\
    \       \"actionState\": \"str\",  # Optional. The current action state of the\
    \ Dev Box.\n         This is state is based on previous action performed by user.\n\
    \       \"createdTime\": \"2020-02-20 00:00:00\",  # Optional. Creation time of\
    \ this Dev\n         Box.\n       \"error\": {\n           \"code\": \"str\",\
    \  # One of a server-defined set of error codes.\n             Required.\n   \
    \        \"message\": \"str\",  # A human-readable representation of the error.\n\
    \             Required.\n           \"details\": [\n               ...\n     \
    \      ],\n           \"innererror\": {\n               \"code\": \"str\",  #\
    \ Optional. One of a server-defined set of\n                 error codes.\n  \
    \             \"innererror\": ...\n           },\n           \"target\": \"str\"\
    \  # Optional. The target of the error.\n       },\n       \"hardwareProfile\"\
    : {\n           \"memoryGB\": 0,  # Optional. The amount of memory available for\
    \ the\n             Dev Box.\n           \"skuName\": \"str\",  # Optional. The\
    \ name of the SKU.\n           \"vCPUs\": 0  # Optional. The number of vCPUs available\
    \ for the Dev\n             Box.\n       },\n       \"hibernateSupport\": \"str\"\
    ,  # Optional. Indicates whether hibernate is\n         enabled/disabled or unknown.\
    \ Known values are: \"Enabled\", \"Disabled\", and\n         \"OsUnsupported\"\
    .\n       \"imageReference\": {\n           \"name\": \"str\",  # Optional. The\
    \ name of the image used.\n           \"operatingSystem\": \"str\",  # Optional.\
    \ The operating system of the\n             image.\n           \"osBuildNumber\"\
    : \"str\",  # Optional. The operating system build\n             number of the\
    \ image.\n           \"publishedDate\": \"2020-02-20 00:00:00\",  # Optional.\
    \ The datetime\n             that the backing image version was published.\n \
    \          \"version\": \"str\"  # Optional. The version of the image.\n     \
    \  },\n       \"localAdministrator\": \"str\",  # Optional. Indicates whether\
    \ the owner of the\n         Dev Box is a local administrator. Known values are:\
    \ \"Enabled\" and \"Disabled\".\n       \"location\": \"str\",  # Optional. Azure\
    \ region where this Dev Box is located.\n         This will be the same region\
    \ as the Virtual Network it is attached to.\n       \"osType\": \"str\",  # Optional.\
    \ The operating system type of this Dev Box.\n         \"Windows\"\n       \"\
    powerState\": \"str\",  # Optional. The current power state of the Dev Box.\n\
    \         Known values are: \"Unknown\", \"Running\", \"Deallocated\", \"PoweredOff\"\
    , and\n         \"Hibernated\".\n       \"projectName\": \"str\",  # Optional.\
    \ Name of the project this Dev Box belongs\n         to.\n       \"provisioningState\"\
    : \"str\",  # Optional. The current provisioning state of\n         the Dev Box.\n\
    \       \"storageProfile\": {\n           \"osDisk\": {\n               \"diskSizeGB\"\
    : 0  # Optional. The size of the OS Disk in\n                 gigabytes.\n   \
    \        }\n       },\n       \"uniqueId\": \"str\",  # Optional. A unique identifier\
    \ for the Dev Box. This is\n         a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).\n\
    \       \"user\": \"str\"  # Optional. The AAD object id of the user this Dev\
    \ Box is\n         assigned to.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_environment_definitions
  name: list_environment_definitions
  summary: Lists all environment definitions available for a project.
  signature: 'list_environment_definitions(project_name: str, *, top: int | None =
    None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"id\": \"str\",  # The ID\
    \ of the environment definition. Required.\n       \"name\": \"str\",  # Name\
    \ of the environment definition. Required.\n       \"description\": \"str\", \
    \ # Optional. A short description of the environment\n         definition.\n \
    \      \"parameters\": [\n           {\n               \"id\": \"str\",  # Unique\
    \ ID of the parameter. Required.\n               \"required\": bool,  # Whether\
    \ or not this parameter is\n                 required. Required.\n           \
    \    \"type\": \"str\",  # A string of one of the basic JSON types\n         \
    \        (number, integer, array, object, boolean, string). Required. Known values\n\
    \                 are: \"array\", \"boolean\", \"integer\", \"number\", \"object\"\
    , and \"string\".\n               \"allowed\": [\n                   \"str\" \
    \ # Optional. An array of allowed values.\n               ],\n               \"\
    default\": \"str\",  # Optional. Default value of the\n                 parameter.\n\
    \               \"description\": \"str\",  # Optional. Description of the\n  \
    \               parameter.\n               \"name\": \"str\",  # Optional. Display\
    \ name of the parameter.\n               \"readOnly\": bool  # Optional. Whether\
    \ or not this parameter\n                 is read-only.  If true, default should\
    \ have a value.\n           }\n       ],\n       \"parametersSchema\": \"str\"\
    ,  # Optional. JSON schema defining the parameters\n         object passed to\
    \ an environment.\n       \"templatePath\": \"str\"  # Optional. Path to the Environment\
    \ Definition\n         entrypoint file.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_environment_definitions_by_catalog
  name: list_environment_definitions_by_catalog
  summary: Lists all environment definitions available within a catalog.
  signature: 'list_environment_definitions_by_catalog(project_name: str, catalog_name:
    str, *, top: int | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: catalog_name
    description: The name of the catalog. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"id\": \"str\",  # The ID\
    \ of the environment definition. Required.\n       \"name\": \"str\",  # Name\
    \ of the environment definition. Required.\n       \"description\": \"str\", \
    \ # Optional. A short description of the environment\n         definition.\n \
    \      \"parameters\": [\n           {\n               \"id\": \"str\",  # Unique\
    \ ID of the parameter. Required.\n               \"required\": bool,  # Whether\
    \ or not this parameter is\n                 required. Required.\n           \
    \    \"type\": \"str\",  # A string of one of the basic JSON types\n         \
    \        (number, integer, array, object, boolean, string). Required. Known values\n\
    \                 are: \"array\", \"boolean\", \"integer\", \"number\", \"object\"\
    , and \"string\".\n               \"allowed\": [\n                   \"str\" \
    \ # Optional. An array of allowed values.\n               ],\n               \"\
    default\": \"str\",  # Optional. Default value of the\n                 parameter.\n\
    \               \"description\": \"str\",  # Optional. Description of the\n  \
    \               parameter.\n               \"name\": \"str\",  # Optional. Display\
    \ name of the parameter.\n               \"readOnly\": bool  # Optional. Whether\
    \ or not this parameter\n                 is read-only.  If true, default should\
    \ have a value.\n           }\n       ],\n       \"parametersSchema\": \"str\"\
    ,  # Optional. JSON schema defining the parameters\n         object passed to\
    \ an environment.\n       \"templatePath\": \"str\"  # Optional. Path to the Environment\
    \ Definition\n         entrypoint file.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_environment_types
  name: list_environment_types
  summary: Lists all environment types configured for a project.
  signature: 'list_environment_types(project_name: str, *, top: int | None = None,
    **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"deploymentTargetId\"\
    : \"str\",  # Id of a subscription or management group that\n         the environment\
    \ type will be mapped to. The environment's resources will be\n         deployed\
    \ into this subscription or management group. Required.\n       \"name\": \"str\"\
    ,  # Name of the environment type. Required.\n       \"status\": \"str\"  # Indicates\
    \ whether this environment type is enabled for use\n         in this project.\
    \ Required. Known values are: \"Enabled\" and \"Disabled\".\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_environments
  name: list_environments
  summary: Lists the environments for a project and user.
  signature: 'list_environments(project_name: str, user_id: str, *, top: int | None
    = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"catalogName\"\
    : \"str\",  # Name of the catalog. Required.\n       \"environmentDefinitionName\"\
    : \"str\",  # Name of the environment definition.\n         Required.\n      \
    \ \"environmentType\": \"str\",  # Environment type. Required.\n       \"error\"\
    : {\n           \"code\": \"str\",  # One of a server-defined set of error codes.\n\
    \             Required.\n           \"message\": \"str\",  # A human-readable\
    \ representation of the error.\n             Required.\n           \"details\"\
    : [\n               ...\n           ],\n           \"innererror\": {\n       \
    \        \"code\": \"str\",  # Optional. One of a server-defined set of\n    \
    \             error codes.\n               \"innererror\": ...\n           },\n\
    \           \"target\": \"str\"  # Optional. The target of the error.\n      \
    \ },\n       \"name\": \"str\",  # Optional. Environment name.\n       \"parameters\"\
    : {},  # Optional. Parameters object for the environment.\n       \"provisioningState\"\
    : \"str\",  # Optional. The provisioning state of the\n         environment.\n\
    \       \"resourceGroupId\": \"str\",  # Optional. The identifier of the resource\
    \ group\n         containing the environment's resources.\n       \"user\": \"\
    str\"  # Optional. The AAD object id of the owner of this\n         Environment.\n\
    \   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_pools
  name: list_pools
  summary: Lists available pools.
  signature: 'list_pools(project_name: str, *, filter: str | None = None, top: int
    | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"healthStatus\"\
    : \"str\",  # Overall health status of the Pool. Indicates\n         whether or\
    \ not the Pool is available to create Dev Boxes. Required. Known values\n    \
    \     are: \"Unknown\", \"Pending\", \"Healthy\", \"Warning\", and \"Unhealthy\"\
    .\n       \"location\": \"str\",  # Azure region where Dev Boxes in the pool are\
    \ located.\n         Required.\n       \"name\": \"str\",  # Pool name. Required.\n\
    \       \"hardwareProfile\": {\n           \"memoryGB\": 0,  # Optional. The amount\
    \ of memory available for the\n             Dev Box.\n           \"skuName\":\
    \ \"str\",  # Optional. The name of the SKU.\n           \"vCPUs\": 0  # Optional.\
    \ The number of vCPUs available for the Dev\n             Box.\n       },\n  \
    \     \"hibernateSupport\": \"str\",  # Optional. Indicates whether hibernate\
    \ is\n         enabled/disabled or unknown. Known values are: \"Enabled\", \"\
    Disabled\", and\n         \"OsUnsupported\".\n       \"imageReference\": {\n \
    \          \"name\": \"str\",  # Optional. The name of the image used.\n     \
    \      \"operatingSystem\": \"str\",  # Optional. The operating system of the\n\
    \             image.\n           \"osBuildNumber\": \"str\",  # Optional. The\
    \ operating system build\n             number of the image.\n           \"publishedDate\"\
    : \"2020-02-20 00:00:00\",  # Optional. The datetime\n             that the backing\
    \ image version was published.\n           \"version\": \"str\"  # Optional. The\
    \ version of the image.\n       },\n       \"localAdministrator\": \"str\",  #\
    \ Optional. Indicates whether owners of Dev\n         Boxes in this pool are local\
    \ administrators on the Dev Boxes. Known values are:\n         \"Enabled\" and\
    \ \"Disabled\".\n       \"osType\": \"str\",  # Optional. The operating system\
    \ type of Dev Boxes in this\n         pool. \"Windows\"\n       \"stopOnDisconnect\"\
    : {\n           \"status\": \"str\",  # Indicates whether the feature to stop\
    \ the devbox\n             on disconnect once the grace period has lapsed is enabled.\
    \ Required. Known\n             values are: \"Enabled\" and \"Disabled\".\n  \
    \         \"gracePeriodMinutes\": 0  # Optional. The specified time in minutes\
    \ to\n             wait before stopping a Dev Box once disconnect is detected.\n\
    \       },\n       \"storageProfile\": {\n           \"osDisk\": {\n         \
    \      \"diskSizeGB\": 0  # Optional. The size of the OS Disk in\n           \
    \      gigabytes.\n           }\n       }\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_projects
  name: list_projects
  summary: Lists all projects.
  signature: 'list_projects(*, filter: str | None = None, top: int | None = None,
    **kwargs: Any) -> AsyncIterable[MutableMapping[str, Any]]'
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"name\"\
    : \"str\",  # Name of the project. Required.\n       \"description\": \"str\"\
    ,  # Optional. Description of the project.\n       \"maxDevBoxesPerUser\": 0 \
    \ # Optional. When specified, indicates the maximum\n         number of Dev Boxes\
    \ a single user can create across all pools in the project.\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.list_schedules
  name: list_schedules
  summary: Lists available schedules for a pool.
  signature: 'list_schedules(project_name: str, pool_name: str, *, filter: str | None
    = None, top: int | None = None, **kwargs: Any) -> AsyncIterable[MutableMapping[str,
    Any]]'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pool_name
    description: The name of a pool of Dev Boxes. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: filter
    description: An OData filter clause to apply to the operation. Default value is
      None.
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of resources to return from the operation. Example:
      ''top=10''.

      Default value is None.'
    types:
    - <xref:int>
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:JSON>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"frequency\"\
    : \"str\",  # The frequency of this scheduled task. Required.\n         \"Daily\"\
    \n       \"name\": \"str\",  # Display name for the Schedule. Required.\n    \
    \   \"time\": \"str\",  # The target time to trigger the action. The format is\
    \ HH:MM.\n         Required.\n       \"timeZone\": \"str\",  # The IANA timezone\
    \ id at which the schedule should\n         execute. Required.\n       \"type\"\
    : \"str\"  # Supported type this scheduled task represents. Required.\n      \
    \   \"StopDevBox\"\n   }\n   ````\n"
- uid: azure.developer.devcenter.aio.DevCenterClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
- uid: azure.developer.devcenter.aio.DevCenterClient.skip_dev_box_action
  name: skip_dev_box_action
  summary: Skips an occurrence of an action.
  signature: 'async skip_dev_box_action(project_name: str, user_id: str, dev_box_name:
    str, action_name: str, **kwargs: Any) -> None'
  parameters:
  - name: project_name
    description: The DevCenter Project upon which to execute operations. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: 'The AAD object id of the user. If value is ''me'', the identity
      is taken from the

      authentication context. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: dev_box_name
    description: The name of a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: action_name
    description: The name of an action that will take place on a Dev Box. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
