### YamlMime:PythonClass
uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations
name: ConnectedEnvironmentsCertificatesOperations
fullName: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations
module: azure.mgmt.appcontainers.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.appcontainers.ContainerAppsAPIClient>'s\n\
  >\n> <xref:connected_environments_certificates> attribute.\n>"
constructor:
  syntax: ConnectedEnvironmentsCertificatesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or Update a Certificate.


    Create or Update a Certificate.'
  signature: 'begin_create_or_update(resource_group_name: str, connected_environment_name:
    str, certificate_name: str, certificate_envelope: _models.Certificate | None =
    None, *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.Certificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connected_environment_name
    description: Name of the Connected Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of the Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_envelope
    description: 'Certificate to be created or updated. Is either a Certificate type

      or a IO[bytes] type. Default value is None.'
    defaultValue: None
    types:
    - <xref:azure.mgmt.appcontainers.models.Certificate>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either Certificate or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.appcontainers.models.Certificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.begin_delete
  name: begin_delete
  summary: 'Deletes the specified Certificate.


    Deletes the specified Certificate.'
  signature: 'begin_delete(resource_group_name: str, connected_environment_name: str,
    certificate_name: str, **kwargs: Any) -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connected_environment_name
    description: Name of the Connected Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of the Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.begin_update
  name: begin_update
  summary: 'Update properties of a certificate.


    Patches a certificate. Currently only patching of tags is supported.'
  signature: 'begin_update(resource_group_name: str, connected_environment_name: str,
    certificate_name: str, certificate_envelope: _models.CertificatePatch, *, content_type:
    str = ''application/json'', **kwargs: Any) -> LROPoller[_models.Certificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connected_environment_name
    description: Name of the Connected Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of the Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_envelope
    description: 'Properties of a certificate that need to be updated. Is either a

      CertificatePatch type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcontainers.models.CertificatePatch>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either Certificate or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.appcontainers.models.Certificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.get
  name: get
  summary: 'Get the specified Certificate.


    Get the specified Certificate.'
  signature: 'get(resource_group_name: str, connected_environment_name: str, certificate_name:
    str, **kwargs: Any) -> Certificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connected_environment_name
    description: Name of the Connected Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of the Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Certificate or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcontainers.models.Certificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.list
  name: list
  summary: 'Get the Certificates in a given connected environment.


    Get the Certificates in a given connected environment.'
  signature: 'list(resource_group_name: str, connected_environment_name: str, **kwargs:
    Any) -> ItemPaged[Certificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connected_environment_name
    description: Name of the Connected Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either Certificate or the result of
      cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.appcontainers.models.Certificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.appcontainers.operations.ConnectedEnvironmentsCertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.appcontainers.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv69\\Lib\\site-packages\\azure\\mgmt\\appcontainers\\models\\__init__.py'>
