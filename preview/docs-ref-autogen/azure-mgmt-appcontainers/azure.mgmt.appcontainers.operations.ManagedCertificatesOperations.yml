### YamlMime:PythonClass
uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations
name: ManagedCertificatesOperations
fullName: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations
module: azure.mgmt.appcontainers.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.appcontainers.ContainerAppsAPIClient>'s\n\
  >\n> <xref:managed_certificates> attribute.\n>"
constructor:
  syntax: ManagedCertificatesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create or Update a Managed Certificate.


    Create or Update a Managed Certificate.'
  signature: 'begin_create_or_update(resource_group_name: str, environment_name: str,
    managed_certificate_name: str, managed_certificate_envelope: _models.ManagedCertificate
    | None = None, *, content_type: str = ''application/json'', **kwargs: Any) ->
    LROPoller[_models.ManagedCertificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: Name of the Managed Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_name
    description: Name of the Managed Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_envelope
    description: 'Managed Certificate to be created or updated. Is either a

      ManagedCertificate type or a IO[bytes] type. Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcontainers.models.ManagedCertificate>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either ManagedCertificate
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.appcontainers.models.ManagedCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.delete
  name: delete
  summary: 'Deletes the specified Managed Certificate.


    Deletes the specified Managed Certificate.'
  signature: 'delete(resource_group_name: str, environment_name: str, managed_certificate_name:
    str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: Name of the Managed Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_name
    description: Name of the Managed Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.get
  name: get
  summary: 'Get the specified Managed Certificate.


    Get the specified Managed Certificate.'
  signature: 'get(resource_group_name: str, environment_name: str, managed_certificate_name:
    str, **kwargs: Any) -> ManagedCertificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: Name of the Managed Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_name
    description: Name of the Managed Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ManagedCertificate or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcontainers.models.ManagedCertificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.list
  name: list
  summary: 'Get the Managed Certificates in a given managed environment.


    Get the Managed Certificates in a given managed environment.'
  signature: 'list(resource_group_name: str, environment_name: str, **kwargs: Any)
    -> Iterable[ManagedCertificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: Name of the Managed Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either ManagedCertificate or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.appcontainers.models.ManagedCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.update
  name: update
  summary: 'Update tags of a managed certificate.


    Patches a managed certificate. Oly patching of tags is supported.'
  signature: 'update(resource_group_name: str, environment_name: str, managed_certificate_name:
    str, managed_certificate_envelope: _models.ManagedCertificatePatch, *, content_type:
    str = ''application/json'', **kwargs: Any) -> _models.ManagedCertificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: environment_name
    description: Name of the Managed Environment. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_name
    description: Name of the Managed Certificate. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: managed_certificate_envelope
    description: 'Properties of a managed certificate that need to be

      updated. Is either a ManagedCertificatePatch type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.appcontainers.models.ManagedCertificatePatch>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: ManagedCertificate or the result of cls(response)
    types:
    - <xref:azure.mgmt.appcontainers.models.ManagedCertificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.appcontainers.operations.ManagedCertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.appcontainers.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\appcontainers\\models\\__init__.py'>
