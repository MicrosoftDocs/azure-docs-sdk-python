### YamlMime:PythonClass
uid: azure.communication.administration.CommunicationIdentityClient
name: CommunicationIdentityClient
fullName: azure.communication.administration.CommunicationIdentityClient
module: azure.communication.administration
inheritances:
- builtins.object
summary: Azure Communication Services Identity client.
constructor:
  syntax: 'CommunicationIdentityClient(endpoint: str, credential: str, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: The endpoint url for Azure Communication Service resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. The value is an account

      shared access key'
    isRequired: true
examples:
- "<!--[!code-python[Main](les\\identity_samples.py )]-->\n\n<!-- literal_block {\"\
  ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"\
  source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.11.9\\\\x64\\\\Lib\\\
  \\site-packages\\\\py2docfx\\\\dist_temp\\\\21\\\\azure-communication-administration-1.0.0b4\\\
  \\samples\\\\identity_samples.py\", \"xml:space\": \"preserve\", \"force\": false,\
  \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
  : false} -->\n\n````python\n\n   : utf-8\n\n   -------------------------------------------------------------------\n\
  \   ght (c) Microsoft Corporation. All rights reserved.\n   ed under the MIT License.\
  \ See License.txt in the project root for\n   e information.\n   --------------------------------------------------------------------\n\
  \n\n   entity_sample.py\n   ION:\n   e samples demonstrate identity client samples.\n\
  \n   uthenticating a client via a connection string\n\n   on identity_samples.py\n\
  \n   s\n\n   mmunicationIdentityClientSamples(object):\n\n   __init__(self):\n \
  \  self.connection_string = os.getenv('AZURE_COMMUNICATION_SERVICE_CONNECTION_STRING')\n\
  \n   issue_token(self):\n   from azure.communication.administration import CommunicationIdentityClient\n\
  \n   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
  \   user = identity_client.create_user()\n   tokenresponse = identity_client.issue_token(user,\
  \ scopes=[\"chat\"])\n   print(tokenresponse)\n\n   revoke_tokens(self):\n   from\
  \ azure.communication.administration import CommunicationIdentityClient\n\n   identity_client\
  \ = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
  \   user = identity_client.create_user()\n   tokenresponse = identity_client.issue_token(user,\
  \ scopes=[\"chat\"])\n   identity_client.revoke_tokens(user)\n   print(tokenresponse)\n\
  \n   create_user(self):\n   from azure.communication.administration import CommunicationIdentityClient\n\
  \   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
  \   user = identity_client.create_user()\n\n   print(user.identifier)\n\n   delete_user(self):\n\
  \   from azure.communication.administration import CommunicationIdentityClient\n\
  \   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
  \   user = identity_client.create_user()\n   identity_client.delete_user(user)\n\
  \n   e__ == '__main__':\n   le = CommunicationIdentityClientSamples()\n   le.create_user()\n\
  \   le.delete_user()\n   le.issue_token()\n   le.revoke_tokens()\n\n   ````\n"
methods:
- uid: azure.communication.administration.CommunicationIdentityClient.create_user
  name: create_user
  summary: 'create a single Communication user


    return: CommunicationUser

    rtype: ~azure.communication.administration.CommunicationUser'
  signature: create_user(**kwargs) -> CommunicationUser
- uid: azure.communication.administration.CommunicationIdentityClient.delete_user
  name: delete_user
  summary: Triggers revocation event for user and deletes all its data.
  signature: 'delete_user(communication_user: CommunicationUser, **kwargs: Any) ->
    None'
  parameters:
  - name: communication_user
    description: Azure Communication User to delete
    isRequired: true
    types:
    - <xref:azure.communication.administration.CommunicationUser>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.communication.administration.CommunicationIdentityClient.from_connection_string
  name: from_connection_string
  summary: Create CommunicationIdentityClient from a Connection String.
  signature: 'from_connection_string(conn_str: str, **kwargs: Any) -> CommunicationIdentityClient'
  parameters:
  - name: conn_str
    description: A connection string to an Azure Communication Service resource.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Instance of CommunicationIdentityClient.
    types:
    - <xref:azure.communication.CommunicationIdentityClient>
- uid: azure.communication.administration.CommunicationIdentityClient.issue_token
  name: issue_token
  summary: Generates a new token for an identity.
  signature: 'issue_token(user: CommunicationUser, scopes: List[str], **kwargs: Any)
    -> CommunicationIdentityToken'
  parameters:
  - name: user
    description: Azure Communication User
    isRequired: true
    types:
    - <xref:azure.communication.administration.CommunicationUser>
  - name: scopes
    description: List of scopes to be added to the token.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  return:
    description: CommunicationIdentityToken
    types:
    - <xref:azure.communication.administration.CommunicationIdentityToken>
- uid: azure.communication.administration.CommunicationIdentityClient.revoke_tokens
  name: revoke_tokens
  summary: Schedule revocation of all tokens of an identity.
  signature: 'revoke_tokens(user: CommunicationUser, issued_before: datetime.datetime
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: user
    description: Azure Communication User.
    isRequired: true
    types:
    - <xref:azure.communication.administration.CommunicationUser.>
  - name: issued_before
    description: All tokens that are issued prior to this time should get revoked.
    isRequired: true
    types:
    - <xref:datetime.datetime.>
  return:
    description: None
    types:
    - <xref:None>
