### YamlMime:PythonClass
uid: corehttp.runtime.pipeline.AsyncPipeline
name: AsyncPipeline
fullName: corehttp.runtime.pipeline.AsyncPipeline
module: corehttp.runtime.pipeline
inheritances:
- contextlib.AbstractAsyncContextManager
- typing.Generic
summary: 'Async pipeline implementation.


  This is implemented as a context manager, that will activate the context

  of the HTTP sender.'
constructor:
  syntax: 'AsyncPipeline(transport: AsyncHttpTransport[HTTPRequestType, AsyncHTTPResponseType],
    policies: Iterable[AsyncHTTPPolicy[HTTPRequestType, AsyncHTTPResponseType] | SansIOHTTPPolicy[HTTPRequestType,
    AsyncHTTPResponseType]] | None = None)'
  parameters:
  - name: transport
    description: The async Http Transport instance.
    isRequired: true
    types:
    - <xref:<xref:corehttp.transport#corehttp.transport.AsyncHttpTransport>>
  - name: policies
    description: List of configured policies.
    defaultValue: None
    types:
    - <xref:list>
methods:
- uid: corehttp.runtime.pipeline.AsyncPipeline.run
  name: run
  summary: Runs the HTTP Request through the chained policies.
  signature: 'async run(request: HTTPRequestType, **kwargs: Any) -> PipelineResponse[HTTPRequestType,
    AsyncHTTPResponseType]'
  parameters:
  - name: request
    description: The HTTP request object.
    isRequired: true
    types:
    - <xref:<xref:corehttp.rest#corehttp.rest.HttpRequest>>
  return:
    description: The PipelineResponse object.
    types:
    - <xref:corehttp.runtime.pipeline.PipelineResponse>
