### YamlMime:PythonClass
uid: corehttp.transport.httpx.HttpXTransport
name: HttpXTransport
fullName: corehttp.transport.httpx.HttpXTransport
module: corehttp.transport.httpx
inheritances:
- corehttp.transport._base.HttpTransport
summary: Implements a basic httpx HTTP sender
constructor:
  syntax: 'HttpXTransport(*, client: Client | None = None, client_owner: bool = True,
    use_env_settings: bool = True, **kwargs: Any)'
  keywordOnlyParameters:
  - name: client
    description: HTTPX client to use instead of the default one
    types:
    - <xref:httpx.Client>
  - name: client_owner
    description: Decide if the client provided by user is owned by this transport.
      Default to True.
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: use_env_settings
    description: Uses proxy settings from environment. Defaults to True.
    defaultValue: 'True'
    types:
    - <xref:bool>
methods:
- uid: corehttp.transport.httpx.HttpXTransport.close
  name: close
  summary: Close the session.
  signature: close() -> None
  return:
    description: None
    types:
    - <xref:None>
- uid: corehttp.transport.httpx.HttpXTransport.open
  name: open
  signature: open() -> None
- uid: corehttp.transport.httpx.HttpXTransport.send
  name: send
  summary: Send a request and get back a response.
  signature: 'send(request: HttpRequest, *, stream: bool = False, **kwargs) -> HttpResponse'
  parameters:
  - name: request
    description: The request object to be sent.
    isRequired: true
    types:
    - <xref:corehttp.rest.HTTPRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether to stream the response. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: An HTTPResponse object.
    types:
    - <xref:corehttp.rest.HttpResponse>
- uid: corehttp.transport.httpx.HttpXTransport.sleep
  name: sleep
  summary: 'Sleep for the specified duration.


    You should always ask the transport to sleep, and not call directly

    the stdlib. This is mostly important in async, as the transport

    may not use asyncio but other implementations like trio and they have their own

    way to sleep, but to keep design

    consistent, it''s cleaner to always ask the transport to sleep and let the transport

    implementor decide how to do it.'
  signature: 'sleep(duration: float) -> None'
  parameters:
  - name: duration
    description: The number of seconds to sleep.
    isRequired: true
    types:
    - <xref:float>
