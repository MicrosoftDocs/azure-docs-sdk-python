### YamlMime:PythonClass
uid: corehttp.runtime.policies.BearerTokenCredentialPolicy
name: BearerTokenCredentialPolicy
fullName: corehttp.runtime.policies.BearerTokenCredentialPolicy
module: corehttp.runtime.policies
inheritances:
- corehttp.runtime.policies._authentication._BearerTokenCredentialPolicyBase
- corehttp.runtime.policies._base.HTTPPolicy
summary: Adds a bearer token Authorization header to requests.
constructor:
  syntax: 'BearerTokenCredentialPolicy(credential: TokenCredential, *scopes: str,
    **kwargs: Any)'
  parameters:
  - name: credential
    description: The credential.
    isRequired: true
    types:
    - <xref:corehttp.TokenCredential>
  - name: scopes
    description: Lets you specify the type of access needed.
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.authorize_request
  name: authorize_request
  summary: 'Acquire a token from the credential and authorize the request with it.


    Keyword arguments are passed to the credential''s get_token method. The token
    will be cached and used to

    authorize future requests.'
  signature: 'authorize_request(request: PipelineRequest[HTTPRequestType], *scopes:
    str, **kwargs: Any) -> None'
  parameters:
  - name: request
    description: the request
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
  - name: scopes
    description: required scopes of authentication
    isRequired: true
    types:
    - <xref:str>
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.on_challenge
  name: on_challenge
  summary: 'Authorize request according to an authentication challenge


    This method is called when the resource provider responds 401 with a WWW-Authenticate
    header.'
  signature: 'on_challenge(request: PipelineRequest[HTTPRequestType], response: PipelineResponse[HTTPRequestType,
    HTTPResponseType]) -> bool'
  parameters:
  - name: request
    description: 'the request which elicited an authentication

      challenge'
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
  - name: response
    description: the resource provider's response
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineResponse>>
  return:
    description: a bool indicating whether the policy should send the request
    types:
    - <xref:bool>
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.on_exception
  name: on_exception
  summary: 'Executed when an exception is raised while executing the next policy.


    This method is executed inside the exception handler.'
  signature: 'on_exception(request: PipelineRequest[HTTPRequestType]) -> None'
  parameters:
  - name: request
    description: The Pipeline request object
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.on_request
  name: on_request
  summary: 'Called before the policy sends a request.


    The base implementation authorizes the request with a bearer token.'
  signature: 'on_request(request: PipelineRequest[HTTPRequestType]) -> None'
  parameters:
  - name: request
    description: the request
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.on_response
  name: on_response
  summary: Executed after the request comes back from the next policy.
  signature: 'on_response(request: PipelineRequest[HTTPRequestType], response: PipelineResponse[HTTPRequestType,
    HTTPResponseType]) -> None'
  parameters:
  - name: request
    description: Request to be modified after returning from the policy.
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
  - name: response
    description: Pipeline response object
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineResponse>>
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.send
  name: send
  summary: Authorize request with a bearer token and send it to the next policy
  signature: 'send(request: PipelineRequest[HTTPRequestType]) -> PipelineResponse[HTTPRequestType,
    HTTPResponseType]'
  parameters:
  - name: request
    description: The pipeline request object
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
  return:
    description: The pipeline response object
    types:
    - <xref:corehttp.runtime.pipeline.PipelineResponse>
attributes:
- uid: corehttp.runtime.policies.BearerTokenCredentialPolicy.next
  name: next
  summary: Pointer to the next policy or a transport (wrapped as a policy). Will be
    set at pipeline creation.
  signature: 'next: HTTPPolicy[HTTPRequestType, HTTPResponseType]'
