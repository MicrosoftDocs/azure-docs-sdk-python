### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_create_or_update
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_delete
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.check_name_availability
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_network_rule_set
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_authorization_rule
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_messaging_plan
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_network_rule_set
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_authorization_rules
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_by_resource_group
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_keys
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_network_rule_sets
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.regenerate_keys
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.update
  - azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.models
  class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: NamespacesOperations
  summary: 'NamespacesOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: NamespacesOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'begin_create_or_update(resource_group_name: str, namespace_name: str, parameters:
    azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  namewithoutparameters: begin_create_or_update
  summary: "Creates or updates a namespace. Once created, this namespace's resource\
    \ manifest is immutable.\nThis operation is idempotent.\n\n   param resource_group_name:\n\
    \      Name of the resource group within the azure subscription.\n\n   type resource_group_name:\n\
    \      str\n\n   param namespace_name:\n      The Namespace name.\n\n   type namespace_name:\n\
    \      str\n\n   param parameters:\n      Parameters for creating a namespace\
    \ resource.\n\n   type parameters:\n      ~azure.mgmt.eventhub.v2017_04_01.models.EHNamespace\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  EHNamespace, or the result of cls(response)\n\n   rtype:\n      ~azure.mgmt.eventhub.v2017_04_01.models.EHNamespace\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, namespace_name: str,
      parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_create_or_update
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'begin_delete(resource_group_name: str, namespace_name: str, **kwargs) ->
    None'
  namewithoutparameters: begin_delete
  summary: "Deletes an existing namespace. This operation also removes all associated\
    \ resources under the\nnamespace.\n\n   param resource_group_name:\n      Name\
    \ of the resource group within the azure subscription.\n\n   type resource_group_name:\n\
    \      str\n\n   param namespace_name:\n      The Namespace name.\n\n   type namespace_name:\n\
    \      str\n\n   keyword callable cls:\n      A custom type or function that will\
    \ be passed the direct response\n\n   keyword str continuation_token:\n      A\
    \ continuation token to restart a poller from a saved state.\n\n   keyword polling:\n\
    \      True for ARMPolling, False for no polling, or a\n      polling object for\
    \ personal polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  None, or the result of cls(response)\n\n   rtype:\n      None\n\n   raises\
    \ ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_delete(resource_group_name: str, namespace_name: str, **kwargs)
      -> None'
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_delete
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'check_name_availability(parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityParameter,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityResult'
  namewithoutparameters: check_name_availability
  summary: Check the give Namespace name availability.
  syntax:
    content: 'check_name_availability(parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityParameter,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityResult'
    parameters:
    - description: Parameters to check availability of the given Namespace name.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.CheckNameAvailabilityParameter
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: CheckNameAvailabilityResult, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.CheckNameAvailabilityResult
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.check_name_availability
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
  namewithoutparameters: create_or_update_authorization_rule
  summary: Creates or updates an AuthorizationRule for a Namespace.
  syntax:
    content: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
      str, authorization_rule_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: The shared access AuthorizationRule.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRule
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: AuthorizationRule, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRule
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_network_rule_set
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'create_or_update_network_rule_set(resource_group_name: str, namespace_name:
    str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
  namewithoutparameters: create_or_update_network_rule_set
  summary: Create or update NetworkRuleSet for a Namespace.
  syntax:
    content: 'create_or_update_network_rule_set(resource_group_name: str, namespace_name:
      str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The Namespace IpFilterRule.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSet
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkRuleSet, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSet
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_network_rule_set
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'delete_authorization_rule(resource_group_name: str, namespace_name: str,
    authorization_rule_name: str, **kwargs) -> None'
  namewithoutparameters: delete_authorization_rule
  summary: Deletes an AuthorizationRule for a Namespace.
  syntax:
    content: 'delete_authorization_rule(resource_group_name: str, namespace_name:
      str, authorization_rule_name: str, **kwargs) -> None'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'get(resource_group_name: str, namespace_name: str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  namewithoutparameters: get
  summary: Gets the description of the specified namespace.
  syntax:
    content: 'get(resource_group_name: str, namespace_name: str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: EHNamespace, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.EHNamespace
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_authorization_rule
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'get_authorization_rule(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
  namewithoutparameters: get_authorization_rule
  summary: Gets an AuthorizationRule for a Namespace by rule name.
  syntax:
    content: 'get_authorization_rule(resource_group_name: str, namespace_name: str,
      authorization_rule_name: str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: AuthorizationRule, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRule
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_authorization_rule
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_messaging_plan
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'get_messaging_plan(resource_group_name: str, namespace_name: str, **kwargs)
    -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.MessagingPlan'
  namewithoutparameters: get_messaging_plan
  summary: Gets messaging plan for specified namespace.
  syntax:
    content: 'get_messaging_plan(resource_group_name: str, namespace_name: str, **kwargs)
      -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.MessagingPlan'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: MessagingPlan, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.MessagingPlan
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_messaging_plan
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_network_rule_set
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'get_network_rule_set(resource_group_name: str, namespace_name: str, **kwargs)
    -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
  namewithoutparameters: get_network_rule_set
  summary: Gets NetworkRuleSet for a Namespace.
  syntax:
    content: 'get_network_rule_set(resource_group_name: str, namespace_name: str,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkRuleSet, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSet
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_network_rule_set
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: list(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.EHNamespaceListResult')]
  namewithoutparameters: list
  summary: Lists all the available Namespaces within a subscription, irrespective
    of the resource groups.
  syntax:
    content: list(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.EHNamespaceListResult')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either EHNamespaceListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult]
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_authorization_rules
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'list_authorization_rules(resource_group_name: str, namespace_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.AuthorizationRuleListResult'')]'
  namewithoutparameters: list_authorization_rules
  summary: Gets a list of authorization rules for a Namespace.
  syntax:
    content: 'list_authorization_rules(resource_group_name: str, namespace_name: str,
      **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.AuthorizationRuleListResult'')]'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either AuthorizationRuleListResult
        or the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRuleListResult]
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_authorization_rules
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'list_by_resource_group(resource_group_name: str, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.EHNamespaceListResult'')]'
  namewithoutparameters: list_by_resource_group
  summary: Lists the available Namespaces within a resource group.
  syntax:
    content: 'list_by_resource_group(resource_group_name: str, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.EHNamespaceListResult'')]'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either EHNamespaceListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult]
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_by_resource_group
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_keys
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
  namewithoutparameters: list_keys
  summary: Gets the primary and secondary connection strings for the Namespace.
  syntax:
    content: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
      str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: AccessKeys, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.AccessKeys
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_keys
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_network_rule_sets
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'list_network_rule_sets(resource_group_name: str, namespace_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.NetworkRuleSetListResult'')]'
  namewithoutparameters: list_network_rule_sets
  summary: Gets list of NetworkRuleSet for a Namespace.
  syntax:
    content: 'list_network_rule_sets(resource_group_name: str, namespace_name: str,
      **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.NetworkRuleSetListResult'')]'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either NetworkRuleSetListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSetListResult]
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_network_rule_sets
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.regenerate_keys
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.RegenerateAccessKeyParameters,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
  namewithoutparameters: regenerate_keys
  summary: Regenerates the primary or secondary connection strings for the specified
    Namespace.
  syntax:
    content: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
      str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.RegenerateAccessKeyParameters,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: The authorization rule name.
      id: authorization_rule_name
      isRequired: true
      type:
      - str
    - description: Parameters required to regenerate the connection string.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.RegenerateAccessKeyParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: AccessKeys, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.AccessKeys
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.regenerate_keys
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.update
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: 'update(resource_group_name: str, namespace_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  namewithoutparameters: update
  summary: 'Creates or updates a namespace. Once created, this namespace''s resource
    manifest is immutable.

    This operation is idempotent.'
  syntax:
    content: 'update(resource_group_name: str, namespace_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace,
      **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
    parameters:
    - description: Name of the resource group within the azure subscription.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Namespace name.
      id: namespace_name
      isRequired: true
      type:
      - str
    - description: Parameters for updating a namespace resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.EHNamespace
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: EHNamespace, or the result of cls(response)
      type:
      - azure.mgmt.eventhub.v2017_04_01.models.EHNamespace
      - None
  type: method
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.update
- class: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.models
  langs:
  - python
  module: azure.mgmt.eventhub.v2017_04_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.eventhub.v2017_04_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\eventhub\\v2017_04_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.models
references:
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, namespace_name: str, parameters:
    azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_create_or_update
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, namespace_name: str, **kwargs) ->
    None'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.begin_delete
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.check_name_availability
  isExternal: false
  name: 'check_name_availability(parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityParameter,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.CheckNameAvailabilityResult'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.check_name_availability
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
  isExternal: false
  name: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_network_rule_set
  isExternal: false
  name: 'create_or_update_network_rule_set(resource_group_name: str, namespace_name:
    str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.create_or_update_network_rule_set
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
  isExternal: false
  name: 'delete_authorization_rule(resource_group_name: str, namespace_name: str,
    authorization_rule_name: str, **kwargs) -> None'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, namespace_name: str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_authorization_rule
  isExternal: false
  name: 'get_authorization_rule(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AuthorizationRule'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_authorization_rule
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_messaging_plan
  isExternal: false
  name: 'get_messaging_plan(resource_group_name: str, namespace_name: str, **kwargs)
    -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.MessagingPlan'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_messaging_plan
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_network_rule_set
  isExternal: false
  name: 'get_network_rule_set(resource_group_name: str, namespace_name: str, **kwargs)
    -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.NetworkRuleSet'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.get_network_rule_set
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list
  isExternal: false
  name: list(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.EHNamespaceListResult')]
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_authorization_rules
  isExternal: false
  name: 'list_authorization_rules(resource_group_name: str, namespace_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.AuthorizationRuleListResult'')]'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_authorization_rules
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_by_resource_group
  isExternal: false
  name: 'list_by_resource_group(resource_group_name: str, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.EHNamespaceListResult'')]'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_by_resource_group
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_keys
  isExternal: false
  name: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_keys
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_network_rule_sets
  isExternal: false
  name: 'list_network_rule_sets(resource_group_name: str, namespace_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.NetworkRuleSetListResult'')]'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.list_network_rule_sets
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.regenerate_keys
  isExternal: false
  name: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.RegenerateAccessKeyParameters,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.AccessKeys'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.regenerate_keys
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.update
  isExternal: false
  name: 'update(resource_group_name: str, namespace_name: str, parameters: azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace,
    **kwargs) -> azure.mgmt.eventhub.v2017_04_01.models._models_py3.EHNamespace'
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.update
- fullName: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations
  uid: azure.mgmt.eventhub.v2017_04_01.aio.operations_async.NamespacesOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult]
  name: AsyncItemPaged[EHNamespaceListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult
    name: EHNamespaceListResult
    uid: azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.EHNamespaceListResult]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRuleListResult]
  name: AsyncItemPaged[AuthorizationRuleListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRuleListResult
    name: AuthorizationRuleListResult
    uid: azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRuleListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.AuthorizationRuleListResult]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSetListResult]
  name: AsyncItemPaged[NetworkRuleSetListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSetListResult
    name: NetworkRuleSetListResult
    uid: azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSetListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.eventhub.v2017_04_01.models.NetworkRuleSetListResult]
