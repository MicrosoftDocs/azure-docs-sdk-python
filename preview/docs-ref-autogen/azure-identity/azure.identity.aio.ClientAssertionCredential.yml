### YamlMime:PythonClass
uid: azure.identity.aio.ClientAssertionCredential
name: ClientAssertionCredential
fullName: azure.identity.aio.ClientAssertionCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
- azure.identity.aio._internal.get_token_mixin.GetTokenMixin
summary: 'Authenticates a service principal with a JWT assertion.


  This credential is for advanced scenarios. <xref:azure.identity.ClientCertificateCredential>
  has a more

  convenient API for the most common assertion scenario, authenticating a service
  principal with a certificate.'
constructor:
  syntax: 'ClientAssertionCredential(tenant_id: str, client_id: str, func: Callable[[],
    str], **kwargs: Any)'
  parameters:
  - name: tenant_id
    description: ID of the principal's tenant. Also called its "directory" ID.
    isRequired: true
    types:
    - <xref:azure.identity.aio.str>
  - name: client_id
    description: The principal's client ID
    isRequired: true
    types:
    - <xref:azure.identity.aio.str>
  - name: func
    description: 'A callable that returns a string assertion. The credential will
      call this every time it

      acquires a new token.'
    isRequired: true
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example

      "login.microsoftonline.com", the authority for Azure Public Cloud (which is
      the default).

      <xref:azure.identity.AzureAuthorityHosts> defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:List>[<xref:str>]
methods:
- uid: azure.identity.aio.ClientAssertionCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: async close() -> None
