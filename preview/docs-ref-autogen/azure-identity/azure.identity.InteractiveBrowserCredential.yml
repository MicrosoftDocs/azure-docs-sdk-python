### YamlMime:PythonClass
uid: azure.identity.InteractiveBrowserCredential
name: InteractiveBrowserCredential
fullName: azure.identity.InteractiveBrowserCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Opens a browser to interactively authenticate a user.


  <xref:azure.identity.get_token> opens a browser to a login URL provided by Azure
  Active Directory and authenticates a user

  there with the authorization code flow, using PKCE (Proof Key for Code Exchange)
  internally to protect the code.'
constructor:
  syntax: 'InteractiveBrowserCredential(**kwargs: Any)'
  parameters:
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'an Azure Active Directory tenant ID. Defaults to the "organizations"
      tenant, which can

      authenticate work or school accounts.'
    types:
    - <xref:str>
  - name: client_id
    description: 'Client ID of the Azure Active Directory application users will sign
      in to. If

      unspecified, users will authenticate to an Azure development application.'
    types:
    - <xref:str>
  - name: login_hint
    description: 'a username suggestion to pre-fill the login page''s username/email
      address field. A user

      may still log in with a different username.'
    types:
    - <xref:str>
  - name: redirect_uri
    description: 'a redirect URI for the application identified by *client_id* as
      configured in Azure

      Active Directory, for example "[http://localhost:8400](http://localhost:8400)".
      This is only required when passing a value for

      **client_id**, and must match a redirect URI in the application''s registration.
      The credential must be able to

      bind a socket to this URI.'
    types:
    - <xref:str>
  - name: authentication_record
    description: <xref:azure.identity.AuthenticationRecord> returned by <xref:azure.identity.authenticate>
    types:
    - <xref:azure.identity.AuthenticationRecord>
  - name: disable_automatic_authentication
    description: 'if True, <xref:azure.identity.get_token> will raise

      <xref:azure.identity.AuthenticationRequiredError> when user interaction is required
      to acquire a token. Defaults to False.'
    types:
    - <xref:bool>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: timeout
    description: seconds to wait for the user to complete authentication. Defaults
      to 300 (5 minutes).
    types:
    - <xref:int>
  - name: allow_broker
    description: 'Brokers provide single sign-on, device identification, and application
      identification

      verification. If this parameter is set to True, the broker will be used when
      possible. Defaults to False.

      Check [https://learn.microsoft.com/azure/active-directory/develop/scenario-desktop-acquire-token-wam](https://learn.microsoft.com/azure/active-directory/develop/scenario-desktop-acquire-token-wam)

      for more WAM information.'
    types:
    - <xref:bool>
  - name: parent_window_handle
    description: 'OPTIONAL. If your app is a GUI app running on modern Windows system,

      and your app opts in to use broker, you are recommended to also provide its
      window handle, so that the

      sign in UI window will properly pop up on top of your window.'
    types:
    - <xref:int>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
examples:
- "Create an InteractiveBrowserCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  80\\\\azure-identity-1.14.0b2\\\\samples\\\\credential_creation_code_snippets.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity\
  \ import InteractiveBrowserCredential\n\n   credential = InteractiveBrowserCredential(\n\
  \       client_id=\"<client_id>\",\n   )\n\n   ````\n"
