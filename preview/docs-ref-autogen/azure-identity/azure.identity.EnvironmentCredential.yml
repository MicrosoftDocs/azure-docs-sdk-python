### YamlMime:PythonClass
uid: azure.identity.EnvironmentCredential
name: EnvironmentCredential
fullName: azure.identity.EnvironmentCredential
module: azure.identity
inheritances:
- builtins.object
summary: "A credential configured by environment variables.\n\nThis credential is\
  \ capable of authenticating as a service principal using a client secret or a certificate,\
  \ or as\na user with a username and password. Configuration is attempted in this\
  \ order, using these environment variables:\n\nService principal with secret:\n\
  \   * **AZURE_TENANT_ID**: ID of the service principal's tenant. Also called its\
  \ 'directory' ID. \n\n   * **AZURE_CLIENT_ID**: the service principal's client ID\
  \ \n\n   * **AZURE_CLIENT_SECRET**: one of the service principal's client secrets\
  \ \n\n   * **AZURE_AUTHORITY_HOST**: authority of an Azure Active Directory endpoint,\
  \ for example \"login.microsoftonline.com\", the authority for Azure Public Cloud,\
  \ which is the default when no value is given. \n\nService principal with certificate:\n\
  \   * **AZURE_TENANT_ID**: ID of the service principal's tenant. Also called its\
  \ 'directory' ID. \n\n   * **AZURE_CLIENT_ID**: the service principal's client ID\
  \ \n\n   * **AZURE_CLIENT_CERTIFICATE_PATH**: path to a PEM or PKCS12 certificate\
  \ file including the private key. \n\n   * **AZURE_CLIENT_CERTIFICATE_PASSWORD**:\
  \ (optional) password of the certificate file, if any. \n\n   * **AZURE_AUTHORITY_HOST**:\
  \ authority of an Azure Active Directory endpoint, for example \"login.microsoftonline.com\"\
  , the authority for Azure Public Cloud, which is the default when no value is given.\
  \ \n\nUser with username and password:\n   * **AZURE_CLIENT_ID**: the application's\
  \ client ID \n\n   * **AZURE_USERNAME**: a username (usually an email address) \n\
  \n   * **AZURE_PASSWORD**: that user's password \n\n   * **AZURE_TENANT_ID**: (optional)\
  \ ID of the service principal's tenant. Also called its 'directory' ID. If not provided,\
  \ defaults to the 'organizations' tenant, which supports only Azure Active Directory\
  \ work or school accounts. \n\n   * **AZURE_AUTHORITY_HOST**: authority of an Azure\
  \ Active Directory endpoint, for example \"login.microsoftonline.com\", the authority\
  \ for Azure Public Cloud, which is the default when no value is given."
constructor:
  syntax: 'EnvironmentCredential(**kwargs: Any)'
methods:
- uid: azure.identity.EnvironmentCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: close() -> None
- uid: azure.identity.EnvironmentCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc](https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc).'
    isRequired: true
    types:
    - <xref:azure.identity.str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: environment variable configuration is incomplete
