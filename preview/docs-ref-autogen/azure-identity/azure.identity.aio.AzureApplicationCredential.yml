### YamlMime:PythonClass
uid: azure.identity.aio.AzureApplicationCredential
name: AzureApplicationCredential
fullName: azure.identity.aio.AzureApplicationCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._credentials.chained.ChainedTokenCredential
summary: "A credential for Azure Active Directory applications.\n\nThis credential\
  \ is designed for applications deployed to Azure (<xref:azure.identity.aio.DefaultAzureCredential>\n\
  is better suited to local development). It authenticates service principals and\
  \ managed identities.\n\nFor service principal authentication, set these environment\
  \ variables to identify a principal:\n\n   * **AZURE_TENANT_ID**: ID of the service\
  \ principal's tenant. Also called its \"directory\" ID. \n\n   * **AZURE_CLIENT_ID**:\
  \ the service principal's client ID \n\nAnd one of these to authenticate that principal:\n\
  \n   * **AZURE_CLIENT_SECRET**: one of the service principal's client secrets \n\
  \n   **or**\n\n   * **AZURE_CLIENT_CERTIFICATE_PATH**: path to a PEM-encoded certificate\
  \ file including the private key. The certificate must not be password-protected.\
  \ \n\nSee [Azure CLI documentation](https://docs.microsoft.com/cli/azure/create-an-azure-service-principal-azure-cli)\n\
  for more information about creating and managing service principals.\n\nWhen this\
  \ environment configuration is incomplete, the credential will attempt to authenticate\
  \ a managed identity.\nSee [Azure Active Directory documentation](https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview)\
  \ for an overview of\nmanaged identities."
constructor:
  syntax: 'AzureApplicationCredential(**kwargs: Any) -> None'
  parameters:
  - name: allow_multitenant_authentication
    description: 'when True, enables the credential to acquire tokens from any tenant

      the application or user is registered in. When False, which is the default,
      the credential will acquire tokens

      only from the tenant specified by **AZURE_TENANT_ID**. This argument doesn''t
      apply to managed identity

      authentication.'
    types:
    - <xref:bool>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud, which is the default when no value is
      given for this keyword argument or

      environment variable AZURE_AUTHORITY_HOST. <xref:azure.identity.AzureAuthorityHosts>
      defines authorities for

      other clouds. Authority configuration applies only to service principal authentication.'
    types:
    - <xref:str>
  - name: managed_identity_client_id
    description: 'The client ID of a user-assigned managed identity. Defaults to the
      value

      of the environment variable AZURE_CLIENT_ID, if any. If not specified, a system-assigned
      identity will be used.'
    types:
    - <xref:str>
methods:
- uid: azure.identity.aio.AzureApplicationCredential.get_token
  name: get_token
  summary: 'Asynchronously request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - <xref:str>
  exceptions:
  - description: 'authentication failed. The exception has a

      *message* attribute listing each authentication attempt and its error message.'
    type: azure.core.exceptions.ClientAuthenticationError
