### YamlMime:PythonClass
uid: azure.identity.aio.ChainedTokenCredential
name: ChainedTokenCredential
fullName: azure.identity.aio.ChainedTokenCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
summary: 'A sequence of credentials that is itself a credential.


  Its <xref:azure.identity.aio.ChainedTokenCredential.get_token> method calls `get_token`
  on each credential in the sequence, in order, returning the first

  valid token received.'
constructor:
  syntax: 'ChainedTokenCredential(*credentials: AsyncTokenCredential)'
  parameters:
  - name: credentials
    description: credential instances to form the chain
    isRequired: true
    types:
    - <xref:azure.core.credentials.AsyncTokenCredential>
methods:
- uid: azure.identity.aio.ChainedTokenCredential.close
  name: close
  summary: Close the transport sessions of all credentials in the chain.
  signature: async close() -> None
- uid: azure.identity.aio.ChainedTokenCredential.get_token
  name: get_token
  summary: 'Asynchronously request a token from each credential, in order, returning
    the first token received.


    If no credential provides a token, raises <xref:azure.core.exceptions.ClientAuthenticationError>

    with an error message from each credential.


    This method is called automatically by Azure SDK clients.'
  signature: 'async get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc](https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc).'
    isRequired: true
    types:
    - <xref:azure.identity.aio.str>
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
    description: no credential in the chain provided a token
