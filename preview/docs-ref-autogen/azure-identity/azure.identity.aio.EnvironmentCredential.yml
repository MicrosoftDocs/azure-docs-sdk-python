### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.aio.EnvironmentCredential.close
  - azure.identity.aio.EnvironmentCredential.get_token
  class: azure.identity.aio.EnvironmentCredential
  fullName: azure.identity.aio.EnvironmentCredential
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    type: azure.identity.aio._internal.AsyncContextManager
  langs:
  - python
  module: azure.identity.aio
  name: EnvironmentCredential
  summary: "A credential configured by environment variables.\n\nThis credential is\
    \ capable of authenticating as a service principal using a client secret or a\
    \ certificate, or as\na user with a username and password. Configuration is attempted\
    \ in this order, using these environment variables:\n\nService principal with\
    \ secret:\n   * **AZURE_TENANT_ID**: ID of the service principal's tenant. Also\
    \ called its 'directory' ID. \n\n   * **AZURE_CLIENT_ID**: the service principal's\
    \ client ID \n\n   * **AZURE_CLIENT_SECRET**: one of the service principal's client\
    \ secrets \n\nService principal with certificate:\n   * **AZURE_TENANT_ID**: ID\
    \ of the service principal's tenant. Also called its 'directory' ID. \n\n   *\
    \ **AZURE_CLIENT_ID**: the service principal's client ID \n\n   * **AZURE_CLIENT_CERTIFICATE_PATH**:\
    \ path to a PEM-encoded certificate file including the private key. The certificate\
    \ must not be password-protected."
  syntax: {}
  type: class
  uid: azure.identity.aio.EnvironmentCredential
- class: azure.identity.aio.EnvironmentCredential
  fullName: azure.identity.aio.EnvironmentCredential.close
  langs:
  - python
  module: azure.identity.aio
  name: close()
  namewithoutparameters: close
  summary: Close the credential's transport session.
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.identity.aio.EnvironmentCredential.close
- class: azure.identity.aio.EnvironmentCredential
  exceptions:
  - description: environment variable configuration is incomplete
    type: ~azure.identity.CredentialUnavailableError
  fullName: azure.identity.aio.EnvironmentCredential.get_token
  langs:
  - python
  module: azure.identity.aio
  name: get_token
  namewithoutparameters: get_token
  summary: 'Asynchronously request an access token for *scopes*.



    > [!NOTE]

    > This method is called by Azure SDK clients. It isn''t intended for use in application
    code.

    >'
  syntax:
    parameters:
    - description: desired scopes for the access token. This method requires at least
        one scope.
      id: scopes
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.core.credentials.AccessToken
  type: method
  uid: azure.identity.aio.EnvironmentCredential.get_token
references:
- fullName: azure.identity.aio.EnvironmentCredential.close
  isExternal: false
  name: close()
  parent: azure.identity.aio.EnvironmentCredential
  uid: azure.identity.aio.EnvironmentCredential.close
- fullName: azure.identity.aio.EnvironmentCredential.get_token
  isExternal: false
  name: get_token
  parent: azure.identity.aio.EnvironmentCredential
  uid: azure.identity.aio.EnvironmentCredential.get_token
