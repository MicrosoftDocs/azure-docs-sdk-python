### YamlMime:PythonClass
uid: azure.identity.aio.SharedTokenCacheCredential
name: SharedTokenCacheCredential
fullName: azure.identity.aio.SharedTokenCacheCredential
module: azure.identity.aio
inheritances:
- azure.identity._internal.shared_token_cache.SharedTokenCacheBase
- azure.identity.aio._internal.AsyncContextManager
summary: Authenticates using tokens in the local cache shared between Microsoft applications.
constructor:
  syntax: 'SharedTokenCacheCredential(username: str | None = None, *, authority: str
    | None = None, tenant_id: str | None = None, **kwargs: Any)'
  parameters:
  - name: username
    description: 'Username (typically an email address) of the user to authenticate
      as. This is required because the local cache

      may contain tokens for multiple identities.'
    defaultValue: None
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'an Azure Active Directory tenant ID. Used to select an account when
      the cache contains

      tokens for multiple identities.'
    types:
    - <xref:str>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If not provided, the
      credential

      will use the persistent cache shared by Microsoft development applications'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
methods:
- uid: azure.identity.aio.SharedTokenCacheCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: async close() -> None
- uid: azure.identity.aio.SharedTokenCacheCredential.get_token
  name: get_token
  summary: 'Get an access token for *scopes* from the shared cache.


    If no access token is cached, attempt to acquire one using a cached refresh token.


    This method is called automatically by Azure SDK clients.'
  signature: 'async get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc](https://learn.microsoft.com/azure/active-directory/develop/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the cache is unavailable or contains insufficient user

      information'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
      Any error response from Azure Active Directory is available as the error's `response`
      attribute.
