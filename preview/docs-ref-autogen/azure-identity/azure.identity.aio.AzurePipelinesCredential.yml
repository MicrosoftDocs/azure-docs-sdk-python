### YamlMime:PythonClass
uid: azure.identity.aio.AzurePipelinesCredential
name: AzurePipelinesCredential
fullName: azure.identity.aio.AzurePipelinesCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
summary: 'Authenticates using Microsoft Entra Workload ID in Azure Pipelines.


  This credential enables authentication in Azure Pipelines using workload identity
  federation for Azure service

  connections.'
constructor:
  syntax: 'AzurePipelinesCredential(*, tenant_id: str, client_id: str, service_connection_id:
    str, system_access_token: str, **kwargs: Any)'
  keywordOnlyParameters:
  - name: tenant_id
    description: The tenant ID for the service connection. Required.
    types:
    - <xref:str>
  - name: client_id
    description: The client ID for the service connection. Required.
    types:
    - <xref:str>
  - name: service_connection_id
    description: 'The service connection ID for the service connection associated
      with the

      pipeline. From the service connection''s configuration page URL in the Azure
      DevOps web portal, the ID

      is the value of the "resourceId" query parameter. Required.'
    types:
    - <xref:str>
  - name: system_access_token
    description: 'The pipeline''s System.AccessToken value. It is recommended to assign
      the value

      of System.AccessToken to a secure variable in the Azure Pipelines environment.
      See

      [https://learn.microsoft.com/azure/devops/pipelines/build/variables#systemaccesstoken](https://learn.microsoft.com/azure/devops/pipelines/build/variables#systemaccesstoken)
      for more info. Required.'
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of a Microsoft Entra endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:typing.List>[<xref:str>]
examples:
- "Create an AzurePipelinesCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"C:\\\\hostedtoolcache\\\\windows\\\\Python\\\
  \\3.11.9\\\\x64\\\\Lib\\\\site-packages\\\\py2docfx\\\\dist_temp\\\\41\\\\azure-identity-1.18.0b2\\\
  \\samples\\\\credential_creation_code_snippets.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   import os\n   from azure.identity.aio\
  \ import AzurePipelinesCredential\n\n   credential = AzurePipelinesCredential(\n\
  \       system_access_token=os.environ[\"SYSTEM_ACCESSTOKEN\"],\n       tenant_id=\"\
  <tenant_id>\",\n       client_id=\"<client_id>\",\n       service_connection_id=\"\
  <service_connection_id>\",\n   )\n\n   ````\n"
methods:
- uid: azure.identity.aio.AzurePipelinesCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: async close() -> None
- uid: azure.identity.aio.AzurePipelinesCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'async get_token(*scopes: str, claims: str | None = None, tenant_id:
    str | None = None, enable_cae: bool = False, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: 'desired scopes for the access token. This method requires at least
      one scope.

      For more information about scopes, see

      [https://learn.microsoft.com/entra/identity-platform/scopes-oidc](https://learn.microsoft.com/entra/identity-platform/scopes-oidc).'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure.'
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  - name: enable_cae
    description: 'indicates whether to enable Continuous Access Evaluation (CAE) for
      the requested

      token. Defaults to False.'
    types:
    - <xref:bool>
  return:
    description: An access token with the desired scopes.
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential is unable to attempt authentication because it lacks

      required data, state, or platform support'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
