### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.DefaultAzureCredential.get_token
  class: azure.identity.DefaultAzureCredential
  fullName: azure.identity.DefaultAzureCredential
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.identity._credentials.chained.ChainedTokenCredential
  langs:
  - python
  module: azure.identity
  name: DefaultAzureCredential
  summary: "A default credential capable of handling most Azure SDK authentication\
    \ scenarios.\n\nThe identity it uses depends on the environment. When an access\
    \ token is needed, it requests one using these\nidentities in turn, stopping when\
    \ one provides a token:\n\n1. A service principal configured by environment variables.\
    \ See <xref:azure.identity.EnvironmentCredential> for more details. \n\n2. An\
    \ Azure managed identity. See <xref:azure.identity.ManagedIdentityCredential>\
    \ for more details. \n\n3. On Windows only: a user who has signed in with a Microsoft\
    \ application, such as Visual Studio. If multiple identities are in the cache,\
    \ then the value of  the environment variable `AZURE_USERNAME` is used to select\
    \ which identity to use. See <xref:azure.identity.SharedTokenCacheCredential>\
    \ for more details. \n\n4. The user currently signed in to Visual Studio Code.\
    \ \n\n5. The identity currently logged in to the Azure CLI. \n\nThis default behavior\
    \ is configurable with keyword arguments."
  syntax:
    content: DefaultAzureCredential(**kwargs)
    parameters:
    - description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

        the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

        defines authorities for other clouds. Managed identities ignore this because
        they reside in a single cloud.'
      id: authority
      type:
      - str
    - description: Whether to exclude the Azure CLI from the credential. Defaults
        to **False**.
      id: exclude_cli_credential
      type:
      - bool
    - description: 'Whether to exclude a service principal configured by environment

        variables from the credential. Defaults to **False**.'
      id: exclude_environment_credential
      type:
      - bool
    - description: 'Whether to exclude managed identity from the credential.

        Defaults to **False**.'
      id: exclude_managed_identity_credential
      type:
      - bool
    - description: 'Whether to exclude stored credential from VS Code.

        Defaults to **False**.'
      id: exclude_visual_studio_code_credential
      type:
      - bool
    - description: 'Whether to exclude the shared token cache. Defaults to

        **False**.'
      id: exclude_shared_token_cache_credential
      type:
      - bool
    - description: 'Whether to exclude interactive browser authentication (see

        <xref:azure.identity.InteractiveBrowserCredential>). Defaults to **True**.'
      id: exclude_interactive_browser_credential
      type:
      - bool
    - description: 'Tenant ID to use when authenticating a user through

        <xref:azure.identity.InteractiveBrowserCredential>. Defaults to the value
        of environment variable

        AZURE_TENANT_ID, if any. If unspecified, users will authenticate in their
        home tenants.'
      id: interactive_browser_tenant_id
      type:
      - str
    - description: 'Preferred username for <xref:azure.identity.SharedTokenCacheCredential>.

        Defaults to the value of environment variable AZURE_USERNAME, if any.'
      id: shared_cache_username
      type:
      - str
    - description: 'Preferred tenant for <xref:azure.identity.SharedTokenCacheCredential>.

        Defaults to the value of environment variable AZURE_TENANT_ID, if any.'
      id: shared_cache_tenant_id
      type:
      - str
    - description: 'Tenant ID to use when authenticating with

        <xref:azure.identity.VSCodeCredential>.'
      id: visual_studio_code_tenant_id
      type:
      - str
  type: class
  uid: azure.identity.DefaultAzureCredential
- class: azure.identity.DefaultAzureCredential
  exceptions:
  - description: 'authentication failed. The exception has a

      *message* attribute listing each authentication attempt and its error message.'
    type: ~azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.DefaultAzureCredential.get_token
  langs:
  - python
  module: azure.identity
  name: get_token(*scopes, **kwargs)
  namewithoutparameters: get_token
  summary: 'Request an access token for *scopes*.



    > [!NOTE]

    > This method is called by Azure SDK clients. It isn''t intended for use in application
    code.

    >'
  syntax:
    content: get_token(*scopes, **kwargs)
    parameters:
    - description: desired scopes for the access token. This method requires at least
        one scope.
      id: scopes
      isRequired: true
      type:
      - str
  type: method
  uid: azure.identity.DefaultAzureCredential.get_token
references:
- fullName: azure.identity.DefaultAzureCredential.get_token
  isExternal: false
  name: get_token(*scopes, **kwargs)
  parent: azure.identity.DefaultAzureCredential
  uid: azure.identity.DefaultAzureCredential.get_token
