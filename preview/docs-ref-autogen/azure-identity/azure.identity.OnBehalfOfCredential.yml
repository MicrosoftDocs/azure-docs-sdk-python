### YamlMime:PythonClass
uid: azure.identity.OnBehalfOfCredential
name: OnBehalfOfCredential
fullName: azure.identity.OnBehalfOfCredential
module: azure.identity
inheritances:
- azure.identity._internal.msal_credentials.MsalCredential
- azure.identity._internal.get_token_mixin.GetTokenMixin
summary: 'Authenticates a service principal via the on-behalf-of flow.


  This flow is typically used by middle-tier services that authorize requests to other
  services with a delegated

  user identity. Because this is not an interactive authentication flow, an application
  using it must have admin

  consent for any delegated permissions before requesting tokens for them. See [Azure
  Active Directory documentation](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow)
  for a more detailed

  description of the on-behalf-of flow.'
constructor:
  syntax: 'OnBehalfOfCredential(tenant_id: str, client_id: str, **kwargs: Any)'
  parameters:
  - name: tenant_id
    description: ID of the service principal's tenant. Also called its "directory"
      ID.
    isRequired: true
    types:
    - <xref:str>
  - name: client_id
    description: The service principal's client ID
    isRequired: true
    types:
    - <xref:str>
  - name: client_secret
    description: 'Optional. A client secret to authenticate the service principal.

      Either **client_secret** or **client_certificate** must be provided.'
    types:
    - <xref:str>
  - name: client_certificate
    description: 'Optional. The bytes of a certificate in PEM or PKCS12 format including

      the private key to authenticate the service principal. Either **client_secret**
      or **client_certificate** must

      be provided.'
    types:
    - <xref:bytes>
  - name: user_assertion
    description: 'Required. The access token the credential will use as the user assertion
      when

      requesting on-behalf-of tokens'
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: password
    description: 'A certificate password. Used only when **client_certificate** is
      provided. If this value

      is a unicode string, it will be encoded as UTF-8. If the certificate requires
      a different encoding, pass

      appropriately encoded bytes instead.'
    types:
    - <xref:str>
    - <xref:bytes>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:List>[<xref:str>]
examples:
- "Create an OnBehalfOfCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  80\\\\azure-identity-1.14.0b2\\\\samples\\\\credential_creation_code_snippets.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity\
  \ import OnBehalfOfCredential\n\n   credential = OnBehalfOfCredential(\n       tenant_id=\"\
  <tenant_id>\",\n       client_id=\"<client_id>\",\n       client_secret=\"<client_secret>\"\
  ,\n       user_assertion=\"<access_token>\",\n   )\n\n   ````\n"
