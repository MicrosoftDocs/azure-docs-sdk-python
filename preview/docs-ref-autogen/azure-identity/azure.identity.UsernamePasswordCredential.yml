### YamlMime:PythonClass
uid: azure.identity.UsernamePasswordCredential
name: UsernamePasswordCredential
fullName: azure.identity.UsernamePasswordCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Authenticates a user with a username and password.


  In general, Microsoft doesn''t recommend this kind of authentication, because it''s
  less secure than other

  authentication flows.


  Authentication with this credential is not interactive, so it is **not compatible
  with any form of

  multi-factor authentication or consent prompting**. The application must already
  have consent from the user or

  a directory admin.


  This credential can only authenticate work and school accounts; Microsoft accounts
  are not supported.

  See [Azure Active Directory documentation](https://docs.microsoft.com/azure/active-directory/fundamentals/sign-up-organization)
  for more information about

  account types.'
constructor:
  syntax: 'UsernamePasswordCredential(client_id: str, username: str, password: str,
    **kwargs: Any)'
  parameters:
  - name: client_id
    description: The application's client ID
    isRequired: true
    types:
    - <xref:str>
  - name: username
    description: The user's username (usually an email address)
    isRequired: true
    types:
    - <xref:str>
  - name: password
    description: The user's password
    isRequired: true
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'Tenant ID or a domain associated with a tenant. If not provided,
      defaults to the

      "organizations" tenant, which supports only Azure Active Directory work or school
      accounts.'
    types:
    - <xref:str>
  - name: cache_persistence_options
    description: 'Configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: allow_broker
    description: 'Brokers provide single sign-on, device identification, and application
      identification

      verification. If this parameter is set to True, the broker will be used when
      possible. Defaults to False.

      Check [https://learn.microsoft.com/azure/active-directory/develop/scenario-desktop-acquire-token-wam](https://learn.microsoft.com/azure/active-directory/develop/scenario-desktop-acquire-token-wam)

      for more WAM information.'
    types:
    - <xref:bool>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
  - name: additionally_allowed_tenants
    description: 'Specifies tenants in addition to the specified "tenant_id"

      for which the credential may acquire tokens. Add the wildcard value "*" to allow
      the credential to

      acquire tokens for any tenant the application can access.'
    types:
    - <xref:List>[<xref:str>]
examples:
- "Create a UsernamePasswordCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  80\\\\azure-identity-1.14.0b2\\\\samples\\\\credential_creation_code_snippets.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity\
  \ import UsernamePasswordCredential\n\n   credential = UsernamePasswordCredential(\n\
  \       client_id=\"<client_id>\",\n       username=\"<username>\",\n       password=\"\
  <password>\",\n   )\n\n   ````\n"
