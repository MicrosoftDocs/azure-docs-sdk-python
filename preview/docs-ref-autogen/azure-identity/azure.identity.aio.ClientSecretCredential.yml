### YamlMime:PythonClass
uid: azure.identity.aio.ClientSecretCredential
name: ClientSecretCredential
fullName: azure.identity.aio.ClientSecretCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
- azure.identity.aio._internal.get_token_mixin.GetTokenMixin
summary: Authenticates as a service principal using a client secret.
constructor:
  syntax: 'ClientSecretCredential(tenant_id: str, client_id: str, client_secret: str,
    **kwargs: Any) -> None'
  parameters:
  - name: tenant_id
    description: ID of the service principal's tenant. Also called its 'directory'
      ID.
    isRequired: true
    types:
    - <xref:str>
  - name: client_id
    description: the service principal's client ID
    isRequired: true
    types:
    - <xref:str>
  - name: client_secret
    description: one of the service principal's client secrets
    isRequired: true
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example ''login.microsoftonline.com'',

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: allow_multitenant_authentication
    description: 'when True, enables the credential to acquire tokens from any tenant

      the application is registered in. When False, which is the default, the credential
      will acquire tokens only from

      the tenant specified by **tenant_id**.'
    types:
    - <xref:bool>
methods:
- uid: azure.identity.aio.ClientSecretCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: close()
