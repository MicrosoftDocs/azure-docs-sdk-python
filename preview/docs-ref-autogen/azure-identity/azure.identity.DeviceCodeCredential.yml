### YamlMime:PythonClass
uid: azure.identity.DeviceCodeCredential
name: DeviceCodeCredential
fullName: azure.identity.DeviceCodeCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Authenticates users through the device code flow.


  When <xref:azure.identity.get_token> is called, this credential acquires a verification
  URL and code from Azure Active Directory.

  A user must browse to the URL, enter the code, and authenticate with Azure Active
  Directory. If the user

  authenticates successfully, the credential receives an access token.


  This credential is primarily useful for authenticating a user in an environment
  without a web browser, such as an

  SSH session. If a web browser is available, <xref:azure.identity.InteractiveBrowserCredential>
  is more

  convenient because it automatically opens a browser to the login page.'
constructor:
  syntax: 'DeviceCodeCredential(client_id: str = ''04b07795-8ddb-461a-bbee-02f9e1bf7b46'',
    *, timeout: int | None = None, prompt_callback: Callable[[str, str, datetime],
    None] | None = None, **kwargs: Any)'
  parameters:
  - name: client_id
    description: 'client ID of the application users will authenticate to. When not
      specified users will

      authenticate to an Azure development application.'
    defaultValue: 04b07795-8ddb-461a-bbee-02f9e1bf7b46
    types:
    - <xref:str>
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'an Azure Active Directory tenant ID. Defaults to the "organizations"
      tenant, which can

      authenticate work or school accounts. **Required for single-tenant applications.**'
    types:
    - <xref:str>
  - name: timeout
    description: 'seconds to wait for the user to authenticate. Defaults to the validity
      period of the

      device code as set by Azure Active Directory, which also prevails when **timeout**
      is longer.'
    types:
    - <xref:int>
  - name: prompt_callback
    description: "A callback enabling control of how authentication\ninstructions\
      \ are presented. Must accept arguments (`verification_uri`, `user_code`, `expires_on`):\n\
      \n* `verification_uri` (str) the URL the user must visit \n\n* `user_code` (str)\
      \ the code the user must enter there \n\n* `expires_on` (datetime.datetime)\
      \ the UTC time at which the code will expire \n\nIf this argument isn't provided,\
      \ the credential will print instructions to stdout."
    types:
    - <xref:Callable>[<xref:str>, <xref:str>, <xref:datetime.datetime>]
  - name: authentication_record
    description: <xref:azure.identity.AuthenticationRecord> returned by <xref:azure.identity.authenticate>
    types:
    - <xref:azure.identity.AuthenticationRecord>
  - name: disable_automatic_authentication
    description: 'if True, <xref:azure.identity.get_token> will raise

      <xref:azure.identity.AuthenticationRequiredError> when user interaction is required
      to acquire a token. Defaults to False.'
    types:
    - <xref:bool>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
examples:
- "Create a DeviceCodeCredential.<!--[!code-python[Main](les\\credential_creation_code_snippets.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  80\\\\azure-identity-1.14.0b2\\\\samples\\\\credential_creation_code_snippets.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.identity\
  \ import DeviceCodeCredential\n\n   credential = DeviceCodeCredential()\n\n   ````\n"
