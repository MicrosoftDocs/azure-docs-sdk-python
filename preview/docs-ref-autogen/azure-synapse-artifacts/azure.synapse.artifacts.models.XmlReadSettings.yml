### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.XmlReadSettings
name: XmlReadSettings
fullName: azure.synapse.artifacts.models.XmlReadSettings
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.FormatReadSettings
summary: 'Xml read settings.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'XmlReadSettings(*, additional_properties: Dict[str, MutableMapping[str,
    Any]] | None = None, compression_properties: _models.CompressionReadSettings |
    None = None, validation_mode: MutableMapping[str, Any] | None = None, detect_data_type:
    MutableMapping[str, Any] | None = None, namespaces: MutableMapping[str, Any] |
    None = None, namespace_prefixes: MutableMapping[str, Any] | None = None, **kwargs:
    Any)'
  keywordOnlyParameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:JSON>]
  - name: compression_properties
    description: Compression settings.
    types:
    - <xref:azure.synapse.artifacts.models.CompressionReadSettings>
  - name: validation_mode
    description: 'Indicates what validation method is used when reading the xml files.

      Allowed values: ''none'', ''xsd'', or ''dtd''. Type: string (or Expression with
      resultType string).'
    types:
    - <xref:JSON>
  - name: detect_data_type
    description: 'Indicates whether type detection is enabled when reading the xml

      files. Type: boolean (or Expression with resultType boolean).'
    types:
    - <xref:JSON>
  - name: namespaces
    description: 'Indicates whether namespace is enabled when reading the xml files.
      Type:

      boolean (or Expression with resultType boolean).'
    types:
    - <xref:JSON>
  - name: namespace_prefixes
    description: 'Namespace uri to prefix mappings to override the prefixes in

      column names when namespace is enabled, if no prefix is defined for a namespace
      uri, the prefix

      of xml element/attribute name in the xml data file will be used. Example:

      "{"[http://www.example.com/xml](http://www.example.com/xml)":"prefix"}" Type:
      object (or Expression with resultType object).'
    types:
    - <xref:JSON>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: The read setting type. Required.
  name: type
  types:
  - <xref:str>
- description: Compression settings.
  name: compression_properties
  types:
  - <xref:azure.synapse.artifacts.models.CompressionReadSettings>
- description: 'Indicates what validation method is used when reading the xml files.

    Allowed values: ''none'', ''xsd'', or ''dtd''. Type: string (or Expression with
    resultType string).'
  name: validation_mode
  types:
  - <xref:JSON>
- description: 'Indicates whether type detection is enabled when reading the xml files.

    Type: boolean (or Expression with resultType boolean).'
  name: detect_data_type
  types:
  - <xref:JSON>
- description: 'Indicates whether namespace is enabled when reading the xml files.
    Type:

    boolean (or Expression with resultType boolean).'
  name: namespaces
  types:
  - <xref:JSON>
- description: 'Namespace uri to prefix mappings to override the prefixes in column

    names when namespace is enabled, if no prefix is defined for a namespace uri,
    the prefix of xml

    element/attribute name in the xml data file will be used. Example:

    "{"[http://www.example.com/xml](http://www.example.com/xml)":"prefix"}" Type:
    object (or Expression with resultType object).'
  name: namespace_prefixes
  types:
  - <xref:JSON>
methods:
- uid: azure.synapse.artifacts.models.XmlReadSettings.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.XmlReadSettings.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.XmlReadSettings.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.synapse.artifacts.models.XmlReadSettings.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.XmlReadSettings.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.synapse.artifacts.models.XmlReadSettings.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
