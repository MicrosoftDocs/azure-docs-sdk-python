### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.SqlServerLinkedService
name: SqlServerLinkedService
fullName: azure.synapse.artifacts.models.SqlServerLinkedService
module: azure.synapse.artifacts.models
summary: 'SQL Server linked service.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'SqlServerLinkedService(*, additional_properties: Dict[str, MutableMapping[str,
    Any]] | None = None, version: str | None = None, connect_via: _models.IntegrationRuntimeReference
    | None = None, description: str | None = None, parameters: Dict[str, _models.ParameterSpecification]
    | None = None, annotations: List[MutableMapping[str, Any]] | None = None, server:
    MutableMapping[str, Any] | None = None, database: MutableMapping[str, Any] | None
    = None, encrypt: MutableMapping[str, Any] | None = None, trust_server_certificate:
    MutableMapping[str, Any] | None = None, host_name_in_certificate: MutableMapping[str,
    Any] | None = None, application_intent: MutableMapping[str, Any] | None = None,
    connect_timeout: MutableMapping[str, Any] | None = None, connect_retry_count:
    MutableMapping[str, Any] | None = None, connect_retry_interval: MutableMapping[str,
    Any] | None = None, load_balance_timeout: MutableMapping[str, Any] | None = None,
    command_timeout: MutableMapping[str, Any] | None = None, integrated_security:
    MutableMapping[str, Any] | None = None, failover_partner: MutableMapping[str,
    Any] | None = None, max_pool_size: MutableMapping[str, Any] | None = None, min_pool_size:
    MutableMapping[str, Any] | None = None, multiple_active_result_sets: MutableMapping[str,
    Any] | None = None, multi_subnet_failover: MutableMapping[str, Any] | None = None,
    packet_size: MutableMapping[str, Any] | None = None, pooling: MutableMapping[str,
    Any] | None = None, connection_string: MutableMapping[str, Any] | None = None,
    authentication_type: str | _models.SqlServerAuthenticationType | None = None,
    user_name: MutableMapping[str, Any] | None = None, password: _models.SecretBase
    | None = None, encrypted_credential: MutableMapping[str, Any] | None = None, always_encrypted_settings:
    _models.SqlAlwaysEncryptedProperties | None = None, credential: _models.CredentialReference
    | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:JSON>]
  - name: version
    description: Version of the linked service.
    defaultValue: None
    types:
    - <xref:str>
  - name: connect_via
    description: The integration runtime reference.
    defaultValue: None
    types:
    - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
  - name: description
    description: Linked service description.
    defaultValue: None
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for linked service.
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
  - name: annotations
    description: List of tags that can be used for describing the linked service.
    defaultValue: None
    types:
    - <xref:list>[<xref:JSON>]
  - name: server
    description: 'The name or network address of the instance of SQL Server to which
      to connect,

      used by recommended version. Type: string (or Expression with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: database
    description: 'The name of the database, used by recommended version. Type: string
      (or

      Expression with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: encrypt
    description: 'Indicate whether TLS encryption is required for all data sent between
      the

      client and server, used by recommended version. Possible values are true/yes/mandatory,

      false/no/optional and strict. Type: string (or Expression with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: trust_server_certificate
    description: 'Indicate whether the channel will be encrypted while

      bypassing walking the certificate chain to validate trust, used by recommended
      version. Type:

      Boolean (or Expression with resultType boolean).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: host_name_in_certificate
    description: 'The host name to use when validating the server certificate

      for the connection. When not specified, the server name from the Data Source
      is used for

      certificate validation, used by recommended version. Type: string (or Expression
      with

      resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: application_intent
    description: 'The application workload type when connecting to a server, used
      by

      recommended version. Possible values are ReadOnly and ReadWrite. Type: string
      (or Expression

      with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: connect_timeout
    description: 'The length of time (in seconds) to wait for a connection to the

      server before terminating the attempt and generating an error, used by recommended
      version.

      Type: integer (or Expression with resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: connect_retry_count
    description: 'The number of re-connections attempted after identifying that

      there was an idle connection failure, used by recommended version. This must
      be an integer

      between 0 and 255. Type: integer (or Expression with resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: connect_retry_interval
    description: 'The amount of time (in seconds) between each re-connection

      attempt after identifying that there was an idle connection failure, used by
      recommended

      version. This must be an integer between 1 and 60. Type: integer (or Expression
      with resultType

      integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: load_balance_timeout
    description: 'The minimum time, in seconds, for the connection to live in the

      connection pool before being destroyed, used by recommended version. Type: integer
      (or

      Expression with resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: command_timeout
    description: 'The default wait time (in seconds) before terminating the attempt
      to

      execute a command and generating an error, used by recommended version. Type:
      integer (or

      Expression with resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: integrated_security
    description: 'Indicate whether User ID and Password are specified in the

      connection (when false) or whether the current Windows account credentials are
      used for

      authentication (when true), used by recommended version. Type: Boolean (or Expression
      with

      resultType boolean).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: failover_partner
    description: 'The name or address of the partner server to connect to if the

      primary server is down, used by recommended version. Type: string (or Expression
      with

      resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: max_pool_size
    description: 'The maximum number of connections allowed in the connection pool
      for

      this specific connection string, used by recommended version. Type: integer
      (or Expression with

      resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: min_pool_size
    description: 'The minimum number of connections allowed in the connection pool
      for

      this specific connection string, used by recommended version. Type: integer
      (or Expression with

      resultType integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: multiple_active_result_sets
    description: 'When true, an application can maintain multiple active

      result sets (MARS). When false, an application must process or cancel all result
      sets from one

      batch before it can execute any other batch on that connection. Type: Boolean
      (or Expression

      with resultType boolean).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: multi_subnet_failover
    description: 'If your application is connecting to an AlwaysOn availability

      group (AG) on different subnets, setting MultiSubnetFailover=true provides faster
      detection of

      and connection to the (currently) active server, used by recommended version.
      Type: Boolean (or

      Expression with resultType boolean).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: packet_size
    description: 'The size in bytes of the network packets used to communicate with
      an

      instance of server, used by recommended version. Type: integer (or Expression
      with resultType

      integer).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: pooling
    description: 'Indicate whether the connection will be pooled or explicitly opened
      every

      time that the connection is requested, used by recommended version. Type: Boolean
      (or

      Expression with resultType boolean).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: connection_string
    description: 'The connection string. Type: string, SecureString or

      AzureKeyVaultSecretReference.'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: authentication_type
    description: 'The type used for authentication. Type: string. Known values are:

      "SQL", "Windows", and "UserAssignedManagedIdentity".'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.SqlServerAuthenticationType>
  - name: user_name
    description: 'The on-premises Windows authentication user name. Type: string (or

      Expression with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: password
    description: The on-premises Windows authentication password.
    defaultValue: None
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: encrypted_credential
    description: 'The encrypted credential used for authentication. Credentials

      are encrypted using the integration runtime credential manager. Type: string
      (or Expression

      with resultType string).'
    defaultValue: None
    types:
    - <xref:JSON>
  - name: always_encrypted_settings
    description: Sql always encrypted properties.
    defaultValue: None
    types:
    - <xref:azure.synapse.artifacts.models.SqlAlwaysEncryptedProperties>
  - name: credential
    description: The credential reference containing authentication information.
    defaultValue: None
    types:
    - <xref:azure.synapse.artifacts.models.CredentialReference>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: Type of linked service. Required.
  name: type
  types:
  - <xref:str>
- description: Version of the linked service.
  name: version
  types:
  - <xref:str>
- description: The integration runtime reference.
  name: connect_via
  types:
  - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
- description: Linked service description.
  name: description
  types:
  - <xref:str>
- description: Parameters for linked service.
  name: parameters
  types:
  - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
- description: List of tags that can be used for describing the linked service.
  name: annotations
  types:
  - <xref:list>[<xref:JSON>]
- description: 'The name or network address of the instance of SQL Server to which
    to connect,

    used by recommended version. Type: string (or Expression with resultType string).'
  name: server
  types:
  - <xref:JSON>
- description: 'The name of the database, used by recommended version. Type: string
    (or

    Expression with resultType string).'
  name: database
  types:
  - <xref:JSON>
- description: 'Indicate whether TLS encryption is required for all data sent between
    the client

    and server, used by recommended version. Possible values are true/yes/mandatory,

    false/no/optional and strict. Type: string (or Expression with resultType string).'
  name: encrypt
  types:
  - <xref:JSON>
- description: 'Indicate whether the channel will be encrypted while bypassing

    walking the certificate chain to validate trust, used by recommended version.
    Type: Boolean (or

    Expression with resultType boolean).'
  name: trust_server_certificate
  types:
  - <xref:JSON>
- description: 'The host name to use when validating the server certificate for

    the connection. When not specified, the server name from the Data Source is used
    for

    certificate validation, used by recommended version. Type: string (or Expression
    with

    resultType string).'
  name: host_name_in_certificate
  types:
  - <xref:JSON>
- description: 'The application workload type when connecting to a server, used by

    recommended version. Possible values are ReadOnly and ReadWrite. Type: string
    (or Expression

    with resultType string).'
  name: application_intent
  types:
  - <xref:JSON>
- description: 'The length of time (in seconds) to wait for a connection to the server

    before terminating the attempt and generating an error, used by recommended version.
    Type:

    integer (or Expression with resultType integer).'
  name: connect_timeout
  types:
  - <xref:JSON>
- description: 'The number of re-connections attempted after identifying that there

    was an idle connection failure, used by recommended version. This must be an integer
    between 0

    and 255. Type: integer (or Expression with resultType integer).'
  name: connect_retry_count
  types:
  - <xref:JSON>
- description: 'The amount of time (in seconds) between each re-connection

    attempt after identifying that there was an idle connection failure, used by recommended

    version. This must be an integer between 1 and 60. Type: integer (or Expression
    with resultType

    integer).'
  name: connect_retry_interval
  types:
  - <xref:JSON>
- description: 'The minimum time, in seconds, for the connection to live in the

    connection pool before being destroyed, used by recommended version. Type: integer
    (or

    Expression with resultType integer).'
  name: load_balance_timeout
  types:
  - <xref:JSON>
- description: 'The default wait time (in seconds) before terminating the attempt
    to

    execute a command and generating an error, used by recommended version. Type:
    integer (or

    Expression with resultType integer).'
  name: command_timeout
  types:
  - <xref:JSON>
- description: 'Indicate whether User ID and Password are specified in the

    connection (when false) or whether the current Windows account credentials are
    used for

    authentication (when true), used by recommended version. Type: Boolean (or Expression
    with

    resultType boolean).'
  name: integrated_security
  types:
  - <xref:JSON>
- description: 'The name or address of the partner server to connect to if the primary

    server is down, used by recommended version. Type: string (or Expression with
    resultType

    string).'
  name: failover_partner
  types:
  - <xref:JSON>
- description: 'The maximum number of connections allowed in the connection pool for
    this

    specific connection string, used by recommended version. Type: integer (or Expression
    with

    resultType integer).'
  name: max_pool_size
  types:
  - <xref:JSON>
- description: 'The minimum number of connections allowed in the connection pool for
    this

    specific connection string, used by recommended version. Type: integer (or Expression
    with

    resultType integer).'
  name: min_pool_size
  types:
  - <xref:JSON>
- description: 'When true, an application can maintain multiple active

    result sets (MARS). When false, an application must process or cancel all result
    sets from one

    batch before it can execute any other batch on that connection. Type: Boolean
    (or Expression

    with resultType boolean).'
  name: multiple_active_result_sets
  types:
  - <xref:JSON>
- description: 'If your application is connecting to an AlwaysOn availability

    group (AG) on different subnets, setting MultiSubnetFailover=true provides faster
    detection of

    and connection to the (currently) active server, used by recommended version.
    Type: Boolean (or

    Expression with resultType boolean).'
  name: multi_subnet_failover
  types:
  - <xref:JSON>
- description: 'The size in bytes of the network packets used to communicate with
    an

    instance of server, used by recommended version. Type: integer (or Expression
    with resultType

    integer).'
  name: packet_size
  types:
  - <xref:JSON>
- description: 'Indicate whether the connection will be pooled or explicitly opened
    every time

    that the connection is requested, used by recommended version. Type: Boolean (or
    Expression

    with resultType boolean).'
  name: pooling
  types:
  - <xref:JSON>
- description: 'The connection string. Type: string, SecureString or

    AzureKeyVaultSecretReference.'
  name: connection_string
  types:
  - <xref:JSON>
- description: 'The type used for authentication. Type: string. Known values are:

    "SQL", "Windows", and "UserAssignedManagedIdentity".'
  name: authentication_type
  types:
  - <xref:str>
  - <xref:azure.synapse.artifacts.models.SqlServerAuthenticationType>
- description: 'The on-premises Windows authentication user name. Type: string (or
    Expression

    with resultType string).'
  name: user_name
  types:
  - <xref:JSON>
- description: The on-premises Windows authentication password.
  name: password
  types:
  - <xref:azure.synapse.artifacts.models.SecretBase>
- description: 'The encrypted credential used for authentication. Credentials are

    encrypted using the integration runtime credential manager. Type: string (or Expression
    with

    resultType string).'
  name: encrypted_credential
  types:
  - <xref:JSON>
- description: Sql always encrypted properties.
  name: always_encrypted_settings
  types:
  - <xref:azure.synapse.artifacts.models.SqlAlwaysEncryptedProperties>
- description: The credential reference containing authentication information.
  name: credential
  types:
  - <xref:azure.synapse.artifacts.models.CredentialReference>
methods:
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'True'
    types:
    - <xref:bool>
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError
    description: if something went wrong
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> Self'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: key_extractors
    description: A key extractor function.
    defaultValue: None
    types:
    - <xref:function>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
    types:
    - <xref:typing.Self>
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.synapse.artifacts.models.SqlServerLinkedService.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to server from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
