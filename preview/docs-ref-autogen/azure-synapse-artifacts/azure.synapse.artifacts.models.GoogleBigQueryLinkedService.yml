### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService
name: GoogleBigQueryLinkedService
fullName: azure.synapse.artifacts.models.GoogleBigQueryLinkedService
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.LinkedService
summary: 'Google BigQuery service linked service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'GoogleBigQueryLinkedService(*, project: MutableMapping[str, Any], authentication_type:
    str | _models.GoogleBigQueryAuthenticationType, additional_properties: Dict[str,
    MutableMapping[str, Any]] | None = None, connect_via: _models.IntegrationRuntimeReference
    | None = None, description: str | None = None, parameters: Dict[str, _models.ParameterSpecification]
    | None = None, annotations: List[MutableMapping[str, Any]] | None = None, additional_projects:
    MutableMapping[str, Any] | None = None, request_google_drive_scope: MutableMapping[str,
    Any] | None = None, refresh_token: _models.SecretBase | None = None, client_id:
    MutableMapping[str, Any] | None = None, client_secret: _models.SecretBase | None
    = None, email: MutableMapping[str, Any] | None = None, key_file_path: MutableMapping[str,
    Any] | None = None, trusted_cert_path: MutableMapping[str, Any] | None = None,
    use_system_trust_store: MutableMapping[str, Any] | None = None, encrypted_credential:
    MutableMapping[str, Any] | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:JSON>]
  - name: connect_via
    description: The integration runtime reference.
    types:
    - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
  - name: description
    description: Linked service description.
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for linked service.
    types:
    - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
  - name: annotations
    description: List of tags that can be used for describing the linked service.
    types:
    - <xref:list>[<xref:JSON>]
  - name: project
    description: The default BigQuery project to query against. Required.
    types:
    - <xref:JSON>
  - name: additional_projects
    description: A comma-separated list of public BigQuery projects to access.
    types:
    - <xref:JSON>
  - name: request_google_drive_scope
    description: 'Whether to request access to Google Drive. Allowing Google

      Drive access enables support for federated tables that combine BigQuery data
      with data from

      Google Drive. The default value is false.'
    types:
    - <xref:JSON>
  - name: authentication_type
    description: 'The OAuth 2.0 authentication mechanism used for authentication.

      ServiceAuthentication can only be used on self-hosted IR. Required. Known values
      are:

      "ServiceAuthentication" and "UserAuthentication".'
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.GoogleBigQueryAuthenticationType>
  - name: refresh_token
    description: 'The refresh token obtained from Google for authorizing access to

      BigQuery for UserAuthentication.'
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: client_id
    description: 'The client id of the google application used to acquire the refresh
      token.

      Type: string (or Expression with resultType string).'
    types:
    - <xref:JSON>
  - name: client_secret
    description: 'The client secret of the google application used to acquire the
      refresh

      token.'
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: email
    description: 'The service account email ID that is used for ServiceAuthentication
      and can

      only be used on self-hosted IR.'
    types:
    - <xref:JSON>
  - name: key_file_path
    description: 'The full path to the .p12 key file that is used to authenticate
      the

      service account email address and can only be used on self-hosted IR.'
    types:
    - <xref:JSON>
  - name: trusted_cert_path
    description: 'The full path of the .pem file containing trusted CA certificates

      for verifying the server when connecting over SSL. This property can only be
      set when using SSL

      on self-hosted IR. The default value is the cacerts.pem file installed with
      the IR.'
    types:
    - <xref:JSON>
  - name: use_system_trust_store
    description: 'Specifies whether to use a CA certificate from the system

      trust store or from a specified PEM file. The default value is false.'
    types:
    - <xref:JSON>
  - name: encrypted_credential
    description: 'The encrypted credential used for authentication. Credentials

      are encrypted using the integration runtime credential manager. Type: string
      (or Expression

      with resultType string).'
    types:
    - <xref:JSON>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: Type of linked service. Required.
  name: type
  types:
  - <xref:str>
- description: The integration runtime reference.
  name: connect_via
  types:
  - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
- description: Linked service description.
  name: description
  types:
  - <xref:str>
- description: Parameters for linked service.
  name: parameters
  types:
  - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
- description: List of tags that can be used for describing the linked service.
  name: annotations
  types:
  - <xref:list>[<xref:JSON>]
- description: The default BigQuery project to query against. Required.
  name: project
  types:
  - <xref:JSON>
- description: A comma-separated list of public BigQuery projects to access.
  name: additional_projects
  types:
  - <xref:JSON>
- description: 'Whether to request access to Google Drive. Allowing Google

    Drive access enables support for federated tables that combine BigQuery data with
    data from

    Google Drive. The default value is false.'
  name: request_google_drive_scope
  types:
  - <xref:JSON>
- description: 'The OAuth 2.0 authentication mechanism used for authentication.

    ServiceAuthentication can only be used on self-hosted IR. Required. Known values
    are:

    "ServiceAuthentication" and "UserAuthentication".'
  name: authentication_type
  types:
  - <xref:str>
  - <xref:azure.synapse.artifacts.models.GoogleBigQueryAuthenticationType>
- description: 'The refresh token obtained from Google for authorizing access to BigQuery

    for UserAuthentication.'
  name: refresh_token
  types:
  - <xref:azure.synapse.artifacts.models.SecretBase>
- description: 'The client id of the google application used to acquire the refresh
    token.

    Type: string (or Expression with resultType string).'
  name: client_id
  types:
  - <xref:JSON>
- description: 'The client secret of the google application used to acquire the refresh

    token.'
  name: client_secret
  types:
  - <xref:azure.synapse.artifacts.models.SecretBase>
- description: 'The service account email ID that is used for ServiceAuthentication
    and can only

    be used on self-hosted IR.'
  name: email
  types:
  - <xref:JSON>
- description: 'The full path to the .p12 key file that is used to authenticate the

    service account email address and can only be used on self-hosted IR.'
  name: key_file_path
  types:
  - <xref:JSON>
- description: 'The full path of the .pem file containing trusted CA certificates
    for

    verifying the server when connecting over SSL. This property can only be set when
    using SSL on

    self-hosted IR. The default value is the cacerts.pem file installed with the IR.'
  name: trusted_cert_path
  types:
  - <xref:JSON>
- description: 'Specifies whether to use a CA certificate from the system trust

    store or from a specified PEM file. The default value is false.'
  name: use_system_trust_store
  types:
  - <xref:JSON>
- description: 'The encrypted credential used for authentication. Credentials are

    encrypted using the integration runtime credential manager. Type: string (or Expression
    with

    resultType string).'
  name: encrypted_credential
  types:
  - <xref:JSON>
methods:
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.synapse.artifacts.models.GoogleBigQueryLinkedService.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
