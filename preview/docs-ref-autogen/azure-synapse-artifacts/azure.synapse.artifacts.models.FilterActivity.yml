### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.FilterActivity
name: FilterActivity
fullName: azure.synapse.artifacts.models.FilterActivity
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.ControlActivity
summary: 'Filter and return results from input array based on the conditions.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'FilterActivity(*, name: str, items: azure.synapse.artifacts.models._models_py3.Expression,
    condition: azure.synapse.artifacts.models._models_py3.Expression, additional_properties:
    Optional[Dict[str, Any]] = None, description: Optional[str] = None, depends_on:
    Optional[List[azure.synapse.artifacts.models._models_py3.ActivityDependency]]
    = None, user_properties: Optional[List[azure.synapse.artifacts.models._models_py3.UserProperty]]
    = None, **kwargs)'
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: Required. Activity name.
  name: name
  types:
  - <xref:str>
- description: Required. Type of activity.Constant filled by server.
  name: type
  types:
  - <xref:str>
- description: Activity description.
  name: description
  types:
  - <xref:str>
- description: Activity depends on condition.
  name: depends_on
  types:
  - <xref:list>[<xref:azure.synapse.artifacts.models.ActivityDependency>]
- description: Activity user properties.
  name: user_properties
  types:
  - <xref:list>[<xref:azure.synapse.artifacts.models.UserProperty>]
- description: Required. Input array on which filter should be applied.
  name: items
  types:
  - <xref:azure.synapse.artifacts.models.Expression>
- description: Required. Condition to be used for filtering the input.
  name: condition
  types:
  - <xref:azure.synapse.artifacts.models.Expression>
