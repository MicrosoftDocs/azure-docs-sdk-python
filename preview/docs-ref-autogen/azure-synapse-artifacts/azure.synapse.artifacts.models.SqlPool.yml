### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.SqlPool
name: SqlPool
fullName: azure.synapse.artifacts.models.SqlPool
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.TrackedResource
summary: 'A SQL Analytics pool.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SqlPool(*, location: str, tags: Dict[str, str] | None = None, sku: _models.Sku
    | None = None, max_size_bytes: int | None = None, collation: str | None = None,
    source_database_id: str | None = None, recoverable_database_id: str | None = None,
    provisioning_state: str | None = None, status: str | None = None, restore_point_in_time:
    str | None = None, create_mode: str | _models.CreateMode | None = None, creation_date:
    datetime | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: sku
    description: SQL pool SKU.
    types:
    - <xref:azure.synapse.artifacts.models.Sku>
  - name: max_size_bytes
    description: Maximum size in bytes.
    types:
    - <xref:int>
  - name: collation
    description: Collation mode.
    types:
    - <xref:str>
  - name: source_database_id
    description: Source database to create from.
    types:
    - <xref:str>
  - name: recoverable_database_id
    description: Backup database to restore from.
    types:
    - <xref:str>
  - name: provisioning_state
    description: Resource state.
    types:
    - <xref:str>
  - name: status
    description: Resource status.
    types:
    - <xref:str>
  - name: restore_point_in_time
    description: Snapshot time to restore.
    types:
    - <xref:str>
  - name: create_mode
    description: 'Specifies the mode of sql pool creation.


      Default: regular sql pool creation.


      PointInTimeRestore: Creates a sql pool by restoring a point in time backup of
      an existing sql

      pool. sourceDatabaseId must be specified as the resource ID of the existing
      sql pool, and

      restorePointInTime must be specified.


      Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must
      be specified

      as the recoverableDatabaseId to restore.


      Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId

      should be the sql pool''s original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate

      must be specified. Known values are: "Default", "PointInTimeRestore", "Recovery",
      and

      "Restore".'
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.CreateMode>
  - name: creation_date
    description: Date the SQL pool was created.
    types:
    - <xref:datetime.datetime>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  #
    pylint: disable=line-too-long'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: SQL pool SKU.
  name: sku
  types:
  - <xref:azure.synapse.artifacts.models.Sku>
- description: Maximum size in bytes.
  name: max_size_bytes
  types:
  - <xref:int>
- description: Collation mode.
  name: collation
  types:
  - <xref:str>
- description: Source database to create from.
  name: source_database_id
  types:
  - <xref:str>
- description: Backup database to restore from.
  name: recoverable_database_id
  types:
  - <xref:str>
- description: Resource state.
  name: provisioning_state
  types:
  - <xref:str>
- description: Resource status.
  name: status
  types:
  - <xref:str>
- description: Snapshot time to restore.
  name: restore_point_in_time
  types:
  - <xref:str>
- description: 'Specifies the mode of sql pool creation.


    Default: regular sql pool creation.


    PointInTimeRestore: Creates a sql pool by restoring a point in time backup of
    an existing sql

    pool. sourceDatabaseId must be specified as the resource ID of the existing sql
    pool, and

    restorePointInTime must be specified.


    Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must
    be specified

    as the recoverableDatabaseId to restore.


    Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId

    should be the sql pool''s original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate

    must be specified. Known values are: "Default", "PointInTimeRestore", "Recovery",
    and

    "Restore".'
  name: create_mode
  types:
  - <xref:str>
  - <xref:azure.synapse.artifacts.models.CreateMode>
- description: Date the SQL pool was created.
  name: creation_date
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.synapse.artifacts.models.SqlPool.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.SqlPool.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.SqlPool.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.synapse.artifacts.models.SqlPool.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.SqlPool.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.synapse.artifacts.models.SqlPool.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
