### YamlMime:PythonClass
uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient
name: WebPubSubServiceClient
fullName: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient
module: azure.messaging.webpubsubservice.aio
inheritances:
- builtins.object
constructor:
  syntax: WebPubSubServiceClient(endpoint, credential, **kwargs)
methods:
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    We have helper methods to create requests specific to this service in *azure.messaging.webpubsub.rest*.

    Use these helper methods to create the request you pass to this method. See our
    example below:



    ```


    >>> from azure.messaging.webpubsub.rest import build_healthapi_get_health_status_request

    >>> request = build_healthapi_get_health_status_request(api_version)

    <HttpRequest [HEAD], url: ''/api/health''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/python/llcwiki](https://aka.ms/azsdk/python/llcwiki)


    For advanced cases, you can also create your own <xref:azure.messaging.webpubsub.core.rest.HttpRequest>

    and pass it in.'
  signature: 'send_request(http_request: azure.messaging.webpubsubservice.core.rest._rest_py3.HttpRequest,
    **kwargs: Any) -> azure.messaging.webpubsubservice.core.rest._rest_py3.AsyncHttpResponse'
  parameters:
  - name: http_request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.messaging.webpubsub.core.rest.HttpRequest>
  - name: stream_response
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.messaging.webpubsub.core.rest.AsyncHttpResponse>
