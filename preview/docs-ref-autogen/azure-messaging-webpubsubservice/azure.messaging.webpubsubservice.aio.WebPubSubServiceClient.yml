### YamlMime:PythonClass
uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient
name: WebPubSubServiceClient
fullName: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient
module: azure.messaging.webpubsubservice.aio
inheritances:
- azure.messaging.webpubsubservice._patch.WebPubSubServiceClientBase
- azure.messaging.webpubsubservice.aio._client.WebPubSubServiceClient
summary: WebPubSubServiceClient.
constructor:
  syntax: 'WebPubSubServiceClient(endpoint: str, hub: str, credential: AsyncTokenCredential
    | AzureKeyCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: HTTP or HTTPS endpoint for the Web PubSub service instance.
    isRequired: true
    types:
    - <xref:str>
  - name: hub
    description: 'Target hub name, which should start with alphabetic characters and
      only contain

      alpha-numeric characters or underscore.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
    - <xref:azure.core.credentials.AzureKeyCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version. The default value is "2021-10-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.add_connection_to_group
  name: add_connection_to_group
  summary: 'Add a connection to the target group.


    Add a connection to the target group.'
  signature: 'async add_connection_to_group(group: str, connection_id: str, **kwargs:
    Any) -> None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.add_user_to_group
  name: add_user_to_group
  summary: 'Add a user to the target group.


    Add a user to the target group.'
  signature: 'async add_user_to_group(group: str, user_id: str, **kwargs: Any) ->
    None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: Target user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.close
  name: close
  signature: async close() -> None
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.close_all_connections
  name: close_all_connections
  summary: 'Close the connections in the hub.


    Close the connections in the hub.'
  signature: 'async close_all_connections(*, excluded: List[str] | None = None, reason:
    str | None = None, **kwargs: Any) -> None'
  keywordOnlyParameters:
  - name: excluded
    description: 'Exclude these connectionIds when closing the connections in the
      hub. Default

      value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: reason
    description: The reason closing the client connection. Default value is None.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.close_connection
  name: close_connection
  summary: 'Close the client connection.


    Close the client connection.'
  signature: 'async close_connection(connection_id: str, *, reason: str | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: reason
    description: The reason closing the client connection. Default value is None.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.close_group_connections
  name: close_group_connections
  summary: 'Close connections in the specific group.


    Close connections in the specific group.'
  signature: 'async close_group_connections(group: str, *, excluded: List[str] | None
    = None, reason: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: excluded
    description: 'Exclude these connectionIds when closing the connections in the
      group.

      Default value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: reason
    description: The reason closing the client connection. Default value is None.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.close_user_connections
  name: close_user_connections
  summary: 'Close connections for the specific user.


    Close connections for the specific user.'
  signature: 'async close_user_connections(user_id: str, *, excluded: List[str] |
    None = None, reason: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: user_id
    description: The user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: excluded
    description: 'Exclude these connectionIds when closing the connections for the
      user.

      Default value is None.'
    types:
    - <xref:list>[<xref:str>]
  - name: reason
    description: The reason closing the client connection. Default value is None.
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.connection_exists
  name: connection_exists
  summary: 'Check if the connection with the given connectionId exists.


    Check if the connection with the given connectionId exists.'
  signature: 'async connection_exists(connection_id: str, **kwargs: Any) -> bool'
  parameters:
  - name: connection_id
    description: The connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.from_connection_string
  name: from_connection_string
  summary: Create a new WebPubSubServiceClient from a connection string.
  signature: 'from_connection_string(connection_string: str, hub: str, **kwargs: Any)
    -> WebPubSubServiceClient'
  parameters:
  - name: connection_string
    description: Connection string
    isRequired: true
    types:
    - <xref:str>
  - name: hub
    description: 'Target hub name, which should start with alphabetic characters and
      only contain

      alpha-numeric characters or underscore.'
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.messaging.webpubsubservice.aio.WebPubSubServiceClient>
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.get_client_access_token
  name: get_client_access_token
  summary: "Generate token for the client to connect Azure Web PubSub service.\nGenerate\
    \ token for the client to connect Azure Web PubSub service.\n:keyword user_id:\
    \ User Id.\n:paramtype user_id: str\n:keyword roles: Roles that the connection\
    \ with the generated token will have.\n:paramtype roles: list[str]\n:keyword minutes_to_expire:\
    \ The expire time of the generated token.\n:paramtype minutes_to_expire: int\n\
    :keyword dict[str, any] jwt_headers: Any headers you want to pass to jwt encoding.\n\
    :keyword api_version: Api Version. The default value is \"2021-10-01\". Note that\
    \ overriding this\n\n   default value may result in unsupported behavior."
  signature: 'async get_client_access_token(*, user_id: str | None = None, roles:
    List[str] | None = None, minutes_to_expire: int | None = 60, jwt_headers: Dict[str,
    Any] = None, **kwargs: Any) -> MutableMapping[str, Any]'
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.grant_permission
  name: grant_permission
  summary: 'Grant permission to the connection.


    Grant permission to the connection.'
  signature: 'async grant_permission(permission: str, connection_id: str, *, target_name:
    str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: permission
    description: 'The permission: current supported actions are joinLeaveGroup and

      sendToGroup. Known values are: "sendToGroup" and "joinLeaveGroup". Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: target_name
    description: 'The meaning of the target depends on the specific permission. For

      joinLeaveGroup and sendToGroup, targetName is a required parameter standing
      for the group name.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.group_exists
  name: group_exists
  summary: 'Check if there are any client connections inside the given group.


    Check if there are any client connections inside the given group.'
  signature: 'async group_exists(group: str, **kwargs: Any) -> bool'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.has_permission
  name: has_permission
  summary: 'Check if a connection has permission to the specified action.


    Check if a connection has permission to the specified action.'
  signature: 'async has_permission(permission: str, connection_id: str, *, target_name:
    str | None = None, **kwargs: Any) -> bool'
  parameters:
  - name: permission
    description: 'The permission: current supported actions are joinLeaveGroup and

      sendToGroup. Known values are: "sendToGroup" and "joinLeaveGroup". Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: target_name
    description: 'The meaning of the target depends on the specific permission. For

      joinLeaveGroup and sendToGroup, targetName is a required parameter standing
      for the group name.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.remove_connection_from_all_groups
  name: remove_connection_from_all_groups
  summary: 'Remove a connection from all groups.


    Remove a connection from all groups.'
  signature: 'async remove_connection_from_all_groups(connection_id: str, **kwargs:
    Any) -> None'
  parameters:
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.remove_connection_from_group
  name: remove_connection_from_group
  summary: 'Remove a connection from the target group.


    Remove a connection from the target group.'
  signature: 'async remove_connection_from_group(group: str, connection_id: str, **kwargs:
    Any) -> None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.remove_user_from_all_groups
  name: remove_user_from_all_groups
  summary: 'Remove a user from all groups.


    Remove a user from all groups.'
  signature: 'async remove_user_from_all_groups(user_id: str, **kwargs: Any) -> None'
  parameters:
  - name: user_id
    description: Target user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.remove_user_from_group
  name: remove_user_from_group
  summary: 'Remove a user from the target group.


    Remove a user from the target group.'
  signature: 'async remove_user_from_group(group: str, user_id: str, **kwargs: Any)
    -> None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: user_id
    description: Target user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.revoke_permission
  name: revoke_permission
  summary: 'Revoke permission for the connection.


    Revoke permission for the connection.'
  signature: 'async revoke_permission(permission: str, connection_id: str, *, target_name:
    str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: permission
    description: 'The permission: current supported actions are joinLeaveGroup and

      sendToGroup. Known values are: "sendToGroup" and "joinLeaveGroup". Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: connection_id
    description: Target connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: target_name
    description: 'The meaning of the target depends on the specific permission. For

      joinLeaveGroup and sendToGroup, targetName is a required parameter standing
      for the group name.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_to_all
  name: send_to_all
  summary: 'Broadcast content inside request body to all the connected client connections.


    Broadcast content inside request body to all the connected client connections.'
  signature: 'async send_to_all(message: IO, *, excluded: List[str] | None = None,
    filter: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: message
    description: The payload body. Required.
    isRequired: true
    types:
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: excluded
    description: Excluded connection Ids. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: filter
    description: 'Following OData filter syntax to filter out the subscribers receiving
      the

      messages. Default value is None.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_to_connection
  name: send_to_connection
  summary: 'Send content inside request body to the specific connection.


    Send content inside request body to the specific connection.'
  signature: 'async send_to_connection(connection_id: str, message: IO, **kwargs:
    Any) -> None'
  parameters:
  - name: connection_id
    description: The connection Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: message
    description: The payload body. Required.
    isRequired: true
    types:
    - <xref:typing.IO>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_to_group
  name: send_to_group
  summary: 'Send content inside request body to a group of connections.


    Send content inside request body to a group of connections.'
  signature: 'async send_to_group(group: str, message: IO, *, excluded: List[str]
    | None = None, filter: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: group
    description: 'Target group name, which length should be greater than 0 and less
      than 1025.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: message
    description: The payload body. Required.
    isRequired: true
    types:
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: excluded
    description: Excluded connection Ids. Default value is None.
    types:
    - <xref:list>[<xref:str>]
  - name: filter
    description: 'Following OData filter syntax to filter out the subscribers receiving
      the

      messages. Default value is None.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.send_to_user
  name: send_to_user
  summary: 'Send content inside request body to the specific user.


    Send content inside request body to the specific user.'
  signature: 'async send_to_user(user_id: str, message: IO, *, filter: str | None
    = None, **kwargs: Any) -> None'
  parameters:
  - name: user_id
    description: The user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: message
    description: The payload body. Required.
    isRequired: true
    types:
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: filter
    description: 'Following OData filter syntax to filter out the subscribers receiving
      the

      messages. Default value is None.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.messaging.webpubsubservice.aio.WebPubSubServiceClient.user_exists
  name: user_exists
  summary: 'Check if there are any client connections connected for the given user.


    Check if there are any client connections connected for the given user.'
  signature: 'async user_exists(user_id: str, **kwargs: Any) -> bool'
  parameters:
  - name: user_id
    description: Target user Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
