### YamlMime:PythonClass
uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager
name: IoTHubConfigurationManager
fullName: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager
module: azure.iot.hub.iothub_configuration_manager
inheritances:
- builtins.object
summary: 'A class to provide convenience APIs for IoTHub Configuration Manager operations,

  based on top of the auto generated IotHub REST APIs'
constructor:
  syntax: IoTHubConfigurationManager(connection_string)
methods:
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.apply_configuration_on_edge_device
  name: apply_configuration_on_edge_device
  summary: "Applies the provided configuration content to the specified edge\n   device.\
    \ Modules content is mandantory."
  signature: apply_configuration_on_edge_device(device_id, configuration_content)
  parameters:
  - name: configuration_content
    description: The name (Id) of the edge device.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.ConfigurationContent>
  - name: configuration_content
    isRequired: true
  return:
    description: An object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.create_configuration
  name: create_configuration
  summary: Creates a configuration for devices or modules of an IoTHub.
  signature: create_configuration(configuration)
  parameters:
  - name: configuration_id
    description: The id of the configuration.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration
    description: The configuration to create.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Configuration>
  return:
    description: Configuration object containing the created configuration.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.delete_configuration
  name: delete_configuration
  summary: Deletes a configuration from an IoTHub.
  signature: delete_configuration(configuration_id, etag=None)
  parameters:
  - name: configuration_id
    description: The id of the configuration.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration
    description: The configuration to create.
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.iot.hub.protocol.models.Configuration>
  - name: etag
    description: The etag (if_match) value to use for the delete operation.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Configuration object containing the updated configuration.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.get_configuration
  name: get_configuration
  summary: Retrieves the IoTHub configuration for a particular device.
  signature: get_configuration(configuration_id)
  parameters:
  - name: configuration_id
    description: The id of the configuration.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The Configuration object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.get_configurations
  name: get_configurations
  summary: "Retrieves multiple configurations for device and modules of an IoTHub.\n\
    \   Returns the specified number of configurations. Pagination is not supported."
  signature: get_configurations(max_count=None)
  parameters:
  - name: max_count
    description: The maximum number of configurations requested.
    isRequired: true
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: The list[Configuration] object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.test_configuration_queries
  name: test_configuration_queries
  summary: "Validates the target condition query and custom metric queries for a\n\
    \   configuration."
  signature: test_configuration_queries(configuration_queries_test_input)
  parameters:
  - name: configuration_queries_test_input
    description: The queries test input.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.ConfigurationQueriesTestInput>
  return:
    description: The ConfigurationQueriesTestResponse object.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
- uid: azure.iot.hub.iothub_configuration_manager.IoTHubConfigurationManager.update_configuration
  name: update_configuration
  summary: "Updates a configuration for devices or modules of an IoTHub.\n   Note:\
    \ that configuration Id and Content cannot be updated by the user."
  signature: update_configuration(configuration, etag)
  parameters:
  - name: configuration_id
    description: The id of the configuration.
    isRequired: true
    types:
    - <xref:str>
  - name: configuration
    description: The configuration contains the updated configuration.
    isRequired: true
    types:
    - <xref:azure.iot.hub.protocol.models.Configuration>
  - name: etag
    description: The etag (if_match) value to use for the update operation.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Configuration object containing the updated configuration.
  exceptions:
  - type: 'HttpOperationError<msrest.exceptions.HttpOperationError

      if the HTTP response status is not in [200].'
