### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService
name: AzureDatabricksLinkedService
fullName: azure.synapse.artifacts.models.AzureDatabricksLinkedService
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.LinkedService
summary: 'Azure Databricks linked service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'AzureDatabricksLinkedService(*, domain: object, access_token: SecretBase,
    additional_properties: Dict[str, object] | None = None, connect_via: IntegrationRuntimeReference
    | None = None, description: str | None = None, parameters: Dict[str, ParameterSpecification]
    | None = None, annotations: List[object] | None = None, existing_cluster_id: object
    | None = None, instance_pool_id: object | None = None, new_cluster_version: object
    | None = None, new_cluster_num_of_worker: object | None = None, new_cluster_node_type:
    object | None = None, new_cluster_spark_conf: Dict[str, object] | None = None,
    new_cluster_spark_env_vars: Dict[str, object] | None = None, new_cluster_custom_tags:
    Dict[str, object] | None = None, new_cluster_driver_node_type: object | None =
    None, new_cluster_init_scripts: object | None = None, new_cluster_enable_elastic_disk:
    object | None = None, encrypted_credential: object | None = None, **kwargs)'
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: type
    description: Required. Type of linked service.Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: connect_via
    description: The integration runtime reference.
    isRequired: true
    types:
    - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
  - name: description
    description: Linked service description.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for linked service.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
  - name: annotations
    description: List of tags that can be used for describing the linked service.
    isRequired: true
    types:
    - <xref:list>[<xref:object>]
  - name: domain
    description: 'Required. `<REGION>`.azuredatabricks.net, domain name of your Databricks

      deployment. Type: string (or Expression with resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: access_token
    description: 'Required. Access token for databricks REST API. Refer to

      [https://docs.azuredatabricks.net/api/latest/authentication.html](https://docs.azuredatabricks.net/api/latest/authentication.html).
      Type: string (or Expression

      with resultType string).'
    isRequired: true
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: existing_cluster_id
    description: 'The id of an existing interactive cluster that will be used for
      all

      runs of this activity. Type: string (or Expression with resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: instance_pool_id
    description: 'The id of an existing instance pool that will be used for all runs
      of

      this activity. Type: string (or Expression with resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_version
    description: 'If not using an existing interactive cluster, this specifies the

      Spark version of a new job cluster or instance pool nodes created for each run
      of this

      activity. Required if instancePoolId is specified. Type: string (or Expression
      with resultType

      string).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_num_of_worker
    description: 'If not using an existing interactive cluster, this specifies

      the number of worker nodes to use for the new job cluster or instance pool.
      For new job

      clusters, this a string-formatted Int32, like ''1'' means numOfWorker is 1 or
      ''1:10'' means auto-

      scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted
      Int32, and can

      only specify a fixed number of worker nodes, such as ''2''. Required if newClusterVersion
      is

      specified. Type: string (or Expression with resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_node_type
    description: 'The node type of the new job cluster. This property is required

      if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId
      is

      specified, this property is ignored. Type: string (or Expression with resultType
      string).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_spark_conf
    description: 'A set of optional, user-specified Spark configuration key-value

      pairs.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: new_cluster_spark_env_vars
    description: 'A set of optional, user-specified Spark environment

      variables key-value pairs.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: new_cluster_custom_tags
    description: 'Additional tags for cluster resources. This property is ignored

      in instance pool configurations.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: new_cluster_driver_node_type
    description: 'The driver node type for the new job cluster. This

      property is ignored in instance pool configurations. Type: string (or Expression
      with

      resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_init_scripts
    description: 'User-defined initialization scripts for the new cluster. Type:

      array of strings (or Expression with resultType array of strings).'
    isRequired: true
    types:
    - <xref:object>
  - name: new_cluster_enable_elastic_disk
    description: 'Enable the elastic disk on the new cluster. This

      property is now ignored, and takes the default elastic disk behavior in Databricks
      (elastic

      disks are always enabled). Type: boolean (or Expression with resultType boolean).'
    isRequired: true
    types:
    - <xref:object>
  - name: encrypted_credential
    description: 'The encrypted credential used for authentication. Credentials are

      encrypted using the integration runtime credential manager. Type: string (or
      Expression with

      resultType string).'
    isRequired: true
    types:
    - <xref:object>
  keywordOnlyParameters:
  - name: domain
    isRequired: true
  - name: access_token
    isRequired: true
  - name: additional_properties
    isRequired: true
  - name: connect_via
    isRequired: true
  - name: description
    isRequired: true
  - name: parameters
    isRequired: true
  - name: annotations
    isRequired: true
  - name: existing_cluster_id
    isRequired: true
  - name: instance_pool_id
    isRequired: true
  - name: new_cluster_version
    isRequired: true
  - name: new_cluster_num_of_worker
    isRequired: true
  - name: new_cluster_node_type
    isRequired: true
  - name: new_cluster_spark_conf
    isRequired: true
  - name: new_cluster_spark_env_vars
    isRequired: true
  - name: new_cluster_custom_tags
    isRequired: true
  - name: new_cluster_driver_node_type
    isRequired: true
  - name: new_cluster_init_scripts
    isRequired: true
  - name: new_cluster_enable_elastic_disk
    isRequired: true
  - name: encrypted_credential
    isRequired: true
methods:
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.AzureDatabricksLinkedService.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
