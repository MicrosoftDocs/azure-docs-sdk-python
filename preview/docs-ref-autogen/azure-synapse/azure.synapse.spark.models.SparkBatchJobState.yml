### YamlMime:PythonClass
uid: azure.synapse.spark.models.SparkBatchJobState
name: SparkBatchJobState
fullName: azure.synapse.spark.models.SparkBatchJobState
module: azure.synapse.spark.models
inheritances:
- msrest.serialization.Model
summary: SparkBatchJobState.
constructor:
  syntax: 'SparkBatchJobState(*, not_started_at: datetime | None = None, starting_at:
    datetime | None = None, running_at: datetime | None = None, dead_at: datetime
    | None = None, success_at: datetime | None = None, terminated_at: datetime | None
    = None, recovering_at: datetime | None = None, current_state: str | None = None,
    job_creation_request: SparkRequest | None = None, **kwargs)'
  parameters:
  - name: not_started_at
    description: the time that at which "not_started" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: starting_at
    description: the time that at which "starting" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: running_at
    description: the time that at which "running" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: dead_at
    description: time that at which "dead" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: success_at
    description: the time that at which "success" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: terminated_at
    description: the time that at which "killed" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: recovering_at
    description: the time that at which "recovering" livy state was first seen.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: current_state
    description: the Spark job state.
    isRequired: true
    types:
    - <xref:azure.synapse.spark.models.str>
  - name: job_creation_request
    isRequired: true
    types:
    - <xref:azure.synapse.spark.models.SparkRequest>
