### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.DynamicsLinkedService
name: DynamicsLinkedService
fullName: azure.synapse.artifacts.models.DynamicsLinkedService
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.LinkedService
summary: 'Dynamics linked service.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DynamicsLinkedService(*, deployment_type: str | DynamicsDeploymentType,
    authentication_type: str | DynamicsAuthenticationType, additional_properties:
    Dict[str, object] | None = None, connect_via: IntegrationRuntimeReference | None
    = None, description: str | None = None, parameters: Dict[str, ParameterSpecification]
    | None = None, annotations: List[object] | None = None, host_name: str | None
    = None, port: str | None = None, service_uri: str | None = None, organization_name:
    str | None = None, username: object | None = None, password: SecretBase | None
    = None, service_principal_id: object | None = None, service_principal_credential_type:
    str | DynamicsServicePrincipalCredentialType | None = None, service_principal_credential:
    SecretBase | None = None, encrypted_credential: object | None = None, **kwargs)'
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:object>]
  - name: type
    description: Required. Type of linked service.Constant filled by server.
    isRequired: true
    types:
    - <xref:str>
  - name: connect_via
    description: The integration runtime reference.
    isRequired: true
    types:
    - <xref:azure.synapse.artifacts.models.IntegrationRuntimeReference>
  - name: description
    description: Linked service description.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for linked service.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:azure.synapse.artifacts.models.ParameterSpecification>]
  - name: annotations
    description: List of tags that can be used for describing the linked service.
    isRequired: true
    types:
    - <xref:list>[<xref:object>]
  - name: deployment_type
    description: 'Required. The deployment type of the Dynamics instance. ''Online''
      for

      Dynamics Online and ''OnPremisesWithIfd'' for Dynamics on-premises with Ifd.
      Type: string (or

      Expression with resultType string). Possible values include: "Online", "OnPremisesWithIfd".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.DynamicsDeploymentType>
  - name: host_name
    description: 'The host name of the on-premises Dynamics server. The property is
      required

      for on-prem and not allowed for online. Type: string (or Expression with resultType
      string).'
    isRequired: true
    types:
    - <xref:str>
  - name: port
    description: 'The port of on-premises Dynamics server. The property is required
      for on-prem and

      not allowed for online. Default is 443. Type: integer (or Expression with resultType
      integer),

      minimum: 0.'
    isRequired: true
    types:
    - <xref:str>
  - name: service_uri
    description: 'The URL to the Microsoft Dynamics server. The property is required
      for on-

      line and not allowed for on-prem. Type: string (or Expression with resultType
      string).'
    isRequired: true
    types:
    - <xref:str>
  - name: organization_name
    description: 'The organization name of the Dynamics instance. The property is

      required for on-prem and required for online when there are more than one Dynamics
      instances

      associated with the user. Type: string (or Expression with resultType string).'
    isRequired: true
    types:
    - <xref:str>
  - name: authentication_type
    description: 'Required. The authentication type to connect to Dynamics server.

      ''Office365'' for online scenario, ''Ifd'' for on-premises with Ifd scenario,
      ''AADServicePrincipal''

      for Server-To-Server authentication in online scenario. Type: string (or Expression
      with

      resultType string). Possible values include: "Office365", "Ifd", "AADServicePrincipal".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.DynamicsAuthenticationType>
  - name: username
    description: 'User name to access the Dynamics instance. Type: string (or Expression
      with

      resultType string).'
    isRequired: true
    types:
    - <xref:object>
  - name: password
    description: Password to access the Dynamics instance.
    isRequired: true
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: service_principal_id
    description: 'The client ID of the application in Azure Active Directory used

      for Server-To-Server authentication. Type: string (or Expression with resultType
      string).'
    isRequired: true
    types:
    - <xref:object>
  - name: service_principal_credential_type
    description: 'The service principal credential type to use in

      Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert''

      for certificate. Type: string (or Expression with resultType string). Possible
      values include:

      "ServicePrincipalKey", "ServicePrincipalCert".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.synapse.artifacts.models.DynamicsServicePrincipalCredentialType>
  - name: service_principal_credential
    description: 'The credential of the service principal object in Azure

      Active Directory. If servicePrincipalCredentialType is ''ServicePrincipalKey'',

      servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference.
      If

      servicePrincipalCredentialType is ''ServicePrincipalCert'', servicePrincipalCredential
      can only

      be AzureKeyVaultSecretReference.'
    isRequired: true
    types:
    - <xref:azure.synapse.artifacts.models.SecretBase>
  - name: encrypted_credential
    description: 'The encrypted credential used for authentication. Credentials are

      encrypted using the integration runtime credential manager. Type: string (or
      Expression with

      resultType string).'
    isRequired: true
    types:
    - <xref:object>
  keywordOnlyParameters:
  - name: deployment_type
    isRequired: true
  - name: authentication_type
    isRequired: true
  - name: additional_properties
    isRequired: true
  - name: connect_via
    isRequired: true
  - name: description
    isRequired: true
  - name: parameters
    isRequired: true
  - name: annotations
    isRequired: true
  - name: host_name
    isRequired: true
  - name: port
    isRequired: true
  - name: service_uri
    isRequired: true
  - name: organization_name
    isRequired: true
  - name: username
    isRequired: true
  - name: password
    isRequired: true
  - name: service_principal_id
    isRequired: true
  - name: service_principal_credential_type
    isRequired: true
  - name: service_principal_credential
    isRequired: true
  - name: encrypted_credential
    isRequired: true
methods:
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.synapse.artifacts.models.DynamicsLinkedService.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
