### YamlMime:PythonClass
uid: azure.mixedreality.remoterendering.RemoteRenderingClient
name: RemoteRenderingClient
fullName: azure.mixedreality.remoterendering.RemoteRenderingClient
module: azure.mixedreality.remoterendering
inheritances:
- builtins.object
summary: 'A client for the Azure Remote Rendering Service.


  This client offers functionality to convert assets to the format expected by the
  runtime, and also to manage the

  lifetime of remote rendering sessions.'
constructor:
  syntax: 'RemoteRenderingClient(endpoint: str, account_id: str, account_domain: str,
    credential: Union[TokenCredential, AccessToken], **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'The rendering service endpoint. This determines the region in which
      the rendering session is created and

      asset conversions are performed.'
    isRequired: true
    types:
    - <xref:str>
  - name: account_id
    description: The Azure Remote Rendering account identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: account_domain
    description: 'The Azure Remote Rendering account domain. For example, for an account
      created in the eastus region, this

      will have the form "eastus.mixedreality.azure.com"'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Authentication for the Azure Remote

      Rendering account. Can be of the form of an AzureKeyCredential, TokenCredential
      or an AccessToken acquired

      from the Mixed Reality Secure Token Service (STS).'
    isRequired: true
    types:
    - <xref:Union>[<xref:TokenCredential>, <xref:AzureKeyCredential>, <xref:AccessToken>]
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to the latest service version.

      Setting to an older version may result in reduced feature compatibility.'
    types:
    - <xref:str>
    - <xref:azure.mixedreality.remoterenderings.RemoteRenderingApiVersion>
methods:
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.begin_asset_conversion
  name: begin_asset_conversion
  summary: "Start a new asset conversion with the given options.\n:param str conversion_id:\n\
    \n   An ID uniquely identifying the conversion for the remote rendering account.\
    \ The ID is case sensitive, can\n   contain any combination of alphanumeric characters\
    \ including hyphens and underscores, and cannot contain\n   more than 256 characters."
  signature: 'begin_asset_conversion(conversion_id: str, input_settings: AssetConversionInputSettings,
    output_settings: AssetConversionOutputSettings, **kwargs: Any) -> LROPoller[AssetConversion]'
  parameters:
  - name: input_settings
    description: 'Options for the

      input of the conversion.'
    isRequired: true
    types:
    - <xref:azure.mixedreality.remoterendering.AssetConversionInputSettings>
  - name: output_settings
    description: 'Options for the

      output of the conversion.'
    isRequired: true
    types:
    - <xref:azure.mixedreality.remoterendering.AssetConversionOutputSettings>
  return:
    description: A poller for the created asset conversion
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mixedreality.remoterendering.AssetConversion>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.begin_rendering_session
  name: begin_rendering_session
  signature: 'begin_rendering_session(session_id: str, size: Union[str, RenderingSessionSize],
    lease_time_minutes: int, **kwargs: Any) -> LROPoller[RenderingSession]'
  parameters:
  - name: session_id
    description: 'An ID uniquely identifying the rendering session for the given account.
      The ID is case

      sensitive, can contain any combination of alphanumeric characters including
      hyphens and underscores, and

      cannot contain more than 256 characters.'
    isRequired: true
    types:
    - <xref:str>
  - name: size
    description: 'Size of the server used for the rendering session. Remote Rendering
      with Standard size server has

      a maximum scene size of 20 million polygons. Remote Rendering with Premium size
      does not enforce a hard

      maximum, but performance may be degraded if your content exceeds the rendering
      capabilities of the service.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mixedreality.remoterendering.RenderingSessionSize>
  - name: lease_time_minutes
    description: The time in minutes the session will run after reaching the 'Ready'
      state.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A poller for the created rendering session
    types:
    - <xref:LROPoller>[<xref:azure.mixedreality.remoterendering.RenderingSession>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.close
  name: close
  signature: close() -> None
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.get_asset_conversion
  name: get_asset_conversion
  summary: "Retrieve the state of a previously created conversion.\n:param str conversion_id:\n\
    \n   The identifier of the conversion to retrieve."
  signature: 'get_asset_conversion(conversion_id: str, **kwargs: Any) -> AssetConversion'
  return:
    description: Information about the ongoing conversion process.
    types:
    - <xref:azure.mixedreality.remoterendering.models.AssetConversion>
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.get_asset_conversion_poller
  name: get_asset_conversion_poller
  summary: "Returns a poller for an existing conversion by conversion id or a continuation\
    \ token retrieved from a previous\npoller.\n:keyword conversion_id: The conversion\
    \ id of a previously created conversion.\n:paramtype conversion_id: str\n:keyword\
    \ continuation_token:\n\n   A continuation token retrieved from a poller of a\
    \ conversion."
  signature: 'get_asset_conversion_poller(**kwargs: Any) -> LROPoller[AssetConversion]'
  return:
    description: A poller for the created asset conversion
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mixedreality.remoterendering.AssetConversion>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.get_rendering_session
  name: get_rendering_session
  summary: 'Returns the properties of a previously generated rendering session.

    :param str session_id: The identifier of the rendering session.

    :return: Properties of the rendering session

    :rtype:  ~azure.mixedreality.remoterendering.models.RenderingSession

    :raises ~azure.core.exceptions.HttpResponseError:'
  signature: 'get_rendering_session(session_id: str, **kwargs: Any) -> RenderingSession'
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.get_rendering_session_poller
  name: get_rendering_session_poller
  summary: "Returns a poller for an existing rendering session by session id or a\
    \ continuation token retrieved from a\nprevious poller.\n:keyword session_id:\
    \ The conversion id of a previously created conversion.\n:paramtype session_id:\
    \ str\n:keyword continuation_token:\n\n   A continuation token retrieved from\
    \ a poller of a session."
  signature: 'get_rendering_session_poller(**kwargs: Any) -> LROPoller[RenderingSession]'
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.list_asset_conversions
  name: list_asset_conversions
  summary: 'Gets conversions for the remote rendering account.

    :rtype: ItemPaged[AssetConversion]

    :raises ~azure.core.exceptions.HttpResponseError:'
  signature: list_asset_conversions(**kwargs) -> azure.core.paging.ItemPaged[azure.mixedreality.remoterendering._generated.models._models_py3.AssetConversion]
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.list_rendering_sessions
  name: list_rendering_sessions
  summary: "List rendering sessions in the 'Ready' or 'Starting' state. Does not return\
    \ stopped or failed rendering\n   sessions."
  signature: list_rendering_sessions(**kwargs) -> azure.core.paging.ItemPaged[azure.mixedreality.remoterendering._generated.models._models_py3.RenderingSession]
  return:
    types:
    - <xref:ItemPaged>[<xref:azure.mixedreality.remoterendering.RenderingSession>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.stop_rendering_session
  name: stop_rendering_session
  signature: 'stop_rendering_session(session_id: str, **kwargs: Any) -> None'
  parameters:
  - name: session_id
    description: The identifier of the session to be stopped.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mixedreality.remoterendering.RemoteRenderingClient.update_rendering_session
  name: update_rendering_session
  summary: "Updates an already existing rendering session.\n:param str session_id:\
    \ The identifier of the session to be updated.\n:keyword lease_time_minutes: The\
    \ new lease time of the rendering session. Has to be strictly larger than\n\n\
    \   the previous lease time."
  signature: 'update_rendering_session(session_id: str, **kwargs: Any) -> RenderingSession'
  return:
    description: The properties of the updated session
    types:
    - <xref:azure.mixedreality.remoterendering.models.RenderingSession>
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
