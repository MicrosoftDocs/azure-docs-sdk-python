### YamlMime:PythonClass
uid: azure.ai.inference.models.ImageEmbeddingInput
name: ImageEmbeddingInput
fullName: azure.ai.inference.models.ImageEmbeddingInput
module: azure.ai.inference.models
inheritances:
- azure.ai.inference.models._models.ImageEmbeddingInput
constructor:
  syntax: 'ImageEmbeddingInput(*args: Any, **kwargs: Any)'
methods:
- uid: azure.ai.inference.models.ImageEmbeddingInput.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.inference.models.ImageEmbeddingInput.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.inference.models.ImageEmbeddingInput.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.inference.models.ImageEmbeddingInput.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.inference.models.ImageEmbeddingInput.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.inference.models.ImageEmbeddingInput.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.inference.models.ImageEmbeddingInput.load
  name: load
  summary: 'Create an ImageEmbeddingInput object from a local image file. The method
    reads the image

    file and encodes it as a base64 string, which together with the image format

    is then used to format the JSON *url* value passed in the request payload.'
  signature: 'load(*, image_file: str, image_format: str, text: str | None = None)
    -> Self'
  keywordOnlyParameters:
  - name: image_file
    description: The name of the local image file to load. Required.
    types:
    - <xref:str>
  - name: image_format
    description: 'The MIME type format of the image. For example: "jpeg", "png". Required.'
    types:
    - <xref:str>
  - name: text
    description: 'Optional. The text input to feed into the model (like DINO, CLIP).

      Returns a 422 error if the model doesn''t support the value or parameter.'
    types:
    - <xref:str>
  return:
    description: An ImageEmbeddingInput object with the image data encoded as a base64
      string.
    types:
    - <xref:azure.ai.inference.models.EmbeddingsInput>
  exceptions:
  - type: FileNotFoundError
    description: when the image file could not be opened.
- uid: azure.ai.inference.models.ImageEmbeddingInput.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.ImageEmbeddingInput.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.inference.models.ImageEmbeddingInput.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.ImageEmbeddingInput.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.inference.models.ImageEmbeddingInput.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.inference.models.ImageEmbeddingInput.image
  name: image
  summary: 'The input image encoded in base64 string as a data URL. Example:

    `data:image/{format};base64,{data}`. Required.'
  signature: 'image: str'
- uid: azure.ai.inference.models.ImageEmbeddingInput.text
  name: text
  summary: 'Optional. The text input to feed into the model (like DINO, CLIP).

    Returns a 422 error if the model doesn''t support the value or parameter.'
  signature: 'text: str | None'
