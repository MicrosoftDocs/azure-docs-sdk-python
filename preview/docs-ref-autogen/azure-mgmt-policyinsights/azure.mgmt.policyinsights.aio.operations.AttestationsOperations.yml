### YamlMime:PythonClass
uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations
name: AttestationsOperations
fullName: azure.mgmt.policyinsights.aio.operations.AttestationsOperations
module: azure.mgmt.policyinsights.aio.operations
inheritances:
- builtins.object
summary: 'AttestationsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: AttestationsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.begin_create_or_update_at_resource
  name: begin_create_or_update_at_resource
  summary: Creates or updates an attestation at resource scope.
  signature: 'begin_create_or_update_at_resource(resource_id: str, attestation_name:
    str, parameters: azure.mgmt.policyinsights.models._models_py3.Attestation, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.policyinsights.models._models_py3.Attestation]'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The attestation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Attestation or
      the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.policyinsights.models.Attestation>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.begin_create_or_update_at_resource_group
  name: begin_create_or_update_at_resource_group
  summary: Creates or updates an attestation at resource group scope.
  signature: 'begin_create_or_update_at_resource_group(resource_group_name: str, attestation_name:
    str, parameters: azure.mgmt.policyinsights.models._models_py3.Attestation, **kwargs:
    Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.policyinsights.models._models_py3.Attestation]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The attestation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Attestation or
      the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.policyinsights.models.Attestation>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.begin_create_or_update_at_subscription
  name: begin_create_or_update_at_subscription
  summary: Creates or updates an attestation at subscription scope.
  signature: 'begin_create_or_update_at_subscription(attestation_name: str, parameters:
    azure.mgmt.policyinsights.models._models_py3.Attestation, **kwargs: Any) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.policyinsights.models._models_py3.Attestation]'
  parameters:
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The attestation parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling.

      Pass in False for this operation to not poll, or pass in your own initialized
      polling object for a personal polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either Attestation or
      the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.policyinsights.models.Attestation>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.delete_at_resource
  name: delete_at_resource
  summary: Deletes an existing attestation at individual resource scope.
  signature: 'delete_at_resource(resource_id: str, attestation_name: str, **kwargs:
    Any) -> None'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.delete_at_resource_group
  name: delete_at_resource_group
  summary: Deletes an existing attestation at resource group scope.
  signature: 'delete_at_resource_group(resource_group_name: str, attestation_name:
    str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.delete_at_subscription
  name: delete_at_subscription
  summary: Deletes an existing attestation at subscription scope.
  signature: 'delete_at_subscription(attestation_name: str, **kwargs: Any) -> None'
  parameters:
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.get_at_resource
  name: get_at_resource
  summary: Gets an existing attestation at resource scope.
  signature: 'get_at_resource(resource_id: str, attestation_name: str, **kwargs: Any)
    -> azure.mgmt.policyinsights.models._models_py3.Attestation'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Attestation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.get_at_resource_group
  name: get_at_resource_group
  summary: Gets an existing attestation at resource group scope.
  signature: 'get_at_resource_group(resource_group_name: str, attestation_name: str,
    **kwargs: Any) -> azure.mgmt.policyinsights.models._models_py3.Attestation'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Attestation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.get_at_subscription
  name: get_at_subscription
  summary: Gets an existing attestation at subscription scope.
  signature: 'get_at_subscription(attestation_name: str, **kwargs: Any) -> azure.mgmt.policyinsights.models._models_py3.Attestation'
  parameters:
  - name: attestation_name
    description: The name of the attestation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Attestation, or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.Attestation>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.list_for_resource
  name: list_for_resource
  summary: Gets all attestations for a resource.
  signature: 'list_for_resource(resource_id: str, query_options: Optional[azure.mgmt.policyinsights.models._models_py3.QueryOptions]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.policyinsights.models._models_py3.AttestationListResult]'
  parameters:
  - name: resource_id
    description: Resource ID.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either AttestationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.AttestationListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.list_for_resource_group
  name: list_for_resource_group
  summary: Gets all attestations for the resource group.
  signature: 'list_for_resource_group(resource_group_name: str, query_options: Optional[azure.mgmt.policyinsights.models._models_py3.QueryOptions]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.policyinsights.models._models_py3.AttestationListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: query_options
    description: Parameter group.
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either AttestationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.AttestationListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.list_for_subscription
  name: list_for_subscription
  summary: Gets all attestations for the subscription.
  signature: 'list_for_subscription(query_options: Optional[azure.mgmt.policyinsights.models._models_py3.QueryOptions]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.policyinsights.models._models_py3.AttestationListResult]'
  parameters:
  - name: query_options
    description: Parameter group.
    isRequired: true
    defaultValue: None
    types:
    - <xref:azure.mgmt.policyinsights.models.QueryOptions>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either AttestationListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.policyinsights.models.AttestationListResult>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.policyinsights.aio.operations.AttestationsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.policyinsights.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\policyinsights\\models\\__init__.py'>
