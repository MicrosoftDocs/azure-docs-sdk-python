### YamlMime:PythonClass
uid: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations
name: PolicyRestrictionsOperations
fullName: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations
module: azure.mgmt.policyinsights.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.policyinsights.aio.PolicyInsightsClient>'s\n\
  >\n> <xref:policy_restrictions> attribute.\n>"
constructor:
  syntax: PolicyRestrictionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations.check_at_management_group_scope
  name: check_at_management_group_scope
  summary: Checks what restrictions Azure Policy will place on resources within a
    management group.
  signature: 'async check_at_management_group_scope(management_group_id: str, parameters:
    _models.CheckManagementGroupRestrictionsRequest, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.CheckRestrictionsResult'
  parameters:
  - name: management_group_id
    description: Management group ID. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The check policy restrictions parameters. Is either a

      CheckManagementGroupRestrictionsRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckManagementGroupRestrictionsRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckRestrictionsResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckRestrictionsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations.check_at_resource_group_scope
  name: check_at_resource_group_scope
  summary: 'Checks what restrictions Azure Policy will place on a resource within
    a resource group. Use

    this when the resource group the resource will be created in is already known.'
  signature: 'async check_at_resource_group_scope(resource_group_name: str, parameters:
    _models.CheckRestrictionsRequest, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.CheckRestrictionsResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The check policy restrictions parameters. Is either a

      CheckRestrictionsRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckRestrictionsRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckRestrictionsResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckRestrictionsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations.check_at_subscription_scope
  name: check_at_subscription_scope
  summary: Checks what restrictions Azure Policy will place on a resource within a
    subscription.
  signature: 'async check_at_subscription_scope(parameters: _models.CheckRestrictionsRequest,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.CheckRestrictionsResult'
  parameters:
  - name: parameters
    description: 'The check policy restrictions parameters. Is either a

      CheckRestrictionsRequest type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckRestrictionsRequest>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckRestrictionsResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.policyinsights.models.CheckRestrictionsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.policyinsights.aio.operations.PolicyRestrictionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.policyinsights.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv197\\Lib\\site-packages\\azure\\mgmt\\policyinsights\\models\\__init__.py'>
