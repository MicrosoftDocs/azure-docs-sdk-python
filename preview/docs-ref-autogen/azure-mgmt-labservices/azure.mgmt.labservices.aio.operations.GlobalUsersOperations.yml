### YamlMime:PythonClass
uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations
name: GlobalUsersOperations
fullName: azure.mgmt.labservices.aio.operations.GlobalUsersOperations
module: azure.mgmt.labservices.aio.operations
inheritances:
- builtins.object
summary: 'GlobalUsersOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: GlobalUsersOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.begin_reset_password
  name: begin_reset_password
  summary: Resets the user password on an environment This operation can take a while
    to complete.
  signature: 'begin_reset_password(user_name: str, reset_password_payload: azure.mgmt.labservices.models._models_py3.ResetPasswordPayload,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: reset_password_payload
    description: Represents the payload for resetting passwords.
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.ResetPasswordPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    isRequired: true
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    isRequired: true
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.begin_start_environment
  name: begin_start_environment
  summary: 'Starts an environment by starting all resources inside the environment.
    This operation can take

    a while to complete.'
  signature: 'begin_start_environment(user_name: str, environment_operations_payload:
    azure.mgmt.labservices.models._models_py3.EnvironmentOperationsPayload, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: environment_operations_payload
    description: 'Represents payload for any Environment operations like

      get, start, stop, connect.'
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.EnvironmentOperationsPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    isRequired: true
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    isRequired: true
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.begin_stop_environment
  name: begin_stop_environment
  summary: 'Stops an environment by stopping all resources inside the environment
    This operation can take a

    while to complete.'
  signature: 'begin_stop_environment(user_name: str, environment_operations_payload:
    azure.mgmt.labservices.models._models_py3.EnvironmentOperationsPayload, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: environment_operations_payload
    description: 'Represents payload for any Environment operations like

      get, start, stop, connect.'
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.EnvironmentOperationsPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    isRequired: true
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    isRequired: true
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.get_environment
  name: get_environment
  summary: Gets the virtual machine details.
  signature: 'get_environment(user_name: str, environment_operations_payload: azure.mgmt.labservices.models._models_py3.EnvironmentOperationsPayload,
    expand: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.labservices.models._models_py3.GetEnvironmentResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: environment_operations_payload
    description: 'Represents payload for any Environment operations like

      get, start, stop, connect.'
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.EnvironmentOperationsPayload>
  - name: expand
    description: 'Specify the $expand query. Example: ''properties($expand=environment)''.'
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: GetEnvironmentResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.GetEnvironmentResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.get_operation_batch_status
  name: get_operation_batch_status
  summary: Get batch operation status.
  signature: 'get_operation_batch_status(user_name: str, operation_batch_status_payload:
    azure.mgmt.labservices.models._models_py3.OperationBatchStatusPayload, **kwargs)
    -> azure.mgmt.labservices.models._models_py3.OperationBatchStatusResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_batch_status_payload
    description: Payload to get the status of an operation.
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.OperationBatchStatusPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: OperationBatchStatusResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.OperationBatchStatusResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.get_operation_status
  name: get_operation_status
  summary: Gets the status of long running operation.
  signature: 'get_operation_status(user_name: str, operation_status_payload: azure.mgmt.labservices.models._models_py3.OperationStatusPayload,
    **kwargs) -> azure.mgmt.labservices.models._models_py3.OperationStatusResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_status_payload
    description: Payload to get the status of an operation.
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.OperationStatusPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: OperationStatusResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.OperationStatusResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.get_personal_preferences
  name: get_personal_preferences
  summary: Get personal preferences for a user.
  signature: 'get_personal_preferences(user_name: str, personal_preferences_operations_payload:
    azure.mgmt.labservices.models._models_py3.PersonalPreferencesOperationsPayload,
    **kwargs) -> azure.mgmt.labservices.models._models_py3.GetPersonalPreferencesResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: personal_preferences_operations_payload
    description: 'Represents payload for any Environment

      operations like get, start, stop, connect.'
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.PersonalPreferencesOperationsPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: GetPersonalPreferencesResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.GetPersonalPreferencesResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.list_environments
  name: list_environments
  summary: List Environments for the user.
  signature: 'list_environments(user_name: str, list_environments_payload: azure.mgmt.labservices.models._models_py3.ListEnvironmentsPayload,
    **kwargs) -> azure.mgmt.labservices.models._models_py3.ListEnvironmentsResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: list_environments_payload
    description: Represents the payload to list environments owned by a user.
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.ListEnvironmentsPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: ListEnvironmentsResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.ListEnvironmentsResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.list_labs
  name: list_labs
  summary: List labs for the user.
  signature: 'list_labs(user_name: str, **kwargs) -> azure.mgmt.labservices.models._models_py3.ListLabsResponse'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: ListLabsResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.labservices.models.ListLabsResponse>
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.register
  name: register
  summary: Register a user to a managed lab.
  signature: 'register(user_name: str, register_payload: azure.mgmt.labservices.models._models_py3.RegisterPayload,
    **kwargs) -> None'
  parameters:
  - name: user_name
    description: The name of the user.
    isRequired: true
    types:
    - <xref:str>
  - name: register_payload
    description: Represents payload for Register action.
    isRequired: true
    types:
    - <xref:azure.mgmt.labservices.models.RegisterPayload>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
attributes:
- uid: azure.mgmt.labservices.aio.operations.GlobalUsersOperations.models
  name: models
  signature: 'models = <module ''azure.mgmt.labservices.models'' from ''c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\labservices\\models\\__init__.py''>'
