### YamlMime:PythonClass
uid: azure.mgmt.maintenance.models.InputPatchConfiguration
name: InputPatchConfiguration
fullName: azure.mgmt.maintenance.models.InputPatchConfiguration
module: azure.mgmt.maintenance.models
inheritances:
- azure.mgmt.maintenance._serialization.Model
summary: Input configuration for a patch run.
constructor:
  syntax: 'InputPatchConfiguration(*, reboot_setting: str | _models.RebootOptions
    = ''IfRequired'', windows_parameters: _models.InputWindowsParameters | None =
    None, linux_parameters: _models.InputLinuxParameters | None = None, pre_tasks:
    List[_models.TaskProperties] | None = None, post_tasks: List[_models.TaskProperties]
    | None = None, **kwargs)'
variables:
- description: 'Possible reboot preference as defined by the user based on which it
    would

    be decided to reboot the machine or not after the patch operation is completed.
    Known values

    are: "IfRequired", "Never", and "Always".'
  name: reboot_setting
  types:
  - <xref:azure.mgmt.maintenance.models.str>
  - <xref:azure.mgmt.maintenance.models.RebootOptions>
- description: 'Input parameters specific to patching a Windows machine. For Linux

    machines, do not pass this property.'
  name: windows_parameters
  types:
  - <xref:azure.mgmt.maintenance.models.InputWindowsParameters>
- description: 'Input parameters specific to patching Linux machine. For Windows

    machines, do not pass this property.'
  name: linux_parameters
  types:
  - <xref:azure.mgmt.maintenance.models.InputLinuxParameters>
- description: 'List of pre tasks. e.g. [{''source'' :''runbook'', ''taskScope'':
    ''Global'',

    ''parameters'': { ''arg1'': ''value1''}}].'
  name: pre_tasks
  types:
  - <xref:azure.mgmt.maintenance.models.list>[<xref:azure.mgmt.maintenance.models.TaskProperties>]
- description: 'List of post tasks. e.g. [{''source'' :''runbook'', ''taskScope'':
    ''Resource'',

    ''parameters'': { ''arg1'': ''value1''}}].'
  name: post_tasks
  types:
  - <xref:azure.mgmt.maintenance.models.list>[<xref:azure.mgmt.maintenance.models.TaskProperties>]
