### YamlMime:PythonClass
uid: azure.ai.voicelive.models.Response
name: Response
fullName: azure.ai.voicelive.models.Response
module: azure.ai.voicelive.models
summary: The response resource.
constructor:
  syntax: 'Response(*args: Any, **kwargs: Any)'
variables:
- description: The unique ID of the response.
  name: id
  types:
  - <xref:str>
- description: 'The object type, must be `realtime.response`. Default value is

    "realtime.response".'
  name: object
  types:
  - <xref:str>
- description: 'The final status of the response.

    One of: `completed`, `cancelled`, `failed`, `incomplete`, or `in_progress`. Known

    values are: "completed", "cancelled", "failed", "incomplete", and "in_progress".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.voicelive.models.ResponseStatus>
- description: Additional details about the status.
  name: status_details
  types:
  - <xref:azure.ai.voicelive.models.ResponseStatusDetails>
- description: The list of output items generated by the response.
  name: output
  types:
  - <xref:list>[<xref:azure.ai.voicelive.models.ResponseItem>]
- description: 'Usage statistics for the Response, this will correspond to billing.
    A

    VoiceLive API session will maintain a conversation context and append new

    Items to the Conversation, thus output from previous turns (text and

    audio tokens) will become the input for later turns.'
  name: usage
  types:
  - <xref:azure.ai.voicelive.models.Usage>
- description: 'Which conversation the response is added to, determined by the

    `conversation`

    field in the `response.create` event. If `auto`, the response will be added to

    the default conversation and the value of `conversation_id` will be an id like

    `conv_1234`. If `none`, the response will not be added to any conversation and

    the value of `conversation_id` will be `null`. If responses are being triggered

    by server VAD, the response will be added to the default conversation, thus

    the `conversation_id` will be an id like `conv_1234`.'
  name: conversation_id
  types:
  - <xref:str>
- description: 'supported voice identifiers and configurations. Is one of the following
    types:

    Union[str, "_models.OAIVoice"], OpenAIVoice, AzureVoice, Union[str, "_models.Phi4mmVoice"]'
  name: voice
  types:
  - <xref:str>
  - <xref:azure.ai.voicelive.models.OAIVoice>
  - <xref:azure.ai.voicelive.models.OpenAIVoice>
  - <xref:azure.ai.voicelive.models.AzureVoice>
  - <xref:str>
  - <xref:azure.ai.voicelive.models.Phi4mmVoice>
- description: 'The set of modalities the model used to respond. If there are multiple

    modalities,

    the model will pick one, for example if `modalities` is `["text", "audio"]`, the
    model

    could be responding in either text or audio.'
  name: modalities
  types:
  - <xref:list>[<xref:str>]
- description: 'The format of output audio. Options are `pcm16`, `g711_ulaw`, or

    `g711_alaw`. Is one of the following types: Literal["pcm16"], Literal["g711_ulaw"],

    Literal["g711_alaw"]'
  name: output_audio_format
  types:
  - <xref:str>
- description: Sampling temperature for the model, limited to [0.6, 1.2]. Defaults
    to 0.8.
  name: temperature
  types:
  - <xref:float>
- description: 'Maximum number of output tokens for a single assistant response,

    inclusive of tool calls, that was used in this response. Is either a int type
    or a

    Literal["inf"] type.'
  name: max_output_tokens
  types:
  - <xref:int>
  - <xref:str>
methods:
- uid: azure.ai.voicelive.models.Response.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.voicelive.models.Response.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.voicelive.models.Response.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.voicelive.models.Response.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.voicelive.models.Response.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.voicelive.models.Response.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.voicelive.models.Response.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.Response.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.voicelive.models.Response.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.Response.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.voicelive.models.Response.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.voicelive.models.Response.conversation_id
  name: conversation_id
  summary: 'Which conversation the response is added to, determined by the `conversation`

    field in the `response.create` event. If `auto`, the response will be added to

    the default conversation and the value of `conversation_id` will be an id like

    `conv_1234`. If `none`, the response will not be added to any conversation and

    the value of `conversation_id` will be `null`. If responses are being triggered

    by server VAD, the response will be added to the default conversation, thus

    the `conversation_id` will be an id like `conv_1234`.'
  signature: 'conversation_id: str | None'
- uid: azure.ai.voicelive.models.Response.id
  name: id
  summary: The unique ID of the response.
  signature: 'id: str | None'
- uid: azure.ai.voicelive.models.Response.max_output_tokens
  name: max_output_tokens
  summary: 'Maximum number of output tokens for a single assistant response,

    inclusive of tool calls, that was used in this response. Is either a int type
    or a

    Literal["inf"] type.'
  signature: 'max_output_tokens: int | Literal[''inf''] | None'
- uid: azure.ai.voicelive.models.Response.modalities
  name: modalities
  summary: 'The set of modalities the model used to respond. If there are multiple
    modalities,

    the model will pick one, for example if `modalities` is `["text", "audio"]`, the
    model

    could be responding in either text or audio.'
  signature: 'modalities: List[Literal[''text'', ''audio'']] | None'
- uid: azure.ai.voicelive.models.Response.object
  name: object
  summary: The object type, must be `realtime.response`. Default value is "realtime.response".
  signature: 'object: Literal[''realtime.response''] | None'
- uid: azure.ai.voicelive.models.Response.output
  name: output
  summary: The list of output items generated by the response.
  signature: 'output: List[_models.ResponseItem] | None'
- uid: azure.ai.voicelive.models.Response.output_audio_format
  name: output_audio_format
  summary: 'The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.
    Is one of

    the following types: Literal["pcm16"], Literal["g711_ulaw"], Literal["g711_alaw"]'
  signature: 'output_audio_format: Literal[''pcm16'', ''g711_ulaw'', ''g711_alaw'']
    | None'
- uid: azure.ai.voicelive.models.Response.status
  name: status
  summary: 'The final status of the response.

    One of: `completed`, `cancelled`, `failed`, `incomplete`, or `in_progress`. Known

    values are: "completed", "cancelled", "failed", "incomplete", and "in_progress".'
  signature: 'status: str | _models.ResponseStatus | None'
- uid: azure.ai.voicelive.models.Response.status_details
  name: status_details
  summary: Additional details about the status.
  signature: 'status_details: _models.ResponseStatusDetails | None'
- uid: azure.ai.voicelive.models.Response.temperature
  name: temperature
  summary: Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to
    0.8.
  signature: 'temperature: float | None'
- uid: azure.ai.voicelive.models.Response.usage
  name: usage
  summary: 'Usage statistics for the Response, this will correspond to billing. A

    VoiceLive API session will maintain a conversation context and append new

    Items to the Conversation, thus output from previous turns (text and

    audio tokens) will become the input for later turns.'
  signature: 'usage: _models.Usage | None'
- uid: azure.ai.voicelive.models.Response.voice
  name: voice
  summary: 'Union[str,

    "_models.OAIVoice"], OpenAIVoice, AzureVoice, Union[str, "_models.Phi4mmVoice"]'
  signature: 'voice: _types.Voice | None'
