### YamlMime:PythonClass
uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted
name: ServerEventConversationItemInputAudioTranscriptionCompleted
fullName: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted
module: azure.ai.voicelive.models
summary: 'This event is the output of audio transcription for user audio written to
  the

  user audio buffer. Transcription begins when the input audio buffer is

  committed by the client or server (in `server_vad` mode). Transcription runs

  asynchronously with Response creation, so this event may come before or after

  the Response events.


  VoiceLive API models accept audio natively, and thus input transcription is a

  separate process run on a separate ASR (Automatic Speech Recognition) model.

  The transcript may diverge somewhat from the model''s interpretation, and

  should be treated as a rough guide.'
constructor:
  syntax: 'ServerEventConversationItemInputAudioTranscriptionCompleted(*args: Any,
    **kwargs: Any)'
variables:
- name: event_id
  types:
  - <xref:str>
- description: 'The event type, must be

    `conversation.item.input_audio_transcription.completed`. Required.'
  name: type
  types:
  - <xref:str>
  - <xref:azure.ai.voicelive.models.CONVERSATION_ITEM_INPUT_AUDIO_TRANSCRIPTION_COMPLETED>
- description: The ID of the user message item containing the audio. Required.
  name: item_id
  types:
  - <xref:str>
- description: The index of the content part containing the audio. Required.
  name: content_index
  types:
  - <xref:int>
- description: The transcribed text. Required.
  name: transcript
  types:
  - <xref:str>
methods:
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.deserialize
  name: deserialize
  signature: 'deserialize(payload: dict) -> ServerEvent'
  parameters:
  - name: payload
    isRequired: true
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.content_index
  name: content_index
  summary: The index of the content part containing the audio. Required.
  signature: 'content_index: int'
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.item_id
  name: item_id
  summary: The ID of the user message item containing the audio. Required.
  signature: 'item_id: str'
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.transcript
  name: transcript
  summary: The transcribed text. Required.
  signature: 'transcript: str'
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.type
  name: type
  summary: 'The event type, must be

    `conversation.item.input_audio_transcription.completed`. Required.'
  signature: 'type: completed''>]'
- uid: azure.ai.voicelive.models.ServerEventConversationItemInputAudioTranscriptionCompleted.event_id
  name: event_id
  signature: 'event_id: str | None'
