### YamlMime:PythonClass
uid: azure.iot.modelsrepository.ModelsRepositoryClient
name: ModelsRepositoryClient
fullName: azure.iot.modelsrepository.ModelsRepositoryClient
module: azure.iot.modelsrepository
inheritances:
- builtins.object
summary: 'Client providing APIs for Models Repository operations


  For additional request configuration options, please see [core options](https://aka.ms/azsdk/python/options).'
constructor:
  syntax: 'ModelsRepositoryClient(**kwargs: Any)'
  keywordOnlyParameters:
  - name: repository_location
    description: 'Location of the Models Repository you wish to access.

      This location can be a remote HTTP/HTTPS URL, or a local filesystem path.

      If omitted, will default to using "[https://devicemodels.azure.com](https://devicemodels.azure.com)".'
    types:
    - <xref:str>
  - name: dependency_resolution
    description: "Dependency resolution mode.\nPossible values:\n\n   * \"disabled\"\
      : Do not resolve model dependencies \n\n   * \"enabled\": Resolve model dependencies\
      \ from the repository \n\n   * \"tryFromExpanded\": Attempt to resolve model\
      \ and dependencies from an expanded\n\n        model DTDL document in the repository.\
      \ If this is not successful, will fall\n        back on manually resolving dependencies\
      \ in the repository\n\nIf using the default repository location, the default\
      \ dependency resolution mode will\nbe \"tryFromExpanded\". If using a custom\
      \ repository location, the default dependency\nresolution mode will be \"enabled\"\
      ."
    types:
    - <xref:str>
  - name: api_version
    description: 'The API version for the Models Repository Service you wish to

      access.'
    types:
    - <xref:str>
methods:
- uid: azure.iot.modelsrepository.ModelsRepositoryClient.close
  name: close
  summary: Close the client, preventing future operations
  signature: close() -> None
- uid: azure.iot.modelsrepository.ModelsRepositoryClient.get_models
  name: get_models
  summary: Retrieve a model from the Models Repository.
  signature: 'get_models(dtmis: List[str] | str, **kwargs: Any) -> Dict[str, Any]'
  parameters:
  - name: dtmis
    description: The DTMI(s) for the model(s) you wish to retrieve
    isRequired: true
    types:
    - <xref:str>
    - <xref:list>[<xref:str>]
  keywordOnlyParameters:
  - name: dependency_resolution
    description: "Dependency resolution mode override. This value takes\nprecedence\
      \ over the value set on the client.\nPossible values:\n\n   * \"disabled\":\
      \ Do not resolve model dependencies \n\n   * \"enabled\": Resolve model dependencies\
      \ from the repository \n\n   * \"tryFromExpanded\": Attempt to resolve model\
      \ and dependencies from an expanded\n\n        model DTDL document in the repository.\
      \ If this is not successful, will fall\n        back on manually resolving dependencies\
      \ in the repository"
    types:
    - <xref:str>
  return:
    description: Dictionary mapping DTMIs to models
    types:
    - <xref:dict>
  exceptions:
  - type: ValueError if given an invalid dependency resolution mode
  - type: <xref:azure.iot.modelsrepository.ModelError if there is an error parsing
      the retrieved model>(<xref:s>)
  - type: '<xref:azure.core.exceptions.ResourceNotFoundError if the model>(<xref:s>)<xref:
      cannot be found in the repository>'
  - type: <xref:azure.core.exceptions.ServiceRequestError if there is an error sending
      a request for the model>(<xref:s>)
  - type: '<xref:azure.core.exceptions.ServiceResponseError if the model>(<xref:s>)<xref:
      cannot be retrieved>'
  - type: azure.core.exceptions.HttpResponseError if a failure response is received
