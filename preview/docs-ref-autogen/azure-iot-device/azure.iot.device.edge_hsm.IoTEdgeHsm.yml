### YamlMime:PythonClass
uid: azure.iot.device.edge_hsm.IoTEdgeHsm
name: IoTEdgeHsm
fullName: azure.iot.device.edge_hsm.IoTEdgeHsm
module: azure.iot.device.edge_hsm
inheritances:
- azure.iot.device.signing_mechanism.SigningMechanism
summary: "Constructor for instantiating a iot hsm object.  This is an object that\n\
  communicates with the Azure IoT Edge HSM in order to get connection credentials\n\
  for an Azure IoT Edge module.  The credentials that this object return come in\n\
  two forms:\n\n1. The trust bundle, which is a certificate that can be used as a\
  \ trusted cert to authenticate the SSL connection between the IoE Edge module and\
  \ IoT Edge \n\n2. A signing function, which can be used to create the sig field\
  \ for a SharedAccessSignature string which can be used to authenticate with Iot\
  \ Edge \n\nConstructor for instantiating a Azure IoT Edge HSM object"
constructor:
  syntax: 'IoTEdgeHsm(module_id: str, generation_id: str, workload_uri: str, api_version:
    str)'
  parameters:
  - name: module_id
    description: The module id
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version
    isRequired: true
    types:
    - <xref:str>
  - name: generation_id
    description: The module generation id
    isRequired: true
    types:
    - <xref:str>
  - name: workload_uri
    description: The workload uri
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.iot.device.edge_hsm.IoTEdgeHsm.get_certificate
  name: get_certificate
  summary: 'Return the server verification certificate from the trust bundle that
    can be used to

    validate the server-side SSL TLS connection that we use to talk to Edge


    instance, as a PEM certificate in string form.'
  signature: async get_certificate() -> str
  exceptions:
  - type: IoTEdgeError if unable to retrieve the certificate.
- uid: azure.iot.device.edge_hsm.IoTEdgeHsm.sign
  name: sign
  summary: 'Use the IoTEdge HSM to sign a piece of string data.  The caller should
    then insert the

    returned value (the signature) into the ''sig'' field of a SharedAccessSignature
    string.


    directly insert into the SharedAccessSignature string.'
  signature: 'async sign(data_str: str | bytes) -> str'
  parameters:
  - name: data_str
    isRequired: true
  exceptions:
  - type: IoTEdgeError if unable to sign the data.
