### YamlMime:PythonClass
uid: azure.iot.device.sastoken.SasTokenProvider
name: SasTokenProvider
fullName: azure.iot.device.sastoken.SasTokenProvider
module: azure.iot.device.sastoken
inheritances:
- builtins.object
summary: Object responsible for providing a valid SasToken.
constructor:
  syntax: 'SasTokenProvider(generator: SasTokenGenerator)'
  parameters:
  - name: generator
    description: A SasTokenGenerator to generate SasTokens with
    isRequired: true
    types:
    - <xref:azure.iot.device.sastoken.SasTokenGenerator>
methods:
- uid: azure.iot.device.sastoken.SasTokenProvider.get_current_sastoken
  name: get_current_sastoken
  summary: Return the current SasToken
  signature: get_current_sastoken() -> SasToken
- uid: azure.iot.device.sastoken.SasTokenProvider.start
  name: start
  summary: Begin running the SasTokenProvider, ensuring that the current token is
    always valid
  signature: async start()
- uid: azure.iot.device.sastoken.SasTokenProvider.stop
  name: stop
  summary: 'Stop running the SasTokenProvider, clearing the current token.

    Does nothing if already stopped.'
  signature: async stop()
- uid: azure.iot.device.sastoken.SasTokenProvider.wait_for_new_sastoken
  name: wait_for_new_sastoken
  summary: Waits for a new SasToken to become available, and return it
  signature: async wait_for_new_sastoken() -> SasToken
