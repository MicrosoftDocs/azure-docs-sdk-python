### YamlMime:PythonClass
uid: azure.purview.administration.metadatapolicies.aio.PurviewMetadataPoliciesClient
name: PurviewMetadataPoliciesClient
fullName: azure.purview.administration.metadatapolicies.aio.PurviewMetadataPoliciesClient
module: azure.purview.administration.metadatapolicies.aio
inheritances:
- builtins.object
summary: PurviewMetadataPoliciesClient.
constructor:
  syntax: 'PurviewMetadataPoliciesClient(endpoint: str, credential: AsyncTokenCredential,
    **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'The endpoint of your Purview account. Example:

      [https:/](https:/)/{accountName}.purview.azure.com.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
variables:
- description: MetadataRolesOperations operations
  name: metadata_roles
  types:
  - <xref:azure.purview.administration.metadatapolicies.aio.operations.MetadataRolesOperations>
- description: MetadataPolicyOperations operations
  name: metadata_policy
  types:
  - <xref:azure.purview.administration.metadatapolicies.aio.operations.MetadataPolicyOperations>
methods:
- uid: azure.purview.administration.metadatapolicies.aio.PurviewMetadataPoliciesClient.close
  name: close
  signature: async close() -> None
- uid: azure.purview.administration.metadatapolicies.aio.PurviewMetadataPoliciesClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
