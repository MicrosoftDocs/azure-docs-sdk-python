### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.keyvault.v2019_09_01.models.VaultProperties
  fullName: azure.mgmt.keyvault.v2019_09_01.models.VaultProperties
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.keyvault.v2019_09_01.models
  name: VaultProperties
  summary: 'Properties of the vault.


    Variables are only populated by the server, and will be ignored when sending a
    request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'VaultProperties(*, tenant_id: str, sku: azure.mgmt.keyvault.v2019_09_01.models._models_py3.Sku,
      access_policies: typing.Union[typing.List[_ForwardRef(''AccessPolicyEntry'')],
      NoneType] = None, vault_uri: typing.Union[str, NoneType] = None, enabled_for_deployment:
      typing.Union[bool, NoneType] = None, enabled_for_disk_encryption: typing.Union[bool,
      NoneType] = None, enabled_for_template_deployment: typing.Union[bool, NoneType]
      = None, enable_soft_delete: typing.Union[bool, NoneType] = True, soft_delete_retention_in_days:
      typing.Union[int, NoneType] = 90, enable_rbac_authorization: typing.Union[bool,
      NoneType] = False, create_mode: typing.Union[str, _ForwardRef(''CreateMode''),
      NoneType] = None, enable_purge_protection: typing.Union[bool, NoneType] = None,
      network_acls: typing.Union[_ForwardRef(''NetworkRuleSet''), NoneType] = None,
      **kwargs)'
    parameters:
    - description: 'Required. The Azure Active Directory tenant ID that should be
        used for

        authenticating requests to the key vault.'
      id: tenant_id
      type:
      - str
    - description: Required. SKU details.
      id: sku
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.Sku
    - description: 'An array of 0 to 1024 identities that have access to the key vault.
        All

        identities in the array must use the same tenant ID as the key vault''s tenant
        ID. When

        `createMode` is set to `recover`, access policies are not required. Otherwise,
        access

        policies are required.'
      id: access_policies
      type:
      - list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
    - description: The URI of the vault for performing operations on keys and secrets.
      id: vault_uri
      type:
      - str
    - description: 'Property to specify whether Azure Virtual Machines are permitted

        to retrieve certificates stored as secrets from the key vault.'
      id: enabled_for_deployment
      type:
      - bool
    - description: 'Property to specify whether Azure Disk Encryption is

        permitted to retrieve secrets from the vault and unwrap keys.'
      id: enabled_for_disk_encryption
      type:
      - bool
    - description: 'Property to specify whether Azure Resource Manager is

        permitted to retrieve secrets from the key vault.'
      id: enabled_for_template_deployment
      type:
      - bool
    - description: 'Property to specify whether the ''soft delete'' functionality
        is

        enabled for this key vault. If it''s not set to any value(true or false) when
        creating new key

        vault, it will be set to true by default. Once set to true, it cannot be reverted
        to false.'
      id: enable_soft_delete
      type:
      - bool
    - description: softDelete data retention days. It accepts >=7 and <=90.
      id: soft_delete_retention_in_days
      type:
      - int
    - description: 'Property that controls how data actions are authorized. When

        true, the key vault will use Role Based Access Control (RBAC) for authorization
        of data

        actions, and the access policies specified in vault properties will be  ignored
        (warning: this

        is a preview feature). When false, the key vault will use the access policies
        specified in

        vault properties, and any policy stored on Azure Resource Manager will be
        ignored. If null or

        not specified, the vault is created with the default value of false. Note
        that management

        actions are always authorized with RBAC.'
      id: enable_rbac_authorization
      type:
      - bool
    - description: 'The vault''s create mode to indicate whether the vault need to
        be recovered

        or not. Possible values include: "recover", "default".'
      id: create_mode
      type:
      - str
      - azure.mgmt.keyvault.v2019_09_01.models.CreateMode
    - description: 'Property specifying whether protection against purge is enabled

        for this vault. Setting this property to true activates protection against
        purge for this vault

        and its content - only the Key Vault service may initiate a hard, irrecoverable
        deletion. The

        setting is effective only if soft delete is also enabled. Enabling this functionality
        is

        irreversible - that is, the property does not accept false as its value.'
      id: enable_purge_protection
      type:
      - bool
    - description: 'Rules governing the accessibility of the key vault from specific
        network

        locations.'
      id: network_acls
      type:
      - azure.mgmt.keyvault.v2019_09_01.models.NetworkRuleSet
    variables:
    - description: 'List of private endpoint connections associated with the

        key vault.'
      id: private_endpoint_connections
      type:
      - list[azure.mgmt.keyvault.v2019_09_01.models.PrivateEndpointConnectionItem]
  type: class
  uid: azure.mgmt.keyvault.v2019_09_01.models.VaultProperties
references:
- fullName: list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
  name: list[AccessPolicyEntry]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry
    name: AccessPolicyEntry
    uid: azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.keyvault.v2019_09_01.models.AccessPolicyEntry]
- fullName: list[azure.mgmt.keyvault.v2019_09_01.models.PrivateEndpointConnectionItem]
  name: list[PrivateEndpointConnectionItem]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2019_09_01.models.PrivateEndpointConnectionItem
    name: PrivateEndpointConnectionItem
    uid: azure.mgmt.keyvault.v2019_09_01.models.PrivateEndpointConnectionItem
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.keyvault.v2019_09_01.models.PrivateEndpointConnectionItem]
