### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.begin_purge_deleted
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.check_name_availability
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.create_or_update
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.delete
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get_deleted
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_resource_group
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_subscription
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_deleted
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update_access_policy
  - azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.models
  class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: VaultsOperations
  summary: 'VaultsOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: VaultsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.begin_purge_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: begin_purge_deleted(vault_name, location, **kwargs)
  namewithoutparameters: begin_purge_deleted
  summary: Permanently deletes the specified vault. aka Purges the deleted Azure key
    vault.
  syntax:
    content: begin_purge_deleted(vault_name, location, **kwargs)
    parameters:
    - description: The name of the soft-deleted vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: The location of the soft-deleted vault.
      id: location
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.begin_purge_deleted
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.check_name_availability
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: check_name_availability(vault_name, **kwargs)
  namewithoutparameters: check_name_availability
  summary: Checks that the vault name is valid and is not already in use.
  syntax:
    content: check_name_availability(vault_name, **kwargs)
    parameters:
    - description: The name of the vault.
      id: vault_name
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.VaultCheckNameAvailabilityParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: CheckNameAvailabilityResult, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.CheckNameAvailabilityResult
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.check_name_availability
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: create_or_update(resource_group_name, vault_name, parameters, **kwargs)
  namewithoutparameters: create_or_update
  summary: Create or update a key vault in the specified subscription.
  syntax:
    content: create_or_update(resource_group_name, vault_name, parameters, **kwargs)
    parameters:
    - description: The name of the Resource Group to which the server belongs.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: Parameters to create or update the vault.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.VaultCreateOrUpdateParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Vault, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.Vault
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.create_or_update
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.delete
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: delete(resource_group_name, vault_name, **kwargs)
  namewithoutparameters: delete
  summary: Deletes the specified Azure key vault.
  syntax:
    content: delete(resource_group_name, vault_name, **kwargs)
    parameters:
    - description: The name of the Resource Group to which the vault belongs.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the vault to delete.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.delete
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: get(resource_group_name, vault_name, **kwargs)
  namewithoutparameters: get
  summary: Gets the specified Azure key vault.
  syntax:
    content: get(resource_group_name, vault_name, **kwargs)
    parameters:
    - description: The name of the Resource Group to which the vault belongs.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Vault, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.Vault
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: get_deleted(vault_name, location, **kwargs)
  namewithoutparameters: get_deleted
  summary: Gets the deleted Azure key vault.
  syntax:
    content: get_deleted(vault_name, location, **kwargs)
    parameters:
    - description: The name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: The location of the deleted vault.
      id: location
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeletedVault, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.DeletedVault
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get_deleted
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: list(top=None, **kwargs)
  namewithoutparameters: list
  summary: The List operation gets information about the vaults associated with the
    subscription.
  syntax:
    content: list(top=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Maximum number of results to return.
      id: top
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either ResourceListResult or the result
        of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.ResourceListResult]
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: list_by_resource_group(resource_group_name, top=None, **kwargs)
  namewithoutparameters: list_by_resource_group
  summary: "The List operation gets information about the vaults associated with the\
    \ subscription and\nwithin the specified resource group.\n\n   param resource_group_name:\n\
    \      The name of the Resource Group to which the vault belongs.\n\n   type resource_group_name:\n\
    \      str\n\n   param top:\n      Maximum number of results to return.\n\n  \
    \ type top:\n      int\n\n   keyword callable cls:\n      A custom type or function\
    \ that will be passed the direct response\n\n   return:\n      An iterator like\
    \ instance of either VaultListResult or the result of cls(response)\n\n   rtype:\n\
    \      ~azure.core.paging.ItemPaged[~azure.mgmt.keyvault.v2016_10_01.models.VaultListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: list_by_resource_group(resource_group_name, top=None, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - defaultValue: None
      id: top
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_resource_group
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_subscription
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: list_by_subscription(top=None, **kwargs)
  namewithoutparameters: list_by_subscription
  summary: The List operation gets information about the vaults associated with the
    subscription.
  syntax:
    content: list_by_subscription(top=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Maximum number of results to return.
      id: top
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VaultListResult or the result
        of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.VaultListResult]
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_subscription
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_deleted
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: list_deleted(**kwargs)
  namewithoutparameters: list_deleted
  summary: Gets information about the deleted vaults in a subscription.
  syntax:
    content: list_deleted(**kwargs)
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either DeletedVaultListResult or the
        result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.DeletedVaultListResult]
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_deleted
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: update(resource_group_name, vault_name, parameters, **kwargs)
  namewithoutparameters: update
  summary: Update a key vault in the specified subscription.
  syntax:
    content: update(resource_group_name, vault_name, parameters, **kwargs)
    parameters:
    - description: The name of the Resource Group to which the server belongs.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: Parameters to patch the vault.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.VaultPatchParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Vault, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.Vault
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update_access_policy
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: update_access_policy(resource_group_name, vault_name, operation_kind, parameters,
    **kwargs)
  namewithoutparameters: update_access_policy
  summary: Update access policies in a key vault in the specified subscription.
  syntax:
    content: update_access_policy(resource_group_name, vault_name, operation_kind,
      parameters, **kwargs)
    parameters:
    - description: The name of the Resource Group to which the vault belongs.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: Name of the vault.
      id: vault_name
      isRequired: true
      type:
      - str
    - description: Name of the operation.
      id: operation_kind
      isRequired: true
      type:
      - str
      - azure.mgmt.keyvault.v2016_10_01.models.AccessPolicyUpdateKind
    - description: Access policy to merge into the vault.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.VaultAccessPolicyParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VaultAccessPolicyParameters, or the result of cls(response)
      type:
      - azure.mgmt.keyvault.v2016_10_01.models.VaultAccessPolicyParameters
  type: method
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update_access_policy
- class: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.models
  langs:
  - python
  module: azure.mgmt.keyvault.v2016_10_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.keyvault.v2016_10_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\keyvault\\v2016_10_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.models
references:
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.begin_purge_deleted
  isExternal: false
  name: begin_purge_deleted(vault_name, location, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.begin_purge_deleted
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.check_name_availability
  isExternal: false
  name: check_name_availability(vault_name, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.check_name_availability
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, vault_name, parameters, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.create_or_update
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.delete
  isExternal: false
  name: delete(resource_group_name, vault_name, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.delete
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get
  isExternal: false
  name: get(resource_group_name, vault_name, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get_deleted
  isExternal: false
  name: get_deleted(vault_name, location, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.get_deleted
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list
  isExternal: false
  name: list(top=None, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, top=None, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_resource_group
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_subscription
  isExternal: false
  name: list_by_subscription(top=None, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_by_subscription
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_deleted
  isExternal: false
  name: list_deleted(**kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.list_deleted
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update
  isExternal: false
  name: update(resource_group_name, vault_name, parameters, **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update_access_policy
  isExternal: false
  name: update_access_policy(resource_group_name, vault_name, operation_kind, parameters,
    **kwargs)
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.update_access_policy
- fullName: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations
  uid: azure.mgmt.keyvault.v2016_10_01.operations.VaultsOperations.models
- fullName: azure.core.polling.LROPoller[None]
  name: LROPoller[None]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[None]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.ResourceListResult]
  name: ItemPaged[ResourceListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2016_10_01.models.ResourceListResult
    name: ResourceListResult
    uid: azure.mgmt.keyvault.v2016_10_01.models.ResourceListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.ResourceListResult]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.VaultListResult]
  name: ItemPaged[VaultListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2016_10_01.models.VaultListResult
    name: VaultListResult
    uid: azure.mgmt.keyvault.v2016_10_01.models.VaultListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.VaultListResult]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.DeletedVaultListResult]
  name: ItemPaged[DeletedVaultListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.keyvault.v2016_10_01.models.DeletedVaultListResult
    name: DeletedVaultListResult
    uid: azure.mgmt.keyvault.v2016_10_01.models.DeletedVaultListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.keyvault.v2016_10_01.models.DeletedVaultListResult]
