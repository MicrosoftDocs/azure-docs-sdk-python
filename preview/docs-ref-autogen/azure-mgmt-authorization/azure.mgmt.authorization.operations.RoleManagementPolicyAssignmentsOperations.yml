### YamlMime:PythonClass
uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations
name: RoleManagementPolicyAssignmentsOperations
fullName: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations
module: azure.mgmt.authorization.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.authorization.AuthorizationManagementClient>'s\n\
  >\n> <xref:role_management_policy_assignments> attribute.\n>"
constructor:
  syntax: RoleManagementPolicyAssignmentsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations.create
  name: create
  summary: Create a role management policy assignment.
  signature: 'create(scope: str, role_management_policy_assignment_name: str, parameters:
    _models.RoleManagementPolicyAssignment, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.RoleManagementPolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the role management policy assignment to upsert. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to upsert. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters for the role management policy assignment. Is either
      a

      RoleManagementPolicyAssignment type or a IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.authorization.models.RoleManagementPolicyAssignment>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: RoleManagementPolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.models.RoleManagementPolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations.delete
  name: delete
  summary: Delete a role management policy assignment.
  signature: 'delete(scope: str, role_management_policy_assignment_name: str, **kwargs:
    Any) -> None'
  parameters:
  - name: scope
    description: The scope of the role management policy assignment to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to delete. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations.get
  name: get
  summary: Get the specified role management policy assignment for a resource scope.
  signature: 'get(scope: str, role_management_policy_assignment_name: str, **kwargs:
    Any) -> RoleManagementPolicyAssignment'
  parameters:
  - name: scope
    description: The scope of the role management policy. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: role_management_policy_assignment_name
    description: 'The name of format {guid_guid} the role

      management policy assignment to get. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RoleManagementPolicyAssignment or the result of cls(response)
    types:
    - <xref:azure.mgmt.authorization.models.RoleManagementPolicyAssignment>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations.list_for_scope
  name: list_for_scope
  summary: Gets role management assignment policies for a resource scope.
  signature: 'list_for_scope(scope: str, **kwargs: Any) -> ItemPaged[RoleManagementPolicyAssignment]'
  parameters:
  - name: scope
    description: The scope of the role management policy. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either RoleManagementPolicyAssignment
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.authorization.models.RoleManagementPolicyAssignment>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.authorization.operations.RoleManagementPolicyAssignmentsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.authorization.models' from 'C:\\ToolCache\\Python\\3.11.9\\x64\\Lib\\site-packages\\py2docfx\\venv\\venv73\\Lib\\site-packages\\azure\\mgmt\\authorization\\models\\__init__.py'>
