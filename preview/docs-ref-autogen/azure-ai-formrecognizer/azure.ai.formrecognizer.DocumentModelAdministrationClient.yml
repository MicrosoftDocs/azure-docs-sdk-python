### YamlMime:PythonClass
uid: azure.ai.formrecognizer.DocumentModelAdministrationClient
name: DocumentModelAdministrationClient
fullName: azure.ai.formrecognizer.DocumentModelAdministrationClient
module: azure.ai.formrecognizer
inheritances:
- azure.ai.formrecognizer._form_base_client.FormRecognizerClientBase
summary: 'DocumentModelAdministrationClient is the Form Recognizer interface to use
  for building

  and managing models.


  It provides methods for building models, as well as methods for viewing and deleting
  models,

  viewing document model operations, accessing account information, copying models

  to another Form Recognizer resource, and composing a new model from a collection
  of existing models.


  > [!NOTE]

  > DocumentModelAdministrationClient should be used with API versions

  >

  > 2021-09-30-preview and up. To use API versions <=v2.1, instantiate a FormTrainingClient.

  >


  New in version 2021-09-30-preview: The *DocumentModelAdministrationClient* and its
  client methods.'
constructor:
  syntax: 'DocumentModelAdministrationClient(endpoint: str, credential: AzureKeyCredential
    | TokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname,

      for example: [https://westus2.api.cognitive.microsoft.com](https://westus2.api.cognitive.microsoft.com)).'
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.str>
  - name: credential
    description: 'Credentials needed for the client to connect to Azure.

      This is an instance of AzureKeyCredential if using an API key or a token

      credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to the latest service version.

      Setting to an older version may result in reduced feature compatibility. To
      use API versions

      <=v2.1, instantiate a FormTrainingClient.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.DocumentAnalysisApiVersion>
examples:
- "Creating the DocumentModelAdministrationClient with an endpoint and API key.<!--[!code-python[Main](les\\\
  v3.2-beta\\sample_authentication.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
  classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"\
  D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\
  \\samples\\\\v3.2-beta\\\\sample_authentication.py\", \"xml:space\": \"preserve\"\
  , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
  : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.credentials import\
  \ AzureKeyCredential\n   from azure.ai.formrecognizer import DocumentModelAdministrationClient\n\
  \n   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"]\n   key = os.environ[\"\
  AZURE_FORM_RECOGNIZER_KEY\"]\n\n   document_model_admin_client = DocumentModelAdministrationClient(endpoint,\
  \ AzureKeyCredential(key))\n\n   ````\n\nCreating the DocumentModelAdministrationClient\
  \ with a token credential.<!--[!code-python[Main](les\\v3.2-beta\\sample_authentication.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\\
  55\\\\azure-ai-formrecognizer-3.2.0b6\\\\samples\\\\v3.2-beta\\\\sample_authentication.py\"\
  , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"highlight_args\"\
  : {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\n   \"\"\"DefaultAzureCredential\
  \ will use the values from these environment\n   variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,\
  \ AZURE_CLIENT_SECRET\n   \"\"\"\n   from azure.ai.formrecognizer import DocumentModelAdministrationClient\n\
  \   from azure.identity import DefaultAzureCredential\n\n   endpoint = os.environ[\"\
  AZURE_FORM_RECOGNIZER_ENDPOINT\"]\n   credential = DefaultAzureCredential()\n\n\
  \   document_model_admin_client = DocumentModelAdministrationClient(endpoint, credential)\n\
  \n   ````\n"
methods:
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.begin_build_model
  name: begin_build_model
  summary: 'Build a custom model.


    The request must include a *blob_container_url* keyword parameter that is an

    externally accessible Azure storage blob container URI (preferably a Shared Access
    Signature URI). Note that

    a container URI (without SAS) is accepted only when the container is public or
    has a managed identity

    configured, see more about configuring managed identities to work with Form Recognizer
    here:

    [https://docs.microsoft.com/azure/applied-ai-services/form-recognizer/managed-identities](https://docs.microsoft.com/azure/applied-ai-services/form-recognizer/managed-identities).

    Models are built using documents that are of the following content type - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'', or ''image/bmp''. Other types of
    content in the container is ignored.


    New in version v2022-01-30-preview: The required *build_mode* parameter and *tags*
    keyword argument'
  signature: 'begin_build_model(build_mode: str | ModelBuildMode, *, blob_container_url:
    str, **kwargs: Any) -> DocumentModelAdministrationLROPoller[DocumentModelDetails]'
  parameters:
  - name: build_mode
    description: 'The custom model build mode. Possible values include: "template",
      "neural".

      For more information about build modes, see: [https://aka.ms/azsdk/formrecognizer/buildmode](https://aka.ms/azsdk/formrecognizer/buildmode).'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.ModelBuildMode>
  - name: blob_container_url
    description: 'An Azure Storage blob container''s SAS URI. A container URI (without
      SAS)

      can be used if the container is public or has a managed identity configured.
      For more information on

      setting up a training data set, see: [https://aka.ms/azsdk/formrecognizer/buildtrainingset](https://aka.ms/azsdk/formrecognizer/buildtrainingset).'
    types:
    - <xref:str>
  - name: model_id
    description: A unique ID for your model. If not specified, a model ID will be
      created for you.
    types:
    - <xref:str>
  - name: description
    description: An optional description to add to the model.
    types:
    - <xref:str>
  - name: prefix
    description: 'A case-sensitive prefix string to filter documents in the blob container
      url path.

      For example, when using an Azure storage blob URI, use the prefix to restrict
      sub folders.

      *prefix* should end in ''/'' to avoid cases where filenames share the same prefix.'
    types:
    - <xref:str>
  - name: tags
    description: List of user defined key-value tag attributes associated with the
      model.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: 'An instance of an DocumentModelAdministrationLROPoller. Call *result()*
      on the poller

      object to return a <xref:azure.ai.formrecognizer.DocumentModelDetails>.'
    types:
    - <xref:azure.ai.formrecognizer.DocumentModelAdministrationLROPoller>[<xref:azure.ai.formrecognizer.DocumentModelDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Building a model from training files.<!--[!code-python[Main](les\\v3.2-beta\\\
    sample_build_model.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    _work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\\samples\\\
    \\v3.2-beta\\\\sample_build_model.py\", \"xml:space\": \"preserve\", \"force\"\
    : false, \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"\
    linenos\": false} -->\n\n````python\n\n   from azure.ai.formrecognizer import\
    \ DocumentModelAdministrationClient, ModelBuildMode\n   from azure.core.credentials\
    \ import AzureKeyCredential\n\n   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"\
    ]\n   key = os.environ[\"AZURE_FORM_RECOGNIZER_KEY\"]\n   container_sas_url =\
    \ os.environ[\"CONTAINER_SAS_URL\"]\n\n   document_model_admin_client = DocumentModelAdministrationClient(endpoint,\
    \ AzureKeyCredential(key))\n   poller = document_model_admin_client.begin_build_model(\n\
    \       ModelBuildMode.TEMPLATE, blob_container_url=container_sas_url, description=\"\
    my model description\"\n   )\n   model = poller.result()\n\n   print(\"Model ID:\
    \ {}\".format(model.model_id))\n   print(\"Description: {}\".format(model.description))\n\
    \   print(\"Model created on: {}\\n\".format(model.created_on))\n   print(\"Doc\
    \ types the model can recognize:\")\n   for name, doc_type in model.doc_types.items():\n\
    \       print(\"\\nDoc Type: '{}' built with '{}' mode which has the following\
    \ fields:\".format(name, doc_type.build_mode))\n       for field_name, field in\
    \ doc_type.field_schema.items():\n           print(\"Field: '{}' has type '{}'\
    \ and confidence score {}\".format(\n               field_name, field[\"type\"\
    ], doc_type.field_confidence[field_name]\n           ))\n\n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.begin_compose_model
  name: begin_compose_model
  summary: 'Creates a composed model from a collection of existing models.


    A composed model allows multiple models to be called with a single model ID. When
    a document is

    submitted to be analyzed with a composed model ID, a classification step is first
    performed to

    route it to the correct custom model.


    New in version v2022-01-30-preview: The *tags* keyword argument'
  signature: 'begin_compose_model(component_model_ids: List[str], **kwargs: Any) ->
    DocumentModelAdministrationLROPoller[DocumentModelDetails]'
  parameters:
  - name: component_model_ids
    description: List of model IDs to use in the composed model.
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.list>[<xref:azure.ai.formrecognizer.str>]
  - name: model_id
    description: 'A unique ID for your composed model.

      If not specified, a model ID will be created for you.'
    types:
    - <xref:str>
  - name: description
    description: An optional description to add to the model.
    types:
    - <xref:str>
  - name: tags
    description: List of user defined key-value tag attributes associated with the
      model.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: 'An instance of an DocumentModelAdministrationLROPoller. Call *result()*
      on the poller

      object to return a <xref:azure.ai.formrecognizer.DocumentModelDetails>.'
    types:
    - <xref:azure.ai.formrecognizer.DocumentModelAdministrationLROPoller>[<xref:azure.ai.formrecognizer.DocumentModelDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Creating a composed model with existing models.<!--[!code-python[Main](les\\\
    v3.2-beta\\sample_compose_model.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\":\
    \ \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\
    \\samples\\\\v3.2-beta\\\\sample_compose_model.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.credentials\
    \ import AzureKeyCredential\n   from azure.ai.formrecognizer import DocumentModelAdministrationClient,\
    \ ModelBuildMode\n\n   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"\
    ]\n   key = os.environ[\"AZURE_FORM_RECOGNIZER_KEY\"]\n   po_supplies = os.environ['PURCHASE_ORDER_OFFICE_SUPPLIES_SAS_URL']\n\
    \   po_equipment = os.environ['PURCHASE_ORDER_OFFICE_EQUIPMENT_SAS_URL']\n   po_furniture\
    \ = os.environ['PURCHASE_ORDER_OFFICE_FURNITURE_SAS_URL']\n   po_cleaning_supplies\
    \ = os.environ['PURCHASE_ORDER_OFFICE_CLEANING_SUPPLIES_SAS_URL']\n\n   document_model_admin_client\
    \ = DocumentModelAdministrationClient(endpoint=endpoint, credential=AzureKeyCredential(key))\n\
    \   supplies_poller = document_model_admin_client.begin_build_model(\n       ModelBuildMode.TEMPLATE,\
    \ blob_container_url=po_supplies, description=\"Purchase order-Office supplies\"\
    \n   )\n   equipment_poller = document_model_admin_client.begin_build_model(\n\
    \       ModelBuildMode.TEMPLATE, blob_container_url=po_equipment, description=\"\
    Purchase order-Office Equipment\"\n   )\n   furniture_poller = document_model_admin_client.begin_build_model(\n\
    \       ModelBuildMode.TEMPLATE, blob_container_url=po_furniture, description=\"\
    Purchase order-Furniture\"\n   )\n   cleaning_supplies_poller = document_model_admin_client.begin_build_model(\n\
    \       ModelBuildMode.TEMPLATE, blob_container_url=po_cleaning_supplies, description=\"\
    Purchase order-Cleaning Supplies\"\n   )\n   supplies_model = supplies_poller.result()\n\
    \   equipment_model = equipment_poller.result()\n   furniture_model = furniture_poller.result()\n\
    \   cleaning_supplies_model = cleaning_supplies_poller.result()\n\n   purchase_order_models\
    \ = [\n       supplies_model.model_id,\n       equipment_model.model_id,\n   \
    \    furniture_model.model_id,\n       cleaning_supplies_model.model_id\n   ]\n\
    \n   poller = document_model_admin_client.begin_compose_model(\n       purchase_order_models,\
    \ description=\"Office Supplies Composed Model\"\n   )\n   model = poller.result()\n\
    \n   print(\"Office Supplies Composed Model Info:\")\n   print(\"Model ID: {}\"\
    .format(model.model_id))\n   print(\"Description: {}\".format(model.description))\n\
    \   print(\"Model created on: {}\\n\".format(model.created_on))\n   print(\"Doc\
    \ types the model can recognize:\")\n   for name, doc_type in model.doc_types.items():\n\
    \       print(\"\\nDoc Type: '{}' which has the following fields:\".format(name))\n\
    \       for field_name, field in doc_type.field_schema.items():\n           print(\"\
    Field: '{}' has type '{}' and confidence score {}\".format(\n               field_name,\
    \ field[\"type\"], doc_type.field_confidence[field_name]\n           ))\n\n  \
    \ ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.begin_copy_model_to
  name: begin_copy_model_to
  summary: 'Copy a model stored in this resource (the source) to the user specified

    target Form Recognizer resource.


    This should be called with the source Form Recognizer resource

    (with the model that is intended to be copied). The *target* parameter should
    be supplied from the

    target resource''s output from calling the <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.get_copy_authorization>
    method.'
  signature: 'begin_copy_model_to(model_id: str, target: TargetAuthorization, **kwargs:
    Any) -> DocumentModelAdministrationLROPoller[DocumentModelDetails]'
  parameters:
  - name: model_id
    description: Model identifier of the model to copy to target resource.
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.str>
  - name: target
    description: 'The copy authorization generated from the target resource''s call
      to

      <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.get_copy_authorization>.'
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.TargetAuthorization>
  return:
    description: 'An instance of a DocumentModelAdministrationLROPoller. Call *result()*
      on the poller

      object to return a <xref:azure.ai.formrecognizer.DocumentModelDetails>.'
    types:
    - <xref:azure.ai.formrecognizer.DocumentModelAdministrationLROPoller>[<xref:azure.ai.formrecognizer.DocumentModelDetails>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.close
  name: close
  summary: Close the <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient>
    session.
  signature: close() -> None
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.delete_model
  name: delete_model
  summary: Delete a custom model.
  signature: 'delete_model(model_id: str, **kwargs: Any) -> None'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.str>
  return:
    types:
    - <xref:azure.ai.formrecognizer.None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  - type: azure.core.exceptions.ResourceNotFoundError
  examples:
  - "Delete a model.<!--[!code-python[Main](les\\v3.2-beta\\sample_manage_models.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\\
    dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\\samples\\\\v3.2-beta\\\\\
    sample_manage_models.py\", \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\
    \n````python\n\n   document_model_admin_client.delete_model(model_id=my_model.model_id)\n\
    \n   try:\n       document_model_admin_client.get_model(model_id=my_model.model_id)\n\
    \   except ResourceNotFoundError:\n       print(\"Successfully deleted model with\
    \ ID {}\".format(my_model.model_id))\n\n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.get_copy_authorization
  name: get_copy_authorization
  summary: 'Generate authorization for copying a custom model into the target Form
    Recognizer resource.


    This should be called by the target resource (where the model will be copied to)

    and the output can be passed as the *target* parameter into <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.begin_copy_model_to>.


    New in version v2022-01-30-preview: The *tags* keyword argument'
  signature: 'get_copy_authorization(**kwargs: Any) -> TargetAuthorization'
  parameters:
  - name: model_id
    description: 'A unique ID for your copied model.

      If not specified, a model ID will be created for you.'
    types:
    - <xref:str>
  - name: description
    description: An optional description to add to the model.
    types:
    - <xref:str>
  - name: tags
    description: List of user defined key-value tag attributes associated with the
      model.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: A dictionary with values necessary for the copy authorization.
    types:
    - <xref:azure.ai.formrecognizer.TargetAuthorization>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.get_document_analysis_client
  name: get_document_analysis_client
  summary: Get an instance of a DocumentAnalysisClient from DocumentModelAdministrationClient.
  signature: 'get_document_analysis_client(**kwargs: Any) -> DocumentAnalysisClient'
  return:
    description: A DocumentAnalysisClient
    types:
    - <xref:azure.ai.formrecognizer.DocumentAnalysisClient>
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.get_model
  name: get_model
  summary: Get a model by its ID.
  signature: 'get_model(model_id: str, **kwargs: Any) -> DocumentModelDetails'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.str>
  return:
    description: DocumentModelDetails
    types:
    - <xref:azure.ai.formrecognizer.DocumentModelDetails>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  - type: azure.core.exceptions.ResourceNotFoundError
  examples:
  - "Get a model by its ID.<!--[!code-python[Main](les\\v3.2-beta\\sample_manage_models.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\_work\\\\1\\\\s\\\\\
    dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\\samples\\\\v3.2-beta\\\\\
    sample_manage_models.py\", \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\
    \n````python\n\n   my_model = document_model_admin_client.get_model(model_id=model.model_id)\n\
    \   print(\"\\nModel ID: {}\".format(my_model.model_id))\n   print(\"Description:\
    \ {}\".format(my_model.description))\n   print(\"Model created on: {}\".format(my_model.created_on))\n\
    \n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.get_operation
  name: get_operation
  summary: 'Get a document model operation by its ID.


    Get a document model operation associated with the Form Recognizer resource.

    Note that operation information only persists for 24 hours. If the operation was
    successful,

    the document model can be accessed using the <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.get_model>
    or <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.list_models>
    APIs.'
  signature: 'get_operation(operation_id: str, **kwargs: Any) -> DocumentModelOperationDetails'
  parameters:
  - name: operation_id
    description: The operation ID.
    isRequired: true
    types:
    - <xref:azure.ai.formrecognizer.str>
  return:
    description: DocumentModelOperationDetails
    types:
    - <xref:azure.ai.formrecognizer.DocumentModelOperationDetails>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Get a document model operation by its ID.<!--[!code-python[Main](les\\v3.2-beta\\\
    sample_get_operations.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\\\
    samples\\\\v3.2-beta\\\\sample_get_operations.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   # Get an operation by ID\n \
    \  if operations:\n       print(\"\\nGetting operation info by ID: {}\".format(operations[0].operation_id))\n\
    \       operation_info = document_model_admin_client.get_operation(operations[0].operation_id)\n\
    \       if operation_info.status == \"succeeded\":\n           print(\"My {} operation\
    \ is completed.\".format(operation_info.kind))\n           result = operation_info.result\n\
    \           print(\"Model ID: {}\".format(result.model_id))\n       elif operation_info.status\
    \ == \"failed\":\n           print(\"My {} operation failed.\".format(operation_info.kind))\n\
    \           error = operation_info.error\n           print(\"{}: {}\".format(error.code,\
    \ error.message))\n       else:\n           print(\"My operation status is {}\"\
    .format(operation_info.status))\n   else:\n       print(\"No operations found.\"\
    )\n\n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.get_resource_details
  name: get_resource_details
  summary: Get information about the models under the Form Recognizer resource.
  signature: 'get_resource_details(**kwargs: Any) -> ResourceDetails'
  return:
    description: Summary of models under the resource - model count and limit.
    types:
    - <xref:azure.ai.formrecognizer.ResourceDetails>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "Get model counts and limits under the Form Recognizer resource.<!--[!code-python[Main](les\\\
    v3.2-beta\\sample_manage_models.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\":\
    \ \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\
    \\samples\\\\v3.2-beta\\\\sample_manage_models.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   document_model_admin_client\
    \ = DocumentModelAdministrationClient(endpoint=endpoint, credential=AzureKeyCredential(key))\n\
    \n   account_info = document_model_admin_client.get_resource_details()\n   print(\"\
    Our resource has {} custom models, and we can have at most {} custom models\\\
    n\".format(\n       account_info.document_model_count, account_info.document_model_limit\n\
    \   ))\n\n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.list_models
  name: list_models
  summary: 'List information for each model, including its model ID,

    description, and when it was created.'
  signature: 'list_models(**kwargs: Any) -> ItemPaged[DocumentModelSummary]'
  return:
    description: Pageable of DocumentModelSummary.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.formrecognizer.DocumentModelSummary>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "List all models that were built successfully under the Form Recognizer resource.<!--[!code-python[Main](les\\\
    v3.2-beta\\sample_manage_models.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\":\
    \ \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\
    \\samples\\\\v3.2-beta\\\\sample_manage_models.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   models = document_model_admin_client.list_models()\n\
    \n   print(\"We have the following 'ready' models with IDs and descriptions:\"\
    )\n   for model in models:\n       print(\"{} | {}\".format(model.model_id, model.description))\n\
    \n   ````\n"
- uid: azure.ai.formrecognizer.DocumentModelAdministrationClient.list_operations
  name: list_operations
  summary: 'List information for each document model operation.


    Lists all document model operations associated with the Form Recognizer resource.

    Note that operation information only persists for 24 hours. If the operation was
    successful,

    the document model can be accessed using the <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.get_model>
    or <xref:azure.ai.formrecognizer.DocumentModelAdministrationClient.list_models>
    APIs.'
  signature: 'list_operations(**kwargs: Any) -> ItemPaged[DocumentModelOperationSummary]'
  return:
    description: A pageable of DocumentModelOperationSummary.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.formrecognizer.DocumentModelOperationSummary>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "List all document model operations in the past 24 hours.<!--[!code-python[Main](les\\\
    v3.2-beta\\sample_get_operations.py )]-->\n\n<!-- literal_block {\"ids\": [],\
    \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\a\\\\_work\\\\1\\\\s\\\\dist_temp\\\\55\\\\azure-ai-formrecognizer-3.2.0b6\\\
    \\samples\\\\v3.2-beta\\\\sample_get_operations.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.core.credentials\
    \ import AzureKeyCredential\n   from azure.ai.formrecognizer import DocumentModelAdministrationClient\n\
    \n   endpoint = os.environ[\"AZURE_FORM_RECOGNIZER_ENDPOINT\"]\n   key = os.environ[\"\
    AZURE_FORM_RECOGNIZER_KEY\"]\n\n   document_model_admin_client = DocumentModelAdministrationClient(endpoint=endpoint,\
    \ credential=AzureKeyCredential(key))\n\n   operations = list(document_model_admin_client.list_operations())\n\
    \n   print(\"The following document model operations exist under my resource:\"\
    )\n   for operation in operations:\n       print(\"\\nOperation ID: {}\".format(operation.operation_id))\n\
    \       print(\"Operation kind: {}\".format(operation.kind))\n       print(\"\
    Operation status: {}\".format(operation.status))\n       print(\"Operation percent\
    \ completed: {}\".format(operation.percent_completed))\n       print(\"Operation\
    \ created on: {}\".format(operation.created_on))\n       print(\"Operation last\
    \ updated on: {}\".format(operation.last_updated_on))\n       print(\"Resource\
    \ location of successful operation: {}\".format(operation.resource_location))\n\
    \n   ````\n"
