### YamlMime:PythonClass
uid: azure.purview.catalog.aio.PurviewCatalogClient
name: PurviewCatalogClient
fullName: azure.purview.catalog.aio.PurviewCatalogClient
module: azure.purview.catalog.aio
inheritances:
- builtins.object
summary: Purview Catalog Service is a fully managed cloud service whose users can
  discover the data sources they need and understand the data sources they find. At
  the same time, Data Catalog helps organizations get more value from their existing
  investments. This spec defines REST API of Purview Catalog Service.
constructor:
  syntax: 'PurviewCatalogClient(credential: AsyncTokenCredential, endpoint: str, **kwargs:
    Any) -> None'
  parameters:
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: endpoint
    description: 'The catalog endpoint of your Purview account. Example: [https:/](https:/)/{accountName}.catalog.purview.azure.com.'
    isRequired: true
    types:
    - <xref:str>
methods:
- uid: azure.purview.catalog.aio.PurviewCatalogClient.close
  name: close
  signature: close() -> None
- uid: azure.purview.catalog.aio.PurviewCatalogClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    We have helper methods to create requests specific to this service in *azure.purview.catalog.rest*.

    Use these helper methods to create the request you pass to this method. See our
    example below:



    ```


    >>> from azure.purview.catalog.rest import build_create_or_update_request

    >>> request = build_create_or_update_request(json, content)

    <HttpRequest [POST], url: ''/atlas/v2/entity''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)


    For advanced cases, you can also create your own <xref:azure.purview.catalog.core.rest.HttpRequest>

    and pass it in.'
  signature: 'send_request(http_request: azure.purview.catalog.core.rest._rest_py3.HttpRequest,
    **kwargs: Any) -> azure.purview.catalog.core.rest._rest_py3.AsyncHttpResponse'
  parameters:
  - name: http_request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.purview.catalog.core.rest.HttpRequest>
  - name: stream_response
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.purview.catalog.core.rest.AsyncHttpResponse>
