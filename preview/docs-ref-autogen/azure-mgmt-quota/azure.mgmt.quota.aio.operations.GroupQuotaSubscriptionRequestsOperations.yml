### YamlMime:PythonClass
uid: azure.mgmt.quota.aio.operations.GroupQuotaSubscriptionRequestsOperations
name: GroupQuotaSubscriptionRequestsOperations
fullName: azure.mgmt.quota.aio.operations.GroupQuotaSubscriptionRequestsOperations
module: azure.mgmt.quota.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.quota.aio.QuotaMgmtClient>'s\n\
  >\n> <xref:group_quota_subscription_requests> attribute.\n>"
constructor:
  syntax: GroupQuotaSubscriptionRequestsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.quota.aio.operations.GroupQuotaSubscriptionRequestsOperations.get
  name: get
  summary: 'Get the status of a single subscriptionId request by requestId. The Async
    pattern will be used,

    if we determine the request is taking longer, else it can return 200 response
    as response to

    the subscription add API call.


    Get API to check the status of a subscriptionIds request by requestId.  Use the
    polling API -

    OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after
    duration

    in seconds to check the intermediate status. This API provides the finals status
    with the

    request details and status.'
  signature: 'async get(management_group_id: str, group_quota_name: str, request_id_parameter:
    str, **kwargs: Any) -> GroupQuotaSubscriptionRequestStatus'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: request_id_parameter
    description: Request Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GroupQuotaSubscriptionRequestStatus or the result of cls(response)
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotaSubscriptionRequestStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.aio.operations.GroupQuotaSubscriptionRequestsOperations.list
  name: list
  summary: 'List the status of all requests to add subscriptionIds to the GroupQuotasEntity.


    List API to check the status of a subscriptionId requests by requestId. Request
    history is

    maintained for 1 year.'
  signature: 'list(management_group_id: str, group_quota_name: str, **kwargs: Any)
    -> AsyncIterable[GroupQuotaSubscriptionRequestStatus]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either GroupQuotaSubscriptionRequestStatus
      or the result

      of cls(response)'
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.quota.models.GroupQuotaSubscriptionRequestStatus>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.quota.aio.operations.GroupQuotaSubscriptionRequestsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.quota.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\quota\\models\\__init__.py'>
