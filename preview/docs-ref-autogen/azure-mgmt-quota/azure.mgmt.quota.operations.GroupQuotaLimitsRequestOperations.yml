### YamlMime:PythonClass
uid: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations
name: GroupQuotaLimitsRequestOperations
fullName: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations
module: azure.mgmt.quota.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.quota.QuotaMgmtClient>'s\n\
  >\n> <xref:group_quota_limits_request> attribute.\n>"
constructor:
  syntax: GroupQuotaLimitsRequestOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations.begin_update
  name: begin_update
  summary: 'Create the GroupQuota requests for a specific ResourceProvider/Location/Resource.


    Create the GroupQuota requests for a specific ResourceProvider/Location/Resource.
    The

    resourceName properties are specified in the request body. Only 1 resource quota
    can be

    requested. Please note that patch request creates a new groupQuota request.

    Use the polling API - OperationsStatus URI specified in Azure-AsyncOperation header
    field, with

    retry-after duration in seconds to check the intermediate status. This API provides
    the finals

    status with the request details and status.'
  signature: 'begin_update(management_group_id: str, group_quota_name: str, resource_provider_name:
    str, location: str, group_quota_request: _models.GroupQuotaLimitList | None =
    None, *, content_type: str = ''application/json'', **kwargs: Any) -> LROPoller[_models.GroupQuotaLimitList]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_name
    description: 'The resource provider name, such as - Microsoft.Compute.

      Currently only Microsoft.Compute resource provider supports this API. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: The name of the Azure region. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_request
    description: 'The GroupQuotaRequest body details for specific

      resourceProvider/location/resources. Is either a GroupQuotaLimitList type or
      a IO[bytes] type.

      Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotaLimitList>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either GroupQuotaLimitList
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.GroupQuotaLimitList>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations.get
  name: get
  summary: 'Get the status of a single GroupQuota request by requestId.


    Get API to check the status of a GroupQuota request by requestId.'
  signature: 'get(management_group_id: str, group_quota_name: str, request_id_parameter:
    str, **kwargs: Any) -> SubmittedResourceRequestStatus'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: request_id_parameter
    description: Request Id. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SubmittedResourceRequestStatus or the result of cls(response)
    types:
    - <xref:azure.mgmt.quota.models.SubmittedResourceRequestStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations.list
  name: list
  summary: 'Get the status of a single GroupQuota request by requestId.


    Get API to check the status of a GroupQuota request by requestId.'
  signature: 'list(management_group_id: str, group_quota_name: str, resource_provider_name:
    str, filter: str, **kwargs: Any) -> Iterable[SubmittedResourceRequestStatus]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_name
    description: 'The resource provider name, such as - Microsoft.Compute.

      Currently only Microsoft.Compute resource provider supports this API. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'location eq {location} and resource eq {resourceName}

      Example: $filter=location eq eastus and resourceName eq cores. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either SubmittedResourceRequestStatus
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.quota.models.SubmittedResourceRequestStatus>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.quota.operations.GroupQuotaLimitsRequestOperations.models
  name: models
  signature: models = <module 'azure.mgmt.quota.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\quota\\models\\__init__.py'>
