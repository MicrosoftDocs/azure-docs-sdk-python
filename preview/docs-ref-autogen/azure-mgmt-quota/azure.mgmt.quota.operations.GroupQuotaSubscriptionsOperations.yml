### YamlMime:PythonClass
uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations
name: GroupQuotaSubscriptionsOperations
fullName: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations
module: azure.mgmt.quota.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.quota.QuotaMgmtClient>'s\n\
  >\n> <xref:group_quota_subscriptions> attribute.\n>"
constructor:
  syntax: GroupQuotaSubscriptionsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Adds subscription to the GroupQuotas.


    Adds a subscription to GroupQuotas. The subscriptions will be validated based
    on the

    additionalAttributes defined in the GroupQuota. The additionalAttributes works
    as filter for

    the subscriptions, which can be included in the GroupQuotas. The request''s TenantId
    is

    validated against the subscription''s TenantId.'
  signature: 'begin_create_or_update(management_group_id: str, group_quota_name: str,
    **kwargs: Any) -> LROPoller[GroupQuotaSubscriptionId]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either GroupQuotaSubscriptionId
      or An instance

      of LROPoller that returns either LROResponse or the result of cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.GroupQuotaSubscriptionId>]
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.LROResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.begin_delete
  name: begin_delete
  summary: 'Removes the subscription from GroupQuotas.


    Removes the subscription from GroupQuotas. The request''s TenantId is validated
    against the

    subscription''s TenantId.'
  signature: 'begin_delete(management_group_id: str, group_quota_name: str, **kwargs:
    Any) -> LROPoller[None]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.begin_update
  name: begin_update
  summary: 'Updates the GroupQuotas with the subscription to add to the subscriptions
    list.


    Updates the GroupQuotas with the subscription to add to the subscriptions list.
    The

    subscriptions will be validated if additionalAttributes are defined in the GroupQuota.
    The

    request''s TenantId is validated against the subscription''s TenantId.'
  signature: 'begin_update(management_group_id: str, group_quota_name: str, **kwargs:
    Any) -> LROPoller[GroupQuotaSubscriptionId]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An instance of LROPoller that returns either GroupQuotaSubscriptionId
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.quota.models.GroupQuotaSubscriptionId>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.get
  name: get
  summary: 'Returns the subscriptionId along with its provisioning state for being
    associated with the

    GroupQuotas.


    Returns the subscriptionIds along with its provisioning state for being associated
    with the

    GroupQuota. If the subscription is not a member of GroupQuota, it will return
    404, else 200.'
  signature: 'get(management_group_id: str, group_quota_name: str, **kwargs: Any)
    -> GroupQuotaSubscriptionId'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: GroupQuotaSubscriptionId or the result of cls(response)
    types:
    - <xref:azure.mgmt.quota.models.GroupQuotaSubscriptionId>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.list
  name: list
  summary: 'Returns a list of the subscriptionIds for the GroupQuotas.


    Returns a list of the subscriptionIds associated with the GroupQuotas.'
  signature: 'list(management_group_id: str, group_quota_name: str, **kwargs: Any)
    -> Iterable[GroupQuotaSubscriptionId]'
  parameters:
  - name: management_group_id
    description: Management Group Id. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: group_quota_name
    description: 'The GroupQuota name. The name should be unique for the provided

      context tenantId/MgId. Required.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either GroupQuotaSubscriptionId or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.quota.models.GroupQuotaSubscriptionId>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.quota.operations.GroupQuotaSubscriptionsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.quota.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\quota\\models\\__init__.py'>
