### YamlMime:PythonPackage
uid: azure.purview.scanning.rest.scan_rulesets
name: scan_rulesets
fullName: azure.purview.scanning.rest.scan_rulesets
type: import
functions:
- uid: azure.purview.scanning.rest.scan_rulesets.build_create_or_update_request
  name: build_create_or_update_request
  summary: 'Creates or Updates a scan ruleset.


    See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
    for how to incorporate this request builder into your code flow.'
  signature: 'build_create_or_update_request(scan_ruleset_name: str, *, json: Optional[Any]
    = None, content: Optional[Any] = None, **kwargs: Any) -> azure.purview.scanning.core.rest._rest_py3.HttpRequest'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  - name: json
    types:
    - <xref:Any>
  - name: content
    types:
    - <xref:Any>
  return:
    description: 'Returns an <xref:azure.purview.scanning.core.rest.HttpRequest> that
      you will pass to the client''s *send_request* method.

      See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
      for how to incorporate this response into your code flow.'
    types:
    - <xref:azure.purview.scanning.core.rest.HttpRequest>
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # kind template as part of your input body\n   kind = 'AdlsGen1ScanRuleset'\
    \ or 'AdlsGen2ScanRuleset' or 'AmazonAccountScanRuleset' or 'AmazonPostgreSqlScanRuleset'\
    \ or 'AmazonS3ScanRuleset' or 'AmazonSqlScanRuleset' or 'AzureCosmosDbScanRuleset'\
    \ or 'AzureDataExplorerScanRuleset' or 'AzureFileServiceScanRuleset' or 'AzureMySqlScanRuleset'\
    \ or 'AzurePostgreSqlScanRuleset' or 'AzureResourceGroupScanRuleset' or 'AzureSqlDataWarehouseScanRuleset'\
    \ or 'AzureSqlDatabaseScanRuleset' or 'AzureSqlDatabaseManagedInstanceScanRuleset'\
    \ or 'AzureStorageScanRuleset' or 'AzureSubscriptionScanRuleset' or 'AzureSynapseScanRuleset'\
    \ or 'AzureSynapseWorkspaceScanRuleset' or 'OracleScanRuleset' or 'PowerBIScanRuleset'\
    \ or 'SapEccScanRuleset' or 'SapS4HanaScanRuleset' or 'SqlServerDatabaseScanRuleset'\
    \ or 'TeradataScanRuleset'\n\n   # JSON input template you can fill out and use\
    \ as your `json` input.\n   json = {\n       \"kind\": \"ScanRuleset\"\n   }\n\
    \n\n   # response body for status code(s): 200, 201\n   response_body == {\n \
    \      \"kind\": \"ScanRuleset\"\n   }\n   ````\n"
- uid: azure.purview.scanning.rest.scan_rulesets.build_delete_request
  name: build_delete_request
  summary: 'Deletes a scan ruleset.


    See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
    for how to incorporate this request builder into your code flow.'
  signature: 'build_delete_request(scan_ruleset_name: str, **kwargs: Any) -> azure.purview.scanning.core.rest._rest_py3.HttpRequest'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'Returns an <xref:azure.purview.scanning.core.rest.HttpRequest> that
      you will pass to the client''s *send_request* method.

      See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
      for how to incorporate this response into your code flow.'
    types:
    - <xref:azure.purview.scanning.core.rest.HttpRequest>
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response_body == {\n       \"\
    kind\": \"ScanRuleset\"\n   }\n   ````\n"
- uid: azure.purview.scanning.rest.scan_rulesets.build_get_request
  name: build_get_request
  summary: 'Get a scan ruleset.


    See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
    for how to incorporate this request builder into your code flow.'
  signature: 'build_get_request(scan_ruleset_name: str, **kwargs: Any) -> azure.purview.scanning.core.rest._rest_py3.HttpRequest'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'Returns an <xref:azure.purview.scanning.core.rest.HttpRequest> that
      you will pass to the client''s *send_request* method.

      See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
      for how to incorporate this response into your code flow.'
    types:
    - <xref:azure.purview.scanning.core.rest.HttpRequest>
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response_body == {\n       \"\
    kind\": \"ScanRuleset\"\n   }\n   ````\n"
- uid: azure.purview.scanning.rest.scan_rulesets.build_list_all_request
  name: build_list_all_request
  summary: 'List scan rulesets in Data catalog.


    See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
    for how to incorporate this request builder into your code flow.'
  signature: 'build_list_all_request(**kwargs: Any) -> azure.purview.scanning.core.rest._rest_py3.HttpRequest'
  return:
    description: 'Returns an <xref:azure.purview.scanning.core.rest.HttpRequest> that
      you will pass to the client''s *send_request* method.

      See [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)
      for how to incorporate this response into your code flow.'
    types:
    - <xref:azure.purview.scanning.core.rest.HttpRequest>
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response_body == {\n       \"\
    count\": \"long (optional)\",\n       \"nextLink\": \"str (optional)\",\n    \
    \   \"value\": [\n           {\n               \"kind\": \"ScanRuleset\"\n   \
    \        }\n       ]\n   }\n   ````\n"
