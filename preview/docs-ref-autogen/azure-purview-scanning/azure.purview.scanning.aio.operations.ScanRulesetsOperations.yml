### YamlMime:PythonClass
uid: azure.purview.scanning.aio.operations.ScanRulesetsOperations
name: ScanRulesetsOperations
fullName: azure.purview.scanning.aio.operations.ScanRulesetsOperations
module: azure.purview.scanning.aio.operations
inheritances:
- builtins.object
summary: 'ScanRulesetsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ScanRulesetsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
methods:
- uid: azure.purview.scanning.aio.operations.ScanRulesetsOperations.create_or_update
  name: create_or_update
  summary: Creates or Updates a scan ruleset.
  signature: 'create_or_update(scan_ruleset_name: str, body: Any = None, **kwargs:
    Any) -> Any'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  - name: body
    isRequired: true
    types:
    - <xref:Any>
  return:
    description: JSON object
    types:
    - <xref:Any>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   kind = 'AdlsGen1ScanRuleset' or 'AdlsGen2ScanRuleset' or 'AmazonAccountScanRuleset'\
    \ or 'AmazonPostgreSqlScanRuleset' or 'AmazonS3ScanRuleset' or 'AmazonSqlScanRuleset'\
    \ or 'AzureCosmosDbScanRuleset' or 'AzureDataExplorerScanRuleset' or 'AzureFileServiceScanRuleset'\
    \ or 'AzureMySqlScanRuleset' or 'AzurePostgreSqlScanRuleset' or 'AzureResourceGroupScanRuleset'\
    \ or 'AzureSqlDataWarehouseScanRuleset' or 'AzureSqlDatabaseScanRuleset' or 'AzureSqlDatabaseManagedInstanceScanRuleset'\
    \ or 'AzureStorageScanRuleset' or 'AzureSubscriptionScanRuleset' or 'AzureSynapseScanRuleset'\
    \ or 'AzureSynapseWorkspaceScanRuleset' or 'OracleScanRuleset' or 'PowerBIScanRuleset'\
    \ or 'SapEccScanRuleset' or 'SapS4HanaScanRuleset' or 'SqlServerDatabaseScanRuleset'\
    \ or 'TeradataScanRuleset'\n\n   # JSON input template you can fill out and use\
    \ as your body input.\n   body = {\n       \"id\": \"str\",  # Optional.\n   \
    \    \"name\": \"str\",  # Optional.\n       \"scanRulesetType\": \"str\",  #\
    \ Optional. Possible values include: \"Custom\", \"System\".\n       \"status\"\
    : \"str\",  # Optional. Possible values include: \"Enabled\", \"Disabled\".\n\
    \       \"version\": 0,  # Optional.\n       kind: ScanRuleset\n   }\n\n   # response\
    \ body for status code(s): 200, 201\n   response.json() == {\n       \"id\": \"\
    str\",  # Optional.\n       \"name\": \"str\",  # Optional.\n       \"scanRulesetType\"\
    : \"str\",  # Optional. Possible values include: \"Custom\", \"System\".\n   \
    \    \"status\": \"str\",  # Optional. Possible values include: \"Enabled\", \"\
    Disabled\".\n       \"version\": 0,  # Optional.\n       kind: ScanRuleset\n \
    \  }\n   ````\n"
- uid: azure.purview.scanning.aio.operations.ScanRulesetsOperations.delete
  name: delete
  summary: Deletes a scan ruleset.
  signature: 'delete(scan_ruleset_name: str, **kwargs: Any) -> Optional[Any]'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:Any>
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    id\": \"str\",  # Optional.\n       \"name\": \"str\",  # Optional.\n       \"\
    scanRulesetType\": \"str\",  # Optional. Possible values include: \"Custom\",\
    \ \"System\".\n       \"status\": \"str\",  # Optional. Possible values include:\
    \ \"Enabled\", \"Disabled\".\n       \"version\": 0,  # Optional.\n       kind:\
    \ ScanRuleset\n   }\n   ````\n"
- uid: azure.purview.scanning.aio.operations.ScanRulesetsOperations.get
  name: get
  summary: Get a scan ruleset.
  signature: 'get(scan_ruleset_name: str, **kwargs: Any) -> Any'
  parameters:
  - name: scan_ruleset_name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:Any>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    id\": \"str\",  # Optional.\n       \"name\": \"str\",  # Optional.\n       \"\
    scanRulesetType\": \"str\",  # Optional. Possible values include: \"Custom\",\
    \ \"System\".\n       \"status\": \"str\",  # Optional. Possible values include:\
    \ \"Enabled\", \"Disabled\".\n       \"version\": 0,  # Optional.\n       kind:\
    \ ScanRuleset\n   }\n   ````\n"
- uid: azure.purview.scanning.aio.operations.ScanRulesetsOperations.list_all
  name: list_all
  summary: List scan rulesets in Data catalog.
  signature: 'list_all(**kwargs: Any) -> AsyncIterable[Any]'
  return:
    description: An iterator like instance of JSON object
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:Any>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response.json() == {\n       \"\
    count\": 0.0,  # Optional.\n       \"nextLink\": \"str\",  # Optional.\n     \
    \  \"value\": [\n           {\n               \"id\": \"str\",  # Optional.\n\
    \               \"name\": \"str\",  # Optional.\n               \"scanRulesetType\"\
    : \"str\",  # Optional. Possible values include: \"Custom\", \"System\".\n   \
    \            \"status\": \"str\",  # Optional. Possible values include: \"Enabled\"\
    , \"Disabled\".\n               \"version\": 0,  # Optional.\n               kind:\
    \ ScanRuleset\n           }\n       ]\n   }\n   ````\n"
