### YamlMime:PythonClass
uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary
name: EntityRecognitionEvalSummary
fullName: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary
module: azure.ai.textanalytics.authoring.models
summary: Represents the evaluation summary for a custom entity recognition project.
constructor:
  syntax: 'EntityRecognitionEvalSummary(*args: Any, **kwargs: Any)'
variables:
- description: 'Represents the confusion matrix between two entities (the two entities

    can be the same). The matrix is between the entity that was labelled and the entity
    that was

    predicted. Required.'
  name: confusion_matrix
  types:
  - <xref:dict>[<xref:str>, <xref:azure.ai.textanalytics.authoring.models.ConfusionMatrixRow>]
- description: Represents the entities evaluation. Required.
  name: entities
  types:
  - <xref:dict>[<xref:str>, <xref:azure.ai.textanalytics.authoring.models.EntityEvalSummary>]
- description: 'Represents the micro F1. Expected value is a float between 0 and 1
    inclusive.

    Required.'
  name: micro_f1
  types:
  - <xref:float>
- description: 'Represents the micro precision. Expected value is a float between
    0 and

    1 inclusive. Required.'
  name: micro_precision
  types:
  - <xref:float>
- description: 'Represents the micro recall. Expected value is a float between 0 and
    1

    inclusive. Required.'
  name: micro_recall
  types:
  - <xref:float>
- description: 'Represents the macro F1. Expected value is a float between 0 and 1
    inclusive.

    Required.'
  name: macro_f1
  types:
  - <xref:float>
- description: 'Represents the macro precision. Expected value is a float between
    0 and

    1 inclusive. Required.'
  name: macro_precision
  types:
  - <xref:float>
- description: 'Represents the macro recall. Expected value is a float between 0 and
    1

    inclusive. Required.'
  name: macro_recall
  types:
  - <xref:float>
methods:
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> tuple[str, Any]
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.confusion_matrix
  name: confusion_matrix
  summary: 'Represents the confusion matrix between two entities (the two entities
    can be the same). The

    matrix is between the entity that was labelled and the entity that was predicted.
    Required.'
  signature: 'confusion_matrix: dict[str, ''_models.ConfusionMatrixRow'']'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.entities
  name: entities
  summary: Represents the entities evaluation. Required.
  signature: 'entities: dict[str, ''_models.EntityEvalSummary'']'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.macro_f1
  name: macro_f1
  summary: Represents the macro F1. Expected value is a float between 0 and 1 inclusive.
    Required.
  signature: 'macro_f1: float'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.macro_precision
  name: macro_precision
  summary: Represents the macro precision. Expected value is a float between 0 and
    1 inclusive. Required.
  signature: 'macro_precision: float'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.macro_recall
  name: macro_recall
  summary: Represents the macro recall. Expected value is a float between 0 and 1
    inclusive. Required.
  signature: 'macro_recall: float'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.micro_f1
  name: micro_f1
  summary: Represents the micro F1. Expected value is a float between 0 and 1 inclusive.
    Required.
  signature: 'micro_f1: float'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.micro_precision
  name: micro_precision
  summary: Represents the micro precision. Expected value is a float between 0 and
    1 inclusive. Required.
  signature: 'micro_precision: float'
- uid: azure.ai.textanalytics.authoring.models.EntityRecognitionEvalSummary.micro_recall
  name: micro_recall
  summary: Represents the micro recall. Expected value is a float between 0 and 1
    inclusive. Required.
  signature: 'micro_recall: float'
