### YamlMime:PythonClass
uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient
name: TextAuthoringProjectClient
fullName: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient
module: azure.ai.textanalytics.authoring.aio
summary: Initialize a TextAuthoringProjectClient.
constructor:
  syntax: 'TextAuthoringProjectClient(endpoint: str, credential: AzureKeyCredential
    | AsyncTokenCredential, *, api_version: str | None = None, project_name: str,
    **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoint, e.g.

      "[https:/](https:/)/<resource>.cognitiveservices.azure.com".'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential used to authenticate requests to the service.
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'The API version to use for this operation.

      Default value is `2025-05-15-preview`.

      Note that overriding this default value may result in unsupported behavior.'
    defaultValue: None
    types:
    - <xref:str>
  - name: project_name
    description: The name of the project to scope operations. Required.
    types:
    - <xref:str>
methods:
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.close
  name: close
  signature: async close() -> None
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
attributes:
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.deployment
  name: deployment
  summary: Deployment operations group
  signature: 'deployment: DeploymentOperations'
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.exported_model
  name: exported_model
  summary: Exported model operations group
  signature: 'exported_model: ExportedModelOperations'
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.project
  name: project
  summary: Project operations group
  signature: 'project: ProjectOperations'
- uid: azure.ai.textanalytics.authoring.aio.TextAuthoringProjectClient.trained_model
  name: trained_model
  summary: Trained model operations group
  signature: 'trained_model: TrainedModelOperations'
