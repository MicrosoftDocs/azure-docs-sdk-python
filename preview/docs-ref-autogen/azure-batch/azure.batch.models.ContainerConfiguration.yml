### YamlMime:PythonClass
uid: azure.batch.models.ContainerConfiguration
name: ContainerConfiguration
fullName: azure.batch.models.ContainerConfiguration
module: azure.batch.models
summary: 'The configuration for container-enabled Pools.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'ContainerConfiguration(*args: Any, **kwargs: Any)'
variables:
- description: 'The container technology to be used. Required. Known values are: "dockerCompatible"

    and "criCompatible".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.batch.models.ContainerType>
- description: 'The collection of container Image names. This is the full Image

    reference, as would be specified to "docker pull". An Image will be sourced from
    the default

    Docker registry unless the Image is fully qualified with an alternative registry.'
  name: container_image_names
  types:
  - <xref:list>[<xref:str>]
- description: 'Additional private registries from which containers can be pulled.

    If any Images must be downloaded from a private registry which requires credentials,
    then those

    credentials must be provided here.'
  name: container_registries
  types:
  - <xref:list>[<xref:azure.batch.models.ContainerRegistryReference>]
methods:
- uid: azure.batch.models.ContainerConfiguration.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.ContainerConfiguration.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.ContainerConfiguration.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.ContainerConfiguration.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.ContainerConfiguration.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.ContainerConfiguration.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.ContainerConfiguration.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.ContainerConfiguration.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.ContainerConfiguration.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.ContainerConfiguration.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.ContainerConfiguration.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.ContainerConfiguration.container_image_names
  name: container_image_names
  summary: 'The collection of container Image names. This is the full Image reference,
    as would be

    specified to "docker pull". An Image will be sourced from the default Docker registry
    unless

    the Image is fully qualified with an alternative registry.'
  signature: 'container_image_names: List[str] | None'
- uid: azure.batch.models.ContainerConfiguration.container_registries
  name: container_registries
  summary: 'Additional private registries from which containers can be pulled. If
    any Images must be

    downloaded from a private registry which requires credentials, then those credentials
    must be

    provided here.'
  signature: 'container_registries: List[_models.ContainerRegistryReference] | None'
- uid: azure.batch.models.ContainerConfiguration.type
  name: type
  summary: '"dockerCompatible" and

    "criCompatible".'
  signature: 'type: str | _models.ContainerType'
