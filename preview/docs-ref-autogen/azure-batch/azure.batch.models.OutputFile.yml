### YamlMime:PythonClass
uid: azure.batch.models.OutputFile
name: OutputFile
fullName: azure.batch.models.OutputFile
module: azure.batch.models
summary: 'On every file uploads, Batch service writes two log files to the compute
  node,

  ''fileuploadout.txt'' and ''fileuploaderr.txt''. These log files are used to learn
  more about a

  specific failure.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'OutputFile(*args: Any, **kwargs: Any)'
variables:
- description: 'A pattern indicating which file(s) to upload. Both relative and absolute

    paths are supported. Relative paths are relative to the Task working directory.
    The following

    wildcards are supported: * matches 0 or more characters (for example pattern abc*
    would match

    abc or abcdef), ** matches any directory, ? matches any single character, [abc]
    matches one

    character in the brackets, and [a-c] matches one character in the range. Brackets
    can include a

    negation to match any character not specified (for example [!abc] matches any
    character but a,

    b, or c). If a file name starts with "." it is ignored by default but may be matched
    by

    specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif
    will). A simple

    example: >>**<<*.txt matches any file that does not start in ''.'' and ends with
    .txt in the Task

    working directory or any subdirectory. If the filename contains a wildcard character
    it can be

    escaped using brackets (for example abc[*] would match a file named abc*). Note
    that both

    and / are treated as directory separators on Windows, but only / is on Linux.
    Environment

    variables (%var% on Windows or $var on Linux) are expanded prior to the pattern
    being applied.

    Required.'
  name: file_pattern
  types:
  - <xref:str>
- description: The destination for the output file(s). Required.
  name: destination
  types:
  - <xref:azure.batch.models.OutputFileDestination>
- description: 'Additional options for the upload operation, including under what

    conditions to perform the upload. Required.'
  name: upload_options
  types:
  - <xref:azure.batch.models.OutputFileUploadConfig>
methods:
- uid: azure.batch.models.OutputFile.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.OutputFile.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.OutputFile.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.OutputFile.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.OutputFile.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.OutputFile.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.OutputFile.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.OutputFile.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.OutputFile.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.OutputFile.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.OutputFile.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.OutputFile.destination
  name: destination
  summary: The destination for the output file(s). Required.
  signature: 'destination: _models.OutputFileDestination'
- uid: azure.batch.models.OutputFile.file_pattern
  name: file_pattern
  summary: 'A pattern indicating which file(s) to upload. Both relative and absolute
    paths are supported.

    Relative paths are relative to the Task working directory. The following wildcards
    are

    supported: * matches 0 or more characters (for example pattern abc* would match
    abc or abcdef),

    ** matches any directory, ? matches any single character, [abc] matches one character
    in the

    brackets, and [a-c] matches one character in the range. Brackets can include a
    negation to

    match any character not specified (for example [!abc] matches any character but
    a, b, or c). If

    a file name starts with "." it is ignored by default but may be matched by specifying
    it

    explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple
    example: **     *.txt matches any file that does not start in ''.'' and ends with
    .txt in the Task working

    directory or any subdirectory. If the filename contains a wildcard character it
    can be escaped

    using brackets (for example abc[*] would match a file named abc*). Note that both
    and / are

    treated as directory separators on Windows, but only / is on Linux. Environment
    variables

    (%var% on Windows or $var on Linux) are expanded prior to the pattern being applied.
    Required.'
  signature: 'file_pattern: str'
- uid: azure.batch.models.OutputFile.upload_options
  name: upload_options
  summary: 'Additional options for the upload operation, including under what conditions
    to perform the

    upload. Required.'
  signature: 'upload_options: _models.OutputFileUploadConfig'
