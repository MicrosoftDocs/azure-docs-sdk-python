### YamlMime:PythonClass
uid: azure.batch.models.BatchSubtask
name: BatchSubtask
fullName: azure.batch.models.BatchSubtask
module: azure.batch.models
summary: Information about an Azure Batch subtask.
constructor:
  syntax: 'BatchSubtask(*args: Any, **kwargs: Any)'
variables:
- description: The ID of the subtask.
  name: id
  types:
  - <xref:int>
- description: Information about the Compute Node on which the subtask ran.
  name: node_info
  types:
  - <xref:azure.batch.models.BatchNodeInfo>
- description: 'The time at which the subtask started running. If the subtask has
    been

    restarted or retried, this is the most recent time at which the subtask started
    running.'
  name: start_time
  types:
  - <xref:datetime.datetime>
- description: 'The time at which the subtask completed. This property is set only
    if the

    subtask is in the Completed state.'
  name: end_time
  types:
  - <xref:datetime.datetime>
- description: 'The exit code of the program specified on the subtask command line.
    This

    property is set only if the subtask is in the completed state. In general, the
    exit code for a

    process reflects the specific convention implemented by the application developer
    for that

    process. If you use the exit code value to make decisions in your code, be sure
    that you know

    the exit code convention used by the application process. However, if the Batch
    service

    terminates the subtask (due to timeout, or user termination via the API) you may
    see an

    operating system-defined exit code.'
  name: exit_code
  types:
  - <xref:int>
- description: 'Information about the container under which the Task is executing.
    This

    property is set only if the Task runs in a container context.'
  name: container_info
  types:
  - <xref:azure.batch.models.BatchTaskContainerExecutionInfo>
- description: 'Information describing the Task failure, if any. This property is
    set only

    if the Task is in the completed state and encountered a failure.'
  name: failure_info
  types:
  - <xref:azure.batch.models.BatchTaskFailureInfo>
- description: 'The current state of the subtask. Known values are: "preparing", "running",
    and

    "completed".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchSubtaskState>
- description: The time at which the subtask entered its current state.
  name: state_transition_time
  types:
  - <xref:datetime.datetime>
- description: 'The previous state of the subtask. This property is not set if the

    subtask is in its initial running state. Known values are: "preparing", "running",
    and

    "completed".'
  name: previous_state
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchSubtaskState>
- description: 'The time at which the subtask entered its previous state.

    This property is not set if the subtask is in its initial running state.'
  name: previous_state_transition_time
  types:
  - <xref:datetime.datetime>
- description: 'The result of the Task execution. If the value is ''failed'', then
    the details of

    the failure can be found in the failureInfo property. Known values are: "success"
    and

    "failure".'
  name: result
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchTaskExecutionResult>
methods:
- uid: azure.batch.models.BatchSubtask.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchSubtask.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchSubtask.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchSubtask.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchSubtask.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchSubtask.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchSubtask.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchSubtask.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchSubtask.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchSubtask.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchSubtask.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchSubtask.container_info
  name: container_info
  summary: 'Information about the container under which the Task is executing. This
    property is set only if

    the Task runs in a container context.'
  signature: 'container_info: _models.BatchTaskContainerExecutionInfo | None'
- uid: azure.batch.models.BatchSubtask.end_time
  name: end_time
  summary: 'The time at which the subtask completed. This property is set only if
    the subtask is in the

    Completed state.'
  signature: 'end_time: datetime | None'
- uid: azure.batch.models.BatchSubtask.exit_code
  name: exit_code
  summary: 'The exit code of the program specified on the subtask command line. This
    property is set only

    if the subtask is in the completed state. In general, the exit code for a process
    reflects the

    specific convention implemented by the application developer for that process.
    If you use the

    exit code value to make decisions in your code, be sure that you know the exit
    code convention

    used by the application process. However, if the Batch service terminates the
    subtask (due to

    timeout, or user termination via the API) you may see an operating system-defined
    exit code.'
  signature: 'exit_code: int | None'
- uid: azure.batch.models.BatchSubtask.failure_info
  name: failure_info
  summary: 'Information describing the Task failure, if any. This property is set
    only if the Task is in

    the completed state and encountered a failure.'
  signature: 'failure_info: _models.BatchTaskFailureInfo | None'
- uid: azure.batch.models.BatchSubtask.id
  name: id
  summary: The ID of the subtask.
  signature: 'id: int | None'
- uid: azure.batch.models.BatchSubtask.node_info
  name: node_info
  summary: Information about the Compute Node on which the subtask ran.
  signature: 'node_info: _models.BatchNodeInfo | None'
- uid: azure.batch.models.BatchSubtask.previous_state
  name: previous_state
  summary: 'The previous state of the subtask. This property is not set if the subtask
    is in its initial

    running state. Known values are: "preparing", "running", and "completed".'
  signature: 'previous_state: str | _models.BatchSubtaskState | None'
- uid: azure.batch.models.BatchSubtask.previous_state_transition_time
  name: previous_state_transition_time
  summary: 'The time at which the subtask entered its previous state. This property
    is not set if the

    subtask is in its initial running state.'
  signature: 'previous_state_transition_time: datetime | None'
- uid: azure.batch.models.BatchSubtask.result
  name: result
  summary: 'The result of the Task execution. If the value is ''failed'', then the
    details of the failure can

    be found in the failureInfo property. Known values are: "success" and "failure".'
  signature: 'result: str | _models.BatchTaskExecutionResult | None'
- uid: azure.batch.models.BatchSubtask.start_time
  name: start_time
  summary: 'The time at which the subtask started running. If the subtask has been
    restarted or retried,

    this is the most recent time at which the subtask started running.'
  signature: 'start_time: datetime | None'
- uid: azure.batch.models.BatchSubtask.state
  name: state
  summary: '"preparing", "running", and

    "completed".'
  signature: 'state: str | _models.BatchSubtaskState | None'
- uid: azure.batch.models.BatchSubtask.state_transition_time
  name: state_transition_time
  summary: The time at which the subtask entered its current state.
  signature: 'state_transition_time: datetime | None'
