### YamlMime:PythonClass
uid: azure.batch.models.BatchTaskInfo
name: BatchTaskInfo
fullName: azure.batch.models.BatchTaskInfo
module: azure.batch.models
summary: 'Information about a Task running on a Compute Node.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BatchTaskInfo(*args: Any, **kwargs: Any)'
variables:
- description: The URL of the Task.
  name: task_url
  types:
  - <xref:str>
- description: The ID of the Job to which the Task belongs.
  name: job_id
  types:
  - <xref:str>
- description: The ID of the Task.
  name: task_id
  types:
  - <xref:str>
- description: The ID of the subtask if the Task is a multi-instance Task.
  name: subtask_id
  types:
  - <xref:int>
- description: 'The current state of the Task. Required. Known values are: "active",

    "preparing", "running", and "completed".'
  name: task_state
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchTaskState>
- description: Information about the execution of the Task.
  name: execution_info
  types:
  - <xref:azure.batch.models.BatchTaskExecutionInfo>
methods:
- uid: azure.batch.models.BatchTaskInfo.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchTaskInfo.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchTaskInfo.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchTaskInfo.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchTaskInfo.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchTaskInfo.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchTaskInfo.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskInfo.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchTaskInfo.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskInfo.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchTaskInfo.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchTaskInfo.execution_info
  name: execution_info
  summary: Information about the execution of the Task.
  signature: 'execution_info: _models.BatchTaskExecutionInfo | None'
- uid: azure.batch.models.BatchTaskInfo.job_id
  name: job_id
  summary: The ID of the Job to which the Task belongs.
  signature: 'job_id: str | None'
- uid: azure.batch.models.BatchTaskInfo.subtask_id
  name: subtask_id
  summary: The ID of the subtask if the Task is a multi-instance Task.
  signature: 'subtask_id: int | None'
- uid: azure.batch.models.BatchTaskInfo.task_id
  name: task_id
  summary: The ID of the Task.
  signature: 'task_id: str | None'
- uid: azure.batch.models.BatchTaskInfo.task_state
  name: task_state
  summary: '"active", "preparing",

    "running", and "completed".'
  signature: 'task_state: str | _models.BatchTaskState'
- uid: azure.batch.models.BatchTaskInfo.task_url
  name: task_url
  summary: The URL of the Task.
  signature: 'task_url: str | None'
