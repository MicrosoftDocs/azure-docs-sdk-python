### YamlMime:PythonClass
uid: azure.batch.models.MultiInstanceSettings
name: MultiInstanceSettings
fullName: azure.batch.models.MultiInstanceSettings
module: azure.batch.models
summary: 'Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI
  case,

  if any of the subtasks fail (for example due to exiting with a non-zero exit

  code) the entire multi-instance Task fails. The multi-instance Task is then

  terminated and retried, up to its retry limit.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'MultiInstanceSettings(*args: Any, **kwargs: Any)'
variables:
- description: 'The number of Compute Nodes required by the Task. If omitted, the

    default is 1.'
  name: number_of_instances
  types:
  - <xref:int>
- description: 'The command line to run on all the Compute Nodes to enable

    them to coordinate when the primary runs the main Task command. A typical coordination
    command

    line launches a background service and verifies that the service is ready to process
    inter-node

    messages. Required.'
  name: coordination_command_line
  types:
  - <xref:str>
- description: 'A list of files that the Batch service will download before

    running the coordination command line. The difference between common resource
    files and Task

    resource files is that common resource files are downloaded for all subtasks including
    the

    primary, whereas Task resource files are downloaded only for the primary. Also
    note that these

    resource files are not downloaded to the Task working directory, but instead are
    downloaded to

    the Task root directory (one directory above the working directory).  There is
    a maximum size

    for the list of resource files.  When the max size is exceeded, the request will
    fail and the

    response error code will be RequestEntityTooLarge. If this occurs, the collection
    of

    ResourceFiles must be reduced in size. This can be achieved using .zip files,
    Application

    Packages, or Docker Containers.'
  name: common_resource_files
  types:
  - <xref:list>[<xref:azure.batch.models.ResourceFile>]
methods:
- uid: azure.batch.models.MultiInstanceSettings.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.MultiInstanceSettings.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.MultiInstanceSettings.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.MultiInstanceSettings.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.MultiInstanceSettings.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.MultiInstanceSettings.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.MultiInstanceSettings.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.MultiInstanceSettings.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.MultiInstanceSettings.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.MultiInstanceSettings.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.MultiInstanceSettings.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.MultiInstanceSettings.common_resource_files
  name: common_resource_files
  summary: 'A list of files that the Batch service will download before running the
    coordination command

    line. The difference between common resource files and Task resource files is
    that common

    resource files are downloaded for all subtasks including the primary, whereas
    Task resource

    files are downloaded only for the primary. Also note that these resource files
    are not

    downloaded to the Task working directory, but instead are downloaded to the Task
    root directory

    (one directory above the working directory).  There is a maximum size for the
    list of resource

    files.  When the max size is exceeded, the request will fail and the response
    error code will

    be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must
    be reduced in

    size. This can be achieved using .zip files, Application Packages, or Docker Containers.'
  signature: 'common_resource_files: List[_models.ResourceFile] | None'
- uid: azure.batch.models.MultiInstanceSettings.coordination_command_line
  name: coordination_command_line
  summary: 'The command line to run on all the Compute Nodes to enable them to coordinate
    when the primary

    runs the main Task command. A typical coordination command line launches a background
    service

    and verifies that the service is ready to process inter-node messages. Required.'
  signature: 'coordination_command_line: str'
- uid: azure.batch.models.MultiInstanceSettings.number_of_instances
  name: number_of_instances
  summary: The number of Compute Nodes required by the Task. If omitted, the default
    is 1.
  signature: 'number_of_instances: int | None'
