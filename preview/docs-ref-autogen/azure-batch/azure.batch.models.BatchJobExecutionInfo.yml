### YamlMime:PythonClass
uid: azure.batch.models.BatchJobExecutionInfo
name: BatchJobExecutionInfo
fullName: azure.batch.models.BatchJobExecutionInfo
module: azure.batch.models
summary: 'Contains information about the execution of a Job in the Azure Batch service.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BatchJobExecutionInfo(*args: Any, **kwargs: Any)'
variables:
- description: 'The start time of the Job. This is the time at which the Job was created.

    Required.'
  name: start_time
  types:
  - <xref:datetime.datetime>
- description: 'The completion time of the Job. This property is set only if the Job
    is in the

    completed state.'
  name: end_time
  types:
  - <xref:datetime.datetime>
- description: 'The ID of the Pool to which this Job is assigned. This element contains
    the

    actual Pool where the Job is assigned. When you get Job details from the service,
    they also

    contain a poolInfo element, which contains the Pool configuration data from when
    the Job was

    added or updated. That poolInfo element may also contain a poolId element. If
    it does, the two

    IDs are the same. If it does not, it means the Job ran on an auto Pool, and this
    property

    contains the ID of that auto Pool.'
  name: pool_id
  types:
  - <xref:str>
- description: 'Details of any error encountered by the service in starting the Job.

    This property is not set if there was no error starting the Job.'
  name: scheduling_error
  types:
  - <xref:azure.batch.models.BatchJobSchedulingError>
- description: 'A string describing the reason the Job ended. This property is set

    only if the Job is in the completed state. If the Batch service terminates the
    Job, it sets the

    reason as follows: JMComplete - the Job Manager Task completed, and killJobOnCompletion
    was set

    to true. MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint.

    TerminateJobSchedule - the Job ran as part of a schedule, and the schedule terminated.

    AllTasksComplete - the Job''s onAllTasksComplete attribute is set to terminatejob,
    and all Tasks

    in the Job are complete. TaskFailed - the Job''s onTaskFailure attribute is set
    to

    performExitOptionsJobAction, and a Task in the Job failed with an exit condition
    that specified

    a jobAction of terminatejob. Any other string is a user-defined reason specified
    in a call to

    the ''Terminate a Job'' operation.'
  name: termination_reason
  types:
  - <xref:str>
methods:
- uid: azure.batch.models.BatchJobExecutionInfo.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchJobExecutionInfo.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchJobExecutionInfo.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchJobExecutionInfo.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchJobExecutionInfo.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchJobExecutionInfo.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchJobExecutionInfo.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobExecutionInfo.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchJobExecutionInfo.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobExecutionInfo.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchJobExecutionInfo.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchJobExecutionInfo.end_time
  name: end_time
  summary: The completion time of the Job. This property is set only if the Job is
    in the completed state.
  signature: 'end_time: datetime | None'
- uid: azure.batch.models.BatchJobExecutionInfo.pool_id
  name: pool_id
  summary: 'The ID of the Pool to which this Job is assigned. This element contains
    the actual Pool where

    the Job is assigned. When you get Job details from the service, they also contain
    a poolInfo

    element, which contains the Pool configuration data from when the Job was added
    or updated.

    That poolInfo element may also contain a poolId element. If it does, the two IDs
    are the same.

    If it does not, it means the Job ran on an auto Pool, and this property contains
    the ID of that

    auto Pool.'
  signature: 'pool_id: str | None'
- uid: azure.batch.models.BatchJobExecutionInfo.scheduling_error
  name: scheduling_error
  summary: 'Details of any error encountered by the service in starting the Job. This
    property is not set

    if there was no error starting the Job.'
  signature: 'scheduling_error: _models.BatchJobSchedulingError | None'
- uid: azure.batch.models.BatchJobExecutionInfo.start_time
  name: start_time
  summary: The start time of the Job. This is the time at which the Job was created.
    Required.
  signature: 'start_time: datetime'
- uid: azure.batch.models.BatchJobExecutionInfo.termination_reason
  name: termination_reason
  summary: 'A string describing the reason the Job ended. This property is set only
    if the Job is in the

    completed state. If the Batch service terminates the Job, it sets the reason as
    follows:

    JMComplete - the Job Manager Task completed, and killJobOnCompletion was set to
    true.

    MaxWallClockTimeExpiry - the Job reached its maxWallClockTime constraint. TerminateJobSchedule

    - the Job ran as part of a schedule, and the schedule terminated. AllTasksComplete
    - the Job''s

    onAllTasksComplete attribute is set to terminatejob, and all Tasks in the Job
    are complete.

    TaskFailed - the Job''s onTaskFailure attribute is set to performExitOptionsJobAction,
    and a

    Task in the Job failed with an exit condition that specified a jobAction of terminatejob.
    Any

    other string is a user-defined reason specified in a call to the ''Terminate a
    Job'' operation.'
  signature: 'termination_reason: str | None'
