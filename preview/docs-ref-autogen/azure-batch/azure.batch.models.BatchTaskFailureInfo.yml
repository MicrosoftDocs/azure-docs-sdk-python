### YamlMime:PythonClass
uid: azure.batch.models.BatchTaskFailureInfo
name: BatchTaskFailureInfo
fullName: azure.batch.models.BatchTaskFailureInfo
module: azure.batch.models
summary: 'Information about a Task failure.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BatchTaskFailureInfo(*args: Any, **kwargs: Any)'
variables:
- description: 'The category of the Task error. Required. Known values are: "usererror"
    and

    "servererror".'
  name: category
  types:
  - <xref:str>
  - <xref:azure.batch.models.ErrorCategory>
- description: 'An identifier for the Task error. Codes are invariant and are intended
    to be

    consumed programmatically.'
  name: code
  types:
  - <xref:str>
- description: 'A message describing the Task error, intended to be suitable for display
    in a

    user interface.'
  name: message
  types:
  - <xref:str>
- description: A list of additional details related to the error.
  name: details
  types:
  - <xref:list>[<xref:azure.batch.models.NameValuePair>]
methods:
- uid: azure.batch.models.BatchTaskFailureInfo.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchTaskFailureInfo.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchTaskFailureInfo.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchTaskFailureInfo.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchTaskFailureInfo.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchTaskFailureInfo.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchTaskFailureInfo.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskFailureInfo.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchTaskFailureInfo.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskFailureInfo.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchTaskFailureInfo.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchTaskFailureInfo.category
  name: category
  summary: '"usererror" and "servererror".'
  signature: 'category: str | _models.ErrorCategory'
- uid: azure.batch.models.BatchTaskFailureInfo.code
  name: code
  summary: 'An identifier for the Task error. Codes are invariant and are intended
    to be consumed

    programmatically.'
  signature: 'code: str | None'
- uid: azure.batch.models.BatchTaskFailureInfo.details
  name: details
  summary: A list of additional details related to the error.
  signature: 'details: List[_models.NameValuePair] | None'
- uid: azure.batch.models.BatchTaskFailureInfo.message
  name: message
  summary: A message describing the Task error, intended to be suitable for display
    in a user interface.
  signature: 'message: str | None'
