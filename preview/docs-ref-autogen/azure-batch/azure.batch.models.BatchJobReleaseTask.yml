### YamlMime:PythonClass
uid: azure.batch.models.BatchJobReleaseTask
name: BatchJobReleaseTask
fullName: azure.batch.models.BatchJobReleaseTask
module: azure.batch.models
summary: 'A Job Release Task to run on Job completion on any Compute Node where the
  Job has run.

  The Job Release Task runs when the Job ends, because of one of the following:

  The user calls the Terminate Job API, or the Delete Job API while the Job is

  still active, the Job''s maximum wall clock time constraint is reached, and the

  Job is still active, or the Job''s Job Manager Task completed, and the Job is

  configured to terminate when the Job Manager completes. The Job Release Task

  runs on each Node where Tasks of the Job have run and the Job Preparation Task

  ran and completed. If you reimage a Node after it has run the Job Preparation

  Task, and the Job ends without any further Tasks of the Job running on that

  Node (and hence the Job Preparation Task does not re-run), then the Job Release

  Task does not run on that Compute Node. If a Node reboots while the Job Release

  Task is still running, the Job Release Task runs again when the Compute Node

  starts up. The Job is not marked as complete until all Job Release Tasks have

  completed. The Job Release Task runs in the background. It does not occupy a

  scheduling slot; that is, it does not count towards the taskSlotsPerNode limit

  specified on the Pool.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BatchJobReleaseTask(*args: Any, **kwargs: Any)'
variables:
- description: 'A string that uniquely identifies the Job Release Task within the
    Job. The ID can

    contain any combination of alphanumeric characters including hyphens and underscores
    and cannot

    contain more than 64 characters. If you do not specify this property, the Batch
    service assigns

    a default value of ''jobrelease''. No other Task in the Job can have the same
    ID as the Job

    Release Task. If you try to submit a Task with the same id, the Batch service
    rejects the

    request with error code TaskIdSameAsJobReleaseTask; if you are calling the REST
    API directly,

    the HTTP status code is 409 (Conflict).'
  name: id
  types:
  - <xref:str>
- description: 'The command line of the Job Release Task. The command line does not
    run

    under a shell, and therefore cannot take advantage of shell features such as environment

    variable expansion. If you want to take advantage of such features, you should
    invoke the shell

    in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh
    -c MyCommand"

    in Linux. If the command line refers to file paths, it should use a relative path
    (relative to

    the Task working directory), or use the Batch provided environment variable

    ([https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables](https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)).

    Required.'
  name: command_line
  types:
  - <xref:str>
- description: 'The settings for the container under which the Job Release Task runs.

    When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR
    (the root

    of Azure Batch directories on the node) are mapped into the container, all Task
    environment

    variables are mapped into the container, and the Task command line is executed
    in the

    container. Files produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might
    not be

    reflected to the host disk, meaning that Batch file APIs will not be able to access
    those

    files.'
  name: container_settings
  types:
  - <xref:azure.batch.models.BatchTaskContainerSettings>
- description: 'A list of files that the Batch service will download to the Compute
    Node

    before running the command line.  There is a maximum size for the list of resource
    files.  When

    the max size is exceeded, the request will fail and the response error code will
    be

    RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be
    reduced in size.

    This can be achieved using .zip files, Application Packages, or Docker Containers.
    Files listed

    under this element are located in the Task''s working directory.'
  name: resource_files
  types:
  - <xref:list>[<xref:azure.batch.models.ResourceFile>]
- description: A list of environment variable settings for the Job Release Task.
  name: environment_settings
  types:
  - <xref:list>[<xref:azure.batch.models.EnvironmentSetting>]
- description: 'The maximum elapsed time that the Job Release Task may run on a

    given Compute Node, measured from the time the Task starts. If the Task does not
    complete

    within the time limit, the Batch service terminates it. The default value is 15
    minutes. You

    may not specify a timeout longer than 15 minutes. If you do, the Batch service
    rejects it with

    an error; if you are calling the REST API directly, the HTTP status code is 400
    (Bad Request).'
  name: max_wall_clock_time
  types:
  - <xref:datetime.timedelta>
- description: 'The minimum time to retain the Task directory for the Job Release
    Task on

    the Compute Node. After this time, the Batch service may delete the Task directory
    and all its

    contents. The default is 7 days, i.e. the Task directory will be retained for
    7 days unless the

    Compute Node is removed or the Job is deleted.'
  name: retention_time
  types:
  - <xref:datetime.timedelta>
- description: 'The user identity under which the Job Release Task runs. If omitted,
    the

    Task runs as a non-administrative user unique to the Task.'
  name: user_identity
  types:
  - <xref:azure.batch.models.UserIdentity>
methods:
- uid: azure.batch.models.BatchJobReleaseTask.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchJobReleaseTask.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchJobReleaseTask.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchJobReleaseTask.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchJobReleaseTask.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchJobReleaseTask.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchJobReleaseTask.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobReleaseTask.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchJobReleaseTask.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobReleaseTask.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchJobReleaseTask.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchJobReleaseTask.command_line
  name: command_line
  summary: 'The command line of the Job Release Task. The command line does not run
    under a shell, and

    therefore cannot take advantage of shell features such as environment variable
    expansion. If

    you want to take advantage of such features, you should invoke the shell in the
    command line,

    for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
    If the

    command line refers to file paths, it should use a relative path (relative to
    the Task working

    directory), or use the Batch provided environment variable

    ([https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables](https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)).

    Required.'
  signature: 'command_line: str'
- uid: azure.batch.models.BatchJobReleaseTask.container_settings
  name: container_settings
  summary: 'The settings for the container under which the Job Release Task runs.
    When this is specified,

    all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure
    Batch

    directories on the node) are mapped into the container, all Task environment variables
    are

    mapped into the container, and the Task command line is executed in the container.
    Files

    produced in the container outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected
    to the host

    disk, meaning that Batch file APIs will not be able to access those files.'
  signature: 'container_settings: _models.BatchTaskContainerSettings | None'
- uid: azure.batch.models.BatchJobReleaseTask.environment_settings
  name: environment_settings
  summary: A list of environment variable settings for the Job Release Task.
  signature: 'environment_settings: List[_models.EnvironmentSetting] | None'
- uid: azure.batch.models.BatchJobReleaseTask.id
  name: id
  summary: 'A string that uniquely identifies the Job Release Task within the Job.
    The ID can contain any

    combination of alphanumeric characters including hyphens and underscores and cannot
    contain

    more than 64 characters. If you do not specify this property, the Batch service
    assigns a

    default value of ''jobrelease''. No other Task in the Job can have the same ID
    as the Job Release

    Task. If you try to submit a Task with the same id, the Batch service rejects
    the request with

    error code TaskIdSameAsJobReleaseTask; if you are calling the REST API directly,
    the HTTP

    status code is 409 (Conflict).'
  signature: 'id: str | None'
- uid: azure.batch.models.BatchJobReleaseTask.max_wall_clock_time
  name: max_wall_clock_time
  summary: 'The maximum elapsed time that the Job Release Task may run on a given
    Compute Node, measured

    from the time the Task starts. If the Task does not complete within the time limit,
    the Batch

    service terminates it. The default value is 15 minutes. You may not specify a
    timeout longer

    than 15 minutes. If you do, the Batch service rejects it with an error; if you
    are calling the

    REST API directly, the HTTP status code is 400 (Bad Request).'
  signature: 'max_wall_clock_time: timedelta | None'
- uid: azure.batch.models.BatchJobReleaseTask.resource_files
  name: resource_files
  summary: 'A list of files that the Batch service will download to the Compute Node
    before running the

    command line.  There is a maximum size for the list of resource files.  When the
    max size is

    exceeded, the request will fail and the response error code will be RequestEntityTooLarge.
    If

    this occurs, the collection of ResourceFiles must be reduced in size. This can
    be achieved

    using .zip files, Application Packages, or Docker Containers. Files listed under
    this element

    are located in the Task''s working directory.'
  signature: 'resource_files: List[_models.ResourceFile] | None'
- uid: azure.batch.models.BatchJobReleaseTask.retention_time
  name: retention_time
  summary: 'The minimum time to retain the Task directory for the Job Release Task
    on the Compute Node.

    After this time, the Batch service may delete the Task directory and all its contents.
    The

    default is 7 days, i.e. the Task directory will be retained for 7 days unless
    the Compute Node

    is removed or the Job is deleted.'
  signature: 'retention_time: timedelta | None'
- uid: azure.batch.models.BatchJobReleaseTask.user_identity
  name: user_identity
  summary: 'The user identity under which the Job Release Task runs. If omitted, the
    Task runs as a

    non-administrative user unique to the Task.'
  signature: 'user_identity: _models.UserIdentity | None'
