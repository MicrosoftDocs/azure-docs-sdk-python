### YamlMime:PythonClass
uid: azure.batch.models.UploadBatchServiceLogsResult
name: UploadBatchServiceLogsResult
fullName: azure.batch.models.UploadBatchServiceLogsResult
module: azure.batch.models
summary: 'The result of uploading Batch service log files from a specific Compute
  Node.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'UploadBatchServiceLogsResult(*args: Any, **kwargs: Any)'
variables:
- description: 'The virtual directory within Azure Blob Storage container to

    which the Batch Service log file(s) will be uploaded. The virtual directory name
    is part of the

    blob name for each log file uploaded, and it is built based poolId, nodeId and
    a unique

    identifier. Required.'
  name: virtual_directory_name
  types:
  - <xref:str>
- description: The number of log files which will be uploaded. Required.
  name: number_of_files_uploaded
  types:
  - <xref:int>
methods:
- uid: azure.batch.models.UploadBatchServiceLogsResult.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.UploadBatchServiceLogsResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.UploadBatchServiceLogsResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.UploadBatchServiceLogsResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.UploadBatchServiceLogsResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.UploadBatchServiceLogsResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.UploadBatchServiceLogsResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.UploadBatchServiceLogsResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.UploadBatchServiceLogsResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.UploadBatchServiceLogsResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.UploadBatchServiceLogsResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.UploadBatchServiceLogsResult.number_of_files_uploaded
  name: number_of_files_uploaded
  summary: The number of log files which will be uploaded. Required.
  signature: 'number_of_files_uploaded: int'
- uid: azure.batch.models.UploadBatchServiceLogsResult.virtual_directory_name
  name: virtual_directory_name
  summary: 'The virtual directory within Azure Blob Storage container to which the
    Batch Service log

    file(s) will be uploaded. The virtual directory name is part of the blob name
    for each log file

    uploaded, and it is built based poolId, nodeId and a unique identifier. Required.'
  signature: 'virtual_directory_name: str'
