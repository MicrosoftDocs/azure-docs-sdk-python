### YamlMime:PythonClass
uid: azure.batch.models.ExitOptions
name: ExitOptions
fullName: azure.batch.models.ExitOptions
module: azure.batch.models
summary: Specifies how the Batch service responds to a particular exit condition.
constructor:
  syntax: 'ExitOptions(*args: Any, **kwargs: Any)'
variables:
- description: 'An action to take on the Job containing the Task, if the Task completes
    with

    the given exit condition and the Job''s onTaskFailed property is ''performExitOptionsJobAction''.

    The default is none for exit code 0 and terminate for all other exit conditions.
    If the Job''s

    onTaskFailed property is noaction, then specifying this property returns an error
    and the add

    Task request fails with an invalid property value error; if you are calling the
    REST API

    directly, the HTTP status code is 400 (Bad Request). Known values are: "none",
    "disable", and

    "terminate".'
  name: job_action
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchJobAction>
- description: 'An action that the Batch service performs on Tasks that depend on
    this

    Task. Possible values are ''satisfy'' (allowing dependent tasks to progress) and
    ''block''

    (dependent tasks continue to wait). Batch does not yet support cancellation of
    dependent tasks.

    Known values are: "satisfy" and "block".'
  name: dependency_action
  types:
  - <xref:str>
  - <xref:azure.batch.models.DependencyAction>
methods:
- uid: azure.batch.models.ExitOptions.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.ExitOptions.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.ExitOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.ExitOptions.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.ExitOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.ExitOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.ExitOptions.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.ExitOptions.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.ExitOptions.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.ExitOptions.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.ExitOptions.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.ExitOptions.dependency_action
  name: dependency_action
  summary: 'An action that the Batch service performs on Tasks that depend on this
    Task. Possible values

    are ''satisfy'' (allowing dependent tasks to progress) and ''block'' (dependent
    tasks continue to

    wait). Batch does not yet support cancellation of dependent tasks. Known values
    are:

    "satisfy" and "block".'
  signature: 'dependency_action: str | _models.DependencyAction | None'
- uid: azure.batch.models.ExitOptions.job_action
  name: job_action
  summary: 'An action to take on the Job containing the Task, if the Task completes
    with the given exit

    condition and the Job''s onTaskFailed property is ''performExitOptionsJobAction''.
    The default is

    none for exit code 0 and terminate for all other exit conditions. If the Job''s
    onTaskFailed

    property is noaction, then specifying this property returns an error and the add
    Task request

    fails with an invalid property value error; if you are calling the REST API directly,
    the HTTP

    status code is 400 (Bad Request). Known values are: "none", "disable", and "terminate".'
  signature: 'job_action: str | _models.BatchJobAction | None'
