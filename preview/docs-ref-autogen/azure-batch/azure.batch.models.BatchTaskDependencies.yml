### YamlMime:PythonClass
uid: azure.batch.models.BatchTaskDependencies
name: BatchTaskDependencies
fullName: azure.batch.models.BatchTaskDependencies
module: azure.batch.models
summary: 'Specifies any dependencies of a Task. Any Task that is explicitly specified
  or

  within a dependency range must complete before the dependant Task will be

  scheduled.'
constructor:
  syntax: 'BatchTaskDependencies(*args: Any, **kwargs: Any)'
variables:
- description: 'The list of Task IDs that this Task depends on. All Tasks in this
    list must

    complete successfully before the dependent Task can be scheduled. The taskIds
    collection is

    limited to 64000 characters total (i.e. the combined length of all Task IDs).
    If the taskIds

    collection exceeds the maximum length, the Add Task request fails with error code

    TaskDependencyListTooLong. In this case consider using Task ID ranges instead.'
  name: task_ids
  types:
  - <xref:list>[<xref:str>]
- description: 'The list of Task ID ranges that this Task depends on. All Tasks in
    all

    ranges must complete successfully before the dependent Task can be scheduled.'
  name: task_id_ranges
  types:
  - <xref:list>[<xref:azure.batch.models.BatchTaskIdRange>]
methods:
- uid: azure.batch.models.BatchTaskDependencies.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchTaskDependencies.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchTaskDependencies.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchTaskDependencies.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchTaskDependencies.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchTaskDependencies.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchTaskDependencies.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskDependencies.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchTaskDependencies.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskDependencies.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchTaskDependencies.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchTaskDependencies.task_id_ranges
  name: task_id_ranges
  summary: 'The list of Task ID ranges that this Task depends on. All Tasks in all
    ranges must complete

    successfully before the dependent Task can be scheduled.'
  signature: 'task_id_ranges: List[_models.BatchTaskIdRange] | None'
- uid: azure.batch.models.BatchTaskDependencies.task_ids
  name: task_ids
  summary: 'The list of Task IDs that this Task depends on. All Tasks in this list
    must complete

    successfully before the dependent Task can be scheduled. The taskIds collection
    is limited to

    64000 characters total (i.e. the combined length of all Task IDs). If the taskIds
    collection

    exceeds the maximum length, the Add Task request fails with error code

    TaskDependencyListTooLong. In this case consider using Task ID ranges instead.'
  signature: 'task_ids: List[str] | None'
