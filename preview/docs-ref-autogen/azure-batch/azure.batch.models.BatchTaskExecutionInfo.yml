### YamlMime:PythonClass
uid: azure.batch.models.BatchTaskExecutionInfo
name: BatchTaskExecutionInfo
fullName: azure.batch.models.BatchTaskExecutionInfo
module: azure.batch.models
summary: 'Information about the execution of a Task.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'BatchTaskExecutionInfo(*args: Any, **kwargs: Any)'
variables:
- description: 'The time at which the Task started running. ''Running'' corresponds
    to the

    running state, so if the Task specifies resource files or Packages, then the start
    time

    reflects the time at which the Task started downloading or deploying these. If
    the Task has

    been restarted or retried, this is the most recent time at which the Task started
    running. This

    property is present only for Tasks that are in the running or completed state.'
  name: start_time
  types:
  - <xref:datetime.datetime>
- description: 'The time at which the Task completed. This property is set only if
    the Task is

    in the Completed state.'
  name: end_time
  types:
  - <xref:datetime.datetime>
- description: 'The exit code of the program specified on the Task command line. This
    property

    is set only if the Task is in the completed state. In general, the exit code for
    a process

    reflects the specific convention implemented by the application developer for
    that process. If

    you use the exit code value to make decisions in your code, be sure that you know
    the exit code

    convention used by the application process. However, if the Batch service terminates
    the Task

    (due to timeout, or user termination via the API) you may see an operating system-defined
    exit

    code.'
  name: exit_code
  types:
  - <xref:int>
- description: 'Information about the container under which the Task is executing.
    This

    property is set only if the Task runs in a container context.'
  name: container_info
  types:
  - <xref:azure.batch.models.BatchTaskContainerExecutionInfo>
- description: 'Information describing the Task failure, if any. This property is
    set only

    if the Task is in the completed state and encountered a failure.'
  name: failure_info
  types:
  - <xref:azure.batch.models.BatchTaskFailureInfo>
- description: 'The number of times the Task has been retried by the Batch service.
    Task

    application failures (non-zero exit code) are retried, pre-processing errors (the
    Task could

    not be run) and file upload errors are not retried. The Batch service will retry
    the Task up to

    the limit specified by the constraints. Required.'
  name: retry_count
  types:
  - <xref:int>
- description: 'The most recent time at which a retry of the Task started running.
    This

    element is present only if the Task was retried (i.e. retryCount is nonzero).
    If present, this

    is typically the same as startTime, but may be different if the Task has been
    restarted for

    reasons other than retry; for example, if the Compute Node was rebooted during
    a retry, then

    the startTime is updated but the lastRetryTime is not.'
  name: last_retry_time
  types:
  - <xref:datetime.datetime>
- description: 'The number of times the Task has been requeued by the Batch service
    as the

    result of a user request. When the user removes Compute Nodes from a Pool (by

    resizing/shrinking the pool) or when the Job is being disabled, the user can specify
    that

    running Tasks on the Compute Nodes be requeued for execution. This count tracks
    how many times

    the Task has been requeued for these reasons. Required.'
  name: requeue_count
  types:
  - <xref:int>
- description: 'The most recent time at which the Task has been requeued by the Batch

    service as the result of a user request. This property is set only if the requeueCount
    is

    nonzero.'
  name: last_requeue_time
  types:
  - <xref:datetime.datetime>
- description: 'The result of the Task execution. If the value is ''failed'', then
    the details of

    the failure can be found in the failureInfo property. Known values are: "success"
    and

    "failure".'
  name: result
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchTaskExecutionResult>
methods:
- uid: azure.batch.models.BatchTaskExecutionInfo.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchTaskExecutionInfo.clear
  name: clear
  signature: clear() -> None
- uid: azure.batch.models.BatchTaskExecutionInfo.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchTaskExecutionInfo.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchTaskExecutionInfo.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.batch.models.BatchTaskExecutionInfo.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.batch.models.BatchTaskExecutionInfo.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskExecutionInfo.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchTaskExecutionInfo.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchTaskExecutionInfo.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchTaskExecutionInfo.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.batch.models.BatchTaskExecutionInfo.container_info
  name: container_info
  summary: 'Information about the container under which the Task is executing. This
    property is set only if

    the Task runs in a container context.'
  signature: 'container_info: _models.BatchTaskContainerExecutionInfo | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.end_time
  name: end_time
  summary: 'The time at which the Task completed. This property is set only if the
    Task is in the Completed

    state.'
  signature: 'end_time: datetime | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.exit_code
  name: exit_code
  summary: 'The exit code of the program specified on the Task command line. This
    property is set only if

    the Task is in the completed state. In general, the exit code for a process reflects
    the

    specific convention implemented by the application developer for that process.
    If you use the

    exit code value to make decisions in your code, be sure that you know the exit
    code convention

    used by the application process. However, if the Batch service terminates the
    Task (due to

    timeout, or user termination via the API) you may see an operating system-defined
    exit code.'
  signature: 'exit_code: int | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.failure_info
  name: failure_info
  summary: 'Information describing the Task failure, if any. This property is set
    only if the Task is in

    the completed state and encountered a failure.'
  signature: 'failure_info: _models.BatchTaskFailureInfo | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.last_requeue_time
  name: last_requeue_time
  summary: 'The most recent time at which the Task has been requeued by the Batch
    service as the result of

    a user request. This property is set only if the requeueCount is nonzero.'
  signature: 'last_requeue_time: datetime | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.last_retry_time
  name: last_retry_time
  summary: 'The most recent time at which a retry of the Task started running. This
    element is present only

    if the Task was retried (i.e. retryCount is nonzero). If present, this is typically
    the same as

    startTime, but may be different if the Task has been restarted for reasons other
    than retry;

    for example, if the Compute Node was rebooted during a retry, then the startTime
    is updated but

    the lastRetryTime is not.'
  signature: 'last_retry_time: datetime | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.requeue_count
  name: requeue_count
  summary: 'The number of times the Task has been requeued by the Batch service as
    the result of a user

    request. When the user removes Compute Nodes from a Pool (by resizing/shrinking
    the pool) or

    when the Job is being disabled, the user can specify that running Tasks on the
    Compute Nodes be

    requeued for execution. This count tracks how many times the Task has been requeued
    for these

    reasons. Required.'
  signature: 'requeue_count: int'
- uid: azure.batch.models.BatchTaskExecutionInfo.result
  name: result
  summary: 'The result of the Task execution. If the value is ''failed'', then the
    details of the failure can

    be found in the failureInfo property. Known values are: "success" and "failure".'
  signature: 'result: str | _models.BatchTaskExecutionResult | None'
- uid: azure.batch.models.BatchTaskExecutionInfo.retry_count
  name: retry_count
  summary: 'The number of times the Task has been retried by the Batch service. Task
    application failures

    (non-zero exit code) are retried, pre-processing errors (the Task could not be
    run) and file

    upload errors are not retried. The Batch service will retry the Task up to the
    limit specified

    by the constraints. Required.'
  signature: 'retry_count: int'
- uid: azure.batch.models.BatchTaskExecutionInfo.start_time
  name: start_time
  summary: 'The time at which the Task started running. ''Running'' corresponds to
    the running state, so if

    the Task specifies resource files or Packages, then the start time reflects the
    time at which

    the Task started downloading or deploying these. If the Task has been restarted
    or retried,

    this is the most recent time at which the Task started running. This property
    is present only

    for Tasks that are in the running or completed state.'
  signature: 'start_time: datetime | None'
