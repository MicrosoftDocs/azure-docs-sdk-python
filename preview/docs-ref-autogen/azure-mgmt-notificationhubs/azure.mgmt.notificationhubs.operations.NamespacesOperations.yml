### YamlMime:PythonClass
uid: azure.mgmt.notificationhubs.operations.NamespacesOperations
name: NamespacesOperations
fullName: azure.mgmt.notificationhubs.operations.NamespacesOperations
module: azure.mgmt.notificationhubs.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.notificationhubs.NotificationHubsManagementClient>'s\n\
  >\n> <xref:namespaces> attribute.\n>"
constructor:
  syntax: NamespacesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Creates / Updates a Notification Hub namespace. This operation is idempotent.


    Creates / Updates a Notification Hub namespace. This operation is idempotent.'
  signature: 'begin_create_or_update(resource_group_name: str, namespace_name: str,
    parameters: _models.NamespaceResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.NamespaceResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Request content. Is either a NamespaceResource type or a IO[bytes]
      type.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.NamespaceResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: 'An instance of LROPoller that returns either NamespaceResource or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.notificationhubs.models.NamespaceResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.check_availability
  name: check_availability
  summary: 'Checks the availability of the given service namespace across all Azure
    subscriptions. This is

    useful because the domain name is created based on the service namespace name.


    Checks the availability of the given service namespace across all Azure subscriptions.
    This is

    useful because the domain name is created based on the service namespace name.'
  signature: 'check_availability(parameters: _models.CheckAvailabilityParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.CheckAvailabilityResult'
  parameters:
  - name: parameters
    description: 'Request content. Is either a CheckAvailabilityParameters type or
      a IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.CheckAvailabilityParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: CheckAvailabilityResult or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.CheckAvailabilityResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.create_or_update_authorization_rule
  name: create_or_update_authorization_rule
  summary: 'Creates an authorization rule for a namespace.


    Creates an authorization rule for a namespace.'
  signature: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, parameters: _models.SharedAccessAuthorizationRuleResource,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: Authorization Rule Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Request content. Is either a SharedAccessAuthorizationRuleResource
      type or a

      IO[bytes] type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: SharedAccessAuthorizationRuleResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete
  name: delete
  summary: 'Deletes an existing namespace. This operation also removes all associated
    notificationHubs

    under the namespace.


    Deletes an existing namespace. This operation also removes all associated notificationHubs

    under the namespace.'
  signature: 'delete(resource_group_name: str, namespace_name: str, **kwargs: Any)
    -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.delete_authorization_rule
  name: delete_authorization_rule
  summary: 'Deletes a namespace authorization rule.


    Deletes a namespace authorization rule.'
  signature: 'delete_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, **kwargs: Any) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: Authorization Rule Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get
  name: get
  summary: 'Returns the given namespace.


    Returns the given namespace.'
  signature: 'get(resource_group_name: str, namespace_name: str, **kwargs: Any) ->
    NamespaceResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: NamespaceResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.NamespaceResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_authorization_rule
  name: get_authorization_rule
  summary: 'Gets an authorization rule for a namespace by name.


    Gets an authorization rule for a namespace by name.'
  signature: 'get_authorization_rule(resource_group_name: str, namespace_name: str,
    authorization_rule_name: str, **kwargs: Any) -> SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: Authorization Rule Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SharedAccessAuthorizationRuleResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.get_pns_credentials
  name: get_pns_credentials
  summary: 'Lists the PNS credentials associated with a namespace.


    Lists the PNS credentials associated with a namespace.'
  signature: 'get_pns_credentials(resource_group_name: str, namespace_name: str, **kwargs:
    Any) -> PnsCredentialsResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: PnsCredentialsResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.PnsCredentialsResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list
  name: list
  summary: 'Lists the available namespaces within a resource group.


    Lists the available namespaces within a resource group.'
  signature: 'list(resource_group_name: str, skip_token: str | None = None, top: int
    = 100, **kwargs: Any) -> Iterable[NamespaceResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: skip_token
    description: Skip token for subsequent requests. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: Maximum number of results to return. Default value is 100.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either NamespaceResource or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.notificationhubs.models.NamespaceResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_all
  name: list_all
  summary: 'Lists all the available namespaces within the subscription.


    Lists all the available namespaces within the subscription.'
  signature: 'list_all(skip_token: str | None = None, top: int = 100, **kwargs: Any)
    -> Iterable[NamespaceResource]'
  parameters:
  - name: skip_token
    description: Skip token for subsequent requests. Default value is None.
    isRequired: true
    types:
    - <xref:str>
  - name: top
    description: Maximum number of results to return. Default value is 100.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: An iterator like instance of either NamespaceResource or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.notificationhubs.models.NamespaceResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_authorization_rules
  name: list_authorization_rules
  summary: 'Gets the authorization rules for a namespace.


    Gets the authorization rules for a namespace.'
  signature: 'list_authorization_rules(resource_group_name: str, namespace_name: str,
    **kwargs: Any) -> Iterable[SharedAccessAuthorizationRuleResource]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'An iterator like instance of either SharedAccessAuthorizationRuleResource
      or the

      result of cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.notificationhubs.models.SharedAccessAuthorizationRuleResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.list_keys
  name: list_keys
  summary: 'Gets the Primary and Secondary ConnectionStrings to the namespace.


    Gets the Primary and Secondary ConnectionStrings to the namespace.'
  signature: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs: Any) -> ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: Authorization Rule Name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ResourceListKeys or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.ResourceListKeys>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.regenerate_keys
  name: regenerate_keys
  summary: 'Regenerates the Primary/Secondary Keys to the Namespace Authorization
    Rule.


    Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule.'
  signature: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, parameters: _models.PolicyKeyResource, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: Authorization Rule Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Request content. Is either a PolicyKeyResource type or a IO[bytes]
      type.

      Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.PolicyKeyResource>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: ResourceListKeys or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.ResourceListKeys>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.update
  name: update
  summary: 'Patches the existing namespace.


    Patches the existing namespace.'
  signature: 'update(resource_group_name: str, namespace_name: str, parameters: _models.NamespacePatchParameters,
    *, content_type: str = ''application/json'', **kwargs: Any) -> _models.NamespaceResource'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: Namespace name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Request content. Is either a NamespacePatchParameters type or a
      IO[bytes]

      type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.NamespacePatchParameters>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: NamespaceResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.notificationhubs.models.NamespaceResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.notificationhubs.operations.NamespacesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.notificationhubs.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\mgmt\\notificationhubs\\models\\__init__.py'>
