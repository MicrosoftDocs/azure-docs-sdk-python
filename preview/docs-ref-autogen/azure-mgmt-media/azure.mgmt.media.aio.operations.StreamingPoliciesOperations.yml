### YamlMime:PythonClass
uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations
name: StreamingPoliciesOperations
fullName: azure.mgmt.media.aio.operations.StreamingPoliciesOperations
module: azure.mgmt.media.aio.operations
inheritances:
- builtins.object
summary: 'StreamingPoliciesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: StreamingPoliciesOperations(client, config, serializer, deserializer) ->
    None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations.create
  name: create
  summary: 'Create a Streaming Policy.


    Create a Streaming Policy in the Media Services account.'
  signature: 'create(resource_group_name: str, account_name: str, streaming_policy_name:
    str, parameters: azure.mgmt.media.models._models_py3.StreamingPolicy, **kwargs)
    -> azure.mgmt.media.models._models_py3.StreamingPolicy'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_policy_name
    description: The Streaming Policy name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The request parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingPolicy>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: StreamingPolicy, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.StreamingPolicy>
- uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations.delete
  name: delete
  summary: 'Delete a Streaming Policy.


    Deletes a Streaming Policy in the Media Services account.'
  signature: 'delete(resource_group_name: str, account_name: str, streaming_policy_name:
    str, **kwargs) -> None'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_policy_name
    description: The Streaming Policy name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations.get
  name: get
  summary: 'Get a Streaming Policy.


    Get the details of a Streaming Policy in the Media Services account.'
  signature: 'get(resource_group_name: str, account_name: str, streaming_policy_name:
    str, **kwargs) -> typing.Union[_ForwardRef(''_models.StreamingPolicy''), NoneType]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: streaming_policy_name
    description: The Streaming Policy name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: StreamingPolicy, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.StreamingPolicy>
    - <xref:None>
- uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations.list
  name: list
  summary: 'List Streaming Policies.


    Lists the Streaming Policies in the account.'
  signature: 'list(resource_group_name: str, account_name: str, filter: typing.Union[str,
    NoneType] = None, top: typing.Union[int, NoneType] = None, orderby: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''_models.StreamingPolicyCollection'')]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: Restricts the set of items returned.
    defaultValue: None
    types:
    - <xref:str>
  - name: top
    description: 'Specifies a non-negative integer n that limits the number of items
      returned from a

      collection. The service returns the number of available items up to but not
      greater than the

      specified value n.'
    defaultValue: None
    types:
    - <xref:int>
  - name: orderby
    description: Specifies the key by which the result collection should be ordered.
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either StreamingPolicyCollection or
      the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.media.models.StreamingPolicyCollection>]
attributes:
- uid: azure.mgmt.media.aio.operations.StreamingPoliciesOperations.models
  name: models
  signature: 'models = <module ''azure.mgmt.media.models'' from ''c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py''>'
