### YamlMime:PythonClass
uid: azure.mgmt.servicefabricmanagedclusters.models.RollingUpgradeMonitoringPolicy
name: RollingUpgradeMonitoringPolicy
fullName: azure.mgmt.servicefabricmanagedclusters.models.RollingUpgradeMonitoringPolicy
module: azure.mgmt.servicefabricmanagedclusters.models
inheritances:
- msrest.serialization.Model
summary: 'The policy used for monitoring the application upgrade.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'RollingUpgradeMonitoringPolicy(*, failure_action: Union[str, azure.mgmt.servicefabricmanagedclusters.models._service_fabric_managed_clusters_management_client_enums.FailureAction],
    health_check_wait_duration: str, health_check_stable_duration: str, health_check_retry_timeout:
    str, upgrade_timeout: str, upgrade_domain_timeout: str, **kwargs)'
  parameters:
  - name: failure_action
    description: 'Required. The compensating action to perform when a Monitored upgrade

      encounters monitoring policy or health policy violations. Invalid indicates
      the failure action

      is invalid. Rollback specifies that the upgrade will start rolling back automatically.
      Manual

      indicates that the upgrade will switch to UnmonitoredManual upgrade mode. Possible
      values

      include: "Rollback", "Manual".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:service_fabric_managed_clusters_management_client.models.FailureAction>
  - name: health_check_wait_duration
    description: 'Required. The amount of time to wait after completing an

      upgrade domain before applying health policies. It is interpreted as a string
      representing an

      ISO 8601 duration with following format "hh:mm:ss.fff".'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_stable_duration
    description: 'Required. The amount of time that the application or

      cluster must remain healthy before the upgrade proceeds to the next upgrade
      domain. It is

      interpreted as a string representing an ISO 8601 duration with following format
      "hh:mm:ss.fff".'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_retry_timeout
    description: 'Required. The amount of time to retry health evaluation when

      the application or cluster is unhealthy before FailureAction is executed. It
      is interpreted as

      a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".'
    isRequired: true
    types:
    - <xref:str>
  - name: upgrade_timeout
    description: 'Required. The amount of time the overall upgrade has to complete
      before

      FailureAction is executed. Cannot be larger than 12 hours. It is interpreted
      as a string

      representing an ISO 8601 duration with following format "hh:mm:ss.fff".'
    isRequired: true
    types:
    - <xref:str>
  - name: upgrade_domain_timeout
    description: 'Required. The amount of time each upgrade domain has to complete

      before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted
      as a string

      representing an ISO 8601 duration with following format "hh:mm:ss.fff".'
    isRequired: true
    types:
    - <xref:str>
