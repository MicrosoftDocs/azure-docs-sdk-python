### YamlMime:PythonClass
uid: azure.mgmt.servicefabricmanagedclusters.models.ServicePlacementRequireDomainDistributionPolicy
name: ServicePlacementRequireDomainDistributionPolicy
fullName: azure.mgmt.servicefabricmanagedclusters.models.ServicePlacementRequireDomainDistributionPolicy
module: azure.mgmt.servicefabricmanagedclusters.models
inheritances:
- azure.mgmt.servicefabricmanagedclusters.models._models_py3.ServicePlacementPolicy
summary: "Describes the policy to be used for placement of a Service Fabric service\
  \ where two replicas\nfrom the same partition should never be placed in the same\
  \ fault or upgrade domain.\n\nWhile this is not common it can expose the service\
  \ to an increased risk of concurrent failures\ndue to unplanned outages or other\
  \ cases of subsequent/concurrent failures. As an example, consider\na case where\
  \ replicas are deployed across different data center, with one replica per location.\n\
  In the event that one of the datacenters goes offline, normally the replica that\
  \ was placed in that\ndatacenter will be packed into one of the remaining datacenters.\
  \ If this is not desirable then this\npolicy should be set.\n\n   All required parameters\
  \ must be populated in order to send to Azure.\n\n   param type:\n      Required.\
  \ The type of placement policy for a service fabric service. Following are\n   \
  \   the possible values.Constant filled by server.  Possible values include: \"\
  InvalidDomain\",\n      \"RequiredDomain\", \"PreferredPrimaryDomain\", \"RequiredDomainDistribution\"\
  ,\n      \"NonPartiallyPlaceService\".\n\n   type type:\n      str or\n      ~service_fabric_managed_clusters_management_client.models.ServicePlacementPolicyType\n\
  \n   param domain_name:\n      Required. The name of the domain that should used\
  \ for placement as per this\n      policy.\n\n   type domain_name:\n      str"
constructor:
  syntax: 'ServicePlacementRequireDomainDistributionPolicy(*, domain_name: str, **kwargs)'
