### YamlMime:PythonClass
uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails
name: CreateDeploymentDetails
fullName: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails
module: azure.ai.language.conversations.authoring.models
summary: Represents the options for creating or updating a project deployment.
constructor:
  syntax: 'CreateDeploymentDetails(*args: Any, **kwargs: Any)'
variables:
- description: Represents the trained model label. Required.
  name: trained_model_label
  types:
  - <xref:str>
- description: 'Represents the resources to be assigned to the deployment. If

    provided, the deployment will be rolled out to the resources provided here as
    well as the

    original resource in which the project is created.'
  name: assigned_resources
  types:
  - <xref:list>[<xref:azure.ai.language.conversations.authoring.models.DeploymentResource>]
methods:
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.assigned_resources
  name: assigned_resources
  summary: 'Represents the resources to be assigned to the deployment. If provided,
    the deployment will be

    rolled out to the resources provided here as well as the original resource in
    which the project

    is created.'
  signature: 'assigned_resources: List[_models.DeploymentResource] | None'
- uid: azure.ai.language.conversations.authoring.models.CreateDeploymentDetails.trained_model_label
  name: trained_model_label
  summary: Represents the trained model label. Required.
  signature: 'trained_model_label: str'
