### YamlMime:PythonClass
uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance
name: ConversationExportedUtterance
fullName: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance
module: azure.ai.language.conversations.authoring.models
summary: Represents an exported utterance for a conversational project.
constructor:
  syntax: 'ConversationExportedUtterance(*args: Any, **kwargs: Any)'
variables:
- description: Represents the entity labels of the utterance.
  name: entities
  types:
  - <xref:list>[<xref:azure.ai.language.conversations.authoring.models.ExportedUtteranceEntityLabel>]
- description: The utterance text. Required.
  name: text
  types:
  - <xref:str>
- description: 'Represents the utterance''s language. This is BCP-47 representation
    of a

    language. For example, use "en" for English, "en-gb" for English (UK), "es" for
    Spanish etc.'
  name: language
  types:
  - <xref:str>
- description: The intent of the utterance. Required.
  name: intent
  types:
  - <xref:str>
- description: 'The dataset for this utterance. Allowed values are ''Train'' and ''Test''.
    Known

    values are: "Train" and "Test".'
  name: dataset
  types:
  - <xref:str>
  - <xref:azure.ai.language.conversations.authoring.models.DatasetType>
methods:
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.dataset
  name: dataset
  summary: 'The dataset for this utterance. Allowed values are ''Train'' and ''Test''.
    Known values are:

    "Train" and "Test".'
  signature: 'dataset: str | _models._enums.DatasetType | None'
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.entities
  name: entities
  summary: Represents the entity labels of the utterance.
  signature: 'entities: List[_models._models.ExportedUtteranceEntityLabel] | None'
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.intent
  name: intent
  summary: The intent of the utterance. Required.
  signature: 'intent: str'
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.language
  name: language
  summary: 'Represents the utterance''s language. This is BCP-47 representation of
    a language. For example,

    use "en" for English, "en-gb" for English (UK), "es" for Spanish etc.'
  signature: 'language: str | None'
- uid: azure.ai.language.conversations.authoring.models.ConversationExportedUtterance.text
  name: text
  summary: The utterance text. Required.
  signature: 'text: str'
