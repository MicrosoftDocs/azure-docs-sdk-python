### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_deallocate
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_delete
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_perform_maintenance
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_power_off
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_redeploy
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage_all
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_restart
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_run_command
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_start
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_update
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get_instance_view
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.list
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.simulate_eviction
  - azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.models
  class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: VirtualMachineScaleSetVMsOperations
  summary: 'VirtualMachineScaleSetVMsOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: VirtualMachineScaleSetVMsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_deallocate
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_deallocate(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_deallocate
  summary: "Deallocates a specific virtual machine in a VM scale set. Shuts down the\
    \ virtual machine and\nreleases the compute resources it uses. You are not billed\
    \ for the compute resources of this\nvirtual machine once it is deallocated.\n\
    \n   param resource_group_name:\n      The name of the resource group.\n\n   type\
    \ resource_group_name:\n      str\n\n   param vm_scale_set_name:\n      The name\
    \ of the VM scale set.\n\n   type vm_scale_set_name:\n      str\n\n   param instance_id:\n\
    \      The instance ID of the virtual machine.\n\n   type instance_id:\n     \
    \ str\n\n   keyword callable cls:\n      A custom type or function that will be\
    \ passed the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either None or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_deallocate(resource_group_name, vm_scale_set_name, instance_id,
      **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: vm_scale_set_name
      isRequired: true
    - id: instance_id
      isRequired: true
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_deallocate
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_delete(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_delete
  summary: Deletes a virtual machine from a VM scale set.
  syntax:
    content: begin_delete(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_delete
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_perform_maintenance
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_perform_maintenance(resource_group_name, vm_scale_set_name, instance_id,
    **kwargs)
  namewithoutparameters: begin_perform_maintenance
  summary: Performs maintenance on a virtual machine in a VM scale set.
  syntax:
    content: begin_perform_maintenance(resource_group_name, vm_scale_set_name, instance_id,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_perform_maintenance
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_power_off
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_power_off(resource_group_name, vm_scale_set_name, instance_id, skip_shutdown=False,
    **kwargs)
  namewithoutparameters: begin_power_off
  summary: "Power off (stop) a virtual machine in a VM scale set. Note that resources\
    \ are still attached\nand you are getting charged for the resources. Instead,\
    \ use deallocate to release resources and\navoid charges.\n\n      param resource_group_name:\n\
    \         The name of the resource group.\n\n      type resource_group_name:\n\
    \         str\n\n      param vm_scale_set_name:\n         The name of the VM scale\
    \ set.\n\n      type vm_scale_set_name:\n         str\n\n      param instance_id:\n\
    \         The instance ID of the virtual machine.\n\n      type instance_id:\n\
    \         str\n\n      param skip_shutdown:\n         The parameter to request\
    \ non-graceful VM shutdown. True value for this\n\n   flag indicates non-graceful\
    \ shutdown whereas false indicates otherwise. Default value for this\n   flag\
    \ is false if not specified.\n\n      type skip_shutdown:\n         bool\n\n \
    \     keyword callable cls:\n         A custom type or function that will be passed\
    \ the direct response\n\n      keyword str continuation_token:\n         A continuation\
    \ token to restart a poller from a saved state.\n\n      keyword polling:\n  \
    \       True for ARMPolling, False for no polling, or a\n         polling object\
    \ for personal polling strategy\n\n      paramtype polling:\n         bool or\
    \ ~azure.core.polling.PollingMethod\n\n      keyword int polling_interval:\n \
    \        Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n      return:\n         An instance of LROPoller that\
    \ returns either None or the result of cls(response)\n\n      rtype:\n       \
    \  ~azure.core.polling.LROPoller[None]\n\n      raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_power_off(resource_group_name, vm_scale_set_name, instance_id,
      skip_shutdown=False, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: vm_scale_set_name
      isRequired: true
    - id: instance_id
      isRequired: true
    - defaultValue: 'False'
      id: skip_shutdown
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_power_off
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_redeploy
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_redeploy(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_redeploy
  summary: "Shuts down the virtual machine in the virtual machine scale set, moves\
    \ it to a new node, and\npowers it back on.\n\n   param resource_group_name:\n\
    \      The name of the resource group.\n\n   type resource_group_name:\n     \
    \ str\n\n   param vm_scale_set_name:\n      The name of the VM scale set.\n\n\
    \   type vm_scale_set_name:\n      str\n\n   param instance_id:\n      The instance\
    \ ID of the virtual machine.\n\n   type instance_id:\n      str\n\n   keyword\
    \ callable cls:\n      A custom type or function that will be passed the direct\
    \ response\n\n   keyword str continuation_token:\n      A continuation token to\
    \ restart a poller from a saved state.\n\n   keyword polling:\n      True for\
    \ ARMPolling, False for no polling, or a\n      polling object for personal polling\
    \ strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either None or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_redeploy(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: vm_scale_set_name
      isRequired: true
    - id: instance_id
      isRequired: true
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_redeploy
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_reimage(resource_group_name, vm_scale_set_name, instance_id, vm_scale_set_vm_reimage_input=None,
    **kwargs)
  namewithoutparameters: begin_reimage
  summary: Reimages (upgrade the operating system) a specific virtual machine in a
    VM scale set.
  syntax:
    content: begin_reimage(resource_group_name, vm_scale_set_name, instance_id, vm_scale_set_vm_reimage_input=None,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Parameters for the Reimaging Virtual machine in ScaleSet.
      id: vm_scale_set_vm_reimage_input
      type:
      - azure.mgmt.compute.v2019_12_01.models.VirtualMachineReimageParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage_all
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_reimage_all(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_reimage_all
  summary: "Allows you to re-image all the disks ( including data disks ) in the a\
    \ VM scale set instance.\nThis operation is only supported for managed disks.\n\
    \n   param resource_group_name:\n      The name of the resource group.\n\n   type\
    \ resource_group_name:\n      str\n\n   param vm_scale_set_name:\n      The name\
    \ of the VM scale set.\n\n   type vm_scale_set_name:\n      str\n\n   param instance_id:\n\
    \      The instance ID of the virtual machine.\n\n   type instance_id:\n     \
    \ str\n\n   keyword callable cls:\n      A custom type or function that will be\
    \ passed the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either None or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_reimage_all(resource_group_name, vm_scale_set_name, instance_id,
      **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: vm_scale_set_name
      isRequired: true
    - id: instance_id
      isRequired: true
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage_all
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_restart
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_restart(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_restart
  summary: Restarts a virtual machine in a VM scale set.
  syntax:
    content: begin_restart(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_restart
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_run_command
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_run_command(resource_group_name, vm_scale_set_name, instance_id, parameters,
    **kwargs)
  namewithoutparameters: begin_run_command
  summary: Run command on a virtual machine in a VM scale set.
  syntax:
    content: begin_run_command(resource_group_name, vm_scale_set_name, instance_id,
      parameters, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Run command operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.compute.v2019_12_01.models.RunCommandInput
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either RunCommandResult or
        the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2019_12_01.models.RunCommandResult]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_run_command
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_start
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_start(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: begin_start
  summary: Starts a virtual machine in a VM scale set.
  syntax:
    content: begin_start(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_start
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_update
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: begin_update(resource_group_name, vm_scale_set_name, instance_id, parameters,
    **kwargs)
  namewithoutparameters: begin_update
  summary: "Updates a virtual machine of a VM scale set.\n\n   param resource_group_name:\n\
    \      The name of the resource group.\n\n   type resource_group_name:\n     \
    \ str\n\n   param vm_scale_set_name:\n      The name of the VM scale set where\
    \ the extension should be create or\n\n\nupdated.\n   type vm_scale_set_name:\n\
    \      str\n\n   param instance_id:\n      The instance ID of the virtual machine.\n\
    \n   type instance_id:\n      str\n\n   param parameters:\n      Parameters supplied\
    \ to the Update Virtual Machine Scale Sets VM operation.\n\n   type parameters:\n\
    \      ~azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVM\n\n   keyword\
    \ callable cls:\n      A custom type or function that will be passed the direct\
    \ response\n\n   keyword str continuation_token:\n      A continuation token to\
    \ restart a poller from a saved state.\n\n   keyword polling:\n      True for\
    \ ARMPolling, False for no polling, or a\n      polling object for personal polling\
    \ strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either VirtualMachineScaleSetVM or the\
    \ result of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVM]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: begin_update(resource_group_name, vm_scale_set_name, instance_id, parameters,
      **kwargs)
    parameters:
    - id: resource_group_name
      isRequired: true
    - id: vm_scale_set_name
      isRequired: true
    - id: instance_id
      isRequired: true
    - id: parameters
      isRequired: true
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_update
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: get(resource_group_name, vm_scale_set_name, instance_id, expand='instanceView',
    **kwargs)
  namewithoutparameters: get
  summary: Gets a virtual machine from a VM scale set.
  syntax:
    content: get(resource_group_name, vm_scale_set_name, instance_id, expand='instanceView',
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - defaultValue: instanceView
      description: The expand expression to apply on the operation.
      id: expand
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualMachineScaleSetVM, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVM
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get_instance_view
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: get_instance_view(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: get_instance_view
  summary: Gets the status of a virtual machine from a VM scale set.
  syntax:
    content: get_instance_view(resource_group_name, vm_scale_set_name, instance_id,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualMachineScaleSetVMInstanceView, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMInstanceView
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get_instance_view
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.list
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: list(resource_group_name, virtual_machine_scale_set_name, filter=None, select=None,
    expand=None, **kwargs)
  namewithoutparameters: list
  summary: Gets a list of all virtual machines in a VM scale sets.
  syntax:
    content: list(resource_group_name, virtual_machine_scale_set_name, filter=None,
      select=None, expand=None, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: virtual_machine_scale_set_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: The filter to apply to the operation.
      id: filter
      type:
      - str
    - defaultValue: None
      description: The list parameters.
      id: select
      type:
      - str
    - defaultValue: None
      description: The expand expression to apply to the operation.
      id: expand
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualMachineScaleSetVMListResult
        or the result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMListResult]
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.list
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.simulate_eviction
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: simulate_eviction(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  namewithoutparameters: simulate_eviction
  summary: 'The operation to simulate the eviction of spot virtual machine in a VM
    scale set. The eviction

    will occur within 30 minutes of calling the API.'
  syntax:
    content: simulate_eviction(resource_group_name, vm_scale_set_name, instance_id,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the VM scale set.
      id: vm_scale_set_name
      isRequired: true
      type:
      - str
    - description: The instance ID of the virtual machine.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.simulate_eviction
- class: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.models
  langs:
  - python
  module: azure.mgmt.compute.v2019_12_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.compute.v2019_12_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\compute\\v2019_12_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.models
references:
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_deallocate
  isExternal: false
  name: begin_deallocate(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_deallocate
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_delete
  isExternal: false
  name: begin_delete(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_delete
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_perform_maintenance
  isExternal: false
  name: begin_perform_maintenance(resource_group_name, vm_scale_set_name, instance_id,
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_perform_maintenance
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_power_off
  isExternal: false
  name: begin_power_off(resource_group_name, vm_scale_set_name, instance_id, skip_shutdown=False,
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_power_off
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_redeploy
  isExternal: false
  name: begin_redeploy(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_redeploy
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage
  isExternal: false
  name: begin_reimage(resource_group_name, vm_scale_set_name, instance_id, vm_scale_set_vm_reimage_input=None,
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage_all
  isExternal: false
  name: begin_reimage_all(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_reimage_all
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_restart
  isExternal: false
  name: begin_restart(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_restart
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_run_command
  isExternal: false
  name: begin_run_command(resource_group_name, vm_scale_set_name, instance_id, parameters,
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_run_command
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_start
  isExternal: false
  name: begin_start(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_start
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_update
  isExternal: false
  name: begin_update(resource_group_name, vm_scale_set_name, instance_id, parameters,
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.begin_update
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get
  isExternal: false
  name: get(resource_group_name, vm_scale_set_name, instance_id, expand='instanceView',
    **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get_instance_view
  isExternal: false
  name: get_instance_view(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.get_instance_view
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.list
  isExternal: false
  name: list(resource_group_name, virtual_machine_scale_set_name, filter=None, select=None,
    expand=None, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.list
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.simulate_eviction
  isExternal: false
  name: simulate_eviction(resource_group_name, vm_scale_set_name, instance_id, **kwargs)
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.simulate_eviction
- fullName: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations
  uid: azure.mgmt.compute.v2019_12_01.operations.VirtualMachineScaleSetVMsOperations.models
- fullName: azure.core.polling.LROPoller[None]
  name: LROPoller[None]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[None]
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2019_12_01.models.RunCommandResult]
  name: LROPoller[RunCommandResult]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_12_01.models.RunCommandResult
    name: RunCommandResult
    uid: azure.mgmt.compute.v2019_12_01.models.RunCommandResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2019_12_01.models.RunCommandResult]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMListResult]
  name: ItemPaged[VirtualMachineScaleSetVMListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMListResult
    name: VirtualMachineScaleSetVMListResult
    uid: azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_12_01.models.VirtualMachineScaleSetVMListResult]
