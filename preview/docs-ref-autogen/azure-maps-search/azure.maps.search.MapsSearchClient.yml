### YamlMime:PythonClass
uid: azure.maps.search.MapsSearchClient
name: MapsSearchClient
fullName: azure.maps.search.MapsSearchClient
module: azure.maps.search
inheritances:
- azure.maps.search._base_client.MapsSearchClientBase
summary: Azure Maps Search REST APIs.
constructor:
  syntax: 'MapsSearchClient(credential: AzureKeyCredential | TokenCredential, **kwargs:
    Any)'
  parameters:
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials.TokenCredential>
    - <xref:azure.core.credentials.AzureKeyCredential>
  keywordOnlyParameters:
  - name: base_url
    description: 'Supported Maps Services or Language resource base_url

      (protocol and hostname, for example: ''[https://us.atlas.microsoft.com](https://us.atlas.microsoft.com)'').'
    types:
    - <xref:str>
  - name: client_id
    description: 'Specifies which account is intended for usage with the Azure AD
      security model.

      It represents a unique ID for the Azure Maps account.'
    types:
    - <xref:str>
  - name: api_version
    description: 'The API version of the service to use for requests.

      It defaults to the latest service version.

      Setting to an older version may result in reduced feature compatibility.'
    types:
    - <xref:str>
methods:
- uid: azure.maps.search.MapsSearchClient.begin_fuzzy_search_batch
  name: begin_fuzzy_search_batch
  summary: '**Begin Search Fuzzy Batch API Request**


    Sends batches of fuzzy search requests.

    The method returns a poller for retrieving the result later.


    The Search Address Batch API sends batches of queries to *Search Fuzzy API* using
    just a single API

    call. You can call Search Address Fuzzy Batch API to run either asynchronously
    (async) or

    synchronously (sync). The async API allows caller to batch up to **10,000** queries
    and sync

    API up to **100** queries.'
  signature: 'begin_fuzzy_search_batch(search_queries: List[str], **kwargs) -> LROPoller[SearchAddressBatchResult]'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process.

      The list can contain a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: The results of search batch request.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.maps.search.models.SearchAddressBatchResult>]
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.begin_reverse_search_address_batch
  name: begin_reverse_search_address_batch
  summary: '*Begin Search Address Reverse Batch API Request**


    Sends batches of reverse geocoding requests.

    The method returns a poller for retrieving the result later.


    The Search Address Batch API sends batches of queries to *Search Address Reverse
    API*.

    You can call Search Address Reverse Batch API to run either asynchronously (async)
    or

    synchronously (sync). The async API allows caller to batch up to **10,000** queries
    and sync

    API up to **100** queries.'
  signature: 'begin_reverse_search_address_batch(search_queries: List[str], **kwargs:
    Any) -> LROPoller[ReverseSearchAddressBatchProcessResult]'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process.

      The list can contain a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: The results of reverse search batch request.
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.begin_search_address_batch
  name: begin_search_address_batch
  summary: '**Begin Search Address Batch API**


    Sends batches of geocoding requests.

    The method returns a poller for retrieving the result later.


    The Search Address Batch API sends batches of queries to *Search Address API*
    using just a single API

    call. You can call Search Address Batch API to run either asynchronously (async)
    or

    synchronously (sync). The async API allows caller to batch up to **10,000** queries
    and sync

    API up to **100** queries.'
  signature: 'begin_search_address_batch(search_queries: List[str], **kwargs: Any)
    -> LROPoller[SearchAddressBatchResult]'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process.

      The list can contain a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  keywordOnlyParameters:
  - name: batch_id
    description: Batch id for querying the operation.
    types:
    - <xref:str>
  return:
    description: The results of search batch request.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.maps.search.models.SearchAddressBatchResult>]
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.fuzzy_search
  name: fuzzy_search
  summary: '**Free Form Search**


    The basic default API is Free Form Search which handles the most fuzzy of inputs
    handling any

    combination of address or POI tokens. This search API is the canonical ''single
    line search''.

    The Free Form Search API is a seamless combination of POI search and geocoding.
    The API can

    also be weighted with a contextual position (lat./lon. pair), or fully constrained
    by a

    coordinate and radius, or it can be executed more generally without any geo biasing
    anchor

    point. We strongly advise you to use the ''country_filter'' parameter to

    specify only the countries for which your application needs coverage, as the default
    behavior

    will be to search the entire world, potentially returning unnecessary results.'
  signature: 'fuzzy_search(query: str, **kwargs: Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: 'The applicable query string (e.g., "seattle", "pizza"). Can *also*
      be specified

      as a comma separated string composed by latitude followed by longitude (e.g.,
      "47.641268,

      -122.125679"). Must be properly URL encoded.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: is_type_ahead
    description: 'Boolean. If the typeahead flag is set, the query will be interpreted
      as a

      partial input and the search will enter predictive mode.'
    types:
    - <xref:bool>
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and

      maximum: 100.'
    types:
    - <xref:str>
  - name: skip
    description: 'Starting offset of the returned results within the full result set.
      Default: 0,

      minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: category_filter
    description: "A comma-separated list of category set IDs which could be used to\n\
      restrict the result to specific Points of Interest categories. ID order does\
      \ not matter. When\nmultiple category identifiers are provided, only POIs that\
      \ belong to (at least) one of the\ncategories from the provided list will be\
      \ returned. The list of supported categories can be\ndiscovered using\u202F\
      \ *POI Categories API*."
    types:
    - <xref:list>[<xref:int>]
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area.'
    types:
    - <xref:int>
  - name: coordinates
    description: coordinates as (lat, lon)
    types:
    - <xref:azure.maps.search.models.LatLon>
  - name: country_filter
    description: 'Comma separated string of country codes, e.g. FR,ES. This will limit
      the

      search to the specified countries.'
    types:
    - <xref:list>[<xref:str>]
  - name: bounding_box
    description: 'north(top), west(left), south(bottom), east(right)

      position of the bounding box as float. E.g. BoundingBox(west=37.553, south=-122.453,
      east=33.2, north=57)'
    types:
    - <xref:azure.maps.search.models.BoundingBox>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive. When data in specified language
      is not

      available for a specific field, default language is used.'
    types:
    - <xref:str>
  - name: extended_postal_codes_for
    description: 'Indexes for which extended postal codes should be included in

      the results.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: min_fuzzy_level
    description: Minimum fuzziness level to be used.
    types:
    - <xref:int>
  - name: max_fuzzy_level
    description: Maximum fuzziness level to be used.
    types:
    - <xref:int>
  - name: index_filter
    description: 'A comma separated list of indexes which should be utilized for the
      search.

      Item order does not matter.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: brand_filter
    description: 'A comma-separated list of brand names which could be used to restrict
      the

      result to specific brands. Item order does not matter. When multiple brands
      are provided, only

      results that belong to (at least) one of the provided list will be returned.
      Brands that

      contain a "," in their name should be put into quotes.'
    types:
    - <xref:list>[<xref:str>]
  - name: electric_vehicle_connector_filter
    description: 'A comma-separated list of connector types which could

      be used to restrict the result to Electric Vehicle Station supporting specific
      connector types.

      Item order does not matter. When multiple connector types are provided, only
      results that

      belong to (at least) one of the provided list will be returned.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.ElectricVehicleConnector>]
  - name: entity_type
    description: 'Specifies the level of filtering performed on geographies. Narrows
      the

      search for specified geography entity types, e.g. return only municipality.
      The resulting

      response will contain the geography ID as well as the entity type matched. If
      you provide more

      than one entity as a comma separated list, endpoint will return the ''smallest
      entity

      available''.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.GeographicEntityType>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.

      Different countries have different views of such regions, and the View parameter
      allows your

      application to comply with the view required by the country your application
      will be serving.

      By default, the View parameter is set to "Unified" even if you haven''t defined
      it in  the

      request. It is your responsibility to determine the location of your users,
      and then set the

      View parameter correctly for that location. Alternatively, you have the option
      to set

      ''View=Auto'', which will return the map data based on the IP  address of the
      request.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  - name: operating_hours
    description: 'Hours of operation for a POI (Points of Interest). The availability
      of

      hours of operation will vary based on the data available. If not passed, then
      no opening hours

      information will be returned.

      Supported value: nextSevenDays.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.OperatingHoursRange>
  return:
    description: The results of the search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.fuzzy_search_batch
  name: fuzzy_search_batch
  summary: '**Search Fuzzy Batch API**


    The Search Address Batch API sends batches of queries to *Search Fuzzy API*.

    You can call Search Address Fuzzy Batch API to run either asynchronously (async)
    or

    synchronously (sync). The async API allows caller to batch up to **10,000** queries
    and sync

    API up to **100** queries.'
  signature: 'fuzzy_search_batch(search_queries: List[str], **kwargs: Any) -> SearchAddressBatchResult'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process. The list can

      contain a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: The results of search batch request.
    types:
    - <xref:azure.maps.search.models.SearchAddressBatchResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.MapsSearchClient.get_geometries
  name: get_geometries
  summary: '**Get Geometries**

    The Get Geometries service allows you to request the geometry data such as a city
    or country

    outline for a set of entities, previously retrieved from an Online Search request
    in GeoJSON

    format. The geometry ID is returned in the sourceGeometry object under "geometry"
    and "id" in

    either a Search Address or Search Fuzzy call.'
  signature: 'get_geometries(geometry_ids: List[str], **kwargs: Any) -> List[Polygon]'
  parameters:
  - name: geometry_ids
    description: list of geometry UUIDs string, previously retrieved from an Online
      Search request.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  return:
    description: The result list of Polygon/Geometries.
    types:
    - <xref:typing.List>[<xref:azure.maps.search.models.Polygon>]
- uid: azure.maps.search.MapsSearchClient.get_point_of_interest_categories
  name: get_point_of_interest_categories
  summary: '**Get POI Category Tree**


    POI Category API provides a full list of supported Points of Interest (POI) categories
    and

    subcategories together with their translations and synonyms. The returned content
    can be used

    to provide more meaningful results through other Search Service APIs,'
  signature: 'get_point_of_interest_categories(**kwargs: Any) -> List[PointOfInterestCategory]'
  keywordOnlyParameters:
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, except NGT and NGT-Latn. Language tag is case
      insensitive. When

      data in specified language is not available for a specific field, default language
      is used

      (English).'
    types:
    - <xref:str>
  return:
    description: The result as list of point of interest categories.
    types:
    - <xref:typing.List>[<xref:azure.maps.search.models.PointOfInterestCategory>]
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.reverse_search_address
  name: reverse_search_address
  summary: '**Search Address Reverse Batch API**


    There may be times when you need to translate a  coordinate (example: 37.786505,
    -122.3862)

    into a human understandable street address. Most often  this is needed in tracking
    applications

    where you receive a GPS feed from the device or asset and  wish to know what address
    where the

    coordinate is located. This endpoint will return address information for a given
    coordinate.'
  signature: 'reverse_search_address(coordinates: LatLon, **kwargs: Any) -> ReverseSearchAddressResult'
  parameters:
  - name: coordinates
    description: The applicable coordinates as (lat, lon)
    isRequired: true
    types:
    - <xref:azure.maps.search.models.LatLon>
  - name: language
    description: Language in which search results should be returned.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: include_speed_limit
    description: Boolean. To enable return of the posted speed limit.
    types:
    - <xref:bool>
  - name: heading
    description: 'The directional heading of the vehicle in degrees, for travel along
      a segment

      of roadway.'
    types:
    - <xref:int>
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area.'
    types:
    - <xref:int>
  - name: number
    description: 'If a number is sent in along with the request, the response may
      include the side

      of the street (Left/Right) and also an offset position for that number.'
    types:
    - <xref:str>
  - name: include_road_use
    description: 'Boolean. To enable return of the road use array for reverse geocodes

      at street level.'
    types:
    - <xref:bool>
  - name: road_use
    description: To restrict reverse geocodes to a certain type of road use.
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.RoadUseType>]
  - name: allow_freeform_newline
    description: Format of newlines in the formatted address.
    types:
    - <xref:bool>
  - name: include_match_type
    description: 'Include information on the type of match the geocoder achieved in

      the response.'
    types:
    - <xref:bool>
  - name: entity_type
    description: Specifies the level of filtering performed on geographies.
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.GeographicEntityType>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  return:
    description: The results of the search
    types:
    - <xref:azure.maps.search.models.ReverseSearchAddressResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.reverse_search_address_batch
  name: reverse_search_address_batch
  summary: '**Search Address Reverse Batch API**


    The Search Address Batch API sends batches of queries to *Search Address Reverse
    API*.

    You can call Search Address Reverse Batch API to run either asynchronously (async)
    or

    synchronously (sync). The async API allows caller to batch up to **10,000** queries
    and sync

    API up to **100** queries.'
  signature: 'reverse_search_address_batch(search_queries: List[str], **kwargs: Any)
    -> ReverseSearchAddressBatchProcessResult'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process.

      The list can contain a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: The results of search batch request.
    types:
    - <xref:azure.maps.search.models.ReverseSearchAddressBatchProcessResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.reverse_search_cross_street_address
  name: reverse_search_cross_street_address
  summary: '**Reverse Geocode to a Cross Street**


    There may be times when you need to translate a  coordinate (example: 37.786505,
    -122.3862)

    into a human understandable cross street. Most often this  is needed in tracking
    applications

    where you  receive a GPS feed from the device or asset and wish to know what address
    where the

    coordinate is  located.

    This endpoint will return cross street information  for a given coordinate.'
  signature: 'reverse_search_cross_street_address(coordinates: LatLon, **kwargs: Any)
    -> ReverseSearchCrossStreetAddressResult'
  parameters:
  - name: coordinates
    description: The applicable coordinates as (lat, lon)
    isRequired: true
    types:
    - <xref:azure.maps.search.models.LatLon>
  keywordOnlyParameters:
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and

      maximum: 100.'
    types:
    - <xref:int>
  - name: heading
    description: 'The directional heading of the vehicle in degrees, for travel along
      a segment

      of roadway. 0 is North, 90 is East and so on, values range from -360 to 360.
      The precision can

      include up to one decimal place.'
    types:
    - <xref:int>
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area.'
    types:
    - <xref:int>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive. When data in specified language
      is not

      available for a specific field, default language is used.'
    types:
    - <xref:str>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.

      Different countries have different views of such regions, and the View parameter
      allows your

      application to comply with the view required by the country your application
      will be serving.

      By default, the View parameter is set to "Unified" even if you haven''t defined
      it in  the

      request. It is your responsibility to determine the location of your users,
      and then set the

      View parameter correctly for that location. Alternatively, you have the option
      to set

      ''View=Auto'', which will return the map data based on the IP  address of the
      request.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  return:
    description: The results of the reverse search.
    types:
    - <xref:azure.maps.search.models.ReverseSearchCrossStreetAddressResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.search_address
  name: search_address
  summary: '**Address Geocoding**


    In many cases, the complete search service might be too much, for instance if
    you are only

    interested in traditional geocoding. Search can also be accessed for address look
    up

    exclusively. The geocoding is performed by hitting the geocode endpoint with just
    the address

    or partial address in question. The geocoding search index will be queried for
    everything above

    the street level data. No POIs will be returned. Note that the geocoder is very
    tolerant of

    typos and incomplete addresses. It will also handle everything from exact street
    addresses or

    street or intersections as well as higher level geographies such as city centers,
    counties,

    states etc.'
  signature: 'search_address(query: str, **kwargs: Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: The address to search for (e.g., "1 Microsoft way, Redmond, WA"),
      must be properly URL encoded.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: is_type_ahead
    description: 'Boolean. If the typeahead flag is set, the query will be interpreted
      as a

      partial input and the search will enter predictive mode.'
    types:
    - <xref:bool>
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and maximum: 100.'
    types:
    - <xref:int>
  - name: skip
    description: 'Starting offset of the returned results within the full result set.
      Default: 0,

      minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: radius_in_meters
    description: The radius in meters to for the results to be constrained to the
      defined area.
    types:
    - <xref:int>
  - name: coordinates
    description: coordinates as (lat, lon)
    types:
    - <xref:azure.maps.search.models.LatLon>
  - name: country_filter
    description: 'Comma separated string of country codes, e.g. FR,ES. This will limit
      the

      search to the specified countries.'
    types:
    - <xref:list>[<xref:str>]
  - name: bounding_box
    description: 'north(top), west(left), south(bottom), east(right)

      position of the bounding box as float.

      E.g. BoundingBox(west=37.553, south=-122.453, east=33.2, north=57)'
    types:
    - <xref:azure.maps.search.models.BoundingBox>
  - name: language
    description: Language in which search results should be returned.
    types:
    - <xref:str>
  - name: extended_postal_codes_for
    description: Indexes for which extended postal codes should be included in the
      results.
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: entity_type
    description: Specifies the level of filtering performed on geographies.
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.GeographicEntityType>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search._generated.models.LocalizedMapView>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.MapsSearchClient.search_address_batch
  name: search_address_batch
  summary: '**Search Address Batch API**'
  signature: 'search_address_batch(search_queries: List[str], **kwargs: Any) -> SearchAddressBatchResult'
  parameters:
  - name: search_queries
    description: 'The list of search fuzzy queries/requests to process. The list can

      contain  a max of 10,000 queries and must contain at least 1 query.'
    isRequired: true
    types:
    - <xref:typing.List>[<xref:str>]
  return:
    description: The results of search batch request.
    types:
    - <xref:azure.maps.search.models.SearchAddressBatchResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.search_along_route
  name: search_along_route
  summary: 'The Search Along Route endpoint allows you to perform a fuzzy search for
    POIs along a specified

    route.'
  signature: 'search_along_route(query: str, max_detour_time: int, route: SearchAlongRouteOptions,
    **kwargs: Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: 'The POI name to search for (e.g., "statue of liberty", "starbucks",
      "pizza").

      Must be properly URL encoded.'
    isRequired: true
    types:
    - <xref:str>
  - name: max_detour_time
    description: 'Maximum detour time of the point of interest in seconds. Max value
      is

      3600 seconds.'
    isRequired: true
    types:
    - <xref:int>
  - name: route
    description: 'This represents the route to search along and should be a valid
      `GeoJSON

      LineString` type.'
    isRequired: true
    types:
    - <xref:azure.maps.search.models.SearchAlongRouteOptions>
  keywordOnlyParameters:
  - name: top
    description: 'Maximum number of responses that will be returned. Default value
      is 10. Max value


      is 20.'
    types:
    - <xref:int>
  - name: brand_filter
    description: 'A comma-separated list of brand names which could be used to restrict
      the

      result to specific brands. Item order does not matter. When multiple brands
      are provided, only

      results that belong to (at least) one of the provided list will be returned.
      Brands that

      contain a "," in their name should be put into quotes.'
    types:
    - <xref:list>[<xref:str>]
  - name: category_filter
    description: 'A comma-separated list of category set IDs

      which could be used to restrict the result to specific Points of Interest categories.

      ID order does not matter.'
    types:
    - <xref:list>[<xref:int>]
  - name: electric_vehicle_connector_filter
    description: 'A comma-separated list of connector types which could

      be used to restrict the result to Electric Vehicle Station supporting specific
      connector types.

      Item order does not matter. When multiple connector types are provided, only
      results that

      belong to (at least) one of the provided list will be returned.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.ElectricVehicleConnector>]
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.

      Different countries have different views of such regions, and the View parameter
      allows your

      application to comply with the view required by the country your application
      will be serving.

      By default, the View parameter is set to "Unified" even if you haven''t defined
      it in  the

      request. It is your responsibility to determine the location of your users,
      and then set the

      View parameter correctly for that location. Alternatively, you have the option
      to set

      ''View=Auto'', which will return the map data based on the IP  address of the
      request. The View

      parameter in Azure Maps must be used in compliance with applicable laws, including
      those

      regarding mapping, of the country where maps, images and other data and third
      party content

      that you are authorized to  access via Azure Maps is made available. Example:
      view=IN.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  - name: operating_hours
    description: 'Hours of operation for a POI (Points of Interest). The availability
      of

      hours of operation will vary based on the data available. If not passed, then
      no opening hours

      information will be returned.

      Supported value: nextSevenDays.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.OperatingHoursRange>
  return:
    description: The results of the search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.search_inside_geometry
  name: search_inside_geometry
  summary: 'The Search Geometry endpoint allows you to perform a free form search
    inside a single geometry

    or many of them.'
  signature: 'search_inside_geometry(query: str, geometry: object | str, **kwargs:
    Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: 'The POI name to search for (e.g., "statue of liberty", "starbucks",
      "pizza").

      Must be properly URL encoded.'
    isRequired: true
    types:
    - <xref:str>
  - name: geometry
    description: 'This represents the geometry for one or more geographical features
      (parks,

      state boundary etc.) to search in and should be a GeoJSON compliant type.

      We are accepting GeoJson object or geo_interface'
    isRequired: true
    types:
    - <xref:obejct>
    - <xref:str>
  keywordOnlyParameters:
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and

      maximum: 100.'
    types:
    - <xref:int>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive. When data in specified language
      is not

      available for a specific field, default language is used.'
    types:
    - <xref:str>
  - name: category_filter
    description: 'A comma-separated list of category set IDs

      which could be used to restrict the result to specific Points of Interest categories.

      ID order does not matter.'
    types:
    - <xref:list>[<xref:int>]
  - name: extended_postal_codes_for
    description: 'Indexes for which extended postal codes should be included in

      the results.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: index_filter
    description: 'A comma separated list of indexes which should be utilized for the
      search.

      Item order does not matter.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.

      Different countries have different views of such regions, and the View parameter
      allows your

      application to comply with the view required by the country your application
      will be serving.

      By default, the View parameter is set to "Unified" even if you haven''t defined
      it in  the

      request. It is your responsibility to determine the location of your users,
      and then set the

      View parameter correctly for that location. Alternatively, you have the option
      to set

      ''View=Auto'', which will return the map data based on the IP  address of the
      request. The View

      parameter in Azure Maps must be used in compliance with applicable laws, including
      those

      regarding mapping, of the country where maps, images and other data and third
      party content

      that you are authorized to  access via Azure Maps is made available. Example:
      view=IN.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  - name: operating_hours
    description: 'Hours of operation for a POI (Points of Interest). The availability
      of

      hours of operation will vary based on the data available. If not passed, then
      no opening hours

      information will be returned.

      Supported value: nextSevenDays.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.OperatingHoursRange>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: 'azure.core.exceptions.HttpResponseError:'
- uid: azure.maps.search.MapsSearchClient.search_nearby_point_of_interest
  name: search_nearby_point_of_interest
  summary: ">>**<<Search Nearby Point of Interest **\n\n   If you have a use case\
    \ for only retrieving POI results around a specific location, the nearby\n\nsearch\
    \ method may be the right choice. This endpoint will only return POI results,\
    \ and does not\ntake in a search query parameter."
  signature: 'search_nearby_point_of_interest(coordinates: LatLon, **kwargs: Any)
    -> SearchAddressResult'
  parameters:
  - name: coordinates
    description: The applicable coordinates as (lat, lon)
    isRequired: true
    types:
    - <xref:azure.maps.search.models.LatLon>
  keywordOnlyParameters:
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and

      maximum: 100.'
    types:
    - <xref:int>
  - name: skip
    description: 'Starting offset of the returned results within the full result set.
      Default: 0,

      minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: category_filter
    description: 'A comma-separated list of category set IDs which could be used to

      restrict the result to specific Points of Interest categories. ID order does
      not matter.'
    types:
    - <xref:list>[<xref:int>]
  - name: country_filter
    description: 'Comma separated string of country codes, e.g. FR,ES. This will limit
      the

      search to the specified countries.'
    types:
    - <xref:list>[<xref:str>]
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area, Min value is 1, Max Value is 50000.'
    types:
    - <xref:int>
  - name: language
    description: 'Language in which search results should be returned. Should be one
      of

      supported IETF language tags, case insensitive.'
    types:
    - <xref:str>
  - name: extended_postal_codes_for
    description: 'Indexes for which extended postal codes should be included in

      the results.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: brand_filter
    description: 'A comma-separated list of brand names which could be used to restrict
      the

      result to specific brands. Item order does not matter.'
    types:
    - <xref:list>[<xref:str>]
  - name: electric_vehicle_connector_filter
    description: 'A comma-separated list of connector types which could

      be used to restrict the result to Electric Vehicle Station supporting specific
      connector types.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.ElectricVehicleConnector>]
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.MapsSearchClient.search_point_of_interest
  name: search_point_of_interest
  summary: '**Get POI by Name**


    Points of Interest (POI) Search allows you to request POI results by name.  Search
    supports

    additional query parameters such as language and filtering results by area of
    interest driven

    by country or bounding box.  Endpoint will return only POI results matching the
    query string.

    Response includes POI details such as address, coordinate location and category.'
  signature: 'search_point_of_interest(query: str, **kwargs: Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: 'The POI name to search for (e.g., "statue of liberty", "starbucks"),
      must be

      properly URL encoded.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: is_type_ahead
    description: 'Boolean. If the typeahead flag is set, the query will be interpreted
      as a

      partial input and the search will enter predictive mode.'
    types:
    - <xref:bool>
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and

      maximum: 100.'
    types:
    - <xref:int>
  - name: skip
    description: 'Starting offset of the returned results within the full result set.
      Default: 0,

      minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: category_filter
    description: 'A comma-separated list of category set IDs which could be used to

      restrict the result to specific Points of Interest categories.'
    types:
    - <xref:list>[<xref:int>]
  - name: country_filter
    description: 'Comma separated string of country codes, e.g. FR,ES. This will limit
      the

      search to the specified countries.'
    types:
    - <xref:list>[<xref:int>]
  - name: coordinates
    description: coordinates as (lat, lon)
    types:
    - <xref:azure.maps.search.models.LatLon>
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area.'
    types:
    - <xref:int>
  - name: bounding_box
    description: 'north(top), west(left), south(bottom), east(right)

      position of the bounding box as float. E.g. BoundingBox(west=37.553, south=-122.453,
      east=33.2, north=57)'
    types:
    - <xref:azure.maps.search.models.BoundingBox>
  - name: extended_postal_codes_for
    description: 'Indexes for which extended postal codes should be included in

      the results.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.PointOfInterestExtendedPostalCodes>]
  - name: brand_filter
    description: 'A comma-separated list of brand names which could be used to restrict
      the

      result to specific brands.'
    types:
    - <xref:list>[<xref:str>]
  - name: electric_vehicle_connector_filter
    description: 'A comma-separated list of connector types which could

      be used to restrict the result to Electric Vehicle Station supporting specific
      connector types.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.ElectricVehicleConnector>]
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  - name: operating_hours
    description: Hours of operation for a POI (Points of Interest).
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.OperatingHoursRange>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.MapsSearchClient.search_point_of_interest_category
  name: search_point_of_interest_category
  summary: '**Get POI by Category**


    Points of Interest (POI) Category Search allows you to request POI results from
    given category.

    Search allows to query POIs from one category at a time.  Endpoint will only return
    POI results

    which are categorized as specified.  Response includes POI details such as address,
    coordinate

    location and classification.'
  signature: 'search_point_of_interest_category(query: str, **kwargs: Any) -> SearchAddressResult'
  parameters:
  - name: query
    description: The POI category to search for (e.g., "AIRPORT", "RESTAURANT"), must
      be properly URL encoded.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: is_type_ahead
    description: 'Boolean. If the typeahead flag is set, the query will be interpreted
      as a

      partial input and the search will enter predictive mode.'
    types:
    - <xref:bool>
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 10,
      minimum: 1 and maximum: 100.'
    types:
    - <xref:int>
  - name: skip
    description: 'Starting offset of the returned results within the full result set.
      Default: 0,

      minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: coordinates
    description: coordinates as (lat, lon)
    types:
    - <xref:azure.maps.search.models.LatLon>
  - name: category_filter
    description: 'A comma-separated list of category set IDs which could be used to

      restrict the result to specific Points of Interest categories.'
    types:
    - <xref:list>[<xref:int>]
  - name: country_filter
    description: 'Comma separated string of country codes, e.g. FR,ES. This will limit
      the

      search to the specified countries.'
    types:
    - <xref:list>[<xref:str>]
  - name: radius_in_meters
    description: 'The radius in meters to for the results to be constrained to the

      defined area.'
    types:
    - <xref:int>
  - name: bounding_box
    description: 'north(top), west(left), south(bottom), east(right)

      position of the bounding box as float. E.g. BoundingBox(west=37.553, south=-122.453,
      east=33.2, north=57)'
    types:
    - <xref:azure.maps.search.models.BoundingBox>
  - name: language
    description: Language in which search results should be returned.
    types:
    - <xref:str>
  - name: extended_postal_codes_for
    description: Indexes for which extended postal codes should be included in the
      results.
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: brand_filter
    description: 'A comma-separated list of brand names which could be used to restrict
      the

      result to specific brands. Item order does not matter.'
    types:
    - <xref:list>[<xref:str>]
  - name: electric_vehicle_connector_filter
    description: 'A comma-separated list of connector types which could

      be used to restrict the result to Electric Vehicle Station supporting specific
      connector types.'
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.ElectricVehicleConnector>]
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows

      you to show the correct maps for a certain country/region for geopolitically
      disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  - name: operating_hours
    description: 'Hours of operation for a POI (Points of Interest). The availability
      of

      hours of operation will vary based on the data available. If not passed, then
      no opening hours

      information will be returned.

      Supported value: nextSevenDays.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.OperatingHoursRange>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.MapsSearchClient.search_structured_address
  name: search_structured_address
  summary: '**Structured Address Geocoding**


    Azure Address Geocoding can also be accessed for structured address look up exclusively.
    The

    geocoding search index will be queried for everything above the  street level
    data. No POIs

    will be returned. Note that the geocoder is very tolerant of typos and incomplete  addresses.

    It will also handle everything from exact  street addresses or street or intersections
    as well

    as higher level geographies such as city centers,  counties, states etc.'
  signature: 'search_structured_address(structured_address: StructuredAddress, **kwargs:
    Any) -> SearchAddressResult'
  parameters:
  - name: structured_address
    description: structured address type
    isRequired: true
    types:
    - <xref:azure.maps.search._models.StructuredAddress>
  keywordOnlyParameters:
  - name: skip
    description: 'Starting offset of the returned results within the full result set.

      Default: 0, minimum: 0 and maximum: 1900.'
    types:
    - <xref:int>
  - name: extended_postal_codes_for
    description: Indexes for which extended postal codes should be included in the
      results.
    types:
    - <xref:list>[<xref:str>
    - <xref:azure.maps.search.models.SearchIndexes>]
  - name: entity_type
    description: Specifies the level of filtering performed on geographies.
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.GeographicEntityType>
  - name: localized_map_view
    description: 'The View parameter (also called the "user region" parameter) allows
      you to show the

      correct maps for a certain country/region for geopolitically disputed regions.'
    types:
    - <xref:str>
    - <xref:azure.maps.search.models.LocalizedMapView>
  return:
    description: The results of search.
    types:
    - <xref:azure.maps.search.models.SearchAddressResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
