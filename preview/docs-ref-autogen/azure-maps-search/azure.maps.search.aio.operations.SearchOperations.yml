### YamlMime:PythonClass
uid: azure.maps.search.aio.operations.SearchOperations
name: SearchOperations
fullName: azure.maps.search.aio.operations.SearchOperations
module: azure.maps.search.aio.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.maps.search.aio.MapsSearchClient>'s\n\
  >\n> <xref:search> attribute.\n>"
constructor:
  syntax: SearchOperations(*args, **kwargs)
methods:
- uid: azure.maps.search.aio.operations.SearchOperations.get_geocoding
  name: get_geocoding
  summary: 'Use to get longitude and latitude coordinates of a street address or name
    of a place.


    The `Get Geocoding` API is an HTTP `GET` request that returns the longitude and
    latitude

    coordinates of the location being searched.


    In many cases, the complete search service might be too much, for instance if
    you are only

    interested in traditional geocoding. Search can also be accessed for address look
    up

    exclusively. The geocoding is performed by hitting the geocoding endpoint with
    just the address

    or partial address in question. The geocoding search index will be queried for
    everything above

    the street level data. No Point of Interest (POIs) will be returned. Note that
    the geocoder is

    very tolerant of typos and incomplete addresses. It will also handle everything
    from exact

    street addresses or street or intersections as well as higher level geographies
    such as city

    centers, counties and states. The response also returns detailed address properties
    such as

    street, postal code, municipality, and country/region information.'
  signature: 'async get_geocoding(*, top: int = 5, query: str | None = None, address_line:
    str | None = None, country_region: str | None = None, bbox: List[float] | None
    = None, view: str | None = None, coordinates: List[float] | None = None, admin_district:
    str | None = None, admin_district2: str | None = None, admin_district3: str |
    None = None, locality: str | None = None, postal_code: str | None = None, **kwargs:
    Any) -> MutableMapping[str, Any]'
  keywordOnlyParameters:
  - name: top
    description: 'Maximum number of responses that will be returned. Default: 5, minimum:
      1 and

      maximum: 20. Default value is 5.'
    defaultValue: '5'
    types:
    - <xref:int>
  - name: query
    description: 'A string that contains information about a location, such as an
      address or

      landmark name. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: address_line
    description: 'The official street line of an address relative to the area, as

      specified by the locality, or postalCode, properties. Typical use of this element
      would be to

      provide a street address or any official address.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: country_region
    description: 'Signal for the geocoding result to an [ISO 3166-1 Alpha-2

      region/country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) that
      is specified e.g.

      FR./


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: bbox
    description: 'A rectangular area on the earth defined as a bounding box object.
      The sides of

      the rectangles are defined by longitude and latitude values. When you specify
      this parameter,

      the geographical area is taken into account when computing the results of a
      location query.


      Example: lon1,lat1,lon2,lat2. Default value is None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:float>]
  - name: view
    description: 'A string that represents an [ISO 3166-1 Alpha-2 region/country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      This will alter Geopolitical disputed

      borders and labels to align with the specified user region. By default, the
      View parameter is

      set to "Auto" even if you haven''t defined it in the request.


      Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews)
      for details and

      to see the available Views. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: coordinates
    description: 'A point on the earth specified as a longitude and latitude. When
      you

      specify this parameter, the user''s location is taken into account and the results
      returned may

      be more relevant to the user. Example: &coordinates=lon,lat. Default value is
      None.'
    defaultValue: None
    types:
    - <xref:list>[<xref:float>]
  - name: admin_district
    description: 'The country subdivision portion of an address, such as WA.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: admin_district2
    description: 'The county for the structured address, such as King.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: admin_district3
    description: 'The named area for the structured address.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: locality
    description: 'The locality portion of an address, such as Seattle.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: postal_code
    description: 'The postal code portion of an address.


      **If query is given, should not use this parameter.**. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.aio.operations.SearchOperations.get_geocoding_batch
  name: get_geocoding_batch
  summary: "Use to send a batch of queries to the [Geocoding](/rest/api/maps/search/get-geocoding)\
    \ API in\na single request.\n\nThe `Get Geocoding Batch` API is an HTTP `POST`\
    \ request that sends batches of up to **100**\nqueries to the [Geocoding](/rest/api/maps/search/get-geocoding)\
    \ API in a single request.\n\n# Submit Synchronous Batch Request\n\nThe Synchronous\
    \ API is recommended for lightweight batch requests. When the service receives\
    \ a\nrequest, it will respond as soon as the batch items are calculated and there\
    \ will be no\npossibility to retrieve the results later. The Synchronous API will\
    \ return a timeout error (a\n408 response) if the request takes longer than 60\
    \ seconds. The number of batch items is limited\nto **100** for this API.\n\n\
    # POST Body for Batch Request\n\nTo send the *geocoding* queries you will use\
    \ a `POST` request where the request body will\ncontain the `batchItems` array\
    \ in `json` format and the `Content-Type` header will be set\nto `application/json`.\
    \ Here's a sample request body containing 2 *geocoding* queries:\n\nA *geocoding*\
    \ batchItem object can accept any of the supported *geocoding* [URI parameters](/rest/api/maps/search/get-geocoding#uri-parameters).\n\
    \nThe batch should contain at least **1** query.\n\n# Batch Response Model\n\n\
    The batch response contains a `summary` component that indicates the `totalRequests`\
    \ that\nwere part of the original batch request and `successfulRequests` i.e.\
    \ queries which were\nexecuted successfully. The batch response also includes\
    \ a `batchItems` array which contains a\nresponse for each and every query in\
    \ the batch request. The `batchItems` will contain the\nresults in the exact same\
    \ order the original queries were sent in the batch request. Each item\nis of\
    \ one of the following types:\n\n* [GeocodingResponse](https://docs.microsoft.com/rest/api/maps/search/get-reverse-geocoding#geocodingresponse)\
    \ - If the query completed successfully. \n\n* `Error` - If the query failed.\
    \ The response will contain a `code` and a `message` in this case. \n\nparam body:\n\
    \   The list of address geocoding queries/requests to process.\n   The list can\
    \ contain a max of 100 queries and must contain at least 1 query. Is either a\
    \ JSON\n   type or a IO[bytes] type. Required.\n\ntype body:\n   JSON or IO[bytes]\n\
    \nreturn:\n   JSON object\n\nrtype:\n   JSON\n\nraises ~azure.core.exceptions.HttpResponseError:"
  signature: 'async get_geocoding_batch(body: JSON, *, content_type: str = ''application/json'',
    **kwargs: Any) -> JSON'
  parameters:
  - name: body
    isRequired: true
- uid: azure.maps.search.aio.operations.SearchOperations.get_polygon
  name: get_polygon
  summary: 'Use to get polygon data of a geographical area shape such as a city or
    a country region.


    The `Get Polygon` API is an HTTP `GET` request that supplies polygon data of a
    geographical

    area outline such as a city or a country region.'
  signature: 'async get_polygon(*, coordinates: List[float], view: str | None = None,
    result_type: str = ''countryRegion'', resolution: str = ''medium'', **kwargs:
    Any) -> MutableMapping[str, Any]'
  keywordOnlyParameters:
  - name: coordinates
    description: 'A point on the earth specified as a longitude and latitude. Example:

      &coordinates=lon,lat. Required.'
    types:
    - <xref:list>[<xref:float>]
  - name: view
    description: 'A string that represents an [ISO 3166-1 Alpha-2 region/country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      This will alter Geopolitical disputed

      borders and labels to align with the specified user region. By default, the
      View parameter is

      set to "Auto" even if you haven''t defined it in the request.


      Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews)
      for details and

      to see the available Views. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: result_type
    description: 'The geopolitical concept to return a boundary for. If not specified,
      the

      default is `countryRegion` result type. Known values are: "countryRegion", "adminDistrict",

      "adminDistrict2", "postalCode", "postalCode2", "postalCode3", "postalCode4",
      "neighborhood",

      and "locality". Default value is "countryRegion".'
    defaultValue: countryRegion
    types:
    - <xref:str>
  - name: resolution
    description: 'Resolution determines the amount of points to send back. If not
      specified,

      the default is medium resolution. Known values are: "small", "medium", "large",
      and "huge".

      Default value is "medium".'
    defaultValue: medium
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.aio.operations.SearchOperations.get_reverse_geocoding
  name: get_reverse_geocoding
  summary: 'Use to get a street address and location info from longitude and latitude
    coordinates.


    The `Get Reverse Geocoding` API is an HTTP `GET` request used to translate a coordinate

    (example: 37.786505, -122.3862) into a human understandable street address. Useful
    in tracking

    applications where you receive a GPS feed from the device or asset and wish to
    know the address

    associated with the coordinates. This endpoint will return address information
    for a given

    coordinate.'
  signature: 'async get_reverse_geocoding(*, coordinates: List[float], result_types:
    List[str] | None = None, view: str | None = None, **kwargs: Any) -> MutableMapping[str,
    Any]'
  keywordOnlyParameters:
  - name: coordinates
    description: 'The coordinates of the location that you want to reverse geocode.

      Example: &coordinates=lon,lat. Required.'
    types:
    - <xref:list>[<xref:float>]
  - name: result_types
    description: "Specify entity types that you want in the response. Only the types\
      \ you\nspecify will be returned. If the point cannot be mapped to the entity\
      \ types you specify, no\nlocation information is returned in the response.\n\
      Default value is all possible entities.\nA comma separated list of entity types\
      \ selected from the following options.\n\n* Address \n\n* Neighborhood \n\n\
      * PopulatedPlace \n\n* Postcode1 \n\n* AdminDivision1 \n\n* AdminDivision2 \n\
      \n* CountryRegion \n\nThese entity types are ordered from the most specific\
      \ entity to the least specific entity.\nWhen entities of more than one entity\
      \ type are found, only the most specific entity is\nreturned. For example, if\
      \ you specify Address and AdminDistrict1 as entity types and entities\nwere\
      \ found for both types, only the Address entity information is returned in the\
      \ response.\nDefault value is None."
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: view
    description: 'A string that represents an [ISO 3166-1 Alpha-2 region/country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
      This will alter Geopolitical disputed

      borders and labels to align with the specified user region. By default, the
      View parameter is

      set to "Auto" even if you haven''t defined it in the request.


      Please refer to [Supported Views](https://aka.ms/AzureMapsLocalizationViews)
      for details and

      to see the available Views. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.maps.search.aio.operations.SearchOperations.get_reverse_geocoding_batch
  name: get_reverse_geocoding_batch
  summary: "Use to send a batch of queries to the [Reverse Geocoding](/rest/api/maps/search/get-reverse-geocoding)\
    \ API in a single request.\n\nThe `Get Reverse Geocoding Batch` API is an HTTP\
    \ `POST` request that sends batches of up to\n**100** queries to [Reverse Geocoding](/rest/api/maps/search/get-reverse-geocoding)\
    \ API using\na single request.\n\n# Submit Synchronous Batch Request\n\nThe Synchronous\
    \ API is recommended for lightweight batch requests. When the service receives\
    \ a\nrequest, it will respond as soon as the batch items are calculated and there\
    \ will be no\npossibility to retrieve the results later. The Synchronous API will\
    \ return a timeout error (a\n408 response) if the request takes longer than 60\
    \ seconds. The number of batch items is limited\nto **100** for this API.\n\n\
    # POST Body for Batch Request\n\nTo send the *reverse geocoding* queries you will\
    \ use a `POST` request where the request body\nwill contain the `batchItems` array\
    \ in `json` format and the `Content-Type` header will\nbe set to `application/json`.\
    \ Here's a sample request body containing 2 *reverse geocoding*\nqueries:\n\n\
    A *reverse geocoding* batchItem object can accept any of the supported *reverse\
    \ geocoding* [URI\nparameters](/rest/api/maps/search/get-reverse-geocoding#uri-parameters).\n\
    \nThe batch should contain at least **1** query.\n\n# Batch Response Model\n\n\
    The batch response contains a `summary` component that indicates the `totalRequests`\
    \ that\nwere part of the original batch request and `successfulRequests` i.e.\
    \ queries which were\nexecuted successfully. The batch response also includes\
    \ a `batchItems` array which contains a\nresponse for each and every query in\
    \ the batch request. The `batchItems` will contain the\nresults in the exact same\
    \ order the original queries were sent in the batch request. Each item\nis of\
    \ one of the following types:\n\n* [GeocodingResponse](https://docs.microsoft.com/rest/api/maps/search/get-reverse-geocoding#geocodingresponse)\
    \ - If the query completed successfully. \n\n* `Error` - If the query failed.\
    \ The response will contain a `code` and a `message` in this case. \n\nparam body:\n\
    \   The list of reverse geocoding queries/requests to\n   process. The list can\
    \ contain a max of 100 queries and must contain at least 1 query. Is either\n\
    \   a JSON type or a IO[bytes] type. Required.\n\ntype body:\n   JSON or IO[bytes]\n\
    \nreturn:\n   JSON object\n\nrtype:\n   JSON\n\nraises ~azure.core.exceptions.HttpResponseError:"
  signature: 'async get_reverse_geocoding_batch(body: JSON, *, content_type: str =
    ''application/json'', **kwargs: Any) -> JSON'
  parameters:
  - name: body
    isRequired: true
