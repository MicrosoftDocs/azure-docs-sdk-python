### YamlMime:PythonClass
uid: azure.mgmt.scheduler.models.JobErrorAction
name: JobErrorAction
fullName: azure.mgmt.scheduler.models.JobErrorAction
module: azure.mgmt.scheduler.models
inheritances:
- msrest.serialization.Model
summary: JobErrorAction.
constructor:
  syntax: 'JobErrorAction(*, type: str | JobActionType | None = None, request: HttpRequest
    | None = None, queue_message: StorageQueueMessage | None = None, service_bus_queue_message:
    ServiceBusQueueMessage | None = None, service_bus_topic_message: ServiceBusTopicMessage
    | None = None, retry_policy: RetryPolicy | None = None, **kwargs)'
  parameters:
  - name: type
    description: 'Gets or sets the job error action type. Possible values include:
      "Http", "Https",

      "StorageQueue", "ServiceBusQueue", "ServiceBusTopic".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.scheduler.models.JobActionType>
  - name: request
    description: Gets or sets the http requests.
    isRequired: true
    types:
    - <xref:azure.mgmt.scheduler.models.HttpRequest>
  - name: queue_message
    description: Gets or sets the storage queue message.
    isRequired: true
    types:
    - <xref:azure.mgmt.scheduler.models.StorageQueueMessage>
  - name: service_bus_queue_message
    description: Gets or sets the service bus queue message.
    isRequired: true
    types:
    - <xref:azure.mgmt.scheduler.models.ServiceBusQueueMessage>
  - name: service_bus_topic_message
    description: Gets or sets the service bus topic message.
    isRequired: true
    types:
    - <xref:azure.mgmt.scheduler.models.ServiceBusTopicMessage>
  - name: retry_policy
    description: Gets or sets the retry policy.
    isRequired: true
    types:
    - <xref:azure.mgmt.scheduler.models.RetryPolicy>
  keywordOnlyParameters:
  - name: type
    isRequired: true
  - name: request
    isRequired: true
  - name: queue_message
    isRequired: true
  - name: service_bus_queue_message
    isRequired: true
  - name: service_bus_topic_message
    isRequired: true
  - name: retry_policy
    isRequired: true
