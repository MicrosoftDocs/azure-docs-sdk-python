### YamlMime:PythonClass
uid: azure.ai.documentintelligence.models.AnalyzeResult
name: AnalyzeResult
fullName: azure.ai.documentintelligence.models.AnalyzeResult
module: azure.ai.documentintelligence.models
inheritances:
- azure.ai.documentintelligence._model_base.Model
summary: 'Document analysis result.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'AnalyzeResult(*args: Any, **kwargs: Any)'
variables:
- description: API version used to produce this result. Required.
  name: api_version
  types:
  - <xref:str>
- description: Document model ID used to produce this result. Required.
  name: model_id
  types:
  - <xref:str>
- description: 'Method used to compute string offset and length. Required. Known

    values are: "textElements", "unicodeCodePoint", and "utf16CodeUnit".'
  name: string_index_type
  types:
  - <xref:str>
  - <xref:azure.ai.documentintelligence.models.StringIndexType>
- description: 'Format of the analyze result top-level content. Known values are:
    "text"

    and "markdown".'
  name: content_format
  types:
  - <xref:str>
  - <xref:azure.ai.documentintelligence.models.ContentFormat>
- description: 'Concatenate string representation of all textual and visual elements
    in reading

    order. Required.'
  name: content
  types:
  - <xref:str>
- description: Analyzed pages. Required.
  name: pages
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentPage>]
- description: Extracted paragraphs.
  name: paragraphs
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentParagraph>]
- description: Extracted tables.
  name: tables
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentTable>]
- description: Extracted figures.
  name: figures
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentFigure>]
- description: Extracted lists.
  name: lists
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentList>]
- description: Extracted sections.
  name: sections
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentSection>]
- description: Extracted key-value pairs.
  name: key_value_pairs
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentKeyValuePair>]
- description: Extracted font styles.
  name: styles
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentStyle>]
- description: Detected languages.
  name: languages
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentLanguage>]
- description: Extracted documents.
  name: documents
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.Document>]
methods:
- uid: azure.ai.documentintelligence.models.AnalyzeResult.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.documentintelligence.models.AnalyzeResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.documentintelligence.models.AnalyzeResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.documentintelligence.models.AnalyzeResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.documentintelligence.models.AnalyzeResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.documentintelligence.models.AnalyzeResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.documentintelligence.models.AnalyzeResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.AnalyzeResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.documentintelligence.models.AnalyzeResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.AnalyzeResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.documentintelligence.models.AnalyzeResult.api_version
  name: api_version
  summary: API version used to produce this result. Required.
  signature: 'api_version: str'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.content
  name: content
  summary: 'Concatenate string representation of all textual and visual elements in
    reading

    order. Required.'
  signature: 'content: str'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.content_format
  name: content_format
  summary: '"text" and "markdown".'
  signature: 'content_format: str | _models.ContentFormat | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.documents
  name: documents
  summary: Extracted documents.
  signature: 'documents: List[_models.Document] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.figures
  name: figures
  summary: Extracted figures.
  signature: 'figures: List[_models.DocumentFigure] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.key_value_pairs
  name: key_value_pairs
  summary: Extracted key-value pairs.
  signature: 'key_value_pairs: List[_models.DocumentKeyValuePair] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.languages
  name: languages
  summary: Detected languages.
  signature: 'languages: List[_models.DocumentLanguage] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.lists
  name: lists
  summary: Extracted lists.
  signature: 'lists: List[_models.DocumentList] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.model_id
  name: model_id
  summary: Document model ID used to produce this result. Required.
  signature: 'model_id: str'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.pages
  name: pages
  summary: Analyzed pages. Required.
  signature: 'pages: List[_models.DocumentPage]'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.paragraphs
  name: paragraphs
  summary: Extracted paragraphs.
  signature: 'paragraphs: List[_models.DocumentParagraph] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.sections
  name: sections
  summary: Extracted sections.
  signature: 'sections: List[_models.DocumentSection] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.string_index_type
  name: string_index_type
  summary: '"textElements",

    "unicodeCodePoint", and "utf16CodeUnit".'
  signature: 'string_index_type: str | _models.StringIndexType'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.styles
  name: styles
  summary: Extracted font styles.
  signature: 'styles: List[_models.DocumentStyle] | None'
- uid: azure.ai.documentintelligence.models.AnalyzeResult.tables
  name: tables
  summary: Extracted tables.
  signature: 'tables: List[_models.DocumentTable] | None'
