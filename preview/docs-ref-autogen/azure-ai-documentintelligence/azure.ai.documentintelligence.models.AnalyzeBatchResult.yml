### YamlMime:PythonClass
uid: azure.ai.documentintelligence.models.AnalyzeBatchResult
name: AnalyzeBatchResult
fullName: azure.ai.documentintelligence.models.AnalyzeBatchResult
module: azure.ai.documentintelligence.models
summary: Batch document analysis result.
constructor:
  syntax: 'AnalyzeBatchResult(*args: Any, **kwargs: Any)'
variables:
- description: Number of documents that completed with status succeeded. Required.
  name: succeeded_count
  types:
  - <xref:int>
- description: Number of documents that completed with status failed. Required.
  name: failed_count
  types:
  - <xref:int>
- description: Number of documents that completed with status skipped. Required.
  name: skipped_count
  types:
  - <xref:int>
- description: Operation detail for each document in the batch. Required.
  name: details
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.AnalyzeBatchOperationDetail>]
methods:
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.as_dict
  name: as_dict
  summary: Return a dict that can be JSONify using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.details
  name: details
  summary: Operation detail for each document in the batch. Required.
  signature: 'details: List[_models.AnalyzeBatchOperationDetail]'
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.failed_count
  name: failed_count
  summary: Number of documents that completed with status failed. Required.
  signature: 'failed_count: int'
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.skipped_count
  name: skipped_count
  summary: Number of documents that completed with status skipped. Required.
  signature: 'skipped_count: int'
- uid: azure.ai.documentintelligence.models.AnalyzeBatchResult.succeeded_count
  name: succeeded_count
  summary: Number of documents that completed with status succeeded. Required.
  signature: 'succeeded_count: int'
