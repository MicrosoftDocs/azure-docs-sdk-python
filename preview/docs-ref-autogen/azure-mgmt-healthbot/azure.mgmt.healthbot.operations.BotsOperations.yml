### YamlMime:PythonClass
uid: azure.mgmt.healthbot.operations.BotsOperations
name: BotsOperations
fullName: azure.mgmt.healthbot.operations.BotsOperations
module: azure.mgmt.healthbot.operations
inheritances:
- builtins.object
summary: 'BotsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: BotsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.healthbot.operations.BotsOperations.begin_create
  name: begin_create
  summary: Create a new HealthBot.
  signature: 'begin_create(resource_group_name: str, bot_name: str, parameters: "_models.HealthBot",
    **kwargs: Any) -> LROPoller[''_models.HealthBot'']'
  parameters:
  - name: resource_group_name
    description: The name of the Bot resource group in the user subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: bot_name
    description: The name of the Bot resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The parameters to provide for the created bot.
    isRequired: true
    types:
    - <xref:azure.mgmt.healthbot.models.HealthBot>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either HealthBot or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.healthbot.models.HealthBot>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.healthbot.operations.BotsOperations.begin_delete
  name: begin_delete
  summary: Delete a HealthBot.
  signature: 'begin_delete(resource_group_name: str, bot_name: str, **kwargs: Any)
    -> LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the Bot resource group in the user subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: bot_name
    description: The name of the Bot resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'True for ARMPolling, False for no polling, or a

      polling object for personal polling strategy'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: Default waiting time between two polls for LRO operations if no Retry-After
      header is present.
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - description: ''
    type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.healthbot.operations.BotsOperations.get
  name: get
  summary: Get a HealthBot.
  signature: 'get(resource_group_name: str, bot_name: str, **kwargs: Any) -> _models.HealthBot'
  parameters:
  - name: resource_group_name
    description: The name of the Bot resource group in the user subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: bot_name
    description: The name of the Bot resource.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: HealthBot, or the result of cls(response)
    types:
    - <xref:azure.mgmt.healthbot.models.HealthBot>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.healthbot.operations.BotsOperations.list
  name: list
  summary: Returns all the resources of a particular type belonging to a subscription.
  signature: 'list(**kwargs: Any) -> Iterable[''_models.BotResponseList'']'
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either BotResponseList or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.healthbot.models.BotResponseList>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.healthbot.operations.BotsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Returns all the resources of a particular type belonging to a resource
    group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> Iterable[''_models.BotResponseList'']'
  parameters:
  - name: resource_group_name
    description: The name of the Bot resource group in the user subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either BotResponseList or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.healthbot.models.BotResponseList>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.healthbot.operations.BotsOperations.update
  name: update
  summary: Patch a HealthBot.
  signature: 'update(resource_group_name: str, bot_name: str, parameters: "_models.HealthBotUpdateParameters",
    **kwargs: Any) -> _models.HealthBot'
  parameters:
  - name: resource_group_name
    description: The name of the Bot resource group in the user subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: bot_name
    description: The name of the Bot resource.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The parameters to provide for the required bot.
    isRequired: true
    types:
    - <xref:azure.mgmt.healthbot.models.HealthBotUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: HealthBot, or the result of cls(response)
    types:
    - <xref:azure.mgmt.healthbot.models.HealthBot>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.healthbot.operations.BotsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.healthbot.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\healthbot\\models\\__init__.py'>
