### YamlMime:PythonClass
uid: azure.mgmt.computefleet.models.SpotPriorityProfile
name: SpotPriorityProfile
fullName: azure.mgmt.computefleet.models.SpotPriorityProfile
module: azure.mgmt.computefleet.models
summary: Configuration Options for Spot instances in Compute Fleet.
constructor:
  syntax: 'SpotPriorityProfile(*args: Any, **kwargs: Any)'
variables:
- description: Total capacity to achieve. It is currently in terms of number of VMs.
  name: capacity
  types:
  - <xref:int>
- description: 'Minimum capacity to achieve which cannot be updated. If we will not
    be able

    to "guarantee" minimum capacity, we will reject the request in the sync path itself.'
  name: min_capacity
  types:
  - <xref:int>
- description: Price per hour of each Spot VM will never exceed this.
  name: max_price_per_vm
  types:
  - <xref:float>
- description: 'Eviction Policy to follow when evicting Spot VMs. Known values are:

    "Delete" and "Deallocate".'
  name: eviction_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.computefleet.models.EvictionPolicy>
- description: 'Allocation strategy to follow when determining the VM sizes

    distribution for Spot VMs. Known values are: "PriceCapacityOptimized", "LowestPrice",
    and

    "CapacityOptimized".'
  name: allocation_strategy
  types:
  - <xref:str>
  - <xref:azure.mgmt.computefleet.models.SpotAllocationStrategy>
- description: 'Flag to enable/disable continuous goal seeking for the desired capacity
    and

    restoration of evicted Spot VMs.

    If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to
    create new VMs

    (if VMs are evicted deleted)

    or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed
    to allocate

    due to capacity constraint) in order to achieve the desired capacity.

    Maintain is enabled by default.'
  name: maintain
  types:
  - <xref:bool>
attributes:
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.allocation_strategy
  name: allocation_strategy
  summary: 'Allocation strategy to follow when determining the VM sizes distribution
    for Spot VMs. Known

    values are: "PriceCapacityOptimized", "LowestPrice", and "CapacityOptimized".'
  signature: 'allocation_strategy: str | _models.SpotAllocationStrategy | None'
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.capacity
  name: capacity
  summary: Total capacity to achieve. It is currently in terms of number of VMs.
  signature: 'capacity: int | None'
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.eviction_policy
  name: eviction_policy
  summary: '"Delete" and

    "Deallocate".'
  signature: 'eviction_policy: str | _models.EvictionPolicy | None'
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.maintain
  name: maintain
  summary: 'Flag to enable/disable continuous goal seeking for the desired capacity
    and restoration of

    evicted Spot VMs.

    If maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to
    create new VMs

    (if VMs are evicted deleted)

    or update existing VMs with new VM sizes (if VMs are evicted deallocated or failed
    to allocate

    due to capacity constraint) in order to achieve the desired capacity.

    Maintain is enabled by default.'
  signature: 'maintain: bool | None'
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.max_price_per_vm
  name: max_price_per_vm
  summary: Price per hour of each Spot VM will never exceed this.
  signature: 'max_price_per_vm: float | None'
- uid: azure.mgmt.computefleet.models.SpotPriorityProfile.min_capacity
  name: min_capacity
  summary: 'Minimum capacity to achieve which cannot be updated. If we will not be
    able to "guarantee"

    minimum capacity, we will reject the request in the sync path itself.'
  signature: 'min_capacity: int | None'
