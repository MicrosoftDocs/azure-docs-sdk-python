### YamlMime:PythonClass
uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService
name: ServiceBusManagementService
fullName: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService
module: azure.servicemanagement.servicebusmanagementservice
inheritances:
- azure.servicemanagement.servicemanagementclient._ServiceManagementClient
summary: "Initializes the service bus management service.\n\nsubscription_id:\n  \
  \ Subscription to manage.\n\ncert_file:\n   Path to .pem certificate file (httplib),\
  \ or location of the\n   certificate in your Personal certificate store (winhttp)\
  \ in the\n   CURRENT_USERmyCertificateName format.\n   If a request_session is specified,\
  \ then this is unused.\n\nhost:\n   Live ServiceClient URL. Defaults to Azure public\
  \ cloud.\n\nrequest_session:\n   Session object to use for http requests. If this\
  \ is specified, it\n   replaces the default use of httplib or winhttp. Also, the\
  \ cert_file\n   parameter is unused when a session is passed in.\n   The session\
  \ object handles authentication, and as such can support\n   multiple types of authentication:\
  \ .pem certificate, oauth.\n   For example, you can pass in a Session instance from\
  \ the requests\n   library. To use .pem certificate authentication with requests\n\
  \   library, set the path to the .pem file on the session.cert\n   attribute.\n\n\
  timeout:\n   Optional. Timeout for the http request, in seconds."
constructor:
  syntax: ServiceBusManagementService(subscription_id=None, cert_file=None, host='management.core.windows.net',
    request_session=None, timeout=65)
  parameters:
  - name: subscription_id
    defaultValue: None
  - name: cert_file
    defaultValue: None
  - name: host
    defaultValue: management.core.windows.net
  - name: request_session
    defaultValue: None
  - name: timeout
    defaultValue: '65'
methods:
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.check_namespace_availability
  name: check_namespace_availability
  summary: "Checks to see if the specified service bus namespace is available, or\n\
    if it has already been taken.\n\nname:\n   Name of the service bus namespace to\
    \ validate."
  signature: check_namespace_availability(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.create_namespace
  name: create_namespace
  summary: "Create a new service bus namespace.\n\nname:\n   Name of the service bus\
    \ namespace to create.\n\nregion:\n   Region to create the namespace in."
  signature: create_namespace(name, region)
  parameters:
  - name: name
    isRequired: true
  - name: region
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.delete_namespace
  name: delete_namespace
  summary: "Delete a service bus namespace.\n\nname:\n   Name of the service bus namespace\
    \ to delete."
  signature: delete_namespace(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_data_notification_hub
  name: get_metrics_data_notification_hub
  summary: "Retrieves the list of supported metrics for this namespace and topic\n\
    \nname:\n   Name of the service bus namespace.\n\nhub_name:\n   Name of the service\
    \ bus notification hub in this namespace.\n\nmetric:\n   name of a supported metric\n\
    \nrollup:\n   name of a supported rollup\n\nfilter_expression:\n   filter, for\
    \ instance \"$filter=Timestamp gt datetime'2014-10-01T00:00:00Z'\""
  signature: get_metrics_data_notification_hub(name, hub_name, metric, rollup, filter_expresssion)
  parameters:
  - name: name
    isRequired: true
  - name: hub_name
    isRequired: true
  - name: metric
    isRequired: true
  - name: rollup
    isRequired: true
  - name: filter_expresssion
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_data_queue
  name: get_metrics_data_queue
  summary: "Retrieves the list of supported metrics for this namespace and queue\n\
    \nname:\n   Name of the service bus namespace.\n\nqueue_name:\n   Name of the\
    \ service bus queue in this namespace.\n\nmetric:\n   name of a supported metric\n\
    \nrollup:\n   name of a supported rollup\n\nfilter_expression:\n   filter, for\
    \ instance \"$filter=Timestamp gt datetime'2014-10-01T00:00:00Z'\""
  signature: get_metrics_data_queue(name, queue_name, metric, rollup, filter_expresssion)
  parameters:
  - name: name
    isRequired: true
  - name: queue_name
    isRequired: true
  - name: metric
    isRequired: true
  - name: rollup
    isRequired: true
  - name: filter_expresssion
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_data_relay
  name: get_metrics_data_relay
  summary: "Retrieves the list of supported metrics for this namespace and relay\n\
    \nname:\n   Name of the service bus namespace.\n\nrelay_name:\n   Name of the\
    \ service bus relay in this namespace.\n\nmetric:\n   name of a supported metric\n\
    \nrollup:\n   name of a supported rollup\n\nfilter_expression:\n   filter, for\
    \ instance \"$filter=Timestamp gt datetime'2014-10-01T00:00:00Z'\""
  signature: get_metrics_data_relay(name, relay_name, metric, rollup, filter_expresssion)
  parameters:
  - name: name
    isRequired: true
  - name: relay_name
    isRequired: true
  - name: metric
    isRequired: true
  - name: rollup
    isRequired: true
  - name: filter_expresssion
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_data_topic
  name: get_metrics_data_topic
  summary: "Retrieves the list of supported metrics for this namespace and topic\n\
    \nname:\n   Name of the service bus namespace.\n\ntopic_name:\n   Name of the\
    \ service bus queue in this namespace.\n\nmetric:\n   name of a supported metric\n\
    \nrollup:\n   name of a supported rollup\n\nfilter_expression:\n   filter, for\
    \ instance \"$filter=Timestamp gt datetime'2014-10-01T00:00:00Z'\""
  signature: get_metrics_data_topic(name, topic_name, metric, rollup, filter_expresssion)
  parameters:
  - name: name
    isRequired: true
  - name: topic_name
    isRequired: true
  - name: metric
    isRequired: true
  - name: rollup
    isRequired: true
  - name: filter_expresssion
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_rollups_notification_hub
  name: get_metrics_rollups_notification_hub
  summary: "This operation gets rollup data for Service Bus metrics notification hub.\n\
    Rollup data includes the time granularity for the telemetry aggregation as well\
    \ as\nthe retention settings for each time granularity.\n\nname:\n   Name of the\
    \ service bus namespace.\n\nhub_name:\n   Name of the service bus notification\
    \ hub in this namespace.\n\nmetric:\n   name of a supported metric"
  signature: get_metrics_rollups_notification_hub(name, hub_name, metric)
  parameters:
  - name: name
    isRequired: true
  - name: hub_name
    isRequired: true
  - name: metric
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_rollups_queue
  name: get_metrics_rollups_queue
  summary: "This operation gets rollup data for Service Bus metrics queue.\nRollup\
    \ data includes the time granularity for the telemetry aggregation as well as\n\
    the retention settings for each time granularity.\n\nname:\n   Name of the service\
    \ bus namespace.\n\nqueue_name:\n   Name of the service bus queue in this namespace.\n\
    \nmetric:\n   name of a supported metric"
  signature: get_metrics_rollups_queue(name, queue_name, metric)
  parameters:
  - name: name
    isRequired: true
  - name: queue_name
    isRequired: true
  - name: metric
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_rollups_relay
  name: get_metrics_rollups_relay
  summary: "This operation gets rollup data for Service Bus metrics relay.\nRollup\
    \ data includes the time granularity for the telemetry aggregation as well as\n\
    the retention settings for each time granularity.\n\nname:\n   Name of the service\
    \ bus namespace.\n\nrelay_name:\n   Name of the service bus relay in this namespace.\n\
    \nmetric:\n   name of a supported metric"
  signature: get_metrics_rollups_relay(name, relay_name, metric)
  parameters:
  - name: name
    isRequired: true
  - name: relay_name
    isRequired: true
  - name: metric
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_metrics_rollups_topic
  name: get_metrics_rollups_topic
  summary: "This operation gets rollup data for Service Bus metrics topic.\nRollup\
    \ data includes the time granularity for the telemetry aggregation as well as\n\
    the retention settings for each time granularity.\n\nname:\n   Name of the service\
    \ bus namespace.\n\ntopic_name:\n   Name of the service bus queue in this namespace.\n\
    \nmetric:\n   name of a supported metric"
  signature: get_metrics_rollups_topic(name, topic_name, metric)
  parameters:
  - name: name
    isRequired: true
  - name: topic_name
    isRequired: true
  - name: metric
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_namespace
  name: get_namespace
  summary: "Get details about a specific namespace.\n\nname:\n   Name of the service\
    \ bus namespace."
  signature: get_namespace(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_operation_status
  name: get_operation_status
  summary: "Returns the status of the specified operation. After calling an\nasynchronous\
    \ operation, you can call Get Operation Status to determine\nwhether the operation\
    \ has succeeded, failed, or is still in progress.\n\nrequest_id:\n   The request\
    \ ID for the request you wish to track."
  signature: get_operation_status(request_id)
  parameters:
  - name: request_id
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_regions
  name: get_regions
  summary: Get list of available service bus regions.
  signature: get_regions()
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_supported_metrics_notification_hub
  name: get_supported_metrics_notification_hub
  summary: "Retrieves the list of supported metrics for this namespace and topic\n\
    \nname:\n   Name of the service bus namespace.\n\nhub_name:\n   Name of the service\
    \ bus notification hub in this namespace."
  signature: get_supported_metrics_notification_hub(name, hub_name)
  parameters:
  - name: name
    isRequired: true
  - name: hub_name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_supported_metrics_queue
  name: get_supported_metrics_queue
  summary: "Retrieves the list of supported metrics for this namespace and queue\n\
    \nname:\n   Name of the service bus namespace.\n\nqueue_name:\n   Name of the\
    \ service bus queue in this namespace."
  signature: get_supported_metrics_queue(name, queue_name)
  parameters:
  - name: name
    isRequired: true
  - name: queue_name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_supported_metrics_relay
  name: get_supported_metrics_relay
  summary: "Retrieves the list of supported metrics for this namespace and relay\n\
    \nname:\n   Name of the service bus namespace.\n\nrelay_name:\n   Name of the\
    \ service bus relay in this namespace."
  signature: get_supported_metrics_relay(name, relay_name)
  parameters:
  - name: name
    isRequired: true
  - name: relay_name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.get_supported_metrics_topic
  name: get_supported_metrics_topic
  summary: "Retrieves the list of supported metrics for this namespace and topic\n\
    \nname:\n   Name of the service bus namespace.\n\ntopic_name:\n   Name of the\
    \ service bus queue in this namespace."
  signature: get_supported_metrics_topic(name, topic_name)
  parameters:
  - name: name
    isRequired: true
  - name: topic_name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.list_namespaces
  name: list_namespaces
  summary: List the service bus namespaces defined on the account.
  signature: list_namespaces()
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.list_notification_hubs
  name: list_notification_hubs
  summary: "Retrieves the notification hubs in the service namespace.\n\nname:\n \
    \  Name of the service bus namespace."
  signature: list_notification_hubs(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.list_queues
  name: list_queues
  summary: "Enumerates the queues in the service namespace.\n\nname:\n   Name of the\
    \ service bus namespace."
  signature: list_queues(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.list_relays
  name: list_relays
  summary: "Retrieves the relays in the service namespace.\n\nname:\n   Name of the\
    \ service bus namespace."
  signature: list_relays(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.list_topics
  name: list_topics
  summary: "Retrieves the topics in the service namespace.\n\nname:\n   Name of the\
    \ service bus namespace."
  signature: list_topics(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.perform_delete
  name: perform_delete
  summary: "Performs a DELETE request and returns the response.\n\npath:\n   Path\
    \ to the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_delete(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.perform_get
  name: perform_get
  summary: "Performs a GET request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_get(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.perform_post
  name: perform_post
  summary: "Performs a POST request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the POST request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_post(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.perform_put
  name: perform_put
  summary: "Performs a PUT request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the PUT request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_put(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.set_proxy
  name: set_proxy
  summary: "Sets the proxy server host and port for the HTTP CONNECT Tunnelling.\n\
    \nhost:\n   Address of the proxy. Ex: '192.168.0.100'\n\nport:\n   Port of the\
    \ proxy. Ex: 6000\n\nuser:\n   User for proxy authorization.\n\npassword:\n  \
    \ Password for proxy authorization."
  signature: set_proxy(host, port, user=None, password=None)
  parameters:
  - name: host
    isRequired: true
  - name: port
    isRequired: true
  - name: user
    defaultValue: None
  - name: password
    defaultValue: None
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.should_use_requests
  name: should_use_requests
  signature: static should_use_requests(cert_file)
  parameters:
  - name: cert_file
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.wait_for_operation_status
  name: wait_for_operation_status
  summary: "Waits for an asynchronous operation to complete.\n\nThis calls get_operation_status\
    \ in a loop and returns when the expected\nstatus is reached. The result of get_operation_status\
    \ is returned. By\ndefault, an exception is raised on timeout or error status.\n\
    \nrequest_id:\n   The request ID for the request you wish to track.\n\nwait_for_status:\n\
    \   Status to wait for. Default is 'Succeeded'.\n\ntimeout:\n   Total timeout\
    \ in seconds. Default is 30s.\n\nsleep_interval:\n   Sleep time in seconds for\
    \ each iteration. Default is 5s.\n\nprogress_callback:\n   Callback for each iteration.\n\
    \   Default prints '.'.\n   Set it to None for no progress notification.\n\nsuccess_callback:\n\
    \   Callback on success. Default prints newline.\n   Set it to None for no success\
    \ notification.\n\nfailure_callback:\n   Callback on failure. Default prints newline+error\
    \ details then\n   raises exception.\n   Set it to None for no failure notification."
  signature: wait_for_operation_status(request_id, wait_for_status='Succeeded', timeout=30,
    sleep_interval=5, progress_callback=<function _ServiceManagementClient.wait_for_operation_status_progress_default_callback>,
    success_callback=<function _ServiceManagementClient.wait_for_operation_status_success_default_callback>,
    failure_callback=<function _ServiceManagementClient.wait_for_operation_status_failure_default_callback>)
  parameters:
  - name: request_id
    isRequired: true
  - name: wait_for_status
    defaultValue: Succeeded
  - name: timeout
    defaultValue: '30'
  - name: sleep_interval
    defaultValue: '5'
  - name: progress_callback
  - name: success_callback
  - name: failure_callback
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.wait_for_operation_status_failure_default_callback
  name: wait_for_operation_status_failure_default_callback
  signature: wait_for_operation_status_failure_default_callback(ex)
  parameters:
  - name: elapsed
    isRequired: true
  - name: ex
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.wait_for_operation_status_progress_default_callback
  name: wait_for_operation_status_progress_default_callback
  signature: wait_for_operation_status_progress_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.wait_for_operation_status_success_default_callback
  name: wait_for_operation_status_success_default_callback
  signature: wait_for_operation_status_success_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.with_filter
  name: with_filter
  summary: 'Returns a new service which will process requests with the

    specified filter.  Filtering operations can include logging, automatic

    retrying, etc...  The filter is a lambda which receives the HTTPRequest

    and another lambda.  The filter can perform any pre-processing on the

    request, pass it off to the next lambda, and then perform any

    post-processing on the response.'
  signature: with_filter(filter)
  parameters:
  - name: filter
    isRequired: true
attributes:
- uid: azure.servicemanagement.servicebusmanagementservice.ServiceBusManagementService.timeout
  name: timeout
