### YamlMime:PythonClass
uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService
name: ServiceManagementService
fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService
module: azure.servicemanagement.servicemanagementservice
inheritances:
- azure.servicemanagement.servicemanagementclient._ServiceManagementClient
summary: "Initializes the management service.\n\nsubscription_id:\n   Subscription\
  \ to manage.\n\ncert_file:\n   Path to .pem certificate file (httplib), or location\
  \ of the\n   certificate in your Personal certificate store (winhttp) in the\n \
  \  CURRENT_USERmyCertificateName format.\n   If a request_session is specified,\
  \ then this is unused.\n\nhost:\n   Live ServiceClient URL. Defaults to Azure public\
  \ cloud.\n\nrequest_session:\n   Session object to use for http requests. If this\
  \ is specified, it\n   replaces the default use of httplib or winhttp. Also, the\
  \ cert_file\n   parameter is unused when a session is passed in.\n   The session\
  \ object handles authentication, and as such can support\n   multiple types of authentication:\
  \ .pem certificate, oauth.\n   For example, you can pass in a Session instance from\
  \ the requests\n   library. To use .pem certificate authentication with requests\n\
  \   library, set the path to the .pem file on the session.cert\n   attribute.\n\n\
  timeout:\n   Optional. Timeout for the http request, in seconds."
constructor:
  syntax: ServiceManagementService(subscription_id=None, cert_file=None, host='management.core.windows.net',
    request_session=None, timeout=65)
  parameters:
  - name: subscription_id
    defaultValue: None
  - name: cert_file
    defaultValue: None
  - name: host
    defaultValue: management.core.windows.net
  - name: request_session
    defaultValue: None
  - name: timeout
    defaultValue: '65'
methods:
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
  name: add_data_disk
  summary: "Adds a data disk to a virtual machine.\n\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\nlun:\n   Specifies the Logical Unit Number (LUN)\
    \ for the disk. The LUN\n   specifies the slot in which the data drive appears\
    \ when mounted\n   for usage by the virtual machine. Valid LUN values are 0 through\
    \ 15.\n\nhost_caching:\n   Specifies the platform caching behavior of data disk\
    \ blob for\n   read/write efficiency. The default vault is ReadOnly. Possible\n\
    \   values are: None, ReadOnly, ReadWrite\n\nmedia_link:\n   Specifies the location\
    \ of the blob in Windows Azure blob store\n   where the media for the disk is\
    \ located. The blob location must\n   belong to the storage account in the subscription\
    \ specified by the\n   <subscription-id> value in the operation call. Example:\n\
    \   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \ndisk_label:\n   Specifies the description of the data disk. When you attach\
    \ a disk,\n   either by directly referencing a media using the MediaLink element\n\
    \   or specifying the target disk size, you can use the DiskLabel\n   element\
    \ to customize the name property of the target data disk.\n\ndisk_name:\n   Specifies\
    \ the name of the disk. Windows Azure uses the specified\n   disk to create the\
    \ data disk for the machine and populates this\n   field with the disk name.\n\
    \nlogical_disk_size_in_gb:\n   Specifies the size, in GB, of an empty disk to\
    \ be attached to the\n   role. The disk can be created as part of disk attach\
    \ or create VM\n   role call by specifying the value for this property. Windows\
    \ Azure\n   creates the empty disk based on size preference and attaches the\n\
    \   newly created disk to the Role.\n\nsource_media_link:\n   Specifies the location\
    \ of a blob in account storage which is\n   mounted as a data disk when the virtual\
    \ machine is created."
  signature: add_data_disk(service_name, deployment_name, role_name, lun, host_caching=None,
    media_link=None, disk_label=None, disk_name=None, logical_disk_size_in_gb=None,
    source_media_link=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: lun
    isRequired: true
  - name: host_caching
    defaultValue: None
  - name: media_link
    defaultValue: None
  - name: disk_label
    defaultValue: None
  - name: disk_name
    defaultValue: None
  - name: logical_disk_size_in_gb
    defaultValue: None
  - name: source_media_link
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
  name: add_disk
  summary: "Adds a disk to the user image repository. The disk can be an OS disk\n\
    or a data disk.\n\nhas_operating_system:\n   Deprecated.\n\nlabel:\n   Specifies\
    \ the description of the disk.\n\nmedia_link:\n   Specifies the location of the\
    \ blob in Windows Azure blob store\n   where the media for the disk is located.\
    \ The blob location must\n   belong to the storage account in the current subscription\
    \ specified\n   by the <subscription-id> value in the operation call. Example:\n\
    \   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the disk. Windows Azure uses the name to\n  \
    \ identify the disk when creating virtual machines from the disk.\n\nos:\n   The\
    \ OS type of the disk. Possible values are: Linux, Windows"
  signature: add_disk(has_operating_system, label, media_link, name, os)
  parameters:
  - name: has_operating_system
    isRequired: true
  - name: label
    isRequired: true
  - name: media_link
    isRequired: true
  - name: name
    isRequired: true
  - name: os
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
  name: add_dns_server
  summary: "Adds a DNS server definition to an existing deployment.\n\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \ndns_server_name:\n   Specifies the name of the DNS server.\n\naddress:\n   Specifies\
    \ the IP address of the DNS server."
  signature: add_dns_server(service_name, deployment_name, dns_server_name, address)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: dns_server_name
    isRequired: true
  - name: address
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
  name: add_management_certificate
  summary: "The Add Management Certificate operation adds a certificate to the\nlist\
    \ of management certificates. Management certificates, which are\nalso known as\
    \ subscription certificates, authenticate clients\nattempting to connect to resources\
    \ associated with your Windows Azure\nsubscription.\n\npublic_key:\n   A base64\
    \ representation of the management certificate public key.\n\nthumbprint:\n  \
    \ The thumb print that uniquely identifies the management\n   certificate.\n\n\
    data:\n   The certificate's raw data in base-64 encoded .cer format."
  signature: add_management_certificate(public_key, thumbprint, data)
  parameters:
  - name: public_key
    isRequired: true
  - name: thumbprint
    isRequired: true
  - name: data
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
  name: add_os_image
  summary: "Adds an OS image that is currently stored in a storage account in your\n\
    subscription to the image repository.\n\nlabel:\n   Specifies the friendly name\
    \ of the image.\n\nmedia_link:\n   Specifies the location of the blob in Windows\
    \ Azure blob store\n   where the media for the image is located. The blob location\
    \ must\n   belong to a storage account in the subscription specified by the\n\
    \   <subscription-id> value in the operation call. Example:\n   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the OS image that Windows Azure uses to\n   identify\
    \ the image when creating one or more virtual machines.\n\nos:\n   The operating\
    \ system type of the OS image. Possible values are:\n   Linux, Windows"
  signature: add_os_image(label, media_link, name, os)
  parameters:
  - name: label
    isRequired: true
  - name: media_link
    isRequired: true
  - name: name
    isRequired: true
  - name: os
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
  name: add_role
  summary: "Adds a virtual machine to an existing deployment.\n\nservice_name:\n \
    \  The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_name:\n   The name of the role.\n\nsystem_config:\n   Contains the metadata\
    \ required to provision a virtual machine from\n   a Windows or Linux OS image.\
    \  Use an instance of\n   WindowsConfigurationSet or LinuxConfigurationSet.\n\n\
    os_virtual_hard_disk:\n   Contains the parameters Windows Azure uses to create\
    \ the operating\n   system disk for the virtual machine. If you are creating a\
    \ Virtual\n   Machine by using a VM Image, this parameter is not used.\n\nnetwork_config:\n\
    \   Encapsulates the metadata required to create the virtual network\n   configuration\
    \ for a virtual machine. If you do not include a\n   network configuration set\
    \ you will not be able to access the VM\n   through VIPs over the internet. If\
    \ your virtual machine belongs to\n   a virtual network you can not specify which\
    \ subnet address space\n   it resides under.\n\navailability_set_name:\n   Specifies\
    \ the name of an availability set to which to add the\n   virtual machine. This\
    \ value controls the virtual machine allocation\n   in the Windows Azure environment.\
    \ Virtual machines specified in the\n   same availability set are allocated to\
    \ different nodes to maximize\n   availability.\n\ndata_virtual_hard_disks:\n\
    \   Contains the parameters Windows Azure uses to create a data disk\n   for a\
    \ virtual machine.\n\nrole_size:\n   The size of the virtual machine to allocate.\
    \ The default value is\n   Small. Possible values are: ExtraSmall, Small, Medium,\
    \ Large,\n   ExtraLarge. The specified value must be compatible with the disk\n\
    \   selected in the OSVirtualHardDisk values.\n\nrole_type:\n   The type of the\
    \ role for the virtual machine. The only supported\n   value is PersistentVMRole.\n\
    \nresource_extension_references:\n   Optional. Contains a collection of resource\
    \ extensions that are to\n   be installed on the Virtual Machine. This element\
    \ is used if\n   provision_guest_agent is set to True.\n\nprovision_guest_agent:\n\
    \   Optional. Indicates whether the VM Agent is installed on the\n   Virtual Machine.\
    \ To run a resource extension in a Virtual Machine,\n   this service must be installed.\n\
    \nvm_image_name:\n   Optional. Specifies the name of the VM Image that is to be\
    \ used to\n   create the Virtual Machine. If this is specified, the\n   system_config\
    \ and network_config parameters are not used.\n\nmedia_location:\n   Optional.\
    \ Required if the Virtual Machine is being created from a\n   published VM Image.\
    \ Specifies the location of the VHD file that is\n   created when VMImageName\
    \ specifies a published VM Image."
  signature: add_role(service_name, deployment_name, role_name, system_config, os_virtual_hard_disk,
    network_config=None, availability_set_name=None, data_virtual_hard_disks=None,
    role_size=None, role_type='PersistentVMRole', resource_extension_references=None,
    provision_guest_agent=None, vm_image_name=None, media_location=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: system_config
    isRequired: true
  - name: os_virtual_hard_disk
    isRequired: true
  - name: network_config
    defaultValue: None
  - name: availability_set_name
    defaultValue: None
  - name: data_virtual_hard_disks
    defaultValue: None
  - name: role_size
    defaultValue: None
  - name: role_type
    defaultValue: PersistentVMRole
  - name: resource_extension_references
    defaultValue: None
  - name: provision_guest_agent
    defaultValue: None
  - name: vm_image_name
    defaultValue: None
  - name: media_location
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
  name: add_service_certificate
  summary: "Adds a certificate to a hosted service.\n\nservice_name:\n   Name of the\
    \ hosted service.\n\ndata:\n   The base-64 encoded form of the pfx/cer file.\n\
    \ncertificate_format:\n   The service certificate format.\n\npassword:\n   The\
    \ certificate password. Default to None when using cer format."
  signature: add_service_certificate(service_name, data, certificate_format, password=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: data
    isRequired: true
  - name: certificate_format
    isRequired: true
  - name: password
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
  name: associate_reserved_ip_address
  summary: "Associate an existing reservedIP to a deployment.\n\nname:\n   Required.\
    \ Name of the reserved IP address.\n\nservice_name:\n   Required. Name of the\
    \ hosted service.\n\ndeployment_name:\n   Required. Name of the deployment.\n\n\
    virtual_ip_name:\n   Optional. Name of the VirtualIP in case of multi Vip tenant.\n\
    \   If this value is not specified default virtualIP is used\n   for this operation."
  signature: associate_reserved_ip_address(name, service_name, deployment_name, virtual_ip_name=None)
  parameters:
  - name: name
    isRequired: true
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: virtual_ip_name
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
  name: capture_role
  summary: "The Capture Role operation captures a virtual machine image to your\n\
    image gallery. From the captured image, you can create additional\ncustomized\
    \ virtual machines.\n\nservice_name:\n   The name of the service.\n\ndeployment_name:\n\
    \   The name of the deployment.\n\nrole_name:\n   The name of the role.\n\npost_capture_action:\n\
    \   Specifies the action after capture operation completes. Possible\n   values\
    \ are: Delete, Reprovision.\n\ntarget_image_name:\n   Specifies the image name\
    \ of the captured virtual machine.\n\ntarget_image_label:\n   Specifies the friendly\
    \ name of the captured virtual machine.\n\nprovisioning_configuration:\n   Use\
    \ an instance of WindowsConfigurationSet or LinuxConfigurationSet."
  signature: capture_role(service_name, deployment_name, role_name, post_capture_action,
    target_image_name, target_image_label, provisioning_configuration=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: post_capture_action
    isRequired: true
  - name: target_image_name
    isRequired: true
  - name: target_image_label
    isRequired: true
  - name: provisioning_configuration
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
  name: capture_vm_image
  summary: "Creates a copy of the operating system virtual hard disk (VHD) and all\n\
    of the data VHDs that are associated with the Virtual Machine, saves\nthe VHD\
    \ copies in the same storage location as the original VHDs, and\nregisters the\
    \ copies as a VM Image in the image repository that is\nassociated with the specified\
    \ subscription.\n\nservice_name:\n   The name of the service.\n\ndeployment_name:\n\
    \   The name of the deployment.\n\nrole_name:\n   The name of the role.\n\noptions:\n\
    \   An instance of CaptureRoleAsVMImage class.\n\noptions.os_state:\n   Required.\
    \ Specifies the state of the operating system in the image.\n   Possible values\
    \ are: Generalized, Specialized\n   A Virtual Machine that is fully configured\
    \ and running contains a\n   Specialized operating system. A Virtual Machine on\
    \ which the\n   Sysprep command has been run with the generalize option contains\
    \ a\n   Generalized operating system. If you capture an image from a\n   generalized\
    \ Virtual Machine, the machine is deleted after the image\n   is captured. It\
    \ is recommended that all Virtual Machines are shut\n   down before capturing\
    \ an image.\n\noptions.vm_image_name:\n   Required. Specifies the name of the\
    \ VM Image.\n\noptions.vm_image_label:\n   Required. Specifies the label of the\
    \ VM Image.\n\noptions.description:\n   Optional. Specifies the description of\
    \ the VM Image.\n\noptions.language:\n   Optional. Specifies the language of the\
    \ VM Image.\n\noptions.image_family:\n   Optional. Specifies a value that can\
    \ be used to group VM Images.\n\noptions.recommended_vm_size:\n   Optional. Specifies\
    \ the size to use for the Virtual Machine that\n   is created from the VM Image."
  signature: capture_vm_image(service_name, deployment_name, role_name, options)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: options
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
  name: change_deployment_configuration
  summary: "Initiates a change to the deployment configuration.\n\nservice_name:\n\
    \   Name of the hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nconfiguration:\n   The base-64 encoded service configuration file for the deployment.\n\
    \ntreat_warnings_as_error:\n   Indicates whether to treat package validation warnings\
    \ as errors.\n   If set to true, the Created Deployment operation fails if there\n\
    \   are validation warnings on the service package.\n\nmode:\n   If set to Manual,\
    \ WalkUpgradeDomain must be called to apply the\n   update. If set to Auto, the\
    \ Windows Azure platform will\n   automatically apply the update To each upgrade\
    \ domain for the\n   service. Possible values are: Auto, Manual\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account\n   properties.\
    \ You can have a maximum of 50 extended property\n   name/value pairs. The maximum\
    \ length of the Name element is 64\n   characters, only alphanumeric characters\
    \ and underscores are valid\n   in the Name, and the name must start with a letter.\
    \ The value has\n   a maximum length of 255 characters."
  signature: change_deployment_configuration(service_name, deployment_name, configuration,
    treat_warnings_as_error=False, mode='Auto', extended_properties=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: configuration
    isRequired: true
  - name: treat_warnings_as_error
    defaultValue: 'False'
  - name: mode
    defaultValue: Auto
  - name: extended_properties
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
  name: check_hosted_service_name_availability
  summary: "Checks to see if the specified hosted service name is available, or if\n\
    it has already been taken.\n\nservice_name:\n   Name of the hosted service."
  signature: check_hosted_service_name_availability(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
  name: check_storage_account_name_availability
  summary: "Checks to see if the specified storage account name is available, or\n\
    if it has already been taken.\n\nservice_name:\n   Name of the storage service\
    \ account."
  signature: check_storage_account_name_availability(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
  name: create_affinity_group
  summary: "Creates a new affinity group for the specified subscription.\n\nname:\n\
    \   A name for the affinity group that is unique to the subscription.\n\nlabel:\n\
    \   A name for the affinity group. The name can be up to 100 characters\n   in\
    \ length.\n\nlocation:\n   The data center location where the affinity group will\
    \ be created.\n   To list available locations, use the list_location function.\n\
    \ndescription:\n   A description for the affinity group. The description can be\
    \ up to\n   1024 characters in length."
  signature: create_affinity_group(name, label, location, description=None)
  parameters:
  - name: name
    isRequired: true
  - name: label
    isRequired: true
  - name: location
    isRequired: true
  - name: description
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
  name: create_deployment
  summary: "Uploads a new service package and creates a new deployment on staging\n\
    or production.\n\nservice_name:\n   Name of the hosted service.\n\ndeployment_slot:\n\
    \   The environment to which the hosted service is deployed. Valid\n   values\
    \ are: staging, production\n\nname:\n   The name for the deployment. The deployment\
    \ name must be unique\n   among other deployments for the hosted service.\n\n\
    package_url:\n   A URL that refers to the location of the service package in the\n\
    \   Blob service. The service package can be located either in a\n   storage account\
    \ beneath the same subscription or a Shared Access\n   Signature (SAS) URI from\
    \ any storage account.\n\nlabel:\n   A name for the hosted service. The name can\
    \ be up to 100 characters\n   in length. It is recommended that the label be unique\
    \ within the\n   subscription. The name can be used to identify the hosted service\n\
    \   for your tracking purposes.\n\nconfiguration:\n   The base-64 encoded service\
    \ configuration file for the deployment.\n\nstart_deployment:\n   Indicates whether\
    \ to start the deployment immediately after it is\n   created. If false, the service\
    \ model is still deployed to the\n   virtual machines but the code is not run\
    \ immediately. Instead, the\n   service is Suspended until you call Update Deployment\
    \ Status and\n   set the status to Running, at which time the service will be\n\
    \   started. A deployed service still incurs charges, even if it is\n   suspended.\n\
    \ntreat_warnings_as_error:\n   Indicates whether to treat package validation warnings\
    \ as errors.\n   If set to true, the Created Deployment operation fails if there\n\
    \   are validation warnings on the service package.\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account\n   properties.\
    \ You can have a maximum of 50 extended property\n   name/value pairs. The maximum\
    \ length of the Name element is 64\n   characters, only alphanumeric characters\
    \ and underscores are valid\n   in the Name, and the name must start with a letter.\
    \ The value has\n   a maximum length of 255 characters."
  signature: create_deployment(service_name, deployment_slot, name, package_url, label,
    configuration, start_deployment=False, treat_warnings_as_error=False, extended_properties=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_slot
    isRequired: true
  - name: name
    isRequired: true
  - name: package_url
    isRequired: true
  - name: label
    isRequired: true
  - name: configuration
    isRequired: true
  - name: start_deployment
    defaultValue: 'False'
  - name: treat_warnings_as_error
    defaultValue: 'False'
  - name: extended_properties
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
  name: create_hosted_service
  summary: "Creates a new hosted service in Windows Azure.\n\nservice_name:\n   A\
    \ name for the hosted service that is unique within Windows Azure.\n   This name\
    \ is the DNS prefix name and can be used to access the\n   hosted service.\n\n\
    label:\n   A name for the hosted service. The name can be up to 100 characters\n\
    \   in length. The name can be used to identify the storage account for\n   your\
    \ tracking purposes.\n\ndescription:\n   A description for the hosted service.\
    \ The description can be up to\n   1024 characters in length.\n\nlocation:\n \
    \  The location where the hosted service will be created. You can\n   specify\
    \ either a location or affinity_group, but not both.\n\naffinity_group:\n   The\
    \ name of an existing affinity group associated with this\n   subscription. This\
    \ name is a GUID and can be retrieved by examining\n   the name element of the\
    \ response body returned by\n   list_affinity_groups. You can specify either a\
    \ location or\n   affinity_group, but not both.\n\nextended_properties:\n   Dictionary\
    \ containing name/value pairs of storage account\n   properties. You can have\
    \ a maximum of 50 extended property\n   name/value pairs. The maximum length of\
    \ the Name element is 64\n   characters, only alphanumeric characters and underscores\
    \ are valid\n   in the Name, and the name must start with a letter. The value\
    \ has\n   a maximum length of 255 characters."
  signature: create_hosted_service(service_name, label, description=None, location=None,
    affinity_group=None, extended_properties=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: label
    isRequired: true
  - name: description
    defaultValue: None
  - name: location
    defaultValue: None
  - name: affinity_group
    defaultValue: None
  - name: extended_properties
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
  name: create_reserved_ip_address
  summary: "Reserves an IPv4 address for the specified subscription.\n\nname:\n  \
    \ Required. Specifies the name for the reserved IP address.\n\nlabel:\n   Optional.\
    \ Specifies a label for the reserved IP address. The label\n   can be up to 100\
    \ characters long and can be used for your tracking\n   purposes.\n\nlocation:\n\
    \   Required. Specifies the location of the reserved IP address. This\n   should\
    \ be the same location that is assigned to the cloud service\n   containing the\
    \ deployment that will use the reserved IP address.\n   To see the available locations,\
    \ you can use list_locations."
  signature: create_reserved_ip_address(name, label=None, location=None)
  parameters:
  - name: name
    isRequired: true
  - name: label
    defaultValue: None
  - name: location
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
  name: create_storage_account
  summary: "Creates a new storage account in Windows Azure.\n\nservice_name:\n   A\
    \ name for the storage account that is unique within Windows Azure.\n   Storage\
    \ account names must be between 3 and 24 characters in length\n   and use numbers\
    \ and lower-case letters only.\n\ndescription:\n   A description for the storage\
    \ account. The description may be up\n   to 1024 characters in length.\n\nlabel:\n\
    \   A name for the storage account. The name may be up to 100\n   characters in\
    \ length. The name can be used to identify the storage\n   account for your tracking\
    \ purposes.\n\naffinity_group:\n   The name of an existing affinity group in the\
    \ specified\n   subscription. You can specify either a location or affinity_group,\n\
    \   but not both.\n\nlocation:\n   The location where the storage account is created.\
    \ You can specify\n   either a location or affinity_group, but not both.\n\ngeo_replication_enabled:\n\
    \   Deprecated. Replaced by the account_type parameter.\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account\n   properties.\
    \ You can have a maximum of 50 extended property\n   name/value pairs. The maximum\
    \ length of the Name element is 64\n   characters, only alphanumeric characters\
    \ and underscores are valid\n   in the Name, and the name must start with a letter.\
    \ The value has\n   a maximum length of 255 characters.\n\naccount_type:\n   Specifies\
    \ whether the account supports locally-redundant storage,\n   geo-redundant storage,\
    \ zone-redundant storage, or read access\n   geo-redundant storage.\n   Possible\
    \ values are:\n\n      Standard_LRS, Standard_ZRS, Standard_GRS, Standard_RAGRS"
  signature: create_storage_account(service_name, description, label, affinity_group=None,
    location=None, geo_replication_enabled=None, extended_properties=None, account_type='Standard_GRS')
  parameters:
  - name: service_name
    isRequired: true
  - name: description
    isRequired: true
  - name: label
    isRequired: true
  - name: affinity_group
    defaultValue: None
  - name: location
    defaultValue: None
  - name: geo_replication_enabled
    defaultValue: None
  - name: extended_properties
    defaultValue: None
  - name: account_type
    defaultValue: Standard_GRS
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
  name: create_virtual_machine_deployment
  summary: "Provisions a virtual machine based on the supplied configuration.\n\n\
    service_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ for the deployment. The deployment name must be unique\n   among other deployments\
    \ for the hosted service.\n\ndeployment_slot:\n   The environment to which the\
    \ hosted service is deployed. Valid\n   values are: staging, production\n\nlabel:\n\
    \   Specifies an identifier for the deployment. The label can be up to\n   100\
    \ characters long. The label can be used for tracking purposes.\n\nrole_name:\n\
    \   The name of the role.\n\nsystem_config:\n   Contains the metadata required\
    \ to provision a virtual machine from\n   a Windows or Linux OS image.  Use an\
    \ instance of\n   WindowsConfigurationSet or LinuxConfigurationSet.\n\nos_virtual_hard_disk:\n\
    \   Contains the parameters Windows Azure uses to create the operating\n   system\
    \ disk for the virtual machine. If you are creating a Virtual\n   Machine by using\
    \ a VM Image, this parameter is not used.\n\nnetwork_config:\n   Encapsulates\
    \ the metadata required to create the virtual network\n   configuration for a\
    \ virtual machine. If you do not include a\n   network configuration set you will\
    \ not be able to access the VM\n   through VIPs over the internet. If your virtual\
    \ machine belongs to\n   a virtual network you can not specify which subnet address\
    \ space\n   it resides under. Use an instance of ConfigurationSet.\n\navailability_set_name:\n\
    \   Specifies the name of an availability set to which to add the\n   virtual\
    \ machine. This value controls the virtual machine\n   allocation in the Windows\
    \ Azure environment. Virtual machines\n   specified in the same availability set\
    \ are allocated to different\n   nodes to maximize availability.\n\ndata_virtual_hard_disks:\n\
    \   Contains the parameters Windows Azure uses to create a data disk\n   for a\
    \ virtual machine.\n\nrole_size:\n   The size of the virtual machine to allocate.\
    \ The default value is\n   Small. Possible values are: ExtraSmall,Small,Medium,Large,\n\
    \   ExtraLarge,A5,A6,A7,A8,A9,Basic_A0,Basic_A1,Basic_A2,Basic_A3,\n   Basic_A4,Standard_D1,Standard_D2,Standard_D3,Standard_D4,\n\
    \   Standard_D11,Standard_D12,Standard_D13,Standard_D14,Standard_G1,\n   Standard_G2,Sandard_G3,Standard_G4,Standard_G5.\
    \ The specified\n   value must be compatible with the disk selected in the\n \
    \  OSVirtualHardDisk values.\n\nrole_type:\n   The type of the role for the virtual\
    \ machine. The only supported\n   value is PersistentVMRole.\n\nvirtual_network_name:\n\
    \   Specifies the name of an existing virtual network to which the\n   deployment\
    \ will belong.\n\nresource_extension_references:\n   Optional. Contains a collection\
    \ of resource extensions that are to\n   be installed on the Virtual Machine.\
    \ This element is used if\n   provision_guest_agent is set to True. Use an iterable\
    \ of instances\n   of ResourceExtensionReference.\n\nprovision_guest_agent:\n\
    \   Optional. Indicates whether the VM Agent is installed on the\n   Virtual Machine.\
    \ To run a resource extension in a Virtual Machine,\n   this service must be installed.\n\
    \nvm_image_name:\n   Optional. Specifies the name of the VM Image that is to be\
    \ used to\n   create the Virtual Machine. If this is specified, the\n   system_config\
    \ and network_config parameters are not used.\n\nmedia_location:\n   Optional.\
    \ Required if the Virtual Machine is being created from a\n   published VM Image.\
    \ Specifies the location of the VHD file that is\n   created when VMImageName\
    \ specifies a published VM Image.\n\ndns_servers:\n   Optional. List of DNS servers\
    \ (use DnsServer class) to associate\n   with the Virtual Machine.\n\nreserved_ip_name:\n\
    \   Optional. Specifies the name of a reserved IP address that is to be\n   assigned\
    \ to the deployment. You must run create_reserved_ip_address\n   before you can\
    \ assign the address to the deployment using this\n   element."
  signature: create_virtual_machine_deployment(service_name, deployment_name, deployment_slot,
    label, role_name, system_config, os_virtual_hard_disk, network_config=None, availability_set_name=None,
    data_virtual_hard_disks=None, role_size=None, role_type='PersistentVMRole', virtual_network_name=None,
    resource_extension_references=None, provision_guest_agent=None, vm_image_name=None,
    media_location=None, dns_servers=None, reserved_ip_name=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: deployment_slot
    isRequired: true
  - name: label
    isRequired: true
  - name: role_name
    isRequired: true
  - name: system_config
    isRequired: true
  - name: os_virtual_hard_disk
    isRequired: true
  - name: network_config
    defaultValue: None
  - name: availability_set_name
    defaultValue: None
  - name: data_virtual_hard_disks
    defaultValue: None
  - name: role_size
    defaultValue: None
  - name: role_type
    defaultValue: PersistentVMRole
  - name: virtual_network_name
    defaultValue: None
  - name: resource_extension_references
    defaultValue: None
  - name: provision_guest_agent
    defaultValue: None
  - name: vm_image_name
    defaultValue: None
  - name: media_location
    defaultValue: None
  - name: dns_servers
    defaultValue: None
  - name: reserved_ip_name
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
  name: create_vm_image
  summary: "Creates a VM Image in the image repository that is associated with the\n\
    specified subscription using a specified set of virtual hard disks.\n\nvm_image:\n\
    \   An instance of VMImage class.\n\nvm_image.name: Required. Specifies the name\
    \ of the image.\nvm_image.label: Required. Specifies an identifier for the image.\n\
    vm_image.description: Optional. Specifies the description of the image.\nvm_image.os_disk_configuration:\n\
    \n   Required. Specifies configuration information for the operating\n   system\
    \ disk that is associated with the image.\n\nvm_image.os_disk_configuration.host_caching:\n\
    \   Optional. Specifies the caching behavior of the operating system disk.\n \
    \  Possible values are: None, ReadOnly, ReadWrite\n\nvm_image.os_disk_configuration.os_state:\n\
    \   Required. Specifies the state of the operating system in the image.\n   Possible\
    \ values are: Generalized, Specialized\n   A Virtual Machine that is fully configured\
    \ and running contains a\n   Specialized operating system. A Virtual Machine on\
    \ which the\n   Sysprep command has been run with the generalize option contains\
    \ a\n   Generalized operating system.\n\nvm_image.os_disk_configuration.os:\n\
    \   Required. Specifies the operating system type of the image.\n\nvm_image.os_disk_configuration.media_link:\n\
    \   Required. Specifies the location of the blob in Windows Azure\n   storage.\
    \ The blob location belongs to a storage account in the\n   subscription specified\
    \ by the <subscription-id> value in the\n   operation call.\n\nvm_image.data_disk_configurations:\n\
    \   Optional. Specifies configuration information for the data disks\n   that\
    \ are associated with the image. A VM Image might not have data\n   disks associated\
    \ with it.\n\nvm_image.data_disk_configurations[].host_caching:\n   Optional.\
    \ Specifies the caching behavior of the data disk.\n   Possible values are: None,\
    \ ReadOnly, ReadWrite\n\nvm_image.data_disk_configurations[].lun:\n   Optional\
    \ if the lun for the disk is 0. Specifies the Logical Unit\n   Number (LUN) for\
    \ the data disk.\n\nvm_image.data_disk_configurations[].media_link:\n   Required.\
    \ Specifies the location of the blob in Windows Azure\n   storage. The blob location\
    \ belongs to a storage account in the\n   subscription specified by the <subscription-id>\
    \ value in the\n   operation call.\n\nvm_image.data_disk_configurations[].logical_size_in_gb:\n\
    \   Required. Specifies the size, in GB, of the data disk.\n\nvm_image.language:\
    \ Optional. Specifies the language of the image.\nvm_image.image_family:\n\n \
    \  Optional. Specifies a value that can be used to group VM Images.\n\nvm_image.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that\n   is created\
    \ from the VM Image.\n\nvm_image.eula:\n   Optional. Specifies the End User License\
    \ Agreement that is\n   associated with the image. The value for this element\
    \ is a string,\n   but it is recommended that the value be a URL that points to\
    \ a EULA.\n\nvm_image.icon_uri:\n   Optional. Specifies the URI to the icon that\
    \ is displayed for the\n   image in the Management Portal.\n\nvm_image.small_icon_uri:\n\
    \   Optional. Specifies the URI to the small icon that is displayed for\n   the\
    \ image in the Management Portal.\n\nvm_image.privacy_uri:\n   Optional. Specifies\
    \ the URI that points to a document that contains\n   the privacy policy related\
    \ to the image.\n\nvm_image.published_date:\n   Optional. Specifies the date when\
    \ the image was added to the image\n   repository.\n\nvm_image.show_in_gui:\n\
    \   Optional. Indicates whether the VM Images should be listed in the\n   portal."
  signature: create_vm_image(vm_image)
  parameters:
  - name: vm_image
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
  name: delete_affinity_group
  summary: "Deletes an affinity group in the specified subscription.\n\naffinity_group_name:\n\
    \   The name of the affinity group."
  signature: delete_affinity_group(affinity_group_name)
  parameters:
  - name: affinity_group_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
  name: delete_data_disk
  summary: "Removes the specified data disk from a virtual machine.\n\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_name:\n   The name of the role.\n\nlun:\n   The Logical Unit Number (LUN)\
    \ for the disk.\n\ndelete_vhd:\n   Deletes the underlying vhd blob in Azure storage."
  signature: delete_data_disk(service_name, deployment_name, role_name, lun, delete_vhd=False)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: lun
    isRequired: true
  - name: delete_vhd
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
  name: delete_deployment
  summary: "Deletes the specified deployment.\n\nservice_name:\n   Name of the hosted\
    \ service.\n\ndeployment_name:\n   The name of the deployment."
  signature: delete_deployment(service_name, deployment_name, delete_vhd=False)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: delete_vhd
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
  name: delete_disk
  summary: "Deletes the specified data or operating system disk from your image\n\
    repository.\n\ndisk_name:\n   The name of the disk to delete.\n\ndelete_vhd:\n\
    \   Deletes the underlying vhd blob in Azure storage."
  signature: delete_disk(disk_name, delete_vhd=False)
  parameters:
  - name: disk_name
    isRequired: true
  - name: delete_vhd
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
  name: delete_dns_server
  summary: "Deletes a DNS server from a deployment.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\ndns_server_name:\n\
    \   Name of the DNS server that you want to delete."
  signature: delete_dns_server(service_name, deployment_name, dns_server_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: dns_server_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
  name: delete_hosted_service
  summary: "Deletes the specified hosted service from Windows Azure.\n\nservice_name:\n\
    \   Name of the hosted service.\n\ncomplete:\n   True if all OS/data disks and\
    \ the source blobs for the disks should\n   also be deleted from storage."
  signature: delete_hosted_service(service_name, complete=False)
  parameters:
  - name: service_name
    isRequired: true
  - name: complete
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
  name: delete_management_certificate
  summary: "The Delete Management Certificate operation deletes a certificate from\n\
    the list of management certificates. Management certificates, which\nare also\
    \ known as subscription certificates, authenticate clients\nattempting to connect\
    \ to resources associated with your Windows Azure\nsubscription.\n\nthumbprint:\n\
    \   The thumb print that uniquely identifies the management\n   certificate."
  signature: delete_management_certificate(thumbprint)
  parameters:
  - name: thumbprint
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
  name: delete_os_image
  summary: "Deletes the specified OS image from your image repository.\n\nimage_name:\n\
    \   The name of the image.\n\ndelete_vhd:\n   Deletes the underlying vhd blob\
    \ in Azure storage."
  signature: delete_os_image(image_name, delete_vhd=False)
  parameters:
  - name: image_name
    isRequired: true
  - name: delete_vhd
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
  name: delete_reserved_ip_address
  summary: "Deletes a reserved IP address from the specified subscription.\n\nname:\n\
    \   Required. Name of the reserved IP address."
  signature: delete_reserved_ip_address(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
  name: delete_role
  summary: "Deletes the specified virtual machine.\n\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\ncomplete:\n   True if all OS/data disks and the source\
    \ blobs for the disks should\n   also be deleted from storage."
  signature: delete_role(service_name, deployment_name, role_name, complete=False)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: complete
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
  name: delete_role_instances
  summary: "Reinstalls the operating system on instances of web roles or worker\n\
    roles and initializes the storage resources that are used by them. If\nyou do\
    \ not want to initialize storage resources, you can use\nreimage_role_instance.\n\
    \nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_names:\n   List of role instance names."
  signature: delete_role_instances(service_name, deployment_name, role_instance_names)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_instance_names
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
  name: delete_service_certificate
  summary: "Deletes a service certificate from the certificate store of a hosted\n\
    service.\n\nservice_name:\n   Name of the hosted service.\n\nthumbalgorithm:\n\
    \   The algorithm for the certificate's thumbprint.\n\nthumbprint:\n   The hexadecimal\
    \ representation of the thumbprint."
  signature: delete_service_certificate(service_name, thumbalgorithm, thumbprint)
  parameters:
  - name: service_name
    isRequired: true
  - name: thumbalgorithm
    isRequired: true
  - name: thumbprint
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
  name: delete_storage_account
  summary: "Deletes the specified storage account from Windows Azure.\n\nservice_name:\n\
    \   Name of the storage service account."
  signature: delete_storage_account(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
  name: delete_vm_image
  summary: "Deletes the specified VM Image from the image repository that is\nassociated\
    \ with the specified subscription.\n\nvm_image_name:\n   The name of the image.\n\
    \ndelete_vhd:\n   Deletes the underlying vhd blob in Azure storage."
  signature: delete_vm_image(vm_image_name, delete_vhd=False)
  parameters:
  - name: vm_image_name
    isRequired: true
  - name: delete_vhd
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
  name: disassociate_reserved_ip_address
  summary: "Disassociate an existing reservedIP from the given deployment.\n\nname:\n\
    \   Required. Name of the reserved IP address.\n\nservice_name:\n   Required.\
    \ Name of the hosted service.\n\ndeployment_name:\n   Required. Name of the deployment.\n\
    \nvirtual_ip_name:\n   Optional. Name of the VirtualIP in case of multi Vip tenant.\n\
    \   If this value is not specified default virtualIP is used\n   for this operation."
  signature: disassociate_reserved_ip_address(name, service_name, deployment_name,
    virtual_ip_name=None)
  parameters:
  - name: name
    isRequired: true
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: virtual_ip_name
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
  name: get_affinity_group_properties
  summary: "Returns the system properties associated with the specified affinity\n\
    group.\n\naffinity_group_name:\n   The name of the affinity group."
  signature: get_affinity_group_properties(affinity_group_name)
  parameters:
  - name: affinity_group_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
  name: get_data_disk
  summary: "Retrieves the specified data disk from a virtual machine.\n\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_name:\n   The name of the role.\n\nlun:\n   The Logical Unit Number (LUN)\
    \ for the disk."
  signature: get_data_disk(service_name, deployment_name, role_name, lun)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: lun
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
  name: get_deployment_by_name
  summary: "Returns configuration information, status, and system properties for a\n\
    deployment.\n\nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n\
    \   The name of the deployment."
  signature: get_deployment_by_name(service_name, deployment_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
  name: get_deployment_by_slot
  summary: "Returns configuration information, status, and system properties for\n\
    a deployment.\n\nservice_name:\n   Name of the hosted service.\n\ndeployment_slot:\n\
    \   The environment to which the hosted service is deployed. Valid\n   values\
    \ are: staging, production"
  signature: get_deployment_by_slot(service_name, deployment_slot)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_slot
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
  name: get_disk
  summary: Retrieves a disk from your image repository.
  signature: get_disk(disk_name)
  parameters:
  - name: disk_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
  name: get_hosted_service_properties
  summary: "Retrieves system properties for the specified hosted service. These\n\
    properties include the service name and service type; the name of the\naffinity\
    \ group to which the service belongs, or its location if it is\nnot part of an\
    \ affinity group; and optionally, information on the\nservice's deployments.\n\
    \nservice_name:\n   Name of the hosted service.\n\nembed_detail:\n   When True,\
    \ the management service returns properties for all\n   deployments of the service,\
    \ as well as for the service itself."
  signature: get_hosted_service_properties(service_name, embed_detail=False)
  parameters:
  - name: service_name
    isRequired: true
  - name: embed_detail
    defaultValue: 'False'
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
  name: get_management_certificate
  summary: "The Get Management Certificate operation retrieves information about\n\
    the management certificate with the specified thumbprint. Management\ncertificates,\
    \ which are also known as subscription certificates,\nauthenticate clients attempting\
    \ to connect to resources associated\nwith your Windows Azure subscription.\n\n\
    thumbprint:\n   The thumbprint value of the certificate."
  signature: get_management_certificate(thumbprint)
  parameters:
  - name: thumbprint
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_operation_status
  name: get_operation_status
  summary: "Returns the status of the specified operation. After calling an\nasynchronous\
    \ operation, you can call Get Operation Status to determine\nwhether the operation\
    \ has succeeded, failed, or is still in progress.\n\nrequest_id:\n   The request\
    \ ID for the request you wish to track."
  signature: get_operation_status(request_id)
  parameters:
  - name: request_id
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
  name: get_os_image
  summary: Retrieves an OS image from the image repository.
  signature: get_os_image(image_name)
  parameters:
  - name: image_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
  name: get_os_image_details
  summary: 'Retrieves an OS image from the image repository, including replication

    progress.'
  signature: get_os_image_details(image_name)
  parameters:
  - name: image_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
  name: get_reserved_ip_address
  summary: "Retrieves information about the specified reserved IP address.\n\nname:\n\
    \   Required. Name of the reserved IP address."
  signature: get_reserved_ip_address(name)
  parameters:
  - name: name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
  name: get_role
  summary: "Retrieves the specified virtual machine.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  signature: get_role(service_name, deployment_name, role_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
  name: get_service_certificate
  summary: "Returns the public data for the specified X.509 certificate associated\n\
    with a hosted service.\n\nservice_name:\n   Name of the hosted service.\n\nthumbalgorithm:\n\
    \   The algorithm for the certificate's thumbprint.\n\nthumbprint:\n   The hexadecimal\
    \ representation of the thumbprint."
  signature: get_service_certificate(service_name, thumbalgorithm, thumbprint)
  parameters:
  - name: service_name
    isRequired: true
  - name: thumbalgorithm
    isRequired: true
  - name: thumbprint
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
  name: get_storage_account_keys
  summary: "Returns the primary and secondary access keys for the specified\nstorage\
    \ account.\n\nservice_name:\n   Name of the storage service account."
  signature: get_storage_account_keys(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
  name: get_storage_account_properties
  summary: "Returns system properties for the specified storage account.\n\nservice_name:\n\
    \   Name of the storage service account."
  signature: get_storage_account_properties(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
  name: get_subscription
  summary: 'Returns account and resource allocation information on the specified

    subscription.'
  signature: get_subscription()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
  name: list_affinity_groups
  summary: Lists the affinity groups associated with the specified subscription.
  signature: list_affinity_groups()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
  name: list_disks
  summary: Retrieves a list of the disks in your image repository.
  signature: list_disks()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
  name: list_hosted_services
  summary: 'Lists the hosted services available under the current subscription.


    Note that you will receive a list of HostedService instances, without

    all details inside. For instance, deployments will be None. If you

    want deployments information for a specific host service, you have to

    call get_hosted_service_properties with embed_detail=True.'
  signature: list_hosted_services()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
  name: list_locations
  summary: 'Lists all of the data center locations that are valid for your

    subscription.'
  signature: list_locations()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
  name: list_management_certificates
  summary: 'The List Management Certificates operation lists and returns basic

    information about all of the management certificates associated with

    the specified subscription. Management certificates, which are also

    known as subscription certificates, authenticate clients attempting to

    connect to resources associated with your Windows Azure subscription.'
  signature: list_management_certificates()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
  name: list_operating_system_families
  summary: 'Lists the guest operating system families available in Windows Azure,

    and also lists the operating system versions available for each family.'
  signature: list_operating_system_families()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
  name: list_operating_systems
  summary: 'Lists the versions of the guest operating system that are currently

    available in Windows Azure.'
  signature: list_operating_systems()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
  name: list_os_images
  summary: Retrieves a list of the OS images from the image repository.
  signature: list_os_images()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
  name: list_reserved_ip_addresses
  summary: 'Lists the IP addresses that have been reserved for the specified

    subscription.'
  signature: list_reserved_ip_addresses()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
  name: list_resource_extension_versions
  summary: "Lists the versions of a resource extension that are available to add\n\
    to a Virtual Machine.\n\npublisher_name:\n   Name of the resource extension publisher.\n\
    \nextension_name:\n   Name of the resource extension."
  signature: list_resource_extension_versions(publisher_name, extension_name)
  parameters:
  - name: publisher_name
    isRequired: true
  - name: extension_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
  name: list_resource_extensions
  summary: 'Lists the resource extensions that are available to add to a

    Virtual Machine.'
  signature: list_resource_extensions()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
  name: list_role_sizes
  summary: 'Lists the role sizes that are available under the specified

    subscription.'
  signature: list_role_sizes()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
  name: list_service_certificates
  summary: "Lists all of the service certificates associated with the specified\n\
    hosted service.\n\nservice_name:\n   Name of the hosted service."
  signature: list_service_certificates(service_name)
  parameters:
  - name: service_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
  name: list_storage_accounts
  summary: Lists the storage accounts available under the current subscription.
  signature: list_storage_accounts()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
  name: list_subscription_operations
  summary: 'List subscription operations.


    start_time: Required. An ISO8601 date.

    end_time: Required. An ISO8601 date.

    object_id_filter: Optional. Returns subscription operations only for the specified
    object type and object ID

    operation_result_filter: Optional. Returns subscription operations only for the
    specified result status, either Succeeded, Failed, or InProgress.

    continuation_token: Optional.

    More information at:

    [https://msdn.microsoft.com/en-us/library/azure/gg715318.aspx](https://msdn.microsoft.com/en-us/library/azure/gg715318.aspx)'
  signature: list_subscription_operations(start_time=None, end_time=None, object_id_filter=None,
    operation_result_filter=None, continuation_token=None)
  parameters:
  - name: start_time
    defaultValue: None
  - name: end_time
    defaultValue: None
  - name: object_id_filter
    defaultValue: None
  - name: operation_result_filter
    defaultValue: None
  - name: continuation_token
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
  name: list_subscriptions
  summary: 'Returns a list of subscriptions that you can access.


    You must make sure that the request that is made to the management

    service is secure using an Active Directory access token.'
  signature: list_subscriptions()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
  name: list_virtual_network_sites
  summary: Retrieves a list of the virtual networks.
  signature: list_virtual_network_sites()
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
  name: list_vm_images
  summary: 'Retrieves a list of the VM Images from the image repository that is

    associated with the specified subscription.'
  signature: list_vm_images(location=None, publisher=None, category=None)
  parameters:
  - name: location
    defaultValue: None
  - name: publisher
    defaultValue: None
  - name: category
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.perform_delete
  name: perform_delete
  summary: "Performs a DELETE request and returns the response.\n\npath:\n   Path\
    \ to the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_delete(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.perform_get
  name: perform_get
  summary: "Performs a GET request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_get(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.perform_post
  name: perform_post
  summary: "Performs a POST request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the POST request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_post(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.perform_put
  name: perform_put
  summary: "Performs a PUT request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the PUT request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_put(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
  name: reboot_role_instance
  summary: "Requests a reboot of a role instance that is running in a deployment.\n\
    \nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_name:\n   The name of the role instance."
  signature: reboot_role_instance(service_name, deployment_name, role_instance_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_instance_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
  name: rebuild_role_instance
  summary: "Reinstalls the operating system on instances of web roles or worker\n\
    roles and initializes the storage resources that are used by them. If\nyou do\
    \ not want to initialize storage resources, you can use\nreimage_role_instance.\n\
    \nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_name:\n   The name of the role instance."
  signature: rebuild_role_instance(service_name, deployment_name, role_instance_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_instance_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
  name: regenerate_storage_account_keys
  summary: "Regenerates the primary or secondary access key for the specified\nstorage\
    \ account.\n\nservice_name:\n   Name of the storage service account.\n\nkey_type:\n\
    \   Specifies which key to regenerate. Valid values are:\n   Primary, Secondary"
  signature: regenerate_storage_account_keys(service_name, key_type)
  parameters:
  - name: service_name
    isRequired: true
  - name: key_type
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
  name: reimage_role_instance
  summary: "Requests a reimage of a role instance that is running in a deployment.\n\
    \nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_name:\n   The name of the role instance."
  signature: reimage_role_instance(service_name, deployment_name, role_instance_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_instance_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
  name: replicate_vm_image
  summary: "Replicate a VM image to multiple target locations. This operation\nis\
    \ only for publishers. You have to be registered as image publisher\nwith Microsoft\
    \ Azure to be able to call this.\n\nvm_image_name:\n   Specifies the name of the\
    \ VM Image that is to be used for\n   replication\n\nregions:\n   Specified a\
    \ list of regions to replicate the image to\n   Note: The regions in the request\
    \ body are not additive. If a VM\n   Image has already been replicated to Regions\
    \ A, B, and C, and\n   a request is made to replicate to Regions A and D, the\
    \ VM\n   Image will remain in Region A, will be replicated in Region D,\n   and\
    \ will be unreplicated from Regions B and C\n\noffer:\n   Specifies the publisher\
    \ defined name of the offer. The allowed\n   characters are uppercase or lowercase\
    \ letters, digit,\n   hypen(-), period (.).The maximum allowed length is 64 characters.\n\
    \nsku:\n   Specifies the publisher defined name of the Sku. The allowed\n   characters\
    \ are uppercase or lowercase letters, digit,\n   hypen(-), period (.). The maximum\
    \ allowed length is 64 characters.\n\nversion:\n   Specifies the publisher defined\
    \ version of the image.\n   The allowed characters are digit and period.\n   Format:\
    \ <MajorVersion>.<MinorVersion>.<Patch>\n   Example: '1.0.0' or '1.1.0' The 3\
    \ version number to\n   follow standard of most of the RPs. See [http://semver.org](http://semver.org)"
  signature: replicate_vm_image(vm_image_name, regions, offer, sku, version)
  parameters:
  - name: vm_image_name
    isRequired: true
  - name: regions
    isRequired: true
  - name: offer
    isRequired: true
  - name: sku
    isRequired: true
  - name: version
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
  name: restart_role
  summary: "Restarts the specified virtual machine.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  signature: restart_role(service_name, deployment_name, role_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
  name: rollback_update_or_upgrade
  summary: "Cancels an in progress configuration change (update) or upgrade and\n\
    returns the deployment to its state before the upgrade or\nconfiguration change\
    \ was started.\n\nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n\
    \   The name of the deployment.\n\nmode:\n   Specifies whether the rollback should\
    \ proceed automatically.\n      auto - The rollback proceeds without further user\
    \ input.\n      manual - You must call the Walk Upgrade Domain operation to\n\n\
    \         apply the rollback to each upgrade domain.\n\nforce:\n   Specifies whether\
    \ the rollback should proceed even when it will\n   cause local data to be lost\
    \ from some role instances. True if the\n   rollback should proceed; otherwise\
    \ false if the rollback should\n   fail."
  signature: rollback_update_or_upgrade(service_name, deployment_name, mode, force)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: mode
    isRequired: true
  - name: force
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.set_proxy
  name: set_proxy
  summary: "Sets the proxy server host and port for the HTTP CONNECT Tunnelling.\n\
    \nhost:\n   Address of the proxy. Ex: '192.168.0.100'\n\nport:\n   Port of the\
    \ proxy. Ex: 6000\n\nuser:\n   User for proxy authorization.\n\npassword:\n  \
    \ Password for proxy authorization."
  signature: set_proxy(host, port, user=None, password=None)
  parameters:
  - name: host
    isRequired: true
  - name: port
    isRequired: true
  - name: user
    defaultValue: None
  - name: password
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
  name: share_vm_image
  summary: "Share an already replicated OS image. This operation is only for\npublishers.\
    \ You have to be registered as image publisher with Windows\nAzure to be able\
    \ to call this.\n\nvm_image_name:\n   The name of the virtual machine image to\
    \ share\n\npermission:\n   The sharing permission: public, msdn, or private"
  signature: share_vm_image(vm_image_name, permission)
  parameters:
  - name: vm_image_name
    isRequired: true
  - name: permission
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.should_use_requests
  name: should_use_requests
  signature: static should_use_requests(cert_file)
  parameters:
  - name: cert_file
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
  name: shutdown_role
  summary: "Shuts down the specified virtual machine.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\npost_shutdown_action:\n   Specifies how the Virtual\
    \ Machine should be shut down. Values are:\n      Stopped\n         Shuts down\
    \ the Virtual Machine but retains the compute\n         resources. You will continue\
    \ to be billed for the resources\n         that the stopped machine uses.\n\n\
    \      StoppedDeallocated\n         Shuts down the Virtual Machine and releases\
    \ the compute\n         resources. You are not billed for the compute resources\
    \ that\n         this Virtual Machine uses. If a static Virtual Network IP\n \
    \        address is assigned to the Virtual Machine, it is reserved."
  signature: shutdown_role(service_name, deployment_name, role_name, post_shutdown_action='Stopped')
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: post_shutdown_action
    defaultValue: Stopped
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
  name: shutdown_roles
  summary: "Shuts down the specified virtual machines.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_names:\n\
    \   The names of the roles, as an enumerable of strings.\n\npost_shutdown_action:\n\
    \   Specifies how the Virtual Machine should be shut down. Values are:\n     \
    \ Stopped\n         Shuts down the Virtual Machine but retains the compute\n \
    \        resources. You will continue to be billed for the resources\n       \
    \  that the stopped machine uses.\n\n      StoppedDeallocated\n         Shuts\
    \ down the Virtual Machine and releases the compute\n         resources. You are\
    \ not billed for the compute resources that\n         this Virtual Machine uses.\
    \ If a static Virtual Network IP\n         address is assigned to the Virtual\
    \ Machine, it is reserved."
  signature: shutdown_roles(service_name, deployment_name, role_names, post_shutdown_action='Stopped')
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_names
    isRequired: true
  - name: post_shutdown_action
    defaultValue: Stopped
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
  name: start_role
  summary: "Starts the specified virtual machine.\n\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  signature: start_role(service_name, deployment_name, role_name)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
  name: start_roles
  summary: "Starts the specified virtual machines.\n\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_names:\n\
    \   The names of the roles, as an enumerable of strings."
  signature: start_roles(service_name, deployment_name, role_names)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_names
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
  name: swap_deployment
  summary: "Initiates a virtual IP swap between the staging and production\ndeployment\
    \ environments for a service. If the service is currently\nrunning in the staging\
    \ environment, it will be swapped to the\nproduction environment. If it is running\
    \ in the production\nenvironment, it will be swapped to staging.\n\nservice_name:\n\
    \   Name of the hosted service.\n\nproduction:\n   The name of the production\
    \ deployment.\n\nsource_deployment:\n   The name of the source deployment."
  signature: swap_deployment(service_name, production, source_deployment)
  parameters:
  - name: service_name
    isRequired: true
  - name: production
    isRequired: true
  - name: source_deployment
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
  name: unreplicate_vm_image
  summary: "Unreplicate a VM image from all regions This operation\nis only for publishers.\
    \ You have to be registered as image publisher\nwith Microsoft Azure to be able\
    \ to call this\n\nvm_image_name:\n   Specifies the name of the VM Image that is\
    \ to be used for\n   unreplication. The VM Image Name should be the user VM Image,\n\
    \   not the published name of the VM Image."
  signature: unreplicate_vm_image(vm_image_name)
  parameters:
  - name: vm_image_name
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
  name: update_affinity_group
  summary: "Updates the label and/or the description for an affinity group for the\n\
    specified subscription.\n\naffinity_group_name:\n   The name of the affinity group.\n\
    \nlabel:\n   A name for the affinity group. The name can be up to 100 characters\n\
    \   in length.\n\ndescription:\n   A description for the affinity group. The description\
    \ can be up to\n   1024 characters in length."
  signature: update_affinity_group(affinity_group_name, label, description=None)
  parameters:
  - name: affinity_group_name
    isRequired: true
  - name: label
    isRequired: true
  - name: description
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
  name: update_data_disk
  summary: "Updates the specified data disk attached to the specified virtual\nmachine.\n\
    \nservice_name:\n   The name of the service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_name:\n   The name of the role.\n\nlun:\n   Specifies\
    \ the Logical Unit Number (LUN) for the disk. The LUN\n   specifies the slot in\
    \ which the data drive appears when mounted\n   for usage by the virtual machine.\
    \ Valid LUN values are 0 through\n   15.\n\nhost_caching:\n   Specifies the platform\
    \ caching behavior of data disk blob for\n   read/write efficiency. The default\
    \ vault is ReadOnly. Possible\n   values are: None, ReadOnly, ReadWrite\n\nmedia_link:\n\
    \   Specifies the location of the blob in Windows Azure blob store\n   where the\
    \ media for the disk is located. The blob location must\n   belong to the storage\
    \ account in the subscription specified by\n   the <subscription-id> value in\
    \ the operation call. Example:\n   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nupdated_lun:\n   Specifies the Logical Unit Number (LUN) for the disk. The LUN\n\
    \   specifies the slot in which the data drive appears when mounted\n   for usage\
    \ by the virtual machine. Valid LUN values are 0 through 15.\n\ndisk_label:\n\
    \   Specifies the description of the data disk. When you attach a disk,\n   either\
    \ by directly referencing a media using the MediaLink element\n   or specifying\
    \ the target disk size, you can use the DiskLabel\n   element to customize the\
    \ name property of the target data disk.\n\ndisk_name:\n   Specifies the name\
    \ of the disk. Windows Azure uses the specified\n   disk to create the data disk\
    \ for the machine and populates this\n   field with the disk name.\n\nlogical_disk_size_in_gb:\n\
    \   Specifies the size, in GB, of an empty disk to be attached to the\n   role.\
    \ The disk can be created as part of disk attach or create VM\n   role call by\
    \ specifying the value for this property. Windows Azure\n   creates the empty\
    \ disk based on size preference and attaches the\n   newly created disk to the\
    \ Role."
  signature: update_data_disk(service_name, deployment_name, role_name, lun, host_caching=None,
    media_link=None, updated_lun=None, disk_label=None, disk_name=None, logical_disk_size_in_gb=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: lun
    isRequired: true
  - name: host_caching
    defaultValue: None
  - name: media_link
    defaultValue: None
  - name: updated_lun
    defaultValue: None
  - name: disk_label
    defaultValue: None
  - name: disk_name
    defaultValue: None
  - name: logical_disk_size_in_gb
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
  name: update_deployment_status
  summary: "Initiates a change in deployment status.\n\nservice_name:\n   Name of\
    \ the hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\n\
    status:\n   The change to initiate to the deployment status. Possible values\n\
    \   include:\n\n      Running, Suspended"
  signature: update_deployment_status(service_name, deployment_name, status)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: status
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
  name: update_disk
  summary: "Updates an existing disk in your image repository.\n\ndisk_name:\n   The\
    \ name of the disk to update.\n\nhas_operating_system:\n   Deprecated.\n\nlabel:\n\
    \   Specifies the description of the disk.\n\nmedia_link:\n   Deprecated.\n\n\
    name:\n   Deprecated.\n\nos:\n   Deprecated."
  signature: update_disk(disk_name, has_operating_system=None, label=None, media_link=None,
    name=None, os=None)
  parameters:
  - name: disk_name
    isRequired: true
  - name: has_operating_system
    defaultValue: None
  - name: label
    defaultValue: None
  - name: media_link
    defaultValue: None
  - name: name
    defaultValue: None
  - name: os
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
  name: update_dns_server
  summary: "Updates the ip address of a DNS server.\n\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\ndns_server_name:\n\
    \   Specifies the name of the DNS server.\n\naddress:\n   Specifies the IP address\
    \ of the DNS server."
  signature: update_dns_server(service_name, deployment_name, dns_server_name, address)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: dns_server_name
    isRequired: true
  - name: address
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
  name: update_hosted_service
  summary: "Updates the label and/or the description for a hosted service in\nWindows\
    \ Azure.\n\nservice_name:\n   Name of the hosted service.\n\nlabel:\n   A name\
    \ for the hosted service. The name may be up to 100 characters\n   in length.\
    \ You must specify a value for either Label or\n   Description, or for both. It\
    \ is recommended that the label be\n   unique within the subscription. The name\
    \ can be used\n   identify the hosted service for your tracking purposes.\n\n\
    description:\n   A description for the hosted service. The description may be\
    \ up to\n   1024 characters in length. You must specify a value for either\n \
    \  Label or Description, or for both.\n\nextended_properties:\n   Dictionary containing\
    \ name/value pairs of storage account\n   properties. You can have a maximum of\
    \ 50 extended property\n   name/value pairs. The maximum length of the Name element\
    \ is 64\n   characters, only alphanumeric characters and underscores are valid\n\
    \   in the Name, and the name must start with a letter. The value has\n   a maximum\
    \ length of 255 characters."
  signature: update_hosted_service(service_name, label=None, description=None, extended_properties=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: label
    defaultValue: None
  - name: description
    defaultValue: None
  - name: extended_properties
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
  name: update_os_image
  summary: "Updates an OS image that in your image repository.\n\nimage_name:\n  \
    \ The name of the image to update.\n\nlabel:\n   Specifies the friendly name of\
    \ the image to be updated. You cannot\n   use this operation to update images\
    \ provided by the Windows Azure\n   platform.\n\nmedia_link:\n   Specifies the\
    \ location of the blob in Windows Azure blob store\n   where the media for the\
    \ image is located. The blob location must\n   belong to a storage account in\
    \ the subscription specified by the\n   <subscription-id> value in the operation\
    \ call. Example:\n   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the OS image that Windows Azure uses to\n   identify\
    \ the image when creating one or more VM Roles.\n\nos:\n   The operating system\
    \ type of the OS image. Possible values are:\n   Linux, Windows"
  signature: update_os_image(image_name, label, media_link, name, os)
  parameters:
  - name: image_name
    isRequired: true
  - name: label
    isRequired: true
  - name: media_link
    isRequired: true
  - name: name
    isRequired: true
  - name: os
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
  name: update_os_image_from_image_reference
  summary: "Updates metadata elements from a given OS image reference.\n\nimage_name:\n\
    \   The name of the image to update.\n\nos_image:\n   An instance of OSImage class.\n\
    \nos_image.label: Optional. Specifies an identifier for the image.\nos_image.description:\
    \ Optional. Specifies the description of the image.\nos_image.language: Optional.\
    \ Specifies the language of the image.\nos_image.image_family:\n\n   Optional.\
    \ Specifies a value that can be used to group VM Images.\n\nos_image.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that\n   is created\
    \ from the VM Image.\n\nos_image.eula:\n   Optional. Specifies the End User License\
    \ Agreement that is\n   associated with the image. The value for this element\
    \ is a string,\n   but it is recommended that the value be a URL that points to\
    \ a EULA.\n\nos_image.icon_uri:\n   Optional. Specifies the URI to the icon that\
    \ is displayed for the\n   image in the Management Portal.\n\nos_image.small_icon_uri:\n\
    \   Optional. Specifies the URI to the small icon that is displayed for\n   the\
    \ image in the Management Portal.\n\nos_image.privacy_uri:\n   Optional. Specifies\
    \ the URI that points to a document that contains\n   the privacy policy related\
    \ to the image.\n\nos_image.published_date:\n   Optional. Specifies the date when\
    \ the image was added to the image\n   repository.\n\nos.image.media_link:\n \
    \  Required: Specifies the location of the blob in Windows Azure\n   blob store\
    \ where the media for the image is located. The blob\n   location must belong\
    \ to a storage account in the subscription\n   specified by the <subscription-id>\
    \ value in the operation call.\n   Example:\n   [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nos_image.name:\n   Specifies a name for the OS image that Windows Azure uses\
    \ to\n   identify the image when creating one or more VM Roles.\n\nos_image.os:\n\
    \   The operating system type of the OS image. Possible values are:\n   Linux,\
    \ Windows"
  signature: update_os_image_from_image_reference(image_name, os_image)
  parameters:
  - name: image_name
    isRequired: true
  - name: os_image
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
  name: update_role
  summary: "Updates the specified virtual machine.\n\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\nos_virtual_hard_disk:\n   Contains the parameters\
    \ Windows Azure uses to create the operating\n   system disk for the virtual machine.\n\
    \nnetwork_config:\n   Encapsulates the metadata required to create the virtual\
    \ network\n   configuration for a virtual machine. If you do not include a\n \
    \  network configuration set you will not be able to access the VM\n   through\
    \ VIPs over the internet. If your virtual machine belongs to\n   a virtual network\
    \ you can not specify which subnet address space\n   it resides under.\n\navailability_set_name:\n\
    \   Specifies the name of an availability set to which to add the\n   virtual\
    \ machine. This value controls the virtual machine allocation\n   in the Windows\
    \ Azure environment. Virtual machines specified in the\n   same availability set\
    \ are allocated to different nodes to maximize\n   availability.\n\ndata_virtual_hard_disks:\n\
    \   Contains the parameters Windows Azure uses to create a data disk\n   for a\
    \ virtual machine.\n\nrole_size:\n   The size of the virtual machine to allocate.\
    \ The default value is\n   Small. Possible values are: ExtraSmall, Small, Medium,\
    \ Large,\n   ExtraLarge. The specified value must be compatible with the disk\n\
    \   selected in the OSVirtualHardDisk values.\n\nrole_type:\n   The type of the\
    \ role for the virtual machine. The only supported\n   value is PersistentVMRole.\n\
    \nresource_extension_references:\n   Optional. Contains a collection of resource\
    \ extensions that are to\n   be installed on the Virtual Machine. This element\
    \ is used if\n   provision_guest_agent is set to True.\n\nprovision_guest_agent:\n\
    \   Optional. Indicates whether the VM Agent is installed on the\n   Virtual Machine.\
    \ To run a resource extension in a Virtual Machine,\n   this service must be installed."
  signature: update_role(service_name, deployment_name, role_name, os_virtual_hard_disk=None,
    network_config=None, availability_set_name=None, data_virtual_hard_disks=None,
    role_size=None, role_type='PersistentVMRole', resource_extension_references=None,
    provision_guest_agent=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: role_name
    isRequired: true
  - name: os_virtual_hard_disk
    defaultValue: None
  - name: network_config
    defaultValue: None
  - name: availability_set_name
    defaultValue: None
  - name: data_virtual_hard_disks
    defaultValue: None
  - name: role_size
    defaultValue: None
  - name: role_type
    defaultValue: PersistentVMRole
  - name: resource_extension_references
    defaultValue: None
  - name: provision_guest_agent
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
  name: update_storage_account
  summary: "Updates the label, the description, and enables or disables the\ngeo-replication\
    \ status for a storage account in Windows Azure.\n\nservice_name:\n   Name of\
    \ the storage service account.\n\ndescription:\n   A description for the storage\
    \ account. The description may be up\n   to 1024 characters in length.\n\nlabel:\n\
    \   A name for the storage account. The name may be up to 100\n   characters in\
    \ length. The name can be used to identify the storage\n   account for your tracking\
    \ purposes.\n\ngeo_replication_enabled:\n   Deprecated. Replaced by the account_type\
    \ parameter.\n\nextended_properties:\n   Dictionary containing name/value pairs\
    \ of storage account\n   properties. You can have a maximum of 50 extended property\n\
    \   name/value pairs. The maximum length of the Name element is 64\n   characters,\
    \ only alphanumeric characters and underscores are valid\n   in the Name, and\
    \ the name must start with a letter. The value has\n   a maximum length of 255\
    \ characters.\n\naccount_type:\n   Specifies whether the account supports locally-redundant\
    \ storage,\n   geo-redundant storage, zone-redundant storage, or read access\n\
    \   geo-redundant storage.\n   Possible values are:\n\n      Standard_LRS, Standard_ZRS,\
    \ Standard_GRS, Standard_RAGRS"
  signature: update_storage_account(service_name, description=None, label=None, geo_replication_enabled=None,
    extended_properties=None, account_type='Standard_GRS')
  parameters:
  - name: service_name
    isRequired: true
  - name: description
    defaultValue: None
  - name: label
    defaultValue: None
  - name: geo_replication_enabled
    defaultValue: None
  - name: extended_properties
    defaultValue: None
  - name: account_type
    defaultValue: Standard_GRS
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
  name: update_vm_image
  summary: "Updates a VM Image in the image repository that is associated with the\n\
    specified subscription.\n\nvm_image_name:\n   Name of image to update.\n\nvm_image:\n\
    \   An instance of VMImage class.\n\nvm_image.label: Optional. Specifies an identifier\
    \ for the image.\nvm_image.os_disk_configuration:\n\n   Required. Specifies configuration\
    \ information for the operating\n   system disk that is associated with the image.\n\
    \nvm_image.os_disk_configuration.host_caching:\n   Optional. Specifies the caching\
    \ behavior of the operating system disk.\n   Possible values are: None, ReadOnly,\
    \ ReadWrite\n\nvm_image.data_disk_configurations:\n   Optional. Specifies configuration\
    \ information for the data disks\n   that are associated with the image. A VM\
    \ Image might not have data\n   disks associated with it.\n\nvm_image.data_disk_configurations[].name:\n\
    \   Required. Specifies the name of the data disk.\n\nvm_image.data_disk_configurations[].host_caching:\n\
    \   Optional. Specifies the caching behavior of the data disk.\n   Possible values\
    \ are: None, ReadOnly, ReadWrite\n\nvm_image.data_disk_configurations[].lun:\n\
    \   Optional if the lun for the disk is 0. Specifies the Logical Unit\n   Number\
    \ (LUN) for the data disk.\n\nvm_image.description: Optional. Specifies the description\
    \ of the image.\nvm_image.language: Optional. Specifies the language of the image.\n\
    vm_image.image_family:\n\n   Optional. Specifies a value that can be used to group\
    \ VM Images.\n\nvm_image.recommended_vm_size:\n   Optional. Specifies the size\
    \ to use for the Virtual Machine that\n   is created from the VM Image.\n\nvm_image.eula:\n\
    \   Optional. Specifies the End User License Agreement that is\n   associated\
    \ with the image. The value for this element is a string,\n   but it is recommended\
    \ that the value be a URL that points to a EULA.\n\nvm_image.icon_uri:\n   Optional.\
    \ Specifies the URI to the icon that is displayed for the\n   image in the Management\
    \ Portal.\n\nvm_image.small_icon_uri:\n   Optional. Specifies the URI to the small\
    \ icon that is displayed for\n   the image in the Management Portal.\n\nvm_image.privacy_uri:\n\
    \   Optional. Specifies the URI that points to a document that contains\n   the\
    \ privacy policy related to the image.\n\nvm_image.published_date:\n   Optional.\
    \ Specifies the date when the image was added to the image\n   repository.\n\n\
    vm_image.show_in_gui:\n   Optional. Indicates whether the VM Images should be\
    \ listed in the\n   portal."
  signature: update_vm_image(vm_image_name, vm_image)
  parameters:
  - name: vm_image_name
    isRequired: true
  - name: vm_image
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
  name: upgrade_deployment
  summary: "Initiates an upgrade.\n\nservice_name:\n   Name of the hosted service.\n\
    \ndeployment_name:\n   The name of the deployment.\n\nmode:\n   If set to Manual,\
    \ WalkUpgradeDomain must be called to apply the\n   update. If set to Auto, the\
    \ Windows Azure platform will\n   automatically apply the update To each upgrade\
    \ domain for the\n   service. Possible values are: Auto, Manual\n\npackage_url:\n\
    \   A URL that refers to the location of the service package in the\n   Blob service.\
    \ The service package can be located either in a\n   storage account beneath the\
    \ same subscription or a Shared Access\n   Signature (SAS) URI from any storage\
    \ account.\n\nconfiguration:\n   The base-64 encoded service configuration file\
    \ for the deployment.\n\nlabel:\n   A name for the hosted service. The name can\
    \ be up to 100 characters\n   in length. It is recommended that the label be unique\
    \ within the\n   subscription. The name can be used to identify the hosted service\n\
    \   for your tracking purposes.\n\nforce:\n   Specifies whether the rollback should\
    \ proceed even when it will\n   cause local data to be lost from some role instances.\
    \ True if the\n   rollback should proceed; otherwise false if the rollback should\n\
    \   fail.\n\nrole_to_upgrade:\n   The name of the specific role to upgrade.\n\n\
    extended_properties:\n   Dictionary containing name/value pairs of storage account\n\
    \   properties. You can have a maximum of 50 extended property\n   name/value\
    \ pairs. The maximum length of the Name element is 64\n   characters, only alphanumeric\
    \ characters and underscores are valid\n   in the Name, and the name must start\
    \ with a letter. The value has\n   a maximum length of 255 characters."
  signature: upgrade_deployment(service_name, deployment_name, mode, package_url,
    configuration, label, force, role_to_upgrade=None, extended_properties=None)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: mode
    isRequired: true
  - name: package_url
    isRequired: true
  - name: configuration
    isRequired: true
  - name: label
    isRequired: true
  - name: force
    isRequired: true
  - name: role_to_upgrade
    defaultValue: None
  - name: extended_properties
    defaultValue: None
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.wait_for_operation_status
  name: wait_for_operation_status
  summary: "Waits for an asynchronous operation to complete.\n\nThis calls get_operation_status\
    \ in a loop and returns when the expected\nstatus is reached. The result of get_operation_status\
    \ is returned. By\ndefault, an exception is raised on timeout or error status.\n\
    \nrequest_id:\n   The request ID for the request you wish to track.\n\nwait_for_status:\n\
    \   Status to wait for. Default is 'Succeeded'.\n\ntimeout:\n   Total timeout\
    \ in seconds. Default is 30s.\n\nsleep_interval:\n   Sleep time in seconds for\
    \ each iteration. Default is 5s.\n\nprogress_callback:\n   Callback for each iteration.\n\
    \   Default prints '.'.\n   Set it to None for no progress notification.\n\nsuccess_callback:\n\
    \   Callback on success. Default prints newline.\n   Set it to None for no success\
    \ notification.\n\nfailure_callback:\n   Callback on failure. Default prints newline+error\
    \ details then\n   raises exception.\n   Set it to None for no failure notification."
  signature: wait_for_operation_status(request_id, wait_for_status='Succeeded', timeout=30,
    sleep_interval=5, progress_callback=<function _ServiceManagementClient.wait_for_operation_status_progress_default_callback>,
    success_callback=<function _ServiceManagementClient.wait_for_operation_status_success_default_callback>,
    failure_callback=<function _ServiceManagementClient.wait_for_operation_status_failure_default_callback>)
  parameters:
  - name: request_id
    isRequired: true
  - name: wait_for_status
    defaultValue: Succeeded
  - name: timeout
    defaultValue: '30'
  - name: sleep_interval
    defaultValue: '5'
  - name: progress_callback
  - name: success_callback
  - name: failure_callback
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.wait_for_operation_status_failure_default_callback
  name: wait_for_operation_status_failure_default_callback
  signature: wait_for_operation_status_failure_default_callback(ex)
  parameters:
  - name: elapsed
    isRequired: true
  - name: ex
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.wait_for_operation_status_progress_default_callback
  name: wait_for_operation_status_progress_default_callback
  signature: wait_for_operation_status_progress_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.wait_for_operation_status_success_default_callback
  name: wait_for_operation_status_success_default_callback
  signature: wait_for_operation_status_success_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
  name: walk_upgrade_domain
  summary: "Specifies the next upgrade domain to be walked during manual in-place\n\
    upgrade or configuration change.\n\nservice_name:\n   Name of the hosted service.\n\
    \ndeployment_name:\n   The name of the deployment.\n\nupgrade_domain:\n   An integer\
    \ value that identifies the upgrade domain to walk.\n   Upgrade domains are identified\
    \ with a zero-based index: the first\n   upgrade domain has an ID of 0, the second\
    \ has an ID of 1, and so on."
  signature: walk_upgrade_domain(service_name, deployment_name, upgrade_domain)
  parameters:
  - name: service_name
    isRequired: true
  - name: deployment_name
    isRequired: true
  - name: upgrade_domain
    isRequired: true
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.with_filter
  name: with_filter
  summary: 'Returns a new service which will process requests with the

    specified filter.  Filtering operations can include logging, automatic

    retrying, etc...  The filter is a lambda which receives the HTTPRequest

    and another lambda.  The filter can perform any pre-processing on the

    request, pass it off to the next lambda, and then perform any

    post-processing on the response.'
  signature: with_filter(filter)
  parameters:
  - name: filter
    isRequired: true
attributes:
- uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.timeout
  name: timeout
