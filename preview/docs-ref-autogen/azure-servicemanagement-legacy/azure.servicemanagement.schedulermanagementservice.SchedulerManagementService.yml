### YamlMime:PythonClass
uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService
name: SchedulerManagementService
fullName: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService
module: azure.servicemanagement.schedulermanagementservice
inheritances:
- azure.servicemanagement.servicemanagementclient._ServiceManagementClient
summary: "Note that this class is a preliminary work on Scheduler\nmanagement. Since\
  \ it lack a lot a features, final version\ncan be slightly different from the current\
  \ one.\n\nInitializes the scheduler management service.\n\nsubscription_id:\n  \
  \ Subscription to manage.\n\ncert_file:\n   Path to .pem certificate file (httplib),\
  \ or location of the\n   certificate in your Personal certificate store (winhttp)\
  \ in the\n   CURRENT_USERmyCertificateName format.\n   If a request_session is specified,\
  \ then this is unused.\n\nhost:\n   Live ServiceClient URL. Defaults to Azure public\
  \ cloud.\n\nrequest_session:\n   Session object to use for http requests. If this\
  \ is specified, it\n   replaces the default use of httplib or winhttp. Also, the\
  \ cert_file\n   parameter is unused when a session is passed in.\n   The session\
  \ object handles authentication, and as such can support\n   multiple types of authentication:\
  \ .pem certificate, oauth.\n   For example, you can pass in a Session instance from\
  \ the requests\n   library. To use .pem certificate authentication with requests\n\
  \   library, set the path to the .pem file on the session.cert\n   attribute.\n\n\
  timeout:\n   Optional. Timeout for the http request, in seconds."
constructor:
  syntax: SchedulerManagementService(subscription_id=None, cert_file=None, host='management.core.windows.net',
    request_session=None, timeout=65)
  parameters:
  - name: subscription_id
    defaultValue: None
  - name: cert_file
    defaultValue: None
  - name: host
    defaultValue: management.core.windows.net
  - name: request_session
    defaultValue: None
  - name: timeout
    defaultValue: '65'
methods:
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.check_job_collection_name
  name: check_job_collection_name
  summary: "The Check Name Availability operation checks if a new job collection with\n\
    the given name may be created, or if it is unavailable. The result of the\noperation\
    \ is a Boolean true or false.\n\ncloud_service_id:\n   The cloud service id\n\n\
    job_collection_id:\n   The name of the job_collection_id."
  signature: check_job_collection_name(cloud_service_id, job_collection_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.create_cloud_service
  name: create_cloud_service
  summary: "The Create Cloud Service request creates a new cloud service. When job\n\
    collections are created, they are hosted within a cloud service.\nA cloud service\
    \ groups job collections together in a given region.\nOnce a cloud service has\
    \ been created, job collections can then be\ncreated and contained within it.\n\
    \ncloud_service_id:\n   The cloud service id\n\nlabel:\n   The name of the cloud\
    \ service.\n\ndescription:\n   The description of the cloud service.\n\ngeo_region:\n\
    \   The geographical region of the webspace that will be created."
  signature: create_cloud_service(cloud_service_id, label, description, geo_region)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: label
    isRequired: true
  - name: description
    isRequired: true
  - name: geo_region
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.create_job
  name: create_job
  summary: "The Create Job request creates a new job.\ncloud_service_id:\n\n   The\
    \ cloud service id\n\njob_collection_id:\n   Name of the hosted service.\n\njob_id:\n\
    \   The job id you wish to create.\n\njob:\n   A dictionary of the payload"
  signature: create_job(cloud_service_id, job_collection_id, job_id, job)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
  - name: job_id
    isRequired: true
  - name: job
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.create_job_collection
  name: create_job_collection
  summary: "The Create Job Collection request is specified as follows. Replace <subscription-id>\n\
    with your subscription ID, <cloud-service-id> with your cloud service ID, and\n\
    <job-collection-id> with the ID of the job collection you'd like to create.\n\
    There are no \"default\" pre-existing job collections every job collection\nmust\
    \ be manually created.\n\ncloud_service_id:\n   The cloud service id\n\njob_collection_id:\n\
    \   Name of the hosted service."
  signature: create_job_collection(cloud_service_id, job_collection_id, plan='Standard')
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
  - name: plan
    defaultValue: Standard
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.delete_cloud_service
  name: delete_cloud_service
  summary: "The Get Cloud Service operation gets all the resources (job collections)\n\
    in the cloud service.\n\ncloud_service_id:\n   The cloud service id"
  signature: delete_cloud_service(cloud_service_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.delete_job
  name: delete_job
  summary: "The Delete Job request creates a new job.\ncloud_service_id:\n\n   The\
    \ cloud service id\n\njob_collection_id:\n   Name of the hosted service.\n\njob_id:\n\
    \   The job id you wish to create."
  signature: delete_job(cloud_service_id, job_collection_id, job_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
  - name: job_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.delete_job_collection
  name: delete_job_collection
  summary: "The Delete Job Collection request is specified as follows. Replace <subscription-id>\n\
    with your subscription ID, <cloud-service-id> with your cloud service ID, and\n\
    <job-collection-id> with the ID of the job collection you'd like to delete.\n\n\
    cloud_service_id:\n   The cloud service id\n\njob_collection_id:\n   Name of the\
    \ hosted service."
  signature: delete_job_collection(cloud_service_id, job_collection_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.get_all_jobs
  name: get_all_jobs
  summary: "The Get All Jobs operation gets all the jobs in a job collection.\nThe\
    \ full list of jobs can be accessed by excluding any job ID in the\nGET call (i.e.\
    \ /jobs.)\n\nThe return type is\n\ncloud_service_id:\n   The cloud service id\n\
    \njob_collection_id:\n   Name of the hosted service."
  signature: get_all_jobs(cloud_service_id, job_collection_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.get_cloud_service
  name: get_cloud_service
  summary: "The Get Cloud Service operation gets all the resources (job collections)\n\
    in the cloud service.\n\ncloud_service_id:\n   The cloud service id"
  signature: get_cloud_service(cloud_service_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.get_job
  name: get_job
  summary: "The Get Job operation gets the details (including the current job status)\n\
    of the specified job from the specified job collection.\n\nThe return type is\n\
    \ncloud_service_id:\n   The cloud service id\n\njob_collection_id:\n   Name of\
    \ the hosted service.\n\njob_id:\n   The job id you wish to create."
  signature: get_job(cloud_service_id, job_collection_id, job_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
  - name: job_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.get_job_collection
  name: get_job_collection
  summary: "The Get Job Collection operation gets the details of a job collection\n\
    \ncloud_service_id:\n   The cloud service id\n\njob_collection_id:\n   Name of\
    \ the hosted service."
  signature: get_job_collection(cloud_service_id, job_collection_id)
  parameters:
  - name: cloud_service_id
    isRequired: true
  - name: job_collection_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.get_operation_status
  name: get_operation_status
  summary: "Returns the status of the specified operation. After calling an\nasynchronous\
    \ operation, you can call Get Operation Status to determine\nwhether the operation\
    \ has succeeded, failed, or is still in progress.\n\nrequest_id:\n   The request\
    \ ID for the request you wish to track."
  signature: get_operation_status(request_id)
  parameters:
  - name: request_id
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.list_cloud_services
  name: list_cloud_services
  summary: List the cloud services for scheduling defined on the account.
  signature: list_cloud_services()
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.perform_delete
  name: perform_delete
  summary: "Performs a DELETE request and returns the response.\n\npath:\n   Path\
    \ to the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_delete(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.perform_get
  name: perform_get
  summary: "Performs a GET request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_get(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.perform_post
  name: perform_post
  summary: "Performs a POST request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the POST request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_post(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.perform_put
  name: perform_put
  summary: "Performs a PUT request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the PUT request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_put(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.set_proxy
  name: set_proxy
  summary: "Sets the proxy server host and port for the HTTP CONNECT Tunnelling.\n\
    \nhost:\n   Address of the proxy. Ex: '192.168.0.100'\n\nport:\n   Port of the\
    \ proxy. Ex: 6000\n\nuser:\n   User for proxy authorization.\n\npassword:\n  \
    \ Password for proxy authorization."
  signature: set_proxy(host, port, user=None, password=None)
  parameters:
  - name: host
    isRequired: true
  - name: port
    isRequired: true
  - name: user
    defaultValue: None
  - name: password
    defaultValue: None
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.should_use_requests
  name: should_use_requests
  signature: static should_use_requests(cert_file)
  parameters:
  - name: cert_file
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.wait_for_operation_status
  name: wait_for_operation_status
  summary: "Waits for an asynchronous operation to complete.\n\nThis calls get_operation_status\
    \ in a loop and returns when the expected\nstatus is reached. The result of get_operation_status\
    \ is returned. By\ndefault, an exception is raised on timeout or error status.\n\
    \nrequest_id:\n   The request ID for the request you wish to track.\n\nwait_for_status:\n\
    \   Status to wait for. Default is 'Succeeded'.\n\ntimeout:\n   Total timeout\
    \ in seconds. Default is 30s.\n\nsleep_interval:\n   Sleep time in seconds for\
    \ each iteration. Default is 5s.\n\nprogress_callback:\n   Callback for each iteration.\n\
    \   Default prints '.'.\n   Set it to None for no progress notification.\n\nsuccess_callback:\n\
    \   Callback on success. Default prints newline.\n   Set it to None for no success\
    \ notification.\n\nfailure_callback:\n   Callback on failure. Default prints newline+error\
    \ details then\n   raises exception.\n   Set it to None for no failure notification."
  signature: wait_for_operation_status(request_id, wait_for_status='Succeeded', timeout=30,
    sleep_interval=5, progress_callback=<function _ServiceManagementClient.wait_for_operation_status_progress_default_callback>,
    success_callback=<function _ServiceManagementClient.wait_for_operation_status_success_default_callback>,
    failure_callback=<function _ServiceManagementClient.wait_for_operation_status_failure_default_callback>)
  parameters:
  - name: request_id
    isRequired: true
  - name: wait_for_status
    defaultValue: Succeeded
  - name: timeout
    defaultValue: '30'
  - name: sleep_interval
    defaultValue: '5'
  - name: progress_callback
  - name: success_callback
  - name: failure_callback
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.wait_for_operation_status_failure_default_callback
  name: wait_for_operation_status_failure_default_callback
  signature: wait_for_operation_status_failure_default_callback(ex)
  parameters:
  - name: elapsed
    isRequired: true
  - name: ex
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.wait_for_operation_status_progress_default_callback
  name: wait_for_operation_status_progress_default_callback
  signature: wait_for_operation_status_progress_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.wait_for_operation_status_success_default_callback
  name: wait_for_operation_status_success_default_callback
  signature: wait_for_operation_status_success_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.with_filter
  name: with_filter
  summary: 'Returns a new service which will process requests with the

    specified filter.  Filtering operations can include logging, automatic

    retrying, etc...  The filter is a lambda which receives the HTTPRequest

    and another lambda.  The filter can perform any pre-processing on the

    request, pass it off to the next lambda, and then perform any

    post-processing on the response.'
  signature: with_filter(filter)
  parameters:
  - name: filter
    isRequired: true
attributes:
- uid: azure.servicemanagement.schedulermanagementservice.SchedulerManagementService.timeout
  name: timeout
