### YamlMime:PythonClass
uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService
name: WebsiteManagementService
fullName: azure.servicemanagement.websitemanagementservice.WebsiteManagementService
module: azure.servicemanagement.websitemanagementservice
inheritances:
- azure.servicemanagement.servicemanagementclient._ServiceManagementClient
summary: "Note that this class is a preliminary work on WebSite\nmanagement. Since\
  \ it lack a lot a features, final version\ncan be slightly different from the current\
  \ one.\n\nInitializes the website management service.\n\nsubscription_id:\n   Subscription\
  \ to manage.\n\ncert_file:\n   Path to .pem certificate file (httplib), or location\
  \ of the\n   certificate in your Personal certificate store (winhttp) in the\n \
  \  CURRENT_USERmyCertificateName format.\n   If a request_session is specified,\
  \ then this is unused.\n\nhost:\n   Live ServiceClient URL. Defaults to Azure public\
  \ cloud.\n\nrequest_session:\n   Session object to use for http requests. If this\
  \ is specified, it\n   replaces the default use of httplib or winhttp. Also, the\
  \ cert_file\n   parameter is unused when a session is passed in.\n   The session\
  \ object handles authentication, and as such can support\n   multiple types of authentication:\
  \ .pem certificate, oauth.\n   For example, you can pass in a Session instance from\
  \ the requests\n   library. To use .pem certificate authentication with requests\n\
  \   library, set the path to the .pem file on the session.cert\n   attribute.\n\n\
  timeout:\n   Optional. Timeout for the http request, in seconds."
constructor:
  syntax: WebsiteManagementService(subscription_id=None, cert_file=None, host='management.core.windows.net',
    request_session=None, timeout=65)
  parameters:
  - name: subscription_id
    defaultValue: None
  - name: cert_file
    defaultValue: None
  - name: host
    defaultValue: management.core.windows.net
  - name: request_session
    defaultValue: None
  - name: timeout
    defaultValue: '65'
methods:
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.create_site
  name: create_site
  summary: "Create a website.\n\nwebspace_name:\n   The name of the webspace.\n\n\
    website_name:\n   The name of the website.\n\ngeo_region:\n   The geographical\
    \ region of the webspace that will be created.\n\nhost_names:\n   An array of\
    \ fully qualified domain names for website. Only one\n   hostname can be specified\
    \ in the azurewebsites.net domain.\n   The hostname should match the name of the\
    \ website. Custom domains\n   can only be specified for Shared or Standard websites.\n\
    \nplan:\n   This value must be 'VirtualDedicatedPlan'.\n\ncompute_mode:\n   This\
    \ value should be 'Shared' for the Free or Paid Shared\n   offerings, or 'Dedicated'\
    \ for the Standard offering. The default\n   value is 'Shared'. If you set it\
    \ to 'Dedicated', you must specify\n   a value for the server_farm parameter.\n\
    \nserver_farm:\n   The name of the Server Farm associated with this website. This\
    \ is\n   a required value for Standard mode.\n\nsite_mode:\n   Can be None, 'Limited'\
    \ or 'Basic'. This value is 'Limited' for the\n   Free offering, and 'Basic' for\
    \ the Paid Shared offering. Standard\n   mode does not use the site_mode parameter;\
    \ it uses the compute_mode\n   parameter."
  signature: create_site(webspace_name, website_name, geo_region, host_names, plan='VirtualDedicatedPlan',
    compute_mode='Shared', server_farm=None, site_mode=None)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
  - name: geo_region
    isRequired: true
  - name: host_names
    isRequired: true
  - name: plan
    defaultValue: VirtualDedicatedPlan
  - name: compute_mode
    defaultValue: Shared
  - name: server_farm
    defaultValue: None
  - name: site_mode
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.delete_site
  name: delete_site
  summary: "Delete a website.\n\nwebspace_name:\n   The name of the webspace.\n\n\
    website_name:\n   The name of the website.\n\ndelete_empty_server_farm:\n   If\
    \ the site being deleted is the last web site in a server farm,\n   you can delete\
    \ the server farm by setting this to True.\n\ndelete_metrics:\n   To also delete\
    \ the metrics for the site that you are deleting, you\n   can set this to True."
  signature: delete_site(webspace_name, website_name, delete_empty_server_farm=False,
    delete_metrics=False)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
  - name: delete_empty_server_farm
    defaultValue: 'False'
  - name: delete_metrics
    defaultValue: 'False'
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_historical_usage_metrics
  name: get_historical_usage_metrics
  summary: "Get historical usage metrics.\n\nwebspace_name:\n   The name of the webspace.\n\
    \nwebsite_name:\n   The name of the website.\n\nmetrics:\n   Optional. List of\
    \ metrics name. Otherwise, all metrics returned.\n\nstart_time:\n   Optional.\
    \ An ISO8601 date. Otherwise, current hour is used.\n\nend_time:\n   Optional.\
    \ An ISO8601 date. Otherwise, current time is used.\n\ntime_grain:\n   Optional.\
    \ A rollup name, as P1D. OTherwise, default rollup for the metrics is used.\n\n\
    More information and metrics name at:\n[http://msdn.microsoft.com/en-us/library/azure/dn166964.aspx](http://msdn.microsoft.com/en-us/library/azure/dn166964.aspx)"
  signature: get_historical_usage_metrics(webspace_name, website_name, metrics=None,
    start_time=None, end_time=None, time_grain=None)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
  - name: metrics
    defaultValue: None
  - name: start_time
    defaultValue: None
  - name: end_time
    defaultValue: None
  - name: time_grain
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_metric_definitions
  name: get_metric_definitions
  summary: "Get metric definitions of metrics available of this web site.\n\nwebspace_name:\n\
    \   The name of the webspace.\n\nwebsite_name:\n   The name of the website."
  signature: get_metric_definitions(webspace_name, website_name)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_operation_status
  name: get_operation_status
  summary: "Returns the status of the specified operation. After calling an\nasynchronous\
    \ operation, you can call Get Operation Status to determine\nwhether the operation\
    \ has succeeded, failed, or is still in progress.\n\nrequest_id:\n   The request\
    \ ID for the request you wish to track."
  signature: get_operation_status(request_id)
  parameters:
  - name: request_id
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_publish_profile
  name: get_publish_profile
  summary: "Get a site's publish profile as an object\n\nwebspace_name:\n   The name\
    \ of the webspace.\n\nwebsite_name:\n   The name of the website."
  signature: get_publish_profile(webspace_name, website_name)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_publish_profile_xml
  name: get_publish_profile_xml
  summary: "Get a site's publish profile as a string\n\nwebspace_name:\n   The name\
    \ of the webspace.\n\nwebsite_name:\n   The name of the website."
  signature: get_publish_profile_xml(webspace_name, website_name)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_site
  name: get_site
  summary: "List the web sites defined on this webspace.\n\nwebspace_name:\n   The\
    \ name of the webspace.\n\nwebsite_name:\n   The name of the website."
  signature: get_site(webspace_name, website_name)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.get_webspace
  name: get_webspace
  summary: "Get details of a specific webspace.\n\nwebspace_name:\n   The name of\
    \ the webspace."
  signature: get_webspace(webspace_name)
  parameters:
  - name: webspace_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.list_sites
  name: list_sites
  summary: "List the web sites defined on this webspace.\n\nwebspace_name:\n   The\
    \ name of the webspace."
  signature: list_sites(webspace_name)
  parameters:
  - name: webspace_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.list_webspaces
  name: list_webspaces
  summary: List the webspaces defined on the account.
  signature: list_webspaces()
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.perform_delete
  name: perform_delete
  summary: "Performs a DELETE request and returns the response.\n\npath:\n   Path\
    \ to the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_delete(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.perform_get
  name: perform_get
  summary: "Performs a GET request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nx_ms_version:\n   If specified, this is used for the x-ms-version header.\n\
    \   Otherwise, self.x_ms_version is used."
  signature: perform_get(path, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.perform_post
  name: perform_post
  summary: "Performs a POST request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the POST request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_post(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.perform_put
  name: perform_put
  summary: "Performs a PUT request and returns the response.\n\npath:\n   Path to\
    \ the resource.\n   Ex: '/<subscription-id>/services/hostedservices/<service-name>'\n\
    \nbody:\n   Body for the PUT request.\n\nx_ms_version:\n   If specified, this\
    \ is used for the x-ms-version header.\n   Otherwise, self.x_ms_version is used."
  signature: perform_put(path, body, x_ms_version=None)
  parameters:
  - name: path
    isRequired: true
  - name: body
    isRequired: true
  - name: x_ms_version
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.restart_site
  name: restart_site
  summary: "Restart a web site.\n\nwebspace_name:\n   The name of the webspace.\n\n\
    website_name:\n   The name of the website."
  signature: restart_site(webspace_name, website_name)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.set_proxy
  name: set_proxy
  summary: "Sets the proxy server host and port for the HTTP CONNECT Tunnelling.\n\
    \nhost:\n   Address of the proxy. Ex: '192.168.0.100'\n\nport:\n   Port of the\
    \ proxy. Ex: 6000\n\nuser:\n   User for proxy authorization.\n\npassword:\n  \
    \ Password for proxy authorization."
  signature: set_proxy(host, port, user=None, password=None)
  parameters:
  - name: host
    isRequired: true
  - name: port
    isRequired: true
  - name: user
    defaultValue: None
  - name: password
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.should_use_requests
  name: should_use_requests
  signature: static should_use_requests(cert_file)
  parameters:
  - name: cert_file
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.update_site
  name: update_site
  summary: "Update a web site.\n\nwebspace_name:\n   The name of the webspace.\n\n\
    website_name:\n   The name of the website.\n\nstate:\n   The wanted state ('Running'\
    \ or 'Stopped' accepted)"
  signature: update_site(webspace_name, website_name, state=None)
  parameters:
  - name: webspace_name
    isRequired: true
  - name: website_name
    isRequired: true
  - name: state
    defaultValue: None
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.wait_for_operation_status
  name: wait_for_operation_status
  summary: "Waits for an asynchronous operation to complete.\n\nThis calls get_operation_status\
    \ in a loop and returns when the expected\nstatus is reached. The result of get_operation_status\
    \ is returned. By\ndefault, an exception is raised on timeout or error status.\n\
    \nrequest_id:\n   The request ID for the request you wish to track.\n\nwait_for_status:\n\
    \   Status to wait for. Default is 'Succeeded'.\n\ntimeout:\n   Total timeout\
    \ in seconds. Default is 30s.\n\nsleep_interval:\n   Sleep time in seconds for\
    \ each iteration. Default is 5s.\n\nprogress_callback:\n   Callback for each iteration.\n\
    \   Default prints '.'.\n   Set it to None for no progress notification.\n\nsuccess_callback:\n\
    \   Callback on success. Default prints newline.\n   Set it to None for no success\
    \ notification.\n\nfailure_callback:\n   Callback on failure. Default prints newline+error\
    \ details then\n   raises exception.\n   Set it to None for no failure notification."
  signature: wait_for_operation_status(request_id, wait_for_status='Succeeded', timeout=30,
    sleep_interval=5, progress_callback=<function _ServiceManagementClient.wait_for_operation_status_progress_default_callback>,
    success_callback=<function _ServiceManagementClient.wait_for_operation_status_success_default_callback>,
    failure_callback=<function _ServiceManagementClient.wait_for_operation_status_failure_default_callback>)
  parameters:
  - name: request_id
    isRequired: true
  - name: wait_for_status
    defaultValue: Succeeded
  - name: timeout
    defaultValue: '30'
  - name: sleep_interval
    defaultValue: '5'
  - name: progress_callback
  - name: success_callback
  - name: failure_callback
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.wait_for_operation_status_failure_default_callback
  name: wait_for_operation_status_failure_default_callback
  signature: wait_for_operation_status_failure_default_callback(ex)
  parameters:
  - name: elapsed
    isRequired: true
  - name: ex
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.wait_for_operation_status_progress_default_callback
  name: wait_for_operation_status_progress_default_callback
  signature: wait_for_operation_status_progress_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.wait_for_operation_status_success_default_callback
  name: wait_for_operation_status_success_default_callback
  signature: wait_for_operation_status_success_default_callback()
  parameters:
  - name: elapsed
    isRequired: true
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.with_filter
  name: with_filter
  summary: 'Returns a new service which will process requests with the

    specified filter.  Filtering operations can include logging, automatic

    retrying, etc...  The filter is a lambda which receives the HTTPRequest

    and another lambda.  The filter can perform any pre-processing on the

    request, pass it off to the next lambda, and then perform any

    post-processing on the response.'
  signature: with_filter(filter)
  parameters:
  - name: filter
    isRequired: true
attributes:
- uid: azure.servicemanagement.websitemanagementservice.WebsiteManagementService.timeout
  name: timeout
