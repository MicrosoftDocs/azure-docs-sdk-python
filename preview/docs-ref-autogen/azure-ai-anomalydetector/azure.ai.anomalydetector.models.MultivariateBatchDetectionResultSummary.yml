### YamlMime:PythonClass
uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary
name: MultivariateBatchDetectionResultSummary
fullName: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary
module: azure.ai.anomalydetector.models
inheritances:
- azure.ai.anomalydetector._model_base.Model
summary: 'Multivariate anomaly detection status.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'MultivariateBatchDetectionResultSummary(*args: Any, **kwargs: Any)'
variables:
- description: 'Status of detection results. One of CREATED, RUNNING, READY, and FAILED.

    Required. Known values are: "CREATED", "RUNNING", "READY", and "FAILED".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.ai.anomalydetector.models.MultivariateBatchDetectionStatus>
- description: Error message when detection is failed.
  name: errors
  types:
  - <xref:list>[<xref:azure.ai.anomalydetector.models.ErrorResponse>]
- description: Variable Status.
  name: variable_states
  types:
  - <xref:list>[<xref:azure.ai.anomalydetector.models.VariableState>]
- description: 'Detection request for batch inference. This is an asynchronous inference

    which

    will need another API to get detection results. Required.'
  name: setup_info
  types:
  - <xref:azure.ai.anomalydetector.models.MultivariateBatchDetectionOptions>
methods:
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.copy
  name: copy
  signature: copy()
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.items
  name: items
  signature: items() -> ItemsView
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.keys
  name: keys
  signature: keys() -> KeysView
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.pop
  name: pop
  signature: 'pop(key: ~typing.Any, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.setdefault
  name: setdefault
  signature: 'setdefault(key: ~typing.Any, default: ~typing.Any = <object object>)
    -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.values
  name: values
  signature: values() -> ValuesView
attributes:
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.errors
  name: errors
  summary: Error message when detection is failed.
  signature: 'errors: List[_models.ErrorResponse] | None'
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.setup_info
  name: setup_info
  summary: 'Detection request for batch inference. This is an asynchronous inference
    which

    will need another API to get detection results. Required.'
  signature: 'setup_info: _models.MultivariateBatchDetectionOptions'
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.status
  name: status
  summary: '"CREATED", "RUNNING", "READY", and "FAILED".'
  signature: 'status: str | _models.MultivariateBatchDetectionStatus'
- uid: azure.ai.anomalydetector.models.MultivariateBatchDetectionResultSummary.variable_states
  name: variable_states
  summary: Variable Status.
  signature: 'variable_states: List[_models.VariableState] | None'
