### YamlMime:PythonClass
uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin
name: AnomalyDetectorClientOperationsMixin
fullName: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin
module: azure.ai.anomalydetector.aio.operations
inheritances:
- builtins.object
constructor:
  syntax: AnomalyDetectorClientOperationsMixin()
methods:
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.delete_multivariate_model
  name: delete_multivariate_model
  summary: 'Delete Multivariate Model.


    Delete an existing multivariate model according to the modelId.'
  signature: 'delete_multivariate_model(model_id: str, **kwargs) -> None'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.detect_anomaly
  name: detect_anomaly
  summary: 'Detect Multivariate Anomaly.


    Submit detection multivariate anomaly task with the trained model of modelId,
    the input schema

    should be the same with the training request. Thus request will be complete asynchronously
    and

    will return a resultId for querying the detection result.The request should be
    a source link to

    indicate an externally accessible Azure storage Uri (preferably a Shared Access
    Signature Uri).

    All time-series used in generate the model must be zipped into one single file.
    Each

    time-series will be as follows: the first column is timestamp and the second column
    is value.'
  signature: 'detect_anomaly(model_id: str, detection_request: azure.ai.anomalydetector.models._models_py3.DetectionRequest,
    **kwargs) -> None'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: detection_request
    description: Detect anomaly request.
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.models.DetectionRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.detect_change_point
  name: detect_change_point
  summary: 'Detect change point for the entire series.


    Evaluate change point score of every series point.'
  signature: 'detect_change_point(body: azure.ai.anomalydetector.models._models_py3.ChangePointDetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.ChangePointDetectResponse'
  parameters:
  - name: body
    description: 'Time series points and granularity is needed. Advanced model parameters
      can also

      be set in the request if needed.'
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.models.ChangePointDetectRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ChangePointDetectResponse, or the result of cls(response)
    types:
    - <xref:azure.ai.anomalydetector.models.ChangePointDetectResponse>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.detect_entire_series
  name: detect_entire_series
  summary: 'Detect anomalies for the entire series in batch.


    This operation generates a model with an entire series, each point is detected
    with the same

    model. With this method, points before and after a certain point are used to determine
    whether

    it is an anomaly. The entire detection can give user an overall status of the
    time series.'
  signature: 'detect_entire_series(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.EntireDetectResponse'
  parameters:
  - name: body
    description: 'Time series points and period if needed. Advanced model parameters
      can also be set

      in the request.'
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.models.DetectRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: EntireDetectResponse, or the result of cls(response)
    types:
    - <xref:azure.ai.anomalydetector.models.EntireDetectResponse>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.detect_last_point
  name: detect_last_point
  summary: 'Detect anomaly status of the latest point in time series.


    This operation generates a model using points before the latest one. With this
    method, only

    historical points are used to determine whether the target point is an anomaly.
    The latest

    point detecting operation matches the scenario of real-time monitoring of business
    metrics.'
  signature: 'detect_last_point(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.LastDetectResponse'
  parameters:
  - name: body
    description: 'Time series points and period if needed. Advanced model parameters
      can also be set

      in the request.'
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.models.DetectRequest>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: LastDetectResponse, or the result of cls(response)
    types:
    - <xref:azure.ai.anomalydetector.models.LastDetectResponse>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.export_model
  name: export_model
  summary: 'Export Multivariate Anomaly Detection Model as Zip file.


    Export multivariate anomaly detection model based on modelId.'
  signature: 'export_model(model_id: str, **kwargs) -> IO'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: IO, or the result of cls(response)
    types:
    - <xref:IO>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.get_detection_result
  name: get_detection_result
  summary: 'Get Multivariate Anomaly Detection Result.


    Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync

    api.'
  signature: 'get_detection_result(result_id: str, **kwargs) -> azure.ai.anomalydetector.models._models_py3.DetectionResult'
  parameters:
  - name: result_id
    description: Result identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: DetectionResult, or the result of cls(response)
    types:
    - <xref:azure.ai.anomalydetector.models.DetectionResult>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.get_multivariate_model
  name: get_multivariate_model
  summary: 'Get Multivariate Model.


    Get detailed information of multivariate model, including the training status
    and variables

    used in the model.'
  signature: 'get_multivariate_model(model_id: str, **kwargs) -> azure.ai.anomalydetector.models._models_py3.Model'
  parameters:
  - name: model_id
    description: Model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: Model, or the result of cls(response)
    types:
    - <xref:azure.ai.anomalydetector.models.Model>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.list_multivariate_model
  name: list_multivariate_model
  summary: 'List Multivariate Models.


    List models of a subscription.'
  signature: 'list_multivariate_model(skip: Optional[int] = 0, top: Optional[int]
    = 5, **kwargs) -> AsyncIterable[azure.ai.anomalydetector.models._models_py3.ModelList]'
  parameters:
  - name: skip
    description: $skip indicates how many models will be skipped.
    isRequired: true
    defaultValue: '0'
    types:
    - <xref:int>
  - name: top
    description: $top indicates how many models will be fetched.
    isRequired: true
    defaultValue: '5'
    types:
    - <xref:int>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either ModelList or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.ai.anomalydetector.models.ModelList>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.anomalydetector.aio.operations.AnomalyDetectorClientOperationsMixin.train_multivariate_model
  name: train_multivariate_model
  summary: 'Train a Multivariate Anomaly Detection Model.


    Create and train a multivariate anomaly detection model. The request must include
    a source

    parameter to indicate an externally accessible Azure storage Uri (preferably a
    Shared Access

    Signature Uri). All time-series used in generate the model must be zipped into
    one single file.

    Each time-series will be in a single CSV file in which the first column is timestamp
    and the

    second column is value.'
  signature: 'train_multivariate_model(model_request: azure.ai.anomalydetector.models._models_py3.ModelInfo,
    **kwargs) -> None'
  parameters:
  - name: model_request
    description: Training request.
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.models.ModelInfo>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
