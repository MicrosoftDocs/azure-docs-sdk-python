### YamlMime:PythonClass
uid: azure.ai.anomalydetector.AnomalyDetectorClient
name: AnomalyDetectorClient
fullName: azure.ai.anomalydetector.AnomalyDetectorClient
module: azure.ai.anomalydetector
inheritances:
- azure.ai.anomalydetector._operations._operations.AnomalyDetectorClientOperationsMixin
summary: 'The Anomaly Detector API detects anomalies automatically in time series
  data.

  It supports two kinds of mode, one is for stateless using, another is for

  stateful using. In stateless mode, there are three functionalities. Entire

  Detect is for detecting the whole series with model trained by the time series,

  Last Detect is detecting last point with model trained by points before.

  ChangePoint Detect is for detecting trend changes in time series. In stateful

  mode, user can store time series, the stored time series will be used for

  detection anomalies. Under this mode, user can still use the above three

  functionalities by only giving a time range without preparing time series in

  client side. Besides the above three functionalities, stateful model also

  provide group based detection and labeling service. By leveraging labeling

  service user can provide labels for each detection result, these labels will be

  used for retuning or regenerating detection models. Inconsistency detection is

  a kind of group based detection, this detection will find inconsistency ones in

  a set of time series. By using anomaly detector service, business customers can

  discover incidents and establish a logic flow for root cause analysis.'
constructor:
  syntax: 'AnomalyDetectorClient(endpoint: str, credential: AzureKeyCredential, **kwargs:
    Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname, for
      example:

      [https://westus2.api.cognitive.microsoft.com](https://westus2.api.cognitive.microsoft.com)).
      Required.'
    isRequired: true
    types:
    - <xref:azure.ai.anomalydetector.str>
  - name: credential
    description: Credential needed for the client to connect to Azure. Required.
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
  - name: api_version
    description: 'Api Version. Default value is "v1.1". Note that overriding this
      default

      value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.ai.anomalydetector.AnomalyDetectorClient.close
  name: close
  signature: close() -> None
- uid: azure.ai.anomalydetector.AnomalyDetectorClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
