### YamlMime:PythonClass
uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult
name: UnivariateEntireDetectionResult
fullName: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult
module: azure.ai.anomalydetector.models
inheritances:
- azure.ai.anomalydetector._model_base.Model
summary: 'The response of entire anomaly detection.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'UnivariateEntireDetectionResult(*args: Any, **kwargs: Any)'
variables:
- description: 'Frequency extracted from the series, zero means no recurrent pattern
    has been

    found. Required.'
  name: period
  types:
  - <xref:int>
- description: 'ExpectedValues contain expected value for each input point. The index
    of

    the

    array is consistent with the input series. Required.'
  name: expected_values
  types:
  - <xref:list>[<xref:float>]
- description: 'UpperMargins contain upper margin of each input point. UpperMargin
    is used

    to

    calculate upperBoundary, which equals to expectedValue + (100 -

    marginScale)*upperMargin. Anomalies in response can be filtered by

    upperBoundary and lowerBoundary. By adjusting marginScale value, less

    significant anomalies can be filtered in client side. The index of the array is

    consistent with the input series. Required.'
  name: upper_margins
  types:
  - <xref:list>[<xref:float>]
- description: 'LowerMargins contain lower margin of each input point. LowerMargin
    is used

    to

    calculate lowerBoundary, which equals to expectedValue - (100 -

    marginScale)*lowerMargin. Points between the boundary can be marked as normal

    ones in client side. The index of the array is consistent with the input

    series. Required.'
  name: lower_margins
  types:
  - <xref:list>[<xref:float>]
- description: 'IsAnomaly contains anomaly properties for each input point. True means
    an

    anomaly either negative or positive has been detected. The index of the array

    is consistent with the input series. Required.'
  name: is_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'IsNegativeAnomaly contains anomaly status in negative direction for

    each input

    point. True means a negative anomaly has been detected. A negative anomaly

    means the point is detected as an anomaly and its real value is smaller than

    the expected one. The index of the array is consistent with the input series.
    Required.'
  name: is_negative_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'IsPositiveAnomaly contain anomaly status in positive direction for

    each input

    point. True means a positive anomaly has been detected. A positive anomaly

    means the point is detected as an anomaly and its real value is larger than the

    expected one. The index of the array is consistent with the input series. Required.'
  name: is_positive_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'The severity score for each input point. The larger the value is,
    the more

    sever the anomaly is. For normal points, the "severity" is always 0.'
  name: severity
  types:
  - <xref:list>[<xref:float>]
methods:
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.copy
  name: copy
  signature: copy()
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.items
  name: items
  signature: items() -> ItemsView
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.keys
  name: keys
  signature: keys() -> KeysView
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.pop
  name: pop
  signature: 'pop(key: ~typing.Any, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.setdefault
  name: setdefault
  signature: 'setdefault(key: ~typing.Any, default: ~typing.Any = <object object>)
    -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.values
  name: values
  signature: values() -> ValuesView
attributes:
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.expected_values
  name: expected_values
  summary: 'ExpectedValues contain expected value for each input point. The index
    of the

    array is consistent with the input series. Required.'
  signature: 'expected_values: List[float]'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.is_anomaly
  name: is_anomaly
  summary: 'IsAnomaly contains anomaly properties for each input point. True means
    an

    anomaly either negative or positive has been detected. The index of the array

    is consistent with the input series. Required.'
  signature: 'is_anomaly: List[bool]'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.is_negative_anomaly
  name: is_negative_anomaly
  summary: 'IsNegativeAnomaly contains anomaly status in negative direction for each
    input

    point. True means a negative anomaly has been detected. A negative anomaly

    means the point is detected as an anomaly and its real value is smaller than

    the expected one. The index of the array is consistent with the input series.
    Required.'
  signature: 'is_negative_anomaly: List[bool]'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.is_positive_anomaly
  name: is_positive_anomaly
  summary: 'IsPositiveAnomaly contain anomaly status in positive direction for each
    input

    point. True means a positive anomaly has been detected. A positive anomaly

    means the point is detected as an anomaly and its real value is larger than the

    expected one. The index of the array is consistent with the input series. Required.'
  signature: 'is_positive_anomaly: List[bool]'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.lower_margins
  name: lower_margins
  summary: 'LowerMargins contain lower margin of each input point. LowerMargin is
    used to

    calculate lowerBoundary, which equals to expectedValue - (100 -

    marginScale)*lowerMargin. Points between the boundary can be marked as normal

    ones in client side. The index of the array is consistent with the input

    series. Required.'
  signature: 'lower_margins: List[float]'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.period
  name: period
  summary: 'Frequency extracted from the series, zero means no recurrent pattern has
    been

    found. Required.'
  signature: 'period: int'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.severity
  name: severity
  summary: 'The severity score for each input point. The larger the value is, the
    more

    sever the anomaly is. For normal points, the "severity" is always 0.'
  signature: 'severity: List[float] | None'
- uid: azure.ai.anomalydetector.models.UnivariateEntireDetectionResult.upper_margins
  name: upper_margins
  summary: 'UpperMargins contain upper margin of each input point. UpperMargin is
    used to

    calculate upperBoundary, which equals to expectedValue + (100 -

    marginScale)*upperMargin. Anomalies in response can be filtered by

    upperBoundary and lowerBoundary. By adjusting marginScale value, less

    significant anomalies can be filtered in client side. The index of the array is

    consistent with the input series. Required.'
  signature: 'upper_margins: List[float]'
