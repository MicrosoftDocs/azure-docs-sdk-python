### YamlMime:PythonClass
uid: azure.ai.anomalydetector.models.EntireDetectResponse
name: EntireDetectResponse
fullName: azure.ai.anomalydetector.models.EntireDetectResponse
module: azure.ai.anomalydetector.models
inheritances:
- msrest.serialization.Model
summary: 'The response of entire anomaly detection.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'EntireDetectResponse(*, period: int, expected_values: List[float], upper_margins:
    List[float], lower_margins: List[float], is_anomaly: List[bool], is_negative_anomaly:
    List[bool], is_positive_anomaly: List[bool], severity: Optional[List[float]] =
    None, **kwargs)'
variables:
- description: 'Required. Frequency extracted from the series, zero means no recurrent
    pattern

    has been found.'
  name: period
  types:
  - <xref:int>
- description: 'Required. ExpectedValues contain expected value for each input point.

    The index of the array is consistent with the input series.'
  name: expected_values
  types:
  - <xref:list>[<xref:float>]
- description: 'Required. UpperMargins contain upper margin of each input point.

    UpperMargin is used to calculate upperBoundary, which equals to expectedValue
    + (100 -

    marginScale)*upperMargin. Anomalies in response can be filtered by upperBoundary
    and

    lowerBoundary. By adjusting marginScale value, less significant anomalies can
    be filtered in

    client side. The index of the array is consistent with the input series.'
  name: upper_margins
  types:
  - <xref:list>[<xref:float>]
- description: 'Required. LowerMargins contain lower margin of each input point.

    LowerMargin is used to calculate lowerBoundary, which equals to expectedValue
    - (100 -

    marginScale)*lowerMargin. Points between the boundary can be marked as normal
    ones in client

    side. The index of the array is consistent with the input series.'
  name: lower_margins
  types:
  - <xref:list>[<xref:float>]
- description: 'Required. IsAnomaly contains anomaly properties for each input point.
    True

    means an anomaly either negative or positive has been detected. The index of the
    array is

    consistent with the input series.'
  name: is_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'Required. IsNegativeAnomaly contains anomaly status in negative

    direction for each input point. True means a negative anomaly has been detected.
    A negative

    anomaly means the point is detected as an anomaly and its real value is smaller
    than the

    expected one. The index of the array is consistent with the input series.'
  name: is_negative_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'Required. IsPositiveAnomaly contain anomaly status in positive

    direction for each input point. True means a positive anomaly has been detected.
    A positive

    anomaly means the point is detected as an anomaly and its real value is larger
    than the

    expected one. The index of the array is consistent with the input series.'
  name: is_positive_anomaly
  types:
  - <xref:list>[<xref:bool>]
- description: 'The severity score for each input point. The larger the value is,
    the more

    sever the anomaly is. For normal points, the "severity" is always 0.'
  name: severity
  types:
  - <xref:list>[<xref:float>]
