### YamlMime:PythonClass
uid: azure.storage.filedatalake.CustomerProvidedEncryptionKey
name: CustomerProvidedEncryptionKey
fullName: azure.storage.filedatalake.CustomerProvidedEncryptionKey
module: azure.storage.filedatalake
inheritances:
- azure.storage.blob._models.CustomerProvidedEncryptionKey
summary: 'All data in Azure Storage is encrypted at-rest using an account-level encryption
  key.

  In versions 2021-06-08 and newer, you can manage the key used to encrypt file contents

  and application metadata per-file by providing an AES-256 encryption key in requests
  to the storage service.


  When you use a customer-provided key, Azure Storage does not manage or persist your
  key.

  When writing data to a file, the provided key is used to encrypt your data before
  writing it to disk.

  A SHA-256 hash of the encryption key is written alongside the file contents,

  and is used to verify that all subsequent operations against the file use the same
  encryption key.

  This hash cannot be used to retrieve the encryption key or decrypt the contents
  of the file.

  When reading a file, the provided key is used to decrypt your data after reading
  it from disk.

  In both cases, the provided encryption key is securely discarded

  as soon as the encryption or decryption process completes.'
constructor:
  syntax: CustomerProvidedEncryptionKey(key_value, key_hash)
  parameters:
  - name: key_value
    description: Base64-encoded AES-256 encryption key value.
    isRequired: true
    types:
    - <xref:azure.storage.filedatalake.str>
  - name: key_hash
    description: Base64-encoded SHA256 of the encryption key.
    isRequired: true
    types:
    - <xref:azure.storage.filedatalake.str>
variables:
- description: Specifies the algorithm to use when encrypting data using the given
    key. Must be AES256.
  name: algorithm
  types:
  - <xref:azure.storage.filedatalake.str>
