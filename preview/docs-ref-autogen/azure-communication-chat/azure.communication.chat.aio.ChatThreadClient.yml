### YamlMime:PythonClass
uid: azure.communication.chat.aio.ChatThreadClient
name: ChatThreadClient
fullName: azure.communication.chat.aio.ChatThreadClient
module: azure.communication.chat.aio
inheritances:
- builtins.object
summary: 'A client to interact with the AzureCommunicationService Chat gateway.

  Instances of this class is normally retrieved by ChatClient.get_chat_thread_client()


  This client provides operations to add participant(s) to chat thread, remove participant
  from

  chat thread, send message, delete message, update message, send typing notifications,

  send and list read receipt'
constructor:
  syntax: 'ChatThreadClient(endpoint: str, credential: azure.communication.chat._shared.user_credential_async.CommunicationTokenCredential,
    thread_id: str, **kwargs: typing.Any)'
  parameters:
  - name: endpoint
    description: The endpoint of the Azure Communication resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. The value contains a
      User

      Access Token'
    isRequired: true
    types:
    - <xref:CommunicationTokenCredential>
  - name: thread_id
    description: The unique thread id.
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Chat thread id.
  name: thread_id
  types:
  - <xref:str>
examples:
- "Creating the ChatThreadClient.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\70\\\\azure-communication-chat-1.1.0b1\\\
  \\samples\\\\chat_thread_client_sample_async.py\", \"xml:space\": \"preserve\",\
  \ \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
  : 1}} -->\n\n````python\n\n   from datetime import datetime\n   from azure.communication.chat.aio\
  \ import ChatClient, CommunicationTokenCredential\n   from azure.communication.chat\
  \ import ChatParticipant, CommunicationUserIdentifier\n   # set `endpoint` to an\
  \ existing ACS endpoint\n   chat_client = ChatClient(endpoint, CommunicationTokenCredential(token))\n\
  \n   async with chat_client:\n       topic = \"test topic\"\n       participants\
  \ = [ChatParticipant(\n           identifier=user,\n           display_name='name',\n\
  \           share_history_time=datetime.utcnow()\n       )]\n       create_chat_thread_result\
  \ = await chat_client.create_chat_thread(topic, thread_participants=participants)\n\
  \       chat_thread_client = chat_client.get_chat_thread_client(create_chat_thread_result.chat_thread.id)\n\
  \n   ````\n"
methods:
- uid: azure.communication.chat.aio.ChatThreadClient.add_participants
  name: add_participants
  summary: 'Adds thread participants to a thread. If participants already exist, no
    change occurs.


    If all participants are added successfully, then an empty list is returned;

    otherwise, a list of tuple(chat_thread_participant, chat_error) is returned,

    of failed participants and its respective error'
  signature: 'add_participants(thread_participants: typing.List[azure.communication.chat._models.ChatParticipant],
    **kwargs) -> typing.List[typing.Tuple[azure.communication.chat._models.ChatParticipant,
    azure.communication.chat._generated.models._models_py3.ChatError]]'
  parameters:
  - name: thread_participants
    description: Thread participants to be added to the thread.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.communication.chat.ChatParticipant>]
  return:
    description: List[Tuple[ChatParticipant, ChatError]]
    types:
    - <xref:List>[<xref:Tuple>[<xref:azure.communication.chat.ChatParticipant>, <xref:azure.communication.chat.ChatError>]]
  examples:
  - "Adding participants to chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.close
  name: close
  signature: close() -> None
- uid: azure.communication.chat.aio.ChatThreadClient.delete_message
  name: delete_message
  summary: Deletes a message.
  signature: 'delete_message(message_id: str, **kwargs) -> None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Deleting a message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.get_message
  name: get_message
  summary: Gets a message by id.
  signature: 'get_message(message_id: str, **kwargs) -> azure.communication.chat._models.ChatMessage'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ChatMessage
    types:
    - <xref:azure.communication.chat.ChatMessage>
  examples:
  - "Retrieving a message by message id.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.get_properties
  name: get_properties
  summary: Gets the properties of the chat thread.
  signature: get_properties(**kwargs)
  return:
    description: ChatThreadProperties
    types:
    - <xref:azure.communication.chat.ChatThreadProperties>
  examples:
  - "Retrieving chat thread properties by chat thread id.<!--[!code-python[Main](les\\\
    chat_thread_client_sample_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"\
    classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\":\
    \ \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\70\\\\azure-communication-chat-1.1.0b1\\\
    \\samples\\\\chat_thread_client_sample_async.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_messages
  name: list_messages
  summary: Gets a list of messages from a thread.
  signature: 'list_messages(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of messages to be returned per page.
    types:
    - <xref:int>
  - name: start_time
    description: The start time where the range query.
    types:
    - <xref:datetime.datetime>
  return:
    description: An iterator like instance of ChatMessage
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatMessage>]
  examples:
  - "Listing messages of a chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_participants
  name: list_participants
  summary: Gets the participants of a thread.
  signature: 'list_participants(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of participants to be returned per page.
    types:
    - <xref:int>
  - name: skip
    description: Skips participants up to a specified position in response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of ChatParticipant
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatParticipant>]
  examples:
  - "Listing participants of chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.list_read_receipts
  name: list_read_receipts
  summary: Gets read receipts for a thread.
  signature: 'list_read_receipts(**kwargs: typing.Any)'
  parameters:
  - name: results_per_page
    description: The maximum number of chat message read receipts to be returned per
      page.
    types:
    - <xref:int>
  - name: skip
    description: Skips chat message read receipts up to a specified position in response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of ChatMessageReadReceipt
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.communication.chat.ChatMessageReadReceipt>]
  examples:
  - "Listing read receipts.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.remove_participant
  name: remove_participant
  summary: Remove a participant from a thread.
  signature: 'remove_participant(identifier: azure.communication.chat._shared.models.CommunicationIdentifier,
    **kwargs) -> None'
  parameters:
  - name: identifier
    description: Required. Identifier of the thread participant to remove from the
      thread.
    isRequired: true
    types:
    - <xref:azure.communication.chat.CommunicationIdentifier>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Removing participant from chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n       # Option 1\
    \ : Iterate through all participants, find and delete Fred Flinstone\n       chat_thread_participants\
    \ = chat_thread_client.list_participants()\n\n       async for chat_thread_participant_page\
    \ in chat_thread_participants.by_page():\n           async for chat_thread_participant\
    \ in chat_thread_participant_page:\n               print(\"ChatParticipant: \"\
    , chat_thread_participant)\n               if chat_thread_participant.identifier.properties['id']\
    \ == user1.properties['id']:\n                   print(\"Found Fred!\")\n    \
    \               await chat_thread_client.remove_participant(chat_thread_participant.identifier)\n\
    \                   print(\"Fred has been removed from the thread...\")\n    \
    \               break\n\n       # Option 2: Directly remove Wilma Flinstone\n\
    \       unique_identifier = user2.properties['id']  # in real scenario the identifier\
    \ would need to be retrieved from elsewhere\n       await chat_thread_client.remove_participant(CommunicationUserIdentifier(unique_identifier))\n\
    \       print(\"Wilma has been removed from the thread...\")\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_message
  name: send_message
  summary: Sends a message to a thread.
  signature: 'send_message(content: str, *, metadata: typing.Dict[str, str] = None,
    **kwargs) -> azure.communication.chat._generated.models._models_py3.SendChatMessageResult'
  parameters:
  - name: content
    description: Required. Chat message content.
    isRequired: true
    types:
    - <xref:str>
  - name: chat_message_type
    description: 'The chat message type. Possible values include: "text", "html".
      Default: ChatMessageType.TEXT'
    types:
    - <xref:Union>[<xref:str>, <xref:azure.communication.chat.ChatMessageType>]
  - name: sender_display_name
    description: 'The display name of the message sender. This property is used to

      populate sender name for push notifications.'
    types:
    - <xref:str>
  - name: str] metadata
    description: Message metadata.
    types:
    - <xref:dict>[<xref:str,>
  return:
    description: SendChatMessageResult
    types:
    - <xref:azure.communication.chat.SendChatMessageResult>
  examples:
  - "Sending a message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_read_receipt
  name: send_read_receipt
  summary: Posts a read receipt event to a chat thread, on behalf of a user.
  signature: 'send_read_receipt(message_id: str, **kwargs) -> None'
  parameters:
  - name: message_id
    description: Required. Id of the latest message read by current user.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Sending read receipt of a chat message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.send_typing_notification
  name: send_typing_notification
  summary: Posts a typing event to a thread, on behalf of a user.
  signature: 'send_typing_notification(*, sender_display_name: typing.Union[str, NoneType]
    = None, **kwargs) -> None'
  parameters:
  - name: sender_display_name
    description: 'The display name of the typing notification sender. This property

      is used to populate sender name for push notifications.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Send typing notification.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.update_message
  name: update_message
  summary: Updates a message.
  signature: 'update_message(message_id: str, content: str = None, *, metadata: typing.Dict[str,
    str] = None, **kwargs) -> None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: Chat message content
  - name: str] metadata
    description: Message metadata.
    types:
    - <xref:dict>[<xref:str,>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Updating an already sent message.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
- uid: azure.communication.chat.aio.ChatThreadClient.update_topic
  name: update_topic
  summary: Updates a thread's properties.
  signature: 'update_topic(topic: str = None, **kwargs) -> None'
  parameters:
  - name: topic
    description: 'Thread topic. If topic is not specified, the update will succeed
      but

      chat thread properties will not be changed.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  examples:
  - "Updating chat thread.<!--[!code-python[Main](les\\chat_thread_client_sample_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\70\\\\azure-communication-chat-1.1.0b1\\\\samples\\\\chat_thread_client_sample_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n\n   ````\n"
attributes:
- uid: azure.communication.chat.aio.ChatThreadClient.thread_id
  name: thread_id
  summary: Gets the thread id from the client.
  return:
    types:
    - <xref:str>
